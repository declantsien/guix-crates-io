(define-module (crates-io sw c_ swc_ecma_transforms_module) #:use-module (crates-io))

(define-public crate-swc_ecma_transforms_module-0.1.0 (c (n "swc_ecma_transforms_module") (v "0.1.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.36") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.44") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.26") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.22") (d #t) (k 0)) (d (n "testing") (r "^0.10") (d #t) (k 2)))) (h "064pa9gyl38s05an2189415p14p5m10907q4rfh3a34a2mak0ns1")))

(define-public crate-swc_ecma_transforms_module-0.2.0 (c (n "swc_ecma_transforms_module") (v "0.2.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.36") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.44") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.2.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.26") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.22") (d #t) (k 0)) (d (n "testing") (r "^0.10") (d #t) (k 2)))) (h "0mp51ybxshpwis2pvy2msvc92rgvzx322nkgk10p540fz15npmij")))

(define-public crate-swc_ecma_transforms_module-0.3.0 (c (n "swc_ecma_transforms_module") (v "0.3.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.37.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.2.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.3.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.2.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.27.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.23.0") (d #t) (k 0)) (d (n "testing") (r "^0.10") (d #t) (k 2)))) (h "175vmph5mjha77ix8aymcwdrrcaqh6yc5m5q40l5nn8jxqzh01ma")))

(define-public crate-swc_ecma_transforms_module-0.3.1 (c (n "swc_ecma_transforms_module") (v "0.3.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.37.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.45.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.2.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.3.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.2.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.27.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.23.1") (d #t) (k 0)) (d (n "testing") (r "^0.10") (d #t) (k 2)))) (h "0j2pyr4yqnhlx3jh1w97yjhp54gdxhzix6p1fa95rns2w3mgnnxz")))

(define-public crate-swc_ecma_transforms_module-0.3.2 (c (n "swc_ecma_transforms_module") (v "0.3.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.37.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.45.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.3.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.2.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.27.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.23.1") (d #t) (k 0)) (d (n "testing") (r "^0.10") (d #t) (k 2)))) (h "1bjjswwm3lpvqsbjqpx7lc02cwx9xqn63gl0pww7m4k078grsj20")))

(define-public crate-swc_ecma_transforms_module-0.3.3 (c (n "swc_ecma_transforms_module") (v "0.3.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.37.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.45.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.3.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.2.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.27.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.23.1") (d #t) (k 0)) (d (n "testing") (r "^0.10") (d #t) (k 2)))) (h "0sa44rgy6sggnwmqq0c7ncyqlxmmwmxi0vwbryqzjsf7v9ad99sg")))

(define-public crate-swc_ecma_transforms_module-0.3.4 (c (n "swc_ecma_transforms_module") (v "0.3.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.37.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.45.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.2.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.3.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.2.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.27.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.23.2") (d #t) (k 0)) (d (n "testing") (r "^0.10") (d #t) (k 2)))) (h "1h9d5vsgb6xrl7hav1l0fxglxkv0rxs0w31c5bcrkdbjqiaix779")))

(define-public crate-swc_ecma_transforms_module-0.3.5 (c (n "swc_ecma_transforms_module") (v "0.3.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.37.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.45.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.2.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.3.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.2.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.27.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.23.3") (d #t) (k 0)) (d (n "testing") (r "^0.10") (d #t) (k 2)))) (h "1rsa5w6ilpdwvfbfim8xs6jvqdg6419fdyzln1dnp84g23rvbwmp")))

(define-public crate-swc_ecma_transforms_module-0.3.6 (c (n "swc_ecma_transforms_module") (v "0.3.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.37.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.45.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.2.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.3.6") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.2.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.27.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.23.3") (d #t) (k 0)) (d (n "testing") (r "^0.10") (d #t) (k 2)))) (h "1dshz792xqj45mfanxcx8gwlm1xs82zmvcs3v7wi3lqzagm55b0f")))

(define-public crate-swc_ecma_transforms_module-0.3.7 (c (n "swc_ecma_transforms_module") (v "0.3.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.37.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.45.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.2.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.3.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.2.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.27.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.23.3") (d #t) (k 0)) (d (n "testing") (r "^0.10") (d #t) (k 2)))) (h "06y36mv5c3pqiq7iiqdk2zc0jdd66by222smj0z4a39crha8rv1z")))

(define-public crate-swc_ecma_transforms_module-0.4.0 (c (n "swc_ecma_transforms_module") (v "0.4.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.38.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.46.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.3.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.4.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.3.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.28.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.24.0") (d #t) (k 0)) (d (n "testing") (r "^0.10") (d #t) (k 2)))) (h "09n1xvw3v3wy03jmzazpqyqip2kknfb4fa5axw9j3k8h70rh2967")))

(define-public crate-swc_ecma_transforms_module-0.5.0 (c (n "swc_ecma_transforms_module") (v "0.5.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.38.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.47.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.5.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.4.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.28.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.24.0") (d #t) (k 0)) (d (n "testing") (r "^0.10") (d #t) (k 2)))) (h "06bgxzn2k8218315sb9d6piradxqbn1dnk4zg6z5cygqp8k9x4pi")))

(define-public crate-swc_ecma_transforms_module-0.6.0 (c (n "swc_ecma_transforms_module") (v "0.6.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.39.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.48.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.6.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.5.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.29.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.25.0") (d #t) (k 0)) (d (n "testing") (r "^0.10") (d #t) (k 2)))) (h "0bzfpi1vlw2g8igcrmrp5i2ypnfxzi966d6lmz2kp1i1n92c4fn0")))

(define-public crate-swc_ecma_transforms_module-0.6.1 (c (n "swc_ecma_transforms_module") (v "0.6.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.39.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.48.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.5.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.6.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.5.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.29.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.25.1") (d #t) (k 0)) (d (n "testing") (r "^0.10.3") (d #t) (k 2)))) (h "1bd6zki1n5z71zj81r67fv71qz27ikmg454vnc1p9h75m9id07lp")))

(define-public crate-swc_ecma_transforms_module-0.7.0 (c (n "swc_ecma_transforms_module") (v "0.7.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.49.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.7.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.6.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.30.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.26.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.3") (d #t) (k 2)))) (h "1bcnd9v7h7vwcm6blnwkjqn4z9y6921ca8nb4h0s4qdykwfg1mar")))

(define-public crate-swc_ecma_transforms_module-0.8.0 (c (n "swc_ecma_transforms_module") (v "0.8.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.50.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.7.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.8.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.7.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.30.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.26.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.3") (d #t) (k 2)))) (h "0zx957i71ar3zz2mr69h83795sd4k1dpxlf2n8q5jwrnqk738c1g")))

(define-public crate-swc_ecma_transforms_module-0.9.0 (c (n "swc_ecma_transforms_module") (v "0.9.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.50.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.8.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.9.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.8.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.31.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.26.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.3") (d #t) (k 2)))) (h "0cd1hyhpvpmqxhimy0dac69w1dj0b1shk0v12q9h744dd441wpgv")))

(define-public crate-swc_ecma_transforms_module-0.10.0 (c (n "swc_ecma_transforms_module") (v "0.10.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.41.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.51.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.9.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.10.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.9.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.32.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.27.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.3") (d #t) (k 2)))) (h "0y6ml1msda3j5hwf857f4jchvzd9pdhchky89pqswj1m4rgbx3f9")))

(define-public crate-swc_ecma_transforms_module-0.10.1 (c (n "swc_ecma_transforms_module") (v "0.10.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.41.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.51.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.9.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.10.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.9.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.32.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.27.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.3") (d #t) (k 2)))) (h "1rp8ynvnl47lgcbnhdd4cns4alv9d6pisq60y7v9fiq5bbrjjzn1")))

(define-public crate-swc_ecma_transforms_module-0.11.0 (c (n "swc_ecma_transforms_module") (v "0.11.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.42.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.52.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.11.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.10.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.33.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.28.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.3") (d #t) (k 2)))) (h "18lzxddsmggvknwha4hv6mv3l6rpb4inpfrxbzfq9cnx81wn9zji")))

(define-public crate-swc_ecma_transforms_module-0.12.0 (c (n "swc_ecma_transforms_module") (v "0.12.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.43.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.53.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.12.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.11.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.34.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.29.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.3") (d #t) (k 2)))) (h "0dr193shk9psqlm2j74qrmba1nynsw1r5x4s9a52m8aky2jnaafq")))

(define-public crate-swc_ecma_transforms_module-0.13.0 (c (n "swc_ecma_transforms_module") (v "0.13.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.43.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.12.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.13.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.12.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.34.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.29.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.3") (d #t) (k 2)))) (h "10l86f372dawz0m97x9794m3bhf63j2rpjvxd9rlc8vv1zbzfbsv")))

(define-public crate-swc_ecma_transforms_module-0.13.1 (c (n "swc_ecma_transforms_module") (v "0.13.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.43.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.54.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.12.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.13.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.12.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.34.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.29.1") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)))) (h "0ldvpmfcq5l4xc60y49xh6kypdw9ngsb6vw62qx45ch2wd6iylj7")))

(define-public crate-swc_ecma_transforms_module-0.13.2 (c (n "swc_ecma_transforms_module") (v "0.13.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.43.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.54.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.12.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.13.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.12.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.34.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.29.1") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)))) (h "0j10ja17xwp15x6i6m12p1j1yrjq40yc2g64khszrwy7l7jds2y2")))

(define-public crate-swc_ecma_transforms_module-0.13.3 (c (n "swc_ecma_transforms_module") (v "0.13.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.43.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.54.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.12.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.13.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.12.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.34.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.29.1") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)))) (h "0zjzrp0lhh76km8m0qdy6svdrrhwx988pmyv6wnhxw3shc2gqvr0")))

(define-public crate-swc_ecma_transforms_module-0.14.0 (c (n "swc_ecma_transforms_module") (v "0.14.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.43.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.54.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.12.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.14.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.12.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.34.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.29.1") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)))) (h "1w05vqfxhzah4ibwmdnbchcmm5hdps6pi174bwwhs2z6g7jqzajd")))

(define-public crate-swc_ecma_transforms_module-0.15.0 (c (n "swc_ecma_transforms_module") (v "0.15.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.43.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.55.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.15.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.13.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.34.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.29.1") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)))) (h "1ngg1xpnz7kras9pw1swvmjkrvx7383dlf6hv4n2rh06yk1hb8x9")))

(define-public crate-swc_ecma_transforms_module-0.16.0 (c (n "swc_ecma_transforms_module") (v "0.16.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.56.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.16.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.14.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.35.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.30.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)))) (h "1a7sbprlacx5aa00z46zik1hhjh6kjn9mpdm6wc9c22pamd8q8fx")))

(define-public crate-swc_ecma_transforms_module-0.17.0 (c (n "swc_ecma_transforms_module") (v "0.17.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.57.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.15.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.17.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.15.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.36.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.31.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)))) (h "1k9ckh4wci1fzrqhhmcckisvijadf8mjgi5hy9dxhdz9gy6yflj7")))

(define-public crate-swc_ecma_transforms_module-0.17.1 (c (n "swc_ecma_transforms_module") (v "0.17.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.57.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.15.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.17.9") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.15.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.36.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.31.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)))) (h "1h35am4v2gx8a67cb200hkr7g8j6kxwr59r42fidf5lmjnbqdhvp")))

(define-public crate-swc_ecma_transforms_module-0.17.2 (c (n "swc_ecma_transforms_module") (v "0.17.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.57.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.15.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.17.9") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.15.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.36.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.31.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)))) (h "1sx2dy3m6bwcwf8fxji57d5r5h9as47mrhf0hw4szilr3z9fq2v2")))

(define-public crate-swc_ecma_transforms_module-0.18.0 (c (n "swc_ecma_transforms_module") (v "0.18.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.46.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.16.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.18.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.16.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.37.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.32.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)))) (h "0j0avclbzv5nywfk4h706ymlpqck7x1qi2nzgc8jl160fn3gldkr")))

(define-public crate-swc_ecma_transforms_module-0.19.0 (c (n "swc_ecma_transforms_module") (v "0.19.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.46.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.59.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.19.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.17.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.37.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.32.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)))) (h "0h0bpv56v5sm0cy2q5n7r3y3a90y2jx48wz9wlk27l78zvpbdgdd")))

(define-public crate-swc_ecma_transforms_module-0.20.0 (c (n "swc_ecma_transforms_module") (v "0.20.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.46.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.60.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.20.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.18.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.37.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.32.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)))) (h "127bz6d5dhcpfimjzw8dzfnpnk7q9z10lmlkr9y8krgg40rblp7c")))

(define-public crate-swc_ecma_transforms_module-0.21.0 (c (n "swc_ecma_transforms_module") (v "0.21.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.46.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.60.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.19.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.21.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.19.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.37.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.32.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)))) (h "077m7hk6da1i5rkqv9r1k9fkm2aaf3ypfrn0sqjl8pbc7bw31ma6")))

(define-public crate-swc_ecma_transforms_module-0.21.1 (c (n "swc_ecma_transforms_module") (v "0.21.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.46.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.60.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.19.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.21.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.19.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.37.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.32.1") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)))) (h "1gyrpgh7dn13gqg4w66ch6311g3vsdp4x1s0kwl7zm3512fwjp26")))

(define-public crate-swc_ecma_transforms_module-0.22.0 (c (n "swc_ecma_transforms_module") (v "0.22.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.46.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.8.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.60.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.19.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.21.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.19.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.37.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.32.1") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)))) (h "1pcnwx5c3jgskid90bz8arnr2axd7n0zd8pn740zp17c5iyxkk83")))

(define-public crate-swc_ecma_transforms_module-0.23.0 (c (n "swc_ecma_transforms_module") (v "0.23.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.47.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.9.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.61.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.20.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.22.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.20.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.38.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.33.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)))) (h "0glvlycwcvcbpdx1cjd1s1xazzvpx5whdkxy9yfv6xh9ndyhb39a")))

(define-public crate-swc_ecma_transforms_module-0.24.0 (c (n "swc_ecma_transforms_module") (v "0.24.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.47.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.9.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.61.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.20.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.23.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.20.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.38.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.33.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)))) (h "1hlxlchl68pdgh6qysx2wqvxhk66bip700brdhb6ybszfzj9pir2")))

(define-public crate-swc_ecma_transforms_module-0.24.1 (c (n "swc_ecma_transforms_module") (v "0.24.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.47.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.9.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.61.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.20.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.23.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.20.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.38.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.33.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)))) (h "0sdagwnilk6n1a3dygmsp3mdgflxflyzk0q2j4lasbx2z5i32vrf")))

(define-public crate-swc_ecma_transforms_module-0.25.0 (c (n "swc_ecma_transforms_module") (v "0.25.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.48.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.10.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.62.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.21.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.24.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.21.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.39.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.34.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)))) (h "052x3g6llchgwiqkcfn3s3l8fwknljqg5f7za3bf4d9lacdlshzh")))

(define-public crate-swc_ecma_transforms_module-0.25.1 (c (n "swc_ecma_transforms_module") (v "0.25.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.48.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.10.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.62.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.21.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.24.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.21.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.39.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.34.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)))) (h "1m6kw239bkyw4n2sy647s7g2ln4h7h5wwagk3xl4h4iw6lqb75c1")))

(define-public crate-swc_ecma_transforms_module-0.25.2 (c (n "swc_ecma_transforms_module") (v "0.25.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.48.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.10.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.62.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.21.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.24.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.21.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.39.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.34.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)))) (h "01jvp9983brx90h87rgfklp8a11q2b23kwarzq6y3h6lhi0qjl6d")))

(define-public crate-swc_ecma_transforms_module-0.26.0 (c (n "swc_ecma_transforms_module") (v "0.26.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.11.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.63.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.22.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.25.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.22.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.0") (d #t) (k 0)) (d (n "testing") (r "^0.11.0") (d #t) (k 2)))) (h "0vf60dqpcs6v66mzbpslpgjbn2js5xldpvh57gl9lw26lvd3c8na")))

(define-public crate-swc_ecma_transforms_module-0.26.1 (c (n "swc_ecma_transforms_module") (v "0.26.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.11.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.63.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.22.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.25.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.22.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.0") (d #t) (k 0)) (d (n "testing") (r "^0.11.0") (d #t) (k 2)))) (h "0c0nzmzfaxcycls93ap4h88kk9mpv5vc0gxv32pymk528mgyyyj8")))

(define-public crate-swc_ecma_transforms_module-0.26.2 (c (n "swc_ecma_transforms_module") (v "0.26.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.11.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.63.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.22.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.25.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.22.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.0") (d #t) (k 0)) (d (n "testing") (r "^0.11.0") (d #t) (k 2)))) (h "02d5icm34bxs77dgl7zgaxakxsixx9iqv631h79n6sjacagv508c")))

(define-public crate-swc_ecma_transforms_module-0.27.0 (c (n "swc_ecma_transforms_module") (v "0.27.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.11.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.64.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.23.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.26.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.23.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.0") (d #t) (k 0)) (d (n "testing") (r "^0.11.0") (d #t) (k 2)))) (h "0xv8248ldbgy3j0dcz3g4xkyxaqj8hdvh5rmr96r1ayjrxaymz4b")))

(define-public crate-swc_ecma_transforms_module-0.28.0 (c (n "swc_ecma_transforms_module") (v "0.28.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.12.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.65.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.24.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.27.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.24.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.41.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.0") (d #t) (k 0)) (d (n "testing") (r "^0.12.0") (d #t) (k 2)))) (h "1nqzhs5wxb865kvcmrkhnv7fsy1x3yvb0vjpy7glsa9gsxv4n19a")))

(define-public crate-swc_ecma_transforms_module-0.29.0 (c (n "swc_ecma_transforms_module") (v "0.29.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.12.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.65.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.25.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.28.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.25.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.41.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.0") (d #t) (k 0)) (d (n "testing") (r "^0.12.0") (d #t) (k 2)))) (h "11q69n2cblnygv3jnhmkn9wq0485brayvlqqa5wndiakqfg2ajv0")))

(define-public crate-swc_ecma_transforms_module-0.30.0 (c (n "swc_ecma_transforms_module") (v "0.30.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.12.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.66.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.26.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.29.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.26.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.41.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.0") (d #t) (k 0)) (d (n "testing") (r "^0.12.0") (d #t) (k 2)))) (h "1p0f8dq5lfy51qdbkmhzwm05wblqsblrbm7qpkj4vma4a7649rd2")))

(define-public crate-swc_ecma_transforms_module-0.31.0 (c (n "swc_ecma_transforms_module") (v "0.31.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.13.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.66.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.26.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.29.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.26.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.41.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.0") (d #t) (k 0)) (d (n "testing") (r "^0.12.0") (d #t) (k 2)))) (h "01fcjbjfa84yn465y8pkg98b14j0bgriaccc5n5pm9y6lsjw7p4d")))

(define-public crate-swc_ecma_transforms_module-0.31.1 (c (n "swc_ecma_transforms_module") (v "0.31.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.13.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.66.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.26.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.29.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.26.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.41.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.0") (d #t) (k 0)) (d (n "testing") (r "^0.12.0") (d #t) (k 2)))) (h "1wxyvmm271mgc7pz2z2zzxbvfkhj5xsa74lqwpaqf769m06j8f26")))

(define-public crate-swc_ecma_transforms_module-0.32.0 (c (n "swc_ecma_transforms_module") (v "0.32.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.14.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.66.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.26.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.29.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.26.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.41.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.0") (d #t) (k 0)) (d (n "testing") (r "^0.12.0") (d #t) (k 2)))) (h "12r1c294xmg21j27rds9725ah7hk7vx4vnxamj8bxgn7ril1a1lb")))

(define-public crate-swc_ecma_transforms_module-0.32.1 (c (n "swc_ecma_transforms_module") (v "0.32.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.14.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.66.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.26.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.29.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.26.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.41.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.2") (d #t) (k 0)) (d (n "testing") (r "^0.12.2") (d #t) (k 2)))) (h "1ma1dw1hbhxnc0c6f22qkdpzhaqjwsh2rwi940i32j6d7z3nfxpw")))

(define-public crate-swc_ecma_transforms_module-0.33.0 (c (n "swc_ecma_transforms_module") (v "0.33.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.15.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.66.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.26.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.29.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.26.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.41.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.2") (d #t) (k 0)) (d (n "testing") (r "^0.12.2") (d #t) (k 2)))) (h "0q95ywd9s18ag56z35wjsg648vyky6yabpszzlgbm04crdap0nw8")))

(define-public crate-swc_ecma_transforms_module-0.34.0 (c (n "swc_ecma_transforms_module") (v "0.34.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.15.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.67.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.27.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.30.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.27.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.41.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.2") (d #t) (k 0)) (d (n "testing") (r "^0.12.2") (d #t) (k 2)))) (h "1ql94svdf1b2r6x38gbvnfmfqrz2v3z0n6wp6zpx2wjbrf5bn2mc")))

(define-public crate-swc_ecma_transforms_module-0.35.0 (c (n "swc_ecma_transforms_module") (v "0.35.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.50.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.16.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.28.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.31.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.28.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.42.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.36.0") (d #t) (k 0)) (d (n "testing") (r "^0.12.2") (d #t) (k 2)))) (h "0lgd09wy26gj8g8bd8ikfrfa8g03z8fw97xdbpkda4grdfbp6q6i")))

(define-public crate-swc_ecma_transforms_module-0.36.0 (c (n "swc_ecma_transforms_module") (v "0.36.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.51.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.17.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.69.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.30.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.32.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.30.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.43.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.37.1") (d #t) (k 0)) (d (n "testing") (r "^0.12.3") (d #t) (k 2)))) (h "1v789ph5a9yj2pzrmbijgchbgx0fdyclgkp54zhyf8wxzfz024sh")))

(define-public crate-swc_ecma_transforms_module-0.37.0 (c (n "swc_ecma_transforms_module") (v "0.37.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.51.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.17.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.69.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.30.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.33.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.31.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.43.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.37.1") (d #t) (k 0)) (d (n "testing") (r "^0.12.3") (d #t) (k 2)))) (h "0wzx886gg5qjcal1ycawng1j9sbpmk5f5qdkxn9z4w937z8iy54z")))

(define-public crate-swc_ecma_transforms_module-0.38.0 (c (n "swc_ecma_transforms_module") (v "0.38.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.12.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.52.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.18.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.70.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.31.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.34.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.32.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.38.0") (d #t) (k 0)) (d (n "testing") (r "^0.13.0") (d #t) (k 2)))) (h "0lbyx6cq8x2vy3si1j85nxgb5g2y98h5b6h4pbayz3fc8rrjizx5")))

(define-public crate-swc_ecma_transforms_module-0.38.1 (c (n "swc_ecma_transforms_module") (v "0.38.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.12.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.52.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.18.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.70.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.31.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.34.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.32.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.44.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.38.1") (d #t) (k 0)) (d (n "testing") (r "^0.13.0") (d #t) (k 2)))) (h "08b0ki1a9a30ld6bkrf6lylpj698xvwmfnbdkkb17hkar2x2k4n7")))

(define-public crate-swc_ecma_transforms_module-0.39.0 (c (n "swc_ecma_transforms_module") (v "0.39.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.12.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.52.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.18.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.70.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.31.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.35.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.32.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.44.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.38.1") (d #t) (k 0)) (d (n "testing") (r "^0.13.0") (d #t) (k 2)))) (h "0gg760xv2i57bnc1382h4iyg99gw0i9id1a8c27182hmplpmcbzj")))

(define-public crate-swc_ecma_transforms_module-0.40.0 (c (n "swc_ecma_transforms_module") (v "0.40.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.12.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.52.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.18.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.71.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.32.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.36.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.33.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.44.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.38.1") (d #t) (k 0)) (d (n "testing") (r "^0.13.0") (d #t) (k 2)))) (h "09p7lyc9vngrvw5f01cx6vwbzf0kvd9gjv2hlkgri0z8m9al8b76")))

(define-public crate-swc_ecma_transforms_module-0.41.0 (c (n "swc_ecma_transforms_module") (v "0.41.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.53.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.19.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.72.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.33.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.37.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.34.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.39.0") (d #t) (k 0)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)))) (h "12ikwinkj4zgx5gd0wr3172il8v72wldp7lsj3y14la38qnlx0s3")))

(define-public crate-swc_ecma_transforms_module-0.42.0 (c (n "swc_ecma_transforms_module") (v "0.42.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.20.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.34.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.38.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.35.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.46.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.0") (d #t) (k 0)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)))) (h "1czsw2plp1xjqdnfgk4bpb6ys8j3rmimck1s9z0jla4in3rrqa6a")))

(define-public crate-swc_ecma_transforms_module-0.43.0 (c (n "swc_ecma_transforms_module") (v "0.43.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.20.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.35.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.39.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.36.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.46.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.0") (d #t) (k 0)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)))) (h "0h4ii7ymdl3cxigha0v15c2zwi74ic3yk4yzz82c9wg56kgqd8xi")))

(define-public crate-swc_ecma_transforms_module-0.44.0 (c (n "swc_ecma_transforms_module") (v "0.44.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.20.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.35.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.40.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.36.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.46.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.0") (d #t) (k 0)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)))) (h "08yx1ggskndi02a01bcxfqgd80k9k1cz48vnbxx8n3a0rpjgdxka")))

(define-public crate-swc_ecma_transforms_module-0.45.0 (c (n "swc_ecma_transforms_module") (v "0.45.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.21.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.36.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.41.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.37.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.46.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.0") (d #t) (k 0)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)))) (h "0ylx769fij2xnk09fyspjlaiwkd07sci70q6gl58jgzjdyr5dbmz")))

(define-public crate-swc_ecma_transforms_module-0.46.0 (c (n "swc_ecma_transforms_module") (v "0.46.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.21.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.37.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.42.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.38.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.47.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.0") (d #t) (k 0)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)))) (h "009yf9bin5lmpc4hfqq69w81yhn9ji1qh6s64hxsiypamcqgxjhi")))

(define-public crate-swc_ecma_transforms_module-0.47.0 (c (n "swc_ecma_transforms_module") (v "0.47.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.21.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.38.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.43.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.39.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.47.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.0") (d #t) (k 0)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)))) (h "017nhbysy0zbm6r4c2jf5zm6955mxy256af59gi2d17nxlb33w2z")))

(define-public crate-swc_ecma_transforms_module-0.48.0 (c (n "swc_ecma_transforms_module") (v "0.48.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.21.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.38.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.43.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.39.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.47.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.0") (d #t) (k 0)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)))) (h "1605s3xks224z53f5aql8l3ydapim65wnsbsbc1gjb15c0n1d548")))

(define-public crate-swc_ecma_transforms_module-0.49.0 (c (n "swc_ecma_transforms_module") (v "0.49.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.21.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.38.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.43.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.39.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.47.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.0") (d #t) (k 0)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)))) (h "0nrz6jhxhwaikhwwwwnyig7ixckmhrx72x61cry50khswm1g4x30")))

(define-public crate-swc_ecma_transforms_module-0.49.1 (c (n "swc_ecma_transforms_module") (v "0.49.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.21.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.73.15") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.38.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.43.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.39.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.47.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.1") (d #t) (k 0)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)))) (h "0bs8qzyyly2mxs7rkhhvwylqswir5w5c9wvappi355pj56idv5h1")))

(define-public crate-swc_ecma_transforms_module-0.50.0 (c (n "swc_ecma_transforms_module") (v "0.50.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.55.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.22.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.74.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.39.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.44.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.40.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.48.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.41.0") (d #t) (k 0)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)))) (h "1xwbmg7bj3q41y2673k9n5ms8wrr13qggy77an42spqj5nqarmwg")))

(define-public crate-swc_ecma_transforms_module-0.50.1 (c (n "swc_ecma_transforms_module") (v "0.50.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.55.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.22.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.74.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.39.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.44.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.40.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.48.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.41.0") (d #t) (k 0)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)))) (h "1a6ss94sqfzm6q835fr6nx442kglf94s2db97w104h08gp4vfkz6")))

(define-public crate-swc_ecma_transforms_module-0.51.0 (c (n "swc_ecma_transforms_module") (v "0.51.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.55.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.22.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.75.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.45.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.41.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.48.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.41.0") (d #t) (k 0)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)))) (h "15kmjkbqrlnlqmq8jwj71jf2ympwnkpm9021xfs69pkh6qf0apaa")))

(define-public crate-swc_ecma_transforms_module-0.52.0 (c (n "swc_ecma_transforms_module") (v "0.52.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.56.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.23.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.41.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.46.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.42.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.49.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.42.0") (d #t) (k 0)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)))) (h "051d57hqcng5sprwpkn9l5gwga0v5rbf2xw3jiixpwvbaclpjb0y")))

(define-public crate-swc_ecma_transforms_module-0.53.0 (c (n "swc_ecma_transforms_module") (v "0.53.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.56.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.23.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.41.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.47.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.42.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.49.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.42.0") (d #t) (k 0)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)))) (h "11i7w7hhg764nka5z3bwprv214bmww4s1jafzvgqzlihij378d1g")))

(define-public crate-swc_ecma_transforms_module-0.54.0 (c (n "swc_ecma_transforms_module") (v "0.54.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.56.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.23.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.41.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.48.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.42.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.49.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.42.0") (d #t) (k 0)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)))) (h "0mg8chzx56yjv11i475i2csdndrca7cblyp5yqm7f73a22g4l9ij")))

(define-public crate-swc_ecma_transforms_module-0.54.1 (c (n "swc_ecma_transforms_module") (v "0.54.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.56.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.23.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.41.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.48.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.42.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.49.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.42.0") (d #t) (k 0)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)))) (h "05hb7mf4kd8wcffcp9hs0gpsxdb4nb2frn56w5iya8jndp9zj3d5")))

(define-public crate-swc_ecma_transforms_module-0.55.0 (c (n "swc_ecma_transforms_module") (v "0.55.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.56.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.23.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.42.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.49.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.43.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.50.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.42.0") (d #t) (k 0)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)))) (h "0ajbizsjxpkmr11vsaql4fgznn7xngzs11j7skcl1jnl2bixxn53")))

(define-public crate-swc_ecma_transforms_module-0.55.1 (c (n "swc_ecma_transforms_module") (v "0.55.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.56.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.23.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.76.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.42.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.49.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.43.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.50.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.42.0") (d #t) (k 0)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)))) (h "1rzin268dvrafgmsg6fikv113mavfgaidq69saqi6gas5nwvw2z1")))

(define-public crate-swc_ecma_transforms_module-0.55.2 (c (n "swc_ecma_transforms_module") (v "0.55.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.56.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.23.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.76.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.42.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.49.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.43.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.50.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.42.0") (d #t) (k 0)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)))) (h "1bhpjr9l4b3lfd2pyg138wmwnyrj4kgy28v0snqvvqya2bz0lrcv")))

(define-public crate-swc_ecma_transforms_module-0.56.0 (c (n "swc_ecma_transforms_module") (v "0.56.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.57.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.24.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.77.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.43.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.50.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.44.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.51.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.43.0") (d #t) (k 0)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)))) (h "12qzj9yz41dh2lh5pwylbb5b8l67gdl0s7l6ag1h95n88svdlz2f")))

(define-public crate-swc_ecma_transforms_module-0.56.1 (c (n "swc_ecma_transforms_module") (v "0.56.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.57.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.24.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.77.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.43.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.50.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.44.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.51.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.43.0") (d #t) (k 0)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)))) (h "05317s4pvczlycrf3wd9p6vqsmpzrx2ddmrs43pj4lngx99nrjm4")))

(define-public crate-swc_ecma_transforms_module-0.56.2 (c (n "swc_ecma_transforms_module") (v "0.56.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.57.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.24.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.77.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.43.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.50.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.44.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.51.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.43.0") (d #t) (k 0)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)))) (h "1ijr9xjg855dwa0agci256ycp9w9bjcgxaqp2fni6shqmx94msh9")))

(define-public crate-swc_ecma_transforms_module-0.57.0 (c (n "swc_ecma_transforms_module") (v "0.57.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.24.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.51.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.45.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.52.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)))) (h "0wxcvkdj8rf6i261hjgwbmlg0d1al2r4yyyrq6bf6hk14kd5176x")))

(define-public crate-swc_ecma_transforms_module-0.58.0 (c (n "swc_ecma_transforms_module") (v "0.58.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.24.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.52.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.45.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.52.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)))) (h "1x8sw0rhan7s3i39hvd4xd2qc25pa129bkilcqj0j6lpfyyfmjp2")))

(define-public crate-swc_ecma_transforms_module-0.58.1 (c (n "swc_ecma_transforms_module") (v "0.58.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.24.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.44.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.52.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.45.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.52.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)))) (h "10x5zlzias9cd7gnnv7hmlymd53f4ar2giaqwb830ma7aj46bla7")))

(define-public crate-swc_ecma_transforms_module-0.58.2 (c (n "swc_ecma_transforms_module") (v "0.58.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.24.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.44.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.52.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.45.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.52.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)))) (h "1kv3rsj8pf08b3jpsslbqsqn1c8ahm9sgff4iadkr36vc59cykb3")))

(define-public crate-swc_ecma_transforms_module-0.58.3 (c (n "swc_ecma_transforms_module") (v "0.58.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.24.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.44.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.52.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.45.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.52.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)))) (h "1ylxmhfn36ls3inmjy9p46kr8ag1z3crkr0d07c59m20kh2vnsl6")))

(define-public crate-swc_ecma_transforms_module-0.59.0 (c (n "swc_ecma_transforms_module") (v "0.59.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.24.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.53.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.45.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.52.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)))) (h "17vwikm3ibrfc1npf2z40q38x09qv57njlsyy3fpqksnc162xs9w")))

(define-public crate-swc_ecma_transforms_module-0.60.0 (c (n "swc_ecma_transforms_module") (v "0.60.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.24.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.54.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.46.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.53.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)))) (h "19ni29c9855zm697abrbnxcz8h1nwp1h2nvymjbvpfxganp97s5r")))

(define-public crate-swc_ecma_transforms_module-0.61.0 (c (n "swc_ecma_transforms_module") (v "0.61.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.24.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.80.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.46.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.55.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.47.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)))) (h "0nw8q9mb5ln5qbj5pi9clkly3pzzn8chg3yr532fk13n8n2v5n97")))

(define-public crate-swc_ecma_transforms_module-0.62.0 (c (n "swc_ecma_transforms_module") (v "0.62.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.59.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.25.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.81.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.47.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.56.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.48.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.55.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.45.0") (d #t) (k 0)) (d (n "testing") (r "^0.16.0") (d #t) (k 2)))) (h "0mkdb9ww1a7b74pa43hr51yflz2h71h3bigmb27rflh2wnab8s63")))

(define-public crate-swc_ecma_transforms_module-0.63.0 (c (n "swc_ecma_transforms_module") (v "0.63.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.59.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.25.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.81.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.48.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.57.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.49.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.55.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.45.0") (d #t) (k 0)) (d (n "testing") (r "^0.16.0") (d #t) (k 2)))) (h "1jr5krmdhh2vgjnrwciknxciiysql539bhphmshhbag8kji7l73j")))

(define-public crate-swc_ecma_transforms_module-0.64.0 (c (n "swc_ecma_transforms_module") (v "0.64.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.59.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.25.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.81.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.48.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.58.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.50.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.55.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.45.0") (d #t) (k 0)) (d (n "testing") (r "^0.16.0") (d #t) (k 2)))) (h "0d5r4rpsnhd5l95ifgk82mhqxck7c3bwm8a5w6571kly6w84cxl5")))

(define-public crate-swc_ecma_transforms_module-0.65.0 (c (n "swc_ecma_transforms_module") (v "0.65.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.60.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.25.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.49.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.59.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.51.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.56.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.46.0") (d #t) (k 0)) (d (n "testing") (r "^0.16.0") (d #t) (k 2)))) (h "07m08im2gh48kq33175jj7f0fj7fsjlk2c76lfbf7m58dcd9873h")))

(define-public crate-swc_ecma_transforms_module-0.66.0 (c (n "swc_ecma_transforms_module") (v "0.66.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.60.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.25.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.50.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.60.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.52.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.57.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.46.0") (d #t) (k 0)) (d (n "testing") (r "^0.16.0") (d #t) (k 2)))) (h "0hhwjk2nffilrkbh15dy7nmgrx3gg5clr2yk12q8yr1prbzipcn3")))

(define-public crate-swc_ecma_transforms_module-0.67.0 (c (n "swc_ecma_transforms_module") (v "0.67.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.61.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.25.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.83.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.51.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.61.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.53.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.47.0") (d #t) (k 0)) (d (n "testing") (r "^0.16.0") (d #t) (k 2)))) (h "0nmbwhqvqvkb8c71i1b7ddhd42jxlcjmm6zwp48jmkh9n1asngbs")))

(define-public crate-swc_ecma_transforms_module-0.68.0 (c (n "swc_ecma_transforms_module") (v "0.68.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.16.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.62.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.26.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.84.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.52.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.62.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.54.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.59.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.48.0") (d #t) (k 0)) (d (n "testing") (r "^0.17.0") (d #t) (k 2)))) (h "1jmy5n49b32xsqpcfz3aqyyx561mzjzg7cvcxqy9pyynmz7wnpxm")))

(define-public crate-swc_ecma_transforms_module-0.69.0 (c (n "swc_ecma_transforms_module") (v "0.69.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.16.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.63.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.26.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.53.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.63.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.55.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.60.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.49.0") (d #t) (k 0)) (d (n "testing") (r "^0.17.0") (d #t) (k 2)))) (h "1xmcq0p4l12g0gxdxssj9rcqn9q4hra1dg6pbrffyjxbl8nxyhfl")))

(define-public crate-swc_ecma_transforms_module-0.70.0 (c (n "swc_ecma_transforms_module") (v "0.70.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.16.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.63.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.26.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.64.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.56.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.61.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.49.0") (d #t) (k 0)) (d (n "testing") (r "^0.17.0") (d #t) (k 2)))) (h "1r74xmm2s6134g8znj9jpa7vjjfkwg5i9sif57rq6cqb7h2xba43")))

(define-public crate-swc_ecma_transforms_module-0.71.0 (c (n "swc_ecma_transforms_module") (v "0.71.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.16.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.64.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.26.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.86.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.55.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.65.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.57.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.62.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.50.0") (d #t) (k 0)) (d (n "testing") (r "^0.17.0") (d #t) (k 2)))) (h "1aql572dci26c95vpdjd3jca6d0rnjq9mjn2nqkqip1syb3v102i")))

(define-public crate-swc_ecma_transforms_module-0.71.1 (c (n "swc_ecma_transforms_module") (v "0.71.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.16.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.64.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.26.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.86.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.55.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.65.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.57.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.62.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.50.0") (d #t) (k 0)) (d (n "testing") (r "^0.17.0") (d #t) (k 2)))) (h "1r7lckl2ymnv6igvk4hp2p5jk6y9fv7kq7zf8wzfi0vrmfm3xmbj")))

(define-public crate-swc_ecma_transforms_module-0.72.0 (c (n "swc_ecma_transforms_module") (v "0.72.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.16.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.64.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.26.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.86.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.55.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.66.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.57.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.62.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.50.0") (d #t) (k 0)) (d (n "testing") (r "^0.17.0") (d #t) (k 2)))) (h "01jk6998hqzbwzb6v7zjic8gnfqjjca7irgnl9z4rs6i22w3dhd9")))

(define-public crate-swc_ecma_transforms_module-0.73.0 (c (n "swc_ecma_transforms_module") (v "0.73.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.65.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.27.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.87.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.56.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.67.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.58.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.63.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "05s6nrrz9jk8rm4xmfi7jz4s6chlzj3dgp9if0xws16a5j2q5w3v")))

(define-public crate-swc_ecma_transforms_module-0.73.1 (c (n "swc_ecma_transforms_module") (v "0.73.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.65.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.27.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.87.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.56.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.67.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.58.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.63.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "1rpa03x9a9a0c7qqnw6fbildv2mrkn95phw9rc3w42ld63w85pgx")))

(define-public crate-swc_ecma_transforms_module-0.74.0 (c (n "swc_ecma_transforms_module") (v "0.74.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.65.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.27.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.87.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.57.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.68.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.59.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.64.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "15c0c7qq2cxya0id1g0cnvp6l2r88d2qkmpbl870x7acfnxq64v9")))

(define-public crate-swc_ecma_transforms_module-0.74.1 (c (n "swc_ecma_transforms_module") (v "0.74.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.65.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.27.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.87.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.57.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.68.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.59.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.64.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "0n3fr8aa5ff3sq632yz4bz9w2lk3rg16vg1phcwagdf745ixj2gi")))

(define-public crate-swc_ecma_transforms_module-0.75.0 (c (n "swc_ecma_transforms_module") (v "0.75.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.65.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.28.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.87.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.57.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.68.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.59.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.64.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "01kzkfhic78gzshj7hfslx0s4n59n4a9910aqkpmxqpwhbj4bxxz")))

(define-public crate-swc_ecma_transforms_module-0.75.1 (c (n "swc_ecma_transforms_module") (v "0.75.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.65.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.28.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.87.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.57.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.68.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.59.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.64.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "07rm6fbrf10ygxlhjkbrlkvrhp5jmh6p05crq00j53wnnyjqbrd1")))

(define-public crate-swc_ecma_transforms_module-0.75.2 (c (n "swc_ecma_transforms_module") (v "0.75.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.65.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.28.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.87.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.57.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.68.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.59.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.64.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "18pqfdw2zbg0ssxwssw262d5mhqiav4qaj68cdy90am7j9q3bql7")))

(define-public crate-swc_ecma_transforms_module-0.76.0 (c (n "swc_ecma_transforms_module") (v "0.76.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.65.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.28.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.88.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.69.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.60.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.65.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "0bzmn3gqz9h86wd8iy8lvg2h7dapm3sy7aj450wr3mkd4nm5dq77")))

(define-public crate-swc_ecma_transforms_module-0.76.1 (c (n "swc_ecma_transforms_module") (v "0.76.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.65.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.28.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.88.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.69.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.60.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.65.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "0ki7d2n1qsr4c1ph0kh1lfqk2knqbw5syqafq2xx8hmzny7my7qm")))

(define-public crate-swc_ecma_transforms_module-0.76.2 (c (n "swc_ecma_transforms_module") (v "0.76.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.65.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.28.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.88.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.69.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.60.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.65.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "17shs40xp7mgmfcg76dgig73r8j4lda796kpn3dsz977n0k2vdgy")))

(define-public crate-swc_ecma_transforms_module-0.77.0 (c (n "swc_ecma_transforms_module") (v "0.77.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.65.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.28.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.88.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.69.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.60.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.65.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "00rza8w2wzyvff7wwvh9f240p49c676pljqkk1ira8v4vkgjfk0w")))

(define-public crate-swc_ecma_transforms_module-0.78.0 (c (n "swc_ecma_transforms_module") (v "0.78.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.65.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.28.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.88.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.70.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.60.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.65.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "1nmirmbs343s00922ph4g20il0km633d48x9a0b2l1l1i7k1c5j4")))

(define-public crate-swc_ecma_transforms_module-0.79.0 (c (n "swc_ecma_transforms_module") (v "0.79.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.66.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.28.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.89.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.59.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.71.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.61.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.66.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.52.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "023d4yfyykx594j13g60m7pmvwz079zg0v2cp88qiysrlmdvkcbz")))

(define-public crate-swc_ecma_transforms_module-0.80.0 (c (n "swc_ecma_transforms_module") (v "0.80.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.67.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.28.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.90.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.60.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.72.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.62.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.67.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.53.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "0kyy3qdz1y319a0p0wvzd903l09i9biri5295p3633r0b2i1rbxr")))

(define-public crate-swc_ecma_transforms_module-0.81.0 (c (n "swc_ecma_transforms_module") (v "0.81.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.28.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.91.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.61.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.73.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.63.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "0kxz1vya9309i2qdf14r6q67430p82vh7p46xi3zwajgjdwif88i")))

(define-public crate-swc_ecma_transforms_module-0.82.0 (c (n "swc_ecma_transforms_module") (v "0.82.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.28.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.91.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.62.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.74.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.64.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "0vczm0y5si5r6cqyra788cw7s8wwaafyfqj82inm5d5v3kl9hm2d")))

(define-public crate-swc_ecma_transforms_module-0.83.0 (c (n "swc_ecma_transforms_module") (v "0.83.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.28.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.91.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.62.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.74.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.64.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "0w19qqiq7q13ax9sfi5bshnrj48chh62ydymjg7mqpmbz895rhv4")))

(define-public crate-swc_ecma_transforms_module-0.83.1 (c (n "swc_ecma_transforms_module") (v "0.83.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.28.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.91.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.62.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.74.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.64.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "0akmcvf9ncy08fmlgkvl92w958srrz48ri046slxmkl0hdwcg21k")))

(define-public crate-swc_ecma_transforms_module-0.84.0 (c (n "swc_ecma_transforms_module") (v "0.84.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.28.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.91.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.63.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.75.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.65.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "0zf2bhp8qca9qj3fnvnk9lzfsb7js3jdavqhwhbhrdawm8srnwzf")))

(define-public crate-swc_ecma_transforms_module-0.84.1 (c (n "swc_ecma_transforms_module") (v "0.84.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.28.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.91.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.63.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.75.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.65.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "1wqfwxwgdmvg79lmr5f2sdzz2g2x40mv9ga293ahms4vjdh5jb6s")))

(define-public crate-swc_ecma_transforms_module-0.84.2 (c (n "swc_ecma_transforms_module") (v "0.84.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.28.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.91.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.63.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.75.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.65.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "1qi78lq54xy0csw0r6gcdn4aqpghhnirsg18bv3vdln7mb951x5m")))

(define-public crate-swc_ecma_transforms_module-0.85.0 (c (n "swc_ecma_transforms_module") (v "0.85.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.91.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.63.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.75.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.65.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "14k85xz6icbj497sf913xkm70p519va45aa6svgrgbswgkj751wj")))

(define-public crate-swc_ecma_transforms_module-0.85.1 (c (n "swc_ecma_transforms_module") (v "0.85.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.91.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.63.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.75.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.65.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "0npwhazrsjnzwr7zvh35i6r1zxkkyz7sff9zc7y5lk69h7kqs4mf")))

(define-public crate-swc_ecma_transforms_module-0.86.0 (c (n "swc_ecma_transforms_module") (v "0.86.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.91.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.64.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.76.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.66.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "1497s3yjam787vk9sw14nrm5zpmq031wh3zyjvv76d4iprcsi8li")))

(define-public crate-swc_ecma_transforms_module-0.87.0 (c (n "swc_ecma_transforms_module") (v "0.87.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.91.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.64.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.76.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.66.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "1nri949x5phg6l42cll6jwppi1gy6jjmlyjs3l8bf9nnglbg0pk6")))

(define-public crate-swc_ecma_transforms_module-0.88.0 (c (n "swc_ecma_transforms_module") (v "0.88.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.65.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.77.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.67.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.70.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "0f66cf2a9q4w4ih6m8qn92qidxxcg73k9yhbmh72s4pc8mg8np1l")))

(define-public crate-swc_ecma_transforms_module-0.89.0 (c (n "swc_ecma_transforms_module") (v "0.89.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.66.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.78.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.68.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.71.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "1iibgv5p14gszns9yrp4y771p5lsll7m25k1p0n1a79w6pfzlz6s")))

(define-public crate-swc_ecma_transforms_module-0.89.1 (c (n "swc_ecma_transforms_module") (v "0.89.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.66.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.78.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.68.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.71.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)))) (h "1qzac9yzl85r5aass8d62i30nj8dd7xgqdh97al0rcg9dby5wmza")))

(define-public crate-swc_ecma_transforms_module-0.89.2 (c (n "swc_ecma_transforms_module") (v "0.89.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.66.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.78.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.68.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.71.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)))) (h "1402ncir0lx5x9rr7g0ysr5v13f6jnnwfdyma3dy51mxigmrar38")))

(define-public crate-swc_ecma_transforms_module-0.89.3 (c (n "swc_ecma_transforms_module") (v "0.89.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.66.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.78.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.68.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.71.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)))) (h "01zzxmkp2j7avgz2rad445f4kaf0nifiyr399p1pysc4rhyaiqqb")))

(define-public crate-swc_ecma_transforms_module-0.89.4 (c (n "swc_ecma_transforms_module") (v "0.89.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.66.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.78.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.68.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.71.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)))) (h "1gi2lbvmi9151a4249yglw1x2vid97ssggpzq6irzdhr63g1hmr3")))

(define-public crate-swc_ecma_transforms_module-0.89.5 (c (n "swc_ecma_transforms_module") (v "0.89.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.66.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.78.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.68.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.71.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)))) (h "1d49pfr581cwj2qfb04cxwl6cqh4hnmxhsl6lmzk62ji0c8zx0p2")))

(define-public crate-swc_ecma_transforms_module-0.89.6 (c (n "swc_ecma_transforms_module") (v "0.89.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.66.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.78.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.68.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.71.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)))) (h "0qyzsjbiz54rn70ra8lkyxirgczpdsb3ccm4fzrmsisw3m1lh7sx")))

(define-public crate-swc_ecma_transforms_module-0.90.0 (c (n "swc_ecma_transforms_module") (v "0.90.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.66.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.79.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.68.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.71.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0apmzy965fi78gdyry3llbah4650rz88yh46iagqzv65qiijfxk0")))

(define-public crate-swc_ecma_transforms_module-0.91.0 (c (n "swc_ecma_transforms_module") (v "0.91.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.70.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.93.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.67.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.80.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.69.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.72.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.56.0") (d #t) (k 0)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1fgsjzjqmq1vrxc6yzz5bzm0dh1p6v7q4mk6vhmkkqrv8wsh819v")))

(define-public crate-swc_ecma_transforms_module-0.92.0 (c (n "swc_ecma_transforms_module") (v "0.92.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.70.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.81.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.70.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.56.0") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "120p3xxw7n71lqhflkvf15pbzq4sjcwnlcqnxsr0081xy0q39nzz")))

(define-public crate-swc_ecma_transforms_module-0.93.0 (c (n "swc_ecma_transforms_module") (v "0.93.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.70.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.81.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.70.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.56.0") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "01qzff6sggzxv7y771j0xdy5lkbkyj2aws0v2wwrliyvhmr90i3g")))

(define-public crate-swc_ecma_transforms_module-0.94.0 (c (n "swc_ecma_transforms_module") (v "0.94.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.71.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.82.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.71.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.74.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.57.0") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0xyzqzr63wf6i16j21rrmpzaqkb40wr7j7y0bw7qyy6504xr5f02")))

(define-public crate-swc_ecma_transforms_module-0.95.0 (c (n "swc_ecma_transforms_module") (v "0.95.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.71.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.70.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.83.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.72.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.74.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.57.0") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1dlh4mmjnaf0rjd3m705yi0lxyqd1vlqvni4b085aj9lshy2f354")))

(define-public crate-swc_ecma_transforms_module-0.95.1 (c (n "swc_ecma_transforms_module") (v "0.95.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.71.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.70.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.83.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.72.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.74.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.57.0") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1cj6cf5hvvdw5qrqnjipkzjw8vmbz24zj3hycphbq1x9bxgzd29i")))

(define-public crate-swc_ecma_transforms_module-0.96.0 (c (n "swc_ecma_transforms_module") (v "0.96.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.71.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.70.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.83.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.72.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.74.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.57.0") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1zrmnxbjncwv1vzpnvn4814fz6kh5fy7an3hd1asc9ncx3dpfq4i")))

(define-public crate-swc_ecma_transforms_module-0.96.1 (c (n "swc_ecma_transforms_module") (v "0.96.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.71.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.70.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.83.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.72.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.74.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.57.0") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0pkv4x07lkz0c7krja1kbmyxbn8f9v2szip40di27cqv50xnf6pj")))

(define-public crate-swc_ecma_transforms_module-0.97.0 (c (n "swc_ecma_transforms_module") (v "0.97.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.72.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.71.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.84.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.73.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.75.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.58.0") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0iarw5mq3l1arzv4fis3j68bxknp6ihvmm4id1kvgylffi4iwk3m")))

(define-public crate-swc_ecma_transforms_module-0.98.0 (c (n "swc_ecma_transforms_module") (v "0.98.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.97.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.72.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.85.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.74.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.59.0") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "05grv4an7yz07izx3f5pg9scmv0zf4xv8v4wfm2alp57gzkbn2if")))

(define-public crate-swc_ecma_transforms_module-0.99.0 (c (n "swc_ecma_transforms_module") (v "0.99.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.86.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.75.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.77.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.59.0") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0a1b3bqvwmj4wf19rm50fb0szcdl0jxmbdyd20dwj9gq3ws5q60x")))

(define-public crate-swc_ecma_transforms_module-0.100.0 (c (n "swc_ecma_transforms_module") (v "0.100.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.87.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.75.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.77.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.59.0") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0kig91xv5xgspli0iqqn1a5rn5c19blvzw4ih2f1nhwdb2wgrg5f")))

(define-public crate-swc_ecma_transforms_module-0.101.0 (c (n "swc_ecma_transforms_module") (v "0.101.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.74.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.99.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.74.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.88.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.76.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.60.0") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1kwk2msrlfgx892np83gs5189vwhzfl12nhrkzfhyiv68ry33nh1")))

(define-public crate-swc_ecma_transforms_module-0.102.0 (c (n "swc_ecma_transforms_module") (v "0.102.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.75.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.100.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.75.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.89.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.77.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.61.0") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0a7prd6svxk0kb07qhlvn89nc7m6l2clwjksv50959595010ld3c")))

(define-public crate-swc_ecma_transforms_module-0.103.0 (c (n "swc_ecma_transforms_module") (v "0.103.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.75.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.100.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.90.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.78.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.61.0") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1q9mrdyjlpvjy54v11i844834hvm2whks34qv29swbfkrlgg7sq8")))

(define-public crate-swc_ecma_transforms_module-0.104.0 (c (n "swc_ecma_transforms_module") (v "0.104.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.101.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.77.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.91.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.79.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.80.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1pafa8hp0ym0dg7yl8jf740hrc04lqgk7cd3bnnzz2kg45hvbr2f")))

(define-public crate-swc_ecma_transforms_module-0.105.0 (c (n "swc_ecma_transforms_module") (v "0.105.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.102.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.92.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.80.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.81.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "04xklgyscmcn5cxmr0hf0cma9zd9rnn4vdkwaqwh94w1l3bix4kv")))

(define-public crate-swc_ecma_transforms_module-0.105.1 (c (n "swc_ecma_transforms_module") (v "0.105.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.102.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.92.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.80.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.81.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1k80cay800k762ibn0ghpniirwz7bv7rc3wffypv2s5gdrh0m2v7")))

(define-public crate-swc_ecma_transforms_module-0.106.0 (c (n "swc_ecma_transforms_module") (v "0.106.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.102.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.93.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.81.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0nw8a1amm1gw3qy329avlwkhb89mxrabkc3dfwf76a1kv4k95ckg")))

(define-public crate-swc_ecma_transforms_module-0.107.0 (c (n "swc_ecma_transforms_module") (v "0.107.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.102.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.80.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.94.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.82.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1fvpcw7xwry9pd6323y0391vxmdz9fgsp6fn8awn679lz5397rn4")))

(define-public crate-swc_ecma_transforms_module-0.108.0 (c (n "swc_ecma_transforms_module") (v "0.108.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.102.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.81.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.95.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.83.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "03v1xqi44igb46g2wnw7xzn7gxqvd1354ymm0570b8yf8blnp03k")))

(define-public crate-swc_ecma_transforms_module-0.108.1 (c (n "swc_ecma_transforms_module") (v "0.108.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.102.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.81.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.95.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.83.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1pnknx77c1hvah22ijz41ri22zac7r9d7p658i3w853hy71iprzd")))

(define-public crate-swc_ecma_transforms_module-0.109.0 (c (n "swc_ecma_transforms_module") (v "0.109.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.77.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.96.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.84.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.83.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.63.0") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "16lib5qzlbnpcclgp0md0j3laamg904k9x6bd4zrl40yb8pdgixn")))

(define-public crate-swc_ecma_transforms_module-0.109.1 (c (n "swc_ecma_transforms_module") (v "0.109.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.77.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.103.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.82.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.96.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.84.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.83.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.63.1") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0f1b0a7k76b691nx5g5fp0l1jrs0rcp0pb6r218gk1npm975c2k7")))

(define-public crate-swc_ecma_transforms_module-0.110.0 (c (n "swc_ecma_transforms_module") (v "0.110.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.77.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.29.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.103.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.83.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.97.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.85.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.84.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.63.1") (d #t) (k 0)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "06rfcr2fnxy2v4p5n9h4d1sy6fqq4b1ldf17r20hsmnn5dr868hf")))

(define-public crate-swc_ecma_transforms_module-0.111.0 (c (n "swc_ecma_transforms_module") (v "0.111.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.84.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.98.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.86.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.64.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0dmachfvi4bsn37glbr6rknshlga1pjxliynhk8wfq5zciywmfp6")))

(define-public crate-swc_ecma_transforms_module-0.112.0 (c (n "swc_ecma_transforms_module") (v "0.112.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.99.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.87.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.64.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1zi6aba2lfhi1f1ykyipd962b9kpwdiy9vfj7mgakdx7aig439a8")))

(define-public crate-swc_ecma_transforms_module-0.112.1 (c (n "swc_ecma_transforms_module") (v "0.112.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.99.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.87.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.64.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0bmdfz2az57gr193853f6c9l3vxf2iy355byhwd6vvq97kqgxyax")))

(define-public crate-swc_ecma_transforms_module-0.112.2 (c (n "swc_ecma_transforms_module") (v "0.112.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.99.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.87.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.64.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0habdh0y1hwlrzj85mw3iwpxyarv5ivvklcdj4fg78sc2gbdxi3g")))

(define-public crate-swc_ecma_transforms_module-0.112.3 (c (n "swc_ecma_transforms_module") (v "0.112.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.99.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.87.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.64.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0f66f5d2f066v2bwx65hphdm00i0ak2wc48j3dad23mginpfiq9x")))

(define-public crate-swc_ecma_transforms_module-0.112.4 (c (n "swc_ecma_transforms_module") (v "0.112.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.99.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.87.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.64.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0qkrfljyazf6wassnc02kgarfg51sal238c400sa65248l5h93ml")))

(define-public crate-swc_ecma_transforms_module-0.112.5 (c (n "swc_ecma_transforms_module") (v "0.112.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.99.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.87.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.64.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0rfpckpsjpjvqdpsnvz4hnmlfv2n1q6mz4fjz4dfhifd268ih8bm")))

(define-public crate-swc_ecma_transforms_module-0.112.6 (c (n "swc_ecma_transforms_module") (v "0.112.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.85.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.99.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.87.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.64.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1cxji2kz1vmyzfpzsi7naljj9376yd82yq0kdx4699f1vmvcfzvj")))

(define-public crate-swc_ecma_transforms_module-0.112.7 (c (n "swc_ecma_transforms_module") (v "0.112.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.85.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.99.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.87.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.64.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "01rjyfwr6r07bsar9kxr59v50zrhg3xhxad51klkszv2d7gfxhsv")))

(define-public crate-swc_ecma_transforms_module-0.112.8 (c (n "swc_ecma_transforms_module") (v "0.112.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.85.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.99.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.87.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.64.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "15x6yd01bslifz1wcdnafc32jlv8h374ixyf4xrhzd54ajdpaibf")))

(define-public crate-swc_ecma_transforms_module-0.113.0 (c (n "swc_ecma_transforms_module") (v "0.113.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.85.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.100.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.87.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.64.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "089cql404h2ymal5jxnqmsj628qvdkpcp9knbngyiqgqf5b74i7x")))

(define-public crate-swc_ecma_transforms_module-0.113.1 (c (n "swc_ecma_transforms_module") (v "0.113.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.85.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.100.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.87.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.64.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1460511qdagqircbfpkbg6y6430pxiq47hqgyp1n6d7896ps4gwl")))

(define-public crate-swc_ecma_transforms_module-0.114.0 (c (n "swc_ecma_transforms_module") (v "0.114.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.86.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.101.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.88.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.64.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0qr9sgl1i0yifycjvmhi0mq134hiishw5n8xjgva14kgl8fiqq36")))

(define-public crate-swc_ecma_transforms_module-0.115.0 (c (n "swc_ecma_transforms_module") (v "0.115.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.105.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.87.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.102.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.89.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.86.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1jixh2sfpr3gnjqyg876rwasxnmyqan2cy6wj4xykx118rh1dz9v")))

(define-public crate-swc_ecma_transforms_module-0.115.1 (c (n "swc_ecma_transforms_module") (v "0.115.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.105.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.87.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.102.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.89.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.86.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0wk0fkkm4mc5md912xmjh53hzv5hgfyphxay6vsi15rf2yl10ni9")))

(define-public crate-swc_ecma_transforms_module-0.116.0 (c (n "swc_ecma_transforms_module") (v "0.116.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.105.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.87.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.102.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.89.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.86.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "02rgdn4wj78niqqk03kxh86z2swicimjj1zvb7s1k9szzs2rbi15")))

(define-public crate-swc_ecma_transforms_module-0.117.0 (c (n "swc_ecma_transforms_module") (v "0.117.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.105.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.88.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.103.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.90.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.86.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1h57bq2j77vl221l8k7ghx12v20aw4hsin26j6g7f7s9m0rcmx4c")))

(define-public crate-swc_ecma_transforms_module-0.118.0 (c (n "swc_ecma_transforms_module") (v "0.118.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.105.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.89.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.104.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.91.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.86.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0fmmfjqmnx269if9lmdfnz0ndbrpxrkzcp8yq3yi91pmk3vkf80p")))

(define-public crate-swc_ecma_transforms_module-0.118.1 (c (n "swc_ecma_transforms_module") (v "0.118.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.105.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.89.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.104.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.91.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.86.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "03kzyj0gxc66r418m9f2ldmy2ha03r047x9m769j6sl5sc4k1xlx")))

(define-public crate-swc_ecma_transforms_module-0.118.2 (c (n "swc_ecma_transforms_module") (v "0.118.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.105.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.89.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.104.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.91.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.86.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1r1pikdr97mf9cipihm79pxysrjf3rh80ha60q5fpz3kl42d620w")))

(define-public crate-swc_ecma_transforms_module-0.119.0 (c (n "swc_ecma_transforms_module") (v "0.119.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.105.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.89.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.105.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.91.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.86.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0dq3r8yjjchzassyksph3s45jd0zhm2r0lbzm631i5x5bvc210pd")))

(define-public crate-swc_ecma_transforms_module-0.120.0 (c (n "swc_ecma_transforms_module") (v "0.120.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.105.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.90.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.106.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.92.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.86.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1d4c7211c9f25wxvwihzylvk0iz9fbh4rc6rhppmfp7l1yrc3np1")))

(define-public crate-swc_ecma_transforms_module-0.120.1 (c (n "swc_ecma_transforms_module") (v "0.120.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.105.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.90.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.106.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.92.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.86.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0haavq3h574zbjp3s5w9771yc2rp3vskips4g9yv5ncdkbbkd2qx")))

(define-public crate-swc_ecma_transforms_module-0.120.2 (c (n "swc_ecma_transforms_module") (v "0.120.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.30.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.105.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.90.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.106.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.92.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.86.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0km3qlsj1zx89nsvp7n0v2qw7gb478n4lc92nkn6nqy7chx3qk5m")))

(define-public crate-swc_ecma_transforms_module-0.121.0 (c (n "swc_ecma_transforms_module") (v "0.121.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.19.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.80.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.31.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.31.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.106.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.91.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.107.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.93.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.87.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.66.0") (d #t) (k 0)) (d (n "testing") (r "^0.21.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1m5plci60rnh3szhb2j07advdk8j0i7mp3vx8y18q4mgp806p8ms")))

(define-public crate-swc_ecma_transforms_module-0.122.0 (c (n "swc_ecma_transforms_module") (v "0.122.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.19.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.80.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.31.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.31.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.108.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.94.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.88.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.66.0") (d #t) (k 0)) (d (n "testing") (r "^0.21.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1m4c48hp2yalp3fjpplivq83lljqv0h8hpblk887xmj8bjcmy6z5")))

(define-public crate-swc_ecma_transforms_module-0.122.1 (c (n "swc_ecma_transforms_module") (v "0.122.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.19.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.80.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.31.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.31.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.108.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.94.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.88.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.66.0") (d #t) (k 0)) (d (n "testing") (r "^0.21.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ym8j1ml7vd5lzsr9wsgcxv206dr32jz5lijpclbc5dqrjdjm1f1")))

(define-public crate-swc_ecma_transforms_module-0.123.0 (c (n "swc_ecma_transforms_module") (v "0.123.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.20.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.81.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.32.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.32.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.93.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.109.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.95.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.89.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.67.0") (d #t) (k 0)) (d (n "testing") (r "^0.22.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "197y905yrl0d92wbbvyqsp7xj2s0ygpza7h66ia2wr198m92likd")))

(define-public crate-swc_ecma_transforms_module-0.123.1 (c (n "swc_ecma_transforms_module") (v "0.123.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.20.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.81.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.32.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.32.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.93.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.109.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.95.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.89.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.67.0") (d #t) (k 0)) (d (n "testing") (r "^0.22.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1jnjmf3m36b378akdl8r8zhfigwqcih2994sb3916q9jqj5lbhwg")))

(define-public crate-swc_ecma_transforms_module-0.123.2 (c (n "swc_ecma_transforms_module") (v "0.123.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.20.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.81.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.32.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.32.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.93.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.109.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.95.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.89.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.67.0") (d #t) (k 0)) (d (n "testing") (r "^0.22.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0xx4hxwx5srx7yjsnnpw664dwd2yplkaz3rnbrc2x28i36gfcwlc")))

(define-public crate-swc_ecma_transforms_module-0.124.0 (c (n "swc_ecma_transforms_module") (v "0.124.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.20.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.81.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.32.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.32.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.110.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.96.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.90.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.67.0") (d #t) (k 0)) (d (n "testing") (r "^0.22.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "193dz1q57fwx83l25r8i07javx5pfbhk5f8nj2k02psm8p96idv3")))

(define-public crate-swc_ecma_transforms_module-0.125.0 (c (n "swc_ecma_transforms_module") (v "0.125.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.20.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.81.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.32.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.32.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.110.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.96.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.90.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.67.0") (d #t) (k 0)) (d (n "testing") (r "^0.22.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "14ymaiyqabraiqjm1dg7m9pa7h7c8g8lzg1phl2n79vi12q89b5p")))

(define-public crate-swc_ecma_transforms_module-0.125.1 (c (n "swc_ecma_transforms_module") (v "0.125.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.20.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.81.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.32.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.32.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.110.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.96.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.90.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.67.0") (d #t) (k 0)) (d (n "testing") (r "^0.22.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1v6xhd2rx218iwdcd0iizdhkm7wv04flf9y78cklcx4byppqqxcz")))

(define-public crate-swc_ecma_transforms_module-0.126.0 (c (n "swc_ecma_transforms_module") (v "0.126.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.20.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.81.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.32.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.32.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.110.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.96.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.90.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.67.0") (d #t) (k 0)) (d (n "testing") (r "^0.22.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1d1wl2ix8d70iwghafkr6gql6xwkw43p3ig22rbnl5ggkdnc2wpp")))

(define-public crate-swc_ecma_transforms_module-0.126.1 (c (n "swc_ecma_transforms_module") (v "0.126.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.20.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.81.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.32.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.32.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.110.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.96.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.90.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.67.0") (d #t) (k 0)) (d (n "testing") (r "^0.22.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0j9rvh0gwz0g9llxbxhxibk1d9mcvzyyy6zg8iwfj40s56mpgfk5")))

(define-public crate-swc_ecma_transforms_module-0.126.2 (c (n "swc_ecma_transforms_module") (v "0.126.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.20.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.81.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.32.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.32.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.110.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.96.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.90.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.67.0") (d #t) (k 0)) (d (n "testing") (r "^0.22.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0icvz0b8v8p0a2qpqbcbqrda1dghgl4q6rqfghnn2wwnv0l0i89s")))

(define-public crate-swc_ecma_transforms_module-0.126.3 (c (n "swc_ecma_transforms_module") (v "0.126.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.20.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.81.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.32.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.32.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.110.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.96.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.90.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.67.0") (d #t) (k 0)) (d (n "testing") (r "^0.22.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0pisgjbsfqd75y8jh2npfp2r642y1xdx063xin4ll4p04w19i6hb")))

(define-public crate-swc_ecma_transforms_module-0.127.0 (c (n "swc_ecma_transforms_module") (v "0.127.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.21.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.33.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.33.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.111.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.97.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.91.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.68.0") (d #t) (k 0)) (d (n "testing") (r "^0.23.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0kici19a1i5pvvqbw82qp56iafyh414krk116kxhc86icc31razw")))

(define-public crate-swc_ecma_transforms_module-0.128.0 (c (n "swc_ecma_transforms_module") (v "0.128.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.21.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.33.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.33.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.112.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.97.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.91.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.68.0") (d #t) (k 0)) (d (n "testing") (r "^0.23.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "13ci04fqvzn01c7qr88l6nm73jddxb31ijbpzc9n5p5n41hzwdv2")))

(define-public crate-swc_ecma_transforms_module-0.129.0 (c (n "swc_ecma_transforms_module") (v "0.129.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.22.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.83.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.34.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.34.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.113.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.98.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.69.0") (d #t) (k 0)) (d (n "testing") (r "^0.24.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1rjg1c8ixvzv0xi15rk6166hbmwskzdkxdxkmpm0hnnrywrrvgz9")))

(define-public crate-swc_ecma_transforms_module-0.129.1 (c (n "swc_ecma_transforms_module") (v "0.129.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.22.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.83.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.34.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.34.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.113.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.98.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.69.0") (d #t) (k 0)) (d (n "testing") (r "^0.24.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0zl1yyyvznb10zawa80crv3zs0v0rm8anbjv166006y20kinwabw")))

(define-public crate-swc_ecma_transforms_module-0.129.2 (c (n "swc_ecma_transforms_module") (v "0.129.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.22.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.83.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.34.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.34.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.113.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.98.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.69.0") (d #t) (k 0)) (d (n "testing") (r "^0.24.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "06x1j7ydwqdmbqfdfw7dpx4q9cf42kb70q8y2jx5icn3dgrqxam5")))

(define-public crate-swc_ecma_transforms_module-0.130.0 (c (n "swc_ecma_transforms_module") (v "0.130.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.23.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.84.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.35.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.35.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.111.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.97.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.114.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.99.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.93.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.70.0") (d #t) (k 0)) (d (n "testing") (r "^0.25.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0ivrdjj3637nvzp3n8d969xrzv2h47mwzkaydal7aviqq5q0x0b6")))

(define-public crate-swc_ecma_transforms_module-0.130.1 (c (n "swc_ecma_transforms_module") (v "0.130.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.23.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.84.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.35.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.35.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.111.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.97.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.114.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.99.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.93.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.70.0") (d #t) (k 0)) (d (n "testing") (r "^0.25.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0dla7vb19vv75wmxmj5y5wnyq89swpd49dvh5spzkwavq9mxx4mv")))

(define-public crate-swc_ecma_transforms_module-0.131.0 (c (n "swc_ecma_transforms_module") (v "0.131.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.23.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.84.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.35.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.35.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.111.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.97.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.114.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.99.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.93.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.70.0") (d #t) (k 0)) (d (n "testing") (r "^0.25.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1q4j3ivdrkipm9ki5hi751zcrq0qr0zm0vrq5kmdy2vs4va1scz6")))

(define-public crate-swc_ecma_transforms_module-0.132.0 (c (n "swc_ecma_transforms_module") (v "0.132.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.24.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.36.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.36.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.112.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.115.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.100.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.71.0") (d #t) (k 0)) (d (n "testing") (r "^0.26.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1m2349hlh16gd9h09w84fdhhjfmv1q4m3akx7zkpjhmvsg1dzi1r")))

(define-public crate-swc_ecma_transforms_module-0.132.1 (c (n "swc_ecma_transforms_module") (v "0.132.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.24.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.36.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.36.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.112.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.115.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.100.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.71.0") (d #t) (k 0)) (d (n "testing") (r "^0.26.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0qix6yf95shfg5l7cbsg61i19ckx8nng7lzac86lxsi5v93hdj99")))

(define-public crate-swc_ecma_transforms_module-0.133.0 (c (n "swc_ecma_transforms_module") (v "0.133.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.24.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.36.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.36.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.112.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.116.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.100.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.71.0") (d #t) (k 0)) (d (n "testing") (r "^0.26.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1x0iakhw8885qsb0sa443i158gry75pn5vsssxjhzakw6wihyx00")))

(define-public crate-swc_ecma_transforms_module-0.134.0 (c (n "swc_ecma_transforms_module") (v "0.134.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.24.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.86.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.36.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.36.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.113.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.99.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.117.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.101.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.72.0") (d #t) (k 0)) (d (n "testing") (r "^0.26.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1pgk5yygp64fins7xzbpfzyi9azpivsgk0hwsz803iisxb9s5kvq")))

(define-public crate-swc_ecma_transforms_module-0.135.0 (c (n "swc_ecma_transforms_module") (v "0.135.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.1.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.24.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.87.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.36.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.36.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.114.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.100.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.118.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.102.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.73.0") (d #t) (k 0)) (d (n "testing") (r "^0.26.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "10inh25wzpm7grvx74lsc3fxbwa7q99533m4jxk8pifwlylyca1k")))

(define-public crate-swc_ecma_transforms_module-0.136.0 (c (n "swc_ecma_transforms_module") (v "0.136.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.3.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.2.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.25.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.88.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.37.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.37.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.115.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.101.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.119.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.103.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.97.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.74.0") (d #t) (k 0)) (d (n "testing") (r "^0.27.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0bb0pxkv1xk33a362rb67z9n0dw952xh7bs3r92hah02hgc69hmd")))

(define-public crate-swc_ecma_transforms_module-0.137.0 (c (n "swc_ecma_transforms_module") (v "0.137.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.3.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.2.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.26.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.89.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.38.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.38.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.116.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.102.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.120.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.104.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.75.0") (d #t) (k 0)) (d (n "testing") (r "^0.28.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0zcwy5zhwwqniip3p9gr66bn02pka2mp2hbksmyda819qax7hhdd")))

(define-public crate-swc_ecma_transforms_module-0.137.1 (c (n "swc_ecma_transforms_module") (v "0.137.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_cached") (r "^0.2.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.26.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.89.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.38.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.38.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.116.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.102.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.120.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.104.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.75.0") (d #t) (k 0)) (d (n "testing") (r "^0.28.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0bbl2cwhyp0cjkcbmkrfgp5w7a8qd5ip70zbxjp87y5ww8if25h4")))

(define-public crate-swc_ecma_transforms_module-0.137.2 (c (n "swc_ecma_transforms_module") (v "0.137.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_cached") (r "^0.2.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.26.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.89.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.38.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.38.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.116.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.102.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.120.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.104.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.98.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.75.0") (d #t) (k 0)) (d (n "testing") (r "^0.28.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1rm12azm3ipghiq3j516gb11iqhs3fjh9j8q2clxcwlflycriss5")))

(define-public crate-swc_ecma_transforms_module-0.138.0 (c (n "swc_ecma_transforms_module") (v "0.138.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.117.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.121.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.105.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.99.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.0") (d #t) (k 0)) (d (n "testing") (r "^0.29.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "06xhj7v0wgyd2z1yiiqrv8383ngfizjwnqmjklz6lsxig2qgk7qi")))

(define-public crate-swc_ecma_transforms_module-0.138.1 (c (n "swc_ecma_transforms_module") (v "0.138.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.1") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.117.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.103.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.121.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.105.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.99.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.2") (d #t) (k 0)) (d (n "testing") (r "^0.29.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0zzgfm51dm8hndqc6p3pjabq63ndpm1xxcswiwr34i4q8cdvcq9z")))

(define-public crate-swc_ecma_transforms_module-0.139.0 (c (n "swc_ecma_transforms_module") (v "0.139.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.1") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.117.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.103.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.122.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.105.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.99.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.2") (d #t) (k 0)) (d (n "testing") (r "^0.29.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "10mq6bj662pgmfs9zh30mgyns619yckr9cfd39n39f74bwv47gm7")))

(define-public crate-swc_ecma_transforms_module-0.139.1 (c (n "swc_ecma_transforms_module") (v "0.139.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.3") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.2") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.2") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.117.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.122.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.105.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.99.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.3") (d #t) (k 0)) (d (n "testing") (r "^0.29.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0nsnkfzc6w19v1agrxplj8dwz7jhmlb8kpjdp6f1dlff2hzigc6a")))

(define-public crate-swc_ecma_transforms_module-0.139.2 (c (n "swc_ecma_transforms_module") (v "0.139.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.4") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.117.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.103.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.122.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.105.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.99.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.4") (d #t) (k 0)) (d (n "testing") (r "^0.29.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1a8pgx1zgnzaky5z8dmfi5jmvj87xbqrs4pmgis68c1q3rq9wm7y")))

(define-public crate-swc_ecma_transforms_module-0.139.3 (c (n "swc_ecma_transforms_module") (v "0.139.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.117.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.103.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.122.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.105.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.99.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1i613ilimcbf5358kl6hnp6yaj83gwr7nbffya82qr7cdpfn4rca")))

(define-public crate-swc_ecma_transforms_module-0.139.4 (c (n "swc_ecma_transforms_module") (v "0.139.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.7") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.117.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.103.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.122.6") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.105.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.99.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0vxyx7dsr3q1xx85z2hrqwa8fh2j2rgsw5x8ipzmy2pfy2hgc2wk")))

(define-public crate-swc_ecma_transforms_module-0.140.0 (c (n "swc_ecma_transforms_module") (v "0.140.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.7") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.118.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.123.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.106.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.100.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1z653f9f10hvw878g2hi26srznv7lfq8ms7sm50gssw0k23b621g")))

(define-public crate-swc_ecma_transforms_module-0.141.0 (c (n "swc_ecma_transforms_module") (v "0.141.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.7") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.118.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.124.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.106.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.100.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0idkdarmp2m2ylnib2zccxhimsr52sj6npx5g1y79i324m1073zy")))

(define-public crate-swc_ecma_transforms_module-0.142.0 (c (n "swc_ecma_transforms_module") (v "0.142.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.118.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.125.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.106.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.100.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0b9l5jfm7j5afd0pziiisjz5pj35mp9d3vhswkikm91w45vq1kkb")))

(define-public crate-swc_ecma_transforms_module-0.143.0 (c (n "swc_ecma_transforms_module") (v "0.143.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.118.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.126.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.106.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.100.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0cw94b8n68d62l9bzrab3p4hlpjijbb8cqkjdildala4cqg333zb")))

(define-public crate-swc_ecma_transforms_module-0.144.0 (c (n "swc_ecma_transforms_module") (v "0.144.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.118.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.127.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.106.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.100.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0nh39yvkbjlph6h0gywymigg0qwzsclyqd0a6bm8igyvxdr5dapf")))

(define-public crate-swc_ecma_transforms_module-0.145.0 (c (n "swc_ecma_transforms_module") (v "0.145.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.118.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.105.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.128.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.107.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.100.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0g3w0mcgrb7299zz5svya4qnppaj7njbs30k9d8p67g9i7n0fb2w")))

(define-public crate-swc_ecma_transforms_module-0.146.0 (c (n "swc_ecma_transforms_module") (v "0.146.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.118.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.106.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.129.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.108.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.101.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1cwzipk84hsjfg52y5c25slammh896j3nflb3lciw8ax2p58x7g3")))

(define-public crate-swc_ecma_transforms_module-0.146.1 (c (n "swc_ecma_transforms_module") (v "0.146.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.118.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.106.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.129.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.108.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.101.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.7") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1r07hdq4kd4xyqw8bgymfjsqlfawamk6v93qdb41flqvas38cipk")))

(define-public crate-swc_ecma_transforms_module-0.146.2 (c (n "swc_ecma_transforms_module") (v "0.146.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.118.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.106.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.129.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.108.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.101.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.7") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1j7h7dq2cdn879za85mbv11bkpha74biqp5p69r2md33izvmh75q")))

(define-public crate-swc_ecma_transforms_module-0.146.3 (c (n "swc_ecma_transforms_module") (v "0.146.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.14") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.18") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.5") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.5") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.118.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.106.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.129.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.108.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.101.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.8") (d #t) (k 0)) (d (n "testing") (r "^0.29.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1r6vhp42mr9l9v1r13qh38jimk8bdrrdb228hf5gcb0a34lvh4s1")))

(define-public crate-swc_ecma_transforms_module-0.146.4 (c (n "swc_ecma_transforms_module") (v "0.146.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.19") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.6") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.6") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.118.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.106.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.129.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.108.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.101.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.9") (d #t) (k 0)) (d (n "testing") (r "^0.29.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "19im9h0lfbcf5m4d7mfr2rvvpgx9ma4by32lsxbxqk7x0czy2bl1")))

(define-public crate-swc_ecma_transforms_module-0.146.5 (c (n "swc_ecma_transforms_module") (v "0.146.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.20") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.7") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.7") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.118.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.106.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.129.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.108.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.101.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.10") (d #t) (k 0)) (d (n "testing") (r "^0.29.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "08aq5hpdi4z7c150fyqhwpcbx3xlv8hz64f5kbjb3i90nc36zryp")))

(define-public crate-swc_ecma_transforms_module-0.147.0 (c (n "swc_ecma_transforms_module") (v "0.147.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.20") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.7") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.7") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.118.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.130.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.109.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.101.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.10") (d #t) (k 0)) (d (n "testing") (r "^0.29.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1v7xik93ikdnq2ic31zarpw4zjbvwwy4wv7zmkfw0k2ig4000sn0")))

(define-public crate-swc_ecma_transforms_module-0.148.0 (c (n "swc_ecma_transforms_module") (v "0.148.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.11") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.7") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.119.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.131.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.110.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.102.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.0") (d #t) (k 0)) (d (n "testing") (r "^0.30.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "09b4bmrfn4clzq1939alic5mhdhj3mc0a1cp8rikis8zj4wrpgcx")))

(define-public crate-swc_ecma_transforms_module-0.148.1 (c (n "swc_ecma_transforms_module") (v "0.148.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.11") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.7") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.119.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.108.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.131.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.110.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.102.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.0") (d #t) (k 0)) (d (n "testing") (r "^0.30.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0cmzdrkirkmqyig0wgl8r9i73xskm3vifx2micrzgfh9wcqsx0wp")))

(define-public crate-swc_ecma_transforms_module-0.148.2 (c (n "swc_ecma_transforms_module") (v "0.148.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.11") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.7") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.119.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.108.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.131.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.110.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.102.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.0") (d #t) (k 0)) (d (n "testing") (r "^0.30.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "021pvyl1k64is0gv7gcfbbapcvyb8vqxabmsdwwvyzjagmvppg7c")))

(define-public crate-swc_ecma_transforms_module-0.148.3 (c (n "swc_ecma_transforms_module") (v "0.148.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.12") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.8") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.1") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.119.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.108.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.131.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.110.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.102.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.1") (d #t) (k 0)) (d (n "testing") (r "^0.30.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1sqdq4i5ji0qc08lzcad26ah5hkk2jg81h8p11bpp1jf0d290h6i")))

(define-public crate-swc_ecma_transforms_module-0.148.4 (c (n "swc_ecma_transforms_module") (v "0.148.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.12") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.8") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.1") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.119.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.108.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.131.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.110.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.102.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.1") (d #t) (k 0)) (d (n "testing") (r "^0.30.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0c546i4859ixs1h6i0bqva1yzz2bdp959viqhcya956syb7wb1vb")))

(define-public crate-swc_ecma_transforms_module-0.148.5 (c (n "swc_ecma_transforms_module") (v "0.148.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.12") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.8") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.1") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.119.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.108.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.131.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.110.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.102.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.1") (d #t) (k 0)) (d (n "testing") (r "^0.30.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1xy974xp7mdhsjgc8k8277siqxjqafchhywzs0cr878w1a40d4v1")))

(define-public crate-swc_ecma_transforms_module-0.148.6 (c (n "swc_ecma_transforms_module") (v "0.148.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.12") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.8") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.1") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.119.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.108.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.131.6") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.110.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.102.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.1") (d #t) (k 0)) (d (n "testing") (r "^0.30.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1yy5liyn4257f25llkqz3g84xc0isfi999s7lxw5yj46m3whf1i9")))

(define-public crate-swc_ecma_transforms_module-0.148.7 (c (n "swc_ecma_transforms_module") (v "0.148.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.13") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.9") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.2") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.2") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.119.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.108.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.131.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.110.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.102.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.2") (d #t) (k 0)) (d (n "testing") (r "^0.30.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "13azihakk1fwx3pnjg6f3imshwyagh37i9s01wjyzir0j70r4sga")))

(define-public crate-swc_ecma_transforms_module-0.148.8 (c (n "swc_ecma_transforms_module") (v "0.148.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.13") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.9") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.2") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.2") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.119.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.108.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.131.8") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.110.7") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.102.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.2") (d #t) (k 0)) (d (n "testing") (r "^0.30.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1wv51s8r8cy1j4ygxf31c3ybpgfsqq7q9ipp71iy8wbwnx01fw55")))

(define-public crate-swc_ecma_transforms_module-0.148.9 (c (n "swc_ecma_transforms_module") (v "0.148.9") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.13") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.9") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.2") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.2") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.119.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.108.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.131.9") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.110.8") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.102.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.2") (d #t) (k 0)) (d (n "testing") (r "^0.30.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ax2jwlxpcvgxm73c0hdp9rlflnz50glvdsj5qmp18b9g4k8yxfh")))

(define-public crate-swc_ecma_transforms_module-0.148.10 (c (n "swc_ecma_transforms_module") (v "0.148.10") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.10") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.119.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.108.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.131.10") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.110.9") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.102.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.3") (d #t) (k 0)) (d (n "testing") (r "^0.30.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0mmxwj754j0pxl04xcrpyd3g0a87d42hkqi2rycvs9wnpk32k3r5")))

(define-public crate-swc_ecma_transforms_module-0.148.11 (c (n "swc_ecma_transforms_module") (v "0.148.11") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.10") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.119.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.108.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.131.10") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.110.9") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.102.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.3") (d #t) (k 0)) (d (n "testing") (r "^0.30.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "161wv48dp4svy01gs5x5bsdgflwsxg19n1vxbsijan51kmra5biv")))

(define-public crate-swc_ecma_transforms_module-0.148.12 (c (n "swc_ecma_transforms_module") (v "0.148.12") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.10") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.119.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.108.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.131.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.110.10") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.102.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.3") (d #t) (k 0)) (d (n "testing") (r "^0.30.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0y8y38mh819dns9cvar1q5knjz4vnpcn23srzifnvis9ia834v77")))

(define-public crate-swc_ecma_transforms_module-0.148.13 (c (n "swc_ecma_transforms_module") (v "0.148.13") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.10") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.119.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.108.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.131.12") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.110.11") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.102.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.3") (d #t) (k 0)) (d (n "testing") (r "^0.30.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1k06245dddhncadyqbwajhrcmf2g3q4rbknrbjhf35gf2mjsklsm")))

(define-public crate-swc_ecma_transforms_module-0.148.14 (c (n "swc_ecma_transforms_module") (v "0.148.14") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.10") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.119.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.108.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.131.13") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.110.12") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.102.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.4") (d #t) (k 0)) (d (n "testing") (r "^0.30.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1icx1cbp988qqhmdbiq8zrzlnm3pdhqfb92gczi40rqn2rna8n4x")))

(define-public crate-swc_ecma_transforms_module-0.148.15 (c (n "swc_ecma_transforms_module") (v "0.148.15") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.10") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.5") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.5") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.119.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.108.13") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.131.14") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.110.13") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.102.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "021psa1w114m0a3mf9amdwssywqcpzkg7bpypnxf6vz60fis67vg")))

(define-public crate-swc_ecma_transforms_module-0.148.16 (c (n "swc_ecma_transforms_module") (v "0.148.16") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.10") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.5") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.5") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.119.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.108.13") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.131.15") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.110.13") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.102.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0b9rfzj8f1zzxmvbl2whm0g4qhv2y79gw8g4m2iw3y77b9361dn9")))

(define-public crate-swc_ecma_transforms_module-0.148.17 (c (n "swc_ecma_transforms_module") (v "0.148.17") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.10") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.6") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.6") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.119.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.108.14") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.131.16") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.110.14") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.102.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.6") (d #t) (k 0)) (d (n "testing") (r "^0.30.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0vf1ks2i963pcfaa668z4xqzkk269zhab650dq2b4iwp851p1wpk")))

(define-public crate-swc_ecma_transforms_module-0.148.18 (c (n "swc_ecma_transforms_module") (v "0.148.18") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.10") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.7") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.7") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.7") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.119.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.108.15") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.131.17") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.110.15") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.102.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.7") (d #t) (k 0)) (d (n "testing") (r "^0.30.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0xa2k7vl9d77x9s97dqb3ck6c7935jpx0wx7qd82sybsv8y4yfxv")))

(define-public crate-swc_ecma_transforms_module-0.148.19 (c (n "swc_ecma_transforms_module") (v "0.148.19") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.10") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.7") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.7") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.7") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.119.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.108.16") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.131.18") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.110.16") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.102.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.7") (d #t) (k 0)) (d (n "testing") (r "^0.30.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ld37y2inrgp9hdmapgmkwygqc84hxq4gipinznzks71aq7a57j6")))

(define-public crate-swc_ecma_transforms_module-0.148.20 (c (n "swc_ecma_transforms_module") (v "0.148.20") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.15") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.11") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.8") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.8") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.119.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.108.17") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.131.19") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.110.17") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.102.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.8") (d #t) (k 0)) (d (n "testing") (r "^0.30.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0i8wbvglbk6qwycyh60sn49xhnsdr8zqs7ka89ja2g744g9rvr74")))

(define-public crate-swc_ecma_transforms_module-0.149.0 (c (n "swc_ecma_transforms_module") (v "0.149.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.15") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.11") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.8") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.8") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.120.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.132.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.111.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.78.0") (d #t) (k 0)) (d (n "testing") (r "^0.30.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ss4shixvc6cxh9mwfwk828czmz228avvnim2b4jqgw3f5jp2nny")))

(define-public crate-swc_ecma_transforms_module-0.149.1 (c (n "swc_ecma_transforms_module") (v "0.149.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.15") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.11") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.8") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.8") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.120.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.132.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.111.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.78.0") (d #t) (k 0)) (d (n "testing") (r "^0.30.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0p1lclwa7byjns4wjn92mcikjas0kz8s8rn3x217ncvzla0gyjiy")))

(define-public crate-swc_ecma_transforms_module-0.149.2 (c (n "swc_ecma_transforms_module") (v "0.149.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.16") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.12") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.92.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.9") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.9") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.120.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.132.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.111.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.103.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.78.2") (d #t) (k 0)) (d (n "testing") (r "^0.30.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0bcgnwryd5fvspaqfis86ii92c2y1bpzx5znh9sh2jc84nyz15q0")))

(define-public crate-swc_ecma_transforms_module-0.150.0 (c (n "swc_ecma_transforms_module") (v "0.150.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.13") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.93.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.10") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.10") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.121.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.133.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.112.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.79.0") (d #t) (k 0)) (d (n "testing") (r "^0.30.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0h4aavy8x300rbybf8r60slpz4dwsz2hqj310r5chafwxz9h9cn1")))

(define-public crate-swc_ecma_transforms_module-0.151.0 (c (n "swc_ecma_transforms_module") (v "0.151.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.13") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.134.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.113.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.0") (d #t) (k 0)) (d (n "testing") (r "^0.31.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0n7ssrcmn8baspbg285j8d41428mb4mxk1f6y0m038jwfnkyjwsk")))

(define-public crate-swc_ecma_transforms_module-0.151.1 (c (n "swc_ecma_transforms_module") (v "0.151.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.13") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.134.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.113.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.0") (d #t) (k 0)) (d (n "testing") (r "^0.31.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0frkvd58pv06hj32wn2iyx0gi0bq01a0qk63p1isysm6zssnsijk")))

(define-public crate-swc_ecma_transforms_module-0.151.2 (c (n "swc_ecma_transforms_module") (v "0.151.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.13") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.1") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.134.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.113.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "19kn3r52fc4d5hjrx5y0d4llg81cq6f7qhdma52j77cwpzm5l0b3")))

(define-public crate-swc_ecma_transforms_module-0.151.3 (c (n "swc_ecma_transforms_module") (v "0.151.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.13") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.1") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.134.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.113.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "06m3vfwz595ha2v8hgabdjmkwd38l10nksxdkvn06jmqbcyvzb7s")))

(define-public crate-swc_ecma_transforms_module-0.151.4 (c (n "swc_ecma_transforms_module") (v "0.151.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.13") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.1") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.134.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.113.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1cg482gx4y922w929qdj2739vylg0rvnymph4lmqwalvwzvb7pcb")))

(define-public crate-swc_ecma_transforms_module-0.151.5 (c (n "swc_ecma_transforms_module") (v "0.151.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.13") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.1") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.134.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.113.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ji3l2vqsc55i1wsb2wc6pxinwsdmd8sk986hrnhbngcfbwfsc71")))

(define-public crate-swc_ecma_transforms_module-0.151.6 (c (n "swc_ecma_transforms_module") (v "0.151.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.13") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.2") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.2") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.134.6") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.113.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.2") (d #t) (k 0)) (d (n "testing") (r "^0.31.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0dygc6937x4r5s5cdcm797i261zigj6dyqpvb93qjdsw6cmhazhb")))

(define-public crate-swc_ecma_transforms_module-0.151.7 (c (n "swc_ecma_transforms_module") (v "0.151.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.13") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.2") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.2") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.134.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.113.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.2") (d #t) (k 0)) (d (n "testing") (r "^0.31.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "10ndhs0rbcj0yd2j2nhi2q5dma64qg8k684syn980lh1hacvms72")))

(define-public crate-swc_ecma_transforms_module-0.151.8 (c (n "swc_ecma_transforms_module") (v "0.151.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.14") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.134.8") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.113.7") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.3") (d #t) (k 0)) (d (n "testing") (r "^0.31.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1viw08g7mb9p1gqbhbny48k6dbn1sa5yjsrm1272b2bv0k837pd7")))

(define-public crate-swc_ecma_transforms_module-0.151.9 (c (n "swc_ecma_transforms_module") (v "0.151.9") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.14") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.134.9") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.113.8") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.3") (d #t) (k 0)) (d (n "testing") (r "^0.31.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0smimpsgvpz2142pf4g6038l4jp187zqgm9wb4jgrj9dq7z1g60z")))

(define-public crate-swc_ecma_transforms_module-0.151.10 (c (n "swc_ecma_transforms_module") (v "0.151.10") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.14") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.134.10") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.113.9") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.3") (d #t) (k 0)) (d (n "testing") (r "^0.31.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "12ss4dw380id3xj25wmaq2053i35c3dm99028m1p4033hj0z2f6n")))

(define-public crate-swc_ecma_transforms_module-0.151.11 (c (n "swc_ecma_transforms_module") (v "0.151.11") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.14") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.134.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.113.10") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.3") (d #t) (k 0)) (d (n "testing") (r "^0.31.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1wc8zghng9gii2xafrji7gd3pyf70pn9z20a58gj5gk09gpwk7jq")))

(define-public crate-swc_ecma_transforms_module-0.151.12 (c (n "swc_ecma_transforms_module") (v "0.151.12") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.14") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.134.12") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.113.11") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.4") (d #t) (k 0)) (d (n "testing") (r "^0.31.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0crjxw2vb40sf2nahcs5cqsxzhzqaq907cwcs8pxqs9gf1j8p63v")))

(define-public crate-swc_ecma_transforms_module-0.152.0 (c (n "swc_ecma_transforms_module") (v "0.152.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.14") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.135.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.113.11") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.4") (d #t) (k 0)) (d (n "testing") (r "^0.31.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0202nnri0zvfhryc66qc3hgpzql7h6c1pfyldgi2rb4lf2syh97d")))

(define-public crate-swc_ecma_transforms_module-0.152.1 (c (n "swc_ecma_transforms_module") (v "0.152.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.14") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.135.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.113.11") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.4") (d #t) (k 0)) (d (n "testing") (r "^0.31.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0njpfrp9fdjzk19azdar980n7xsyfjk7m2z9g5b18cdrya5vprn9")))

(define-public crate-swc_ecma_transforms_module-0.152.2 (c (n "swc_ecma_transforms_module") (v "0.152.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.14") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.135.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.113.11") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.4") (d #t) (k 0)) (d (n "testing") (r "^0.31.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1yr7abhf70z5gshmj37ywraqp4fvqy79hcf70byv4k35dn5sw0qz")))

(define-public crate-swc_ecma_transforms_module-0.152.3 (c (n "swc_ecma_transforms_module") (v "0.152.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.14") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.13") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.135.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.113.12") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.4") (d #t) (k 0)) (d (n "testing") (r "^0.31.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0b7mkk9l4asrfsc4cqv4z4hl3af229dzsv10mlmqaj7cxgiwgx5g")))

(define-public crate-swc_ecma_transforms_module-0.152.4 (c (n "swc_ecma_transforms_module") (v "0.152.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.14") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.5") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.5") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.14") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.135.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.113.13") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1g4zay499nn8k8ppsxklkab8pdg7yj8gx770q8svsshnka6nhhi5")))

(define-public crate-swc_ecma_transforms_module-0.153.0 (c (n "swc_ecma_transforms_module") (v "0.153.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.14") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.5") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.5") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.14") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "16bjw9d33idhnkhc2j2ci3b97yzg1z53zdzzpia7j6z607wy0cz7")))

(define-public crate-swc_ecma_transforms_module-0.153.1 (c (n "swc_ecma_transforms_module") (v "0.153.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.14") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.5") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.5") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.15") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1l45v65r01dhvjgllafy9027mbpjpq78ws0jv777xz61z3cpdjcj")))

(define-public crate-swc_ecma_transforms_module-0.153.2 (c (n "swc_ecma_transforms_module") (v "0.153.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.14") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.5") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.5") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.16") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.6") (d #t) (k 0)) (d (n "testing") (r "^0.31.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "07mzgnmcqixfvnkqibwv4n7ysb2i0yip6m2rzjmifqma5jfc67x8")))

(define-public crate-swc_ecma_transforms_module-0.153.3 (c (n "swc_ecma_transforms_module") (v "0.153.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.6") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.6") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.17") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.7") (d #t) (k 0)) (d (n "testing") (r "^0.31.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "12gihl8dm3w5q04941nh22ry1l6vb8iq1cif3xa5frr1vx8jll4h")))

(define-public crate-swc_ecma_transforms_module-0.153.4 (c (n "swc_ecma_transforms_module") (v "0.153.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.6") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.6") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.18") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.7") (d #t) (k 0)) (d (n "testing") (r "^0.31.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1sj603h8069m0d2vsgnsj2lrq0vc9xpjkirjhq41bj0d659ls2ww")))

(define-public crate-swc_ecma_transforms_module-0.153.5 (c (n "swc_ecma_transforms_module") (v "0.153.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.19") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.7") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.7") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.19") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1sk85kczr8s50vbjwigj3p77mxi37s6zwy8jsb1z0sd0i681jm7r")))

(define-public crate-swc_ecma_transforms_module-0.153.6 (c (n "swc_ecma_transforms_module") (v "0.153.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.19") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.7") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.7") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.20") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.6") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.9") (d #t) (k 0)) (d (n "testing") (r "^0.31.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1z278kljqimz9c1nhypn2q7xmy32l2sry29mz79r53w7kw9g6i7y")))

(define-public crate-swc_ecma_transforms_module-0.153.7 (c (n "swc_ecma_transforms_module") (v "0.153.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.19") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.7") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.7") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.21") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.7") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.9") (d #t) (k 0)) (d (n "testing") (r "^0.31.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "185vmifcj16vmks9pphj0zgzy1nr2326zwavwz12191qfn1bn99w")))

(define-public crate-swc_ecma_transforms_module-0.153.8 (c (n "swc_ecma_transforms_module") (v "0.153.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.20") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.7") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.8") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.8") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.22") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.8") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.8") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.15") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.10") (d #t) (k 0)) (d (n "testing") (r "^0.31.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "119ypjbd8znml1i06b61lldvmg1j4wbkq67mismgrwi98cavfa2y")))

(define-public crate-swc_ecma_transforms_module-0.153.9 (c (n "swc_ecma_transforms_module") (v "0.153.9") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.23") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.9") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.9") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.16") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0gpd9rfil45kpl4fj71as9dikmzmm6avr0fj5ir6py29hl6psz9s")))

(define-public crate-swc_ecma_transforms_module-0.153.10 (c (n "swc_ecma_transforms_module") (v "0.153.10") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.24") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.10") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.10") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.17") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "199gx5lm41l02gvrhanfg4x10fwm9p56kf7xk5syqj1zqwa2jihv")))

(define-public crate-swc_ecma_transforms_module-0.153.11 (c (n "swc_ecma_transforms_module") (v "0.153.11") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.25") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.11") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.17") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0nw3gyinzmdw9xw89zfpp2la8iqkrp4xnrzg29p45cfazbg78wnz")))

(define-public crate-swc_ecma_transforms_module-0.153.12 (c (n "swc_ecma_transforms_module") (v "0.153.12") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.25") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.11") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.17") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "006dvanzmdfa98h5y2sxzl8jszbln04gw1ncsfj2q1c72n64rivl")))

(define-public crate-swc_ecma_transforms_module-0.153.13 (c (n "swc_ecma_transforms_module") (v "0.153.13") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.13") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.26") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.12") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.12") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.18") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0xqd3bj8rcp18n74yd98a40k6nbfwscjhhq6gdx4a8byrhb29y49")))

(define-public crate-swc_ecma_transforms_module-0.153.14 (c (n "swc_ecma_transforms_module") (v "0.153.14") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.13") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.26") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.13") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.12") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.18") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "03n917vjf2sdzaignnqcrmldy92zqx5zkv16yk6m9qm7dxplwyca")))

(define-public crate-swc_ecma_transforms_module-0.153.15 (c (n "swc_ecma_transforms_module") (v "0.153.15") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.22") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.10") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.10") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.14") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.27") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.14") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.13") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.19") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.12") (d #t) (k 0)) (d (n "testing") (r "^0.31.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "10069rlyg0kr7i38nkyh1w5maiqpby4lpm8x7vz9znkb9szx5z25")))

(define-public crate-swc_ecma_transforms_module-0.153.16 (c (n "swc_ecma_transforms_module") (v "0.153.16") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.15") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.28") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.15") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.14") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.20") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.13") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0ixzzwcng9cld4x301bn63gf0kghz60ywhdzbhzapc5xxy6kh2aw")))

(define-public crate-swc_ecma_transforms_module-0.153.17 (c (n "swc_ecma_transforms_module") (v "0.153.17") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.16") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.29") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.16") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.15") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.21") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.13") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1n43l8892df7is0ic7cgqxccmha2v37zmv4xna21lyqbxv943jak")))

(define-public crate-swc_ecma_transforms_module-0.153.18 (c (n "swc_ecma_transforms_module") (v "0.153.18") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.17") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.30") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.17") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.16") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.22") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.13") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "00zq1cw1qy4f4a2fs8g2n71w91dl9b5vdavw8y87l97kcxhg4211")))

(define-public crate-swc_ecma_transforms_module-0.153.19 (c (n "swc_ecma_transforms_module") (v "0.153.19") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.17") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.31") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.18") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.17") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.22") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.13") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "051axymaaxmd1brc23qr5pmbl8jkxzgw7bk7w07pyxzp9cwxawqv")))

(define-public crate-swc_ecma_transforms_module-0.153.20 (c (n "swc_ecma_transforms_module") (v "0.153.20") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.18") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.32") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.19") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.18") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.23") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.14") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1p8qpnjagds1nsz36jajkwr18d6a88axa5q0l486a5r7b16ahz96")))

(define-public crate-swc_ecma_transforms_module-0.153.21 (c (n "swc_ecma_transforms_module") (v "0.153.21") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.19") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.33") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.20") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.19") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.24") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.14") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1jnvgr0snd6kdhg5kh97x9khf982chwqrsp0d7z8zqlhm5z8i2y7")))

(define-public crate-swc_ecma_transforms_module-0.153.22 (c (n "swc_ecma_transforms_module") (v "0.153.22") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.20") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.34") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.21") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.20") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.25") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.14") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "10qm2xhjrp9p8bw0lfjb7kw9px449yxd4bfxnyaa60f6gl7akzd8")))

(define-public crate-swc_ecma_transforms_module-0.153.23 (c (n "swc_ecma_transforms_module") (v "0.153.23") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.11") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.12") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.12") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.21") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.35") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.22") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.21") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.26") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.15") (d #t) (k 0)) (d (n "testing") (r "^0.31.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0pzrj0wa40avciy6qaaxh5n2dw25rj54mh4nngcx03zhxchv7qr0")))

(define-public crate-swc_ecma_transforms_module-0.153.24 (c (n "swc_ecma_transforms_module") (v "0.153.24") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.16") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.22") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.36") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.23") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.22") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.27") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.16") (d #t) (k 0)) (d (n "testing") (r "^0.31.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0sbp2k2jcqm0fipxxfn8v13yqm0xfdqfk611iy57i5vkl68y9lym")))

(define-public crate-swc_ecma_transforms_module-0.153.25 (c (n "swc_ecma_transforms_module") (v "0.153.25") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.16") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.22") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.37") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.24") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.23") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.27") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.16") (d #t) (k 0)) (d (n "testing") (r "^0.31.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "05jqkxy8xqddv3p0k0rza622c24hhk7r35y1xmd0j7w1hvgycwpp")))

(define-public crate-swc_ecma_transforms_module-0.153.26 (c (n "swc_ecma_transforms_module") (v "0.153.26") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.23") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.38") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.25") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.24") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "191wy88a3irr1w0mjgdgffrzpq7jcb12d03dvm3gd3mr3n3zsw5m")))

(define-public crate-swc_ecma_transforms_module-0.153.27 (c (n "swc_ecma_transforms_module") (v "0.153.27") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.23") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.38") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.26") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.24") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0m0ls4zhwbpxijdljrw97lfq7avnbhj05pywn4xqnag6175da65w")))

(define-public crate-swc_ecma_transforms_module-0.153.28 (c (n "swc_ecma_transforms_module") (v "0.153.28") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.23") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.39") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.27") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.25") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0xdi5bxz1rsglhcx7659mqyrz7dkv29g54zdln9ym617nr8wlwa3")))

(define-public crate-swc_ecma_transforms_module-0.153.29 (c (n "swc_ecma_transforms_module") (v "0.153.29") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.23") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.40") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.28") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.26") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1d5k9dmqi6mjdjsxiz4b4idg95743qp8aa9n139v71kbjskmc4d7")))

(define-public crate-swc_ecma_transforms_module-0.153.30 (c (n "swc_ecma_transforms_module") (v "0.153.30") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.24") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.41") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.29") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.27") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "10jpxa72p53dcaiq79b10my0cw0k4da9c7fv4yrcbfh16879dgpp")))

(define-public crate-swc_ecma_transforms_module-0.153.31 (c (n "swc_ecma_transforms_module") (v "0.153.31") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.24") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.41") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.30") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.27") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "12fm9iq0b084wdkjkn2nc1almj5z0dda2365irivfwl0rb6w4p7j")))

(define-public crate-swc_ecma_transforms_module-0.153.32 (c (n "swc_ecma_transforms_module") (v "0.153.32") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.24") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.42") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.31") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.28") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0w0x6gzkvjxccf1h9zca163v8xnx79gxi1mpc4n9m59i1wfr3vj2")))

(define-public crate-swc_ecma_transforms_module-0.153.33 (c (n "swc_ecma_transforms_module") (v "0.153.33") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.24") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.42") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.32") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.28") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0i3xssp9m3hm4bh4kbq127yjm6p7z9v5hcbcz0r42k3dd9qr92jg")))

(define-public crate-swc_ecma_transforms_module-0.153.34 (c (n "swc_ecma_transforms_module") (v "0.153.34") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.24") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.42") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.33") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.28") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0pd94ni8kz8q1zxj33kyxw7ariby5ckv0iz8mz9r9n0q4j3xcxrw")))

(define-public crate-swc_ecma_transforms_module-0.153.35 (c (n "swc_ecma_transforms_module") (v "0.153.35") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.24") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.42") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.34") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.28") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1v5kchsx0lwxp1f8kgw7n0d7dnqn1n7kw55vmz9pr0vq3nngqyh8")))

(define-public crate-swc_ecma_transforms_module-0.153.36 (c (n "swc_ecma_transforms_module") (v "0.153.36") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.18") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.25") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.43") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.35") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.29") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.30") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.18") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0klp01ah8xrqrrj2narhwdjvdki10py6b5xkmvibkfyh97nr58r1")))

(define-public crate-swc_ecma_transforms_module-0.153.37 (c (n "swc_ecma_transforms_module") (v "0.153.37") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.18") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.25") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.44") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.36") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.30") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.30") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.18") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1casclbcmr9jq7xzx9vl8fmazksr10vc8nlg9193db40if6q0d27")))

(define-public crate-swc_ecma_transforms_module-0.153.38 (c (n "swc_ecma_transforms_module") (v "0.153.38") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.18") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.25") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.45") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.37") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.31") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.31") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.18") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0y712gvjwf53vwvhiv8rw1fb8a7fc5y007an9mkddvwx1l1ih02k")))

(define-public crate-swc_ecma_transforms_module-0.153.39 (c (n "swc_ecma_transforms_module") (v "0.153.39") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.46") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.38") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.32") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.32") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1bx6i31id08iaf4jbrpb96x1ygar8y7qbalb3x1a3fry60rv94v4")))

(define-public crate-swc_ecma_transforms_module-0.153.40 (c (n "swc_ecma_transforms_module") (v "0.153.40") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.47") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.39") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.33") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.33") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1cdsdiqqxnzd2msp429gs5d8ymvldzwm8kqlpx4b9vz6s7hx40q4")))

(define-public crate-swc_ecma_transforms_module-0.153.41 (c (n "swc_ecma_transforms_module") (v "0.153.41") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.47") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.40") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.33") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.33") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "150h4pi6xqnii2r90ly7hpxhqjcym2kx5p0nwb78yp35ffxzpyj8")))

(define-public crate-swc_ecma_transforms_module-0.153.42 (c (n "swc_ecma_transforms_module") (v "0.153.42") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.47") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.40") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.33") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.33") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1gmcqm1mcbvvxf2zn0jys5mcaami3mmwlr0nzripn8phfciackh7")))

(define-public crate-swc_ecma_transforms_module-0.153.43 (c (n "swc_ecma_transforms_module") (v "0.153.43") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.47") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.41") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.33") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.33") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "09qaq9l8djxnbf0jhaii7c55fbx00sp377yhhf772spf6lszwxfq")))

(define-public crate-swc_ecma_transforms_module-0.153.44 (c (n "swc_ecma_transforms_module") (v "0.153.44") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.47") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.41") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.33") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.33") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "13rykbsi1pr2frlnkbd6qgjr8sjmr12sbm952drbvl68a5k907i5")))

(define-public crate-swc_ecma_transforms_module-0.153.45 (c (n "swc_ecma_transforms_module") (v "0.153.45") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.49") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.42") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.34") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.34") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0wd73rjmgkcram8pg62r0nhffjn3pbxbbspf6y5anmla8y65xrpk")))

(define-public crate-swc_ecma_transforms_module-0.153.46 (c (n "swc_ecma_transforms_module") (v "0.153.46") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.49") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.42") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.34") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.34") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "134wl7m5jvq428cjcbyap7v8icn1cwvw974916f6ccmavd6bb7ah")))

(define-public crate-swc_ecma_transforms_module-0.153.47 (c (n "swc_ecma_transforms_module") (v "0.153.47") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.27") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.50") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.43") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.35") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.35") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "10slmfirqgbblcsxl3j5ms9r973ihswi8p6i7w11kzwkn48f2pcs")))

(define-public crate-swc_ecma_transforms_module-0.153.48 (c (n "swc_ecma_transforms_module") (v "0.153.48") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.20") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.16") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.16") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.28") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.51") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.44") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.36") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.36") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.20") (d #t) (k 0)) (d (n "testing") (r "^0.31.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "14dvq71i19m0svyfvk6in3d1crx8srsm1k69w00vldqr4bsdmw70")))

(define-public crate-swc_ecma_transforms_module-0.153.49 (c (n "swc_ecma_transforms_module") (v "0.153.49") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.20") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.16") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.16") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.28") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.52") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.45") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.37") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.36") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.20") (d #t) (k 0)) (d (n "testing") (r "^0.31.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "132b9q2i41fd205wg9m2gjsxp4hrzy621f1805sf2blkv6c948zg")))

(define-public crate-swc_ecma_transforms_module-0.153.50 (c (n "swc_ecma_transforms_module") (v "0.153.50") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.20") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.16") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.16") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.29") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.53") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.46") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.38") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.37") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.20") (d #t) (k 0)) (d (n "testing") (r "^0.31.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1xq5dp049hls6ghh4xpq5n6q8j1z8yw1rljda3ijqrz5bgsknxyd")))

(define-public crate-swc_ecma_transforms_module-0.153.51 (c (n "swc_ecma_transforms_module") (v "0.153.51") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.20") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.16") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.16") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.29") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.54") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.47") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.39") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.37") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.20") (d #t) (k 0)) (d (n "testing") (r "^0.31.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "10almk3b84mv0jd09rk8snqrxblz61ljzjb3qigl0140z01v2n5n")))

(define-public crate-swc_ecma_transforms_module-0.153.52 (c (n "swc_ecma_transforms_module") (v "0.153.52") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.20") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.16") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.16") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.29") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.55") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.48") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.40") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.37") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.20") (d #t) (k 0)) (d (n "testing") (r "^0.31.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1k7x90bvx5fymaf1knjmnswks659rixk9j10m50fp1j5hr8q99by")))

(define-public crate-swc_ecma_transforms_module-0.153.53 (c (n "swc_ecma_transforms_module") (v "0.153.53") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.20") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.16") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.16") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.29") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.56") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.49") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.41") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.37") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.20") (d #t) (k 0)) (d (n "testing") (r "^0.31.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ii69qsjmkcr0zxh4crm2fpn4yknglmk9bndz95n5p9cipdm5wkq")))

(define-public crate-swc_ecma_transforms_module-0.153.54 (c (n "swc_ecma_transforms_module") (v "0.153.54") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.21") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.17") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.17") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.30") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.57") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.50") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.42") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.38") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.21") (d #t) (k 0)) (d (n "testing") (r "^0.31.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0127d3fx1mk1p5ws29rniichbrhf47wg7q4ybd94j21xnhfn633q")))

(define-public crate-swc_ecma_transforms_module-0.153.55 (c (n "swc_ecma_transforms_module") (v "0.153.55") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.21") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.17") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.17") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.31") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.58") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.51") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.43") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.39") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.21") (d #t) (k 0)) (d (n "testing") (r "^0.31.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1r7fs19nxp06b2v9nm6hvs0ry9i3b894a860kdklmgf9lz7paxpj")))

(define-public crate-swc_ecma_transforms_module-0.153.56 (c (n "swc_ecma_transforms_module") (v "0.153.56") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.21") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.17") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.17") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122.32") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.111.59") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.136.52") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.114.44") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.105.40") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.21") (d #t) (k 0)) (d (n "testing") (r "^0.31.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0km7w9yyh186kmm3pscqck1qinjx01kja4j0w9a21pi4c26d4bjw")))

(define-public crate-swc_ecma_transforms_module-0.154.0 (c (n "swc_ecma_transforms_module") (v "0.154.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.17") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.17") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.0") (d #t) (k 0)) (d (n "testing") (r "^0.31.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1y31290xn9vicr779vq4h4zjqh32r3zpqycfhjnv597ksg21gp1b")))

(define-public crate-swc_ecma_transforms_module-0.154.1 (c (n "swc_ecma_transforms_module") (v "0.154.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.17") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.17") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.0") (d #t) (k 0)) (d (n "testing") (r "^0.31.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1j6w6cgzi945cjqfzxgrjs7xigskvy1d5c71n1njf5f9zn0y7qra")))

(define-public crate-swc_ecma_transforms_module-0.154.2 (c (n "swc_ecma_transforms_module") (v "0.154.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.17") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.18") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.18") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.18") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "17hqdrn4hgvid0n02f6pifcdp62ia74apamq4hw2ybph0cv91kvv")))

(define-public crate-swc_ecma_transforms_module-0.154.3 (c (n "swc_ecma_transforms_module") (v "0.154.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.19") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.19") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.2") (d #t) (k 0)) (d (n "testing") (r "^0.31.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1m6dmjpknv1j5idvd43n2p0bls0x41dkd54c1vdmqnhrabjdqhd6")))

(define-public crate-swc_ecma_transforms_module-0.154.4 (c (n "swc_ecma_transforms_module") (v "0.154.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1pb90dm2j3027lw92d5sw3p498in8kwf86ai2253nbsds1y5l38s")))

(define-public crate-swc_ecma_transforms_module-0.154.5 (c (n "swc_ecma_transforms_module") (v "0.154.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "02y5bn8a8zk6dsxqv6y49j39impyvz333xnsqfk0kibpkckn5gl4")))

(define-public crate-swc_ecma_transforms_module-0.154.6 (c (n "swc_ecma_transforms_module") (v "0.154.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.6") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.7") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1brpisjxggyxbamg5wrr1kis5k79sd1kb2bq4j8v7xrd094s4jgx")))

(define-public crate-swc_ecma_transforms_module-0.154.7 (c (n "swc_ecma_transforms_module") (v "0.154.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.7") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ri97mq98ys2dvvf8x2qmxa2pkv3ay9nwqhdalw3i1yv3lv8z9lp")))

(define-public crate-swc_ecma_transforms_module-0.154.8 (c (n "swc_ecma_transforms_module") (v "0.154.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.8") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.8") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1w7szkbkb8627w3jd9vsb9kimgyvz0m1za1sq1dsmhpki1kvx09w")))

(define-public crate-swc_ecma_transforms_module-0.154.9 (c (n "swc_ecma_transforms_module") (v "0.154.9") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.9") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.9") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1qcgyaz7g7xsbavd3f7gs9fr2wjkqar9xrh2zc3lr6pymk91qssd")))

(define-public crate-swc_ecma_transforms_module-0.154.10 (c (n "swc_ecma_transforms_module") (v "0.154.10") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.10") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.10") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0hc6a9r44yqdbsm0s0275rak3h6zakmbqa5nx3q9pidnnbwpidda")))

(define-public crate-swc_ecma_transforms_module-0.154.11 (c (n "swc_ecma_transforms_module") (v "0.154.11") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.26") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.21") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.21") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.11") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.4") (d #t) (k 0)) (d (n "testing") (r "^0.31.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "17w4by0vx5cgiyaxrl0gi86425qrazkvz0wdr08ssnfkhckdfpsy")))

(define-public crate-swc_ecma_transforms_module-0.154.12 (c (n "swc_ecma_transforms_module") (v "0.154.12") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.27") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.21") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.22") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.22") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.12") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.12") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.22") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1xh46cw7bv27gzjnn6jjc9dv70k8a8f3c3pyq4gdsgrdcdwhhkq1")))

(define-public crate-swc_ecma_transforms_module-0.154.13 (c (n "swc_ecma_transforms_module") (v "0.154.13") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.28") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.22") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.23") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.23") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.13") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.13") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.6") (d #t) (k 0)) (d (n "testing") (r "^0.31.23") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1fl0zlaj3lkgqmvwhn96hc31nxh03k4vln2kv73fs1pc1yl7nwhp")))

(define-public crate-swc_ecma_transforms_module-0.154.14 (c (n "swc_ecma_transforms_module") (v "0.154.14") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.29") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.24") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.24") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.13") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.14") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.14") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.7") (d #t) (k 0)) (d (n "testing") (r "^0.31.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "04clqkvj57rgv1f3cga6xs8lync271qa7x31gxcyy5nn84r5i31n")))

(define-public crate-swc_ecma_transforms_module-0.154.15 (c (n "swc_ecma_transforms_module") (v "0.154.15") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.29") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.24") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.24") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.14") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.15") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.15") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.7") (d #t) (k 0)) (d (n "testing") (r "^0.31.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1gnz2apjlnd8md75r600pi8m8zndkx6wp7xjamv80yxpldgg3dcx")))

(define-public crate-swc_ecma_transforms_module-0.154.16 (c (n "swc_ecma_transforms_module") (v "0.154.16") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.29") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.24") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.24") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.15") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.16") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.16") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.7") (d #t) (k 0)) (d (n "testing") (r "^0.31.25") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "15pca5513w7ff6fcsplv6m2p60lsh0kcq1sg55clibknjn3g5hhs")))

(define-public crate-swc_ecma_transforms_module-0.154.17 (c (n "swc_ecma_transforms_module") (v "0.154.17") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.31") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.24") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.25") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.25") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.16") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.17") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.17") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.26") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "037jy8q8wzdipgy0cdvhv6g1cjpmhxn2r79qm8f8qv3a4lp8s766")))

(define-public crate-swc_ecma_transforms_module-0.154.18 (c (n "swc_ecma_transforms_module") (v "0.154.18") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.25") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.13") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.17") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.18") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.18") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.9") (d #t) (k 0)) (d (n "testing") (r "^0.31.27") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "13d15wp4w5sm3hkic9gdgmlqqswzaskbmwck9h3almjbly1662i9")))

(define-public crate-swc_ecma_transforms_module-0.154.19 (c (n "swc_ecma_transforms_module") (v "0.154.19") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.25") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.13") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.18") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.19") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.19") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.9") (d #t) (k 0)) (d (n "testing") (r "^0.31.27") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "172g1bhm76pzkyzjw75r531ajsv9j5yr76bb8z10595mkfmpvzqq")))

(define-public crate-swc_ecma_transforms_module-0.154.20 (c (n "swc_ecma_transforms_module") (v "0.154.20") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.25") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.13") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.19") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.20") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.20") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.15") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.9") (d #t) (k 0)) (d (n "testing") (r "^0.31.27") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1s3yyn1x923g4as8y6fvsvzzhyrj4hy8d9cvks2l8l51618mx8ig")))

(define-public crate-swc_ecma_transforms_module-0.154.21 (c (n "swc_ecma_transforms_module") (v "0.154.21") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.25") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.14") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.20") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.21") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.21") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.16") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.9") (d #t) (k 0)) (d (n "testing") (r "^0.31.27") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1x3k2s3kx65awd0z1v2ll7amfa5257fh0wis1f4x79g9dklba943")))

(define-public crate-swc_ecma_transforms_module-0.154.22 (c (n "swc_ecma_transforms_module") (v "0.154.22") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.25") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.14") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.21") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.22") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.22") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.16") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.9") (d #t) (k 0)) (d (n "testing") (r "^0.31.27") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1h6q968ap11jw96jdkd8866njslw0pznl0rmhxa2b80m1cayf91v")))

(define-public crate-swc_ecma_transforms_module-0.154.23 (c (n "swc_ecma_transforms_module") (v "0.154.23") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.26") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.27") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.27") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.15") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.22") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.23") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.23") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.17") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.10") (d #t) (k 0)) (d (n "testing") (r "^0.31.28") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0wzin42cis1p6nq8mz260gybr7v1m174i5gmqvzbb1cglvrfyww9")))

(define-public crate-swc_ecma_transforms_module-0.154.24 (c (n "swc_ecma_transforms_module") (v "0.154.24") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.16") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.23") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.24") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.24") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.18") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.11") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1adxjyw8pcbphi7mmzl1qgz2r9nd4dfpds7q3wisd8jsyrphpc42")))

(define-public crate-swc_ecma_transforms_module-0.154.25 (c (n "swc_ecma_transforms_module") (v "0.154.25") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.123.16") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.112.24") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.137.25") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.115.25") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.106.18") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.11") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1pq92nl8834s9jq78l6l9chpr1c5b2if6x14755c3mzzcr9faiap")))

(define-public crate-swc_ecma_transforms_module-0.155.0 (c (n "swc_ecma_transforms_module") (v "0.155.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.113.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.138.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.116.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.0") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0rwmn87rplmfnrjnlikdss12wa7xqbyys2ix6yhnnrlwiryld373")))

(define-public crate-swc_ecma_transforms_module-0.155.1 (c (n "swc_ecma_transforms_module") (v "0.155.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.113.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.138.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.116.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.0") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1sfwvm7r7aq82rc00c98x0n4sj24b3ll24gnzqcs20yv00k6f8y3")))

(define-public crate-swc_ecma_transforms_module-0.155.2 (c (n "swc_ecma_transforms_module") (v "0.155.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.113.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.138.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.116.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.0") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0w4ag6vr508qvpxqyr0qjasrgzzgrvxkspm158bh1bn3d850cby5")))

(define-public crate-swc_ecma_transforms_module-0.155.3 (c (n "swc_ecma_transforms_module") (v "0.155.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.113.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.138.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.116.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.0") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "11dkyjbhw6dvzxrbfvic2c8g3bn5d6qliyr86azhk99w4x8j8s94")))

(define-public crate-swc_ecma_transforms_module-0.156.0 (c (n "swc_ecma_transforms_module") (v "0.156.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.114.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.139.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.117.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.0") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "09rkn90d4fbfr2q0lj8xv9ixwnswij8fbg6d3qzddv9mbl014s05")))

(define-public crate-swc_ecma_transforms_module-0.156.1 (c (n "swc_ecma_transforms_module") (v "0.156.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.114.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.139.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.117.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ann9cqd36ffgccc1dm8da4f79qgaiwj6dk0pg13b1mcnnyln8pj")))

(define-public crate-swc_ecma_transforms_module-0.157.0 (c (n "swc_ecma_transforms_module") (v "0.157.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.115.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.140.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.118.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0i3ias66jvalr8rgvsvxlbzamvww5qf8rq61b6gypdx9bajr45k5")))

(define-public crate-swc_ecma_transforms_module-0.157.1 (c (n "swc_ecma_transforms_module") (v "0.157.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.115.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.140.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.118.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1psv13vpn4czsgbp67751xls85zlnml1l20skh7xs0657jd5xnlf")))

(define-public crate-swc_ecma_transforms_module-0.157.2 (c (n "swc_ecma_transforms_module") (v "0.157.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.115.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.140.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.118.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ms1xgmw5zynjvdxcf9c2xc0i3d2qkm6w567gdf8pfpzf6ksbmiw")))

(define-public crate-swc_ecma_transforms_module-0.158.0 (c (n "swc_ecma_transforms_module") (v "0.158.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.116.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.141.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.119.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0fy4b7hzp8gl6kjiskbzihdsk2byxpwjqzj3yqqzh0ph36v1m95m")))

(define-public crate-swc_ecma_transforms_module-0.158.1 (c (n "swc_ecma_transforms_module") (v "0.158.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.116.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.141.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.119.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0zab81abhf8g8dj26z7j3527i84pd1gqmbry5nrdvpspiwkhlzqh")))

(define-public crate-swc_ecma_transforms_module-0.158.2 (c (n "swc_ecma_transforms_module") (v "0.158.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.28") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.29") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.29") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.116.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.141.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.119.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.2") (d #t) (k 0)) (d (n "testing") (r "^0.31.30") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0avhka7rrqqkgv3w7040zrxkvb3wcdz1p0fvgzk5mylla3drrcj0")))

(define-public crate-swc_ecma_transforms_module-0.158.3 (c (n "swc_ecma_transforms_module") (v "0.158.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.28") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.29") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.29") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.116.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.141.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.119.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.2") (d #t) (k 0)) (d (n "testing") (r "^0.31.30") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0lax4xy4bfd77s0265i8j5z1nyn3cwp8xxx7qyrdh79v6yxckr5i")))

(define-public crate-swc_ecma_transforms_module-0.158.4 (c (n "swc_ecma_transforms_module") (v "0.158.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.28") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.29") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.29") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.116.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.141.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.119.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.2") (d #t) (k 0)) (d (n "testing") (r "^0.31.30") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1b3ihrkr9zhsh31lkxrwwvpnbjpxl39s85i4xm0vs0habph1ayp8")))

(define-public crate-swc_ecma_transforms_module-0.158.5 (c (n "swc_ecma_transforms_module") (v "0.158.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.30") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.30") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.116.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.141.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.119.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0zb5cng1vmqr4v91vdn8rmiksr2ixrj7h5kibqm3cncq2k9wai1v")))

(define-public crate-swc_ecma_transforms_module-0.158.6 (c (n "swc_ecma_transforms_module") (v "0.158.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.116.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.141.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.119.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1l49vndwad7zr9zl43cm7l9iyhmzsy7xz517508dl6y18a0hgpxk")))

(define-public crate-swc_ecma_transforms_module-0.158.7 (c (n "swc_ecma_transforms_module") (v "0.158.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.116.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.141.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.119.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "13pz1j71yvdadin7gfnzzd649r33ffqs5q3wfgrk1z65g6mbcf64")))

(define-public crate-swc_ecma_transforms_module-0.158.8 (c (n "swc_ecma_transforms_module") (v "0.158.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.116.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.141.6") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.119.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1i5gj563zbzygpy8g4l0h2d1b0gzmvrm6q9y3mpyim7ym5fzr1n6")))

(define-public crate-swc_ecma_transforms_module-0.158.9 (c (n "swc_ecma_transforms_module") (v "0.158.9") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.116.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.141.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.119.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1svxcma7nbmfqb7s977hw7gnwf3svxfq43alf43mbmblpmxj6qvh")))

(define-public crate-swc_ecma_transforms_module-0.158.10 (c (n "swc_ecma_transforms_module") (v "0.158.10") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.116.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.141.8") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.119.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1vz1wairyg29ycw3zazk062vhdf1nbnxdmm7xcvbm8zdbb5xmwpy")))

(define-public crate-swc_ecma_transforms_module-0.158.11 (c (n "swc_ecma_transforms_module") (v "0.158.11") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.116.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.141.8") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.119.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "001zk570c0mfgr2n1qjh4a45b08v84q6yf6nvs25jam8l3d520w5")))

(define-public crate-swc_ecma_transforms_module-0.158.12 (c (n "swc_ecma_transforms_module") (v "0.158.12") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.116.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.141.9") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.119.7") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0lxbvgbi3fr4bhryjnyl6mg7sxnh7ij9siay31qlb97r6dgdzwwf")))

(define-public crate-swc_ecma_transforms_module-0.158.13 (c (n "swc_ecma_transforms_module") (v "0.158.13") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.35") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.30") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.32") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.32") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.116.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.141.10") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.119.8") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.4") (d #t) (k 0)) (d (n "testing") (r "^0.31.32") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1h596zbdl4kpc1wmdsakn4hh48k1mdj3r3k1hnapppkklsvaavw4")))

(define-public crate-swc_ecma_transforms_module-0.158.14 (c (n "swc_ecma_transforms_module") (v "0.158.14") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.36") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.31") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.33") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.33") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.116.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.141.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.119.9") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.33") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1icjc1iyaa6xfr7w0m3byf65mcakdfrvgpvf8711nbzqqpy1m36b")))

(define-public crate-swc_ecma_transforms_module-0.158.15 (c (n "swc_ecma_transforms_module") (v "0.158.15") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.36") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.31") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.33") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.33") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.116.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.141.12") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.119.10") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.33") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0sq724746nfnwp6vp9aja8rrfpm60vaiy0zkgy85n7bk27k1ffrb")))

(define-public crate-swc_ecma_transforms_module-0.158.16 (c (n "swc_ecma_transforms_module") (v "0.158.16") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.36") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.31") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.33") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.33") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.116.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.141.13") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.119.11") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.33") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1snxr0fp70f2x83h4mama44jrzpwjrrrs9nh8yq0qn7787v21zwy")))

(define-public crate-swc_ecma_transforms_module-0.158.17 (c (n "swc_ecma_transforms_module") (v "0.158.17") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.36") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.31") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.33") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.33") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.116.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.141.14") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.119.12") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.6") (d #t) (k 0)) (d (n "testing") (r "^0.31.33") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0q5kikfj63dfiyfd0rwj0gjzw0abrv7l7pyncsiw7x63yvbdi7dp")))

(define-public crate-swc_ecma_transforms_module-0.158.18 (c (n "swc_ecma_transforms_module") (v "0.158.18") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.37") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.32") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.34") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.34") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.116.13") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.141.15") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.119.13") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.7") (d #t) (k 0)) (d (n "testing") (r "^0.31.34") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0wznbi6ivzmas4md0l8gx0d5myahydw0nfnwy360xskbnkknnn0c")))

(define-public crate-swc_ecma_transforms_module-0.158.19 (c (n "swc_ecma_transforms_module") (v "0.158.19") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.37") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.32") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.34") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.34") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.124.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.116.14") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.141.16") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.119.14") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.107.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.7") (d #t) (k 0)) (d (n "testing") (r "^0.31.34") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "14bs5p5994bbg30ivxkmwc345yhsiv4zy8a8xbqmlkryv2zn2hgq")))

(define-public crate-swc_ecma_transforms_module-0.159.0 (c (n "swc_ecma_transforms_module") (v "0.159.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.37") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.32") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.97.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.34") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.34") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.117.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.142.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.120.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.83.0") (d #t) (k 0)) (d (n "testing") (r "^0.31.34") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0s9yyh4pgk4l1hapzva9jyg45ln7c2sy2q56babid96z423x3cg2")))

(define-public crate-swc_ecma_transforms_module-0.160.0 (c (n "swc_ecma_transforms_module") (v "0.160.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.33") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.35") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.35") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.126.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.118.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.143.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.121.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (d #t) (k 0)) (d (n "testing") (r "^0.31.35") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "02gn1s4rcmpb5b17c1r2qz3wrqfnvb5z5h5rbgz2hn45sz68jhnp")))

(define-public crate-swc_ecma_transforms_module-0.161.0 (c (n "swc_ecma_transforms_module") (v "0.161.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.33") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.35") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.35") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.127.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.119.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.144.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.122.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (d #t) (k 0)) (d (n "testing") (r "^0.31.35") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "10mjh8566gz7qj03rjs3jk6nc0d977xb5bz1gdvqcg5iy8i3a40h")))

(define-public crate-swc_ecma_transforms_module-0.162.0 (c (n "swc_ecma_transforms_module") (v "0.162.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.33") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.35") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.35") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.128.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.120.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.145.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.123.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.111.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (d #t) (k 0)) (d (n "testing") (r "^0.31.35") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1rqcc3marwr9s1afdkq5wshfm97p11sblhwk4kai3f6sf443hbms")))

(define-public crate-swc_ecma_transforms_module-0.162.1 (c (n "swc_ecma_transforms_module") (v "0.162.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.33") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.35") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.35") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.128.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.120.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.145.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.123.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (d #t) (k 0)) (d (n "testing") (r "^0.31.35") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "04mcswv97dgl4sa22vf6lsl6k55b051p6gb58vfhg55vwy01xzis")))

(define-public crate-swc_ecma_transforms_module-0.162.2 (c (n "swc_ecma_transforms_module") (v "0.162.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.34") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.36") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.36") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.128.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.120.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.145.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.123.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.111.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.36") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1dy6yhv20rs5jgxjmcn7387pr111716r3zg4kv53dc9w7x04j3y8")))

(define-public crate-swc_ecma_transforms_module-0.162.3 (c (n "swc_ecma_transforms_module") (v "0.162.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.35") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.37") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.37") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.128.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.120.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.145.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.123.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.111.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.2") (d #t) (k 0)) (d (n "testing") (r "^0.31.37") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "146x9hvgwzbjnddf2pxa97aggl24c1jgipf9cmbz997aa5c0qp6k")))

(define-public crate-swc_ecma_transforms_module-0.162.4 (c (n "swc_ecma_transforms_module") (v "0.162.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.35") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.37") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.37") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.128.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.120.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.145.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.123.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.111.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.2") (d #t) (k 0)) (d (n "testing") (r "^0.31.37") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0jd552i2az6wg1rj3mbb4qb8zh3i53jmmkib771j1cmcj99bshik")))

(define-public crate-swc_ecma_transforms_module-0.162.5 (c (n "swc_ecma_transforms_module") (v "0.162.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.35") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.37") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.37") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.128.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.120.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.145.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.123.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.111.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.2") (d #t) (k 0)) (d (n "testing") (r "^0.31.37") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1jjbdi3128jsmrzgk8rj1zijswk3bwwr339hbxs8rl58sa2jy2s6")))

(define-public crate-swc_ecma_transforms_module-0.163.0 (c (n "swc_ecma_transforms_module") (v "0.163.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.35") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.37") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.37") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.129.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.121.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.146.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.124.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.112.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.0") (d #t) (k 0)) (d (n "testing") (r "^0.31.37") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0jxd1lpnsm1x6kdrzay5kapg0n1rsy9878v4rm862k8vc3f197lz")))

(define-public crate-swc_ecma_transforms_module-0.163.1 (c (n "swc_ecma_transforms_module") (v "0.163.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.36") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.38") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.38") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.129.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.121.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.146.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.124.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.112.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.38") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0qdxzg4fg6afscjrxj51fbzr99xj8q6fnx0v356wg1awffsi0mh5")))

(define-public crate-swc_ecma_transforms_module-0.163.2 (c (n "swc_ecma_transforms_module") (v "0.163.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.36") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.38") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.38") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.129.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.121.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.146.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.124.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.112.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.38") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1554iqglllvfpvc3nrb7qfdcdk1qclkahx73rxzvpdw1w5qv29v0")))

(define-public crate-swc_ecma_transforms_module-0.164.0 (c (n "swc_ecma_transforms_module") (v "0.164.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.36") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.38") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.38") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.129.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.121.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.147.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.124.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.112.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.38") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0ddjh7ygp5fmjhx0nf52qjcrcgfc4wjndp450dn9w83dvcmwl1fr")))

(define-public crate-swc_ecma_transforms_module-0.164.1 (c (n "swc_ecma_transforms_module") (v "0.164.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.129.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.121.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.147.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.124.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.112.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.2") (d #t) (k 0)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0yalc4ck38l3x023a2qaasf003dcalhwa9d8bhl1ncqphl992zdh")))

(define-public crate-swc_ecma_transforms_module-0.164.2 (c (n "swc_ecma_transforms_module") (v "0.164.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.129.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.121.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.147.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.124.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.112.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.2") (d #t) (k 0)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0psdkkixmmjnj6bnq515km37443rszzc3cfrk8jp69igfn203b3a")))

(define-public crate-swc_ecma_transforms_module-0.164.3 (c (n "swc_ecma_transforms_module") (v "0.164.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.129.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.121.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.147.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.124.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.112.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.2") (d #t) (k 0)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1xz5jya1c2avvwk4x9dy3bh1jcrf98y3m5drm2x2wci7rddl2c9h")))

(define-public crate-swc_ecma_transforms_module-0.164.4 (c (n "swc_ecma_transforms_module") (v "0.164.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.129.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.121.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.147.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.124.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.112.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.3") (d #t) (k 0)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "01z7glfplql2322inc9ifizj2i8g05f6vkbvlfqdzrxgpxc5ddd2")))

(define-public crate-swc_ecma_transforms_module-0.165.0 (c (n "swc_ecma_transforms_module") (v "0.165.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.130.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.148.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.125.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.113.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.0") (d #t) (k 0)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0v9w9pq830xgv9ajfn0arh1rqlkf1k729jb5lqmadarj9a9qyxfw")))

(define-public crate-swc_ecma_transforms_module-0.165.1 (c (n "swc_ecma_transforms_module") (v "0.165.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.130.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.148.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.125.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.113.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.0") (d #t) (k 0)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0fdwsm5cbz1hb32x0f1qmzx2xlr6vpjkhgw3cpmh7cfvw4gngaw3")))

(define-public crate-swc_ecma_transforms_module-0.165.2 (c (n "swc_ecma_transforms_module") (v "0.165.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.130.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.122.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.148.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.125.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.113.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "02yizw9c994myi7wmpagb2c95l3dpmcr6sacymx9z9pm66mx1imr")))

(define-public crate-swc_ecma_transforms_module-0.165.3 (c (n "swc_ecma_transforms_module") (v "0.165.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.130.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.122.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.148.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.125.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.113.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1d6paka446b6vhizbriayg6y86mydnyr5zpg8vp6l9naxslc66pz")))

(define-public crate-swc_ecma_transforms_module-0.165.4 (c (n "swc_ecma_transforms_module") (v "0.165.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.130.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.122.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.148.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.125.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.113.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0k66qybknph1bw4w9x8fs88vvwlygv2gkgihamgqxv9sn2p87lzb")))

(define-public crate-swc_ecma_transforms_module-0.165.5 (c (n "swc_ecma_transforms_module") (v "0.165.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.130.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.122.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.148.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.125.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.113.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0l511s7056z8xcrh8yh5241zsf6yyaf7pc71r49j20mlji4zy0q5")))

(define-public crate-swc_ecma_transforms_module-0.165.6 (c (n "swc_ecma_transforms_module") (v "0.165.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.130.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.122.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.148.6") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.125.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.113.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1dyyxl322dalsn5zv9xh5vzgbrck6yj8gxx2qwkxkkmjm6wg5016")))

(define-public crate-swc_ecma_transforms_module-0.165.7 (c (n "swc_ecma_transforms_module") (v "0.165.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.130.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.122.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.148.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.125.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.113.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1b4wa2v37bmj20mys08vbphm9y8l7rvcdg1sjkszqzgjh5z45ps4")))

(define-public crate-swc_ecma_transforms_module-0.165.8 (c (n "swc_ecma_transforms_module") (v "0.165.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.130.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.122.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.148.8") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.125.7") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.113.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0wqsds8p7sq1szyjw4p88d31vn4cab3yma237dl367x3pdzrg6mc")))

(define-public crate-swc_ecma_transforms_module-0.165.9 (c (n "swc_ecma_transforms_module") (v "0.165.9") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.130.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.122.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.148.9") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.125.8") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.113.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "17x6k3a6r1g7scp5hqfy8i7hck532bnkzns23a146ljdiji3qlaw")))

(define-public crate-swc_ecma_transforms_module-0.165.10 (c (n "swc_ecma_transforms_module") (v "0.165.10") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.130.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.122.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.148.10") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.125.9") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.113.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1wgh3628pg5vylll3xp7bj3vb0scxaf5gwi9plvyz9b0m1kpbbil")))

(define-public crate-swc_ecma_transforms_module-0.165.11 (c (n "swc_ecma_transforms_module") (v "0.165.11") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.130.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.122.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.148.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.125.10") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.113.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.2") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1siz6b6m8kl903drq1f0pn3hrbmdpgcc1ir8vih9wc09c6k152g5")))

(define-public crate-swc_ecma_transforms_module-0.165.12 (c (n "swc_ecma_transforms_module") (v "0.165.12") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.130.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.122.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.148.12") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.125.10") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.113.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.2") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "01g48msd99hfsf2cb3i3rdwlmkx3n6hi2hl47sq0qyryna55gfnv")))

(define-public crate-swc_ecma_transforms_module-0.165.13 (c (n "swc_ecma_transforms_module") (v "0.165.13") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.130.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.122.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.148.13") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.125.11") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.113.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.2") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ilnngc65p1l0k0dhbsp9fxj4fqg0gj8sk7n6qixlbkqam5fnacn")))

(define-public crate-swc_ecma_transforms_module-0.165.14 (c (n "swc_ecma_transforms_module") (v "0.165.14") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.130.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.122.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.148.14") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.125.12") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.113.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.3") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ga5sjn3v8qlwaadnj214cm66p1bsch63hwgg8l3sh2s6hlry6x9")))

(define-public crate-swc_ecma_transforms_module-0.165.15 (c (n "swc_ecma_transforms_module") (v "0.165.15") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.130.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.122.13") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.148.15") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.125.13") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.113.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.4") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1flh116by0bzjscgxxznsr28i5n6vcl0s6cbfsddph5b0q2walwg")))

(define-public crate-swc_ecma_transforms_module-0.165.16 (c (n "swc_ecma_transforms_module") (v "0.165.16") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.38") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.40") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.40") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.130.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.122.14") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.148.16") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.125.14") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.113.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.41") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "17axsbg4jpz0775my441pn8sdc4v6v3fgl5mvqaww1nqaba482vy")))

(define-public crate-swc_ecma_transforms_module-0.165.17 (c (n "swc_ecma_transforms_module") (v "0.165.17") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.39") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.41") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.41") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.130.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.122.15") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.148.17") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.125.15") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.113.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.6") (d #t) (k 0)) (d (n "testing") (r "^0.31.42") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1mpskspqcsm31nxwx2i2ag0bfg8vqsksd633rx4gsjf9xfbsk2wh")))

(define-public crate-swc_ecma_transforms_module-0.165.18 (c (n "swc_ecma_transforms_module") (v "0.165.18") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.39") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.41") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.41") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.130.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.122.16") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.148.18") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.125.16") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.113.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.6") (d #t) (k 0)) (d (n "testing") (r "^0.31.42") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "01nc8n3c5bw12w5azffpn55h975h7mjwrlnvchiidks00gniidj7")))

(define-public crate-swc_ecma_transforms_module-0.166.0 (c (n "swc_ecma_transforms_module") (v "0.166.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.40") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.101.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.42") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.42") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.131.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.149.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.126.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.114.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.87.0") (d #t) (k 0)) (d (n "testing") (r "^0.31.43") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1mrgxgnf0cwbpx9b5na8d9363wlj6vf6am0r6h5vvyb9i31n1zax")))

(define-public crate-swc_ecma_transforms_module-0.167.0 (c (n "swc_ecma_transforms_module") (v "0.167.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.132.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.124.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.150.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.127.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.115.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.0") (d #t) (k 0)) (d (n "testing") (r "^0.32.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "146ynnj3b6i4j22pnlgpa9cfs9mx4calhmv5g0wsls1bdmpihmpf")))

(define-public crate-swc_ecma_transforms_module-0.167.1 (c (n "swc_ecma_transforms_module") (v "0.167.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.40") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.1") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.132.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.124.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.150.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.127.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.115.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.1") (d #t) (k 0)) (d (n "testing") (r "^0.32.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1kk9bppg15ab7fqd62nxkkiiimk5r55n9qpwb2blz3fqjlamacw6")))

(define-public crate-swc_ecma_transforms_module-0.167.2 (c (n "swc_ecma_transforms_module") (v "0.167.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.41") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.2") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.2") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.132.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.150.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.127.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.115.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.2") (d #t) (k 0)) (d (n "testing") (r "^0.32.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1axy5sx1hqv18w0dayzkixc3l3xv0n6xabvlmhks0gndldrk0vbs")))

(define-public crate-swc_ecma_transforms_module-0.167.3 (c (n "swc_ecma_transforms_module") (v "0.167.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.42") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.132.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.124.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.150.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.127.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.115.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.3") (d #t) (k 0)) (d (n "testing") (r "^0.32.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1i0q0mgz84nabpmqd5v8cla3az915v6g5jxhkidgs6rnb76xdknl")))

(define-public crate-swc_ecma_transforms_module-0.167.4 (c (n "swc_ecma_transforms_module") (v "0.167.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.42") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.132.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.124.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.150.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.127.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.115.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.3") (d #t) (k 0)) (d (n "testing") (r "^0.32.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1fav6lndbsghkd6frnwa0hh9incwhsy3n32c8qy1p9ymq3a0gsfz")))

(define-public crate-swc_ecma_transforms_module-0.167.5 (c (n "swc_ecma_transforms_module") (v "0.167.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.42") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.132.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.124.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.150.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.127.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.115.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.3") (d #t) (k 0)) (d (n "testing") (r "^0.32.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0a4bm8r8jd7j89zhnni6i3jsg9iqx8ss6bd5jxmzfzna6dnd8rv3")))

(define-public crate-swc_ecma_transforms_module-0.167.6 (c (n "swc_ecma_transforms_module") (v "0.167.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.42") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.132.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.124.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.150.6") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.127.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.115.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.3") (d #t) (k 0)) (d (n "testing") (r "^0.32.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0gwky73cd7h2y4pal0jis7j7nw2sadv3yzkjld9iqrf7myl69i1l")))

(define-public crate-swc_ecma_transforms_module-0.167.7 (c (n "swc_ecma_transforms_module") (v "0.167.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.132.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.124.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.150.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.127.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.115.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.4") (d #t) (k 0)) (d (n "testing") (r "^0.32.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0qyrbi18ij9h0hh7ig5w8gyqnnmz9b2fw4f8crvaray3p0m75ddl")))

(define-public crate-swc_ecma_transforms_module-0.167.8 (c (n "swc_ecma_transforms_module") (v "0.167.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.132.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.124.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.150.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.127.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.115.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.4") (d #t) (k 0)) (d (n "testing") (r "^0.32.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "12v8ghdydf67y00miamkff415skl2mrvcva48p7xqxvl36a3nayk")))

(define-public crate-swc_ecma_transforms_module-0.167.9 (c (n "swc_ecma_transforms_module") (v "0.167.9") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.132.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.150.8") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.127.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.115.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.4") (d #t) (k 0)) (d (n "testing") (r "^0.32.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "142i6ysfwgvg74hfs43sfq8wid9y46c45jsh1bk7wmlj6q8yw6pd")))

(define-public crate-swc_ecma_transforms_module-0.167.10 (c (n "swc_ecma_transforms_module") (v "0.167.10") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.132.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.124.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.150.9") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.127.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.115.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.4") (d #t) (k 0)) (d (n "testing") (r "^0.32.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "17ja6gbbsanyah89blc0k1g2bsvhlnabncrhxsfn15yl9rhcxbl7")))

(define-public crate-swc_ecma_transforms_module-0.168.0 (c (n "swc_ecma_transforms_module") (v "0.168.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.132.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.151.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.128.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.115.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.4") (d #t) (k 0)) (d (n "testing") (r "^0.32.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0z0dp6l00c5m4qw9z062fb39s2zc3dmnf33aad5ssphr88mm89fc")))

(define-public crate-swc_ecma_transforms_module-0.168.1 (c (n "swc_ecma_transforms_module") (v "0.168.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.5") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.5") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.132.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.151.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.128.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.115.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.5") (d #t) (k 0)) (d (n "testing") (r "^0.32.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "16lq8182ghzcbgkzhcb8q5wsi5jbqaq2f7vb725b8ncin56pcaw8")))

(define-public crate-swc_ecma_transforms_module-0.168.2 (c (n "swc_ecma_transforms_module") (v "0.168.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.5") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.5") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.132.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.151.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.128.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.115.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.5") (d #t) (k 0)) (d (n "testing") (r "^0.32.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "07lzqj8khb0hjkh177bjzk8hjcvjwrv87byxv3298g756158j0wl")))

(define-public crate-swc_ecma_transforms_module-0.168.3 (c (n "swc_ecma_transforms_module") (v "0.168.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.5") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.5") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.132.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.151.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.128.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.115.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.5") (d #t) (k 0)) (d (n "testing") (r "^0.32.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "02940mk55c86rkc3ppi54rxs5vpq1zmlyvyqlpr8qzzhkl1ncnxj")))

(define-public crate-swc_ecma_transforms_module-0.169.0 (c (n "swc_ecma_transforms_module") (v "0.169.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.0") (d #t) (k 0)) (d (n "testing") (r "^0.33.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0ls3wqkhg728wcv5y24h62vhq2jpdapjc8ybmipmwvzwsaifwp4a")))

(define-public crate-swc_ecma_transforms_module-0.169.1 (c (n "swc_ecma_transforms_module") (v "0.169.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.0") (d #t) (k 0)) (d (n "testing") (r "^0.33.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0lz6bzmvl3k3biyrv03svgzlfjszz26a9p25v0qhh6k4kn6gd0c2")))

(define-public crate-swc_ecma_transforms_module-0.169.2 (c (n "swc_ecma_transforms_module") (v "0.169.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.0") (d #t) (k 0)) (d (n "testing") (r "^0.33.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1mnl3xchf5i56ly8q5fdvawm4igrgrh2zapm6am8vslxfixayqlc")))

(define-public crate-swc_ecma_transforms_module-0.169.3 (c (n "swc_ecma_transforms_module") (v "0.169.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.0") (d #t) (k 0)) (d (n "testing") (r "^0.33.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "09agb2k2zv1dr0gd9w5i3pfkkfsg1y9d7nahzgklaqkvwhcir9pn")))

(define-public crate-swc_ecma_transforms_module-0.169.4 (c (n "swc_ecma_transforms_module") (v "0.169.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.0") (d #t) (k 0)) (d (n "testing") (r "^0.33.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "16asmi62xcr92ad9bg58vcf7h887f8rv43dhrk4sk8f13m8s7ki1")))

(define-public crate-swc_ecma_transforms_module-0.169.5 (c (n "swc_ecma_transforms_module") (v "0.169.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.0") (d #t) (k 0)) (d (n "testing") (r "^0.33.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "11qv5y90iz5jy1xjnf8bzzgg9jy2hzph5qdp72g7hg4i6nbvy5fp")))

(define-public crate-swc_ecma_transforms_module-0.169.6 (c (n "swc_ecma_transforms_module") (v "0.169.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.1") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.1") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.6") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.1") (d #t) (k 0)) (d (n "testing") (r "^0.33.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "01m5xkn0d7rayr58wyin14i7027l7v97jy2z9hli8ia5gzpzcpv8")))

(define-public crate-swc_ecma_transforms_module-0.169.7 (c (n "swc_ecma_transforms_module") (v "0.169.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.2") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.2") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.2") (d #t) (k 0)) (d (n "testing") (r "^0.33.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0vr7ic21wi6r8zzmyi9k7gfv8j8zslr3p3g1hif7qxsp4zznj1zf")))

(define-public crate-swc_ecma_transforms_module-0.169.8 (c (n "swc_ecma_transforms_module") (v "0.169.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.8") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.7") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.3") (d #t) (k 0)) (d (n "testing") (r "^0.33.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "02cxx6rmwjjc6alk92h2p3qhgk5qj5jvxkgfkn0dyp7hghn5qw5z")))

(define-public crate-swc_ecma_transforms_module-0.169.9 (c (n "swc_ecma_transforms_module") (v "0.169.9") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.8") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.7") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.3") (d #t) (k 0)) (d (n "testing") (r "^0.33.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "07d673ky10xjxfnhnbmpfn5b46sg6a0h7147n6y00h9hb9vm2l4j")))

(define-public crate-swc_ecma_transforms_module-0.169.10 (c (n "swc_ecma_transforms_module") (v "0.169.10") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.9") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.8") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.3") (d #t) (k 0)) (d (n "testing") (r "^0.33.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1w3axyflckwb9jh3k73i8iy8yrgpzbsiqvml5f69kv20k42q24gh")))

(define-public crate-swc_ecma_transforms_module-0.169.11 (c (n "swc_ecma_transforms_module") (v "0.169.11") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.5") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.5") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.10") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.9") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "testing") (r "^0.33.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0vvjs829d1w8csdbh6cbxvz8j86qry0wbd7rrvqw3y118pridcy5")))

(define-public crate-swc_ecma_transforms_module-0.169.12 (c (n "swc_ecma_transforms_module") (v "0.169.12") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.5") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.5") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.10") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "testing") (r "^0.33.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0wr1mfbji7fwv0cb0l8spqb4xs1kpcr88731g2hrxra8rqg56s24")))

(define-public crate-swc_ecma_transforms_module-0.169.13 (c (n "swc_ecma_transforms_module") (v "0.169.13") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.5") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.5") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.10") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "testing") (r "^0.33.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1zw8z2fcxjc79wsg7ikbd2i462s4996daqqw0b94biivxa98m05a")))

(define-public crate-swc_ecma_transforms_module-0.169.14 (c (n "swc_ecma_transforms_module") (v "0.169.14") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.5") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.5") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.12") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.11") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "testing") (r "^0.33.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1yxpzaa9z1wn19dbj8x1k5bchnm4izn8bgbwxjaxllh68y6wjva8")))

(define-public crate-swc_ecma_transforms_module-0.169.15 (c (n "swc_ecma_transforms_module") (v "0.169.15") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.5") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.5") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.13") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.12") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "testing") (r "^0.33.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "12h43j3pv51sn0b07j0bkcsz761ik7c5vpvz6klva9735ws28y2l")))

(define-public crate-swc_ecma_transforms_module-0.169.16 (c (n "swc_ecma_transforms_module") (v "0.169.16") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.6") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.6") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.13") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.12") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "testing") (r "^0.33.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1k8gy2aali7axa670pm0dspd099ypbz0v3y71sfbr77b75dpwzzf")))

(define-public crate-swc_ecma_transforms_module-0.169.17 (c (n "swc_ecma_transforms_module") (v "0.169.17") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.6") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.6") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.13") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.14") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.13") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "testing") (r "^0.33.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0hx2zmhw5w7b25d2sp376wxm2wx5nx4j8iz665ignrzqbdd0nnfg")))

(define-public crate-swc_ecma_transforms_module-0.169.18 (c (n "swc_ecma_transforms_module") (v "0.169.18") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.6") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.6") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.14") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.15") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.14") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "testing") (r "^0.33.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "04x5jh3mp249hz0dzmk0gf69rswab9zh3z1vy4vc4c56vbvr2vpd")))

(define-public crate-swc_ecma_transforms_module-0.169.19 (c (n "swc_ecma_transforms_module") (v "0.169.19") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.6") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.6") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.15") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.16") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.15") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "testing") (r "^0.33.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1kln332s7qx5nm5v08nv0wwgbnmw1vh7v2rqzjlh8fk3lchbkdrf")))

(define-public crate-swc_ecma_transforms_module-0.169.20 (c (n "swc_ecma_transforms_module") (v "0.169.20") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.7") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.7") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.16") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.17") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.16") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.5") (d #t) (k 0)) (d (n "testing") (r "^0.33.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0afyswkpc1vq3h1a6h7n86mn948zh2c7hdh8rk6lgc4vbl65mndi")))

(define-public crate-swc_ecma_transforms_module-0.169.21 (c (n "swc_ecma_transforms_module") (v "0.169.21") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.7") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.7") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.16") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.17") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.16") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.5") (d #t) (k 0)) (d (n "testing") (r "^0.33.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1y07xj46534iym693zxm14r332qzngk09yd3pbjacy69sf6b9qm5")))

(define-public crate-swc_ecma_transforms_module-0.169.22 (c (n "swc_ecma_transforms_module") (v "0.169.22") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.7") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.7") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.17") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.18") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.17") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.5") (d #t) (k 0)) (d (n "testing") (r "^0.33.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0d06sdmxnrzkr3b6c1cw3wlx39k3kr05a65jpv31nqwrk0ch8h8d")))

(define-public crate-swc_ecma_transforms_module-0.169.23 (c (n "swc_ecma_transforms_module") (v "0.169.23") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.7") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.7") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.18") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.19") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.18") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.5") (d #t) (k 0)) (d (n "testing") (r "^0.33.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0xq22rly38n74qxicykpn7g6az1ni1w8kqr89750f6sbcb20ynjw")))

(define-public crate-swc_ecma_transforms_module-0.169.24 (c (n "swc_ecma_transforms_module") (v "0.169.24") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.7") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.7") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.18") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.20") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.18") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.5") (d #t) (k 0)) (d (n "testing") (r "^0.33.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0a8f7z21wpvqw62sh6lkzi43f9qdifvhmpx0jqjz6p0fxlx2xfhz")))

(define-public crate-swc_ecma_transforms_module-0.169.25 (c (n "swc_ecma_transforms_module") (v "0.169.25") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.8") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.8") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.13") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.19") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.21") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.19") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.6") (d #t) (k 0)) (d (n "testing") (r "^0.33.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1r4qh0vw0fvgpg5dr4shdmx0m1z5mdyy029kl0v8jdrj2hxmpdy6")))

(define-public crate-swc_ecma_transforms_module-0.169.26 (c (n "swc_ecma_transforms_module") (v "0.169.26") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.8") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.8") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.14") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.20") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.22") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.20") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.7") (d #t) (k 0)) (d (n "testing") (r "^0.33.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1f1sxs8d3radvhaz3qyzjcwwpbki0g6vby595xxr7d59y1x4favv")))

(define-public crate-swc_ecma_transforms_module-0.169.27 (c (n "swc_ecma_transforms_module") (v "0.169.27") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.8") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.8") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.133.14") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.126.20") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.152.23") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.129.20") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.116.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.7") (d #t) (k 0)) (d (n "testing") (r "^0.33.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "11qcn7s1qr2gj5l5f8qfmbyxmf8a27yif3v89jh2parcnc8mxa1d")))

(define-public crate-swc_ecma_transforms_module-0.170.0 (c (n "swc_ecma_transforms_module") (v "0.170.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.7") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.9") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.9") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.134.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.127.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.153.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.130.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.117.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.0") (d #t) (k 0)) (d (n "testing") (r "^0.33.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0qh15bg2f4qb94pgmfsd4sb4igzx4ckm7s76mpk5n4pz1dnvzb7h")))

(define-public crate-swc_ecma_transforms_module-0.170.1 (c (n "swc_ecma_transforms_module") (v "0.170.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.7") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.9") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.9") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.134.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.127.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.153.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.130.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.117.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.0") (d #t) (k 0)) (d (n "testing") (r "^0.33.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "02c2yb25dj7fj47v5gaczhk0hdp4ydzl528zbgvlij02lpkwi2xw")))

(define-public crate-swc_ecma_transforms_module-0.170.2 (c (n "swc_ecma_transforms_module") (v "0.170.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.10") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.10") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.134.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.127.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.153.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.130.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.117.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.1") (d #t) (k 0)) (d (n "testing") (r "^0.33.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "17832vwv2aj59cncrbdgxz1ibn1gsm82hc45l74s5ffv862gr1n7")))

(define-public crate-swc_ecma_transforms_module-0.170.3 (c (n "swc_ecma_transforms_module") (v "0.170.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.10") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.10") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.134.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.127.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.153.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.130.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.117.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.1") (d #t) (k 0)) (d (n "testing") (r "^0.33.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0za0kx285xgi4ydsv1l5dq2dq95avwn4n9hz2dqbh7m2n6h5q850")))

(define-public crate-swc_ecma_transforms_module-0.170.4 (c (n "swc_ecma_transforms_module") (v "0.170.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.11") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.11") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.134.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.127.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.153.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.130.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.117.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.2") (d #t) (k 0)) (d (n "testing") (r "^0.33.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0fx28wn4a2ymqa354izqs6va8k59wim2v72f9bzg4dxxl34miv6k")))

(define-public crate-swc_ecma_transforms_module-0.170.5 (c (n "swc_ecma_transforms_module") (v "0.170.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.11") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.11") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.134.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.127.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.153.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.130.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.117.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.2") (d #t) (k 0)) (d (n "testing") (r "^0.33.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0mlsa5j0616nfvcmmcx52p94g8n0fkiywdp084wag5mn1gsa1hbq")))

(define-public crate-swc_ecma_transforms_module-0.170.6 (c (n "swc_ecma_transforms_module") (v "0.170.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.134.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.127.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.153.6") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.130.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.117.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "08cafp8ajyh5rx53vrwbznh8vy5ns59sz64gcf8nr4gpha6d9ifi")))

(define-public crate-swc_ecma_transforms_module-0.170.7 (c (n "swc_ecma_transforms_module") (v "0.170.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.134.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.153.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.130.7") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.117.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1f4mj42b5qz3d9p4lwrig2pq1zgsf4nm4py0k0wd07633xvdi7ds")))

(define-public crate-swc_ecma_transforms_module-0.170.8 (c (n "swc_ecma_transforms_module") (v "0.170.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.134.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.153.8") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.130.7") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.117.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ckhwa0vpbk9ja7kasksr1rai34b1fyc5y7pad6ir5vnmf1ia69v")))

(define-public crate-swc_ecma_transforms_module-0.170.9 (c (n "swc_ecma_transforms_module") (v "0.170.9") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.134.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.127.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.153.9") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.130.8") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.117.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0j2k168hx1vs37bgv0i6r9x2hdzvdmm3478arkfk1mhw6bbw5qcq")))

(define-public crate-swc_ecma_transforms_module-0.170.10 (c (n "swc_ecma_transforms_module") (v "0.170.10") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.134.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.127.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.153.10") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.130.9") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.117.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "02hk5ymfl1qr79m359i2d0z0fwzr23cp9faixkngb25vgzxdc5k8")))

(define-public crate-swc_ecma_transforms_module-0.170.11 (c (n "swc_ecma_transforms_module") (v "0.170.11") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.134.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.127.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.153.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.130.10") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.117.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1hph89ziwi8p7zdzfh3hxx72dxgwzxrfivrikcl7lpw230if35y0")))

(define-public crate-swc_ecma_transforms_module-0.170.12 (c (n "swc_ecma_transforms_module") (v "0.170.12") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.134.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.127.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.153.12") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.130.10") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.117.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0zlwiv1lkj802r9grddc8nv36x99yxkdfvjjzpk0ysjm9q77zv9r")))

(define-public crate-swc_ecma_transforms_module-0.170.13 (c (n "swc_ecma_transforms_module") (v "0.170.13") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.134.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.127.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.153.13") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.130.11") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.117.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "083h4vka5isyx20dalfrcxkf29nv0wp018lgjx1q4f62zmlhd42p")))

(define-public crate-swc_ecma_transforms_module-0.170.14 (c (n "swc_ecma_transforms_module") (v "0.170.14") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.134.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.127.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.153.14") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.130.12") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.117.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "13fkq753f27ym30s0rf1wvgwrsck76p8yi73xw2w3dbpmq6nvfvq")))

(define-public crate-swc_ecma_transforms_module-0.170.15 (c (n "swc_ecma_transforms_module") (v "0.170.15") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.11") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.134.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.127.13") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.153.15") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.130.13") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.117.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.4") (d #t) (k 0)) (d (n "testing") (r "^0.33.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1wla0zxpc76i4i4lzkp4mw7nip8247rhd7mmcb280h20za8rdgqk")))

(define-public crate-swc_ecma_transforms_module-0.170.16 (c (n "swc_ecma_transforms_module") (v "0.170.16") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.11") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.134.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.127.14") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.153.16") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.130.14") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.117.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.4") (d #t) (k 0)) (d (n "testing") (r "^0.33.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0h63jx3s2isfscg2ch9vhd2mwha4h6ydsbv8p5f59m3f20dp28ww")))

(define-public crate-swc_ecma_transforms_module-0.170.17 (c (n "swc_ecma_transforms_module") (v "0.170.17") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.11") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.134.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.127.15") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.153.17") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.130.15") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.117.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.4") (d #t) (k 0)) (d (n "testing") (r "^0.33.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1q7zpbh78nnlpm919ijk6vjhbwb5akwan0mvp4mnx4pa9fxwa6r1")))

(define-public crate-swc_ecma_transforms_module-0.170.18 (c (n "swc_ecma_transforms_module") (v "0.170.18") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.134.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.127.16") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.153.18") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.130.16") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.117.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.5") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0z1s84zw6jyibk1bmbsybzihc5gnvncsbphhrfalmyidklgzq3gs")))

(define-public crate-swc_ecma_transforms_module-0.170.19 (c (n "swc_ecma_transforms_module") (v "0.170.19") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.134.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.127.17") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.153.19") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.130.17") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.117.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.5") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "15cj8m90dn4x45xkh89zi6gdvgrk4737xrbxkzimvwjchnwvzd1c")))

(define-public crate-swc_ecma_transforms_module-0.170.20 (c (n "swc_ecma_transforms_module") (v "0.170.20") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.134.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.127.18") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.153.20") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.130.18") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.117.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.5") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "15d4p7n27ib8skjdbpnpwpa3glsfbpalldfpi944ccrk482mnndi")))

(define-public crate-swc_ecma_transforms_module-0.170.21 (c (n "swc_ecma_transforms_module") (v "0.170.21") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.134.13") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.127.19") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.153.21") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.130.19") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.117.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.5") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1h4xh5biypkkff4jnhy5ywbpr00cprh6a2aadr996x1wlk8472r1")))

(define-public crate-swc_ecma_transforms_module-0.171.0 (c (n "swc_ecma_transforms_module") (v "0.171.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.105.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.135.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.128.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.154.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.131.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.118.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.91.0") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1sv4122pfj3aq1qx6h5wip7f8pjz9abbv3plfch1j2fs89d1h0vn")))

(define-public crate-swc_ecma_transforms_module-0.172.0 (c (n "swc_ecma_transforms_module") (v "0.172.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.136.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.129.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.155.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.132.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.119.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.0") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0s9s710a5kz4ibpa6iw7j736s9lkha71jjzznbblfy0sb1cpa4pd")))

(define-public crate-swc_ecma_transforms_module-0.172.1 (c (n "swc_ecma_transforms_module") (v "0.172.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.136.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.129.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.155.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.132.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.119.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.0") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "17dzccbb6p3vgx3qs837a7arasjwrq9n8j0ml9rqwjrj5s8iybdj")))

(define-public crate-swc_ecma_transforms_module-0.172.2 (c (n "swc_ecma_transforms_module") (v "0.172.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.136.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.129.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.155.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.132.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.119.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.0") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0naq91df7aziyhap1friz0q6khd1674p7p98j8ckg8lh1ym4c8nw")))

(define-public crate-swc_ecma_transforms_module-0.172.3 (c (n "swc_ecma_transforms_module") (v "0.172.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.136.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.129.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.155.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.132.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.119.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.0") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "01qh4lxjv7sfvd5q3jy13bl2nvqg14qinwkjz873bsafknzbxgdj")))

(define-public crate-swc_ecma_transforms_module-0.172.4 (c (n "swc_ecma_transforms_module") (v "0.172.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.136.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.129.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.155.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.132.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.119.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.0") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "070lfxfq6qn0fmwa557sq6lfpvzfcm2q1b5wmyqjkvvypzhvqi8d")))

(define-public crate-swc_ecma_transforms_module-0.172.5 (c (n "swc_ecma_transforms_module") (v "0.172.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.136.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.129.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.155.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.132.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.119.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.0") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "17sn9rg3vpb90c5bnhlf1wixd3zyr2i7ai3f9g02pplilwan2s5k")))

(define-public crate-swc_ecma_transforms_module-0.172.6 (c (n "swc_ecma_transforms_module") (v "0.172.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.136.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.129.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.155.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.132.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.119.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.0") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0avwzslklkvknwrrb6qq4h5z2s99l7l2vzhykpxm0h9v6ggw9asw")))

(define-public crate-swc_ecma_transforms_module-0.172.7 (c (n "swc_ecma_transforms_module") (v "0.172.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.136.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.129.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.155.6") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.132.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.119.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.0") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "03ngpzpw3cdf8j580s6qssn0v2s8spn9cw6hbxa8497iw0sd6bq3")))

(define-public crate-swc_ecma_transforms_module-0.172.8 (c (n "swc_ecma_transforms_module") (v "0.172.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.136.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.129.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.155.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.132.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.119.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.1") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1hbl6ds273zc84sq3ca1x2gq8bvxdc7i1bjnhp5047n9c7vai74y")))

(define-public crate-swc_ecma_transforms_module-0.172.9 (c (n "swc_ecma_transforms_module") (v "0.172.9") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.136.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.129.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.155.8") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.132.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.119.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.1") (d #t) (k 0)) (d (n "testing") (r "^0.33.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0h1v04rrkwqpl0g1yk5q7qn5rl2p6i0f43d49582nar06c5r1gdr")))

(define-public crate-swc_ecma_transforms_module-0.172.10 (c (n "swc_ecma_transforms_module") (v "0.172.10") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.136.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.129.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.155.9") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.132.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.119.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.1") (d #t) (k 0)) (d (n "testing") (r "^0.33.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0iic7sizmfvr6wl304vz6wmjhsd8sdzhqrpxrcg1i191x6lvjid6")))

(define-public crate-swc_ecma_transforms_module-0.172.11 (c (n "swc_ecma_transforms_module") (v "0.172.11") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.136.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.129.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.155.10") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.132.7") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.119.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.1") (d #t) (k 0)) (d (n "testing") (r "^0.33.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1zakh0v6p125qwir7vj8h4mgsjzjmgqmw14x84rs6v3z4qbg71bf")))

(define-public crate-swc_ecma_transforms_module-0.172.12 (c (n "swc_ecma_transforms_module") (v "0.172.12") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.136.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.129.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.155.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.132.8") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.119.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.1") (d #t) (k 0)) (d (n "testing") (r "^0.33.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1i50jckq9krsf7x8shyh3df6x5xmvcv9bj96s31vdi5ki2j3c8j4")))

(define-public crate-swc_ecma_transforms_module-0.172.13 (c (n "swc_ecma_transforms_module") (v "0.172.13") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.136.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.129.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.155.12") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.132.9") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.119.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.1") (d #t) (k 0)) (d (n "testing") (r "^0.33.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1v9c9q0xib2dgmg3smb9wczyh11bggl1pp02swisjwj1slmry1gl")))

(define-public crate-swc_ecma_transforms_module-0.172.14 (c (n "swc_ecma_transforms_module") (v "0.172.14") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.15") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.15") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.136.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.129.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.155.13") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.132.10") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.119.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.2") (d #t) (k 0)) (d (n "testing") (r "^0.33.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1mwqgzc0fhyiw1bvlahkmmmwlyc2qi4xm42vps0qqsp2b0y8qjxc")))

(define-public crate-swc_ecma_transforms_module-0.172.15 (c (n "swc_ecma_transforms_module") (v "0.172.15") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.16") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.14") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.16") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.16") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.136.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.129.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.155.14") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.132.11") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.119.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.3") (d #t) (k 0)) (d (n "testing") (r "^0.33.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "10lk83xdb3npnda6ivnia6phr0smi6q3dpqgimrm5vcqggx7i30j")))

(define-public crate-swc_ecma_transforms_module-0.172.16 (c (n "swc_ecma_transforms_module") (v "0.172.16") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.17") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.17") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.136.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.129.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.155.15") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.132.12") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.119.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.4") (d #t) (k 0)) (d (n "testing") (r "^0.33.18") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0hbz10cnl9na91vgh6l8ax8aidpczhq19pj2r6bdnr0galmq9lc5")))

(define-public crate-swc_ecma_transforms_module-0.172.17 (c (n "swc_ecma_transforms_module") (v "0.172.17") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.136.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.129.13") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.155.16") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.132.13") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.119.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.5") (d #t) (k 0)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0bg3s4zj08ksyl4mijr1jhsi8qywfy488fg8fpxpp1djlrym0ql0")))

(define-public crate-swc_ecma_transforms_module-0.172.18 (c (n "swc_ecma_transforms_module") (v "0.172.18") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.136.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.129.14") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.155.17") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.132.14") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.119.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.5") (d #t) (k 0)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0dfwja7hilckrfcwv0gd15mw7wb06iqcss5smhgaa81qs1jq7jf3")))

(define-public crate-swc_ecma_transforms_module-0.172.19 (c (n "swc_ecma_transforms_module") (v "0.172.19") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.136.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.129.15") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.155.18") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.132.15") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.119.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.5") (d #t) (k 0)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "10068a4xa34y2770kra3z9p5h8x580373kyannsyp350dpam5yyz")))

(define-public crate-swc_ecma_transforms_module-0.173.0 (c (n "swc_ecma_transforms_module") (v "0.173.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.0") (d #t) (k 0)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "040gbkkvg9dhfjg1q0a7yb32wmp65fja71c4dzqndq62w36hvznw")))

(define-public crate-swc_ecma_transforms_module-0.173.1 (c (n "swc_ecma_transforms_module") (v "0.173.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.0") (d #t) (k 0)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1aw2l6b65i67csvvz4jbxpqqs5l455281w1ly62pqxq5j3yz0ghi")))

(define-public crate-swc_ecma_transforms_module-0.173.2 (c (n "swc_ecma_transforms_module") (v "0.173.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.0") (d #t) (k 0)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1jzz8rrsnlx4idwsgchmz3d4ff67f7iji5mw2jyvmc04jgdkxl2r")))

(define-public crate-swc_ecma_transforms_module-0.173.3 (c (n "swc_ecma_transforms_module") (v "0.173.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.0") (d #t) (k 0)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "16zx2hybyrvn7x4ckrkihib94d009qcqyr7isdmqk4dqmwabk73j")))

(define-public crate-swc_ecma_transforms_module-0.173.4 (c (n "swc_ecma_transforms_module") (v "0.173.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.7") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.17") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.19") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.19") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.1") (d #t) (k 0)) (d (n "testing") (r "^0.33.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1gzkpdynac191g68cm3g7dkz403swfwdnivn7bamw06raw8mm6xq")))

(define-public crate-swc_ecma_transforms_module-0.173.5 (c (n "swc_ecma_transforms_module") (v "0.173.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.7") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.17") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.19") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.19") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.1") (d #t) (k 0)) (d (n "testing") (r "^0.33.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0g2qy191lzaqsw5324m41j42rclw1v5rgz2c1pl3rvlv3p4wc44z")))

(define-public crate-swc_ecma_transforms_module-0.173.6 (c (n "swc_ecma_transforms_module") (v "0.173.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.7") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.17") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.19") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.19") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.6") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.1") (d #t) (k 0)) (d (n "testing") (r "^0.33.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0y18vqy96f4q7h0l3h3ywgb8bj2lsjjmwyknbh7vhiqf5v3rnskc")))

(define-public crate-swc_ecma_transforms_module-0.173.7 (c (n "swc_ecma_transforms_module") (v "0.173.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.7") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.17") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.19") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.19") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.1") (d #t) (k 0)) (d (n "testing") (r "^0.33.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "01yvcmmnzxksvn8zvhhh27aqq1zj24v1ing5rmcjxl7hnzc7wydf")))

(define-public crate-swc_ecma_transforms_module-0.173.8 (c (n "swc_ecma_transforms_module") (v "0.173.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.7") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.17") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.19") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.19") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.1") (d #t) (k 0)) (d (n "testing") (r "^0.33.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0h2kfyvbzp98ik2mkj5dk3al2bgwb99pv3p21c2y1fnynafmls46")))

(define-public crate-swc_ecma_transforms_module-0.173.9 (c (n "swc_ecma_transforms_module") (v "0.173.9") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.7") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.17") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.19") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.19") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.8") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.1") (d #t) (k 0)) (d (n "testing") (r "^0.33.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "12ax9w396spw9q9anlkvqf2bkr3x97mgvj9gbgr9fz9fvgs0m1p4")))

(define-public crate-swc_ecma_transforms_module-0.173.10 (c (n "swc_ecma_transforms_module") (v "0.173.10") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.9") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1v73476qzmzw0xhhbvykcw1m979jjqvgsb1fcwm4iniizyj3d772")))

(define-public crate-swc_ecma_transforms_module-0.173.11 (c (n "swc_ecma_transforms_module") (v "0.173.11") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.10") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0gib58vd66xmnqs55i2zwdgv0n78cshx0yjbf6gjzx2v34i7y1d0")))

(define-public crate-swc_ecma_transforms_module-0.173.12 (c (n "swc_ecma_transforms_module") (v "0.173.12") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0grx5h0jha2gl50i4w62ly2p916h3sb58az86dln8d9jpj0k0jfr")))

(define-public crate-swc_ecma_transforms_module-0.173.13 (c (n "swc_ecma_transforms_module") (v "0.173.13") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0n68nw5g6i7qv6nh84rzm0h9bnhif61fzm9j8frcg67azmhi3q9w")))

(define-public crate-swc_ecma_transforms_module-0.173.14 (c (n "swc_ecma_transforms_module") (v "0.173.14") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.12") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.7") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1aa8s451vx3561gad3q7jq02y4c68swp31vqdh1bxk242bjz27q8")))

(define-public crate-swc_ecma_transforms_module-0.173.15 (c (n "swc_ecma_transforms_module") (v "0.173.15") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.13") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.8") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0bl3cg6gfcc3qwdahw0r5xc5ss462y3hwjmqvdlkymy11viq8aa7")))

(define-public crate-swc_ecma_transforms_module-0.173.16 (c (n "swc_ecma_transforms_module") (v "0.173.16") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.14") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.9") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "072zy4nw2fjgphs5qr9cqfdalgfzh3d7mlrbx87pykv6ac0xs6g5")))

(define-public crate-swc_ecma_transforms_module-0.173.17 (c (n "swc_ecma_transforms_module") (v "0.173.17") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.14") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.9") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "12g0vawqw8sfwp575mcrxa81vppk5r14xnp3abqpb0cx8qwd1lqk")))

(define-public crate-swc_ecma_transforms_module-0.173.18 (c (n "swc_ecma_transforms_module") (v "0.173.18") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.15") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.10") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "09r6ml9n06qhi0q75if8vbpqimy5afq0dap3l8izv2fjpnkqv77z")))

(define-public crate-swc_ecma_transforms_module-0.173.19 (c (n "swc_ecma_transforms_module") (v "0.173.19") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.16") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.10") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0j5a3x564vp6d4lzkikxdgg0axxnqawhi32xdgrip81whqn23xhs")))

(define-public crate-swc_ecma_transforms_module-0.173.20 (c (n "swc_ecma_transforms_module") (v "0.173.20") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.17") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.11") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "15iq0qjjzifcbg9q8iis57bc2rwq4fzkwlh1id2y4hlq8jy952vg")))

(define-public crate-swc_ecma_transforms_module-0.173.21 (c (n "swc_ecma_transforms_module") (v "0.173.21") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.18") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.12") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.3") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0hslq4fj2407yg4pmpjfn76www8l1kkn092zkk8yqajzp0y73s37")))

(define-public crate-swc_ecma_transforms_module-0.173.22 (c (n "swc_ecma_transforms_module") (v "0.173.22") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.13") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.19") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.13") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.3") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0d5ibwhkk4771hwklxybzfkmk22800njnzacxh4inlchrgap6dpv")))

(define-public crate-swc_ecma_transforms_module-0.173.23 (c (n "swc_ecma_transforms_module") (v "0.173.23") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.14") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.20") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.14") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.3") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "130v0yrkzifbmvm4xirnrl4hhxj5d9jjyw751xwx32lkh6lig5zk")))

(define-public crate-swc_ecma_transforms_module-0.173.24 (c (n "swc_ecma_transforms_module") (v "0.173.24") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.14") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.20") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.14") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.3") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0b1x0vgzyz886mffz9rja5ss2qllimk3q0l08zkr6nl84yv95iqj")))

(define-public crate-swc_ecma_transforms_module-0.173.25 (c (n "swc_ecma_transforms_module") (v "0.173.25") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.14") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.21") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.14") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.3") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0lw52pdih6nfh1fzykqk8jcbrvv3wzkwxxb39ldbg943syyzj3ww")))

(define-public crate-swc_ecma_transforms_module-0.173.26 (c (n "swc_ecma_transforms_module") (v "0.173.26") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.15") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.22") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.15") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.3") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1ils8bib3b7lrfs7c636ljappgnim0f9yc3cblb50f3x7mvq5yd5")))

(define-public crate-swc_ecma_transforms_module-0.173.27 (c (n "swc_ecma_transforms_module") (v "0.173.27") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.16") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.23") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.16") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.3") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0a3gbpd09vvmdj5535pq5l7g9w733vp0sqqwxfy4gjf313ip9zgs")))

(define-public crate-swc_ecma_transforms_module-0.173.28 (c (n "swc_ecma_transforms_module") (v "0.173.28") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.17") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.24") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.17") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.4") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0lwjaqzag0s8s6c9rnhp88y5bj0m40yjmh94agja482lqn34a11i")))

(define-public crate-swc_ecma_transforms_module-0.173.29 (c (n "swc_ecma_transforms_module") (v "0.173.29") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.18") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.25") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.18") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.4") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "06aag83x4lcgm96z1hh7nq9433vsjkzyqasjba9czvgmg87i5r8c")))

(define-public crate-swc_ecma_transforms_module-0.173.30 (c (n "swc_ecma_transforms_module") (v "0.173.30") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.19") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.26") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.19") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.15") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.4") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0dpcpy5fgr81ag90gwz2q21jp9d06qj4jyja2cp14zyri88r68rr")))

(define-public crate-swc_ecma_transforms_module-0.173.31 (c (n "swc_ecma_transforms_module") (v "0.173.31") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.19") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.27") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.19") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.15") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.4") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0ql7nzc30mbm5lr4bwq8hazfff8ggazp58y8wmni06hpkcmgh2cj")))

(define-public crate-swc_ecma_transforms_module-0.173.32 (c (n "swc_ecma_transforms_module") (v "0.173.32") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.21") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.21") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.20") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.28") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.20") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.16") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.5") (d #t) (k 0)) (d (n "testing") (r "^0.33.22") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "02x68ffkyq0p8jlp4szscbgvw09pymxnc57xgl4rfrpm6qsrngn7")))

(define-public crate-swc_ecma_transforms_module-0.173.33 (c (n "swc_ecma_transforms_module") (v "0.173.33") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.21") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.21") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.13") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.21") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.28") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.21") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.17") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.5") (d #t) (k 0)) (d (n "testing") (r "^0.33.22") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0d8qjgw00rc3p64n2bvxjx63ff41xaq8mr99jz3w097s3khqblb4")))

(define-public crate-swc_ecma_transforms_module-0.173.34 (c (n "swc_ecma_transforms_module") (v "0.173.34") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.22") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.22") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.14") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.22") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.29") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.22") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.18") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.6") (d #t) (k 0)) (d (n "testing") (r "^0.33.23") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0x93sl4cs8p42g9jg559apqyh18w3ma0kph0w4rcwq95sywhby2a")))

(define-public crate-swc_ecma_transforms_module-0.173.35 (c (n "swc_ecma_transforms_module") (v "0.173.35") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.21") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.23") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.23") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.15") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.23") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.30") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.23") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.19") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.7") (d #t) (k 0)) (d (n "testing") (r "^0.33.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0mwj98jf84pppbbs0yxsxqn0ds06yhkqpjab2cr3cv5qpy0h67zq")))

(define-public crate-swc_ecma_transforms_module-0.173.36 (c (n "swc_ecma_transforms_module") (v "0.173.36") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.21") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.23") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.23") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.15") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.24") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.31") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.24") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.19") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.7") (d #t) (k 0)) (d (n "testing") (r "^0.33.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1rp4v55my75i4ssnzxhhzp2xrnm3msplr2f4gag43x9bd9xq2s7x")))

(define-public crate-swc_ecma_transforms_module-0.173.37 (c (n "swc_ecma_transforms_module") (v "0.173.37") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.21") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.23") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.23") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.15") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.24") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.32") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.24") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.19") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.7") (d #t) (k 0)) (d (n "testing") (r "^0.33.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1ll3iwz4wp4ajl70h8q19319cdkagkbs988x1nidy85i52b6f7nv")))

(define-public crate-swc_ecma_transforms_module-0.173.38 (c (n "swc_ecma_transforms_module") (v "0.173.38") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.21") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.23") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.23") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.15") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.24") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.32") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.24") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.19") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.7") (d #t) (k 0)) (d (n "testing") (r "^0.33.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0i463kx8043fkpz7qd7z4yzqi5id13x1pc9ph56lf53fc6k3cpyf")))

(define-public crate-swc_ecma_transforms_module-0.173.39 (c (n "swc_ecma_transforms_module") (v "0.173.39") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.22") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.24") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.24") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.137.16") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.130.25") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.156.33") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.133.25") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.120.20") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.25") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1f001l8280i0cjvip3dz016jjabdf66kgm592amjdfwwhfxliikg")))

(define-public crate-swc_ecma_transforms_module-0.174.0 (c (n "swc_ecma_transforms_module") (v "0.174.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.138.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.131.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.157.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.134.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.121.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.94.0") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1fw03j3v4skxv2bbdfkqmwrqp32vr51rvxxszbw00qryaq5kcvan")))

(define-public crate-swc_ecma_transforms_module-0.174.1 (c (n "swc_ecma_transforms_module") (v "0.174.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.1") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.138.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.131.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.157.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.134.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.121.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.94.0") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1bw6rs1m5r7bjkj8q1f6ww37694q6hvqmksz8rpq4m66q2ig2k2v")))

(define-public crate-swc_ecma_transforms_module-0.174.2 (c (n "swc_ecma_transforms_module") (v "0.174.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.1") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.138.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.131.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.157.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.134.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.121.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.94.0") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0i093c2j3mxnpa8dwfvs6fvxaxrh1m5ii68y71zp1k1awn92cd9p")))

(define-public crate-swc_ecma_transforms_module-0.174.3 (c (n "swc_ecma_transforms_module") (v "0.174.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.138.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.131.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.157.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.134.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.121.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.94.0") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1bxcz50fbc1107mw4lci1jqx60wlzm5z067mkbsl3sgn1vk9acqj")))

(define-public crate-swc_ecma_transforms_module-0.174.4 (c (n "swc_ecma_transforms_module") (v "0.174.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.138.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.131.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.157.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.134.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.121.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.94.0") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "09m1wx1bqgf9vbmg8gak6j8bnm7q4npbcl6mjczvfjq92pvbbnpm")))

(define-public crate-swc_ecma_transforms_module-0.174.5 (c (n "swc_ecma_transforms_module") (v "0.174.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.138.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.131.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.157.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.134.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.121.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.94.0") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0jskj7rh962z896xdcyaw43a0m9dmla1nb8s21fbphsmnar45pvq")))

(define-public crate-swc_ecma_transforms_module-0.175.0 (c (n "swc_ecma_transforms_module") (v "0.175.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.139.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.132.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.158.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.135.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.0") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1iwscs3z27n8d2wcwv9fai52200cv81g05qsy9ykj59svcryr2la")))

(define-public crate-swc_ecma_transforms_module-0.175.1 (c (n "swc_ecma_transforms_module") (v "0.175.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.139.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.132.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.158.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.135.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.0") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1z44xxm9d1j5f1wimcnrpw299ilh5il7w6wjgcap65s63cyjvw3i")))

(define-public crate-swc_ecma_transforms_module-0.175.2 (c (n "swc_ecma_transforms_module") (v "0.175.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.139.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.132.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.158.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.135.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.0") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "168hm3da2gnsvlixs93x5prsrb4klnv1hw2phqfllrgx0038x776")))

(define-public crate-swc_ecma_transforms_module-0.175.3 (c (n "swc_ecma_transforms_module") (v "0.175.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.139.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.132.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.158.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.135.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.0") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "035ri3gdplgyc35znazvsfg62lbjgbsp4g45zrpbwin4s2nr9z30")))

(define-public crate-swc_ecma_transforms_module-0.175.4 (c (n "swc_ecma_transforms_module") (v "0.175.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.139.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.132.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.158.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.135.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.0") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0f26vhjsc8w2j53c37g9n79zqp9kvw02zhz2szfrvv442288knqq")))

(define-public crate-swc_ecma_transforms_module-0.175.5 (c (n "swc_ecma_transforms_module") (v "0.175.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.139.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.132.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.158.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.135.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.0") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "00qcam06lkphw365q22bg7h935kq2k72kkrafq0j62jyzm9jih4i")))

(define-public crate-swc_ecma_transforms_module-0.175.6 (c (n "swc_ecma_transforms_module") (v "0.175.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.139.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.132.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.158.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.135.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.122.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1d409vk3xrmcxn7pvignx6bwj1ln3khahvba3q2y6snbid1sv3cx")))

(define-public crate-swc_ecma_transforms_module-0.175.7 (c (n "swc_ecma_transforms_module") (v "0.175.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.139.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.132.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.158.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.135.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.122.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1vamlyl81d4asgaszjcjj02kjyfz0mxky40nld39vzhl7y345fj1")))

(define-public crate-swc_ecma_transforms_module-0.176.0 (c (n "swc_ecma_transforms_module") (v "0.176.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.133.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.159.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.136.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0m833nxb5p99vf0ys6kc32812vwsx72dl7rm6sq0ysm3hab38h5h")))

(define-public crate-swc_ecma_transforms_module-0.176.1 (c (n "swc_ecma_transforms_module") (v "0.176.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.133.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.159.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.136.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0zl0av863bdhgvrj441nf7vhy79ij53djhl27ikw4m9hp2gif570")))

(define-public crate-swc_ecma_transforms_module-0.176.2 (c (n "swc_ecma_transforms_module") (v "0.176.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.133.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.159.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.136.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1lh04ddx84vwwn4pw9k4wfg1g93b49prmcf1cyns68bw170hjcha")))

(define-public crate-swc_ecma_transforms_module-0.176.3 (c (n "swc_ecma_transforms_module") (v "0.176.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.133.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.159.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.136.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1lbr27rvcdk854bb6swnk2sikps1gr50wpjwb4i50hvl7mkpxgqy")))

(define-public crate-swc_ecma_transforms_module-0.176.4 (c (n "swc_ecma_transforms_module") (v "0.176.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.133.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.159.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.136.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "16shyh22qr6b0qq84jsgy4pxcz625sxv7ckqxyjv34rs8842lwcd")))

(define-public crate-swc_ecma_transforms_module-0.176.5 (c (n "swc_ecma_transforms_module") (v "0.176.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.133.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.159.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.136.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1l86lrl6r44cy5jy85lqx3yil3fybh793lj48mfwl7i97y7xixxd")))

(define-public crate-swc_ecma_transforms_module-0.176.6 (c (n "swc_ecma_transforms_module") (v "0.176.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.133.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.159.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.136.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1a1vy73dx38324jhvz94y9sl871p4l9s0f219hzis9v8qyqribck")))

(define-public crate-swc_ecma_transforms_module-0.176.7 (c (n "swc_ecma_transforms_module") (v "0.176.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.133.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.159.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.136.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "041k94wyixrf9874i6fyghvlnaga0d7x7xbqya3m2jan1zhgrj9g")))

(define-public crate-swc_ecma_transforms_module-0.176.8 (c (n "swc_ecma_transforms_module") (v "0.176.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.133.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.159.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.136.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0qvnmdldkvnzc4ccs91zl9gyib190rjmxyiw2vm06gg5ldb5bdl5")))

(define-public crate-swc_ecma_transforms_module-0.176.9 (c (n "swc_ecma_transforms_module") (v "0.176.9") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.133.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.159.6") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.136.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1ybw9c3yqf9dck6lz4hvhw1xw87arprx4x7v9fplg8mgm0hx0a8m")))

(define-public crate-swc_ecma_transforms_module-0.176.10 (c (n "swc_ecma_transforms_module") (v "0.176.10") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.133.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.159.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.136.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0qbccxmkg6lxvzl1ypva5zcgvdcn2jx08cckc1mlc8x16y86xzlb")))

(define-public crate-swc_ecma_transforms_module-0.176.11 (c (n "swc_ecma_transforms_module") (v "0.176.11") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.133.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.159.8") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.136.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1pax6364si8rkqjh0daaq27d9rvvn1njh92c8blf5lhixz0y8h03")))

(define-public crate-swc_ecma_transforms_module-0.176.12 (c (n "swc_ecma_transforms_module") (v "0.176.12") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.133.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.159.9") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.136.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "01di8jisjx0ddak23zywwdn3jnxkkrailasg2yz06yxjpxqxfs4r")))

(define-public crate-swc_ecma_transforms_module-0.176.13 (c (n "swc_ecma_transforms_module") (v "0.176.13") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.133.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.159.10") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.136.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1xzn813aqfn1slmzsd1zxdxlfpgmkny5bq862piiydrv1wv1ni6q")))

(define-public crate-swc_ecma_transforms_module-0.176.14 (c (n "swc_ecma_transforms_module") (v "0.176.14") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.133.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.159.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.136.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "02x6xsinfs9br4xxbsaacklhn27cg2vwxyix8w29vadqdvccsfaj")))

(define-public crate-swc_ecma_transforms_module-0.176.15 (c (n "swc_ecma_transforms_module") (v "0.176.15") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.133.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.159.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.136.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0klgksp21z8a6bhwryd20zpkgwznffkg64mhgi0frxji1v0zp44s")))

(define-public crate-swc_ecma_transforms_module-0.176.16 (c (n "swc_ecma_transforms_module") (v "0.176.16") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.133.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.159.12") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.136.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "130wm9j4jv5ffp0gcx13di7iskkc60n30iwji5y5lw6y5mgc7qdf")))

(define-public crate-swc_ecma_transforms_module-0.176.17 (c (n "swc_ecma_transforms_module") (v "0.176.17") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.133.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.159.13") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.136.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.123.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0gfzjf6fypq3d2x06w3igr8mr04a4mirk0dxr46xi5rw6jsa572n")))

(define-public crate-swc_ecma_transforms_module-0.176.18 (c (n "swc_ecma_transforms_module") (v "0.176.18") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.133.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.159.14") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.136.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.123.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1pgk1dbmc1d6abn51zvyg5jcb0hvvcv1s4bi18gj5hvmwj8ncvra")))

(define-public crate-swc_ecma_transforms_module-0.176.19 (c (n "swc_ecma_transforms_module") (v "0.176.19") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.133.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.159.15") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.136.7") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.123.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "09xskajbl53yasmq50y2zcx0ndkjhdzmjkq47n7jkspbva1baji0")))

(define-public crate-swc_ecma_transforms_module-0.176.20 (c (n "swc_ecma_transforms_module") (v "0.176.20") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.5") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.5") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.140.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.133.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.159.16") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.136.8") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.123.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.2") (d #t) (k 0)) (d (n "testing") (r "^0.34.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0qjzfzj5yy0gsmzrd18812i9sgyxawc1j6xfd5yaifvr22n9hic1")))

(define-public crate-swc_ecma_transforms_module-0.176.21 (c (n "swc_ecma_transforms_module") (v "0.176.21") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.5") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.5") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.140.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.133.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.159.17") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.136.8") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.123.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.2") (d #t) (k 0)) (d (n "testing") (r "^0.34.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "04sfbar9xb6lykps3xl6xm66wg9hz9130k3dw800h08a3zms1kxb")))

(define-public crate-swc_ecma_transforms_module-0.176.22 (c (n "swc_ecma_transforms_module") (v "0.176.22") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.5") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.5") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.140.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.133.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.159.18") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.136.9") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.123.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.2") (d #t) (k 0)) (d (n "testing") (r "^0.34.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "02ca7rrc6frmd4w4y7517psnn0sy5gql689y2m16lvr8rw5gip84")))

(define-public crate-swc_ecma_transforms_module-0.177.0 (c (n "swc_ecma_transforms_module") (v "0.177.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0p5wh04dn679f0kdy327kz5wd2l0qccr49759ngskczgziibbpl2")))

(define-public crate-swc_ecma_transforms_module-0.177.1 (c (n "swc_ecma_transforms_module") (v "0.177.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0h6953d2k08apzspjchn5qn20jgnxwbphx5la63mdvccx5a6iq5s")))

(define-public crate-swc_ecma_transforms_module-0.177.2 (c (n "swc_ecma_transforms_module") (v "0.177.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0781lnxpcfwprjw5ik9fl6frdggw5xsgm94r1lp5xj3nv23ffhsn")))

(define-public crate-swc_ecma_transforms_module-0.177.3 (c (n "swc_ecma_transforms_module") (v "0.177.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1lrzv7nvv39k0ndrawlf28hz30q1r3g8cw3l90lazrxn2yc980jx")))

(define-public crate-swc_ecma_transforms_module-0.177.4 (c (n "swc_ecma_transforms_module") (v "0.177.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0jrzw1gr6yc53psi5q02i00arlfkhlk41q36w32agd1z6fbfgid5")))

(define-public crate-swc_ecma_transforms_module-0.177.5 (c (n "swc_ecma_transforms_module") (v "0.177.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1fx7yk1cd3vcq2zbadm7c8107ly3znds2dadr374896289n40lbm")))

(define-public crate-swc_ecma_transforms_module-0.177.6 (c (n "swc_ecma_transforms_module") (v "0.177.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.6") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1l8mmkj21980n8bmdr7y469smklls8f8r3j8g3d4hwjljl82wrhq")))

(define-public crate-swc_ecma_transforms_module-0.177.7 (c (n "swc_ecma_transforms_module") (v "0.177.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0i6a5bwrkfsc19pzixa8ppjq52wz8d0j291p9zhly51x9c217rid")))

(define-public crate-swc_ecma_transforms_module-0.177.8 (c (n "swc_ecma_transforms_module") (v "0.177.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.8") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0i4qvkg5q69zm8walyjr3k0z77k47skjaa4p90b5i7mnb7kv55b3")))

(define-public crate-swc_ecma_transforms_module-0.177.9 (c (n "swc_ecma_transforms_module") (v "0.177.9") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.9") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.7") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0w0nrsbyhaqsgq4mjx47qbqwws95linzrwxvhpc6fsifb5kn0xl3")))

(define-public crate-swc_ecma_transforms_module-0.177.10 (c (n "swc_ecma_transforms_module") (v "0.177.10") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.10") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.8") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0jbhxw44v747x8wnj1vbw5vcpbl57kiy8dqc187qyww6bnpsd2nq")))

(define-public crate-swc_ecma_transforms_module-0.177.11 (c (n "swc_ecma_transforms_module") (v "0.177.11") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.10") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.8") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0906mqa7j49p8wkyl9fkmm13yzk3ng3gs4kvnldmk1984y28wij6")))

(define-public crate-swc_ecma_transforms_module-0.177.12 (c (n "swc_ecma_transforms_module") (v "0.177.12") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.1") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.1") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.9") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.1") (d #t) (k 0)) (d (n "testing") (r "^0.35.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0ffxn6qziwvrs7n9v3basqdmgh00v80bp78h028ahx8dhqj3yics")))

(define-public crate-swc_ecma_transforms_module-0.177.13 (c (n "swc_ecma_transforms_module") (v "0.177.13") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.2") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.2") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.9") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.1") (d #t) (k 0)) (d (n "testing") (r "^0.35.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "12mssyyprkacngmfsvq5bpjig702qn7v38gk4388q31qm5g8v48a")))

(define-public crate-swc_ecma_transforms_module-0.177.14 (c (n "swc_ecma_transforms_module") (v "0.177.14") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.12") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.10") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "testing") (r "^0.35.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0l4sfl1nd7gh3cp1dcz32snys6vhmswjafz42dqwwkm0cd9j4vkq")))

(define-public crate-swc_ecma_transforms_module-0.177.15 (c (n "swc_ecma_transforms_module") (v "0.177.15") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.13") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.11") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "testing") (r "^0.35.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1hisb43kwaszaxh6awybfsn5y6zx41r0647gcni03kr95plysmd6")))

(define-public crate-swc_ecma_transforms_module-0.177.16 (c (n "swc_ecma_transforms_module") (v "0.177.16") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.14") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.12") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "testing") (r "^0.35.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1n4ia156g601wavvh2kii8xdp1hsp237c8vi7lssxvphchhp2dqa")))

(define-public crate-swc_ecma_transforms_module-0.177.17 (c (n "swc_ecma_transforms_module") (v "0.177.17") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.15") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.13") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "testing") (r "^0.35.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "01h17jqfb9vrbfjj90xnldqqdb5xm46z8c3nrw28k1p847a483lh")))

(define-public crate-swc_ecma_transforms_module-0.177.18 (c (n "swc_ecma_transforms_module") (v "0.177.18") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.16") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.13") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "testing") (r "^0.35.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0zy7gz7z37n3249d7pn6szwh8vx974q1as5hcs91sm2vhkkj4r8n")))

(define-public crate-swc_ecma_transforms_module-0.177.19 (c (n "swc_ecma_transforms_module") (v "0.177.19") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.13") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.17") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.14") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "testing") (r "^0.35.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1hykfxpfs7ama45ymkbwlhv7ykicg25hqq0pxc564xb4v2z9902i")))

(define-public crate-swc_ecma_transforms_module-0.177.20 (c (n "swc_ecma_transforms_module") (v "0.177.20") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.13") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.18") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.14") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "testing") (r "^0.35.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1y8s72rzyrp7adc2vxydp1bd5lwcfx3c4ynmdww8mxx3k8nh2fq5")))

(define-public crate-swc_ecma_transforms_module-0.177.21 (c (n "swc_ecma_transforms_module") (v "0.177.21") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.14") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.19") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.15") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "testing") (r "^0.35.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "09cl9zbfrayqh7wz6j8rrybxvz1b0d469g4yiqrxf5818rrzjwfa")))

(define-public crate-swc_ecma_transforms_module-0.177.22 (c (n "swc_ecma_transforms_module") (v "0.177.22") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.15") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.20") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.16") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "testing") (r "^0.35.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0s2i3afh1dd429msv3y5rfvhd7qm0v43lqsdw4f7kwjq2vgqp1xz")))

(define-public crate-swc_ecma_transforms_module-0.177.23 (c (n "swc_ecma_transforms_module") (v "0.177.23") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.16") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.21") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.17") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "testing") (r "^0.35.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1badjqb3p7idd6s7d507rkdn4m888fv37mld23kf55ba521lfr2n")))

(define-public crate-swc_ecma_transforms_module-0.177.24 (c (n "swc_ecma_transforms_module") (v "0.177.24") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.17") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.22") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.18") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.3") (d #t) (k 0)) (d (n "testing") (r "^0.35.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1m873mg4h5khwh5m69h9ldp962lgrb3kyzy72j396hhly0qlzmg9")))

(define-public crate-swc_ecma_transforms_module-0.177.25 (c (n "swc_ecma_transforms_module") (v "0.177.25") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.18") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.23") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.19") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.15") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.4") (d #t) (k 0)) (d (n "testing") (r "^0.35.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "076j9w2d0rxgzyyxbwj3mdc1pimgl1w7vdgx4vnz7svcv47wq8d2")))

(define-public crate-swc_ecma_transforms_module-0.177.26 (c (n "swc_ecma_transforms_module") (v "0.177.26") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.4") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.4") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.19") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.24") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.20") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.15") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.4") (d #t) (k 0)) (d (n "testing") (r "^0.35.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0qvqcrr5a53nkm8fgw4n0hvixdn5x21p686x30axzkf69hvidpsj")))

(define-public crate-swc_ecma_transforms_module-0.177.27 (c (n "swc_ecma_transforms_module") (v "0.177.27") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.5") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.5") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.20") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.25") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.21") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.16") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.5") (d #t) (k 0)) (d (n "testing") (r "^0.35.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "05lf7q4213l20c384ffagjxjxm5rbw0mqcyhzbck2qwa8mks5yz0")))

(define-public crate-swc_ecma_transforms_module-0.177.28 (c (n "swc_ecma_transforms_module") (v "0.177.28") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.5") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.5") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.20") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.26") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.22") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.17") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.5") (d #t) (k 0)) (d (n "testing") (r "^0.35.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "15zhz33rwy46cwd085kmkmfqvbq5c5nd1s5s4mlsijg1md85baj5")))

(define-public crate-swc_ecma_transforms_module-0.177.29 (c (n "swc_ecma_transforms_module") (v "0.177.29") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.5") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.5") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.13") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.21") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.27") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.23") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.18") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.5") (d #t) (k 0)) (d (n "testing") (r "^0.35.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1zkv4pz4hjjbj4swhki2g766xks5bc13xksq4j8sgx9nz3bcfnzr")))

(define-public crate-swc_ecma_transforms_module-0.177.30 (c (n "swc_ecma_transforms_module") (v "0.177.30") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.1") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.6") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.6") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.14") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.22") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.28") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.24") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.19") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.6") (d #t) (k 0)) (d (n "testing") (r "^0.35.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "06hybkhvqwm2yk85h41m7nf7k2g3ng43xnfzs6bzar94a9zq59z3")))

(define-public crate-swc_ecma_transforms_module-0.177.31 (c (n "swc_ecma_transforms_module") (v "0.177.31") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.1") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.6") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.6") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.15") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.23") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.29") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.25") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.20") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.6") (d #t) (k 0)) (d (n "testing") (r "^0.35.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "182ymmai25y5n1cxqmvar2z0y8aw8xj59gk3nw8w8fk28mlfwp92")))

(define-public crate-swc_ecma_transforms_module-0.177.32 (c (n "swc_ecma_transforms_module") (v "0.177.32") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.2") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.7") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.7") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.16") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.24") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.30") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.26") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.21") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.7") (d #t) (k 0)) (d (n "testing") (r "^0.35.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0z65l1d2l2pz4y2xlhcpr5j51fv9rjn4zc6ljk52ch79zq85b7mm")))

(define-public crate-swc_ecma_transforms_module-0.177.33 (c (n "swc_ecma_transforms_module") (v "0.177.33") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.3") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.7") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.8") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.8") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.17") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.25") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.31") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.27") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.22") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "19vgdywqidzk737jnk160snnwb2zxbv9rz89h7mj061ygrdq1y5w")))

(define-public crate-swc_ecma_transforms_module-0.177.34 (c (n "swc_ecma_transforms_module") (v "0.177.34") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.18") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.26") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.32") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.28") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.23") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1xs4lcj4wdkvwg23bphg16nj86msl59f315rf006cij791rn50wi")))

(define-public crate-swc_ecma_transforms_module-0.177.35 (c (n "swc_ecma_transforms_module") (v "0.177.35") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.18") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.27") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.33") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.29") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.23") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "01fdml6s8pp0ajh634bqhlahidgbmiav7brq2d0afk76vcq6cc7a")))

(define-public crate-swc_ecma_transforms_module-0.177.36 (c (n "swc_ecma_transforms_module") (v "0.177.36") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.19") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.28") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.34") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.30") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.24") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0nas7vc49x2brrp7081h6w028m4wlbkq9b7x6khp37747ipig5ij")))

(define-public crate-swc_ecma_transforms_module-0.177.37 (c (n "swc_ecma_transforms_module") (v "0.177.37") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.20") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.29") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.35") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.31") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.25") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1b0772mxbm565d9w836sj099c9rfk592a9rqy1vwqfpi1dxl813n")))

(define-public crate-swc_ecma_transforms_module-0.177.38 (c (n "swc_ecma_transforms_module") (v "0.177.38") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.21") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.30") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.36") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.32") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.26") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "00qaailaf8qy8q23rh0rf4mbfhc492r067rdg68bz330rmrshsff")))

(define-public crate-swc_ecma_transforms_module-0.177.39 (c (n "swc_ecma_transforms_module") (v "0.177.39") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.22") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.31") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.37") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.33") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.27") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0y83f46s5nxlwzwvs3zzq24c4xlfg2d0z7n80m38dxgl7d8rpnag")))

(define-public crate-swc_ecma_transforms_module-0.177.40 (c (n "swc_ecma_transforms_module") (v "0.177.40") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.22") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.32") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.38") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.34") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1wxvnwlcd2mmli5nh9arb8plpwif5g7anby12zraaff661g7y1cd")))

(define-public crate-swc_ecma_transforms_module-0.177.41 (c (n "swc_ecma_transforms_module") (v "0.177.41") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.22") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.33") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.39") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.35") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "06x5x3rwaavsj3n5rk91g4id464dlfgxpxkmp9jp7rh0crbj68zf")))

(define-public crate-swc_ecma_transforms_module-0.177.42 (c (n "swc_ecma_transforms_module") (v "0.177.42") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.23") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.34") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.40") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.36") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0pxk6vjrbab5a6a7lv4ya4li4sfsmk882564vy88zzh5icz02djz")))

(define-public crate-swc_ecma_transforms_module-0.177.43 (c (n "swc_ecma_transforms_module") (v "0.177.43") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.23") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.35") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.41") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.37") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1d94dmldb27pb8yprl13q0ayy0cvia401s77r30mdac6x87yzgw4")))

(define-public crate-swc_ecma_transforms_module-0.177.44 (c (n "swc_ecma_transforms_module") (v "0.177.44") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.23") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.36") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.42") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.38") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "16nl83sngqa802mq6ps14ya5zd7dhlk3ri3bdyysapnx7nzck7b9")))

(define-public crate-swc_ecma_transforms_module-0.177.45 (c (n "swc_ecma_transforms_module") (v "0.177.45") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.23") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.37") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.43") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.39") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0b3ccr67yrmfzjibv7l4n6a89i4cmxw1f2r6ilnwmii8xakmvi88")))

(define-public crate-swc_ecma_transforms_module-0.177.46 (c (n "swc_ecma_transforms_module") (v "0.177.46") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.23") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.38") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.44") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.40") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "11fxsnl6ln2izqjhd8spy9di4hbdv9wz9lmf20vv5zhmakprr6h2")))

(define-public crate-swc_ecma_transforms_module-0.177.47 (c (n "swc_ecma_transforms_module") (v "0.177.47") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.23") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.39") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.45") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.41") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1b75az27m34n6jmrzdaqnj4hrkcbda7l2b758iqi6524raxc9v2z")))

(define-public crate-swc_ecma_transforms_module-0.177.48 (c (n "swc_ecma_transforms_module") (v "0.177.48") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.24") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.40") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.46") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.42") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.30") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0kbh7mfdgx5pwkrv10bxn2191ampgla83vl3k408qzjcz2nsxy4l")))

(define-public crate-swc_ecma_transforms_module-0.177.49 (c (n "swc_ecma_transforms_module") (v "0.177.49") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.25") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.41") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.47") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.43") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.31") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0j1r2j565fjahpdk359jz1kb01g3jwzpcqjlifgp0fiab62g3pag")))

(define-public crate-swc_ecma_transforms_module-0.177.50 (c (n "swc_ecma_transforms_module") (v "0.177.50") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.25") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.41") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.47") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.43") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.31") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "14b55x6a1v4myycmfgl67mpkd5s8958m5jm7jl3b671h2cxp5f9j")))

(define-public crate-swc_ecma_transforms_module-0.177.51 (c (n "swc_ecma_transforms_module") (v "0.177.51") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.26") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.42") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.48") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.44") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.32") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0ka4rm4aqrnb9afj6p38b3rgsic23gmidyiykscf4d89in4p4rrm")))

(define-public crate-swc_ecma_transforms_module-0.177.52 (c (n "swc_ecma_transforms_module") (v "0.177.52") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.27") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.43") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.49") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.45") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.33") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1c75dbb84zj28zrldhjxih60xi8ci7kj6bly76vm19q5z9vzvqz9")))

(define-public crate-swc_ecma_transforms_module-0.177.53 (c (n "swc_ecma_transforms_module") (v "0.177.53") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.27") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.44") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.50") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.46") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.33") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1ly814g8lm4xrk20nakp41y3i0xf7isi00d3l68pd51asq3wicba")))

(define-public crate-swc_ecma_transforms_module-0.177.54 (c (n "swc_ecma_transforms_module") (v "0.177.54") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.28") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.45") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.51") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.47") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.34") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1ckb99ygb5rhy5fw42lvwdgmbrl66dgxapp9rq51hx3n90h6hcnj")))

(define-public crate-swc_ecma_transforms_module-0.177.55 (c (n "swc_ecma_transforms_module") (v "0.177.55") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.28") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.46") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.52") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.48") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.34") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0k8hhhiw3a1s9m9sis80aalf33ldkcpxhpmdnmvqlq2aqb6iq0vv")))

(define-public crate-swc_ecma_transforms_module-0.177.56 (c (n "swc_ecma_transforms_module") (v "0.177.56") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.28") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.47") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.53") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.49") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.34") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0wk6ivph85bq8ps550dfyrjryncywpz0kbmh3brzjkldf49kxx7z")))

(define-public crate-swc_ecma_transforms_module-0.177.57 (c (n "swc_ecma_transforms_module") (v "0.177.57") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.28") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.48") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.54") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.50") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.34") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "15y1ir6y8cnnahxpgg1faxyxmbrw5rws1m1hxm2x336vh1jishzp")))

(define-public crate-swc_ecma_transforms_module-0.177.58 (c (n "swc_ecma_transforms_module") (v "0.177.58") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.11") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.11") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.29") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.49") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.55") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.51") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.35") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.11") (d #t) (k 0)) (d (n "testing") (r "^0.35.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1jy3m4sbyxqpb7v6w040vygz3lbmfxjkfvwq5mbdwzfc4a4qpb4s")))

(define-public crate-swc_ecma_transforms_module-0.177.59 (c (n "swc_ecma_transforms_module") (v "0.177.59") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.11") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.11") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.29") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.50") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.56") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.52") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.35") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.11") (d #t) (k 0)) (d (n "testing") (r "^0.35.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0py77flr1jxnfr7f7ns4d6sq1wd0i6ys8rl6i933az0p8kwpn162")))

(define-public crate-swc_ecma_transforms_module-0.177.60 (c (n "swc_ecma_transforms_module") (v "0.177.60") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.11") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.11") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.29") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.50") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.57") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.52") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.35") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.11") (d #t) (k 0)) (d (n "testing") (r "^0.35.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1hsccvg72zczh2y6mrwgkk3vhg3d3bd141s9bipgi97lbl9595q1")))

(define-public crate-swc_ecma_transforms_module-0.177.61 (c (n "swc_ecma_transforms_module") (v "0.177.61") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.11") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.11") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.30") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.51") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.58") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.53") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.36") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.12") (d #t) (k 0)) (d (n "testing") (r "^0.35.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "00wgb2pcrh82vsjnbrriipvhy4wcsjpji53350s359s1k682axcy")))

(define-public crate-swc_ecma_transforms_module-0.177.62 (c (n "swc_ecma_transforms_module") (v "0.177.62") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.11") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.11") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.30") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.51") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.59") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.53") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.36") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.12") (d #t) (k 0)) (d (n "testing") (r "^0.35.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "03yxqs2dy2brsynmdgp2qlj0npj6skjfgswyhq2giw8vgw4xs631")))

(define-public crate-swc_ecma_transforms_module-0.177.63 (c (n "swc_ecma_transforms_module") (v "0.177.63") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.11") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.11") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.30") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.52") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.60") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.54") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.36") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.12") (d #t) (k 0)) (d (n "testing") (r "^0.35.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "11hlmdhg4cx8ki8alpkk8sib4hb782kwbdrcqxxifmin14ipr8ll")))

(define-public crate-swc_ecma_transforms_module-0.177.64 (c (n "swc_ecma_transforms_module") (v "0.177.64") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.11") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.12") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.12") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.31") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.53") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.61") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.55") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.37") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.13") (d #t) (k 0)) (d (n "testing") (r "^0.35.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0cqsv5kpi0l3d6wifbfbarf2l5vmz56sk6xcfxcg5c3ckms70v9q")))

(define-public crate-swc_ecma_transforms_module-0.177.65 (c (n "swc_ecma_transforms_module") (v "0.177.65") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.11") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.12") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.12") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.31") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.53") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.62") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.55") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.37") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.13") (d #t) (k 0)) (d (n "testing") (r "^0.35.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0ffbi0xcwphcy8rvic56qcsmg7lp98a0sjghcylainx7l31hblp2")))

(define-public crate-swc_ecma_transforms_module-0.177.66 (c (n "swc_ecma_transforms_module") (v "0.177.66") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.32") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.54") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.63") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.56") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.38") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.14") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "11ahdwyfhdgbgjr0ipypbk7f77a9nfvrmnzrhw7k0sb5mp4yyshz")))

(define-public crate-swc_ecma_transforms_module-0.177.67 (c (n "swc_ecma_transforms_module") (v "0.177.67") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.32") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.55") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.64") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.57") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.38") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.14") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1agkhjf3sb87v1np2p3s56fjx5h0i6s07z1cr78vjjd2ywpl8q4j")))

(define-public crate-swc_ecma_transforms_module-0.177.68 (c (n "swc_ecma_transforms_module") (v "0.177.68") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.32") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.56") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.65") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.58") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.38") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.14") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0c2sk7kb103h7vdxxs4j9r1nmpfdc650v5x5xaxbg1yay3jd3rr1")))

(define-public crate-swc_ecma_transforms_module-0.177.69 (c (n "swc_ecma_transforms_module") (v "0.177.69") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.33") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.57") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.66") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.59") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.39") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1jzilwd66ibz7ppv02kx991gp3s4rfmm5m4s3hwd7l932a26qfbl")))

(define-public crate-swc_ecma_transforms_module-0.177.70 (c (n "swc_ecma_transforms_module") (v "0.177.70") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.33") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.134.58") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.160.67") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.60") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.124.39") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1941wii47s78afi1pzy5kbzsf6qfdbm7w51myfg4yx26n6jkyzyq")))

(define-public crate-swc_ecma_transforms_module-0.178.0 (c (n "swc_ecma_transforms_module") (v "0.178.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.33") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.135.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.161.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.138.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1rnk4cx0xshgbnkcgf1kalma041iliypj8lfx7ns7ix72zaldvb7")))

(define-public crate-swc_ecma_transforms_module-0.178.1 (c (n "swc_ecma_transforms_module") (v "0.178.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.33") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.135.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.161.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.138.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "05agis7x7h8bcbfy8yagdx9bqw8nj8w94x02rk37h76bp5dwcdiz")))

(define-public crate-swc_ecma_transforms_module-0.178.2 (c (n "swc_ecma_transforms_module") (v "0.178.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.33") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.135.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.161.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.138.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "123baq5hfmrywrzmq9f8kp8n6rvc37yzns72qgyyvdldinp7ydb7")))

(define-public crate-swc_ecma_transforms_module-0.178.3 (c (n "swc_ecma_transforms_module") (v "0.178.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.33") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.135.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.161.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.138.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1hi9b258fkcd2191dna48xqbyrfilvx0h6ycfqk1ibfcscsiansq")))

(define-public crate-swc_ecma_transforms_module-0.178.4 (c (n "swc_ecma_transforms_module") (v "0.178.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.33") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.135.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.161.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.138.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0hhyrdd1mpdzax9ydjbd9imyphj4gzprjrx0aj24rw8xvafy61cw")))

(define-public crate-swc_ecma_transforms_module-0.178.5 (c (n "swc_ecma_transforms_module") (v "0.178.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.33") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.135.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.161.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.138.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "156afdybkln8c9a6cylkr7z4ky79p46vn727wq7yi3k7b8ahnxr4")))

(define-public crate-swc_ecma_transforms_module-0.178.6 (c (n "swc_ecma_transforms_module") (v "0.178.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.33") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.135.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.161.6") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.138.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "18jpmahk9c2c2rq6sgilmhi2h6bm0j0mg7lvm69w3hkpi1ffv5wj")))

(define-public crate-swc_ecma_transforms_module-0.178.7 (c (n "swc_ecma_transforms_module") (v "0.178.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.34") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.135.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.161.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.138.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1fjmqsnzssrfmpj2ylqifgkabm10vk3f6pcfgxq1isv06a3r2wcr")))

(define-public crate-swc_ecma_transforms_module-0.178.8 (c (n "swc_ecma_transforms_module") (v "0.178.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.34") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.135.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.161.8") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.138.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0ilj1sahvfsfh5fvsp30xb3adaily0q5hipwgsi648d0m0xihj3m")))

(define-public crate-swc_ecma_transforms_module-0.178.9 (c (n "swc_ecma_transforms_module") (v "0.178.9") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.34") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.135.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.161.9") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.138.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0385yd2k9k8ndbpfzxqjq7k76pq44igvp4dsbd7pb1sq8ka352af")))

(define-public crate-swc_ecma_transforms_module-0.178.10 (c (n "swc_ecma_transforms_module") (v "0.178.10") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.34") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.135.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.161.10") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.138.7") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "161rjkn2r543iy2hsp4c1cz1hfa0wyacxnzbb97937af0h2x1bx4")))

(define-public crate-swc_ecma_transforms_module-0.178.11 (c (n "swc_ecma_transforms_module") (v "0.178.11") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.34") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.135.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.161.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.138.8") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1c2h9shfccflvr69hassdpcn361v3vy9gjms56qvci65lr1k8r4c")))

(define-public crate-swc_ecma_transforms_module-0.178.12 (c (n "swc_ecma_transforms_module") (v "0.178.12") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.34") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.135.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.161.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.138.8") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "18yqsz4q2s7q1asjw58l66rrqj5j1r4dzmpch7sjhz9n71lhal1s")))

(define-public crate-swc_ecma_transforms_module-0.178.13 (c (n "swc_ecma_transforms_module") (v "0.178.13") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.16") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.35") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.135.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.161.12") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.138.9") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.125.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.16") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "05nq6jnmks9184bhchrs928n2naglpbbsb3wr2l45i9wi4ky76gd")))

(define-public crate-swc_ecma_transforms_module-0.178.14 (c (n "swc_ecma_transforms_module") (v "0.178.14") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.36") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.135.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.161.13") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.138.10") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.125.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.17") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0y392rnicj2wbl645g12aj125gf2s0qk1qayp6y7hmrzbb763527")))

(define-public crate-swc_ecma_transforms_module-0.178.15 (c (n "swc_ecma_transforms_module") (v "0.178.15") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.37") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.135.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.161.14") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.138.10") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.125.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.17") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "169ykk2sxiyzc3m8rgxvcn1di87gn7r0pw37xf87c332yifah6zw")))

(define-public crate-swc_ecma_transforms_module-0.178.16 (c (n "swc_ecma_transforms_module") (v "0.178.16") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.37") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.135.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.161.15") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.138.10") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.125.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.17") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "041k1bd0wcshzkqvgyk4favc21rd5cw86gjiqzb1g5kgxl3w9fgm")))

(define-public crate-swc_ecma_transforms_module-0.178.17 (c (n "swc_ecma_transforms_module") (v "0.178.17") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.37") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.135.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.161.15") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.138.10") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.125.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.17") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1csnvdwybrfnhnrzwmmrficj8rn3spfwqqjana9la77m7wkd0vrz")))

(define-public crate-swc_ecma_transforms_module-0.178.18 (c (n "swc_ecma_transforms_module") (v "0.178.18") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.37") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.135.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.161.16") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.138.11") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.125.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.17") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0h1z9s9pbzqcfjk4k04w0ayylz8ilwnxdk80fjyxqm0ph4v13ra8")))

(define-public crate-swc_ecma_transforms_module-0.178.19 (c (n "swc_ecma_transforms_module") (v "0.178.19") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.37") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.135.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.161.17") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.138.12") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.125.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.17") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0dfaf10d2r4gb2gh0dmn1c5rpzv4qh2z0jickk3l3bj7x2iq0kk8")))

(define-public crate-swc_ecma_transforms_module-0.179.0 (c (n "swc_ecma_transforms_module") (v "0.179.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.14") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.14") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.14") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.142.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.136.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.162.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.139.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.126.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.0") (d #t) (k 0)) (d (n "testing") (r "^0.35.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1ji5jmbifngwkv0kc3p3cq97d3mdn0ds8n678smampjcbwd69fai")))

(define-public crate-swc_ecma_transforms_module-0.179.1 (c (n "swc_ecma_transforms_module") (v "0.179.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.14") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.15") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.15") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.142.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.136.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.162.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.139.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.126.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.0") (d #t) (k 0)) (d (n "testing") (r "^0.35.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0qg7sqrd3y26hlx58zih7d7sm2yi1pwl11wzi4wi94gc906gzi89")))

(define-public crate-swc_ecma_transforms_module-0.179.2 (c (n "swc_ecma_transforms_module") (v "0.179.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.16") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.16") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.142.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.136.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.162.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.139.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.126.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.1") (d #t) (k 0)) (d (n "testing") (r "^0.35.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "09xzg169x7rm95nn9w6qzq6d048qs25cwgklx4k8s29c92wx071a")))

(define-public crate-swc_ecma_transforms_module-0.179.3 (c (n "swc_ecma_transforms_module") (v "0.179.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.16") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.16") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.142.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.136.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.162.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.139.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.126.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.1") (d #t) (k 0)) (d (n "testing") (r "^0.35.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1jg6zr2xx1rnylrly58dnf9hrfv6m3rrrh5xskr5m7dxg47q83c6")))

(define-public crate-swc_ecma_transforms_module-0.179.4 (c (n "swc_ecma_transforms_module") (v "0.179.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.17") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.17") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.142.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.136.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.162.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.139.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.126.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.1") (d #t) (k 0)) (d (n "testing") (r "^0.35.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1j4bhifigzky2kkhgd06vdlnh92id927s65mzpmp1kwcqcaqf8k6")))

(define-public crate-swc_ecma_transforms_module-0.179.5 (c (n "swc_ecma_transforms_module") (v "0.179.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.17") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.17") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.142.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.136.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.162.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.139.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.126.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.1") (d #t) (k 0)) (d (n "testing") (r "^0.35.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "124vwkkca66mzskn3g0wxk7mkwl243db70vv3rbpvgbk5j5y0dzz")))

(define-public crate-swc_ecma_transforms_module-0.179.6 (c (n "swc_ecma_transforms_module") (v "0.179.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.17") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.17") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.142.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.136.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.162.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.139.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.126.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.1") (d #t) (k 0)) (d (n "testing") (r "^0.35.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1ylxzx49bzj5gjmknakf29qhi5rq7338x2is3gn91q7snpaxrwk3")))

(define-public crate-swc_ecma_transforms_module-0.179.7 (c (n "swc_ecma_transforms_module") (v "0.179.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.17") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.17") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.142.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.136.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.162.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.139.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.126.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.1") (d #t) (k 0)) (d (n "testing") (r "^0.35.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1m4b8976m6jkhhr5qvqv7ghf2hjchysdlvn6aq6d82dk26rwakc4")))

(define-public crate-swc_ecma_transforms_module-0.179.8 (c (n "swc_ecma_transforms_module") (v "0.179.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.17") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.17") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.142.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.136.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.162.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.139.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.126.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.1") (d #t) (k 0)) (d (n "testing") (r "^0.35.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "152pnggj1v25j5zq227lqbbd1sgldkjcy7fz6hylg9zlakv203p0")))

(define-public crate-swc_ecma_transforms_module-0.179.9 (c (n "swc_ecma_transforms_module") (v "0.179.9") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.17") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.17") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.142.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.136.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.162.6") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.139.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.126.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.1") (d #t) (k 0)) (d (n "testing") (r "^0.35.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0phb6g7xa0cm4f3i89spwc0gbix8g96pyjksybp5l0jarp48fs07")))

(define-public crate-swc_ecma_transforms_module-0.180.0 (c (n "swc_ecma_transforms_module") (v "0.180.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.18") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.18") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.143.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.137.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.163.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.140.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.127.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.0") (d #t) (k 0)) (d (n "testing") (r "^0.35.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0c3iswi73c6wg4g0zj5n8n3fapyypjvwr6pcb97ip57p93jiw498")))

(define-public crate-swc_ecma_transforms_module-0.180.1 (c (n "swc_ecma_transforms_module") (v "0.180.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.18") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.18") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.143.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.137.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.163.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.140.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.127.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.0") (d #t) (k 0)) (d (n "testing") (r "^0.35.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "05mksfxfnx4gpb7hiqshj9jr2r6nvps66jxjpjfyyr53kldgi4hc")))

(define-public crate-swc_ecma_transforms_module-0.180.2 (c (n "swc_ecma_transforms_module") (v "0.180.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.18") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.18") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.143.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.137.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.163.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.140.2") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.127.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.1") (d #t) (k 0)) (d (n "testing") (r "^0.35.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1597alncrl7a5kayla2cqh76da7vyp6pkxn536faqj79xndknghb")))

(define-public crate-swc_ecma_transforms_module-0.180.3 (c (n "swc_ecma_transforms_module") (v "0.180.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.17") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.19") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.19") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.143.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.137.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.163.3") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.140.3") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.127.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.2") (d #t) (k 0)) (d (n "testing") (r "^0.35.18") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1arhhj14z6yv1ksg9rz4g42ix6f2n15j92z03flhgzzsxai2jfzw")))

(define-public crate-swc_ecma_transforms_module-0.180.4 (c (n "swc_ecma_transforms_module") (v "0.180.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.17") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.19") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.19") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.143.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.137.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.163.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.140.4") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.127.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.2") (d #t) (k 0)) (d (n "testing") (r "^0.35.18") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0jzvw51a2zxgnf91scypnf3fmk1mf9034ha57bwgq7mp3a33grcw")))

(define-public crate-swc_ecma_transforms_module-0.180.5 (c (n "swc_ecma_transforms_module") (v "0.180.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.17") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.19") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.19") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.143.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.137.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.163.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.140.5") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.127.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.2") (d #t) (k 0)) (d (n "testing") (r "^0.35.18") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0xp4k3v3qny9l79yvj6cilxi7f3agc0f5iwrmnczskksk41kw379")))

(define-public crate-swc_ecma_transforms_module-0.180.6 (c (n "swc_ecma_transforms_module") (v "0.180.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.17") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.19") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.19") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.143.3") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.137.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.163.6") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.140.6") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.127.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.2") (d #t) (k 0)) (d (n "testing") (r "^0.35.18") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0b0a00syky69yyx29g5nf4rrbqrnadgnfkv5ynp1898cz9p32sjj")))

(define-public crate-swc_ecma_transforms_module-0.180.7 (c (n "swc_ecma_transforms_module") (v "0.180.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.17") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.19") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.19") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.143.4") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.137.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.163.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.140.7") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.127.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.3") (d #t) (k 0)) (d (n "testing") (r "^0.35.18") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1r4hc7413p6ayqqxnagyqxa1avnkcphx99qf3ds3lzhk5br3prah")))

(define-public crate-swc_ecma_transforms_module-0.180.8 (c (n "swc_ecma_transforms_module") (v "0.180.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.143.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.137.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.163.8") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.140.8") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.4") (d #t) (k 0)) (d (n "testing") (r "^0.35.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1jqhn3azqqpcgd8233i32p6p84imgh96f1kh31sh9wh8yavfwzsk")))

(define-public crate-swc_ecma_transforms_module-0.180.9 (c (n "swc_ecma_transforms_module") (v "0.180.9") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.143.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.137.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.163.9") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.140.9") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.4") (d #t) (k 0)) (d (n "testing") (r "^0.35.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0vh1gxbbdc41qpczgyfllj685riykqyzw5qy8z2z5pfhjqzlm14c")))

(define-public crate-swc_ecma_transforms_module-0.180.10 (c (n "swc_ecma_transforms_module") (v "0.180.10") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.143.5") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.137.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.163.10") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.140.10") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.4") (d #t) (k 0)) (d (n "testing") (r "^0.35.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "03h5zikwglnmygjh43kzaqghy4p62fzvyx5ygg8355l39yg6ni39")))

(define-public crate-swc_ecma_transforms_module-0.180.11 (c (n "swc_ecma_transforms_module") (v "0.180.11") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.20") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.20") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.143.6") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.137.11") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.163.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.140.11") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.127.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.5") (d #t) (k 0)) (d (n "testing") (r "^0.35.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0n9lm4ch367agm6g70w5i6ghiqg6z5mn3i1nidms8w5hmjccda7i")))

(define-public crate-swc_ecma_transforms_module-0.180.12 (c (n "swc_ecma_transforms_module") (v "0.180.12") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.21") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.21") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.143.7") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.137.12") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.163.12") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.140.12") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.127.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.6") (d #t) (k 0)) (d (n "testing") (r "^0.35.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "03zch00gbdynhnn3k9j6y21bkkn2b4015i94mdaxwg7fwrq3h3da")))

(define-public crate-swc_ecma_transforms_module-0.180.13 (c (n "swc_ecma_transforms_module") (v "0.180.13") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.21") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.21") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.143.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.137.13") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.163.13") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.140.13") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.127.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.6") (d #t) (k 0)) (d (n "testing") (r "^0.35.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0nl8hxnkjg4gc3igr6caw5gqwzx29jp9hwdilsxh68h6namjf1lc")))

(define-public crate-swc_ecma_transforms_module-0.180.14 (c (n "swc_ecma_transforms_module") (v "0.180.14") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.21") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.21") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.143.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.137.14") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.163.14") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.140.14") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.127.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.6") (d #t) (k 0)) (d (n "testing") (r "^0.35.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "03ckwnx2mdgmdy8302zzq91q3n83p6gmrkbg1xzc2yv2w2smzqmj")))

(define-public crate-swc_ecma_transforms_module-0.180.15 (c (n "swc_ecma_transforms_module") (v "0.180.15") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.21") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.21") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.143.8") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.137.14") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.163.15") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.140.14") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.127.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.6") (d #t) (k 0)) (d (n "testing") (r "^0.35.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0mccim4q3ki1jc02dn7yl9p8nyap3hjnpw74kq9rgab1rr45c8yq")))

(define-public crate-swc_ecma_transforms_module-0.180.16 (c (n "swc_ecma_transforms_module") (v "0.180.16") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.22") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.22") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.143.9") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.137.15") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.163.16") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.140.15") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.127.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.6") (d #t) (k 0)) (d (n "testing") (r "^0.35.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1s4j9q6ryrd25iz2h0r42b1w8a76qfmnlbygga37ajfhm95x2dv4")))

(define-public crate-swc_ecma_transforms_module-0.180.17 (c (n "swc_ecma_transforms_module") (v "0.180.17") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.23") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.23") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.143.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.137.16") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.163.17") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.140.16") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.127.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.7") (d #t) (k 0)) (d (n "testing") (r "^0.35.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1428sh644l45xy1b5bxdhs2d7kz8s876y2cdyx0fi13kbsfkzic2")))

(define-public crate-swc_ecma_transforms_module-0.180.18 (c (n "swc_ecma_transforms_module") (v "0.180.18") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.81") (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.23") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.23") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.143.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.137.16") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.163.17") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.140.16") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.127.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.7") (d #t) (k 0)) (d (n "testing") (r "^0.35.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "1ra2cb7aapsqj3wkgrfw4sq7nm7n0iqgz5d8sczl5ivqvi0sjpqp")))

(define-public crate-swc_ecma_transforms_module-0.180.19 (c (n "swc_ecma_transforms_module") (v "0.180.19") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.81") (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.23") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.23") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.143.10") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.137.16") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.163.17") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.140.16") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.127.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.7") (d #t) (k 0)) (d (n "testing") (r "^0.35.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "18jkaihr8np1ln8vih5yhrs8vypdqas1zh33b854pap9v6sbyk4i")))

(define-public crate-swc_ecma_transforms_module-0.181.0 (c (n "swc_ecma_transforms_module") (v "0.181.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.81") (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.113.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.23") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.23") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.144.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.138.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.164.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.141.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.128.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.99.0") (d #t) (k 0)) (d (n "testing") (r "^0.35.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "0llnr3gfh2myxy5fcslxd2hal5zb2kmsls0xpg1cg8l0v17q4asm")))

(define-public crate-swc_ecma_transforms_module-0.181.1 (c (n "swc_ecma_transforms_module") (v "0.181.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.81") (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.26") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.113.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.28") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.28") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.144.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.138.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.164.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.141.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.128.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.99.1") (d #t) (k 0)) (d (n "testing") (r "^0.35.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "08iqc3xwyzp2a2g5yq6s8hm264hvqq4rr2mhph16cp3bh2vnnjcj")))

(define-public crate-swc_ecma_transforms_module-0.181.2 (c (n "swc_ecma_transforms_module") (v "0.181.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.81") (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "is-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 2)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_cached") (r "^0.3.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.26") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.113.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.28") (f (quote ("node"))) (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.28") (f (quote ("node" "tsc"))) (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.144.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.138.1") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.164.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.141.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.128.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.99.1") (d #t) (k 0)) (d (n "testing") (r "^0.35.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "1qn8cp1xi54wfl7dy9yff570vjmcgx0yiijwmyqll7nwhv36lys7")))

