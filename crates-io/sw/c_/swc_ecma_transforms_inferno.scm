(define-module (crates-io sw c_ swc_ecma_transforms_inferno) #:use-module (crates-io))

(define-public crate-swc_ecma_transforms_inferno-0.0.1 (c (n "swc_ecma_transforms_inferno") (v "0.0.1") (d (list (d (n "base64") (r "^0.21.3") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.1") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha-1") (r "=0.10.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (d #t) (k 0)) (d (n "swc_config") (r "^0.1.7") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.144.0") (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.139.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.132.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.158.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_macros") (r "^0.5.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_module") (r "^0.175.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.135.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.0") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)))) (h "0qsq4jj3zdl0sg1xryjh3qwvk16qy0vz7fhhg5qh93vx59djpkdj") (f (quote (("serde-impl" "serde") ("default" "serde-impl") ("concurrent" "rayon"))))))

