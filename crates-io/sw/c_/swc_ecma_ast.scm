(define-module (crates-io sw c_ swc_ecma_ast) #:use-module (crates-io))

(define-public crate-swc_ecma_ast-0.1.0 (c (n "swc_ecma_ast") (v "0.1.0") (d (list (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "string_enum") (r "^0.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.1") (d #t) (k 0)))) (h "1cmmiw21rjfmsnal718mk6rh05xhdcywk2dnqp9s51429ybp1lnl")))

(define-public crate-swc_ecma_ast-0.2.0 (c (n "swc_ecma_ast") (v "0.2.0") (d (list (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "string_enum") (r "^0.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.1") (d #t) (k 0)))) (h "1zi81yv1q8hqkrpj0y8wnk0fcryrybdkbssg9v77cpq6q4br2d5y")))

(define-public crate-swc_ecma_ast-0.3.0 (c (n "swc_ecma_ast") (v "0.3.0") (d (list (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "string_enum") (r "^0.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.1") (d #t) (k 0)))) (h "1nwx4h5mjx5m4xyqd2zz3vnllwxckqgc8k7frq314g90icg744dp")))

(define-public crate-swc_ecma_ast-0.3.1 (c (n "swc_ecma_ast") (v "0.3.1") (d (list (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "string_enum") (r "^0.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.1") (d #t) (k 0)))) (h "0yir9g0fn50d34yryvvg8sl6qigfd3id5f47zyb5n0ddm142a43b")))

(define-public crate-swc_ecma_ast-0.4.0 (c (n "swc_ecma_ast") (v "0.4.0") (d (list (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "string_enum") (r "^0.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.1") (d #t) (k 0)))) (h "1wpqrhspq8vzkwff0cy9xam35303dyi0xasba23csi9zq50i73h2")))

(define-public crate-swc_ecma_ast-0.5.0 (c (n "swc_ecma_ast") (v "0.5.0") (d (list (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "string_enum") (r "^0.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.1") (d #t) (k 0)))) (h "1yl17sg4n7qrk9v3gy07p2aib0caillx53ijplqvx779ipp0chn0")))

(define-public crate-swc_ecma_ast-0.6.0 (c (n "swc_ecma_ast") (v "0.6.0") (d (list (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "string_enum") (r "^0.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.2") (d #t) (k 0)))) (h "090bzppznvyw6kswqwa6cm78m59m6ch91h5nwbx6kdaxwaihwvff") (f (quote (("fold" "swc_common/fold") ("default"))))))

(define-public crate-swc_ecma_ast-0.7.0 (c (n "swc_ecma_ast") (v "0.7.0") (d (list (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "string_enum") (r "^0.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.2") (d #t) (k 0)))) (h "15i746p8b893rkcrafwnacg90i1iipis67h5qpkzmx4c3x4sakxl") (f (quote (("fold" "swc_common/fold") ("default"))))))

(define-public crate-swc_ecma_ast-0.8.0 (c (n "swc_ecma_ast") (v "0.8.0") (d (list (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.3") (d #t) (k 0)))) (h "0wa3vq7zb297slzj4r328xja1rd04lc31bnjq5l0s8i4f06qjw64") (f (quote (("fold" "swc_common/fold") ("default"))))))

(define-public crate-swc_ecma_ast-0.9.1 (c (n "swc_ecma_ast") (v "0.9.1") (d (list (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.3") (d #t) (k 0)))) (h "03p34sdbil4y0vj59skigl6pq36p2pmwip3whr8zddaw7qpgk05w") (f (quote (("fold" "swc_common/fold") ("default"))))))

(define-public crate-swc_ecma_ast-0.9.2 (c (n "swc_ecma_ast") (v "0.9.2") (d (list (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.3") (d #t) (k 0)))) (h "0a3z7agwfzzjl5yb5papdsn6inxi95rcdxx2sajxynnac1rx68rv") (f (quote (("fold" "swc_common/fold") ("default"))))))

(define-public crate-swc_ecma_ast-0.9.3 (c (n "swc_ecma_ast") (v "0.9.3") (d (list (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.3") (d #t) (k 0)))) (h "09r55gd6lcbn79xz0w6hca3s8l6s7p59zlpq2np551ba7mdnqhyk") (f (quote (("fold" "swc_common/fold") ("default"))))))

(define-public crate-swc_ecma_ast-0.10.0 (c (n "swc_ecma_ast") (v "0.10.0") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.4") (d #t) (k 0)))) (h "1vf0w1s7nh4bk5ainvw5ab0071lbsinvflv18yq5sr644d9agcv8") (f (quote (("fold" "swc_common/fold") ("default"))))))

(define-public crate-swc_ecma_ast-0.10.1 (c (n "swc_ecma_ast") (v "0.10.1") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.4") (d #t) (k 0)))) (h "19jbpg1djvd6wgs5f412jsk1ab8rh4yxdpwy36kxvlihyb55b8w1") (f (quote (("fold" "swc_common/fold") ("default"))))))

(define-public crate-swc_ecma_ast-0.11.0 (c (n "swc_ecma_ast") (v "0.11.0") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.4") (d #t) (k 0)))) (h "0png44llfr4ayd7b4yhv1sg5xbvavpb7x3jcrawv2l5ly18jnh8r") (f (quote (("fold" "swc_common/fold") ("default"))))))

(define-public crate-swc_ecma_ast-0.12.1 (c (n "swc_ecma_ast") (v "0.12.1") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.4") (d #t) (k 0)))) (h "1jda4cmd0bj0078sk671ycqyq18c86ps96q4h2wy6zbhvbdlwd7n") (f (quote (("fold" "swc_common/fold") ("default"))))))

(define-public crate-swc_ecma_ast-0.13.0 (c (n "swc_ecma_ast") (v "0.13.0") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.4") (d #t) (k 0)))) (h "0p7p9mh90ryr3abhz1850vzpzrbywgsa4bfblwbj8yxym7jxbfyv") (f (quote (("fold" "swc_common/fold") ("default"))))))

(define-public crate-swc_ecma_ast-0.14.0 (c (n "swc_ecma_ast") (v "0.14.0") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.4") (d #t) (k 0)))) (h "0h1m9x8n7bb2p93qmpkxab6zv0ab1nql9nni9wdirqi87rm1cc2r") (f (quote (("fold" "swc_common/fold") ("default"))))))

(define-public crate-swc_ecma_ast-0.15.0 (c (n "swc_ecma_ast") (v "0.15.0") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.4") (d #t) (k 0)))) (h "0v5v5m4pjppzkhrgf02zk6k0r1k9snh9hik5fm2d7n8i70qf4fmp") (f (quote (("fold" "swc_common/fold") ("default"))))))

(define-public crate-swc_ecma_ast-0.16.0 (c (n "swc_ecma_ast") (v "0.16.0") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5") (d #t) (k 0)))) (h "1j80n39r53xb0bp21snrv7h0kgxs46145ifnrws82z606kp2gy27") (f (quote (("fold" "swc_common/fold") ("default"))))))

(define-public crate-swc_ecma_ast-0.17.0 (c (n "swc_ecma_ast") (v "0.17.0") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5") (d #t) (k 0)))) (h "1p5rw1dpc4h9wkr3r1kx5zhas60jncxlxa51abn08qvz4wfn80lp") (f (quote (("fold" "swc_common/fold") ("default"))))))

(define-public crate-swc_ecma_ast-0.18.0 (c (n "swc_ecma_ast") (v "0.18.0") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5") (d #t) (k 0)))) (h "1rn1ghrkgpbz7sqq413nd275wg4s5rcdm9ikz761hsph5gq10qcp") (f (quote (("fold" "swc_common/fold") ("default"))))))

(define-public crate-swc_ecma_ast-0.18.1 (c (n "swc_ecma_ast") (v "0.18.1") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5") (d #t) (k 0)))) (h "09d56mx9226qdxbmx6k4riakxb3x3b22rhasg75lx600hph47yri") (f (quote (("fold" "swc_common/fold") ("default"))))))

(define-public crate-swc_ecma_ast-0.19.0 (c (n "swc_ecma_ast") (v "0.19.0") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5") (d #t) (k 0)))) (h "0pawkcw3gjyxvgfl0zfyixiidn9b1cnzkrz9zqipz0ra1zyk9q08") (f (quote (("fold" "swc_common/fold") ("default"))))))

(define-public crate-swc_ecma_ast-0.20.0 (c (n "swc_ecma_ast") (v "0.20.0") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5") (d #t) (k 0)))) (h "0sksz5lkxamf3dfkxc3nvr33ykyznr2a5k8a23ziicahirqhaqfb") (f (quote (("fold" "swc_common/fold") ("default"))))))

(define-public crate-swc_ecma_ast-0.21.0 (c (n "swc_ecma_ast") (v "0.21.0") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.6") (d #t) (k 0)))) (h "04prp6w3yw1y2f6d4blw2yagwh0fv4k2x63mz628szb5ai4zp27i") (f (quote (("fold" "swc_common/fold") ("default"))))))

(define-public crate-swc_ecma_ast-0.22.0 (c (n "swc_ecma_ast") (v "0.22.0") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.6") (d #t) (k 0)))) (h "1fj3phsr21lcmydkll743j3z6ii1k89gc6bg4qs40zx7q8ss1a4y") (f (quote (("fold" "swc_common/fold") ("default"))))))

(define-public crate-swc_ecma_ast-0.23.0 (c (n "swc_ecma_ast") (v "0.23.0") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.6") (d #t) (k 0)))) (h "093h8xny7l3adlhmkabqdcfr4k3sn2q0x5g85v3k7b2wg5bwyxns") (f (quote (("fold" "swc_common/fold") ("default"))))))

(define-public crate-swc_ecma_ast-0.23.1 (c (n "swc_ecma_ast") (v "0.23.1") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.6") (d #t) (k 0)))) (h "08dhhs3a1qagfm6xvrfsk86zj8q8khpfgvzp2pqxwk9xc1zzxc27") (f (quote (("fold" "swc_common/fold") ("default"))))))

(define-public crate-swc_ecma_ast-0.24.0 (c (n "swc_ecma_ast") (v "0.24.0") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.7") (d #t) (k 0)))) (h "18i7zx714yl4xjlyxpgkjcn8dyjmxvlwj2ayvnzzr1qmbl5z5b2a")))

(define-public crate-swc_ecma_ast-0.25.0 (c (n "swc_ecma_ast") (v "0.25.0") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.7") (d #t) (k 0)))) (h "0fm66pv5x3zr3fib07zwkhy47kxvc86zvd9cgs13j3df11vmf7lg")))

(define-public crate-swc_ecma_ast-0.26.0 (c (n "swc_ecma_ast") (v "0.26.0") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.7") (d #t) (k 0)))) (h "0pczhbw18h5syvli6qdlb9q8hm86mapgk2gppil1bj6cf8zxbkcx")))

(define-public crate-swc_ecma_ast-0.27.0 (c (n "swc_ecma_ast") (v "0.27.0") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.8") (d #t) (k 0)))) (h "12v4l8bqb5366gvvkwj8ldzz99h2xwhmihszhbqgi4hshc17bl7l")))

(define-public crate-swc_ecma_ast-0.28.0 (c (n "swc_ecma_ast") (v "0.28.0") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.9.0") (d #t) (k 0)))) (h "0vhs5jcs2mzhp4czy2dghsysgi9q3lx0fax90kcdaiqisrwm7avx")))

(define-public crate-swc_ecma_ast-0.29.0 (c (n "swc_ecma_ast") (v "0.29.0") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.9.0") (d #t) (k 0)))) (h "03k01rjk3xha1daj4drr47i1fg6graf3hyrb7bl3p1adlv1iz6l0")))

(define-public crate-swc_ecma_ast-0.30.0 (c (n "swc_ecma_ast") (v "0.30.0") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)))) (h "0jabla1dalm49pznq7q700n8kaif5syrva2l3jbapv5n0mxhcn9i")))

(define-public crate-swc_ecma_ast-0.31.0 (c (n "swc_ecma_ast") (v "0.31.0") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)))) (h "1ka1ndy9fxf5daivi1mqgr9wd1h68qgb8sv9p2izm3jpi5svhx62")))

(define-public crate-swc_ecma_ast-0.32.0 (c (n "swc_ecma_ast") (v "0.32.0") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)))) (h "0p3k3nzw7wryh4i8yv9rhmz4rjz9r07y0175008hkpzvq0gh7i1m")))

(define-public crate-swc_ecma_ast-0.33.0 (c (n "swc_ecma_ast") (v "0.33.0") (d (list (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)))) (h "1kybbi1n5vg0bbc30p3m0h3ig1ls5rzhrfcj1h0nh0wdlc41ychb")))

(define-public crate-swc_ecma_ast-0.33.1 (c (n "swc_ecma_ast") (v "0.33.1") (d (list (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.4") (d #t) (k 0)))) (h "0kxq6r5xd5z4r3r5khbdbj8djfjpcc89r7m6n5v6sam3wjmhvg0h") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.34.0 (c (n "swc_ecma_ast") (v "0.34.0") (d (list (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.4") (d #t) (k 0)))) (h "10ijr384lj19j44177v4p8jimylpj50d36xj1wn99yxxapirr8jb") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.35.0 (c (n "swc_ecma_ast") (v "0.35.0") (d (list (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.4") (d #t) (k 0)))) (h "0hh5msay5fa1j8z9v0gizfh5z3qq5nkmqivnhalm7sv9fxdlzl9r") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.36.0 (c (n "swc_ecma_ast") (v "0.36.0") (d (list (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.4") (d #t) (k 0)))) (h "1vppvwfrrjwcykx93s4cll1sx40ylccqghyzw79rdi77a8l3lpdn") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.36.1 (c (n "swc_ecma_ast") (v "0.36.1") (d (list (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.8") (d #t) (k 0)))) (h "1fljkm1vbiq562ly9hqw2jk5y8a8ln39p1vs1ggj7jdqphv049a0") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.36.2 (c (n "swc_ecma_ast") (v "0.36.2") (d (list (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.8") (d #t) (k 0)))) (h "10cyvwb8q4pc1pjn94pzvskx5bv3p9jzr35crclsrsr0w2kr03ll") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.36.3 (c (n "swc_ecma_ast") (v "0.36.3") (d (list (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.8") (d #t) (k 0)))) (h "03h7fvm1nh5y1s80j07v2ny1g0wr9mg4iy7pv76anrbv5xllmwm4") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.37.0 (c (n "swc_ecma_ast") (v "0.37.0") (d (list (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.8") (d #t) (k 0)))) (h "172d0qzx5sv9n238zbprnwkvnpxa84g4lfyrq04lsn1h8kzshkjp") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.37.1 (c (n "swc_ecma_ast") (v "0.37.1") (d (list (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.8") (d #t) (k 0)))) (h "15ndsmmlg7jqa8aknac8l0yrb604v5kdwib26k64zdmmy6kkgczd") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.37.2 (c (n "swc_ecma_ast") (v "0.37.2") (d (list (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.8") (d #t) (k 0)))) (h "07wrxdqkanfy1m18czxw4xi71z47iaqppig59885kw0yra8xwqbw") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.37.3 (c (n "swc_ecma_ast") (v "0.37.3") (d (list (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.8") (d #t) (k 0)))) (h "1abgibmg51mn1k08abcqza1f3kpxxhjdm2klwv1w5582hv9anqns") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.38.0 (c (n "swc_ecma_ast") (v "0.38.0") (d (list (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.8") (d #t) (k 0)))) (h "0f37wa1r3wkp67lmzw31g1ynpgir7kjdwyysvpfndnqvi4ks1dpg") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.39.0 (c (n "swc_ecma_ast") (v "0.39.0") (d (list (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.8") (d #t) (k 0)))) (h "1wdykg11hgvn3989vfck6vbry90hgb8qzz4bmi7lwkyhr7mfjx88") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.39.1 (c (n "swc_ecma_ast") (v "0.39.1") (d (list (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)))) (h "050jkm9ilvqxmz9y4gzvg943gld6qpgcn80b91gpjzvswla48whv") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.40.0 (c (n "swc_ecma_ast") (v "0.40.0") (d (list (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)))) (h "0swhbryqqrv9lc94mxrnncpz63abng7r2i96ksrc92i38l7vjwwb") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.41.0 (c (n "swc_ecma_ast") (v "0.41.0") (d (list (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)))) (h "0ip6ds4vvc4p79qar70b0nyy1kjmiz827jv7kxa7x2ggcnys2bx0") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.42.0 (c (n "swc_ecma_ast") (v "0.42.0") (d (list (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)))) (h "0yr4vxwfcq8k050120i2730x9r44dr1ivbi47jpsaq06h9rnmsw3") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.43.0 (c (n "swc_ecma_ast") (v "0.43.0") (d (list (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)))) (h "1fq9ca81zysbx6vx1jvvjqslk34qi8m43jjs3nw77kq0m4b93g0j") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.43.1 (c (n "swc_ecma_ast") (v "0.43.1") (d (list (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)))) (h "07pqinjyhaly9nbx97xf5j1j82vwi5wivhjvks8ym8c7lfwb0644") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.44.0 (c (n "swc_ecma_ast") (v "0.44.0") (d (list (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)))) (h "029n5bclxbnmd41yq7jl9vswvc3krwigmvdwzv9h97m0lal4nxxr") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.45.0 (c (n "swc_ecma_ast") (v "0.45.0") (d (list (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)))) (h "0qwq7sl6c9lf30kd0cy5q46yj98zkq3w8r3lb74w8kazg3qm5mxc") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.46.0 (c (n "swc_ecma_ast") (v "0.46.0") (d (list (d (n "arbitrary") (r "^0.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)))) (h "09m9mng8g6ji23ia0k66hs4cs0q6zsdi87i9hww1lvdibmx4xrpr") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.47.0 (c (n "swc_ecma_ast") (v "0.47.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)))) (h "16rj252im78hm6826w680p0krxba0k3byfqrvwdl68kjfzvbg65b") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.48.0 (c (n "swc_ecma_ast") (v "0.48.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)))) (h "1jsmq7xn10339ywd5slbv28d0qp1y9h12fyjmf5ccbk3x152mnda") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.48.1 (c (n "swc_ecma_ast") (v "0.48.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)))) (h "19h6sql2caniygqkmsw83k71qds49g3c3b3qm3jmfb4km0khq1pq") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.49.0 (c (n "swc_ecma_ast") (v "0.49.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)))) (h "1jz8pyzwihz1axwbh795xwxif8xw0bh22h1cfgk675jvv63acg83") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.49.1 (c (n "swc_ecma_ast") (v "0.49.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)))) (h "06saq1jyz4b7svxg8cqw14qzpj1pkrdvd8jdy51rsa0ibagbi2i2") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.49.2 (c (n "swc_ecma_ast") (v "0.49.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)))) (h "0vwdq30cxp7q8433j9az7id06r94gxxbm10w6f9cfxy1wdly7r98") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.49.3 (c (n "swc_ecma_ast") (v "0.49.3") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)))) (h "184a50j35mvrkh02714pwd60bpp7jn8j0b3844yvas5sf52vmam3") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.49.4 (c (n "swc_ecma_ast") (v "0.49.4") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.6") (d #t) (k 0)))) (h "0qa4h0vg2lxxry79g7vaylj08adkviak28rbqmjxfrcnyqlggziy") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.49.5 (c (n "swc_ecma_ast") (v "0.49.5") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.6") (d #t) (k 0)))) (h "01v6pr00fjxlp0ibz578saq2sh9gf4s3prn4pvamiw00qalkbwbj") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.50.0 (c (n "swc_ecma_ast") (v "0.50.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.6") (d #t) (k 0)))) (h "1caij5j5w5wiqq2zf2d4khnv3rxiify6ifz1zmfmppxvnghbqxvc") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.51.0 (c (n "swc_ecma_ast") (v "0.51.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.6") (d #t) (k 0)))) (h "07nwbai3q9zdycmha5brxc1snrk7g8ddpr67f0srdfmv4laahvb8") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.51.1 (c (n "swc_ecma_ast") (v "0.51.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.9") (d #t) (k 0)))) (h "18a6g9h6cvryk6rjfvrfbxh2ac1zpqpsxpl1c7pp0a5mk3hawh85") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.52.0 (c (n "swc_ecma_ast") (v "0.52.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.12.0") (d #t) (k 0)))) (h "1qa1rfn2wn695mfbi144qiw4yna12rz96dk3p3i4ards2c7gn3ma") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.53.0 (c (n "swc_ecma_ast") (v "0.53.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)))) (h "0n27crk4shp3gkwl3d29r63dyf0gqzpfkh39cr6a48xm5j0qfm5c") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.54.0 (c (n "swc_ecma_ast") (v "0.54.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)))) (h "1dfw9q9gaan25nw619pa4j43ck76zvkwly6pip0mdl4zg8wd5bzi") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.54.1 (c (n "swc_ecma_ast") (v "0.54.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)))) (h "0i992pnghx8l6r2d75g3a9hcrgmsr53nrgpa8wxzclrznn062ans") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.54.2 (c (n "swc_ecma_ast") (v "0.54.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)))) (h "1yifil9rdizqdzyg5jdcni3d52vkqd8273ivwnssry53v0l9psg1") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.54.3 (c (n "swc_ecma_ast") (v "0.54.3") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)))) (h "03y4f3v7jsmsg232kmavgqk0ilmhjhizg7q6a3g24a160dk4mqpa") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.54.4 (c (n "swc_ecma_ast") (v "0.54.4") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)))) (h "17bwg14ffdx8w88r48cvk4cs9mxdhj6daqnc27gqm96qbhmi1sl3") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.54.5 (c (n "swc_ecma_ast") (v "0.54.5") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)))) (h "1kp497ss5a94znfnsqf9s2fdb6595cgi9hy4ddy2d5blcijx0d49") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.55.0 (c (n "swc_ecma_ast") (v "0.55.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)))) (h "1crnpz88l27d6vsxispyrb5zbhvnya4khar0ayhgd1k06zjrj3g4") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.56.0 (c (n "swc_ecma_ast") (v "0.56.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)))) (h "0bx5jh34jxzabr4lg7s06jfr4y0zmgfmrcdv5bzc65070q8x9a53") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.56.1 (c (n "swc_ecma_ast") (v "0.56.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)))) (h "08yacr83j59mx3210c333nysswp1k6k5y6m7kh94b680fr27hhzv") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.57.0 (c (n "swc_ecma_ast") (v "0.57.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)))) (h "07184dgxljnmg8ysy9ix24yqdfdxm2ndc3msd9m8r7832yh9jllb") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.58.0 (c (n "swc_ecma_ast") (v "0.58.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)))) (h "08mcn0w2d7nrfnmqi53isc9ir0l3fkx86vpqq5ai3iavbzm93jis") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.58.1 (c (n "swc_ecma_ast") (v "0.58.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)))) (h "1gngbkgbikxwpbsc7hhr5krbxi81k5dh6i2cav7v8rajw5aq4ryq") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.59.0 (c (n "swc_ecma_ast") (v "0.59.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)))) (h "1k6abz3d5p95jm4iqv2f9hkpdlara2644nvdw78n442s4z02c653") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.59.1 (c (n "swc_ecma_ast") (v "0.59.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)))) (h "1dfka85k0pyf79sxgglx504illdi76cp0lzs5il5csx2mdhk7ja9") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.60.0 (c (n "swc_ecma_ast") (v "0.60.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)))) (h "0zjlbymr7j3yspv8lqbv3sgw4ga79879b3m3v0z5xdsj53s409q5") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.60.1 (c (n "swc_ecma_ast") (v "0.60.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "0l8gy9mxvm19b0fmjcwds3360xsd9x8vl7kaa0nrygjzhc57snii") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.60.2 (c (n "swc_ecma_ast") (v "0.60.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "0h94q86sj49a5j04cv87ibh1zsiav0snx9h2f8rk849v1bm9yj36") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.60.3 (c (n "swc_ecma_ast") (v "0.60.3") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "0wxk1zp7gr5s2jwxl85hawkppq9l9mf1dnrwkxicyf0w51b27avh") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.60.4 (c (n "swc_ecma_ast") (v "0.60.4") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.88") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "09phrqw2gfrh75vm9c1axmb3iniffijikff166sqv6n0axk76lvf") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.60.5 (c (n "swc_ecma_ast") (v "0.60.5") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "0bdribzggis5kz2vk7n9rpw8h9w0kdxi3fwwzwzzl72xarrj4qzq") (f (quote (("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.60.6 (c (n "swc_ecma_ast") (v "0.60.6") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "08b6i30zfacggyl90phcsnyrdjmfgld799ykmp3cnm906jrsfqih") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.61.0 (c (n "swc_ecma_ast") (v "0.61.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "0csq2r4i77yvfypadfzacdvayxs9vlsyj2j93mpkcdc2ilrdxrpm") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.62.0 (c (n "swc_ecma_ast") (v "0.62.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.16.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "0fdasvphp4kaa9i3awgkm893hy4id8i0y9ifx4vqz4kmg2bjf16h") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.63.0 (c (n "swc_ecma_ast") (v "0.63.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.16.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "1fxh74w9glnynj3q6dyl8kwiiiq7w5wh03v44dqdax0id9jsxd6r") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.63.1 (c (n "swc_ecma_ast") (v "0.63.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.16.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "04djjd06vfdns83v8b42bzynfs9wc7zn7k4p93yqs61wyy960q3r") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.64.0 (c (n "swc_ecma_ast") (v "0.64.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.16.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "02znk131as99pirl3mvmj8ddm3v8x2q69ihg0xm9h61rxbr3avwq") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.64.1 (c (n "swc_ecma_ast") (v "0.64.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.16.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "0dvigfrn3ff47kf6qrcx61zl23bnfp6j2819r5y69sdm25gmdx8l") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.65.0 (c (n "swc_ecma_ast") (v "0.65.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "1fywmhf5sp5qp5j5bghsw0s9b7byv5d34fwx7ilz7qn0znps9jmc") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.65.1 (c (n "swc_ecma_ast") (v "0.65.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "0fma8mjxmarliz0b4c0dp65737dq2zrxb62k2q1az6hsf6alb6i7") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.65.2 (c (n "swc_ecma_ast") (v "0.65.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "120lqpgi4kdazb3iikwwilc1kgqg4kjd6szlgld74nin49hx50is") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.65.3 (c (n "swc_ecma_ast") (v "0.65.3") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "1vi7q58mg2087zzazrd7gx5dfaqr5bkc14z73pxgx39ca7ffy6pz") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.65.4 (c (n "swc_ecma_ast") (v "0.65.4") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "1qi471p1yib0ih26ldfbk43pfxg42qmqrx66pyacajgy05pxx13c") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.66.0 (c (n "swc_ecma_ast") (v "0.66.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "10y694jc08mb6fg8yp3mva0w8dmqwxdn8x3dk2gwwnjg95laplnl") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.67.0 (c (n "swc_ecma_ast") (v "0.67.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "0qcdpsdn6b0mdn3b41iw38k736l62nyrmf8gz67m001w8zw8lk9n") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.68.0 (c (n "swc_ecma_ast") (v "0.68.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "1si8xfvqd0blqkp53pgwwdmssnrsn18453qksby2jaadhnh6fh9k") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.68.1 (c (n "swc_ecma_ast") (v "0.68.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "16gbjwb7711hqqrky186fz9386h8qb71wbbpfqbf9g8jhra14fhx") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.68.2 (c (n "swc_ecma_ast") (v "0.68.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "1y5wz0y22j1c7f8an592w4zgqcj05fpca1arijgyh6c9yxvbr9bq") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.68.3 (c (n "swc_ecma_ast") (v "0.68.3") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "07z7g07320808icsiixl0q2wgqzdmp05rdrjgiphgpywfw0lcrfl") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.68.4 (c (n "swc_ecma_ast") (v "0.68.4") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1b4kwp5vxbljmnp6cpgv8lbsrg2rk98g16746mxijrgidvbpinh1") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.69.0 (c (n "swc_ecma_ast") (v "0.69.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "12225v5f92cv4lais7dai1sych35jkkl3xzqa7yq9hbww04d82xr") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.69.1 (c (n "swc_ecma_ast") (v "0.69.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1j3dld956i3i1lygklhrqkr8fx7z7ym9dl0xjxbibxz3m6hykcnl") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.70.0 (c (n "swc_ecma_ast") (v "0.70.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0ffqv4f26lrk5xn5lg7x6rqslln3pxlnva0q9rdfpp6kc5mp6pg3") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.71.0 (c (n "swc_ecma_ast") (v "0.71.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0g931d77xvy641ywx6ai878a7vv6k3gy4k2kw2x3yvdfr91vkrwa") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.72.0 (c (n "swc_ecma_ast") (v "0.72.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1cf8a8k9i717da1pv9pf24wywiklirm1d8qwg9c3pmcs641p5n8l") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.73.0 (c (n "swc_ecma_ast") (v "0.73.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0ymwzzvva9h50bxixpnwmk1ak3mfkw1wmmqkrdgg5v25vvrlf152") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.73.1 (c (n "swc_ecma_ast") (v "0.73.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1am9kgrshy3x3xfm546730nwbd4v6qd3jpml9kzmrw8fvv25wp9q") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.74.0 (c (n "swc_ecma_ast") (v "0.74.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "00hb32p79k4g5sblx693lgywdsp7qxxmvdciphxjah0faz3sqdki") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.75.0 (c (n "swc_ecma_ast") (v "0.75.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.19") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0cvx2yv11isyl5ww4l83h613af38lb31wyk6gscr2rg5zfc1i5kj") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.76.0 (c (n "swc_ecma_ast") (v "0.76.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.20") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0xcw9sbflb435zmqiq848c2bdxw7zqldymqbryqgy7h37ka76aiv") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.76.1 (c (n "swc_ecma_ast") (v "0.76.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.37") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0zp68pgcclm0zx4j1x50nlqhpmy271lagp44baayg62npxgpsqc2") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.76.2 (c (n "swc_ecma_ast") (v "0.76.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.37") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "12di6g4dggq0dkiq1k59qyjh5ibgwn34bwgwv4yzkg79qdf35sw7") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.76.3 (c (n "swc_ecma_ast") (v "0.76.3") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.37") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1s4xps96n8q3gmqzzhc1pznm1lq45ppj65dfgnxfbiybl420kkid") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.77.0 (c (n "swc_ecma_ast") (v "0.77.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.37") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1ypg9qq6y2gj4343j18ac2k3ldgkvk789gw5nlj99raj3p9lrh45") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.77.1 (c (n "swc_ecma_ast") (v "0.77.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.37") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0cbapfx73q0ddixzwhkn4disjjx0066bhndbpk0ndr09lz8pbk2h") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.77.2 (c (n "swc_ecma_ast") (v "0.77.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.37") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0z20aka1b1k3kdl5crqxjjwrkidz54mywrcp52dipqj4mlw0anp0") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.78.0 (c (n "swc_ecma_ast") (v "0.78.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.37") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1grml16xlzxanxsv5f003phvvj6p6wik17gdzw4z72a47v8qmmkf") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.78.1 (c (n "swc_ecma_ast") (v "0.78.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.37") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1k7bzbpzcyhk4amw8xigpbjrpdpw79y3kzm5rn9rlpj6zrlh3x11") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.79.0 (c (n "swc_ecma_ast") (v "0.79.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.37") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0mxxnip20kafq92280p0jl4hjfsjsvvbbk85arby6gsp19zhangm") (f (quote (("rkyv-impl" "rkyv" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.80.0 (c (n "swc_ecma_ast") (v "0.80.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.8") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.39") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.19.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1vpas8zdh3sj0hrg67fnw38v37w82pqa8vbhfzjpp0qvyhajhrzm") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.80.1 (c (n "swc_ecma_ast") (v "0.80.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.8") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.39") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.19.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0g0l9sifb97ghqssmnk4ic0jg4bgh2zvyhf93zxxgmsq6wb0j74q") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.81.0 (c (n "swc_ecma_ast") (v "0.81.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.8") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.39") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.20.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0sgszzkfryhgafdm6w4rar0i142byz7q4ym0mc3b0v2pxas57p7k") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.82.0 (c (n "swc_ecma_ast") (v "0.82.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.8") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.39") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.21.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "13s41jjnb30676r3sqr0gcn669vgjiklrxgis075vck0vf4d567r") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.83.0 (c (n "swc_ecma_ast") (v "0.83.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.8") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.39") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.22.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "15gmphiy601z1h457simlf492yziag164727wv5acd2ynnwmqvxx") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.84.0 (c (n "swc_ecma_ast") (v "0.84.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.8") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.39") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.23.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0slkbjhmig69zl2154x82wxw2ys5gvi7yr4l3yrzw051wcqzpqfc") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.85.0 (c (n "swc_ecma_ast") (v "0.85.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.8") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.39") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.24.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0lrj220i685nlgirax4bcah4xlq05hj2d859439x08m4hii8w8yg") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.85.1 (c (n "swc_ecma_ast") (v "0.85.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.8") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.39") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.24.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0fby974x48s6gii0li8ykwkhwcjxlqnp19gi7v0gx4zdmpi18zhy") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.86.0 (c (n "swc_ecma_ast") (v "0.86.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.8") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.39") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.24.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1dnc17swr75plqf0gw58kai2ah9hm5rz2h9j5n19ar6gknjn2vpc") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.87.0 (c (n "swc_ecma_ast") (v "0.87.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.8") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.39") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.24.2") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0qr67anb35q02jwr4bdcm25bbhw636w5nn72jyn9qazzhb42j02x") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.88.0 (c (n "swc_ecma_ast") (v "0.88.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.8") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.39") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.3.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.25.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1zm0prfhamzd50ni5q14qw89fyihd7wyr2a1080kpn9lypv7kyfg") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.88.1 (c (n "swc_ecma_ast") (v "0.88.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.39") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.3.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.25.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1p7m7p6djr8sw566rzwaax5g3f9bi0v5yk26r1hcmvq6cyl8wly1") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.89.0 (c (n "swc_ecma_ast") (v "0.89.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.39") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.3.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.26.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "07rlzrxypasyssc6hwfqglfcn0x47zg55hikzl45ay08v3b9dsfw") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.89.1 (c (n "swc_ecma_ast") (v "0.89.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.39") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.26.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1vpbqryid81ydd6jjmwbf31qwdngb685wn65k7w39djphydgsp4f") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.90.0 (c (n "swc_ecma_ast") (v "0.90.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.39") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "057ar1dn2c1j355ig9a8f17dnhz1xnq6ac7xhsixj7w1jjx9f03r") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.90.1 (c (n "swc_ecma_ast") (v "0.90.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.39") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "00k15djbzpflyn1qxgzd5xy93jgn4iv68fa1nxrfn9mzaqzbwlky") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.90.2 (c (n "swc_ecma_ast") (v "0.90.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.39") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0cpjqmlinldhzylvg89jycs7cg7vk7gram14x667plhicmm009qy") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.90.3 (c (n "swc_ecma_ast") (v "0.90.3") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.39") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "09vznq2nc7pwxd3wcdv21kjqyx8sj2lf75j0mi44312n68nwcp0r") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.90.4 (c (n "swc_ecma_ast") (v "0.90.4") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.39") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.3") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0gvk3y25snmi1snyzlr7s7hrmy4q2ijbx66maq7jaxp96yd0w153") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.90.5 (c (n "swc_ecma_ast") (v "0.90.5") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.4") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0la69yqr5zgbcry302yz33kfs9l5ljyxnik1iwf1hr8disb5w4af") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.90.6 (c (n "swc_ecma_ast") (v "0.90.6") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.4") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.5") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "11jd9vbx4z9ib5jy5ys8yfiqgwsm65ir17a9r1z678g4rd4kwj5j") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.90.7 (c (n "swc_ecma_ast") (v "0.90.7") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.6") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1276gn70c8vv5d2wfpb501z87c1kv5nvyxn2lxys2vzkpnmwfrc2") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.90.8 (c (n "swc_ecma_ast") (v "0.90.8") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.39") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.7") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1jrkdsdl0py6m99r9j0jpbbzkki23c8c0104wiszhsgp4a2b49rl") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.90.9 (c (n "swc_ecma_ast") (v "0.90.9") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.38") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.7") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1wm89rbr8s3p395nr9wy8wcywp82v5g7km758vm81l7s04yiqibx") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.90.10 (c (n "swc_ecma_ast") (v "0.90.10") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.7") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1l9667qxashq2rwp0vd1w6nj2z3fxc52gimymadrybln4l4cpng4") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.90.11 (c (n "swc_ecma_ast") (v "0.90.11") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.7") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1hwljf37zs0zbs69cwqhdixah5645rrq65kafniqvkwaljrs5gv8") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.90.12 (c (n "swc_ecma_ast") (v "0.90.12") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.7") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1pnx4maikywrpazqp1ggnaz37a943ydjyp14yq653k2cncbw3d76") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.90.13 (c (n "swc_ecma_ast") (v "0.90.13") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1z4r5lwnr5snprh852flr6mgx0ngdca2krdpi00lqckmcf0dmqq3") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.90.14 (c (n "swc_ecma_ast") (v "0.90.14") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1ya0xm71ndvzpjmaxc0a3dv1bk3qppbjciansy6ksrxlhf6lpqjc") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.90.15 (c (n "swc_ecma_ast") (v "0.90.15") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1lyw6zszmy4xphqhm3i3kajh8ywghq5jq0vy226yajq9k7hqj6ap") (f (quote (("rkyv-impl" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.90.16 (c (n "swc_ecma_ast") (v "0.90.16") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0q6mwnbczcbcavx8vlk5m25vqa830y6vp0x466r9bdx5q4mnvqnb") (f (quote (("rkyv-impl" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.90.17 (c (n "swc_ecma_ast") (v "0.90.17") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1nini8fdi49phmgfs4b1pwj74rrih542knkw3vpsq7cvlgp8rrs1") (f (quote (("rkyv-impl" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.90.18 (c (n "swc_ecma_ast") (v "0.90.18") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.14") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1s53rc1vjz3694lm0gfzwq5lycxqjdfnb2lv9ab1n72p5bhz7z0v") (f (quote (("rkyv-impl" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.90.19 (c (n "swc_ecma_ast") (v "0.90.19") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.15") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1h7nk4s0w42hvarzwp068yd81j3gfp8b45wwx99k7lfjkx4z8b3b") (f (quote (("rkyv-impl" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.90.20 (c (n "swc_ecma_ast") (v "0.90.20") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.16") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "14rmnr2h978pmchgbx3rpx7sfjg7rlxsll70nz3vw635n2fr84pp") (f (quote (("rkyv-impl" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.91.0 (c (n "swc_ecma_ast") (v "0.91.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.11") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0fhaa61njwzkaqvbhsb2qhzxbyba4ybw0rv0c4vnz1nslfhqaiiv") (f (quote (("rkyv-impl" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.91.1 (c (n "swc_ecma_ast") (v "0.91.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.12") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1w1b0sn0v4v83r96npdqly8wpd8vikn2yp8ks5j98r5ry338kr2g") (f (quote (("rkyv-impl" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.91.2 (c (n "swc_ecma_ast") (v "0.91.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.13") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.2") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "122wgfk1qy2gpl1pbyyacpzj682ay112224i6y13c8c9087ys8va") (f (quote (("rkyv-impl" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.91.3 (c (n "swc_ecma_ast") (v "0.91.3") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.3") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1vbi5jrv60c1p8hc0d28gr5axm1zs8cs8ylcbk1w7s8g48rxwpk4") (f (quote (("rkyv-impl" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.91.4 (c (n "swc_ecma_ast") (v "0.91.4") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.4") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1rgxjqg35cifsdnlbgwdhm027i921xr3dnqyg3rnzj03q6n714zw") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.91.5 (c (n "swc_ecma_ast") (v "0.91.5") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.5") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "15d128q7xxvrdi23chzx4hgh2a57472r7v190kxwr8phkra3jrlz") (f (quote (("rkyv-impl" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default"))))))

(define-public crate-swc_ecma_ast-0.91.6 (c (n "swc_ecma_ast") (v "0.91.6") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.6") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0k5929a4wpgi3zjb2zjkrn6k8fym5jh5j9vhnqsmwh9gpz2r1ysf") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.91.7 (c (n "swc_ecma_ast") (v "0.91.7") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.7") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1ijlpwax1dgc2ky1xj9xv6hvb9w3wf1502b6hwwdnyjqp560gm20") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.91.8 (c (n "swc_ecma_ast") (v "0.91.8") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.8") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "051r8ivz50rmpmhmz4zg1idf3m29lhbxj48va32f4axkx3ndbxkx") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.92.0 (c (n "swc_ecma_ast") (v "0.92.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.8") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "02m2nk6jg8zxwdpjpz41k8rpcrf7ra5vwgpvdyr3y067ka50kad4") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.92.1 (c (n "swc_ecma_ast") (v "0.92.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.16") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.9") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "10dlvm338dc3nkfw0m3y379g984481bymf2454pmqaaqlsi7cmjr") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.93.0 (c (n "swc_ecma_ast") (v "0.93.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.10") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "097kgf6ssfz86clbv4wx8bh8ps14a5x36yhj1mpzz8m6w6h235sd") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.94.0 (c (n "swc_ecma_ast") (v "0.94.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "11ph4dwr6cw1nxck1bmls7w7jffrgzfcknv4wahj1lk8n02jcwz3") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.94.1 (c (n "swc_ecma_ast") (v "0.94.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0m6h65ffvh99l6ii93xcj1ay8kin89wn223v2szr21ial8h60qpq") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.94.2 (c (n "swc_ecma_ast") (v "0.94.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.2") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0m20hphrxn9xcxdjk0l6y800637n41g8g7vfg6rwffx67j5lhvla") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.94.3 (c (n "swc_ecma_ast") (v "0.94.3") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.3") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "188jsy1x12b5ymjyjc2privav6l69f038qa8f34kaz3a7wad2k9y") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.94.4 (c (n "swc_ecma_ast") (v "0.94.4") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.4") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0anq11p0drfbwzzvskbnxkw36nl5vys8xq55qj5126nm8rpyfdbg") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.94.5 (c (n "swc_ecma_ast") (v "0.94.5") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0mwiaf3dc66vmm4n2qb9j2p04www0qivc42yyqy9gph2f2jrmzw9") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.94.6 (c (n "swc_ecma_ast") (v "0.94.6") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1ifanmmga0gi4lvc179z2332iygwbjagi1qjx6zf7ghcd6an4byx") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.94.7 (c (n "swc_ecma_ast") (v "0.94.7") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "122a4xnd8j268ss8wryfarmisq5qqdnb5129vxxcqj040h8niwf2") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.94.8 (c (n "swc_ecma_ast") (v "0.94.8") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.6") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1nhvv136692fcswcmxg76lxg8nfa8k95ilm0i0d9hkbdrfh0mwzl") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.94.9 (c (n "swc_ecma_ast") (v "0.94.9") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.6") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "09qciyi8fry9p3zffshrhkif4z21mapsgcaglyn9q92wdv8x3f37") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.94.10 (c (n "swc_ecma_ast") (v "0.94.10") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.20") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.7") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0rh84my4cxrzrjq9a3prm0j1ng1arlp1zsjbwbvi3hriragg1py3") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.94.11 (c (n "swc_ecma_ast") (v "0.94.11") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "057yag5clsx9wp4hqfpnlgfm0yppxkhjfr0f69axx49g31rsa295") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.94.12 (c (n "swc_ecma_ast") (v "0.94.12") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.22") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.9") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "02y2lp01j4lh5k8zn1zkndygq4qmgfzn35zccm6j1ay6x34gmamy") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.94.13 (c (n "swc_ecma_ast") (v "0.94.13") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1vwcw2l1908898y37mxq7giv4amc43q73g1ki58gynwcng370gcp") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.94.14 (c (n "swc_ecma_ast") (v "0.94.14") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0irm312slv05cwq1rnbidk9ffwv1d0wmjkjiwqvi3kmdg7g06crc") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.94.15 (c (n "swc_ecma_ast") (v "0.94.15") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.11") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "19kwhwq1m1nf6saj9iq9nc054kx9km5a74sf2dc0kfjcdxsdlrad") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.94.16 (c (n "swc_ecma_ast") (v "0.94.16") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.12") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1k2fz4s52d0q8zqqldrhg2xh05sl295wfj8ahs9hsli9w78jm16p") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.94.17 (c (n "swc_ecma_ast") (v "0.94.17") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1svpxc1piyz6nczqgriihgylmhvnla8zcviy51c90fih81jj8fdw") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.94.18 (c (n "swc_ecma_ast") (v "0.94.18") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "13xqpqwdng68qsvn8y9vm16hgb974g0bl4xmgxva1jgs9klsryzn") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.94.19 (c (n "swc_ecma_ast") (v "0.94.19") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0aqc71xdsgwdfhw0qg8i1b53vyk8w041hkj4pscgwaphjigxajzm") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.94.20 (c (n "swc_ecma_ast") (v "0.94.20") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.15") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "19gap45f072lpcjjmr7v4yp5s19p9l9glzmnnck8rrmirinpiqpj") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.94.21 (c (n "swc_ecma_ast") (v "0.94.21") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.16") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "05ryg11mp18lr5qshw576p5imkzdikfq2msxpamvrg7b7f33x0mp") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.95.0 (c (n "swc_ecma_ast") (v "0.95.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.16") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0a9d422s5ra8w57cjn3y1a5h0l3yli5py1x2bxpzxxvyhylimgqh") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.95.1 (c (n "swc_ecma_ast") (v "0.95.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.17") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1228na0w4ci0sakcgv7n8vsvbwkmr0c5yibba0cnnl78mxzkmz04") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.95.2 (c (n "swc_ecma_ast") (v "0.95.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.18") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1krjwnacq75khmm070qrn3nv2z45dny301a01ldr770qj0acyrm4") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.95.3 (c (n "swc_ecma_ast") (v "0.95.3") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1j5cbignay5rvwl0wllk4c2f2h9si91jvslrg7sdgmckc54lf2a2") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.95.4 (c (n "swc_ecma_ast") (v "0.95.4") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.26") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.20") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "179rx6dzg6rny50ax3hffh99zyxhs82915cq5rhbdr3a315abkmw") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.95.5 (c (n "swc_ecma_ast") (v "0.95.5") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.27") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.21") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0wgmsx9viffcxb1728c2jki1mqb4h4pd8yi5l5rvy4ixlzywnpih") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.95.6 (c (n "swc_ecma_ast") (v "0.95.6") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.28") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.22") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "08zdlg8kdlq33brwkxbmgsc17ii6pcn0q81vwzljp6pqgw3hx8ip") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.95.7 (c (n "swc_ecma_ast") (v "0.95.7") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.29") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.23") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1h8dy4d76nnlasqa5bsrkcb17vaj3jadkgsf2zpbxzf9ybk2cjkj") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.95.8 (c (n "swc_ecma_ast") (v "0.95.8") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.31") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.24") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0dphqjn7p2p5d2lgqf1qax0srnbspr06bhi98bi5n4xj31kv6rm8") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.95.9 (c (n "swc_ecma_ast") (v "0.95.9") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.25") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "05hlgrqqjy6lvpxf8myxvk9qjlawji83lmwbj7jilrsf9kq3dj9w") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.95.10 (c (n "swc_ecma_ast") (v "0.95.10") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.26") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "069fgrn61czw80c7z77ldgjlwkzh6c7lnn40yv9mp7q86f262jya") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.95.11 (c (n "swc_ecma_ast") (v "0.95.11") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1d08s1jxcx2r36l0ns8qj60m12pp28bqgpgw5z1j2g5av1kgzrc1") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.96.0 (c (n "swc_ecma_ast") (v "0.96.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0r8m48n67cibldz7fv3d0slk6cwf4pxcyfpr65z7vrs19pmczz2m") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.96.1 (c (n "swc_ecma_ast") (v "0.96.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0gy4chx5id0722sikfyli3bwmw0a0xin5inzvvskzlzd9fs4b0vh") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.96.2 (c (n "swc_ecma_ast") (v "0.96.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.28") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "064mkyb7bwmv6a7kjxqp2ycwb58c22zg2jdmikpiaa26lvjhqzbx") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.96.3 (c (n "swc_ecma_ast") (v "0.96.3") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0bgf29dibd2rbk6pjjsdcyx6z43i7mgy7gd438k5gdcmalni11x8") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.96.4 (c (n "swc_ecma_ast") (v "0.96.4") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.35") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.30") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0v42gr0xl37jb7qz5zwfmx8bxf28bv52hv1k0lj6m9767dg7wg2y") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.96.5 (c (n "swc_ecma_ast") (v "0.96.5") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.36") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.31") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "06zbqn8gxnclkavyygzqivpra2j8pym5p2g89r4jbhbgq9q246c4") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.96.6 (c (n "swc_ecma_ast") (v "0.96.6") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.36") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.31") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "17qj7vwn9ppy06sbx33vv84cksvb7aj11x1cllsk550lab34wd9c") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.96.7 (c (n "swc_ecma_ast") (v "0.96.7") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.37") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.32") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0yydq1md2lds7sla869lrj1jb6ly8dgb5qm46ijbnv5vgzi6c732") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.97.0 (c (n "swc_ecma_ast") (v "0.97.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.37") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.32") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "16a564nd4cqflban1z6k2ck8sr6qbrxn7j528i01iizvll7d2g06") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.98.0 (c (n "swc_ecma_ast") (v "0.98.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.33") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "07qdfc1dcsi0n8d6gvj7027889zd19k68fkizbqdmwfh2g4nn7vv") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.98.1 (c (n "swc_ecma_ast") (v "0.98.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.34") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "043w8j4y14gs33n7fnyw4di6hgj2n7vk6dqm85ixpi0r54wwndmj") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.98.2 (c (n "swc_ecma_ast") (v "0.98.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.35") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1ksi0931d3pc98gdlcy6v3bz1k2z69dv6lk56w6mwxvawfjjlp9h") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.99.0 (c (n "swc_ecma_ast") (v "0.99.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.35") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0fpx093jdlg169c4p5yjcpz0kf7avjlsv54ipkwngcrdlx90vyq6") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.99.1 (c (n "swc_ecma_ast") (v "0.99.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.36") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0xcp1a5ppf258mqzv1vlwq0r45vw365wrsg0gi3l922pqxya6pgy") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.99.2 (c (n "swc_ecma_ast") (v "0.99.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1d8y3y9gv5icwdbszr9n3ab761nz0i4sk48rjb8z847sbw02sl9d") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.99.3 (c (n "swc_ecma_ast") (v "0.99.3") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1v6fjndym3agk2gh0dfgibbiwfsynrhmcnpj81nsqa7s16wmcbws") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.100.0 (c (n "swc_ecma_ast") (v "0.100.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1qd5c1kslvkk2f1fv5wglvdcb9cdjxhv0ymxaibhq3sfy9c3m772") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.100.1 (c (n "swc_ecma_ast") (v "0.100.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "02bzb6mz4a6im3bja7bnx9m52yg5a9gcy383lrrl89yybphdpgvx") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.100.2 (c (n "swc_ecma_ast") (v "0.100.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1shv6m9ifl3m9p9dmsx1kwp0z0xfkvmqfphviqnmfkw3x886sqsy") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.100.3 (c (n "swc_ecma_ast") (v "0.100.3") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1q33s39kn2f4xrkhwlzgwwn5xmzzqb3yd58sf6cwq2xjws6ml4vb") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.100.4 (c (n "swc_ecma_ast") (v "0.100.4") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.38") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0infl3zg0vi1fd5h7d2zpdyk898dv2bdm8qsgxs8mq3as67m7iqb") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.100.5 (c (n "swc_ecma_ast") (v "0.100.5") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.3.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.39") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1x1qbjhazch31cbdiikn4fg3rsicsk5lgnp5m5kph1d14y3rvilk") (f (quote (("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.101.0 (c (n "swc_ecma_ast") (v "0.101.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.40") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0vrysljql755gprr94bjgyjy50cq6qsd4sb8czdz0gzjakmznbnh") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.102.0 (c (n "swc_ecma_ast") (v "0.102.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0fa96fflkcfmi8xln718ybv3l9l402mpmhnavizzxlm6b26wfpb6") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.102.1 (c (n "swc_ecma_ast") (v "0.102.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.40") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.40") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "17g3nrqivy7qbm0g3vb591jgcc4hs7w31vhwq81hfrcwxhkjfph7") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.102.2 (c (n "swc_ecma_ast") (v "0.102.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.37") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.41") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.2") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0xi6j6lalxqb5qdgfcsyffwhl1p05hdcfp87653z3cbqkrmqm9ri") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.102.3 (c (n "swc_ecma_ast") (v "0.102.3") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.40") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.42") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.3") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "11mwvv2d881yld5w6z3gmx9kr5d7h1p7zkjrw9xb6r6zax3pklks") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.102.4 (c (n "swc_ecma_ast") (v "0.102.4") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.40") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.4") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0s604x086h2125slv5sr3bcy51z4x6rpfqqx22b67klwzl862rlg") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.102.5 (c (n "swc_ecma_ast") (v "0.102.5") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.40") (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.5") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1l0cqbbiz80f0rn60x6n6rsfsqjfyxn3n5dap84pxp8dfk26mjbb") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.103.0 (c (n "swc_ecma_ast") (v "0.103.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.40") (f (quote ("strict"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (f (quote ("strict"))) (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0va9dj41ng0a9g81kbvlpa0lf9lhf3v9iwcyprqnp4hzkicv8b8z") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.103.1 (c (n "swc_ecma_ast") (v "0.103.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.40") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "rkyv-latest") (r "=0.7.38-test.2") (f (quote ("strict"))) (o #t) (d #t) (k 0) (p "rkyv-test")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "03l0acrs6psxsqs0a18smcajfrz0w6g3hvbaa417lpqkccbln3gs") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("rkyv-bytecheck-impl" "__rkyv" "rkyv-latest" "swc_atoms/rkyv-bytecheck-impl" "swc_common/rkyv-bytecheck-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.103.2 (c (n "swc_ecma_ast") (v "0.103.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.40") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.2") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0bx481610d0fp3ys6c5gx77n56cm0mdn7pygyj7c2v8shkn1yqys") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.103.3 (c (n "swc_ecma_ast") (v "0.103.3") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.41") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.3") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0j1my5gyvng1rbvz8axmxflx2vfq907cr1bmp9kqrizhnjnyn8mp") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.103.4 (c (n "swc_ecma_ast") (v "0.103.4") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.41") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0b3h9p6gv0hzrv599kbh7xwm0hm6jv2wyxnsb4kkwxm660s261jj") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.103.5 (c (n "swc_ecma_ast") (v "0.103.5") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.9") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.41") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.5") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "03whc0xg00rk0a795c12b4lf59a421fx8rhaiic3isg94xh7i1qh") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.103.6 (c (n "swc_ecma_ast") (v "0.103.6") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.41") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.4") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.6") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "15b2mlqx8nmzv43vwwgj2gh14lzj8ji441qz6c33nrdc9qrvlmg7") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.103.7 (c (n "swc_ecma_ast") (v "0.103.7") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.41") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.4") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.6") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0i81brdjyabianxf7dnxb2gq56w5i81xjjmnh53mc6fhljza5y9c") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.104.0 (c (n "swc_ecma_ast") (v "0.104.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.41") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.7") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0x4q7cvp6rmsphq2mi9bipbmcp9ab5w4nr9bwpryisajaqb1ws7r") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.104.1 (c (n "swc_ecma_ast") (v "0.104.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.41") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.8") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0s6qpc583nsppahj42hr8z5zkc8fyrgah5ygbxjxkww0ym2kp6hv") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.104.2 (c (n "swc_ecma_ast") (v "0.104.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.41") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.9") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "17664h6v406jx5qa6f1j391d8ji016zv4nz5bpzdly76yxf4q325") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.104.3 (c (n "swc_ecma_ast") (v "0.104.3") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "18xj3llnjsa2dgpa9z0hzg1vv26b7gjxfrzkra5br71nhb85bs7y") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.104.4 (c (n "swc_ecma_ast") (v "0.104.4") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.11") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1dg90r4magljfc8c6xz8dzx4jhpmqrq5j5r946ghal4ivfh7l1gd") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.104.5 (c (n "swc_ecma_ast") (v "0.104.5") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "09jv86m63pyir55f7jx0vpa9b2d1adwjcdb5sgf8bhnha79rvkxm") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.105.0 (c (n "swc_ecma_ast") (v "0.105.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1iz55jcziw6d904fx275ka31nw5gy56bbanbgp8avx20zl50azjj") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.106.0 (c (n "swc_ecma_ast") (v "0.106.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1cm6lsglz712139024f56lxa3lksg0aw6j9xiw2bh1kz3k1b0084") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.106.1 (c (n "swc_ecma_ast") (v "0.106.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1mrbj2wdbfyjj31bd5f9lri356ffxfc2cy9qpr15bigi8n3ma5fb") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.106.2 (c (n "swc_ecma_ast") (v "0.106.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "017v5jl8gziwx23i41xlakzhzbaqf7b6hq9vm2pp7xpn6j2i6nyx") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.106.3 (c (n "swc_ecma_ast") (v "0.106.3") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.13") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0757iis56j30l9s5af8ljhkbny2v06vi3hd4x50xws1mlhjplv5d") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.106.4 (c (n "swc_ecma_ast") (v "0.106.4") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.14") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0bksgyjngaxxnqhhv0zn3xsxb811gi2x8xv5lnhx31730ddr9mvg") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.106.5 (c (n "swc_ecma_ast") (v "0.106.5") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.15") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0nh9s8zj5d1bl9x6lk7afrsprh9b6vj1hw4p1p6q66ckj6ajdqlb") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.106.6 (c (n "swc_ecma_ast") (v "0.106.6") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1fknxm6wmfws7naxfs8z6a6mchyxwclx2n839in1990x9f0ddx7b") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.107.0 (c (n "swc_ecma_ast") (v "0.107.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0rmqcr2k3s1s9q1wva2c456gd9snh2x6jysi9rk5ppggi20mb4sn") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.107.1 (c (n "swc_ecma_ast") (v "0.107.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.7") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.17") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1wpw80kq1yjl722brmfhrp4cg87k1xisx20dq9vq5c55n3s8yf70") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.107.2 (c (n "swc_ecma_ast") (v "0.107.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1jmzs7r34dxxhy3mx5bvgp4c3hn7ws67dhn1jcqf78wm1k3zik8g") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.107.3 (c (n "swc_ecma_ast") (v "0.107.3") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "04xjjn71zql8j94982lkxhrjp7qyxwqcqzsygfg8w2dm5mavmric") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.107.4 (c (n "swc_ecma_ast") (v "0.107.4") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0dqjrjcvqaw9j1hf0bs166qyv88rhgp1c8innnjhm4mqapdzh1mf") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.107.5 (c (n "swc_ecma_ast") (v "0.107.5") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.19") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1ggjsxj930bwfpjkaj0h0mpd1mqqb6ww8lvqbfp7xhpbmg8xlvra") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.107.6 (c (n "swc_ecma_ast") (v "0.107.6") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.20") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0a66w0j4idvjwdnnc497fq3shq77g2kyv8aq2mxjpp04fshm7486") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.107.7 (c (n "swc_ecma_ast") (v "0.107.7") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.21") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0czqvlwkgw63z7l9rl7434nrdhq84rx95p5al9srn1dgay61q6dp") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.107.8 (c (n "swc_ecma_ast") (v "0.107.8") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.22") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0kdp5syq5p34xhpan9j4qw8x5fymg55fx7zyszlyl49yscyqylp6") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.108.0 (c (n "swc_ecma_ast") (v "0.108.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "195kyx5r0kixfmh46q4pxx9vk73ln45w93rvbrb44k41v6wcn5za") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.109.0 (c (n "swc_ecma_ast") (v "0.109.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0scgwc21fk1y4ziwpl2lkiyapkjwpccirajg467sd26nxmn2ihkv") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.109.1 (c (n "swc_ecma_ast") (v "0.109.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "01r6h5wqhdx3mkj9rz6ji28400vhn7nxhpbfwn5ymlxf9mhs2qz0") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.109.2 (c (n "swc_ecma_ast") (v "0.109.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.2") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1r3gpjj1wsb6g0wfzyxivx52fm7rjvdv88k3215a3g1afp8gvwqx") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.110.0 (c (n "swc_ecma_ast") (v "0.110.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0ycn338ngz438514nlkbnnl93qh8kmjzwxjgvgxyg9vni68zkfsw") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.110.1 (c (n "swc_ecma_ast") (v "0.110.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0xnqr3vyaa762r43ap74gil4l3jydkpi5xjzrjng5d1fvim38lxd") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.110.2 (c (n "swc_ecma_ast") (v "0.110.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1d4lcfra9kyvh672d23fa6rly1fibxd00s1fm7v9arj5fjxy2195") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.110.3 (c (n "swc_ecma_ast") (v "0.110.3") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.3") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "05xa7han7r6fpib37cywkwacsyzn08l3pdxyi6dzgydx68vyc834") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.110.4 (c (n "swc_ecma_ast") (v "0.110.4") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.3") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "08dqqvccjpkygibg18im0z7hg9pglkck7q7brilhyj34lfwk43hj") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.110.5 (c (n "swc_ecma_ast") (v "0.110.5") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.4") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1v1jdxj1l4s4b7vbcd6i1fjwqbjgjfni5bi71gb9pxgndgbb8v9a") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.110.6 (c (n "swc_ecma_ast") (v "0.110.6") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.5") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "00bz0ps8bd4mjj0p3hdnglxvikzwh9jk56g9npxjni1w7hqyq0pr") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.110.7 (c (n "swc_ecma_ast") (v "0.110.7") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.6") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "07rzndxh3cncjh652ds0d8m9wfdycdbbwd1m5wld0n40lz3lqmpm") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.110.8 (c (n "swc_ecma_ast") (v "0.110.8") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.7") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0z5zbxavag5rafj85rx8lngc5qk4rn68sr414qnkxi5b061nhpgz") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.110.9 (c (n "swc_ecma_ast") (v "0.110.9") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "00r4zqdq02gd9145rz51gwmyszngzk8h2n5nly6y805zf4fcrvsc") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.110.10 (c (n "swc_ecma_ast") (v "0.110.10") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0snddivr5yjb3rnhrvrgaps0m2b8b9r265hvpny5cbfs45hl2g9c") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.110.11 (c (n "swc_ecma_ast") (v "0.110.11") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.10") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0phsvs6q5sbyhmbqhg9h4qxprn3yv0w7jhn6msrn471xa8jbnc57") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.110.12 (c (n "swc_ecma_ast") (v "0.110.12") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.10") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0y0w5zm14sszg7p11hb7z6yhf8q55rvk2fvkml732fpzcvb66d10") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.110.13 (c (n "swc_ecma_ast") (v "0.110.13") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.11") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "03dn41nfwaqwslivkaayj001z7yl2fmpz2yy3nshk1vjc13ip2vf") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.110.14 (c (n "swc_ecma_ast") (v "0.110.14") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "16x81pgr6hdj9zs3417d7xsivzlsi443v6kdhfgsa8ic4zlalvy8") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.110.15 (c (n "swc_ecma_ast") (v "0.110.15") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1n54gc965ipksx8bbnnyiw259avsshim92p1ydxp86h77b2f98ra") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.110.16 (c (n "swc_ecma_ast") (v "0.110.16") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0vlrvjfvzhmykr5m9cq881zrasrr3ih5s135liana09h16qcmc5r") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.110.17 (c (n "swc_ecma_ast") (v "0.110.17") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0fymxl0a6j380gw83jr1n4v8d3hrw9pghnrcanr4ykvhv92ilh3r") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.111.0 (c (n "swc_ecma_ast") (v "0.111.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.14") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0606jzaqgr20v3wxq6490zh6xjrchyj1iqaq3nlvrxsgcdphjilx") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.111.1 (c (n "swc_ecma_ast") (v "0.111.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.15") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1ja5ixiip6z0zw0a1wjqnsys70m2z183mhbgq7d97lii7c7lsaz1") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.112.0 (c (n "swc_ecma_ast") (v "0.112.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.16") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "1cgsp7sm8xm068g2b3n0c9jzlilk4xykv9n3y1gnl837s1hsx42g") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.112.1 (c (n "swc_ecma_ast") (v "0.112.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.16") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "01z5y04mrx9c86rz0r97nirzqxmv2dfm03f3rxigq8qwv3j46wfs") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.112.2 (c (n "swc_ecma_ast") (v "0.112.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.17") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0g1m2lbh1drri7xv87623bixx3y6bcsjaswc564dwcr59ai4hal5") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.112.3 (c (n "swc_ecma_ast") (v "0.112.3") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.17") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0h03586m3fqs5cajnv671hb7p8x0i6c9grfvdwlighfd1x5wn82s") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.112.4 (c (n "swc_ecma_ast") (v "0.112.4") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.18") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "0ch7bmvdmfcf1p5n0va9g17b76l69fd18kz0plh5cbzxgfw6w8in") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.112.5 (c (n "swc_ecma_ast") (v "0.112.5") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.19") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "13glv2cg3mg1q0q9h2s3jgy1za5l09b7b5g75zzsi39mk21m4bq3") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.112.6 (c (n "swc_ecma_ast") (v "0.112.6") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.2") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.20") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)))) (h "11zn0mba5dwzqy3dfwavjxq33jr86jb8k18ybxiih6f98z6nlrbh") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.112.7 (c (n "swc_ecma_ast") (v "0.112.7") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.42") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.20") (d #t) (k 0)) (d (n "unicode-id-start") (r "^1.1.2") (d #t) (k 0)))) (h "1mbblcgksacr9zgykjkbh47n0qfpf5paavj1j17l8j3v6vp9gkbb") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.112.8 (c (n "swc_ecma_ast") (v "0.112.8") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.44") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.20") (d #t) (k 0)) (d (n "unicode-id-start") (r "^1.1.2") (d #t) (k 0)))) (h "0njclif1y58qa3y0016hlzmd45ik2gxsd01h9giyhl5d48yc7mfi") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.113.0 (c (n "swc_ecma_ast") (v "0.113.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.44") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.20") (d #t) (k 0)) (d (n "unicode-id-start") (r "^1.1.2") (d #t) (k 0)))) (h "1wkgah1fk0ii0wmwq2nkcx6kgw5597icxhbmrzs8fs3586kxv7zr") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.113.1 (c (n "swc_ecma_ast") (v "0.113.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.44") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.26") (d #t) (k 0)) (d (n "unicode-id-start") (r "^1.1.2") (d #t) (k 0)))) (h "1p0sxf30nr7hd7ng3ld0506mcz7ja8cgf2chpx4b6nj8nc2zksfa") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.113.2 (c (n "swc_ecma_ast") (v "0.113.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.44") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.26") (d #t) (k 0)) (d (n "unicode-id-start") (r "^1.1.2") (d #t) (k 0)))) (h "1fbrjwam2fx67m0zbf3wwd2bwdx58a4jaja649ishc9zipfcpxr9") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.113.3 (c (n "swc_ecma_ast") (v "0.113.3") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.44") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.26") (d #t) (k 0)) (d (n "unicode-id-start") (r "=1.0.4") (d #t) (k 0)))) (h "1jxq83cxxq3v3j51yxgrvsnin0qwsqxmkgn5x12dw2nrvjq3ikp0") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

(define-public crate-swc_ecma_ast-0.113.4 (c (n "swc_ecma_ast") (v "0.113.4") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "is-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "rkyv") (r "=0.7.44") (f (quote ("strict" "validation"))) (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 2)) (d (n "string_enum") (r "^0.4.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.26") (d #t) (k 0)) (d (n "unicode-id-start") (r "=1.0.4") (d #t) (k 0)))) (h "1bmgc5sn1vn6c7vlsx8xpbvk5i8s4cgbl982mi20pdls1k6905nw") (f (quote (("serde-impl" "serde") ("rkyv-impl" "__rkyv" "rkyv" "bytecheck" "swc_atoms/rkyv-impl" "swc_common/rkyv-impl") ("fuzzing" "arbitrary" "swc_common/arbitrary") ("default") ("__rkyv"))))))

