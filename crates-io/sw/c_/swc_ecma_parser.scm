(define-module (crates-io sw c_ swc_ecma_parser) #:use-module (crates-io))

(define-public crate-swc_ecma_parser-0.1.0 (c (n "swc_ecma_parser") (v "0.1.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.1") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.1") (d #t) (k 0)) (d (n "testing") (r "^0.1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "0qr8ycsigczlcglk0vlnx52ldvy9vcnfa2lfz0k3wzjgilh46vah") (y #t)))

(define-public crate-swc_ecma_parser-0.2.0 (c (n "swc_ecma_parser") (v "0.2.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.1") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.1") (d #t) (k 0)) (d (n "testing") (r "^0.1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "0vnh9qj5ahxs9vs0292cvas5p19h1ybx3pxibp5a974jxm433vp5")))

(define-public crate-swc_ecma_parser-0.2.1 (c (n "swc_ecma_parser") (v "0.2.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.1") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.1") (d #t) (k 0)) (d (n "testing") (r "^0.1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "16bf88a0i65adj4px2hkv7wv7akyl544wwdzwaxiwxzisxnv0q2q") (y #t)))

(define-public crate-swc_ecma_parser-0.2.2 (c (n "swc_ecma_parser") (v "0.2.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.1") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.1") (d #t) (k 0)) (d (n "testing") (r "^0.1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "0gsfyl1vq613cx9v01x4qifh7vzkfmqk0wjjmcavdr64n18bl9w0")))

(define-public crate-swc_ecma_parser-0.3.0 (c (n "swc_ecma_parser") (v "0.3.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.2") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.1") (d #t) (k 0)) (d (n "testing") (r "^0.1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "0qgr6g0jzlb5rfdd2kjv8znbhjiwdv9n7m1f7qvgh4rrvp1amni7") (y #t)))

(define-public crate-swc_ecma_parser-0.3.1 (c (n "swc_ecma_parser") (v "0.3.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.2") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.1") (d #t) (k 0)) (d (n "testing") (r "^0.1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "0a4hdbl1rbmnx316kvzlkgbjf5hgy9ikr7fvm6mv4jbbbh2sdc31") (y #t)))

(define-public crate-swc_ecma_parser-0.3.2 (c (n "swc_ecma_parser") (v "0.3.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.2") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.1") (d #t) (k 0)) (d (n "testing") (r "^0.1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "055jvbhyaraar7v3pl9p2nfvhkbnqin9djryrm46cph9swak24p8")))

(define-public crate-swc_ecma_parser-0.4.0 (c (n "swc_ecma_parser") (v "0.4.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.3") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.1") (d #t) (k 0)) (d (n "testing") (r "^0.1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "0l3944ldhhcfb2wfvaqjj8kn1z21s6ipihdbfy1ykqdr70wbwbyc") (y #t)))

(define-public crate-swc_ecma_parser-0.5.0 (c (n "swc_ecma_parser") (v "0.5.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.3") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.1") (d #t) (k 0)) (d (n "testing") (r "^0.1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "09vjl6b24dj0yaa53rpv0bmpbflnv8x7vz75s8kck61gdv2jjxrl") (y #t)))

(define-public crate-swc_ecma_parser-0.5.1 (c (n "swc_ecma_parser") (v "0.5.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.3") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.1") (d #t) (k 0)) (d (n "testing") (r "^0.1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "1c5d6kfxn0nq85gl218hwy32q9lxh6f8fr13r6kn3g4kvw8dcl10") (y #t)))

(define-public crate-swc_ecma_parser-0.5.3 (c (n "swc_ecma_parser") (v "0.5.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.3") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.1") (d #t) (k 0)) (d (n "testing") (r "^0.1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "0n0jz9nyybcx7mz82njp051wk854v9950bl16yydsl1lms1hqv8d") (y #t)))

(define-public crate-swc_ecma_parser-0.5.4 (c (n "swc_ecma_parser") (v "0.5.4") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.3") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.1") (d #t) (k 0)) (d (n "testing") (r "^0.1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "0sc2jpsqi9gwkqdpnk75fv8af2cis75wy1zm5im6slby64nv605l")))

(define-public crate-swc_ecma_parser-0.6.0 (c (n "swc_ecma_parser") (v "0.6.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.4") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.1") (d #t) (k 0)) (d (n "testing") (r "^0.1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "139471xsrihc75aayqyrffgzlqrydyk6gnc8vbv6jbrwnbg5avs2")))

(define-public crate-swc_ecma_parser-0.6.1 (c (n "swc_ecma_parser") (v "0.6.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.4") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.1") (d #t) (k 0)) (d (n "testing") (r "^0.1") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "1q5v9szz3vzigp9a0lpjz3hhlxg58dsabjb7vi7d2s3lbpmxc7wl")))

(define-public crate-swc_ecma_parser-0.8.0 (c (n "swc_ecma_parser") (v "0.8.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.6") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.2") (d #t) (k 0)) (d (n "testing") (r "^0.2") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "09gc2fl7miy7d0b34b0a084iy8l7y9rx01a90qmmzchad5hj89zj") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.8.1 (c (n "swc_ecma_parser") (v "0.8.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.6") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.2") (d #t) (k 0)) (d (n "testing") (r "^0.2") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1zgy0vj4kmiis7fr53pyg4i6jyimqd528d7vy2s9mwqmpk0dgwj7") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.8.2 (c (n "swc_ecma_parser") (v "0.8.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.7") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.2") (d #t) (k 0)) (d (n "testing") (r "^0.2") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "083p80szqimabzq6rxqlgbssc6ck1ak8h4iysq7x9hnvpgl8b21r") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.9.0 (c (n "swc_ecma_parser") (v "0.9.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.8") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.2") (d #t) (k 0)) (d (n "testing") (r "^0.3") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0ix7sz07pymrg2aqknzc41zmqrwr1wkpgid9gkpy5xly4s2dsi9i") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.9.1 (c (n "swc_ecma_parser") (v "0.9.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.8") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.3") (d #t) (k 0)) (d (n "testing") (r "^0.3") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "06mm4h00lfmh96w7ir4a405rq9v80lppr0vaasbxdgrg44p10fma") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.10.1 (c (n "swc_ecma_parser") (v "0.10.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.9") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.3") (d #t) (k 0)) (d (n "testing") (r "^0.3") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0lya28valihwks20dljn52gklzyirxpcpzlnap36wij4lr3v2ivp") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.10.2 (c (n "swc_ecma_parser") (v "0.10.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.9.2") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.3") (d #t) (k 0)) (d (n "testing") (r "^0.3") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0xxcfhvlbx0vcims933lmgzrvfk7m3a1jjhh3qs577y4vz6q81wq") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.10.3 (c (n "swc_ecma_parser") (v "0.10.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.9.3") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.3") (d #t) (k 0)) (d (n "testing") (r "^0.3") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1bcwfp7qq1k4cpmxw7kbs6dqjwi5fkgcgmpyn6w4y7ydfn8yac94") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.11.0 (c (n "swc_ecma_parser") (v "0.11.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.3.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.9.3") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.3") (d #t) (k 0)) (d (n "testing") (r "^0.3") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0hvvhpgxrqiqvpf7k6d8vn8v8hq6v5xbnmid1x8gzhax7j8z39z2") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.12.0 (c (n "swc_ecma_parser") (v "0.12.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0)) (d (n "testing") (r "^0.4") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "05a4d0jwaf8mgzw8k2f4nnjy900pk5bby98jqwjmd9b5sjz7fxwb") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.12.1 (c (n "swc_ecma_parser") (v "0.12.1") (d (list (d (n "ast") (r "^0.10.0") (d #t) (k 0) (p "swc_ecma_ast")) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "parser_macros") (r "^0.4") (d #t) (k 0) (p "swc_ecma_parser_macros")) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.4.0") (d #t) (k 0)) (d (n "testing") (r "^0.4") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0kqakc2xmx4yyndn30n13k13j8dwag9g2sxq06q3606raklrm2j4") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.12.2 (c (n "swc_ecma_parser") (v "0.12.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0) (p "swc_ecma_parser_macros")) (d (n "testing") (r "^0.4") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1nhirf9s0jgmmb8fq7h7dp63jc9a25y26gb02mxv5ayi478xb7gz") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.12.3 (c (n "swc_ecma_parser") (v "0.12.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0) (p "swc_ecma_parser_macros")) (d (n "testing") (r "^0.4") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "17nr6x9y5glqzsp68ji83wm2mb8swyvczjqfadvnlja8s48gqa9q") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.13.0 (c (n "swc_ecma_parser") (v "0.13.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0) (p "swc_ecma_parser_macros")) (d (n "testing") (r "^0.4") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "172b3ish66r167ydhp03knbkfxjq4g28xni1740pbbdwmh2vnvf3") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.13.1 (c (n "swc_ecma_parser") (v "0.13.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0) (p "swc_ecma_parser_macros")) (d (n "testing") (r "^0.4") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0vyq27rhk7hqr510jv7rlicqdilx6rc2yhfg05kll5kdncf9i4yn") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.15.0 (c (n "swc_ecma_parser") (v "0.15.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0) (p "swc_ecma_parser_macros")) (d (n "testing") (r "^0.4") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "128q6139lskkn6r8lj3q4gnhli0bhj7cs093lbwf5h3bij8dvhj0") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.15.1 (c (n "swc_ecma_parser") (v "0.15.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0) (p "swc_ecma_parser_macros")) (d (n "testing") (r "^0.4") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0nqrh5f9aa1m0w9167yb672kqas4pi7mk3zn9ds4979dc5g186hb") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.16.0 (c (n "swc_ecma_parser") (v "0.16.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0) (p "swc_ecma_parser_macros")) (d (n "testing") (r "^0.4") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1xvqzdx5037cbsdlzh4ks2fhhzbvikp2lcjzv31sf6rsfj04da3l") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.17.0 (c (n "swc_ecma_parser") (v "0.17.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.15.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0) (p "swc_ecma_parser_macros")) (d (n "testing") (r "^0.4") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0hddaai7p98kv2c8xv1q87pskizc31md89bq6lavfikf7bviq8ls") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.17.1 (c (n "swc_ecma_parser") (v "0.17.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.15.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0) (p "swc_ecma_parser_macros")) (d (n "testing") (r "^0.4") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1i37zvb69d4d6w2ibjlz17sh4bki6sdyl7gplr6prhslv37jsb9n") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.17.2 (c (n "swc_ecma_parser") (v "0.17.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.15.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0) (p "swc_ecma_parser_macros")) (d (n "testing") (r "^0.4") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1avgby0hn7dgzvsqygnd554c5vl8sq3lvfman3kmm1wl93mpmraa") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.18.0 (c (n "swc_ecma_parser") (v "0.18.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.16.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0psj7b5ckymharmyaxcb7i4hw0lgpjyzzpyaxg49ink3qadsl5l2") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.18.1 (c (n "swc_ecma_parser") (v "0.18.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_debug"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.16.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "14nw6iycn4azx4jr441clnyc1p05h8y7nfp4xxgz2lf6f8j96010") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.19.0 (c (n "swc_ecma_parser") (v "0.19.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1qr0rpwc4c76dni211w5hkdfirhk4x7qkqnpbn39rv1cmlgwpg1n") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.19.1 (c (n "swc_ecma_parser") (v "0.19.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0fj63y06p2s78cbzlv0vjqhiqk4g4sabgkym9a74h2cfb3b5k724") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.19.2 (c (n "swc_ecma_parser") (v "0.19.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1dw25ph5c22difrn97m30pk9bz87mjz354lh8hkpi523b1f2l1wg") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.20.0 (c (n "swc_ecma_parser") (v "0.20.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "011iw6aa0ki3ghs3px971dpdmlkb61jgisy3qgsq2bp33661dmmv") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.21.0 (c (n "swc_ecma_parser") (v "0.21.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0yhw4z8g27sf6221ajc2vph1i39vgjhxf7si4c1lck32h54p1k93") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.21.1 (c (n "swc_ecma_parser") (v "0.21.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1hgrvz6n3cp0yfj73v0h96mvbilfgr3c20b2q2grbv2xd7x6dp4w") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.21.2 (c (n "swc_ecma_parser") (v "0.21.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0s92pxwa5047i8v6qg9naxi63i2qlqwvy7dvrnwrxnp3fqzcljrn") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.21.3 (c (n "swc_ecma_parser") (v "0.21.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "15qnlixr4b29gk1vq332i3qdfli20fn8qlai9yikzf41rlcb1ns3") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.21.4 (c (n "swc_ecma_parser") (v "0.21.4") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "13sa5933s4p8igsvkrli6x6ir4s79j4lf75dkinpj8mb2vyv11b4") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.21.5 (c (n "swc_ecma_parser") (v "0.21.5") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "00r95cmfxffv4n8042k6kfbn9p54ma4jz2cgsnvmxxipmj4sn6cm") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.21.6 (c (n "swc_ecma_parser") (v "0.21.6") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0mgi7ncsw8zlska9iz585xxblg6ajhj5j64yvz9vkic3fwdnh7kh") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.21.7 (c (n "swc_ecma_parser") (v "0.21.7") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "18y0rnl7zsslipasz2ymdjmyqy91jcgnnmk4j2zqnwk069jibww7") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.21.8 (c (n "swc_ecma_parser") (v "0.21.8") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1yr7jjwh9m6x7yf9nq2018vm1n7vqwysar81k9j99pcgpqmh5zf7") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.21.9 (c (n "swc_ecma_parser") (v "0.21.9") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1y7limfwzpw9bb3xn3dhiypk7adlkfb3xvn7qlbi93lsd1kcm6xm") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.21.10 (c (n "swc_ecma_parser") (v "0.21.10") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1qgxc9081qvgpqxk6gplvx2crvvdymg7g982c0daq3qxrgzzgfaf") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.21.11 (c (n "swc_ecma_parser") (v "0.21.11") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1fzd492r1wdi6glph7qx2m9nhdz984zii0nbnknw384g74amdkgd") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.22.0 (c (n "swc_ecma_parser") (v "0.22.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.19.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "15yaxfdykjac259bbr4lzr8x2ml60x1m1yy1idkfgkrmfmclz5kq") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.23.0 (c (n "swc_ecma_parser") (v "0.23.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.20.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0six5psfnj49ww7pmbfinrlizvabh7nk60h4amzay7v7yxzrknvd") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.23.1 (c (n "swc_ecma_parser") (v "0.23.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.20.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1hcx8vv9kcllkr4xj2j1jdjbfa0rc5s3mx8aapyqx6z14vasc92q") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.24.0 (c (n "swc_ecma_parser") (v "0.24.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.20.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "17mgp3g36mdwcavkcvdxgy214sjha1w49hi3zfia30jpg449y0mw") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.24.2 (c (n "swc_ecma_parser") (v "0.24.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.20.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "15ka33rfsax1lymamhnqwfy0lflbzl5wnda6jhagvj3c1s9ksf7w") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.24.3 (c (n "swc_ecma_parser") (v "0.24.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.20.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1c25ab5xnhrnwxvh4rzg717fqfxzikipyw3d76153yqcw431ryhy") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.24.5 (c (n "swc_ecma_parser") (v "0.24.5") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.20.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "testing") (r "^0.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "10qxrv6sva1p794q47n2db9ljxi115jz6ibnpci7fc6gj4vvn1iv") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.25.0 (c (n "swc_ecma_parser") (v "0.25.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.21.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "testing") (r "^0.6") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0rb22d9gnivcsjk2hg26b4md7s9k5g5zw0wpfk5rrl7a164rhikw") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.25.1 (c (n "swc_ecma_parser") (v "0.25.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.21.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "testing") (r "^0.6") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "13lffd8nvrm1qj1qdvvi0cldai7fkhsv5p7gb3fi7nny0y9lkib4") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.26.0 (c (n "swc_ecma_parser") (v "0.26.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.22.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "testing") (r "^0.6") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1m2qpyhw5q216dl0n74b0lcdmfpdbvkgvsbakcsxki7wqawyj9id") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.26.1 (c (n "swc_ecma_parser") (v "0.26.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.22.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "testing") (r "^0.6") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1z5f6wjbmr1pzm0fr80phxphxzfhr4afkf6wwv9avfypb37cyyia") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.27.0 (c (n "swc_ecma_parser") (v "0.27.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.23.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "testing") (r "^0.6") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1p8y1qb0a6dbk0d4inslbfr6zr0iwnapqy41djv68k5b024ip1q0") (f (quote (("verify" "fold") ("fold" "swc_common/fold" "swc_ecma_ast/fold") ("default"))))))

(define-public crate-swc_ecma_parser-0.28.0 (c (n "swc_ecma_parser") (v "0.28.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.7.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.24.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.9.0") (d #t) (k 0)) (d (n "testing") (r "^0.7") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0a7x16hz2bp4c2c2ibf1rvn9bnj7a61nrj14sjw5j6pfny8rnf3p") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.29.0 (c (n "swc_ecma_parser") (v "0.29.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.7.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.24.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.9.0") (d #t) (k 0)) (d (n "testing") (r "^0.7") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0p4yrpbzkziw2klid3h8mhpnzy0kclcs9jr2yj357xvdc0z894r1") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.30.0 (c (n "swc_ecma_parser") (v "0.30.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.7.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.25.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.10.0") (d #t) (k 0)) (d (n "testing") (r "^0.7") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "00h6pk6093migpirs4ypsagcdx1ndcki75i5bqmr91if7pbq4cl1") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.31.0 (c (n "swc_ecma_parser") (v "0.31.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.7.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.26.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.11.0") (d #t) (k 0)) (d (n "testing") (r "^0.7") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1yaag01aadsqfgiy2csqdm6mg7jvfk4q62z0igjgz0nlwsicq9lj") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.31.1 (c (n "swc_ecma_parser") (v "0.31.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.7.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.26.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.11.0") (d #t) (k 0)) (d (n "testing") (r "^0.7") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0nx84aq3sfjlinmil9pbs1zjja47ixlczf8jnl9bzgf2wxl2vz3y") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.31.2 (c (n "swc_ecma_parser") (v "0.31.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.7.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.26.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.11.0") (d #t) (k 0)) (d (n "testing") (r "^0.7") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0j0wk70b7gi0v671sznfbbcyc6jlanizy6w6l3mljvrdvd9di8jb") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.32.0 (c (n "swc_ecma_parser") (v "0.32.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.8.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.27.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.12.0") (d #t) (k 0)) (d (n "testing") (r "^0.8") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0721hk6w7w2458zzi8zbyhqs2vgi0bc7whnl6w8aqvi8xr444vv6") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.32.1 (c (n "swc_ecma_parser") (v "0.32.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.8.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.27.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.12.0") (d #t) (k 0)) (d (n "testing") (r "^0.8") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "00bri3x24473czbrfhrxs57ia4f2013fi60wfn1999c765m9d57c") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.33.0 (c (n "swc_ecma_parser") (v "0.33.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.9.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.28.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.13.0") (d #t) (k 0)) (d (n "testing") (r "^0.9.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1b7s596hddnw7n5fqr6zcmm6f0rif9y4zxmxnsxdv6h0p9w05r4j") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.33.1 (c (n "swc_ecma_parser") (v "0.33.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.9.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.28.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.13.0") (d #t) (k 0)) (d (n "testing") (r "^0.9.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "12zf1rlngsfxkricfhmmmw7y310al2ylhrrpvhk8av57p83f9z38") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.33.2 (c (n "swc_ecma_parser") (v "0.33.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.9.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.28.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.13.0") (d #t) (k 0)) (d (n "testing") (r "^0.9.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0rxlpmds5l0jc0wk9glhk4k361z54d5f9q3r5a83sb915xy1b695") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.33.3 (c (n "swc_ecma_parser") (v "0.33.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.9.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.28.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.13.0") (d #t) (k 0)) (d (n "testing") (r "^0.9.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0bv5r0v0q7dm0yzr6ga6f7i9jzi4d1jdx0r4m4sizvbmgsnrvnxr") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.34.0 (c (n "swc_ecma_parser") (v "0.34.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.9.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.28.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.14.0") (d #t) (k 0)) (d (n "testing") (r "^0.9.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "00150hachr13713vil00vkpdmw0ax30sngrrir3bxrhdlj94yd56") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.34.1 (c (n "swc_ecma_parser") (v "0.34.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.9.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.28.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.14.0") (d #t) (k 0)) (d (n "testing") (r "^0.9.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1i4npza6m3cgqwwj37ipvg8g43nqi37jxz8j2hwhism0csf3b5k4") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.35.0 (c (n "swc_ecma_parser") (v "0.35.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.9.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.29.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.15.0") (d #t) (k 0)) (d (n "testing") (r "^0.9.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0adpyqigbj15a4xsp04vlnyv6mhr50xjnmykaz502br2sy3vqkah") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.35.1 (c (n "swc_ecma_parser") (v "0.35.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.9.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.29.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.15.0") (d #t) (k 0)) (d (n "testing") (r "^0.9.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1zb9gr6gbxbz6zvw0j79pz2mddsnp7974hiashccxcmrxzy1h8jm") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.36.0 (c (n "swc_ecma_parser") (v "0.36.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.30.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.16.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "01g1ks63pzmgyn7ng74w7fh3n6sp7860ww6m8961kfv91jfg1s1v") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.36.1 (c (n "swc_ecma_parser") (v "0.36.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.30.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.16.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0avw1hwj9lbsn3s2lxf74xlk9cqxqbm9ljrm4sfrv5n55brlzn4r") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.36.2 (c (n "swc_ecma_parser") (v "0.36.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.30.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.16.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0zg984w7z2jaq8z5j9r2ialw3d7msqjif85ww58i4p18zl70k36b") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.37.0 (c (n "swc_ecma_parser") (v "0.37.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.31.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.17.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0p1vg01kl89sy9izpbcmfzab4yf0b50vgyml5iglikaakwzhs6zi") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.37.1 (c (n "swc_ecma_parser") (v "0.37.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.31.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.17.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1lvj1xja4gfnxwh53k7g7bl36n237aj96n52n4y4zshbb1ipnbcl") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.37.2 (c (n "swc_ecma_parser") (v "0.37.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.31.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.17.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0wslk3nf6l8vxvx41bmlmagmvqqjszh6yxw2nhmc1svsnzychc2i") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.38.0 (c (n "swc_ecma_parser") (v "0.38.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.32.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.18.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0drgk1s32j4ba2zxm391910ksbdbx74sn39ypn1fdn4jkzjlfa6g") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.39.0 (c (n "swc_ecma_parser") (v "0.39.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.33.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.19.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1rd66j2piliksysp5mr19vs36791c6yi64x6c3m47zj8l7ikf2ii") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.40.0 (c (n "swc_ecma_parser") (v "0.40.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.33.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.19.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0v2rml1zb8nri7pf62pk1qmgh5rz6n1wb6j75hj7n3xl5km1vw4x") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.41.0 (c (n "swc_ecma_parser") (v "0.41.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.33.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.19.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1p091kp08nhczjq7656ya6455fi1y5z91d7lin73v4yz1s0y8fzj") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.42.0 (c (n "swc_ecma_parser") (v "0.42.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.34.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.20.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0gg2ly9hddygvywyk8xfdk9v27igrshdbc1bafpbay3dvvfmyvqk") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.43.0 (c (n "swc_ecma_parser") (v "0.43.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.35.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.21.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "17y338jwish08mrx4iy6fmfg80j32g8m769d06nnz4x4zq8d5zm3") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.43.1 (c (n "swc_ecma_parser") (v "0.43.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.35.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.21.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0snwaxdvxn10rvl9z2hy9hwhgq6js3si75y0q7rbhicgrzvch8kd") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.43.2 (c (n "swc_ecma_parser") (v "0.43.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.35.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.21.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "06afz4bdi7c1d30f8whwydgwlw2namxnmwqwwpffpraaxzxxhg24") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.43.3 (c (n "swc_ecma_parser") (v "0.43.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.35.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.21.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0h07fcvfzhvl89jdfd7qyr0ya4s2xyffm9fy1aps1hcgd5plqk0l") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.43.4 (c (n "swc_ecma_parser") (v "0.43.4") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.35.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.21.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "17kkqj0zw6jrqvi5kmb1371c6daavldvkaxlcpblrzz7nnqa3xq9") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.43.5 (c (n "swc_ecma_parser") (v "0.43.5") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.35.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.21.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1647phpqlfchlhfp2cvc0dgm5zl66d6d9mmmc5r8farhb42h3apz") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.43.6 (c (n "swc_ecma_parser") (v "0.43.6") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.35.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.21.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1mf8v1z7k1g1lzdz92b5yi1mm5v9mi83b16lwbj7ydnjdlg0cvcf") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.44.0 (c (n "swc_ecma_parser") (v "0.44.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.36.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.22.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1sj27h3bqaz7vaf37iri9gdx919zkn1db44gx4madjm8php43v72") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.44.1 (c (n "swc_ecma_parser") (v "0.44.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.36.0") (d #t) (k 0)) (d (n "swc_ecma_parser_macros") (r "^0.4.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.22.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1wyyni3f8y3azf6hvlxf2gi51q79i5x06gwcdyk9rq96vbrspwj8") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.44.2 (c (n "swc_ecma_parser") (v "0.44.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.36.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.22.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "12q6hqyi7w9ic8f85p7cskflxin51dq08sfisbyh3zs80bjlzdp0") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.45.0 (c (n "swc_ecma_parser") (v "0.45.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.37.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.23.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0gy6zz5y5j0n4gm7lk8xgx8rj5986im529lk0mqah3zmqxvx4vpx") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.45.1 (c (n "swc_ecma_parser") (v "0.45.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.37.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.23.1") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1z6nsc218dszscf74jl3r6ns2zad7bdajv0gf0q9jrzpvkfdncf6") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.45.2 (c (n "swc_ecma_parser") (v "0.45.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.37.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.23.1") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1111f9hvdlgb2y9sfxzfps7bbna8fwj6314fii36mr8dwi6ydyxd") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.45.3 (c (n "swc_ecma_parser") (v "0.45.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.37.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.23.2") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1f4ja6bgyg250jhd0rlw13dnn5lan7i9xlp7zw72q7yklkpwzhnn") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.45.4 (c (n "swc_ecma_parser") (v "0.45.4") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.37.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.23.3") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "18a69qwp1i63qbp0h4hj1izdsa77k3fafljbrzcqwwlk4s8p6q9g") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.45.5 (c (n "swc_ecma_parser") (v "0.45.5") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.37.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.23.3") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0n3sbzrfgajshp8w3q8d8cf65y9rrb2acmls6jyq5y3ysi8iagr4") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.45.6 (c (n "swc_ecma_parser") (v "0.45.6") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.37.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.23.3") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "11jnimqa545xbbdg1ibqr6h73qazscy9sd8kr27jsxggc2s7g79x") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.46.0 (c (n "swc_ecma_parser") (v "0.46.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.38.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.24.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "09z199dy6bdir79gs038bhil4m1lmqsr5qb9nznn169h50ws5lkf") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.47.0 (c (n "swc_ecma_parser") (v "0.47.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.38.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.24.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1vq9947i6r61zf1760qs62swzhywjm3szrc5p0zhk294m4pi1z0b") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.47.1 (c (n "swc_ecma_parser") (v "0.47.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.38.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.24.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0lbrn9kfyfnqjhdypji7ja6bvjc511l78amfnrplfh7yz7fsdvkf") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.47.2 (c (n "swc_ecma_parser") (v "0.47.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.38.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.24.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "11xacbrl2iglsmgb83h7avj9lw62w9rss5rr8qf9lcjx93adr70s") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.48.0 (c (n "swc_ecma_parser") (v "0.48.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.39.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.25.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0pks0j8dizaji9myl5sk1cmwbxv0j03g1lwr8qdhd90xsij7j4nl") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.48.1 (c (n "swc_ecma_parser") (v "0.48.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.39.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.25.1") (d #t) (k 0)) (d (n "testing") (r "^0.10.3") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1yqmprh9xqnw392wl120lh9z97gi141f5jwiaq7r54cvyyy788kw") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.49.0 (c (n "swc_ecma_parser") (v "0.49.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.26.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.3") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0pzhy97418s6wa4f15cw8fh2g371x3baki6v4mrxc92pra2g2w4h") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.50.0 (c (n "swc_ecma_parser") (v "0.50.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.26.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.3") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1gl854jmjbzq4pdngbqsc2n5i9vwqrv3vs87z55xq2n0r8hb7rxc") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.51.0 (c (n "swc_ecma_parser") (v "0.51.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.41.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.27.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.3") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0ls4xsdmlkdcg17hgr0fmx5clqg9kjrgr49z4l6j58h6adr6vp75") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.51.1 (c (n "swc_ecma_parser") (v "0.51.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.41.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.27.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.3") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0wrjg4nk9r0wfyql5qq16117lvrhk6pmiq410k2z1v48jr6pb7s9") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.51.2 (c (n "swc_ecma_parser") (v "0.51.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.41.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.27.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.3") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0knivmjs2ykrkh1bm9jhqzmsy2qnqx9c1x8izgr3f1ymx6d8gz16") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.52.0 (c (n "swc_ecma_parser") (v "0.52.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.42.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.28.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.3") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1lgf20ihk2gdn7ivbyzf3v278akqlb9n7clzf29vjf150jign4j6") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.52.1 (c (n "swc_ecma_parser") (v "0.52.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.42.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.28.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.3") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0pb57kpbva0fy0z8wpscr4apra8zl8a0af8g5mkk6wghka4g7d2q") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.52.2 (c (n "swc_ecma_parser") (v "0.52.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.42.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.28.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.3") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "09z37svdxaff7q63zsjj7v8m4rjndxrf3y4qz8b4y5jpg1lm0cn0") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.53.0 (c (n "swc_ecma_parser") (v "0.53.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.43.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.29.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.3") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0zn326dqqlan26k2cczjmydxifa51jhr13l9ir5syvcq66s3437m") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.54.0 (c (n "swc_ecma_parser") (v "0.54.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.43.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.29.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.3") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0hp4cyafkwq61p9brg465divzxqwm4z0rjmx9vhz0xih49irj9d2") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.54.1 (c (n "swc_ecma_parser") (v "0.54.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.43.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.29.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.3") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "09md30iki9qcdgxl3f0nd0wq6llgifw9kglng60abjywxavfy4jb") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.54.2 (c (n "swc_ecma_parser") (v "0.54.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.43.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.29.1") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1fr566yd5wn2c9y06ml939cbzd4xarwmbvgg626j4qriw0ccffbn") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.54.3 (c (n "swc_ecma_parser") (v "0.54.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.43.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.29.1") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "065cd47wg2wfa1hrjfg1yy2ir8axgvfxwg88lxh7kggcgc00vhmv") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.54.4 (c (n "swc_ecma_parser") (v "0.54.4") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.43.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.29.1") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0ziwl0wx56f9xmibfdns0jd9p8q0p9mi3xzxdli2j05ki8m7897x") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.55.0 (c (n "swc_ecma_parser") (v "0.55.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.43.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.29.1") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "021zw3g7rdwwq2xsyw49xiz2qqxpgzcf1jik96fjfdnskck4yw0w") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.56.0 (c (n "swc_ecma_parser") (v "0.56.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.30.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1m8wyyp7jk1gm2c5lzvg5sca09qyrrk64zs72z912ribjhyvl31m") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.56.1 (c (n "swc_ecma_parser") (v "0.56.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.30.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0fz5d5k4nlazvpn60xmx2qwmq3jg66d5fk4awi7nsm6bmnm6nnm0") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.56.2 (c (n "swc_ecma_parser") (v "0.56.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.30.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "05gqs9ix7xr61bw1pzq1vpbp74ayw84ihnjran0rp9v0883d5r1i") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.56.3 (c (n "swc_ecma_parser") (v "0.56.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.30.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0jl3i8954kvgyiv2p8hqkmxgghk2295c7y2cp3zj4cqfmwhrrlv6") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.57.0 (c (n "swc_ecma_parser") (v "0.57.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.31.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "17nihkv4qa7xj4izb4xjivf45lb1z2gy12q1m26a7k80swfq0qml") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.57.1 (c (n "swc_ecma_parser") (v "0.57.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.31.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "01dzhib0gb2dlgl7af8zrakw9aidvp2dh24zcnw69njp9680p7vj") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.57.2 (c (n "swc_ecma_parser") (v "0.57.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.31.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0klfbp92r4ccyijxf5ysxy14pwy1q7l63kiy4zn7f0822y6ilzim") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.57.3 (c (n "swc_ecma_parser") (v "0.57.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.31.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "18vf4mhr7z1gnxp8jnjsyq0qacyfnmwiii4f0y2x179nmbsh8kh2") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.57.4 (c (n "swc_ecma_parser") (v "0.57.4") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.31.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1az5bmfn560w66838xdwpsrs2884mffp1kgc9gh1gcjdxbfzm8cr") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.58.0 (c (n "swc_ecma_parser") (v "0.58.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.46.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.32.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "10n45fwaanmimxxainad49ppb1kj6n2sbgxk433ggckgjnqf9agm") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.59.0 (c (n "swc_ecma_parser") (v "0.59.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.46.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.32.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0x4c42lm94xj16f5c77s3zgf8cgpxlz1jiy372681xg6lnb9r6fy") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.59.1 (c (n "swc_ecma_parser") (v "0.59.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.46.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.32.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0623lzar7ldygyfapp9ajra1x5bgpw7sccg5shqigxl49k5kyxwb") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.59.2 (c (n "swc_ecma_parser") (v "0.59.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.46.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.32.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0xfax7yx6ca9lszc99nmnj22mr9lk9fsvr1l0ncdgi77qy99xj2l") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.59.3 (c (n "swc_ecma_parser") (v "0.59.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.46.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.32.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0h0vw8yv3zbygpba09crvs5sashmnm7i4qac0x2b58dfrppmbxgc") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.60.0 (c (n "swc_ecma_parser") (v "0.60.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.46.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.32.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1rbjqnnkymbsm0xbg9zq4g34fxjnhjiq60wjv6rcmc77h5mp862i") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.60.1 (c (n "swc_ecma_parser") (v "0.60.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.46.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.32.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1ghq817ndcz17jrh1dqyj053x3daqpqp262yl2v82i3przpr6wgb") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.60.2 (c (n "swc_ecma_parser") (v "0.60.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.46.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.32.1") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0c86jydyipyi9jvipvpddmzcrkz1yd8lv3pvvxdhvdpw00c1k1zj") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.61.0 (c (n "swc_ecma_parser") (v "0.61.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.47.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.33.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0yz59vnazf4ila6bx17cmipqxrl6xbnds6rbhxc0z85zypgnb5n4") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.61.1 (c (n "swc_ecma_parser") (v "0.61.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.47.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.33.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1v8pkcfpkz2alvnrdx3lprhmb75fzhbnf1pw5jp52a1591b9pvc2") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.61.2 (c (n "swc_ecma_parser") (v "0.61.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.47.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.33.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "10849qi2r1x82hcb27igj0xaz3b9k7a657njjhfc5iqy36bkw186") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.61.3 (c (n "swc_ecma_parser") (v "0.61.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.47.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.33.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0lm9zl5lmz8r1dkwg1b0y1d7da8ql3jwrybij9pgz8g5m8gaa8p2") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.62.0 (c (n "swc_ecma_parser") (v "0.62.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.48.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.34.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1ga9zin3249lk9n272zvz6261aii5igy1qqa0q3gzpry18lh3ra2") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.62.1 (c (n "swc_ecma_parser") (v "0.62.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.10.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.48.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.34.0") (d #t) (k 0)) (d (n "testing") (r "^0.10.5") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "14s3h8r6kx8w9hfkgyb6qj30vm21wxf47jqm2zy237g2sdkaxsbh") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.63.0 (c (n "swc_ecma_parser") (v "0.63.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.0") (d #t) (k 0)) (d (n "testing") (r "^0.11.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "19ak49bscl513spbf8kpgy1nmxhmaipnzgvmigwhivd0hi4mgcxd") (f (quote (("default"))))))

(define-public crate-swc_ecma_parser-0.64.0 (c (n "swc_ecma_parser") (v "0.64.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.0") (d #t) (k 0)) (d (n "testing") (r "^0.11.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1lj1407p63jzk1ldp8yxxqynwsbi8hw6diz81i2bprmn1xgmz91d") (f (quote (("typescript") ("default" "typescript"))))))

(define-public crate-swc_ecma_parser-0.65.0 (c (n "swc_ecma_parser") (v "0.65.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.0") (d #t) (k 0)) (d (n "testing") (r "^0.12.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0f22ifyqgjrdd5lsni7wwn9rjkxrdhdal86bgk6vdggn5xdr6zm4") (f (quote (("typescript") ("default" "typescript"))))))

(define-public crate-swc_ecma_parser-0.66.0 (c (n "swc_ecma_parser") (v "0.66.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.0") (d #t) (k 0)) (d (n "testing") (r "^0.12.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "03zfvgqg4rzv63y792gvnlfp30vl42pxr1lscxywxy1igly6dcw6") (f (quote (("typescript") ("default" "typescript"))))))

(define-public crate-swc_ecma_parser-0.66.1 (c (n "swc_ecma_parser") (v "0.66.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.0") (d #t) (k 0)) (d (n "testing") (r "^0.12.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "09wcf9crjgrvgsnz1pwz3936d0vln296iwhz6c8z1qvn4m04xhik") (f (quote (("typescript") ("default" "typescript"))))))

(define-public crate-swc_ecma_parser-0.66.2 (c (n "swc_ecma_parser") (v "0.66.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.0") (d #t) (k 0)) (d (n "testing") (r "^0.12.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1fd3d1wjav1brzrf94xbjkin7yk7irghd6rx35g14kfh8lb980rm") (f (quote (("typescript") ("default" "typescript"))))))

(define-public crate-swc_ecma_parser-0.66.3 (c (n "swc_ecma_parser") (v "0.66.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.0") (d #t) (k 0)) (d (n "testing") (r "^0.12.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1n4cvmawrwsgrv59n2hbb3mbrfqzx7cv6c93mz0dhp8s5njs3raz") (f (quote (("typescript") ("default" "typescript"))))))

(define-public crate-swc_ecma_parser-0.66.4 (c (n "swc_ecma_parser") (v "0.66.4") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.2") (d #t) (k 0)) (d (n "testing") (r "^0.12.2") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1af2mxs436qzg5ri1sa4rf78km8gj9vxa946qxx9qia1jfq2801y") (f (quote (("typescript") ("default" "typescript"))))))

(define-public crate-swc_ecma_parser-0.66.5 (c (n "swc_ecma_parser") (v "0.66.5") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.2") (d #t) (k 0)) (d (n "testing") (r "^0.12.2") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0a9j8lb87fgmqhz7c345cs70hsbj5pywq8xchjrgds66r174ajld") (f (quote (("typescript") ("default" "typescript"))))))

(define-public crate-swc_ecma_parser-0.66.6 (c (n "swc_ecma_parser") (v "0.66.6") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.2") (d #t) (k 0)) (d (n "testing") (r "^0.12.2") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "00p98rjypnsmilbafsy57wpvmvbxwywq8kv3y4ayh5kypjbpbr83") (f (quote (("typescript") ("default" "typescript"))))))

(define-public crate-swc_ecma_parser-0.67.0 (c (n "swc_ecma_parser") (v "0.67.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.2") (d #t) (k 0)) (d (n "testing") (r "^0.12.2") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "04jrfl9plaay7a28c7sx8br5h3myyc5jjy911klp8784rf6qqhg0") (f (quote (("typescript") ("default" "typescript"))))))

(define-public crate-swc_ecma_parser-0.67.1 (c (n "swc_ecma_parser") (v "0.67.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.2") (d #t) (k 0)) (d (n "testing") (r "^0.12.2") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0m3limcwzpvgic3fynxpp41820d1wdmm5y4qvlkdnif870r0jn5j") (f (quote (("typescript") ("default" "typescript"))))))

(define-public crate-swc_ecma_parser-0.67.2 (c (n "swc_ecma_parser") (v "0.67.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.49.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.35.2") (d #t) (k 0)) (d (n "testing") (r "^0.12.2") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "076jcc7q1kmv3dcdb3dhjrv5rxn2yr5wx114pixi7148p0v8bvdm") (f (quote (("typescript") ("default" "typescript"))))))

(define-public crate-swc_ecma_parser-0.68.0 (c (n "swc_ecma_parser") (v "0.68.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.50.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.36.0") (d #t) (k 0)) (d (n "testing") (r "^0.12.2") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1g7ax17xqk5bn4j6n5qx0s70xswac5r51d5gzgh80nsz8s4jmzh6") (f (quote (("typescript") ("default" "typescript"))))))

(define-public crate-swc_ecma_parser-0.68.1 (c (n "swc_ecma_parser") (v "0.68.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.50.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.36.0") (d #t) (k 0)) (d (n "testing") (r "^0.12.2") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0kmwcn6cnmi8rsn7ngy9b4hbi15njf5vnczvaqff30j5l0k2b827") (f (quote (("typescript") ("default" "typescript"))))))

(define-public crate-swc_ecma_parser-0.69.0 (c (n "swc_ecma_parser") (v "0.69.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.51.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.37.0") (d #t) (k 0)) (d (n "testing") (r "^0.12.2") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0b8yywl36nqpc8wfcx6sbs3w43wrjgp8gjqn1g2mni1xrhxyf2x3") (f (quote (("typescript") ("default" "typescript"))))))

(define-public crate-swc_ecma_parser-0.69.1 (c (n "swc_ecma_parser") (v "0.69.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.11.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.51.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.37.1") (d #t) (k 0)) (d (n "testing") (r "^0.12.3") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "065c3yzww9m05a99niynyp4wmnbwyg4zbgkig067a631alf1zsy7") (f (quote (("typescript") ("default" "typescript"))))))

(define-public crate-swc_ecma_parser-0.70.0 (c (n "swc_ecma_parser") (v "0.70.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.12.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.52.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.38.0") (d #t) (k 0)) (d (n "testing") (r "^0.13.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "16rlj08g69vypnjqcpl3lcvd4s2l2b0zm5ql5bwaiyrlgcx1m3zn") (f (quote (("typescript") ("default" "typescript"))))))

(define-public crate-swc_ecma_parser-0.70.1 (c (n "swc_ecma_parser") (v "0.70.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.12.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.52.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.38.0") (d #t) (k 0)) (d (n "testing") (r "^0.13.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1y2yfal6rkjx6ad89775nggb945xqnlpk3bqxjlg4p1gy0fiw1mx") (f (quote (("typescript") ("default" "typescript"))))))

(define-public crate-swc_ecma_parser-0.70.2 (c (n "swc_ecma_parser") (v "0.70.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.12.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.52.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.38.1") (d #t) (k 0)) (d (n "testing") (r "^0.13.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "19a6667qad80lqpjpv8w6iz1lqizwc702slicjxyyk5qa89r0ah4") (f (quote (("typescript") ("default" "typescript"))))))

(define-public crate-swc_ecma_parser-0.70.3 (c (n "swc_ecma_parser") (v "0.70.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.12.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.52.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.38.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.3.0") (d #t) (k 2)) (d (n "testing") (r "^0.13.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0y7jriwvwrlyv1wvs2a40vrbzmhzzwksqpdygikybxhc26dlrdg7") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.70.4 (c (n "swc_ecma_parser") (v "0.70.4") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.12.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.52.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.38.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.3.0") (d #t) (k 2)) (d (n "testing") (r "^0.13.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0irf3xz68nf5zwms4i2zdhf338yhkaw8pzkr0smsfci1mk0f7ch4") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.71.0 (c (n "swc_ecma_parser") (v "0.71.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.12.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.52.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.38.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.3.0") (d #t) (k 2)) (d (n "testing") (r "^0.13.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "114i5gnmri5g3lz94f9r6wr8ybh2rjhvmwa2qgzcbzadxnwmy3s6") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.72.0 (c (n "swc_ecma_parser") (v "0.72.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.53.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.39.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.4.0") (d #t) (k 2)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1ayxkq2n0vc5g1s34vnp9djki9mwpqkp0qc8x34g9jvjx46figd0") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.73.0 (c (n "swc_ecma_parser") (v "0.73.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.4.0") (d #t) (k 2)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0bvnlia9a0xn3sn88rxfl8cmyh9zs0xm7wa1vy6174s3vxgw08m9") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.73.1 (c (n "swc_ecma_parser") (v "0.73.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.4.0") (d #t) (k 2)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1087xqc62yl999nby1qmhg5bs78jjzsjh223wd7mw8w3a8d180hy") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.73.2 (c (n "swc_ecma_parser") (v "0.73.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.4.0") (d #t) (k 2)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "16crp7nzq104wlkhqyqcqz7wa15vw3g1ai2szcl0vbdbnsibyy4f") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.73.3 (c (n "swc_ecma_parser") (v "0.73.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.4.0") (d #t) (k 2)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "065sksmz678qzy1hlxr1xxnba0r012qnc8agh3fwxnd3g5z18g3b") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.73.4 (c (n "swc_ecma_parser") (v "0.73.4") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.4.0") (d #t) (k 2)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1lia2rw813b3hby1kqckac4wxgzj3j2ap77hp9j2x5w9sr3249sq") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.73.5 (c (n "swc_ecma_parser") (v "0.73.5") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.4.0") (d #t) (k 2)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "12bs05v3g95p8cqjrr5xv9b9qp432ab7x8q5flhj4z1gmdrgh4zn") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.73.6 (c (n "swc_ecma_parser") (v "0.73.6") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.4.0") (d #t) (k 2)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1g18mbvssabkp0x6zc5h6b32cny6bwkfks8cnlm3klnlz0zc2b40") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.73.7 (c (n "swc_ecma_parser") (v "0.73.7") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.4.0") (d #t) (k 2)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1bzmarwirj6bsc5kdabf9cb5xlr3nx5hxb8wl5i7dvka657kwpp1") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.73.8 (c (n "swc_ecma_parser") (v "0.73.8") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.4.0") (d #t) (k 2)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1rav4x1vl9ngpnm6nhsmdv9zsl3nrp2cfzf26mwq8skdy5834di5") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.73.9 (c (n "swc_ecma_parser") (v "0.73.9") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.4.0") (d #t) (k 2)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0vcp2h1qpixhpgjrff4ka7z9lgkfd2smdaam0yyg7l5yh84n8c7d") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.73.10 (c (n "swc_ecma_parser") (v "0.73.10") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.4.0") (d #t) (k 2)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1xm07ay2prrw3k9wg5dzfq5nqrf6irdznb899rsz2lddjgj2ddyg") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.73.11 (c (n "swc_ecma_parser") (v "0.73.11") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.4.0") (d #t) (k 2)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0djyss6006ppjfc836m7ciq0b3prijmnimjfanl9rbd8bs9c1my8") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.73.12 (c (n "swc_ecma_parser") (v "0.73.12") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.4.0") (d #t) (k 2)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1f9dmh0afg7qvmlsa2xq0w4nk8rwc95jjfbpm1bngai93czg5a34") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.73.13 (c (n "swc_ecma_parser") (v "0.73.13") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.4.0") (d #t) (k 2)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1ivcycm7lg7fn7bvy95drrpv42151qx1h923xki7i5icis60j55v") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.73.14 (c (n "swc_ecma_parser") (v "0.73.14") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.4.0") (d #t) (k 2)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "10m1d53zw4sa7i6nvyyb9vlqmj6ns7jvw441w061jdqvsj5z0cns") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.73.15 (c (n "swc_ecma_parser") (v "0.73.15") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.13.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.54.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.40.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.4.0") (d #t) (k 2)) (d (n "testing") (r "^0.14.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0y4xif0h40pqh058x81yx9w1idk3cpmf4b5fac658snvbjq1kcbg") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.74.0 (c (n "swc_ecma_parser") (v "0.74.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.55.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.41.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1vqgvxzxx0k03r0lifrqdfhsiviswmqm4f45w6sc3fh9x4g7yp59") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.75.0 (c (n "swc_ecma_parser") (v "0.75.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.55.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.41.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1by1jd2z4ipiv5vjl9p6kbjdcxyk948krn9s7wbcq3zvzy8f88n2") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.75.1 (c (n "swc_ecma_parser") (v "0.75.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.55.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.41.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0w7m5frzc2b6yh35hihgci12dgn49hwjbadcbd0547yr87y9j2xa") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.75.2 (c (n "swc_ecma_parser") (v "0.75.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.55.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.41.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0jsg3kxvy50k44qyph4w50b9mkqb3yvvg9bcwvav934yap11myfv") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.75.3 (c (n "swc_ecma_parser") (v "0.75.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.55.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.41.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1vl93qdgidzynhw38zd50h84li9v3i264r3japvy9jfzpfpmp6av") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.76.0 (c (n "swc_ecma_parser") (v "0.76.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.56.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.42.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0z3lqp7kh5177r0ycxawgl972bs32b7yg4qcdmz6jz9ayvc2ybph") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.76.1 (c (n "swc_ecma_parser") (v "0.76.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.56.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.42.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1x5v706z7lv13z379vxabl2kfn41qcavv21hms5l4r6l2bgm50dc") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.76.2 (c (n "swc_ecma_parser") (v "0.76.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.56.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.42.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "18qlhgf8q2chww4w16przpvciwp28jrx7vi9i977p0blr3q2y7qj") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.76.3 (c (n "swc_ecma_parser") (v "0.76.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.56.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.42.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1cqb8abyiyzgspibn7x74y0mscjq71bxw6v23grpdwwbhkbzl47l") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.77.0 (c (n "swc_ecma_parser") (v "0.77.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.57.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.43.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1gh4balqlx4dxaid0dlkiaggwjg04fywgnjkg0rscvhlnbgsc9m5") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.78.0 (c (n "swc_ecma_parser") (v "0.78.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1v73nbmy6431j25x520mrz0mnh1siby1ww7aa7l52pg15nkaksdn") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.78.1 (c (n "swc_ecma_parser") (v "0.78.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0ih11p2xillqwadxid0v5s3s7l5f383hamzir1kg40jrjxims7q8") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.78.2 (c (n "swc_ecma_parser") (v "0.78.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1hhglykkhpfvhakn20mfv7bx7z2q0090bfkphxnpza7svg7lq26k") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.78.3 (c (n "swc_ecma_parser") (v "0.78.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0klp97vll7fmb968s6q07fkkd0fwbnc3bawfb9n2q7l1x5hhdx6w") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.78.4 (c (n "swc_ecma_parser") (v "0.78.4") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "18iw8mc9ckr1naq5wdzxfgkydlh3yd3cmjmq91wv3h8cgl5wy5my") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.78.5 (c (n "swc_ecma_parser") (v "0.78.5") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0zlrrjnzr9cbwfj79pr67pnxbg0isnpahdyvb5fy4l842x19jr1p") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.78.6 (c (n "swc_ecma_parser") (v "0.78.6") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0gwx0qmigpi9namh47gz5x4i2djsxd8crl268pnqdjw0r46r54ci") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.78.7 (c (n "swc_ecma_parser") (v "0.78.7") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0vck4smm43qrr3lf9fdbcy11c3n6mgcgh43wil8qps60in0vrg9n") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.78.8 (c (n "swc_ecma_parser") (v "0.78.8") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "02bsaq00r1y1qfpa4milfsr12da9y23g101ndzsan3cirzm2g1h0") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.78.9 (c (n "swc_ecma_parser") (v "0.78.9") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "13v81djqifvicvqrh2gccms5a694b1hr2az3jdhgflgi7hcy8sc7") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.78.10 (c (n "swc_ecma_parser") (v "0.78.10") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1bhgf5wcwfc8n4zqy56cqq2k2zqdsznkj4i21mz9qlikvg6wzmyk") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.78.11 (c (n "swc_ecma_parser") (v "0.78.11") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "13912wf11irak2yc607m5f8w3fkhlwv7rjf9npk6d2hls2mq5q5b") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.78.12 (c (n "swc_ecma_parser") (v "0.78.12") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0a68lxiibpvmr4vv0pcr3f0gn26mp6pf3qwnc1l3xa2ffd7mn6qd") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.78.13 (c (n "swc_ecma_parser") (v "0.78.13") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1cc61sin8ai6lrli6gqlg2gk6fk1w5sb94r1hg10v568xc2wvz6a") (f (quote (("typescript") ("default" "typescript") ("debug")))) (y #t)))

(define-public crate-swc_ecma_parser-0.79.0 (c (n "swc_ecma_parser") (v "0.79.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0swk01z4yhz43hanl7j040641inib6vgmr3d0pgzq8zrzwym4hpv") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.80.0 (c (n "swc_ecma_parser") (v "0.80.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.14.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.58.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.15.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "15y36an508ipq87j8g2bns2zbq87ayqdkdlqycwj0m6xkd57q78w") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.81.0 (c (n "swc_ecma_parser") (v "0.81.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.59.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.16.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0q92jp13fdavf4i7fnn6avvcvxdadi9gkbgk8cdykhpfndb02mwp") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.81.1 (c (n "swc_ecma_parser") (v "0.81.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.59.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.16.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1lhnvl7fzfs9q8ww1pvgc801rsbbmwldhcr3cwxhp2hnn1y5f0p2") (f (quote (("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.81.2 (c (n "swc_ecma_parser") (v "0.81.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.59.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.45.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.45.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.16.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0p88fd1lg3y3s2hp145phdapafl91zwq4kng1lq3dqzb9gwd745b") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.82.0 (c (n "swc_ecma_parser") (v "0.82.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.60.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.46.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.46.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.16.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "18sgsjqpdxb599b79fk18hgp4g47salwx4g1g3245n82h9iw1829") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.82.1 (c (n "swc_ecma_parser") (v "0.82.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.60.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.46.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.46.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.16.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0r8yjpbi9rrshhbdyjqdlf9qjhd9mqr0rjdvdd7c0dbivlv8pxh2") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.82.2 (c (n "swc_ecma_parser") (v "0.82.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.60.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.46.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.46.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.16.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0z5bc5mf71f0bpsgcxrabx68fjkwn7jkbmza4rifgls76nvzawh9") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.82.3 (c (n "swc_ecma_parser") (v "0.82.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.60.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.46.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.46.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.16.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0b599nsgpz2dl0s44j1cassxr9fdp58zsxa59x250bw47cq365gg") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.82.4 (c (n "swc_ecma_parser") (v "0.82.4") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.60.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.46.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.46.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.16.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1m9zn5gn7ydc9mpm2f3fwsqr1xryqzic58agki1bgyc2vw9x302x") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.82.5 (c (n "swc_ecma_parser") (v "0.82.5") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.60.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.46.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.46.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.16.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0q6l42bqdcgwsk4kfwyzzw1jj1wm922h2ahx7ljwf8psldm5d471") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.82.6 (c (n "swc_ecma_parser") (v "0.82.6") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.60.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.46.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.46.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.16.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "07g49k9l39z9ygf9sc8w7a3lhrghmbhb54r58a8kimar5kh5a14v") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.82.7 (c (n "swc_ecma_parser") (v "0.82.7") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.60.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.46.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.46.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.16.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0facrjjcna62pdl4c16mi11dljyiivnxxiydlkwqci87h66rrnqr") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.83.0 (c (n "swc_ecma_parser") (v "0.83.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.15.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.61.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.47.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.47.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.16.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1qpvld8zglvg12by239k7whmmsgx914i24vx0fv0qdlz1q2fjj20") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.84.0 (c (n "swc_ecma_parser") (v "0.84.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.16.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.62.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.48.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.48.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.17.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1x2ajar14q9xnpvjffx4pzybflwm4jay4kzfh794lz4s20g6lh2m") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.85.0 (c (n "swc_ecma_parser") (v "0.85.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.16.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.63.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.49.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.49.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.17.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1w8913s69hlgszp5109h0csyxifkfzhq5mssfi5mcxf4fzyvn756") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.86.0 (c (n "swc_ecma_parser") (v "0.86.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.16.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.64.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.50.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.50.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.17.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0ihyxzqgmy1926cjhbhplyj4wyiag0papfwf79xaf3j8hws2qskq") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.86.1 (c (n "swc_ecma_parser") (v "0.86.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.16.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.64.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.50.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.50.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.17.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1jyidx9ghfmqx6m9qppgvc4yp963r3i65v3f5dw32pj9nm9z6f6f") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.86.2 (c (n "swc_ecma_parser") (v "0.86.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.16.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.64.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.50.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.50.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.17.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "15jl0dmdlblv321w9khd4q4xvq3rlsa43kcwhs3l8srgdnljphdb") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.87.0 (c (n "swc_ecma_parser") (v "0.87.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.65.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "18fz174b5x43gix2acl79fyi2xqbv3xcynahzjgzv15bjnylqi9w") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.87.1 (c (n "swc_ecma_parser") (v "0.87.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.65.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1infmlgvxfdcwqzp5r45j99r1f2ydrh2nap9fjrsi1x2jdvwacph") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.88.0 (c (n "swc_ecma_parser") (v "0.88.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.65.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0qahl0gmivbl7h8vxvzjqslysbg0i79lwbrkcrw930bw0zm60c2c") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.88.1 (c (n "swc_ecma_parser") (v "0.88.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.65.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "00qp733yzp9xp9y0kdnlq8cfrp1mfk6m0vcsw5206pm21n0mc57g") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.88.2 (c (n "swc_ecma_parser") (v "0.88.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.65.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0xf21phf0k5l7mvi775bh8lvlp62kwia14x6qxabj7vzhgsiavh1") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.88.3 (c (n "swc_ecma_parser") (v "0.88.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.65.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.51.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0axhkg957sx7hzm67k3h4i2wxinwm92mwsdm4s9g5zcay29hrlxz") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.89.0 (c (n "swc_ecma_parser") (v "0.89.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.66.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.52.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.52.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0z538985hzrmbcf3fzihcpqlc3c2afa4iif387yz5bzc89qhlwsz") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.89.1 (c (n "swc_ecma_parser") (v "0.89.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.66.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.52.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.52.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1jg41w47ccrf619qzmm7n65rhk22mkpddv9l4yvb7i7dkmqgpxam") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.90.0 (c (n "swc_ecma_parser") (v "0.90.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.67.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.53.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.53.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1y8bsqyr1x00945xkhy49pn9ssdwn22r212yqh9j0qvnjfh570af") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.91.0 (c (n "swc_ecma_parser") (v "0.91.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1p808lbxqbsxaf055phvx86ibshfawb9rqcgjdcfvhwv60sq5zar") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.91.1 (c (n "swc_ecma_parser") (v "0.91.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "02w4yi0m685lb0fk1vqzr5n7597s9zd945qrndcmrhfhmxallxvl") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.91.2 (c (n "swc_ecma_parser") (v "0.91.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1clkx3s3y9avxmwcng59f2g340j3zdbqyxhznlj5ixyv26s4a5v3") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.91.3 (c (n "swc_ecma_parser") (v "0.91.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0qv2snwifqsc0qrhaxz04c4avr58j77ab4mhfzkqjgwp05bhrz44") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.91.4 (c (n "swc_ecma_parser") (v "0.91.4") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0i7640d23aacbq7i560m6d6ibniicpy9c55hchpkb0248ldhzmvk") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.91.5 (c (n "swc_ecma_parser") (v "0.91.5") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1f58w8n02pv4cysmgzjx0f54r9izkain0fx6vxh4l7fkdsn297a8") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.91.6 (c (n "swc_ecma_parser") (v "0.91.6") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1v5aldilkqf8dc60nc4c7y58l5fk2gqzfij30kfbf8qiasfv7div") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.91.7 (c (n "swc_ecma_parser") (v "0.91.7") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1fyd6h1psiqzgqy73phpgiilhx0b2hq1g29bvi8drwnvb61szyf6") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.91.8 (c (n "swc_ecma_parser") (v "0.91.8") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0ir63krw2f10zy4rs0v9grip3z13hvflyi5scabapzlzfl852yx1") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.91.9 (c (n "swc_ecma_parser") (v "0.91.9") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0d7nyr7f2npqihm45qhkmrifs9wiab49n9llsm1y0nnsvs9z473y") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.91.10 (c (n "swc_ecma_parser") (v "0.91.10") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1m32lbmx4a9khpsvklypsy5v7176rd1kdxdj7vxkyifh8z5bbb2d") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.91.11 (c (n "swc_ecma_parser") (v "0.91.11") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1mlypkw1yjkvk4nahr2n1y8wvg7a20vh9gybrbzngrm9cjmrkc2q") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.91.12 (c (n "swc_ecma_parser") (v "0.91.12") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "04wpqdzakphx60dkii91bv1fm9pyf1h5xjf7nqyz1pvz09gpf8xb") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.91.13 (c (n "swc_ecma_parser") (v "0.91.13") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.68.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.54.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0v9wvkxjsgdqy8gc44a78xc2b16fv1yz9d8f7536slxs9grc16s8") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.92.0 (c (n "swc_ecma_parser") (v "0.92.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "058q0dwvv8gawjr274a18dym48pir75v55arl6ng44a1yqaxdv00") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.92.1 (c (n "swc_ecma_parser") (v "0.92.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "11snxc3bxzkrfx4m24j8nwymiwdz8j80xs97mqk1k3swg2wihq58") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.92.2 (c (n "swc_ecma_parser") (v "0.92.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1fbf34qdf4hs3bvjykcrv8rsx3pwyxdayldk0c3jglwdy40q3w0v") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.92.3 (c (n "swc_ecma_parser") (v "0.92.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0k6nlmn6v665y2w9q0lcjaq5lfpq3xpci50vk6z0c148pfwqli7r") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.92.4 (c (n "swc_ecma_parser") (v "0.92.4") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0mphvy6pg1gh5vkqzh3p810i4lh8sr38nxs8jyns21grkix6509n") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.92.5 (c (n "swc_ecma_parser") (v "0.92.5") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "11i143sb4g7llvnfkwkpjgqlqa4cf1jgl6c0jb7c35w9sgcawl8j") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.92.6 (c (n "swc_ecma_parser") (v "0.92.6") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1mg22rb18bl0fp7pzqzfc5l9y5rwcg2wl6lbv6wj2bmwx78j9491") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.92.7 (c (n "swc_ecma_parser") (v "0.92.7") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^5.2.2") (f (quote ("radix"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0a0sj2rmivah35yq0nbjl9b7slkcgk3k330y2w9wajjhwag54gnm") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.92.8 (c (n "swc_ecma_parser") (v "0.92.8") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.69.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.55.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1p5cr4g7c0a1n1sqa5qjnjwdmgf3879s342ii9y8nzs0sxx3dppn") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.93.0 (c (n "swc_ecma_parser") (v "0.93.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.70.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.56.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.56.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "10nkbaz78cpf713nyzhla5z9j7nnh3vdzcq3zpjwkxy5s2zlxk3b") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.94.0 (c (n "swc_ecma_parser") (v "0.94.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.70.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.56.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.56.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1k8pvnz13fpr5395hfl543ns2pg87d7i8ykwbpj7sq8naqwf7bqd") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.94.1 (c (n "swc_ecma_parser") (v "0.94.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.70.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.56.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.56.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "13y2cbvnldzsvy0v7f3qmpary9lmifc71xd1dgwjifhbm24bgi0h") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.94.2 (c (n "swc_ecma_parser") (v "0.94.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.70.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.56.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.56.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1rw1qsrqy2j64dys73svcmijx8r1b18za8kq6hdvfci6qci65rr1") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.94.3 (c (n "swc_ecma_parser") (v "0.94.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.70.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.56.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.56.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "03svan92iq9xds8k2s1bw2083x6sw11dsa3xpa9s1rrswbcwb5md") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.95.0 (c (n "swc_ecma_parser") (v "0.95.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.71.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.57.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.57.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "15wa80flyn5x775yzlal9b0nflj5qjlrrkj7bhzkhvhd31l5458k") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.95.1 (c (n "swc_ecma_parser") (v "0.95.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.71.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.57.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.57.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1n1b6nm2znl5md3m96vyg0i6lindaxqx078hgsld1pbdfn6s3g3b") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.95.2 (c (n "swc_ecma_parser") (v "0.95.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.71.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.57.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.57.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0jv1apdjgf2svbzimiffzys27n67pgr99s17qqadqzrzp0n71653") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.95.3 (c (n "swc_ecma_parser") (v "0.95.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.71.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.57.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.57.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "09vr389dnrkgnispjsjfr0vlwmvd3ixva0dck2dk05kicykpdl9x") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.96.0 (c (n "swc_ecma_parser") (v "0.96.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.72.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.58.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.58.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1i6rbv0swlfgb9c9ms70h6kwlbkvf88gmg8ny8lzrmwsjyvm5wsd") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.96.1 (c (n "swc_ecma_parser") (v "0.96.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.72.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.58.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.58.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0qrcmhw3lnikg4n4wzh23sgifrvgjv1g3r5ifgv2vs9icwp0i0d0") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.97.0 (c (n "swc_ecma_parser") (v "0.97.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.59.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.59.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0w8g7gz853a4r6bfhyqn69f88q3l608kiwjvrscsbv2m1qix42py") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.97.1 (c (n "swc_ecma_parser") (v "0.97.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.59.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.59.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "01a89a9dlf0b040046wv3038bhcxi10chafg1phva7v1rg1v1mng") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.97.2 (c (n "swc_ecma_parser") (v "0.97.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.59.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.59.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0spmbphf5mpv37d9zcdf9zfb4iqs891ijdj8raiann1w9m2h9rl8") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.98.0 (c (n "swc_ecma_parser") (v "0.98.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.59.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.59.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0pxxgrllxcbw0z117df75wlzarwlr515dmla4wmjzzpayfiw9y2a") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.98.1 (c (n "swc_ecma_parser") (v "0.98.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.59.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.59.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "05f3v3dpjdffrnm38vg5fdhvxxvycisk8j9i1vb99jjzskkr2nz4") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.98.2 (c (n "swc_ecma_parser") (v "0.98.2") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.59.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.59.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0495hc9g2pf28wzlb6rxk3vcnvl3vvcsfb67arj4fyd0c0y0p5kw") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.98.3 (c (n "swc_ecma_parser") (v "0.98.3") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.59.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.59.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0p8di9zdkrjlv12jw0i2n0ihml9jdmjlzaqvri1az5hdm15kjgj3") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.98.4 (c (n "swc_ecma_parser") (v "0.98.4") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.73.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.59.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.59.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "10jdyaksxcjg23lv18fzsqn28z6k44v6p861i2pl9acbwipzyvn1") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.99.0 (c (n "swc_ecma_parser") (v "0.99.0") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.74.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.60.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.60.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1m5jksa73db0hp83c2mbw97kgiixszpsx2ajplp3ymal5387a9mj") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.99.1 (c (n "swc_ecma_parser") (v "0.99.1") (d (list (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.74.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.60.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.60.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0dg78b64839k17khqzahjawiwxnfy5295vx2zpvdqdvcp3wbkxvw") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.100.0 (c (n "swc_ecma_parser") (v "0.100.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.75.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.61.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.61.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1c7khv4gm11rbm5jm6s49mnm91zwpy4abbzy9f6ydidk2flb5f8v") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.100.1 (c (n "swc_ecma_parser") (v "0.100.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.75.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.61.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.61.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "18xphwc1pd2fn11gxz3b9ni6qi9yrycz5r4lcw5nmppq8mj1ybm3") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.100.2 (c (n "swc_ecma_parser") (v "0.100.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.75.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.61.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.61.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0x1rzvhn424aqy2xn6dagiyg7d5p4vc2fbw9sw637rz365q9c3c9") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.101.0 (c (n "swc_ecma_parser") (v "0.101.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1ak40j0qfr8rai96zkgbyblkqakxqhk9ca3nmzx5jr6jk8037j11") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.101.1 (c (n "swc_ecma_parser") (v "0.101.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1psiaqz9ks2i8cj3s37pmmddw6hcmjkcz095vgqpska9nryrvysg") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.101.2 (c (n "swc_ecma_parser") (v "0.101.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0ldh6gcpswfznp0ajj7qb1wbkmq5jhrjxj229w42qh51m7pnbrpw") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.102.0 (c (n "swc_ecma_parser") (v "0.102.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "18sxqw0qx5swi8ib7mfsgdfxwh0xvwd03dcwhb8ajgbd1p1wvyya") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.102.1 (c (n "swc_ecma_parser") (v "0.102.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1phlpdhg3ijciscsbzrnclj4kxnbib8cg1vdcblmhdnr3fp5q1bf") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.102.2 (c (n "swc_ecma_parser") (v "0.102.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1a6x2wazhwc4bc15dssljqpjxsh67dqwjr0h9dqbkjhysfvzgli9") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.102.3 (c (n "swc_ecma_parser") (v "0.102.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0l2dwnvyz4yqwi2jm5ydrvs5hzs67sp3azgyvawd884szc1g78n6") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.102.4 (c (n "swc_ecma_parser") (v "0.102.4") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0pm641i327fkzkcplibh10rjn489g3w7hmni5h643g3dg0pdm15g") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.102.5 (c (n "swc_ecma_parser") (v "0.102.5") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0yy01pzf1frh7mq6s3lv90fr3w2cm8swlwdkvp89kqw6r0zqgy1h") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.102.6 (c (n "swc_ecma_parser") (v "0.102.6") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0lvis699sjc1i4xqd79r120yiy3ysx12afl1l0k0911jbmigrs0x") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.102.7 (c (n "swc_ecma_parser") (v "0.102.7") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1dwdxpyydbfz2lm06lamnaylj7ymxgm2h3lax6l4aph1h83yscyy") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.102.8 (c (n "swc_ecma_parser") (v "0.102.8") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0hqxi2dx1k5rhja38sy3c1lpyzgkikvb64ynq5cks2rpgfjr4bnq") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.102.9 (c (n "swc_ecma_parser") (v "0.102.9") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "014wii72smsm80lib0hygky9gc8pp8hgb0acz6nkq44v0dczmfis") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.102.10 (c (n "swc_ecma_parser") (v "0.102.10") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1cqhxim516iq441z8p5iwj7m5jjzk3zqgmyr62fng4xzlxxc7ida") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.102.11 (c (n "swc_ecma_parser") (v "0.102.11") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0yp2bmpk0l9hrr6icq9jg0nkq0rpzfq39fp1ldg421p3q8xrwx8i") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.102.12 (c (n "swc_ecma_parser") (v "0.102.12") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0jjcsipqq7a8a7pxzj3qfhgpw185jympzhs78ax655fkvqlfl5l0") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.102.13 (c (n "swc_ecma_parser") (v "0.102.13") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.76.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.62.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0ifanbc3b63x525iwiqfpnsi8rr45lrdbaa01w8gzgfa4sp5qxwb") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.103.0 (c (n "swc_ecma_parser") (v "0.103.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.77.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.63.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.63.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0czm0yg23vakcxcrdj9f9d5iqi1hg5iapb6ya9s1gsdhgvkn011y") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.103.1 (c (n "swc_ecma_parser") (v "0.103.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.17.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.77.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.63.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.63.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.19.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0f385xlv2ps2wn28sz2m85gks97pxjqj3dksv8fgrli7q476gzd9") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.104.0 (c (n "swc_ecma_parser") (v "0.104.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.64.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.64.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0w9ng84svda837k4pdgpbqwpgnhir1f0an2ivkg16ly9xz37vfgg") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.104.1 (c (n "swc_ecma_parser") (v "0.104.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.64.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.64.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "unicode-id") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0xqgbl8iz5ijvxffm1f2pl084cjgwna63mlip5fjhq59ldnb45gz") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.104.2 (c (n "swc_ecma_parser") (v "0.104.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.64.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.64.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "09dv4kkrai4j6hzdkr472y3icy7y139a4z5c52cldc9fxf5a1zm5") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.105.0 (c (n "swc_ecma_parser") (v "0.105.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0gkwmh7jj92m8z9azibg7mnxkqdqlgndhv3afpzmnjkv5a180s9k") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.105.1 (c (n "swc_ecma_parser") (v "0.105.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "05n749xa2d8xiwmd8xib3yy6grx7cbwha1hxwa7dd07p50wz02mh") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.105.2 (c (n "swc_ecma_parser") (v "0.105.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1f2cw8k5qwrd5c6rknprfgl13d012i47jxxgqcw436zgsp61wwrv") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.105.3 (c (n "swc_ecma_parser") (v "0.105.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0jyz2fyv77g49f02kzff3sykprhqdwf6d06d21psrmhvf7nwmbwq") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.105.4 (c (n "swc_ecma_parser") (v "0.105.4") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0pn8x0apb33rpg9fycdj4yaq8vlfm2lambxdz5krz2jyckizybph") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.105.5 (c (n "swc_ecma_parser") (v "0.105.5") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1addc9r39x6bw8xwdw44ly4spbdi2if1b6ryy3gfqgbkd1csyld4") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.105.6 (c (n "swc_ecma_parser") (v "0.105.6") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0sdbhpwcjwnmkfcxmzw9bivji45v7bszvzmqpw2imxnss9k8ha1h") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.105.7 (c (n "swc_ecma_parser") (v "0.105.7") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.65.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1x3cbq8lrm2c5s68s4mr258c9pglx3acsfi4wwxaafq6agyyrbq2") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.106.0 (c (n "swc_ecma_parser") (v "0.106.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.19.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.80.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.66.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.66.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.21.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0kplnpkccwqzqsqpy0hdwk5gmx8z6vgzya02vzabrzj18ryc3bpf") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.107.0 (c (n "swc_ecma_parser") (v "0.107.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.19.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.80.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.66.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.66.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.21.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0wv9rvavimpndw390vph5xr385zzczxsvz2x6y47zqmlrbiz0hfh") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.108.0 (c (n "swc_ecma_parser") (v "0.108.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.20.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.81.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.67.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.67.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.22.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0wxi35jn9jibrvc6rsspnv6k9s0rplmn5410y6x0h6q0szr9isyb") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.108.1 (c (n "swc_ecma_parser") (v "0.108.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.20.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.81.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.67.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.67.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.22.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0h6z7n6ilhqvdxjfhj211l74xskak0892n2gi84s2i5n88xj0xgv") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.109.0 (c (n "swc_ecma_parser") (v "0.109.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.21.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.68.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.68.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.23.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0bninnar0qjp87rf8d0baghmnkbsaccqwvs0a0pn058krpvfq0ys") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.109.1 (c (n "swc_ecma_parser") (v "0.109.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.21.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.68.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.68.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.23.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0lgmcvx7ikqvb11ic1bvbibb5c3iwlvlf89c0i8akl0k99kcnqgn") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.109.2 (c (n "swc_ecma_parser") (v "0.109.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.21.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.68.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.68.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.23.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0iw99q6mxh0kfig70bdk434xasnp8l22h6l92yg0qrfyfl8f9zd1") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.110.0 (c (n "swc_ecma_parser") (v "0.110.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.22.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.83.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.69.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.69.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.24.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0np0ygnc70rwx1x1nicmziyc7zx7lz010iyn8bw8xxdr4c1d58ra") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.111.0 (c (n "swc_ecma_parser") (v "0.111.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.23.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.84.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.70.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.70.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.25.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1am7gry5h5kqxfqdd7ap3s4hlf6pamvk7sfzlm8rxib9p7jnc5yc") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.112.0 (c (n "swc_ecma_parser") (v "0.112.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.24.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.71.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.71.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.26.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1f9a1qyj06ndq408qpsw9bcyrmsh3w0migkc1xikcpjj2f61lgaz") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.112.1 (c (n "swc_ecma_parser") (v "0.112.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.24.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.71.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.71.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.26.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "163zxbjkilfha1zhm5cf0irzrifnqsnpljhnmy3f3vb98c40iwqs") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.112.2 (c (n "swc_ecma_parser") (v "0.112.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.24.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.71.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.71.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.26.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "15hvq6r5kkihb8b2ghma6ynz5bq1qyv52iqqqdlgmcl259cvblgc") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.113.0 (c (n "swc_ecma_parser") (v "0.113.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.24.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.86.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.72.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.72.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.26.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "036zwzirs5qyw40hc5qh76qvcvdkz2h7nxq2vyq16cnylly80hxp") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.114.0 (c (n "swc_ecma_parser") (v "0.114.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.24.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.87.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.73.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.73.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.26.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0f4ml1k7pncyi0j4lw0wa03r14r4g0p95gy3z9h3z85j9lrj3p4i") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.115.0 (c (n "swc_ecma_parser") (v "0.115.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.3.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.25.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.88.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.74.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.74.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.27.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0zbqd3ixb2psbinc4bsm0i8jcf6yv33jxxhb95xmjm7vfll8rs0v") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.115.1 (c (n "swc_ecma_parser") (v "0.115.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.3.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.25.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.88.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.74.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.74.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.27.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1mylngkmij1ballg8d53jf2kgcvvk5ipwn0x4sd5m0gp4hyq6nii") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.116.0 (c (n "swc_ecma_parser") (v "0.116.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.3.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.26.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.89.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.75.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.75.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.28.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1sylilwkha36xkmg9np06rgnnzc881rzsf5vffn3amps83h0nx0j") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.117.0 (c (n "swc_ecma_parser") (v "0.117.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.29.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "09fjw84czg4ccnv3pxkqf7bc58scwzyyypgagpkbxj5v8m07d1w4") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.117.1 (c (n "swc_ecma_parser") (v "0.117.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.29.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0bm7h2zg7h15wzi2fd5j7aazkfh0kqwh81p8an2qfsw96584vbyr") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.117.2 (c (n "swc_ecma_parser") (v "0.117.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.29.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0c3qhss4b99vpz1dzlalz2iwq6z50jimgqzl7gds465wjmwhla1s") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.117.3 (c (n "swc_ecma_parser") (v "0.117.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.4") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.4") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.4") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.29.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "003a6kskh5gakc61f7d1mna27kq3177amhb3x86gq7690db8smik") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.117.4 (c (n "swc_ecma_parser") (v "0.117.4") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.5") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.5") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "06rgyy2yd3i0nqic8in4zd5jmk2g4lk49jcrjp288kvz6rjfza5q") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.117.5 (c (n "swc_ecma_parser") (v "0.117.5") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.7") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1sqnmayymk8drmk6wczyq503dwqfyiknylaf13bqps10f20nlvvs") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.117.6 (c (n "swc_ecma_parser") (v "0.117.6") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.7") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "00ddzi2j4zxx267p22ljgh3px51hc6n9kb8r8k0p5fq0h8ifz9s6") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.117.7 (c (n "swc_ecma_parser") (v "0.117.7") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.7") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1m01p1r09lfgp0sm1d91wm2aijkknr7xgwpligx8pg0ljnlzr3yq") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.118.0 (c (n "swc_ecma_parser") (v "0.118.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.7") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0c2p4rragbdsxvxrv8clj4nqbswkydry0z9kh6f68pvmvbc59zlr") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.118.1 (c (n "swc_ecma_parser") (v "0.118.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0g5acvj319zrshhgqz1mfxi9km3ijdy4v12b2mb9vy5090bvl28n") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.118.2 (c (n "swc_ecma_parser") (v "0.118.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1xsdxj47mwjizh1qfxv87cc4s4npbl64wfq3gn9isnap0xpydm3h") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.118.3 (c (n "swc_ecma_parser") (v "0.118.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0z6igk0c9l0775b52p28jf8fv6p8y1qayi08lhsya75l5v4pja9s") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.118.4 (c (n "swc_ecma_parser") (v "0.118.4") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.15") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1wr28pzlkij8xil2i112891hivl1l2m2vygdl7yc9z2xf2xx5742") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.118.5 (c (n "swc_ecma_parser") (v "0.118.5") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.15") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0xs3b0kbmx2kancgkggp6bq47aqqsqb8zvha7nlxakr8scjbynfs") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.118.6 (c (n "swc_ecma_parser") (v "0.118.6") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.15") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1sxs93myvnrb52iib9isww1sx0f5rjlh8gnz08gahqaa4930bvw6") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.118.7 (c (n "swc_ecma_parser") (v "0.118.7") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.17") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.7") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.7") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1ryak3jr1g8yy9zg0dr4n37m6lcam97hzfhkcbsasb2a50y9d4xr") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.118.8 (c (n "swc_ecma_parser") (v "0.118.8") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.14") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.18") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.8") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.8") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.29.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "04x24x54v6pa8cg9sjhqmcabw4jksbzdvrg0k97p43ds4ylqk8nc") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.118.9 (c (n "swc_ecma_parser") (v "0.118.9") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.19") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.9") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.9") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.29.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1db3867xyw9x8vc178qln55mn464wq9vhva513n5yzrnsrwg356r") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.118.10 (c (n "swc_ecma_parser") (v "0.118.10") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_common") (r "^0.27.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.20") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.10") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.10") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.29.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "12fr17krb3y6rg3wnab2v26j7v1yd8l1qbkynbfdpn8cix5gm1l3") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.119.0 (c (n "swc_ecma_parser") (v "0.119.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.11") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.30.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1gak1kk80bwdm7xihx20qq54iqia5cc9hjkawsqjq4q60b9xzr00") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.119.1 (c (n "swc_ecma_parser") (v "0.119.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.12") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.30.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "06y7maq5x401ar0mpvb4hanix7p05gr06l2f0ncarksdgmbn1grx") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.119.2 (c (n "swc_ecma_parser") (v "0.119.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.12") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.30.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0c8li7hwjzqyf4gb3mad5kf85kj3lbjpyks71xpjy855y1l3iain") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.119.3 (c (n "swc_ecma_parser") (v "0.119.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.12") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.30.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "07w7k5rgp3s9czirhs98k9n24hwpda11790g1xrvpcn013j71460") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.119.4 (c (n "swc_ecma_parser") (v "0.119.4") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.13") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.30.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "131p1qgp2brmhhzzsspkhykqgnjj47bzzmclb9wdj4b7qajxh5y7") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.119.5 (c (n "swc_ecma_parser") (v "0.119.5") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.13") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.30.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "09y5fdgl3wqfm6vqmbyxiiwwcqgafnm1gw1hqhlhr2xh89z2cmqh") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.119.6 (c (n "swc_ecma_parser") (v "0.119.6") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.13") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.30.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1bxxxzvyp7gy494m2w5q4s7zkzybza6knrdhdmikldx4nwmdhzyw") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.119.7 (c (n "swc_ecma_parser") (v "0.119.7") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.30.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1fvds2rd9cflqhwjmgzg77h98rrd0dc5s9vv8773s410swdk2lab") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.119.8 (c (n "swc_ecma_parser") (v "0.119.8") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.4") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.4") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.30.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "019zc9cr24n5bilpcqk61vklryk55wvr9pyznb7zdmrxr27cc5lj") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.119.9 (c (n "swc_ecma_parser") (v "0.119.9") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.5") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.5") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.30.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0dm7j7df2qbvifypa9abdwkkxvbppzzdw0lx8xpv0kdzz3b1qgdv") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.119.10 (c (n "swc_ecma_parser") (v "0.119.10") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.6") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.6") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.30.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0qxh4xisdxxb447q46vnici55qm2asliprcxq3dk4nkh2zrg1rh6") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.119.11 (c (n "swc_ecma_parser") (v "0.119.11") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.7") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.7") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.7") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.30.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1g875d15wbsis66ahmb19jv1gjfyvr6jkgm56dygvrfd14h380dh") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.119.12 (c (n "swc_ecma_parser") (v "0.119.12") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.8") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.8") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.30.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1w40q68awk383p9ksmxa1idgjgxnfk5y9a4vv1bwnjc00g8p567r") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.120.0 (c (n "swc_ecma_parser") (v "0.120.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.15") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.78.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.78.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.30.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1ckaga3r4vmd31ic3sp5f2fc23nr9ms9imjr36iw7q0vv1566dwp") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.120.1 (c (n "swc_ecma_parser") (v "0.120.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.16") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.92.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.78.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.78.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.30.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1y6qy5h1rmsy036kxc2xx1h8bjpcxvn8jj6ii7vipdfinxph0h6i") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.121.0 (c (n "swc_ecma_parser") (v "0.121.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.28.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.93.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.79.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.79.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.30.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0rb6m6941d5f3br50drfrm3p8g5xzj0cj0dqzpkscmra342dasdn") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.0 (c (n "swc_ecma_parser") (v "0.122.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.31.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0w1di84pp3gk0k1g1m8nirjj14gb4m34h9f607c22a55m7xzmiy1") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.1 (c (n "swc_ecma_parser") (v "0.122.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.31.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1gw8mxl1261jv6mq2z3zpvmj5n6zk2nsskw8vj1rnddnd6ix3a8g") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.2 (c (n "swc_ecma_parser") (v "0.122.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.31.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "05kmc450axqckm5cl8cnd1581gbzd2c3z2d7m2zgciz588cj4cfb") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.3 (c (n "swc_ecma_parser") (v "0.122.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.31.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1cyvzkgq10n978q8rfnkmk0yryf4y811fipfg9v51ndmbzj1x0ql") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.4 (c (n "swc_ecma_parser") (v "0.122.4") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.31.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0vfbdslv1j3b109zqc5rsix6whpd5322mhylmcxia3d8g7kqrjmj") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.5 (c (n "swc_ecma_parser") (v "0.122.5") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.4") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.4") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.31.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1da7j81sy1calsh7km9ay19bz7qcffr4a4qnblji95f3nc9hl13x") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.6 (c (n "swc_ecma_parser") (v "0.122.6") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.5") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.5") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.31.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "048my9f1bxjgq66msl65h3ls206ywab5f6x5yqsx7wb07wlpsxk4") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.7 (c (n "swc_ecma_parser") (v "0.122.7") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.6") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.6") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.31.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "09p1lcbqm5jzs8isz55yfa2rl4k32p5c5x6y5h3ymc891506351j") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.8 (c (n "swc_ecma_parser") (v "0.122.8") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.7") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.7") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.31.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0q2sbl4s5w02h6y7gsiaxisl0hxz08jh4kimldwl0yplzpfj1frb") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.9 (c (n "swc_ecma_parser") (v "0.122.9") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.8") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.8") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.31.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1hj7w7sbv1bssp421jbslr5xjiv8fp38x0lpd1k50grpha0v8kaj") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.10 (c (n "swc_ecma_parser") (v "0.122.10") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.19") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.9") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.9") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.31.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1rjddkl1k8f4hcw5hkqrnwqicwblsaqzb5931vidc0w842k1h0v4") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.11 (c (n "swc_ecma_parser") (v "0.122.11") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.20") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.7") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.10") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.10") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.31.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1d2wnz7d3gfqbclbgp8867q387bv0kswq5qizgmrasxv1inkmr5m") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.12 (c (n "swc_ecma_parser") (v "0.122.12") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1jl2yl6hg4airgqnyag6f729832l2m272lsjffdr2m7z16nk7scg") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.13 (c (n "swc_ecma_parser") (v "0.122.13") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1v0zpn3g4p65b0l8i0wd81xhzrpjd3k2j0w811qqfpx6srpyyjjj") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.14 (c (n "swc_ecma_parser") (v "0.122.14") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.22") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.12") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.12") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.31.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0f2kxn7zaz8c72d8s1g6dp7mirk8d9scf5wpd7f8vh84szxxba3c") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.15 (c (n "swc_ecma_parser") (v "0.122.15") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.13") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.13") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.0") (d #t) (k 2)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "128rgxbv0f9rnjx3kmy7nm93m0krzmib6bsgbi2a3354y9zs518m") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.16 (c (n "swc_ecma_parser") (v "0.122.16") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.13") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.13") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.6") (d #t) (k 2)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "15lplmnmdxdliygc7f3g9pxa650dl0z4z508lxmavavfm3j96grr") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.17 (c (n "swc_ecma_parser") (v "0.122.17") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.13") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.13") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.7") (d #t) (k 2)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1fwn7h03sdhyys5zlzf3mfncdw1n5kkv7rw5qhq4bzlhmn3kwi0l") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.18 (c (n "swc_ecma_parser") (v "0.122.18") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.14") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.14") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.7") (d #t) (k 2)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1hhq0hfqz3xp61jbv49svphq03vc9scr0f2bz9fnil36amf7jgaq") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.19 (c (n "swc_ecma_parser") (v "0.122.19") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.14") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.14") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.7") (d #t) (k 2)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1wsq9x1vr40wxfbhnrq5yylksr43lrb68zg9smxs8gh0217hdv4c") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.20 (c (n "swc_ecma_parser") (v "0.122.20") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.14") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.14") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1b1bcgm9fm6b5f8qmyi8jccf7xs5nr80jcgb9pg9ql2f7r89zq46") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.21 (c (n "swc_ecma_parser") (v "0.122.21") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.11") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.15") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.15") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.15") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1j429dqs0h4rixcsfns22vfa64sdr1cvq43x2b2faq1w056vqnmv") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.22 (c (n "swc_ecma_parser") (v "0.122.22") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.16") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.16") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.16") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0fdxd4k5k5cv5zzybd6jfflsiib5aljzkqhlsizd1410mh3ik2pl") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.23 (c (n "swc_ecma_parser") (v "0.122.23") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1sv8k055l2ldis8yw9ds8cz2f723rsyzalq3cmvh5wz7scbaawk4") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.24 (c (n "swc_ecma_parser") (v "0.122.24") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1b16xfxdvf6pwkz2w4vbwwmnhcd180kaiznxihq9mzzaq95d824f") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.25 (c (n "swc_ecma_parser") (v "0.122.25") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.18") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.18") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.18") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0q81l665awarjy9hah700qxj84f5nnl5m46qmnym82inra8sgrc0") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.26 (c (n "swc_ecma_parser") (v "0.122.26") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "156ajys3ppw7khzzf0sdqvbyx6ady8zbql11azkjs49qkz6j1b0b") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.27 (c (n "swc_ecma_parser") (v "0.122.27") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0hnp24qv7fy2i6nf0hr5jlz33i6hp24wljzfwq39sy6xfklmrcx0") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.28 (c (n "swc_ecma_parser") (v "0.122.28") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.20") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.20") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.20") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "07bnynz8b57ajmq8rh03wffgid7fs4614r58aaiyi5hzfz25kr4a") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.29 (c (n "swc_ecma_parser") (v "0.122.29") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.20") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.20") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.20") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1slxd4f3mbhhjx7fwsrmrvi31np5as784q5ad9l6jbqj70csv84y") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.30 (c (n "swc_ecma_parser") (v "0.122.30") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.21") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.21") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.21") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1250ksa0m956yj37z9g6f111hqnjcnppjdqmmwnybrpm1n4za2n5") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.31 (c (n "swc_ecma_parser") (v "0.122.31") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.21") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.21") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.21") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1x1l8ps2w7ikknxf6f33flm1dhp9mdx6inr40284x8afjrm6wrzj") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.122.32 (c (n "swc_ecma_parser") (v "0.122.32") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.21") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.21") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.21") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1whc4pd5qfhbj4dv68k1c703ias071afar50329h5fqp12zgv5ix") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.123.0 (c (n "swc_ecma_parser") (v "0.123.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1nsvi2d81ys3lxv3jy0li3qkm4gpy1zazvjf8157r6mz31kxx04y") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.123.1 (c (n "swc_ecma_parser") (v "0.123.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0ihr24jp0anziifj8xwydby18jsnj0b18m8z34s69c2i8ll94rhf") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.123.2 (c (n "swc_ecma_parser") (v "0.123.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.17") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.18") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1ry1xbjpyhsfq0wn0wpcg5rqlkrlj7bikjdm5jhb4xfviqk4i6dz") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.123.3 (c (n "swc_ecma_parser") (v "0.123.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "062b2jmsa3d2kg17r7js4r9yx4wlm01js2wm73nqh122lw55mhj4") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.123.4 (c (n "swc_ecma_parser") (v "0.123.4") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1dkap6s09074hc2flv3yv9h28m0x5ql1l2vwsfkwzkc8xb3mzwa6") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.123.5 (c (n "swc_ecma_parser") (v "0.123.5") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0z8lvdbf2yypd32ljc7wvphzi3v0n9qxzz0rpwa1z9ms35bg5q9n") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.123.6 (c (n "swc_ecma_parser") (v "0.123.6") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0gvs8zfrz9sp66a0sr0r3a2g87p4ln4r2rvbh54kkiwrmzj86l5m") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.123.7 (c (n "swc_ecma_parser") (v "0.123.7") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.26") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.4") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.4") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1w61mydnksqcqc928pa7y7x2rk393pw27dj54w8c1pzwmiy9aa7i") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.123.8 (c (n "swc_ecma_parser") (v "0.123.8") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.27") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.21") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.5") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.5") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.22") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0x8rkkikcv0frzcgkhsr1f7d31k89n2fa2dyxyphnz2ckz5rfk9k") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.123.9 (c (n "swc_ecma_parser") (v "0.123.9") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.28") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.22") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.6") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.6") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.23") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0c83g09d0x14cd0dsmm985amjpzp3s6ayn35vkns61xay2q33dv0") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.123.10 (c (n "swc_ecma_parser") (v "0.123.10") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.29") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.7") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.7") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0dil20jskikm4n5czs751vh3y7l07ykb2fva0c6rqjli8d5ig1im") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.123.11 (c (n "swc_ecma_parser") (v "0.123.11") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.29") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.23") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.7") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.7") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.25") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1jqww4g39y69ifg37q40w330pfal4r5jx3m7h6wmzp7y4258wsys") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.123.12 (c (n "swc_ecma_parser") (v "0.123.12") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.31") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.24") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.8") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.8") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.26") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "103fgbnpgsjqqla8qsbzl4dg1dwi10fmjk1mi02vwxf3si7zcvcp") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.123.13 (c (n "swc_ecma_parser") (v "0.123.13") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.25") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.9") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.9") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.27") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0j19xr0xqs0p6rb49qm4bg8csqb1p1pnx3a9fwz3vkfb5mwmy8i2") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.123.14 (c (n "swc_ecma_parser") (v "0.123.14") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.25") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.9") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.9") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.27") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1cpam3pv28sr25y53xmry8yiwc9z6nm25na0g85qjvjbhdy9jyna") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.123.15 (c (n "swc_ecma_parser") (v "0.123.15") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.26") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.10") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.10") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.28") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "15ylpk3lvx5i5n0yizwjhg18jjpvydyx659lb245saic0n3zyy09") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.123.16 (c (n "swc_ecma_parser") (v "0.123.16") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.11") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.11") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0bbhgi9j6is7mnkkxakh5ri389q98brd38kid3r1sa23xs7i934j") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.124.0 (c (n "swc_ecma_parser") (v "0.124.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0i50cgnl649454nh68x2khcpks360n67frl76mjzr9zsdvq554dd") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.124.1 (c (n "swc_ecma_parser") (v "0.124.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0z4wha3ipp20dfr8smlazxgbpwsllaza9i6cicrzziasaf2scw8d") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.124.2 (c (n "swc_ecma_parser") (v "0.124.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1jj1kd3jq1h1rfyhh3h6qmgfprn879n6m5lxw6l448md8javiihy") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.124.3 (c (n "swc_ecma_parser") (v "0.124.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.28") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.30") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1gqax9vk0l0ymrgkxxif4rzj5i1vr2q05xpb8h1sxbw665hn2pl5") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.124.4 (c (n "swc_ecma_parser") (v "0.124.4") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.28") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.30") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "10kh1vcgb3vjqi0sgc29kc16wajfigwayb1q0pgzjzg4iyjy4svx") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.124.5 (c (n "swc_ecma_parser") (v "0.124.5") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1hcdym13lp5xhm139lsl29rf840cs9ygrgp3d24qmbgimf78hxcy") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.124.6 (c (n "swc_ecma_parser") (v "0.124.6") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "06cjldxlhd4g8azj42wn8y8m3vavmm1a8mbi6hbwih5livr8ahng") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.124.7 (c (n "swc_ecma_parser") (v "0.124.7") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1virxjmyaxlas3ddrirysjhdh728rdx9hihh90rsrfvs6amvni5s") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.124.8 (c (n "swc_ecma_parser") (v "0.124.8") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.35") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.30") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.4") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.4") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.32") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "044nc0k67xsbyysckf29dlhrn4y3vbijmsp35fic7rcwwn7jy7r9") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.124.9 (c (n "swc_ecma_parser") (v "0.124.9") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.36") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.31") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.5") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.5") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.33") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0sf0lhakp6f07kbrnpfw24iy7r82sq3ikl6lgpx1ycbcbvi1shxx") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.124.10 (c (n "swc_ecma_parser") (v "0.124.10") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.36") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.31") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.6") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.6") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.33") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1rrq5s3ck1kajffv9azbgzs42baafji6knrli6nhz166wabpy9s7") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.124.11 (c (n "swc_ecma_parser") (v "0.124.11") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.37") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.32") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.7") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.7") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.34") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1lk123yli1jvq7xsvlikf79jv1z510gjbla26v85688lfsx5rz8w") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.124.12 (c (n "swc_ecma_parser") (v "0.124.12") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.37") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.32") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.7") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.7") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.34") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0v3bbm27q0rrhwx293lk9f1838jr8h0jnk9nvrwx5gyzndrg9cw9") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.125.0 (c (n "swc_ecma_parser") (v "0.125.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.37") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.32") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.97.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.83.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.83.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.34") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "07sfjw55hgnavlfq4invf8iw99irsbnqzm3nhk8xyr4lnk8xnp69") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.126.0 (c (n "swc_ecma_parser") (v "0.126.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.33") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.35") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0kgzwqcznp9dhxm8fs0xbiw48q22mgs37k70j0fphd5790i4wsmr") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.127.0 (c (n "swc_ecma_parser") (v "0.127.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.33") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.35") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1ygmq04kqkvfzgspd1zhmy4frrcl689n5437f3384lsil5cdnx9q") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.128.0 (c (n "swc_ecma_parser") (v "0.128.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.33") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.35") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "131l77s5axsj3pc5ikpphal5sqsb7w5v16l1qaagq9slqrask8sf") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.128.1 (c (n "swc_ecma_parser") (v "0.128.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.33") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.35") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1zh1kqn24hcaa3iq1lk3sxd91i40ca5q93n6awclydxzn6xb00hy") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.128.2 (c (n "swc_ecma_parser") (v "0.128.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.34") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.36") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1cbq4hrc3mgpys9pcygdzq2zvxj9cygfa7dlz9b96iwdiyh76igq") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.128.3 (c (n "swc_ecma_parser") (v "0.128.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.35") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.37") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0b98yljjb27ic3mj5ls1nimpnn0m4zqaiviw0acb56z1qwz2xy1g") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.128.4 (c (n "swc_ecma_parser") (v "0.128.4") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.35") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.37") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1dycbgkg7k7kk6n87dg75d85bbyvcbhslb04p52icmn5ykilkqrm") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.129.0 (c (n "swc_ecma_parser") (v "0.129.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.35") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.37") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "06qynakcsm36znns72haj6gdqihj1cg3fzxyjnvkfc03xprm17by") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.129.1 (c (n "swc_ecma_parser") (v "0.129.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.36") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.38") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "08x1ddmwkylvz82xy870hb8a4s8y69g39a2a6sb1lg2bi0fz5sf4") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.129.2 (c (n "swc_ecma_parser") (v "0.129.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.36") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.38") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "04lq5rykc4mhsa78sjgay3cnycr4w371jnnd3panjnfrh8fsz55a") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.129.3 (c (n "swc_ecma_parser") (v "0.129.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "126b4clnpx3mjpnzbf97pphj19vsicsgcpbqz0m50i328zbmnhpy") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.129.4 (c (n "swc_ecma_parser") (v "0.129.4") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1hcrmagf25xa5dav4qns5iqyxf1vsi9pvzql40cnk060gbz1bdsn") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.129.5 (c (n "swc_ecma_parser") (v "0.129.5") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1cp5d2j2n9vbdrjmwkh6gb0a5raj0az4nzlk5h97kbxakcyiffr6") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.130.0 (c (n "swc_ecma_parser") (v "0.130.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1m11qhp3fzj5mbs8k4c82divaya5axk5dlv963k5kh9wg4g5yvyb") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.130.1 (c (n "swc_ecma_parser") (v "0.130.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0ssh375jlp55a6hsm2g81kzl81jxal955m980yfffjlzvk07d4v4") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.130.2 (c (n "swc_ecma_parser") (v "0.130.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1apzrvkc56crnw60y5gcq8hl3hm2kyn260s4vrn43i3ixfm3a904") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.130.3 (c (n "swc_ecma_parser") (v "0.130.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "10i47cbj56kfpmhhlgq495y4lhff8gggbjdqffapfzxr18llkr5c") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.130.4 (c (n "swc_ecma_parser") (v "0.130.4") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "07fkcw6h29wlvdcy4f3pi4jq6rpl4kkq55dkfa8ryycnzlv5s6hy") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.130.5 (c (n "swc_ecma_parser") (v "0.130.5") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1l37anhblaa7h0v0m6657lqmx8067rzp1jgrsd4na08bzva3igry") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.130.6 (c (n "swc_ecma_parser") (v "0.130.6") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1fl6mz47pm35a1b6qgnkxhimsh5lxl7k96m86pxndy25bsk395wx") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.130.7 (c (n "swc_ecma_parser") (v "0.130.7") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.4") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.4") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0ar8rp79hyx9lcjj9np1w4650kk5xw2vs1nwsa3aal8mjhxlv6mp") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.130.8 (c (n "swc_ecma_parser") (v "0.130.8") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.1") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.38") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.5") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.5") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.41") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "03wh4kn8kkm50n4bppahzzfn0si9mv72acfzlzqac922wli825mp") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.130.9 (c (n "swc_ecma_parser") (v "0.130.9") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "enum_kind") (r "^0.2.2") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.39") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.6") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.6") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.42") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "010qf7k13b9b8fb6fmh5lsvyf1g4p9xrgf136ha91limlj9f1w5f") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.130.10 (c (n "swc_ecma_parser") (v "0.130.10") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.39") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.6") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.6") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.42") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1cvyfv808k4pzmz73fr508zyzmn206k6r46bq1m8anannklkjf6i") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.131.0 (c (n "swc_ecma_parser") (v "0.131.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.29.40") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.101.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.101.0") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.87.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.87.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.31.43") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "080ml37nwnbs6jz3m2in2970jvwkh5qz61lsrr5v02sy2ckgljgk") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.132.0 (c (n "swc_ecma_parser") (v "0.132.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.0") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.88.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.32.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1c3s0wja3b175p2jhwk6f5ch5a7dd8si0xhr6nzjck1vqmyqmqg1") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.132.1 (c (n "swc_ecma_parser") (v "0.132.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.40") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.1") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.88.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.32.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0655xyig5ijfvmbkajxm3g9a7nvj2qsl9fpjg025k52zb8flyw2i") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.132.2 (c (n "swc_ecma_parser") (v "0.132.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.41") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.2") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.88.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.32.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "17ix3f8h5hxg6yf0331skqkv6myrwpl1k243nk47rjb5kahxp6jq") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.132.3 (c (n "swc_ecma_parser") (v "0.132.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.42") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.3") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.88.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.32.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1h39fwrrgs3sljahqly65x7hqyjbfy1g60srabg0d3fr1qwsx50y") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.132.4 (c (n "swc_ecma_parser") (v "0.132.4") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.4") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.88.4") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.4") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.32.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "08a1aqgp8bwhal3zhzxdyv4h9fp0ygbycx4s8inyzhlii48pd08w") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.132.5 (c (n "swc_ecma_parser") (v "0.132.5") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.4") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.88.4") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.4") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.32.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0mxmzhypj41kfj7yymmjigqlw1zzg8xhpk8wp0h64ng3cm0n520i") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.132.6 (c (n "swc_ecma_parser") (v "0.132.6") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_common") (r "^0.30.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.5") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.88.5") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.5") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.32.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "13m3n94q14fihxc018ls4z6w7cvkmc33885k3zihzixkzjg41f5r") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.133.0 (c (n "swc_ecma_parser") (v "0.133.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.89.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "15shvhdyhbaf2qx3z5m2g7jc3qarsbhma86dyp87f87x0f13v7nf") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.133.1 (c (n "swc_ecma_parser") (v "0.133.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.89.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "11g09mcg0vrm1p8bxh4irv63g509m42mys9xfp76rvs8a6hn0kfv") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.133.2 (c (n "swc_ecma_parser") (v "0.133.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.89.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "17gi28qlxhy1vcivm1nh4ynqfzcw2cwcv1wns3x4qnl9fzadycc4") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.133.3 (c (n "swc_ecma_parser") (v "0.133.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.89.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1fxvgn9cxi9x7spfjvpmxrc5rs85zrcm8hsg0rsini263n9xq35x") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.133.4 (c (n "swc_ecma_parser") (v "0.133.4") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.1") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.89.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1njdnglssnqydvpvb10i6xig3rym4psk5jr65887fy86r3i6yrv7") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.133.5 (c (n "swc_ecma_parser") (v "0.133.5") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.2") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.89.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0xvqfa9r617i3yzscqyxd2jfzr16ddn7lyvdplqhk5sq23sqiwzf") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.133.6 (c (n "swc_ecma_parser") (v "0.133.6") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.3") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.89.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0qjwpdss4liw2jgxw0r5dvl0d9hnm8hddymb65izifwpg75mvigv") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.133.7 (c (n "swc_ecma_parser") (v "0.133.7") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.3") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.89.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0lj2ydxkng2a2290zwzdf1x3s3plldj9ypravrla6ikad76qb0fq") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.133.8 (c (n "swc_ecma_parser") (v "0.133.8") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.89.4") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0xc5lm30l7vmrqqxpfbxvbdw0f0isc3csgf42bdl7lg8wm568hak") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.133.9 (c (n "swc_ecma_parser") (v "0.133.9") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.89.4") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1fd0saing6k688whjgzzhsn4qi6diwd5ngi49ymdgh4f71y7pq61") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.133.10 (c (n "swc_ecma_parser") (v "0.133.10") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.89.4") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "02gha8ylyf50xvyvnn9aw6f0b606ihlb1hyyhbc4h1f9znl29rwc") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.133.11 (c (n "swc_ecma_parser") (v "0.133.11") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.5") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.89.5") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.5") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "04bp09jcvdvmqzmjxabgkhxq178zvg4hhgncl4wj72fvkm74kj31") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.133.12 (c (n "swc_ecma_parser") (v "0.133.12") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.5") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.89.5") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.5") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1nhcg1md3laj7m4lmj9y7sd6xblnp3n6jw5biwa4s3jbn3dgda9g") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.133.13 (c (n "swc_ecma_parser") (v "0.133.13") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.4") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.6") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.89.6") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.6") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1kffnjbqaih4860kyjw62r4zzkazpbnb0if0pw1b3qpydm769ys1") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.133.14 (c (n "swc_ecma_parser") (v "0.133.14") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.4") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.7") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.7") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.89.7") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.7") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1rf8acz2s1d1zm5vcan5clqlx1qagqsfzf5va34yr14l08jf0r8j") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.134.0 (c (n "swc_ecma_parser") (v "0.134.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.7") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.0") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.90.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0h0lr2mrrxfakbkxmgksrqkzgpbhjzvimamaf4qxfgkp07nz4yap") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.134.1 (c (n "swc_ecma_parser") (v "0.134.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.1") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.90.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1p5pgzqpglig225spyvbliyvm8q44lipgpnxsh6a49xvw5bb8zij") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.134.2 (c (n "swc_ecma_parser") (v "0.134.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.1") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.90.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "103n14x51clpqmrmmbl5mwwxvzkwahjmzx73cmxd8fhbqra3n7zi") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.134.3 (c (n "swc_ecma_parser") (v "0.134.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.2") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.90.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "14hqcjccpf8l6jbv3ykgwwwc73pzi5zc6xby76p05qhcp9igczrh") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.134.4 (c (n "swc_ecma_parser") (v "0.134.4") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.90.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1x3ql0cfngn26vispkh9w1v7cgc8x4w72cjhm3kg2qhgp4vxjnaj") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.134.5 (c (n "swc_ecma_parser") (v "0.134.5") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.90.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1zq18zr38prw66qyz8v7lpv7cknnws2hk64ymg2ww3b2zia9p1lb") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.134.6 (c (n "swc_ecma_parser") (v "0.134.6") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.90.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "17nx8qb7m5vyl1rhxdaks4im53190szqqqj13k5vzxmggif3kili") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.134.7 (c (n "swc_ecma_parser") (v "0.134.7") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.90.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1b2yc1037y5j0xrwcc9mkk8qjpsvh0rgs52fbha17bnwymqfgf9n") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.134.8 (c (n "swc_ecma_parser") (v "0.134.8") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.90.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0ll11bbqf2dsrvw4fmlw2iyd7sv1mmkqyhid6a90nym2ik8hjad7") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.134.9 (c (n "swc_ecma_parser") (v "0.134.9") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.90.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1jv2q0w4bbkincy09dxd9xz0zkf43hf0q82hxzyksrjcfa466y9r") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.134.10 (c (n "swc_ecma_parser") (v "0.134.10") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.11") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.4") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.90.4") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.4") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0x79hcdh09flcj84zggcq3wi83bjkbgbickrq14g17lrky7jph2f") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.134.11 (c (n "swc_ecma_parser") (v "0.134.11") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.11") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.4") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.90.4") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.4") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1329cdpswqsm708q55pxpyv3ffbjvaswgda2df3fln5iz3mqgxi9") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.134.12 (c (n "swc_ecma_parser") (v "0.134.12") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.5") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.90.5") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.5") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "17mq9d9pz8ipdi6ir8nr6d25jrxl8wp8h8ckpmf49pc37pzgr8zh") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.134.13 (c (n "swc_ecma_parser") (v "0.134.13") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.5") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.90.5") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.5") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1xa1573akgn307sis5mp796cqr7s07swc45faf27kyli557sdcsz") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.135.0 (c (n "swc_ecma_parser") (v "0.135.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.105.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.105.0") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.91.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.91.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0a2h5hxkzrjg0r6zm727ixbr2lj093rd5i5p3c3yr1qblmynaw9z") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.136.0 (c (n "swc_ecma_parser") (v "0.136.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.0") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.92.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0q7hikb6hkyi53pwp2lf8yk39lzxdxwa0hw4f1hwa6rnyk8bm2p8") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.136.1 (c (n "swc_ecma_parser") (v "0.136.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.2") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.92.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0a1ai8sb4x0xkxqwy53v818ajcpg6jxx9d1axgkfwvr2433rn13y") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.136.2 (c (n "swc_ecma_parser") (v "0.136.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.2") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.92.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0rg9z55akagzc31p6h24djfm92b66fq9wxj5n28ivxhwk663bvfh") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.136.3 (c (n "swc_ecma_parser") (v "0.136.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.2") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.92.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "12qshvbpl1i7d53bkqxsf0b1gx7k8m6cs7fn082b5d6qzlsbp6h7") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.136.4 (c (n "swc_ecma_parser") (v "0.136.4") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.3") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.92.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0yrznch44xiq2fca8zcgzfrsabzpfil5mm25c2xjr3zl0cbl0kb3") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.136.5 (c (n "swc_ecma_parser") (v "0.136.5") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.14") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.4") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.92.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "14wid71xw8xvcs0mhymnc8y3d6qzkkqwj3sl223icss1hd933njd") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.136.6 (c (n "swc_ecma_parser") (v "0.136.6") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.5") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.92.4") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.4") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.18") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1sxpd2sz9wb61d34mlq2gk4mb88ck7r02k26bjiighv708157h5c") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.136.7 (c (n "swc_ecma_parser") (v "0.136.7") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.6") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.92.5") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.5") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1hfq39rl8bk09y0zsnb0h5zbm2rryhs3j10n58n24h1m8fk424s1") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.136.8 (c (n "swc_ecma_parser") (v "0.136.8") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.6") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.92.5") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.5") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "17xkd26j10n0drs8d68g4lv1zpnbllj9p2pp6j1s9mq7qqhh9m25") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.137.0 (c (n "swc_ecma_parser") (v "0.137.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.0") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.93.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1klgkk60x8x4j5p82qi3g1b8r197aj3phiykbbs8mmdhv89i29fn") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.137.1 (c (n "swc_ecma_parser") (v "0.137.1") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.0") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.93.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "07540vkypfpdgvdhwa03nvlhcj7b9d942vg7jlbcmn8mvdd938cf") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.137.2 (c (n "swc_ecma_parser") (v "0.137.2") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.7") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.17") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.1") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.93.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "077a055ray9ddgkfr1zv4wx0ig3f3bqrfm4w28bbg0ivnrz614mf") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.137.3 (c (n "swc_ecma_parser") (v "0.137.3") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two" "parse-integers" "parse-floats"))) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.7") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.17") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.1") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.93.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1mjiisphlp1nf9f30l2ra514n40c32fj2p4ch4lcg6pmg93ih2ik") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.137.4 (c (n "swc_ecma_parser") (v "0.137.4") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two" "parse-integers" "parse-floats"))) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.93.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1cy5d5as21f43a8rcw9iqa597cjf8ns63mzw4si6p7gym1j0kfr3") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript") ("debug"))))))

(define-public crate-swc_ecma_parser-0.137.5 (c (n "swc_ecma_parser") (v "0.137.5") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "lexical") (r "^6.1.0") (f (quote ("power-of-two" "parse-integers" "parse-floats"))) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.93.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1mcrf28p2i600n7vnm0yswf6bnb6m877j8bggsai69683ihdqb2k") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.137.6 (c (n "swc_ecma_parser") (v "0.137.6") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.93.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "09h3v6mhb0w6sj5q8z9ygb08qxlf87mm7h7y3g47zd9aszzqs0ca") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.137.7 (c (n "swc_ecma_parser") (v "0.137.7") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.3") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.93.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1yz0j95sb1syi1y56hla6maa1plyy3j75cnbw7m5d3szdwgq9c0b") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.137.8 (c (n "swc_ecma_parser") (v "0.137.8") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.3") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.93.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "09q68w037ff9v1x786rnfp90mqk00ai9waqdx53gl3b3zpfcrsnq") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.137.9 (c (n "swc_ecma_parser") (v "0.137.9") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.4") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.93.4") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.4") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1m7yps61m4w4na2f4z6i3n8h0aga1v00zxk3slzrshgmclw3lhap") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.137.10 (c (n "swc_ecma_parser") (v "0.137.10") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.4") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.93.4") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.4") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "03wg9ml25sg85lbir5jx1a6rd854qhnrl2k6z8s9wajbxp5g6km0") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.137.11 (c (n "swc_ecma_parser") (v "0.137.11") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.4") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.93.4") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.4") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "02bx12dn7lhqx1cza8c4897944fgdjjkmw7whx8ln9h0z4fhvy61") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.137.12 (c (n "swc_ecma_parser") (v "0.137.12") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.5") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.93.5") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.5") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.22") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1ir4k6vh6fxbqigqh021dwnsrq8fl6jwra6i7qffkwm6zk8xb9l6") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.137.13 (c (n "swc_ecma_parser") (v "0.137.13") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.5") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.93.5") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.5") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.22") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0qnfy5w0pf1r1nhxy56l16a1vfc6cyikn9pwj664zmxv8qzj95mm") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.137.14 (c (n "swc_ecma_parser") (v "0.137.14") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.6") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.93.6") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.6") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.23") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1qqf9nyg4f6wnq40lw4yw0gnvckj9vp22rx4sy4z2g8c8aydsbkm") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.137.15 (c (n "swc_ecma_parser") (v "0.137.15") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.21") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.7") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.7") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.93.7") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.7") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0shng02ms1p8612qxyih03savm6pj7x37i7iijjvyqsshradbh19") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.137.16 (c (n "swc_ecma_parser") (v "0.137.16") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_common") (r "^0.31.22") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.8") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.93.8") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.8") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.33.25") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "11a1p28dqa8v46nyrpz2gn7dy1pid8cdajqm8i56cjv5x4d615az") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.138.0 (c (n "swc_ecma_parser") (v "0.138.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.108.0") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.94.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.94.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "12bkpmf1bar8xh605jzr8ba65ar4nzf5my5s7smsnrmbcb47v22r") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.138.1 (c (n "swc_ecma_parser") (v "0.138.1") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.108.0") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.94.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.94.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0gkhx11jfv5zh6fsd56r0v6l9z5ml20qlmyc015kwgfx88rpc5nb") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.139.0 (c (n "swc_ecma_parser") (v "0.139.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.0") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.95.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1dq3k75dmj6ldygpp8i6za9ggmblbdzf0r2ladhwvi9vhv5ldary") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.139.1 (c (n "swc_ecma_parser") (v "0.139.1") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.95.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0fy5qjxhwkd00vya212m4sn2rb1vnypfmcxrrxvwqpswaxkvqahy") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.140.0 (c (n "swc_ecma_parser") (v "0.140.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.95.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "16c36r5f32b8gra84a4ipfhrf615jfnqh0a95vfczkhzhjcqb5iw") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.140.1 (c (n "swc_ecma_parser") (v "0.140.1") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.2") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.95.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.34.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1imyz3alrh14a1081ss6yl06r0rj3lghxbkg8j0jmxf47xci2v1i") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.0 (c (n "swc_ecma_parser") (v "0.141.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1i16kbjqav7bfr49pwqxi4rq4zivdi4l6h32nqklmjwjnhacmrfv") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.1 (c (n "swc_ecma_parser") (v "0.141.1") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1469al9nrnsl1fcj7dcz7yi74yr83j1gmsx89fqbxdrxc9f56vm2") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.2 (c (n "swc_ecma_parser") (v "0.141.2") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0j6s3lxkmldjd5afnj51ahvipq5y66h5gpi5j84802vdbna5n0lp") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.3 (c (n "swc_ecma_parser") (v "0.141.3") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "04jb42qic9nsgv6c1c3ggfdc1dqfxsf3lklvhnjx8hd8bmf488qs") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.4 (c (n "swc_ecma_parser") (v "0.141.4") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.1") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.1") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.35.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1vdp9j0vip5qkb5v8llfsi2blf6g38qvz9zhsjjxwawfkqmm5nyg") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.5 (c (n "swc_ecma_parser") (v "0.141.5") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.35.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1yan5s494swn65agwnhp6sm7i80z8vg76q3zfgls9nm7mhfg7ddh") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.6 (c (n "swc_ecma_parser") (v "0.141.6") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.35.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "11dhdpbdqdzmmsd4vq94chlbkyrby8bi2rpg0llq9x2cnrxa338i") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.7 (c (n "swc_ecma_parser") (v "0.141.7") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.35.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "15cbp5d586lm1ay86vckc2iwi2in1nz9rs3mpamiakg93brlr2f4") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.8 (c (n "swc_ecma_parser") (v "0.141.8") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.35.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "07q13zdflk2h22vkj03ijdlrm1d5s97f0fqa96yyh78s5b6ca11a") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.9 (c (n "swc_ecma_parser") (v "0.141.9") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.3") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.3") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.35.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0bmi6l850wqmlb6sw9spwscb6x4s6305v7p7czv1ghqba8pjd9p3") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.10 (c (n "swc_ecma_parser") (v "0.141.10") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.4") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.4") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.4") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.35.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "09d2r9kazy1chz0jchmwnaq61ks2v78m2551dk048rk4czhbkh35") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.11 (c (n "swc_ecma_parser") (v "0.141.11") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.5") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.5") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.5") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 2)) (d (n "testing") (r "^0.35.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0jnipv1cy458fcp70gr6j0mlxpdp7fx236si5il4sgs14vj46k8h") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.12 (c (n "swc_ecma_parser") (v "0.141.12") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.5") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.5") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.5") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 2)) (d (n "testing") (r "^0.35.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "06q4lazb5siipyjw2sawzvml6x745chzn5gyfncwaip6k46nriwb") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.13 (c (n "swc_ecma_parser") (v "0.141.13") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.5") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.5") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.5") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 2)) (d (n "testing") (r "^0.35.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "19h558v56pcvxa7rcsgpvv0szbrzw1ng1qn82r1n477r4iqxmixk") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.14 (c (n "swc_ecma_parser") (v "0.141.14") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.6") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.6") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.6") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 2)) (d (n "testing") (r "^0.35.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1j698qk7jx1iiwrj52x5c05j7hny7gpab2xysqz8by48ss8jqzmi") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.15 (c (n "swc_ecma_parser") (v "0.141.15") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.1") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.6") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.6") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.6") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 2)) (d (n "testing") (r "^0.35.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0ifyhaagyysmk2x7hs2gffss4iqqbarj00jzq0hjxwhf8y2adsdy") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.16 (c (n "swc_ecma_parser") (v "0.141.16") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.2") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.7") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.7") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.7") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.7") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 2)) (d (n "testing") (r "^0.35.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0bb2wmdxm97i3a5ki5dszipi9ndm45y97d62623bzm501f4glf4q") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.17 (c (n "swc_ecma_parser") (v "0.141.17") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.3") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.7") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.8") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.8") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.8") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 2)) (d (n "testing") (r "^0.35.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1d0vvsj36yvndg42jpfnkl05pd1pwyxvbcpnhp3qrfnsyab9vzis") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.18 (c (n "swc_ecma_parser") (v "0.141.18") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.9") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 2)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "08qqqhxmhg24754qafbrcs0fkvp1rl2pm4g92nbp3m6j0z9hivja") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.19 (c (n "swc_ecma_parser") (v "0.141.19") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.9") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 2)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0by5zjip8k181lbglq4an6gb7kgrmygb6iz52r31085zrf96glkv") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.20 (c (n "swc_ecma_parser") (v "0.141.20") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.9") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 2)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 2)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0psq3yf9zhr13ywhv6wa4y2dj57s8vsl67rdswjdnkyci5v8j34g") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.21 (c (n "swc_ecma_parser") (v "0.141.21") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.9") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1hnwaiiq6ypfmq94ss6wdm4n5y5x90r2m8nqbivwxbw0kn7wsf84") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.22 (c (n "swc_ecma_parser") (v "0.141.22") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.9") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0v94shcr23qns25jr3x0r33dngsqgmi1rnhnw84rwmz0q81dbymc") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.23 (c (n "swc_ecma_parser") (v "0.141.23") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.10") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1a2p35bxfhsqz1i4d76i99wwspkllmwgg35ibxwpyz6ibqbrrj4w") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.24 (c (n "swc_ecma_parser") (v "0.141.24") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.10") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0cx1h1lfbf01darxb8cxykcif9s3pc3p1vn806ikms4rrvg3s4fl") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.25 (c (n "swc_ecma_parser") (v "0.141.25") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.10") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "19gb9iinlbar9wwwdfhjk38vh403ddrydhsb8yjcczxcbwj15ssw") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.26 (c (n "swc_ecma_parser") (v "0.141.26") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.10") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "123djsl8knv2hn3snp3vn7v964r1026x7f81i7zzpai93gzxx44m") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.27 (c (n "swc_ecma_parser") (v "0.141.27") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.10") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "11w240i2lrpcgxq24a2vgs4wzvic2j6lg0i3v30fix437hban0aw") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.28 (c (n "swc_ecma_parser") (v "0.141.28") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.10") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0372x9rnd2g4mda8vzp3szhqz8gkwwn1x1xzx5l11wy9iajkd10b") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.29 (c (n "swc_ecma_parser") (v "0.141.29") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.11") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.11") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.11") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.11") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1gnn0sj5l8zrpa8aw85b91dnm4ic92k93xzww17c55blbywy38dw") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.30 (c (n "swc_ecma_parser") (v "0.141.30") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.10") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.12") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.12") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.12") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0vlvbllvdawji6vybc9s7sr9jgw74divj4ghgv77jzhv69mda2vs") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.31 (c (n "swc_ecma_parser") (v "0.141.31") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.11") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.13") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.13") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.13") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.13") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "08qs8zl5a1bc2nmli5af08v4cl2z2zknlasyk2wwnms9c5v7sdzk") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.32 (c (n "swc_ecma_parser") (v "0.141.32") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.14") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.14") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.14") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.14") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0f87rq0r9ayya502m4a6w0sv99b9pas9kxsqcanjkrq48iirz0jz") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.33 (c (n "swc_ecma_parser") (v "0.141.33") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.15") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1mizgf33wk0c337lhhk0z4pam2314nm02hljgb6hhj3wprbwwhyn") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.34 (c (n "swc_ecma_parser") (v "0.141.34") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.15") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0acm430a5pikx1p5q1y1vyjm5hq9va231giyww4zn8c30wfn4rra") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.35 (c (n "swc_ecma_parser") (v "0.141.35") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.16") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.16") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.16") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0j1k5kj7draxqpdyhzy34iykf89w4pnspdw4i3ld234rycjwanlq") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.36 (c (n "swc_ecma_parser") (v "0.141.36") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.17") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.17") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.17") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.17") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1vznc8iky32pwff9agd252c6lvjab1lzg4bnfn97vqpqj5y5ca64") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.141.37 (c (n "swc_ecma_parser") (v "0.141.37") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.17") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.17") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.96.17") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.17") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "156jl2if52igw9kxdy8yagfsp7crq0rxaxxpc9m8l14mvl0p9lf4") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.142.0 (c (n "swc_ecma_parser") (v "0.142.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.14") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.0") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.97.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.0") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0w94zvb3zkd6i4xvhj0sqy2261p43g0p9lxni079zr5f7w5qkbl8") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.142.1 (c (n "swc_ecma_parser") (v "0.142.1") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.1") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.97.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.1") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0w8cfilxivfgad538qxp74m0x929fs1qifxfbji1rx8s8kdfsgjw") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.142.2 (c (n "swc_ecma_parser") (v "0.142.2") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.15") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.1") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.97.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.1") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "01d2xspgcmkzjapmwm2a4lqq7im37dharmhd6v5px173hd35fj10") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.143.0 (c (n "swc_ecma_parser") (v "0.143.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.0") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.98.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.0") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0zl8kw7cawyy5xbw0vv03g84lixp3caxm1ss7hr4mnmydwcxgvcq") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.143.1 (c (n "swc_ecma_parser") (v "0.143.1") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.0") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.98.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.0") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0zrk4hf6lac5h9r1hmrljrak5qp2pkf7prq31yhwfx4zzvzs56g7") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.143.2 (c (n "swc_ecma_parser") (v "0.143.2") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.16") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.1") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.98.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.1") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1c3zaghmfp4lmrpniccqh3xklkl8l090zf00jfvmhlkgqy8fl8cd") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.143.3 (c (n "swc_ecma_parser") (v "0.143.3") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.17") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.2") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.2") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.98.2") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.2") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.18") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1n87ack6714l4m1rnm9gb03wiqxwwax7jacsbsq19pnm3s0mbzwh") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.143.4 (c (n "swc_ecma_parser") (v "0.143.4") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.17") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.3") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.3") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.98.3") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.3") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.18") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1pzvi3mdwxa1chyizvbjp0f9jlaqiqpprd85ilpmlrilkkhypc7v") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.143.5 (c (n "swc_ecma_parser") (v "0.143.5") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.4") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.98.4") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.4") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0hzw5xpcf7qf58jrkbgdmx329yfbmim14ppv0d6bvbd9k6n3r0i0") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.143.6 (c (n "swc_ecma_parser") (v "0.143.6") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.18") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.4") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.4") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.98.5") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.5") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1188gpqxgknphbanmv4wijlgzvspfi59qmv8s3lq3g7lr38fs7id") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.143.7 (c (n "swc_ecma_parser") (v "0.143.7") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.5") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.98.6") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.6") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "17vdnh6nzg6apiv6xpprlrga7wdlixn1p8m0hzjfqdzxzbjiwc9z") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.143.8 (c (n "swc_ecma_parser") (v "0.143.8") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.5") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.98.6") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.6") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0arq690z892ra8bhqnidgb25fghhhqslqy12zw8pb9whhmscb6b1") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.143.9 (c (n "swc_ecma_parser") (v "0.143.9") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.19") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.5") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.5") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.98.6") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.6") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0x6s47lyv767m66n5y02arjrp9vpzpx35z12fzzjcyv5hmbp8rji") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.143.10 (c (n "swc_ecma_parser") (v "0.143.10") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.6") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.98.7") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.7") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0cr13rh0509yhax3h4jw4nyqa0d0nja7x7qhzda8q72ymswrp4ab") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.143.11 (c (n "swc_ecma_parser") (v "0.143.11") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.4") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.6") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.98.7") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.7") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1k8j1xxqv3slm9a6wdlr70xw83d86jihnn4wghp4r8lq0hiq490r") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.143.12 (c (n "swc_ecma_parser") (v "0.143.12") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.10") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.6") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.98.7") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.7") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "17w6lizqkg6dvbqwzwzs0sripn59rg8hslbsnf8r8fpqasr7mz5n") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.143.13 (c (n "swc_ecma_parser") (v "0.143.13") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.10") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.6") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.98.7") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.7") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1m7y8p4d7qrsf2wqm2096k57y2vmgip1n9w2340cabkcnq5a4m2k") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.143.14 (c (n "swc_ecma_parser") (v "0.143.14") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.10") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.6") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.98.7") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.7") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "16hgwmwyzq3h78jxs36padg4y15d475mdrjix50v3ln87p4zv932") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.143.15 (c (n "swc_ecma_parser") (v "0.143.15") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.10") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.6") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.98.7") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.7") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1m34axcr676797h9402ibmxi254wj3120zvr687zf0ynfv3grag6") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.143.16 (c (n "swc_ecma_parser") (v "0.143.16") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.10") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.6") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.6") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.98.7") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.7") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "02956j2fza671fqwsg7240h28iwr5kgwhjqw1wrmn0dch6jgmds0") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.144.0 (c (n "swc_ecma_parser") (v "0.144.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "either") (r "^1.10") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.20") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.113.0") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.113.0") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.99.0") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.99.0") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1ix49ip93fqd3yzsf4ndqqyav46ickdizsq6807l2r0aiyjz7a9x") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.144.1 (c (n "swc_ecma_parser") (v "0.144.1") (d (list (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.10.0") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.26") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.113.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.113.1") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.99.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.99.1") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)))) (h "0w4mz1xkdpfmahdk6iiajbvrvwlhpja9n9zh1yi6fpdfhfbfd684") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("default" "typescript" "stacker") ("debug"))))))

(define-public crate-swc_ecma_parser-0.144.2 (c (n "swc_ecma_parser") (v "0.144.2") (d (list (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "either") (r "^1.10.0") (d #t) (k 0)) (d (n "new_debug_unreachable") (r "^1.0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"arm\")))") (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.26") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.113.1") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.113.1") (f (quote ("serde-impl"))) (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.99.1") (o #t) (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.99.1") (d #t) (k 2)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "typed-arena") (r "^2.0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)))) (h "0c3hmr7402i5i2lg9abr3n2ad7xh5bn39z2dflxhzrwdkrcz9b9i") (f (quote (("verify" "swc_ecma_visit") ("typescript") ("tracing-spans") ("default" "typescript" "stacker") ("debug" "tracing-spans"))))))

