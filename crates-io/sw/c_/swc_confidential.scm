(define-module (crates-io sw c_ swc_confidential) #:use-module (crates-io))

(define-public crate-swc_confidential-0.19.7 (c (n "swc_confidential") (v "0.19.7") (d (list (d (n "cipher") (r "^0.4.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "magic-crypt") (r "^3.1.13") (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.21") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.6") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_base") (r "^0.137.16") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.140.17") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.127.15") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.7") (d #t) (k 0)) (d (n "testing") (r "^0.35.21") (d #t) (k 2)))) (h "0dnpyib0g7mkp99ddlbq3f3qcmn1i7pxcavf4bdrkf6qzap545bd") (r "1.70")))

(define-public crate-swc_confidential-0.19.8 (c (n "swc_confidential") (v "0.19.8") (d (list (d (n "cipher") (r "^0.4.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "magic-crypt") (r "^3.1.13") (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.7") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.25") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.113.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.144.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_base") (r "^0.138.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.141.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.128.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.99.0") (d #t) (k 0)) (d (n "testing") (r "^0.35.23") (d #t) (k 2)))) (h "1pn3b7q43nmxiv32n3jqddghcrgzdq90d7qrgpi860ddab3h81ai") (r "1.70")))

(define-public crate-swc_confidential-0.19.9 (c (n "swc_confidential") (v "0.19.9") (d (list (d (n "cipher") (r "^0.4.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "magic-crypt") (r "^3.1.13") (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.7") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.26") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.113.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.144.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_base") (r "^0.138.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.141.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.128.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.99.1") (d #t) (k 0)) (d (n "testing") (r "^0.35.24") (d #t) (k 2)))) (h "0kn35b61c6xx792ygzlj3z325kv22a0vgmlgcag3b24dyalpb836") (r "1.70")))

(define-public crate-swc_confidential-0.19.10 (c (n "swc_confidential") (v "0.19.10") (d (list (d (n "cipher") (r "^0.4.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "magic-crypt") (r "^3.1.13") (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.7") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.26") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.113.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.144.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_base") (r "^0.138.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.141.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.128.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.99.1") (d #t) (k 0)) (d (n "testing") (r "^0.35.24") (d #t) (k 2)))) (h "1braryamjm2iy69yvjvj2h54fk85vrpfxgpmphcgaqx71mxqpdna") (r "1.70")))

(define-public crate-swc_confidential-0.19.11 (c (n "swc_confidential") (v "0.19.11") (d (list (d (n "cipher") (r "^0.4.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "magic-crypt") (r "^3.1.13") (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.7") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.26") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.113.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.144.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_base") (r "^0.138.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.141.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.128.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.99.1") (d #t) (k 0)) (d (n "testing") (r "^0.35.24") (d #t) (k 2)))) (h "0zdrpx2361q04hb0pnxbgnxz5fh5dnzpadkna9xsr1gmgv9c0man") (r "1.70")))

(define-public crate-swc_confidential-0.19.12 (c (n "swc_confidential") (v "0.19.12") (d (list (d (n "cipher") (r "^0.4.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "magic-crypt") (r "^3.1.13") (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.7") (d #t) (k 0)) (d (n "swc_common") (r "^0.33.26") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.113.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.144.1") (d #t) (k 2)) (d (n "swc_ecma_transforms_base") (r "^0.138.2") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.141.1") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.128.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.99.1") (d #t) (k 0)) (d (n "testing") (r "^0.35.24") (d #t) (k 2)))) (h "1m46jgm8sl8a5n54ny33di22c5kqni53zmsi9p31jhbnnp6cwvqc") (r "1.70")))

