(define-module (crates-io sw c_ swc_node_bundler) #:use-module (crates-io))

(define-public crate-swc_node_bundler-0.0.1 (c (n "swc_node_bundler") (v "0.0.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.214.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.177.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.121.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.117.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.183.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.99.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0bc0iqv5l40i1l8fzbbr8h04q6h0wqlhyyzmm1yk0vdg6qmwp8rw") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.0.2 (c (n "swc_node_bundler") (v "0.0.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.214.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.177.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.121.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.117.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.183.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.99.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0csx0fb1rgjnilrbz026lkyn6ygvkys6g0y0qjdx1j2szb4w37zl") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.0.3 (c (n "swc_node_bundler") (v "0.0.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.214.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.177.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.121.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.117.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.183.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.99.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1c6h4c5kg2k3lahhi5lv4c61qhqmjiccghjlxysdrhnp715qx2py") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.1.0 (c (n "swc_node_bundler") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.215.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.177.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.121.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.117.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.183.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.99.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1c9f4smjxs5min82gw6gwh2dxd1hsnm8qm290ymkvq8pzm74ig8j") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.2.0 (c (n "swc_node_bundler") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.216.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.178.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.118.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.184.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.100.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1hwcf0dswa7dmg1xlsr0g1w0xaixfjvlyfpg92bjdp5ygw76yw47") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.3.0 (c (n "swc_node_bundler") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.217.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.179.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.118.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.185.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.100.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1y1yk6ybhlxyiyvy5rsrrwjwdkj2l2kfjh42mbfbhwldw7fivimq") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.4.0 (c (n "swc_node_bundler") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.218.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.179.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.118.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.185.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.100.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0q326wkpv1c2f7rfz8jwd1qwsvjl4ih6rjiybc0l9jyzla4zsdyd") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.5.0 (c (n "swc_node_bundler") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.219.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.180.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.12") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.118.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.186.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.100.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0vs7731d3269nibqhk31vv8a8sbf8hf2kwvq5hjfrjsgh9z727bj") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.6.0 (c (n "swc_node_bundler") (v "0.6.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.220.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.181.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.12") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.118.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.187.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.100.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1sinlillpyqvw4cjk849j0m80jarjxfs7msbm19qiskh7j9qiara") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.7.0 (c (n "swc_node_bundler") (v "0.7.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.221.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.182.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.12") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.118.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.188.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.100.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1vhnklydn4j5f6rpdfpjrsgrfvnrykq6mpq7ccxskgx6ql4a0l3d") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.8.0 (c (n "swc_node_bundler") (v "0.8.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.222.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.183.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.12") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.118.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.189.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.100.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "09qmkdrrfbzyi6j1kiwhmkdwgjgcis6wcr8s42ql5zy9sfbdrqm3") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.9.0 (c (n "swc_node_bundler") (v "0.9.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.223.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.184.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.118.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.190.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.101.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0w969g5giwl7j981flrz5yxrylh2y445wagr2zkmcr3cna2i6bi4") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.10.0 (c (n "swc_node_bundler") (v "0.10.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.224.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.185.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.118.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.191.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.101.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "14xhnkbn6klylmjhafmpny7i96gz5qsh4d9i9zssi2ss090p9yi4") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.10.1 (c (n "swc_node_bundler") (v "0.10.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.224.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.185.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.118.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.191.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.101.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0jmss3hcrpddil0ckbh7kwl39nrwl1x8zjfayydry71nqrpl1ylm") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.10.2 (c (n "swc_node_bundler") (v "0.10.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.224.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.185.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.118.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.191.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.101.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1vwmx6y1y0516gaalqznm114j8wja536y72z3gkwfp68lp34c3jy") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.10.3 (c (n "swc_node_bundler") (v "0.10.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.224.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.185.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.118.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.191.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.101.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "00gwx01wxsipvgnyyz0kp3ydrp3qwpfjbyyv2hpbq76mrir0w8p5") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.10.4 (c (n "swc_node_bundler") (v "0.10.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.224.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.185.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.123.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.118.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.191.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.101.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "01s22fvl8vz1vxm23fd6gvp7yx2cf5ycjbn4f3cnl40n6vfsnm29") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.10.5 (c (n "swc_node_bundler") (v "0.10.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.224.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.185.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.123.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.118.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.191.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.101.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0pjkrzsw13k8yg3qmvpb9rz4nvg43s13ldjq16cwwzg55015vr2b") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.10.6 (c (n "swc_node_bundler") (v "0.10.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.224.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.185.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.123.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.118.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.191.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.101.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "031nsmfi5nlh9i25r6k4hx2kwvi5j3hif0ikm9xvigxl9gc3x53h") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.10.7 (c (n "swc_node_bundler") (v "0.10.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.224.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.185.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.123.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.118.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.191.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.101.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1d475czyir0ckh34hiprvp98m3fr04lzidlpf90azhmi8lxmx6a5") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.10.8 (c (n "swc_node_bundler") (v "0.10.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.224.10") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.185.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.123.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.118.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.191.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.101.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1sba5wgcgrkfa3i72s1pl7jnp230c14iqhlb8d42p2cl92fr23nv") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.10.9 (c (n "swc_node_bundler") (v "0.10.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.224.11") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.185.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.18") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.123.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.118.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.191.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.101.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.8") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "03al4x2gmn3axjhmgxkzvfvvgnsdsjb92sk3cv8vg4sy4snh7z7i") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.10.10 (c (n "swc_node_bundler") (v "0.10.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.224.12") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.185.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.19") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.123.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.6") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.118.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.191.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.101.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1nsvmml5s1ajm7vhjmc071wsp73w0x4lwbng53n0j5y4mbck680x") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.10.11 (c (n "swc_node_bundler") (v "0.10.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.224.13") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.185.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.19") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.123.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.6") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.118.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.191.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.101.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1fip4w0kadwlrm96y29qyc03x9f3vp15hp0hydbq9rmf0y49yn6c") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.10.12 (c (n "swc_node_bundler") (v "0.10.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.224.14") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.185.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.19") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.123.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.6") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.118.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.191.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.101.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "03xzcjzsgpkgjf73z4hlvmsrw9s8gp22jfl00gdsb4hlq5501hjn") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.10.13 (c (n "swc_node_bundler") (v "0.10.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.224.15") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.185.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.20") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.123.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.118.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.191.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.101.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.10") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "17p1b7dwx9d82jdcllwfldgiqkx8036rm3asq52dy7dz0rgy7sjc") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.11.0 (c (n "swc_node_bundler") (v "0.11.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.225.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.10") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.186.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.27.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.90.20") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.123.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.39.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.118.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.192.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.101.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.76.10") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.29.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "187v6y54hdp9bjznxbqg3qvzrdq3jdrjbjaa2qv39qbk5j6k98bq") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.0 (c (n "swc_node_bundler") (v "0.12.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.11") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1qrqg71v1pj2a16d5kka7dbqgnahpdhdvhh8cnk1zyfcksyh4sv4") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.1 (c (n "swc_node_bundler") (v "0.12.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.11") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0l2x8lic628g00n79859zv69pycrvawwgx4wvy5py1hy6fkffcng") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.2 (c (n "swc_node_bundler") (v "0.12.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.11") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "037j9mbxz1bvxsr6hxgbhlvh5scfp4ns5g82gpd1xawwzmxic0j0") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.3 (c (n "swc_node_bundler") (v "0.12.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.11") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1dljldsvrdbyhf9yhw32f1nvbiklzgjpgiwbysh6ih2ijg2achqa") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.4 (c (n "swc_node_bundler") (v "0.12.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.12") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1xik598jnw7hyb45zkjf2s34ncmp3bqfzsgzyh58lzj2mxczvqw5") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.5 (c (n "swc_node_bundler") (v "0.12.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.12") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0zpxhbq40rm1bya2grg3wqflfsqk632njk0kdrg2ilrdbjxl99zc") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.6 (c (n "swc_node_bundler") (v "0.12.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.12") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "02b79kqz7qbv7kg997808x8n5kqiinmaabm4mvr0fn82bk52k0g7") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.7 (c (n "swc_node_bundler") (v "0.12.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.12") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0afrparybjx2hvsw0svmn90bv671zswj1lkwmpd14ncq0qy3643x") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.8 (c (n "swc_node_bundler") (v "0.12.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.12") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0ndsqfmbbnghd1d5sv130fpaab76hlbf9fxwxp53838f5kkr7v3g") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.9 (c (n "swc_node_bundler") (v "0.12.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.13") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0fgkvb61i5mv70f66na5imjyvknknpbacbycsxnzp5z45w39ify1") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.10 (c (n "swc_node_bundler") (v "0.12.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.10") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.13") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1i4gyspg3an72m1phmqw1xlf6jr6wjly39adx1q0pwprmdx0a8v8") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.11 (c (n "swc_node_bundler") (v "0.12.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.11") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.13") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0z04zifw8hj4rl2hhmhpb62ddri1igcs91hzkj141y4j0ks1brj5") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.12 (c (n "swc_node_bundler") (v "0.12.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.12") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.13") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1jycvngsg5cqjv6bgcrsxvw06hh8p0wag78d0w0165y0ln7dg3kp") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.13 (c (n "swc_node_bundler") (v "0.12.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.13") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.11") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ns4vx4lv1bg7gjwabykqf0i12v33mywabc05151mg6h6b2mdzwg") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.14 (c (n "swc_node_bundler") (v "0.12.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.14") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.12") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0k6x4a5q0vhxm7ysikqwgqdcj4amcd5pxrxqkv23a2f5r5svmxk8") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.15 (c (n "swc_node_bundler") (v "0.12.15") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.15") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0xhialna37si27zm8fi34vhhndk1l5crz49pi5wy56qx5i9q6yaf") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.16 (c (n "swc_node_bundler") (v "0.12.16") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.16") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.14") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "124y1fic3v8yfwnsdn98gmgs32c233nawxr6jzc8cv15pysyhh7r") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.17 (c (n "swc_node_bundler") (v "0.12.17") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.17") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.14") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1nfm8dqr0zag0phk8g8ifa9bppzmwvswfsjbdbwkajgaf0y1y1kg") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.18 (c (n "swc_node_bundler") (v "0.12.18") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.18") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.15") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0ir72rzy0rr74ikk7b6vh83gkx7mf8f8gplb5fmnb91a7mdlifal") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.19 (c (n "swc_node_bundler") (v "0.12.19") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.19") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1lxaiyji528jm7ab29sqb9fmkrnr1j7j0yxfci3mvr3v0pvmyf0g") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.20 (c (n "swc_node_bundler") (v "0.12.20") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.20") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0nn8gyrs1p2nivw5dzl0x4pf46mlwi05flinnvz6shdm07ll8v2c") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.21 (c (n "swc_node_bundler") (v "0.12.21") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.21") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.20") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1w4whvwwkw3x5dxf6ycwjwi5469p98zxzrsfzyjnxgvac5rykgsr") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.22 (c (n "swc_node_bundler") (v "0.12.22") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.22") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "12vd5gvn7i872h3aizxwhlgp314m0m1whplia5ll95dzfqbsk0s0") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.23 (c (n "swc_node_bundler") (v "0.12.23") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.23") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.22") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.19") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "10akr89xfxcn4r2kmwx06cv85pg376hnrbc88c259azfyr7ja32s") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.24 (c (n "swc_node_bundler") (v "0.12.24") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.24") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.6") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.6") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.20") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ayglgihk0f83im67srifx0dyaanmd38nhglhzi1ggnpgp1v3s3m") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.25 (c (n "swc_node_bundler") (v "0.12.25") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.25") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.24") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.21") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "109liv2b1g3gkpp32373drlnhsyirv2bphafaigfjvwf4y0fzd5w") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.26 (c (n "swc_node_bundler") (v "0.12.26") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.26") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.21") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1cbv8xpwc6idrv6p7rvq139i95nijj7p0js53hacdf4rfpjqarvi") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.27 (c (n "swc_node_bundler") (v "0.12.27") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.27") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.26") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.22") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0vhfqw0naxnnn74741c91fph285bnisas348wcqc5agfnk7w8vwa") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.28 (c (n "swc_node_bundler") (v "0.12.28") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.28") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.26") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.22") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "10gk9bax426vpgiz1v06h4m0yviga5kdr4x1pgs3cfwqynav100s") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.29 (c (n "swc_node_bundler") (v "0.12.29") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.29") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.14") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.26") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.22") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0gxry0arvkipv4i819bq1j3jzhjgwk8098q4195l3wxywk6p3xlv") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.30 (c (n "swc_node_bundler") (v "0.12.30") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.30") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.15") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.8") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.8") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.23") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.8") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0h4jsiafgay4yvwzn69x28gpyz21yy0nz54gv41gw3mff4yc4irh") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.31 (c (n "swc_node_bundler") (v "0.12.31") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.31") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.15") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.8") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.8") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.23") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.8") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "11ihxdrriqx556z9yv2ga203if8kpzrvx9xl63xrk6vwszcdac0k") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.32 (c (n "swc_node_bundler") (v "0.12.32") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.32") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.15") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.28") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.8") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.8") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.23") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.8") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "05grpwws1xnhd11qsddvx2k844x5f1ancx9i2b2jzdgq08mh686f") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.33 (c (n "swc_node_bundler") (v "0.12.33") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.33") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.15") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.8") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.8") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.23") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.8") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0zbvc9qza8cnz30cjq4ygrq0f9yqwl5gk334v3mfqx965zn7q934") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.12.34 (c (n "swc_node_bundler") (v "0.12.34") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.226.34") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.15") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.187.30") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.91.8") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.124.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.8") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.119.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.193.23") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.102.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.77.8") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1dl6d2v0asg51af357ajwdf0m1dzi6ais6i2pyvjgj38mlvzmhaz") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.13.0 (c (n "swc_node_bundler") (v "0.13.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.227.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.15") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.188.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.8") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.120.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.194.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "08fm4kdq5s8p2ppy33x45341w5pbvsk7y1l1khzq05sf0bsilcb5") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.13.1 (c (n "swc_node_bundler") (v "0.13.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.227.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.15") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.188.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.8") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.120.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.194.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0w3ak41w0n4fpalr7b6l15gjmd4bc70nh8645rxw5c58vfrsij6h") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.13.2 (c (n "swc_node_bundler") (v "0.13.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.227.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.15") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.188.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.8") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.120.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.194.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0fr2z633a4x33hdgxs9qmk6n5khk093c4dr14bzjp2yqi73ipmyd") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.13.3 (c (n "swc_node_bundler") (v "0.13.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.227.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.15") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.188.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.8") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.120.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.194.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1nnv1a7w991k7z61jay3r1i7xpq6n2bgpvh4g7dsklaqcy4fdq64") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.13.4 (c (n "swc_node_bundler") (v "0.13.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.227.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.15") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.188.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.8") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.120.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.194.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0spdb4i77wkc6dag7fgslpkbp3vyywmszn6g06k1saw5qdxrnrnx") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.13.5 (c (n "swc_node_bundler") (v "0.13.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.227.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.15") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.188.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.8") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.120.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.194.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0m5ibh5kdk0f5k0jn5w6p6rwnjkxvczx0a8ywizg3953rwrkb0kk") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.13.6 (c (n "swc_node_bundler") (v "0.13.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.227.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.15") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.188.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.8") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.120.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.194.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.78.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1gf44925h2z3xa3w7lnmngfq7vlvs2ls3whb7pjhql5wvwc4nyfw") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.13.7 (c (n "swc_node_bundler") (v "0.13.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.227.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.16") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.188.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.92.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.120.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.194.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.103.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.78.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ryphn7n8ybfnn45c0bgmzhx68ijld31wlr0931vzw3dxhp0s3mw") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.13.8 (c (n "swc_node_bundler") (v "0.13.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.227.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.16") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.188.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.92.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.120.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.194.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.103.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.78.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1pp04ap19a580n0z8s4066izq341j3ix5hljljrk36dpwh73yfvf") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.13.9 (c (n "swc_node_bundler") (v "0.13.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.227.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.16") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.188.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.92.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.120.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.194.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.103.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.78.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "00izys5hsjq2l30d1qnnkljhybybww3wggx1yjhrmk80n5df1h80") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.13.10 (c (n "swc_node_bundler") (v "0.13.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.227.10") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.16") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.188.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.92.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.120.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.194.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.103.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.78.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0905izn0c1lkdlsy13sz3blb828axgbfkx8frwfz1j058mil5h4n") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.13.11 (c (n "swc_node_bundler") (v "0.13.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.227.11") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.16") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.188.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.92.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.120.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.194.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.103.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.78.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "004qbvsdwvnzmhsv77wql9gbd9gc7mnz3xv1qa9f8rd1x7axjwdd") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.13.12 (c (n "swc_node_bundler") (v "0.13.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.227.12") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.16") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.188.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.92.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.120.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.194.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.103.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.78.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0psclnlhzskjh6iq564bcb419idb8w4fajvg411i2wqan395vj9w") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.13.13 (c (n "swc_node_bundler") (v "0.13.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.227.13") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.16") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.188.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.92.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.120.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.194.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.103.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.78.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0l0y4yvds6kh7a45f25drhg8lnd3v11ablnpn06bqrp969rnypf8") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.13.14 (c (n "swc_node_bundler") (v "0.13.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.227.14") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.16") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.188.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.92.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.120.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.194.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.103.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.78.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "185w0sm838g55nhz9lq7vd05p5ksyfa1cvfjnkjn16pys44jlfr0") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.13.15 (c (n "swc_node_bundler") (v "0.13.15") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.227.15") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.16") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.188.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.92.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.120.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.194.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.103.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.78.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1js26gvh0gxgpiis9y5zkgb27781jl0yzrw2p9glqa4g9s6aqr26") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.14.0 (c (n "swc_node_bundler") (v "0.14.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.228.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.189.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.28.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.93.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.126.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.40.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.121.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.195.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.79.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.30.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1my0qq7sjyccahg41lf19n65gkw121z5qlgpn47clbllb976x66r") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.15.0 (c (n "swc_node_bundler") (v "0.15.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.229.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1h88lz81zkw9cpvglxyi0zkh3h19pxgi5h8v6mcip0vs39mwb4lc") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.15.1 (c (n "swc_node_bundler") (v "0.15.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.229.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1fiy0rh926zymzzynhccprk9m96jcqkg13060pgbzl83x4rsal1w") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.15.2 (c (n "swc_node_bundler") (v "0.15.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.229.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "19l50cpdsin1i0j2makr46fgdcvh8hjvl2fmdglj01bpghjl80mf") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.15.3 (c (n "swc_node_bundler") (v "0.15.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.229.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1cm44fz5w6ppajnhkvn81wng2spn6k1xwmwcbawzsl028phmvp4f") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.15.4 (c (n "swc_node_bundler") (v "0.15.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.229.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0kfksb1y67vb5z1b7hzysmr3wfj0d1wxfvg7kbvim2bscynqy7ic") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.15.5 (c (n "swc_node_bundler") (v "0.15.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.229.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "16xwp4n3jv6ypgf6jbh8z3xhj96kd4ml4lgiahc48vqfqjisj2cr") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.15.6 (c (n "swc_node_bundler") (v "0.15.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.229.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ck7yqyi4ani7fnn5jn6fzsal9y8y7m1mb8ykc8566g97jbvyd46") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.15.7 (c (n "swc_node_bundler") (v "0.15.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.229.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1fmv00l6nwf2jk9ww77fq09179szn8kn3n672psamw60miakasm6") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.15.8 (c (n "swc_node_bundler") (v "0.15.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.229.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0i7151vyacw5il7cshkj2ldnl2dr36n6hy029c68j1ryhaa27fxs") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.15.9 (c (n "swc_node_bundler") (v "0.15.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.229.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0n7q8zb1qsj5gjkx561wqkl55hp0a3jrqaxyd3zb6q49i5d5w1v8") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.15.10 (c (n "swc_node_bundler") (v "0.15.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.229.10") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0hb8rv2446icxjvjxl476r60sl7b2yasnb2jsmcbmvnj3c43rj34") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.15.11 (c (n "swc_node_bundler") (v "0.15.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.229.11") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0gs3s6sljliv3k5gqf9i9kqkr7kz0iq0cqn1y6ai7i2hfdyb6mdy") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.15.12 (c (n "swc_node_bundler") (v "0.15.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.229.12") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1pr3fpnyk8pxl00s9aipi0ffy4rc4740xvpcahx3cvlb41cqb2bb") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.16.0 (c (n "swc_node_bundler") (v "0.16.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.230.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "19y0pmjvgnllcfn6hbn2m3ddpanizahljjn1z7vpqw0yd49xdzhv") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.16.1 (c (n "swc_node_bundler") (v "0.16.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.230.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1gkdpx6mfzy5xxcmpgzsn0z1gk6vrw2dv42iaia7585s1rs5v05s") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.16.2 (c (n "swc_node_bundler") (v "0.16.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.230.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.17") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0s4kjl7i73lf98vs7a92hqgsqsh8r0wjg664z7m3m1gbfx2l9j6c") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.16.3 (c (n "swc_node_bundler") (v "0.16.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.230.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0zxrlbm18nyqjc7hjddh0ys84lf2c2yddh3k7ykavidc4x6c2pxw") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.16.4 (c (n "swc_node_bundler") (v "0.16.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.230.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "06a2yvlfyfcln4a77yd7bky5034045giyzvkakw1qcb8f4rkkg0g") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.16.5 (c (n "swc_node_bundler") (v "0.16.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.230.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1flwsl5h00iylv25aih4awsff3wmgbp35jbklnzad4vc2qh22lpf") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.16.6 (c (n "swc_node_bundler") (v "0.16.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.230.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "04830vi8y6n0b5k2w3kbdkapazpisybkgagrl4pxnw8ib31jnbs9") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.16.7 (c (n "swc_node_bundler") (v "0.16.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.230.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.20") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1l3hx7j1f42dysadxsbjcnr25kbcs2s0ihs1yr9sk2w9p9mflz96") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.16.8 (c (n "swc_node_bundler") (v "0.16.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.230.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1chfks861pgskc7w6kzfxsmz002z4fzzzrbwhsiy3kb7wcqhpy4v") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.16.9 (c (n "swc_node_bundler") (v "0.16.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.230.10") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.22") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.11") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0lnm2rivlpcy4b6cdbaxhd2pc12wwjifhgb4gr619r4mxiy49y7g") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.16.10 (c (n "swc_node_bundler") (v "0.16.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.230.11") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.11") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0fpjkx2f9cggyqr3lp4ic8ib3dsx17ya47drc5cn4yslbg8mcfhf") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.16.11 (c (n "swc_node_bundler") (v "0.16.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.230.12") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.24") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.11") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "13dqn1vzhjgfyfzsh0hj53hnz5fmv6r83kgd10x5yfvsq972a0v6") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.16.12 (c (n "swc_node_bundler") (v "0.16.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.230.13") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.12") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1mf3k7l3h7xcrxsy7ks91pry3zbjnjhkf9kpfqcq1x2brkp2nl4c") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.16.13 (c (n "swc_node_bundler") (v "0.16.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.230.14") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.26") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.12") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "00wsrs2047405na82ipyfyp7dfxsnw5qz7r47l0z8nwgz72pjr2r") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.16.14 (c (n "swc_node_bundler") (v "0.16.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.230.15") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.12") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "05kaf1l0py4fywcrx7g87jg9dda5ihgfjsbi9zl18rf884qgp5r1") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.16.15 (c (n "swc_node_bundler") (v "0.16.15") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.230.16") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.28") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "13xqg5316h3mqvpahjafbqpwf80hvn4palsaabsf7dynz5ybbj0q") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.16.16 (c (n "swc_node_bundler") (v "0.16.16") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.230.17") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "19h5kcz87fyfv6myxzi18iifw9x3ah1chypdm4385g08yhhphqz0") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.16.17 (c (n "swc_node_bundler") (v "0.16.17") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.230.18") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.30") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1sqz3fy0k8j8wfm1rfnajji1hapfsxq95nw2f9argb8jmlsv6vi4") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.16.18 (c (n "swc_node_bundler") (v "0.16.18") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.230.19") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.190.31") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.196.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0bk36gavisrhhpmd6jwc5l035r2zq9dg28wmlbkbkk76z23nyizj") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.17.0 (c (n "swc_node_bundler") (v "0.17.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.231.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.191.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.197.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1pzhcjwla6bkg7hpv01jzfqircvpqv067addgjy7yj4y3qw9nj7c") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.17.1 (c (n "swc_node_bundler") (v "0.17.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.231.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.191.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.197.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "14qllsf3bf1b04j2dc3g67fbz43iwl2kfakzgvkk1mqw5zwpjmbh") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.17.2 (c (n "swc_node_bundler") (v "0.17.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.231.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.191.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.197.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1637fwl37qwip0wz2zfirayg7n805bgnhvhsg8x3fhr16ywd7bv2") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.17.3 (c (n "swc_node_bundler") (v "0.17.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.231.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.191.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.197.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0vx94m04l5sbxzdv9x77zsdddj8m4j81x070khddxrqqvd1ds0j5") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.17.4 (c (n "swc_node_bundler") (v "0.17.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.231.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.191.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.197.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "14hgq9yfsl5l8x5vsblxlf8fqiad510wybapm8sb9sgnnqz30wgk") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.17.5 (c (n "swc_node_bundler") (v "0.17.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.231.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.191.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.197.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "11214m0511kxdq11nqbkiwjy5r12dn64n1mzwrw1m0133n0y1cba") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.17.6 (c (n "swc_node_bundler") (v "0.17.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.231.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.191.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.197.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0fgydb46vmzyk4j6ma25g0wr8y8pcgx2v78zydvamimavrildyr0") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.17.7 (c (n "swc_node_bundler") (v "0.17.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.231.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.191.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.197.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "17883r9ka1j6x61crba4y8n4dsljkxdsdjaqml9pw88cna51lhqb") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.17.8 (c (n "swc_node_bundler") (v "0.17.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.231.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.191.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.197.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1v7wm5kzsjbjr7g9fyg5xxw9008q9ryyzviq7rdgw75r14rbhq0b") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.17.9 (c (n "swc_node_bundler") (v "0.17.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.231.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.191.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.197.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "16qd1jlsnk3xk4blqn9p5306y00fd9p8fa05fjpa5ga8xw4h6r16") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.17.10 (c (n "swc_node_bundler") (v "0.17.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.231.10") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.191.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.197.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0j54461phm8h4zzg6j4lkyhw2pbxc7air3i2gpg74921k61fks14") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.17.11 (c (n "swc_node_bundler") (v "0.17.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.231.11") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.191.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.197.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1yaxc0p2x71pyah38m1f19brmss1sym1r5flxfgi69ib9d00bxnd") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.17.12 (c (n "swc_node_bundler") (v "0.17.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.231.12") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.191.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.197.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "08gq0xn6r1dkmki2zycmfpp2a5z5g1gfnavy7n2i3nqhmghzb34a") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.17.13 (c (n "swc_node_bundler") (v "0.17.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.231.13") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.191.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.197.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "05wzr88bb99d6y7nzjsrk715x7ylcxphg4ahqjpvcsflc004prws") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.0 (c (n "swc_node_bundler") (v "0.18.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.232.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "09nx34c0ap74kv9hd4w1xyhni35slwi6lb03zgd1h70kdd1jj240") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.1 (c (n "swc_node_bundler") (v "0.18.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.232.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1w24hashhc481x4g8jgmwb5xcamjjvmkxrd5win31kib1132v2lv") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.2 (c (n "swc_node_bundler") (v "0.18.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.232.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "161w87pdc671mwj9sa2185qnw29v2bybz7gxw8k8d07sp2l5i80j") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.3 (c (n "swc_node_bundler") (v "0.18.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.232.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1hm1q6h2pvsdhnkp4cshlk4xcr6ainlhkarp6nr4x61bah5a0v05") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.4 (c (n "swc_node_bundler") (v "0.18.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.232.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0gb3cqs17h7gqqah3ha77l9bm8i138hwsziigyn7lvmjv8by5zgi") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.5 (c (n "swc_node_bundler") (v "0.18.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.232.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0hc0hk1f8cbjjz7m71vxsk37hry93jdqxj0sixc37kil4gf0wwqy") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.6 (c (n "swc_node_bundler") (v "0.18.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3") (d #t) (k 0)) (d (n "swc") (r "^0.232.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "00irw476csly0valxdky80d86sjrrzyxjp006ad7mipkj6v3rasr") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.7 (c (n "swc_node_bundler") (v "0.18.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.6") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "17hprjcfbgxi72jdkr3qjflm0zwm3l29cq6n5h10629vqv10dilp") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.8 (c (n "swc_node_bundler") (v "0.18.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.6") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1fjdcdm9nvba77w73wwbx139rc1z7iqj9g0l6sbb4zljlqyhpq5d") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.9 (c (n "swc_node_bundler") (v "0.18.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.18") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.6") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "15rwbjdsxc5id2320glbdjjip00hir9zny0k1vvrcizmpr33q5k3") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.10 (c (n "swc_node_bundler") (v "0.18.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.10") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.19") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.8") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.8") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0sbc3jii1yx0p4k9rg30m7jzdb0q910bhwvhpfqfw1pmdw5ria8r") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.11 (c (n "swc_node_bundler") (v "0.18.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.11") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.19") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "14y8nv98a2kij9dfnl85pcn7rk56ds4qnnqwibgqm9whnbqzingv") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.12 (c (n "swc_node_bundler") (v "0.18.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.12") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.19") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "021x8jm3bkf0y5jgsz041x44w0n853z54spslvbczhlgf3v2q2m6") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.13 (c (n "swc_node_bundler") (v "0.18.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.13") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.19") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1liics5ldr4gdywja2r2p9znc83m64k4k18bglsqva1jjcq8x9nn") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.14 (c (n "swc_node_bundler") (v "0.18.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.14") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.19") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0wysb8hr7g9fvnhy96w0wmjng7ip208dp88z3nw2p4i5svhm7j6w") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.15 (c (n "swc_node_bundler") (v "0.18.15") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.15") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.20") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.8") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.15") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.10") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1s33gm8z81ysf703gp8bmd706gyq1mfhkdq6zx0i496ff2qhkb3s") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.16 (c (n "swc_node_bundler") (v "0.18.16") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.16") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.20") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.8") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.15") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.10") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1k6cadc984ydch7w9j98cr73rd0bwwv17bjgr5hic4f5i716zmch") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.17 (c (n "swc_node_bundler") (v "0.18.17") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.17") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.16") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "12jyplwmhh9s03cygvcp0vq5f2kkjhf00p2jybpd6r3hg90lrmmn") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.18 (c (n "swc_node_bundler") (v "0.18.18") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.18") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.16") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "074by3nsvjqvvx2x3kcdg5wag0frpw2kv1y4svwp4iwgkpi9gh7w") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.19 (c (n "swc_node_bundler") (v "0.18.19") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.19") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.16") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "120m241kfrvqfwv4473kgf6m2z50bf2i2c2mz4846pz5y62ynl0y") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.20 (c (n "swc_node_bundler") (v "0.18.20") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.20") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.20") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.16") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ksxkbvrhxpbrwl7si0hjbk452j566m7r93wbbnmdh8l8lhy5pzm") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.21 (c (n "swc_node_bundler") (v "0.18.21") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.21") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.16") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0d67s2cj2qsv62flxsir3ii21bbrzsxbqn17m7znm6al7s2lbkzy") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.22 (c (n "swc_node_bundler") (v "0.18.22") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.22") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.22") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.17") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1i8zrs304rmqwk9zv88xl6s5zdccad3m33cccrsnv8lq44jinmwf") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.23 (c (n "swc_node_bundler") (v "0.18.23") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.23") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.17") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1cna47ipp1w3prhj7h25c2kirck56gp07q6cl1wy4r6xpbws6yb2") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.24 (c (n "swc_node_bundler") (v "0.18.24") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.24") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.17") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "18zirdk0ld1zsm8kh06iqd1dmy3bma4g74mq3plhbapmydl59hzj") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.25 (c (n "swc_node_bundler") (v "0.18.25") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.25") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.24") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.17") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0g0xrgvq28mriqra991shndcq78yc0v85glakvbzp4dc2kp7cb7m") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.26 (c (n "swc_node_bundler") (v "0.18.26") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.26") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.11") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.17") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1k6hvvliivmps0lg58sv31apl1zdmx46fcpb5cv03mnlw15m37ch") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.27 (c (n "swc_node_bundler") (v "0.18.27") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.27") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.26") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.12") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.17") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0xhiixz95w18b34k6x81jrikwsmdvxq8lzrd4gn3h46fvmjhzysq") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.28 (c (n "swc_node_bundler") (v "0.18.28") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.28") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.16") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.17") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1q42kxa6i2q9kp7q2r8adkws5hhwfjl49nfpyg7mchrk04cv1chb") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.29 (c (n "swc_node_bundler") (v "0.18.29") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.29") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.28") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.16") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.14") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.17") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1mp3m2gpjgc95n44ld04dz85rqmwq38g4v3nlbipnrs140lw9ak6") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.30 (c (n "swc_node_bundler") (v "0.18.30") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.30") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.16") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.15") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.17") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "11yg3vxk1ysmsxbq51bzl74cln6mj99f0hss7nrbr8b475ybqvw3") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.31 (c (n "swc_node_bundler") (v "0.18.31") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.31") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.30") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.13") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.18") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0yjav40w62qmg1czv1slidf97ic4qpskl15ykifq18brnqj7lr3n") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.32 (c (n "swc_node_bundler") (v "0.18.32") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.32") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.30") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.13") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.18") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "15q5xj1d231fld45lr2dsp79kfl35g936p69lx55s2zsbcn4zhzf") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.33 (c (n "swc_node_bundler") (v "0.18.33") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.33") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.30") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.13") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.18") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "030kcvz44d9pc672q612sgsgg7qnbfm5p5jb7m98djb8yabs43m9") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.34 (c (n "swc_node_bundler") (v "0.18.34") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.34") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.30") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.13") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.18") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1zgpbnydizypjmgn90rb2gk62kzv2c26vh5bf7smbmzy85dfiz4l") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.35 (c (n "swc_node_bundler") (v "0.18.35") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.35") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.30") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.13") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.18") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1l8nixzmrsgr263n3039dpml92gj8850bqnkp6rk3h595yh59iv2") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.36 (c (n "swc_node_bundler") (v "0.18.36") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.36") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.31") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.13") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.18") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "10hapzx7lg8ds8kdk4rrkji8285dqw8yw8i42fy8j4x01zqkd6pw") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.37 (c (n "swc_node_bundler") (v "0.18.37") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.37") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.32") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.13") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.18") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0nx5ns232hkjnqijinhbhff03yxzrah2xjz1k2z4aq9v645lqal6") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.38 (c (n "swc_node_bundler") (v "0.18.38") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.38") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.21") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.33") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.13") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.18") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0v6d0g1qv5i83if933dlv3i3lj84x3ws710r5mbfdvrczz9k80km") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.39 (c (n "swc_node_bundler") (v "0.18.39") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.39") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.22") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.34") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.12") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.18") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.14") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.19") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.12") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0zcgzrci4zfnil8vc7npx638j2z75bf1gvnc5sddyh6g5q27cmvc") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.40 (c (n "swc_node_bundler") (v "0.18.40") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.40") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.22") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.35") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.12") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.18") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.14") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.19") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.12") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1677wwkjz37imr5fhqi0afq30awaa3g9lwi0rnwghy9av9l3wf09") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.41 (c (n "swc_node_bundler") (v "0.18.41") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.41") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.36") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.13") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.19") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.15") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.19") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.20") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.13") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0bl0ndij3qgbklh46mrk3ifzqknn894nmk5qni6k52w8pp03933g") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.42 (c (n "swc_node_bundler") (v "0.18.42") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.42") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.13") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.19") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.15") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.20") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.20") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.13") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.5") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "00yagykkwhng0dblbwv77547961bx26c7m0rmxrjfs56693i50hp") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.43 (c (n "swc_node_bundler") (v "0.18.43") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.43") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.38") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.13") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.20") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.16") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.21") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.21") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.13") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.6") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1cg2ma44lfps361jwcm1lbz5mpnkmv3cnpysfb6pfgxbjq8dkgj5") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.44 (c (n "swc_node_bundler") (v "0.18.44") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.44") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.39") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.13") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.20") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.16") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.21") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.21") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.13") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.6") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0y9dx0mpcfr88pg1a1crjmahykxcvz8vm9vz9qn0j6v27frfqpws") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.45 (c (n "swc_node_bundler") (v "0.18.45") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.45") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.40") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.13") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.20") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.16") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.21") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.21") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.13") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.6") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "036q1afs9qblmr3v4a1djwxwyciwzw9g7jky6vlvmxv0mk31hbk6") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.46 (c (n "swc_node_bundler") (v "0.18.46") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.46") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.41") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.13") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.21") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.17") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.22") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.22") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.13") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.7") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0lxyhhgjb7g59crgh85pw8cqh9404zvr4g2p8nklwwsdwspphd52") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.47 (c (n "swc_node_bundler") (v "0.18.47") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.47") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.42") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.13") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.21") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.17") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.23") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.22") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.13") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.7") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1kw56q54hb0w3g202vp4024ddwa422s6pg8v00lxsb7ws2vi1k66") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.48 (c (n "swc_node_bundler") (v "0.18.48") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.48") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.43") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.13") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.21") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.17") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.24") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.22") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.13") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.7") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1dsd8gm9fy04dr147cdnpk50s6s61idhn3krm8rgcj2axa7hjgb1") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.49 (c (n "swc_node_bundler") (v "0.18.49") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.49") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.44") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.14") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.22") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.18") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.25") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.23") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.14") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.7") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "02kibacdahf2ykw95wzcc5hfm5m932hb8xn6zmzy4ys12dp8mcc0") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.50 (c (n "swc_node_bundler") (v "0.18.50") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.50") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.45") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.14") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.23") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.19") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.26") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.24") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.14") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.7") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "186snn7l18bczr151pdfdxa22ybx3cc8sz1xwy2j0bf1xpb3q61v") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.51 (c (n "swc_node_bundler") (v "0.18.51") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.51") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.46") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.14") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.23") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.19") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.26") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.24") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.14") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.7") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "17ca65krlkxgmzjm7xxwjb59cip9nk42v81hrkrwda57yqhw99n6") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.52 (c (n "swc_node_bundler") (v "0.18.52") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.52") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.46") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.14") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.23") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.19") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.26") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.24") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.14") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.7") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1rmnwi8fhs7jx1fanpq0913q2qigbbp7f5a3gysswlzq7f1lczk5") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.53 (c (n "swc_node_bundler") (v "0.18.53") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.53") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.47") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.14") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.24") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.20") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.27") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.25") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.14") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0pan4p1imddj43y1i4ihv06hmk1m7lrw7bqnz1gsivmlkbjy9jw9") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.54 (c (n "swc_node_bundler") (v "0.18.54") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.54") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.48") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.14") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.24") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.20") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.27") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.25") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.14") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1dj835lsin6nzjv98mr905sll77hjzb3ixpfxgvbyvm5q0wspixl") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.55 (c (n "swc_node_bundler") (v "0.18.55") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.55") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.49") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.14") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.24") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.20") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.27") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.25") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.14") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1k7zw6hry8hk551q2mx8v9w2g481b45zm97v9rf3xw3hc91dahzl") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.56 (c (n "swc_node_bundler") (v "0.18.56") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.56") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.50") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.14") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.24") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.20") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.27") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.25") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.14") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1lkpdis265faj8xq7l6jlpiy2rcq8wlibx3nmnab5fwqxl6jlmf4") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.57 (c (n "swc_node_bundler") (v "0.18.57") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.57") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.23") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.51") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.14") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.24") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.20") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.28") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.25") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.14") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1pi357w1asycz8dzg558wqsydxpksyx2225vcw3v65w508nz1bkd") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.58 (c (n "swc_node_bundler") (v "0.18.58") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.58") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.52") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.25") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.12") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.21") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.29") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.26") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.15") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "02ghgzrg0k28xl16ryj4dz289x6irq68xs3zvbxk1w868g742ig3") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.59 (c (n "swc_node_bundler") (v "0.18.59") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.59") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.53") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.25") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.12") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.21") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.29") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.26") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.15") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "07lwd6gg5aw86lzqy8s7yl3xxziq77mncziqcn4l83gn4rfpy8i7") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.60 (c (n "swc_node_bundler") (v "0.18.60") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.60") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.54") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.16") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.26") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.22") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.30") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.27") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.16") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "166sjp67flq4q1hchrn560wlh3q5h28wb4rm862i1qgavpab5p92") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.61 (c (n "swc_node_bundler") (v "0.18.61") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.61") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.55") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.16") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.27") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.22") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.31") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.27") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.16") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0jkay9g5dymlpv4snnxsh15kb5bdkaz4qa6yz5l5r1y6ywbblc6g") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.62 (c (n "swc_node_bundler") (v "0.18.62") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.62") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.56") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.28") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.23") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.32") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0q4n9smfakd87xj5yd65a5bxh1p1vibi2ifcfpvbg4vwcp7zkxgw") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.63 (c (n "swc_node_bundler") (v "0.18.63") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.63") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.57") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.28") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.23") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.32") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1pk80w4ikxsqxp429xi436ja64k83l3lzxc2j5w5i9diylm1aylj") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.64 (c (n "swc_node_bundler") (v "0.18.64") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.64") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.58") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.28") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.23") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.32") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "03rm2xj0z9dqdxap6m52c0d0mcfislzxd1vp89df058wbsxarx48") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.65 (c (n "swc_node_bundler") (v "0.18.65") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.65") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.58") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.28") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.23") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.32") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1sqsvx0b2yd9hs5bsrn71avmgnpdp104md7fqzjva8b01yam8jaq") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.66 (c (n "swc_node_bundler") (v "0.18.66") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.66") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.59") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.28") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.23") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.32") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "10dq9a8s2f500z04fxff1lmsv5rf6i5ks0b6j9x7142q0srhv837") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.67 (c (n "swc_node_bundler") (v "0.18.67") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.67") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.59") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.28") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.23") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.32") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "12vfllibx7mkx9ywqddb65hlajpyzknap6wgpdrzjmnla35rp0wx") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.68 (c (n "swc_node_bundler") (v "0.18.68") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.68") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.59") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.28") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.23") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.32") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0iwx38yzhhv1vkm6492dx554djpk16ljdc7blcnbpcb504inwr4q") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.69 (c (n "swc_node_bundler") (v "0.18.69") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.69") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.60") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.28") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.23") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.33") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0isq8qkmgsb5fhjd7q5cy4zbp6cq9rvq2hg1pcw5yls4pcc32szn") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.70 (c (n "swc_node_bundler") (v "0.18.70") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.70") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.61") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.28") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.23") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.33") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1h1653gcypakfisz1w2ss5zxd129fpcdzqn2ixyal0iy0zkixkd8") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.71 (c (n "swc_node_bundler") (v "0.18.71") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.71") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.62") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.28") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.23") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.33") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1v80yw730x2qgrv88dqjvxbf2y625sy3hv8h8iyl8ni1nxf2v3yy") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.72 (c (n "swc_node_bundler") (v "0.18.72") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.72") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.63") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.28") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.23") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.33") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "18kfqzp60nf9cvlh6i9i80jv5cx5yvqzd4wb2l4a1xlwvyn5fsqx") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.73 (c (n "swc_node_bundler") (v "0.18.73") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.73") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.64") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.28") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.23") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.34") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "11kskkv0wabx9jxbvwzsxl22zfjyry7z8p266i3m700mzwwn76r3") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.74 (c (n "swc_node_bundler") (v "0.18.74") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.74") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.65") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.28") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.23") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.35") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "13n5zc255pipsh3difdq2fzhkj9axgvrqkc5qvlpkxzj6rp88xhm") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.75 (c (n "swc_node_bundler") (v "0.18.75") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.75") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.66") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.29") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.24") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.36") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0nq8zr4yb6ar665d3lqk0yl3kwy7s7mz8h6fq5pwqll3malgffqg") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.76 (c (n "swc_node_bundler") (v "0.18.76") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.76") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.67") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.29") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.24") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.37") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0dmxh99djvwg8w4hw34a4yngb1fplg6k1g41pk7ypwm4423zqiqf") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.77 (c (n "swc_node_bundler") (v "0.18.77") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.77") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.68") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.29") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.24") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.38") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0amyjg0x582c1bpp5yv229mjqn30wzwisr8471a5i569r52m7m3l") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.78 (c (n "swc_node_bundler") (v "0.18.78") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.78") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.69") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.29") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.24") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.39") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1r05s1iray70qh0cq2lsgmfsgj0slhp910jwvvlb6amarpgflhwg") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.79 (c (n "swc_node_bundler") (v "0.18.79") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.79") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.69") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.29") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.24") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.39") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ik9ri097npp06vkyrwv5whpmwm2sh1x1668mgsh5iyn0z0j6ki4") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.80 (c (n "swc_node_bundler") (v "0.18.80") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.80") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.70") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.29") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.24") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.40") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0w0gzc9jyf0bci1r4ihp0b765gb6l0cz7m5hcymbm9gxvqzk21sa") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.81 (c (n "swc_node_bundler") (v "0.18.81") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.81") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.71") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.29") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.24") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.41") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.17") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0pzdk6bfmngjws526b0jsyz9bgffvwm9bwv0wri692d1n46my8pl") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.82 (c (n "swc_node_bundler") (v "0.18.82") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.82") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.72") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.18") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.30") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.25") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.42") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.30") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.18") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "086yr02npcykw8n03cfaqklzyl7vrljrci0n9z9i483vlhhvsm01") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.83 (c (n "swc_node_bundler") (v "0.18.83") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.83") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.72") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.18") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.30") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.25") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.42") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.30") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.18") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1r0lvni0wwkl8ifrx1vczfcl39xbp2xjk2nz4a4igr86y13dmrpq") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.84 (c (n "swc_node_bundler") (v "0.18.84") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.84") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.73") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.18") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.30") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.25") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.43") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.30") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.18") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1yn26c1ja7s028m8a770bnjs6agykwr0nw4rba573f2i3ymcdvqi") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.85 (c (n "swc_node_bundler") (v "0.18.85") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.85") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.74") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.18") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.30") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.25") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.44") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.31") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.18") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1jsshjl55jk0lfhnw06hxzpz93vis9fka5l5200ipc1bk36mnwgz") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.86 (c (n "swc_node_bundler") (v "0.18.86") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.86") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.75") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.31") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.45") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.32") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0igyv6flz34n0bwgsjb4i4wp571258j7qnj27ma4czx4365yr9n5") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.87 (c (n "swc_node_bundler") (v "0.18.87") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.87") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.76") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.31") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.46") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.33") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "05wyp2pyc21gikw6m6n3cqhchjs3vibwb1npzkf3xixrwxr65ir4") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.88 (c (n "swc_node_bundler") (v "0.18.88") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.88") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.76") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.31") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.46") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.33") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0z8xfjnx9m4pryhl935ardcsjkxfjz893jdsa5fkvc56hhv5p4bm") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.89 (c (n "swc_node_bundler") (v "0.18.89") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.89") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.77") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.31") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.47") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.33") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0xds8wdlj2jsr0jlsfkxxglxchm07hq8wqkj40lip08vjh34qwr3") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.90 (c (n "swc_node_bundler") (v "0.18.90") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.90") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.78") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.31") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.48") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.33") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1f96s144kwxs173pz73cb8366yy4lqj6w54wh7j6il4vqdrh8x77") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.91 (c (n "swc_node_bundler") (v "0.18.91") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.91") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.79") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.31") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.49") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.33") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0zsbh8qywlbksb8c8k75h5djiv2zah0wv6g43bbxqv677hlzd07x") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.92 (c (n "swc_node_bundler") (v "0.18.92") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.92") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.80") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.31") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.49") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.33") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "19h9immy79s45l3ngfm0hwc3vxq7macdbnhhj0f2nywfjsb0gal1") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.93 (c (n "swc_node_bundler") (v "0.18.93") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.93") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.81") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.31") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.49") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.33") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0aggc72979ql2gy8c7p7bbqnl1n4gg1qrirnyfiaccjhy1qsa7yb") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.94 (c (n "swc_node_bundler") (v "0.18.94") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.94") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.82") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.31") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.49") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.33") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1my4yj35dp5d9cfj80lkg7l0l9z6as3bxll21nap0y61ykbgnv9j") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.95 (c (n "swc_node_bundler") (v "0.18.95") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.95") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.82") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.31") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.49") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.33") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "15x28wb6hrvr4addg9xxllrix1najm5pgwr687r7gqnl7dzcg8is") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.96 (c (n "swc_node_bundler") (v "0.18.96") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.96") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.83") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.31") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.50") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.33") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0bf5nb21jsi8lqkb8wvv9610422rgv7ciy2rg04pc460qglwscbx") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.97 (c (n "swc_node_bundler") (v "0.18.97") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.97") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.84") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.31") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.51") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.33") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "12zp64xzfvhhgcgs479aphygn9i12d1y865wvdiahx0sx1yrkzm9") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.98 (c (n "swc_node_bundler") (v "0.18.98") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.98") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.85") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.31") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.52") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.34") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "15p3l428ja3zx4zsj3zq5b2ah1mis17nihvrz60yiwg6h38sp3sl") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.99 (c (n "swc_node_bundler") (v "0.18.99") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.99") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.86") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.31") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.52") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.34") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "19270nmxjyarp9rx8996z8npbgk84c0ll6k0rs049qz815l6s6pd") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.100 (c (n "swc_node_bundler") (v "0.18.100") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.100") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.86") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.31") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.52") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.34") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ki6qpjr8rd308h29gz4qkpqcc3a9zr3hma596cadvmj2sfi3w7r") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.101 (c (n "swc_node_bundler") (v "0.18.101") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.101") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.87") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.31") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.26") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.53") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.34") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "05x0rgp0wll429igzrl2zkk26s29mn28mv0wmdsgw0i2yyn0wjmj") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.102 (c (n "swc_node_bundler") (v "0.18.102") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.102") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.88") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.32") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.27") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.54") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.35") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1b0qvs8d8bh4vshi24jiddhlimxk80s2jm9d5j16yw84q8siprx4") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.103 (c (n "swc_node_bundler") (v "0.18.103") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.103") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.24") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.89") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.19") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.32") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.15") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.27") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.54") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.35") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.19") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "02cy46w8vr4nqzb3a6kl6ddzj9frccjw8rk4ryh2c9l7rz92fsry") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.104 (c (n "swc_node_bundler") (v "0.18.104") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.104") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.90") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.20") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.33") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.16") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.28") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.55") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.36") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.20") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "17djn0s4cczj50lcw674i016827vigpap8nn51iw8mlxcy1mjns1") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.105 (c (n "swc_node_bundler") (v "0.18.105") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.105") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.91") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.20") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.34") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.16") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.28") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.56") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.36") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.20") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0j6gpppbghrdyrbjjrkmkyisw21x0h0g7ir7n79597wc8dzp3cl8") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.106 (c (n "swc_node_bundler") (v "0.18.106") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.106") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.92") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.20") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.35") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.16") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.29") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.57") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.37") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.20") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "03vxsk7pnyxzkx2vpchlmla0c2bgimqggm4flas04igw2kg63kqm") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.107 (c (n "swc_node_bundler") (v "0.18.107") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.107") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.93") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.20") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.36") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.16") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.29") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.58") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.37") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.20") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0gdydhspgr7i7vaq9hb9p7818qpib0iapx7lg9admmg1ka093rln") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.108 (c (n "swc_node_bundler") (v "0.18.108") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.108") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.94") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.20") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.36") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.16") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.29") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.59") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.37") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.20") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "00czs624hwdj1yjbadh6hcdvfv7km10hw2q3dsr87nzp1nbqnbj7") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.109 (c (n "swc_node_bundler") (v "0.18.109") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.109") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.95") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.20") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.36") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.16") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.29") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.59") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.37") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.20") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0v5jq5d9fhyw3lpxsvy6ngsa9hqd8hdd63s1bzwail5hlabzb26s") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.110 (c (n "swc_node_bundler") (v "0.18.110") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.110") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.96") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.20") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.36") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.16") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.29") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.60") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.37") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.20") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1bhj7ba7b6nfbpiixxa15hr3cydal12rc2cmd9bygldm8zcwsnix") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.111 (c (n "swc_node_bundler") (v "0.18.111") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.111") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.97") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.20") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.36") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.16") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.29") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.61") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.37") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.20") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0zc62r3nyxcvlvp1k87wa3gp704gad5br35lk773vxcyca0kz89x") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.112 (c (n "swc_node_bundler") (v "0.18.112") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.112") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.98") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.21") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.37") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.17") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.30") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.62") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.38") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.21") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0wqmq0jzv8xl4zlcrm3xbm3kbyaf7zzf8ss2hxcp5r3k18bijcsh") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.113 (c (n "swc_node_bundler") (v "0.18.113") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.113") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.99") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.21") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.38") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.17") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.31") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.63") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.39") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.21") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0ldnh89qzfk3ib967q0c5xbfq1rhd51ip684y0k2hpnrvg1ylcqb") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.114 (c (n "swc_node_bundler") (v "0.18.114") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.114") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.100") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.21") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.38") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.17") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.31") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.63") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.39") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.21") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "19b7hzxx4qlcsbjhyhlb625rj5cl4qix5dx4wfqhnld60jsk14w8") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.115 (c (n "swc_node_bundler") (v "0.18.115") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.115") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.101") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.21") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.38") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.17") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.31") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.63") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.39") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.21") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0vfl7d0shim1lfmg91a11kx6n8kj0kwibhq4dyhi71cimsl488l8") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.116 (c (n "swc_node_bundler") (v "0.18.116") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.116") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.102") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.21") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.38") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.17") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.31") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.63") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.39") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.21") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "08m8szsnns51a4lzijins75v7yfli0zdjwng3566hisi90mxqn2y") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.117 (c (n "swc_node_bundler") (v "0.18.117") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.117") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.103") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.21") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.39") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.17") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.32") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.64") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.40") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.21") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0vzqsbzisvz2krawwfmpnnqdiydpxj8vqf5zh443ik65jirrwwcq") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.118 (c (n "swc_node_bundler") (v "0.18.118") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.118") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.104") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.21") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.39") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.17") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.32") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.64") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.40") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.21") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0g4g3gl4kg8c88zqlh2l0xkjx37r3q4mgl51il2zbbcshrip5ffp") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.119 (c (n "swc_node_bundler") (v "0.18.119") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.119") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.104") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.21") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.39") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.17") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.32") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.64") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.40") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.21") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0w4sag0blga5vvsmmjmp0fadwj76mpp4wq4k3d8x2wcabppq4d79") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.18.120 (c (n "swc_node_bundler") (v "0.18.120") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.232.120") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.192.104") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.94.21") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.127.39") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.17") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.122.32") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.198.64") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.105.40") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.80.21") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1y4xaymd7p0xmqj73pwimn1ygbrf6sxcp7fw771rxdg1j5ivkb3x") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.19.0 (c (n "swc_node_bundler") (v "0.19.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.233.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.17") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0g2fyfdb0ln1iav4v7ww88k9pnrq8qr1g6biysvmp6r0iaf60zdv") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.19.1 (c (n "swc_node_bundler") (v "0.19.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.233.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.17") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1yx1wpd7xbc596h3zxh2vcp936q77gz9am5sljzbmy7w3xpijyy7") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.19.2 (c (n "swc_node_bundler") (v "0.19.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.233.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.18") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.18") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "02l4sagh6zr6vw2riqkz6gxsyqzy0wj81zkdzx54cyms5l6ia0hh") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.19.3 (c (n "swc_node_bundler") (v "0.19.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.233.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.18") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.18") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "15ahah2jf6mdy4rcxij7m4pqapz4fy4r99xlglm6h6ddghq6q7m4") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.19.4 (c (n "swc_node_bundler") (v "0.19.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.233.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.18") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.18") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0hy9vksymw2qs2jqx5fff3vccymw0q0d1c5n1sxpd3z01afgdxcd") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.19.5 (c (n "swc_node_bundler") (v "0.19.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.233.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.19") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0vwww6l222hv7msvshzi36rdbpvja32j67raszr8asaha3dlhhwa") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.19.6 (c (n "swc_node_bundler") (v "0.19.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.233.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1cm0zci8nmm1gxz4l3jakdqmpp9la08kwd0rsv3a8lwhr5rljacy") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.19.7 (c (n "swc_node_bundler") (v "0.19.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.233.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0bqzh6nhii607qy0g9zwwd5l2pdc0wah2zq7221x8jyh7mpk4ck4") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.19.8 (c (n "swc_node_bundler") (v "0.19.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.233.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "050wc50xajkb05jswdf626pp7yrmp34cfx433m8nvz9dshbnw2r5") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.20.0 (c (n "swc_node_bundler") (v "0.20.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.234.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0q5iw6bdpb3hyi55ywh49w8pw1pnz4l8hk6ddf21lyx3qv4kzlk5") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.20.1 (c (n "swc_node_bundler") (v "0.20.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.234.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "00rkm714zxrlkil94faxrcpmg0plh5nir2j00qva40jdac1s5zs5") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.20.2 (c (n "swc_node_bundler") (v "0.20.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.234.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1sl5xdjpq9n1svlb5awsrxi3f955bwbhc7k1s99hc27s7jhk04mc") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.20.3 (c (n "swc_node_bundler") (v "0.20.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.234.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0srz7lbsmd473s06zcc7pra86v87725bjdivnlg4sk6s7yi82l38") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.20.4 (c (n "swc_node_bundler") (v "0.20.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.234.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0a4qr9szc0f8vvk8igar9013h5xpqvz1s1vz0wwg630ybmhq1clv") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.20.5 (c (n "swc_node_bundler") (v "0.20.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.234.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1lik7rklr0kbknv1b74qafzjy896agqr5ngz0crms1ibiwcxsnaq") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.20.6 (c (n "swc_node_bundler") (v "0.20.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.234.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0ph2yspnlc4hnz8hn3iwjvmvajjywr1pvggdlrs3y1pkmf610ifc") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.20.7 (c (n "swc_node_bundler") (v "0.20.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.234.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "11kb15s316d6yqqfbfs13byvbbri2jbn5nwrykhghkcb2km53a5f") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.20.8 (c (n "swc_node_bundler") (v "0.20.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.234.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0q9rg5msmmz0x37j3wf62w8100g0bj0r79807nvhrv5wsnsk842n") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.20.9 (c (n "swc_node_bundler") (v "0.20.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.234.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "032raarny0xmgf8023ypp1n64wmmqkhikz5yw4ksjrpmdhrbida0") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.20.10 (c (n "swc_node_bundler") (v "0.20.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.234.10") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0fd50hah75fby5jpn4nghv8xrkpa3al7fpks99z1ihk7i73qhza4") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.20.11 (c (n "swc_node_bundler") (v "0.20.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.234.11") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1xaqid1w4jyjpnx4avldbszbk381kgzblz50xlb13d6smlsdqsmx") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.21.0 (c (n "swc_node_bundler") (v "0.21.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.235.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1i66s7jr4ns3b485zpvnzpq8p0iky831qr7n94r6aw0jpiiwmkbs") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.21.1 (c (n "swc_node_bundler") (v "0.21.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.235.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0s36h2hyips1mh5vj0z780g80zjxfrp9a6c98cg93453yvi9b3sa") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.21.2 (c (n "swc_node_bundler") (v "0.21.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.235.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "00w0z235c05fl2m6qz46c14q9bz16mi9frf16i5193md1l0yys86") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.21.3 (c (n "swc_node_bundler") (v "0.21.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.235.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.25") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.11") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0yw1xvfczz16i34sk0bivdbiqxd8ambfwsakslvm1vlvhchb9rx1") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.22.0 (c (n "swc_node_bundler") (v "0.22.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.236.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.26") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.20") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.21") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.12") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1n5kqz4rws9bsnyrfa05wz0yk6dx0l4nz1c9hvalycd29x3nw9wn") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.22.1 (c (n "swc_node_bundler") (v "0.22.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.236.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.27") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.22") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.22") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1bs52jmiyv8hndcciszaxhw5dy8m8w1z9dan2k1hfwny8x3kbpvw") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.22.2 (c (n "swc_node_bundler") (v "0.22.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.236.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.27") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.22") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.22") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1xg3ygpji67anawia9hk9wjvh8fkwwq5l5l8jj5pbpb0wxlpkiqr") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.22.3 (c (n "swc_node_bundler") (v "0.22.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.236.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.27") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.22") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.22") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1wpaxia29vwnk54snfxq37km7yhqv3nvr4mvjp3h2gdf9d6n0d45") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.22.4 (c (n "swc_node_bundler") (v "0.22.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.236.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.28") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.22") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.6") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.23") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.14") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.23") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1cvgk17l3zbq9c7hjsm674ab9nazqbkzzxk6isvk2vh8hqqrd8a7") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.22.5 (c (n "swc_node_bundler") (v "0.22.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.236.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.29") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.24") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.15") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1y84viv7mwj31vzhf6xd8hvnp8l3d0f7masxf2zkjf8hnlzp2lhy") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.22.6 (c (n "swc_node_bundler") (v "0.22.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.236.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.29") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.20") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.24") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "14iqzl38mm5siby1m9aa9qhg222dd5mc9iqk0jgsx14iaf7gfkw0") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.22.7 (c (n "swc_node_bundler") (v "0.22.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.236.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.29") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.24") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1dyihawnw7f5ydnvvzsgijdgfsdn6kxap9l32bqln821y2yl04xk") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.22.8 (c (n "swc_node_bundler") (v "0.22.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.236.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.29") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.22") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.24") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.25") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "10w2f0503f785vb7z76sg1d53jm8qdz1ayzs328s84zmjkisf6fw") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.22.9 (c (n "swc_node_bundler") (v "0.22.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.236.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.29") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.22") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.24") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.25") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "080wrmqyi05gpl2im0c564qpylbb7d4ffhndgqlm9d9ss7p51y8n") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.22.10 (c (n "swc_node_bundler") (v "0.22.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.236.10") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.29") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.22") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.24") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.25") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0w1g727i2a4m6yc24wbah214kfcjzzj1gay6xvnk6rrqc87mmjcg") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.22.11 (c (n "swc_node_bundler") (v "0.22.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.236.11") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.29") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.24") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.25") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1yfr7fxyjf30qhdbfp80ab9l9524mn34jmsxzdngi8d1kaz6vr1c") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.22.12 (c (n "swc_node_bundler") (v "0.22.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.236.12") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.29") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.24") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.24") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.25") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1cqrlrs8jmlvd8mbma53gwg4szq5inva0d3mv9b2rgc62m6ylj3i") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.22.13 (c (n "swc_node_bundler") (v "0.22.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.236.13") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.29") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.24") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.24") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.25") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "01bvhckmllpd849fvmxz4nq6p7s088f2fccgwkhbhh07pzvkkd9r") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.22.14 (c (n "swc_node_bundler") (v "0.22.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.236.14") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.29") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.24") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.24") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.25") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0khjfx61r0k6av8fq18pg6jb3l550xgi59gy0dz95gkk5lsf7jrx") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.22.15 (c (n "swc_node_bundler") (v "0.22.15") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.236.15") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.29") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.24") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.24") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.25") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0a288qb6b570gvbls0f8kbh3cxx5zkhik0a4mcpn4ygbj12qkzmr") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.22.16 (c (n "swc_node_bundler") (v "0.22.16") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.236.16") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.29") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.24") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.24") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.25") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1kf4jsl29pmpbzsbh8hsjp51jr52mv3069mh7hm2y4h2xl473c2i") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.22.17 (c (n "swc_node_bundler") (v "0.22.17") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.236.17") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.29") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.24") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.24") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.25") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1q9j1kfifi5gn7wy2cb75slfkw5z7yac8wdlig4yrmbwq465z1jj") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.22.18 (c (n "swc_node_bundler") (v "0.22.18") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.236.18") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.29") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.24") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.24") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.25") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "05y59l954pfjkrvdzfw33pvf0iyvkdm97s1rj0n2c4rpjf2v06z2") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.22.19 (c (n "swc_node_bundler") (v "0.22.19") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.236.19") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.31") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.24") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.8") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.25") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.8") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.26") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "00wmpwfxjp5h57qs1d3mmv5sahk3iad4n5yxh27jdg5fsgd3qvbv") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.22.20 (c (n "swc_node_bundler") (v "0.22.20") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.236.20") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.31") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.26") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.24") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.8") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.25") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.8") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.26") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1x2q9dyal10zarcy7pcl3zpvw6im6qrdmc0027is1p8bcjrx7sy3") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.22.21 (c (n "swc_node_bundler") (v "0.22.21") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.236.21") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.31") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.24") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.8") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.25") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.8") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.26") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0lifglmri9sqzrrhz376mj7n01rsgvnxmp9jm0yc9q6xaiyj6zhs") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.23.0 (c (n "swc_node_bundler") (v "0.23.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.237.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.31") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.24") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.8") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.25") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.8") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.26") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0hp940gf5fwx1ndzjvqprpin4l5vcdcnccfq43azwxxxgx78mipv") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.23.1 (c (n "swc_node_bundler") (v "0.23.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.237.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.28") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.13") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.19") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.27") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1jqfzv70p6im5mbj4d6gzgn3d2dicg4fr19rnqvw6cagh8if8ryl") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.23.2 (c (n "swc_node_bundler") (v "0.23.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.237.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.28") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.13") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.19") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.27") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0fh3jhfgmlfpj72xa4yxw01x5agj8i4nxv1dxlglsxn2nqr1hzn5") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.24.0 (c (n "swc_node_bundler") (v "0.24.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.238.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.28") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.13") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.19") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.27") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1kfx5jdc3fw2z6z8l28dazqbk15ifj7ax282iffjg5lfq8vxa9la") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.24.1 (c (n "swc_node_bundler") (v "0.24.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.238.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.28") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.13") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.19") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.27") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1zrz0bnm09m73j58jklgybpcg036010wcsirlkms53bpmbxccy2q") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.24.2 (c (n "swc_node_bundler") (v "0.24.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.238.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.13") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.20") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.27") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "15mcdjxb7kw49jqx0ad83jwni8qqh80v59b9yzgk17562dq5a6w1") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.24.3 (c (n "swc_node_bundler") (v "0.24.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.238.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.13") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.20") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.27") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0ra0ssrnp9k1n9k118a5av9719s9vbxcc9mpi7by8nwj14mpid3d") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.24.4 (c (n "swc_node_bundler") (v "0.24.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.238.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.30") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.13") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.21") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.15") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.27") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "04bw31chxarvhnmmx21qsykm03s5rf5p8g74hhl8sy248rzix3x7") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.25.0 (c (n "swc_node_bundler") (v "0.25.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.239.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.30") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.13") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.21") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.15") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.27") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1w9d97rbzpc1l1dsahcrw9sjcw9ln61mn73a70k79n1l660944ww") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.25.1 (c (n "swc_node_bundler") (v "0.25.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.238.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.31") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.13") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.21") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.15") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.27") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1l69v1z0da6j0ax2ja847jd6wdy60ndknvv8z1kplpkqjpjgjfkn") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.25.2 (c (n "swc_node_bundler") (v "0.25.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.238.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.31") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.13") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.21") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.15") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.27") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1xmw5lfynh6ifhsnmvnml5gclwmzics5rsmgnq6wibwdklhbwwci") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.25.3 (c (n "swc_node_bundler") (v "0.25.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.238.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.32") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.16") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.14") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.22") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.16") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.27") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0a7ify4r9jrp3w3sgxc7gb9zi61vrw26qzjnlrc3113bxp7w1pry") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.25.4 (c (n "swc_node_bundler") (v "0.25.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.238.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.33") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.16") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.14") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.23") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.16") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.27") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "06n1bxvghqgbkq66nba6rwkpcz74gnwb88aqb92vfvw8ci7mbgpy") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.25.5 (c (n "swc_node_bundler") (v "0.25.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.238.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.33") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.16") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.14") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.23") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.16") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.27") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1xix1g5vfmnqiqp17rsnwpjh9dr3l5vb2px9bbhjil2rlrp3dr2g") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.25.6 (c (n "swc_node_bundler") (v "0.25.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.238.10") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.34") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.16") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.26") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.14") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.24") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.16") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.27") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "099dd4w83mhn51bl4322pnz3v7iz0v879zgq7rhx7j5rfjmapnql") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.25.7 (c (n "swc_node_bundler") (v "0.25.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.238.11") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.35") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.26") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.27") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.15") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.25") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.17") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.10") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.28") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "101hykzqshknysyg5i8ibdxajkc1a0qipxd56i3hipxaxpiwz04q") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.25.8 (c (n "swc_node_bundler") (v "0.25.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.238.12") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.36") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.26") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.27") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.15") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.25") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.17") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.10") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.28") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0fi8ifvspgyvp70v2dmvrhfja8krsbark8jwq7r6ndnnf02sq21f") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.25.9 (c (n "swc_node_bundler") (v "0.25.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.238.13") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.18") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.16") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.26") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.18") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0h5zdhq645v8pfhicx6d98p1f0rkswnxz951p95r6788b00r51b4") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.26.0 (c (n "swc_node_bundler") (v "0.26.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.239.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.18") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.16") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.26") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.18") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1c5ilmdd1zybinlpq2h04wxv96xgfc5rgngjjjljpych8lnyhajv") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.26.1 (c (n "swc_node_bundler") (v "0.26.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.239.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.193.38") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.95.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.128.18") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.123.16") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.199.27") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.106.18") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.81.11") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "04pl6624jgcl37y6p2z2xpgh9iwai1dy9a6s3a2jhbqq9v342pix") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.27.0 (c (n "swc_node_bundler") (v "0.27.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.240.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.194.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.200.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0fn294cr6zm15fn2xj6fwyn5fapllqh51fjxj0s333bspl82mj4a") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.27.1 (c (n "swc_node_bundler") (v "0.27.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.240.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.194.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.200.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0c6yspjwkih4c1zzpn5afv6j2ygxyl4ynkmzs1drx44gflc07a9n") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.28.0 (c (n "swc_node_bundler") (v "0.28.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.241.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.195.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.200.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1l24ssfxqcqd1q4nqmyw49ypb6lkxvfarwwmvkx2yhzmjcwdmnzj") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.28.1 (c (n "swc_node_bundler") (v "0.28.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.241.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.195.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.200.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1fac7y615r9nikvlbqncfcrschb1hqcddmba0j3w7dsjs1jkh6xy") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.28.2 (c (n "swc_node_bundler") (v "0.28.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.241.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.195.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.200.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0arkm4ycgzrwqcsps89846lksj5giswb6yr1g572xsd12nh8air2") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.28.3 (c (n "swc_node_bundler") (v "0.28.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.241.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.195.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.200.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0afrhrx4zib8n50zzkrzqvljz55mcy028j5zaysix4cqkmjxj85n") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.28.4 (c (n "swc_node_bundler") (v "0.28.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.241.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.195.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.200.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1w5f2h5672bwn6mmdmjvhfgqnwd66kp8gc4f85368h980g32sl7n") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.28.5 (c (n "swc_node_bundler") (v "0.28.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.241.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.195.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.200.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0fhjdhxah7f8972qd9ag3qnyk6gl5y70cycv2z8apf9z7dlhid36") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.28.6 (c (n "swc_node_bundler") (v "0.28.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.241.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.195.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.200.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1kpcsm11bfbmnljka9cfm1vph41m9gccfh6ayv23gq5k966qskmr") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.28.7 (c (n "swc_node_bundler") (v "0.28.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.241.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.195.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.200.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1a3ib5c5vyj357vkz931bx9n10s4pvm3842a5zhhb9m2x1mdi2ib") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.28.8 (c (n "swc_node_bundler") (v "0.28.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.241.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.195.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.200.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "02k7jjlibzjs4bbkjxw2bmvzsqsp7hwih7h001hwcs4q0jqxs542") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.29.0 (c (n "swc_node_bundler") (v "0.29.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.242.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.196.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.201.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1zzl6g7v7wimb23ivzd0cfl6m165fblmjp92a5ilhvm111j60mz4") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.29.1 (c (n "swc_node_bundler") (v "0.29.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.242.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.196.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.201.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1y05fww26yf8q0r778r8zml9c11j8f2gdrdsqv1kdcb0jiqxpa87") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.29.2 (c (n "swc_node_bundler") (v "0.29.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.242.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.196.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.201.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "07m3km7y9anl20zkl4mhy8xwn5jarjaidb7vy4wqm1fwfa917d7j") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.30.0 (c (n "swc_node_bundler") (v "0.30.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.243.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.197.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.202.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0f0kbmfsardij321grdp5rkmqb12xxcfd2xcrwydn2caf2l58dqg") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.30.1 (c (n "swc_node_bundler") (v "0.30.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.243.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.197.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.202.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "14i2lzbbkbmmjcxiva2kq06x4fc9is11fl8xr4d1ip5a555pwdz4") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.30.2 (c (n "swc_node_bundler") (v "0.30.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.243.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.197.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.202.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0rgbql7g7jgxykq6sgyhkiak09jj9az62aj9ibfm0zqx9nxxfyhc") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.31.0 (c (n "swc_node_bundler") (v "0.31.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.244.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.198.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0whdzn8pll0s5ckcbhc7kka1x2dxdyh36ak9229yk10pw2q537vs") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.31.1 (c (n "swc_node_bundler") (v "0.31.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.244.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.198.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0acz2ssxblk3p0jzzshfawlnyn9sgdfy8bmqpbd1jvb3pmpma1jd") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.31.2 (c (n "swc_node_bundler") (v "0.31.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.244.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.198.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "003chkvh1y99ljjbvl562vgf5i1alvfi9vfdq6i3mq104g3vac85") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.31.3 (c (n "swc_node_bundler") (v "0.31.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.244.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.198.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0idnayqfk0brwcml57achs22g0mbm7wk27pi32nf0if8fy13sfm4") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.31.4 (c (n "swc_node_bundler") (v "0.31.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.244.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.198.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "01cg8pgjy7f8k5nz5670b4nm084aik41dj10asfd93dm6npzg9r3") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.31.5 (c (n "swc_node_bundler") (v "0.31.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.244.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.198.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1g7vv35szh9y8izk9kwj06r575q3hdqfppswmlnq6c2rd7h0c9sj") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.0 (c (n "swc_node_bundler") (v "0.32.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.29") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0rc1s27853dm62bvyngmsgz5xmx9b3fmyr4ndpn53fjk7kv54g25") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.1 (c (n "swc_node_bundler") (v "0.32.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.28") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.29") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.30") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1r66hdragvchjzxjain0zqi47a3rsq2x063k57g643b0krn9py9i") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.2 (c (n "swc_node_bundler") (v "0.32.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.28") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.29") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.30") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1p3l3pfxaw0lljbzhhqlpi42wybc3xc6q69vx3gavh0v2wiymxah") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.3 (c (n "swc_node_bundler") (v "0.32.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.28") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.29") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.30") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1giqipr6xgn5awxihn9z2zv1i2l5y2lxa3c8yxjb072fm29xz94m") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.4 (c (n "swc_node_bundler") (v "0.32.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.28") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.29") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.30") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0fhi75pbq0qgzp3wi7xr8ykngi1khd2qpsvmgk656dy5w66m4qma") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.5 (c (n "swc_node_bundler") (v "0.32.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.28") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.29") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.30") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1405iv15cw85mzn202a2jywgj5afnj41h4ya0y0nna60wm7j34dr") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.6 (c (n "swc_node_bundler") (v "0.32.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.30") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0bpqafqnbp7wjzzwwiqc5zrmmbxy92a1l18ik4yc9yvqp75ccfxx") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.7 (c (n "swc_node_bundler") (v "0.32.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1m60g1rmghhgq37086gj7gaffdsq277p7r5763cqy8p834xm691i") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.8 (c (n "swc_node_bundler") (v "0.32.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0xnlbbdm6ww1hffaqdbsggff3sn27qpv6d9zz85z0v2a8ibdbnwx") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.9 (c (n "swc_node_bundler") (v "0.32.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "14m2h9bnw9zr967j3cf4yz2yhf89sfh9qlwv52m78pnlkiq6i0p6") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.10 (c (n "swc_node_bundler") (v "0.32.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.10") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1v26q42qid7cyqx387pj13xb05mliz32g5085j5ibd8dqxbpmgal") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.11 (c (n "swc_node_bundler") (v "0.32.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.11") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "11492szs6qik7ra39c0f8cdfdmivjp2s94hb0g02w1k000wsnd5j") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.12 (c (n "swc_node_bundler") (v "0.32.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.12") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "187lxlqlrnf5wdmilx1mi8jgby16wn0nbi0gbc8grixqybrxpl1w") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.13 (c (n "swc_node_bundler") (v "0.32.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.13") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0z7nj0m8h8a31njdyjkf56ccyz3gad4pl3b18zmz5hr6hmq7y92w") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.14 (c (n "swc_node_bundler") (v "0.32.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.14") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.11") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "02fa95pzx3f4czsszni7m3w9n7gah9vkrk355cw1067v192xkzr9") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.15 (c (n "swc_node_bundler") (v "0.32.15") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.15") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.12") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0m2rpk3nc9m589gbyk1wxricbh8swl88ffkzska2sdz7isb87b00") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.16 (c (n "swc_node_bundler") (v "0.32.16") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.16") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0wbm8mgay2j4hr11cspxnz4g1kq2wi9hwbqjfvjw722lrcq7a6al") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.17 (c (n "swc_node_bundler") (v "0.32.17") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.17") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1xsxs14g6hairykhq9120x6va2scj9xxj1qi321pqf1pxm9l102m") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.18 (c (n "swc_node_bundler") (v "0.32.18") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.18") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.14") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "15zd3zcfmi2k3sclig62f9mblzz9n1icb7l9s71xw2yrdli3qlky") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.19 (c (n "swc_node_bundler") (v "0.32.19") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.19") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.14") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "11ymcapb15nq92kkff7x1hhbnayrl3pbgh3ryqys3b6d523jh9aw") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.20 (c (n "swc_node_bundler") (v "0.32.20") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.20") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.15") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1bi4ridad1mqa7n2gf975r2x56snw9n10fy5iji932jkzbif4xmc") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.21 (c (n "swc_node_bundler") (v "0.32.21") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.21") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.15") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0qcp695kpm45p3db4vhii9dcaq3nipm816vrpkcglgzbrmicc9v4") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.22 (c (n "swc_node_bundler") (v "0.32.22") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.22") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.32") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.31") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.15") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.31") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1z8di4gq936m9bj03l2yb74vw33afhxzg9db8s7jm3p6cphn43y3") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.23 (c (n "swc_node_bundler") (v "0.32.23") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.23") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.35") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.30") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.32") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.32") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0p1w4gridgm1y7bw83niv2rny1miwm2nraxp9cw5iwyrs5cl2ypq") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.24 (c (n "swc_node_bundler") (v "0.32.24") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.24") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.36") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.20") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.31") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.33") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.33") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1hggqkin3jmbq3aivqzd70c2cs2v8dsq2d9p926pl2kg1z4b5lvw") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.25 (c (n "swc_node_bundler") (v "0.32.25") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.25") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.36") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.31") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.33") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.33") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0i9rf8br2pq7x0d4l9mxdm6lxc5yz1p89lim5jq957xnvyz49rax") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.26 (c (n "swc_node_bundler") (v "0.32.26") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.26") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.36") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.31") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.33") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.33") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0ggxmi4g22ywnjj2bz9dl51y7snciqfn3qnvgpxdjh97jviqbdp6") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.27 (c (n "swc_node_bundler") (v "0.32.27") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.27") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.36") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.22") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.31") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.33") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.19") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.33") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0s3glkmiym5qns5gbnrqdmhmx1s5vs4ld4wzpr9i8v3y9r54015y") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.28 (c (n "swc_node_bundler") (v "0.32.28") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.28") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.36") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.31") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.33") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.20") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.33") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "02kc5smkkc5ad6hqg5p036jl9jiq4p8ry0r338wkrbcci6m10mqi") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.29 (c (n "swc_node_bundler") (v "0.32.29") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.28") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.36") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.24") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.31") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.33") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.20") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.33") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "00dchbdhwaya8b7m1xpkx02mgj1v5c5chg1y7j2lrf0pm5asbg0q") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.30 (c (n "swc_node_bundler") (v "0.32.30") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.29") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.36") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.31") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.33") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.21") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.33") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "06167ilg4vrkf9inkyfxwfba5gwpp24hlh1408d7796pcplvc8r3") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.31 (c (n "swc_node_bundler") (v "0.32.31") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.30") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.36") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.26") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.31") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.33") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.22") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.33") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0rks0537ghscri40y7dwsa1snvsyyadnz6y7p6dcr2mrqlk11cqy") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.32 (c (n "swc_node_bundler") (v "0.32.32") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.31") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.36") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.31") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.6") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.33") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.23") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.33") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "17ngn341jqm9vc4qmnjj8qcg7wjnyx9bq6i45xik0ga0r12m55vp") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.33 (c (n "swc_node_bundler") (v "0.32.33") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.32") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.36") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.28") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.31") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.6") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.33") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.24") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.33") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0r2pscx1128nv8pimkvvwvxy4apn94mxn52lxdys167gcj5lanfa") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.34 (c (n "swc_node_bundler") (v "0.32.34") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.33") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.37") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.32") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.34") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.25") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.34") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0dcz70m5jc0i77xafhx01aqhc28lxvazri4pfvg7xpq8an26jhvz") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.35 (c (n "swc_node_bundler") (v "0.32.35") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.34") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.37") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.30") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.32") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.34") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.26") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.34") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0kd4h8xslqrh1jhxahhg9a5w7kp4f42ncvhgwcr4sddyxkfz600q") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.32.36 (c (n "swc_node_bundler") (v "0.32.36") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.245.35") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.37") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.199.31") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.32") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.96.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.129.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.34") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.124.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.203.27") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.107.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.82.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.34") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "17n0p2rik3xwv7c8i26sj51fmawdbnbp4d4czmli1kz2n20ap93x") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.33.0 (c (n "swc_node_bundler") (v "0.33.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.246.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.37") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.200.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.32") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.97.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.130.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.34") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.204.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.83.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.34") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0vghk01xijb1xqv2sfxkg1zgddqqwh84cf9fqgbvdgrdblac1fp5") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.34.0 (c (n "swc_node_bundler") (v "0.34.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.247.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.201.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.33") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.131.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.35") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.126.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.205.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.35") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1aawp290vx57bfgwr1vkkxpn0abkhvis4kydphja1k8535rihs86") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.35.0 (c (n "swc_node_bundler") (v "0.35.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.248.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.202.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.33") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.132.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.35") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.127.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.206.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.35") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0biimmw90aisicxzgkkfyvhlsrmzh8dnnf1ib8wv7cawllkfw4r9") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.36.0 (c (n "swc_node_bundler") (v "0.36.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.249.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.203.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.33") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.133.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.35") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.128.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.207.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.111.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.35") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1h9ky7lgys5dr6dd240x6jiiwx2x7nsfs6qh7vx9733a39a6whnl") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.36.1 (c (n "swc_node_bundler") (v "0.36.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.249.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.203.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.33") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.133.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.35") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.128.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.207.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.111.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.35") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "02kwlxd0dyfmrr38n3w31gpmf0nz7va31iys9d2xhz8bx29bf0mq") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.36.2 (c (n "swc_node_bundler") (v "0.36.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.249.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.203.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.33") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.133.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.35") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.128.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.207.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.111.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.35") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1w1b9qnwiwvmwwawyl8bvmzlcr9zk8gd2dk4synwwwi134fmi2gd") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.36.3 (c (n "swc_node_bundler") (v "0.36.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.249.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.203.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.33") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.133.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.35") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.128.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.207.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.111.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.35") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1a1jnfazq512y8f35s1f9a0qpa1jbd4j14kjms7mk27mg87342pa") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.37.0 (c (n "swc_node_bundler") (v "0.37.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.250.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.204.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.33") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.133.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.35") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.128.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.208.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.111.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.35") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1g2ay3pp4r80d7n1514k59k5brg1in2rdl6mnlwp59f7yinvhld4") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.37.1 (c (n "swc_node_bundler") (v "0.37.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.250.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.204.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.33") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.133.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.35") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.128.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.208.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.35") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0sys4zzy3jcikadvkc9xp1wsxkjqsg7fc63p0by0q8c9xnf2m1n3") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.37.2 (c (n "swc_node_bundler") (v "0.37.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.250.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.204.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.33") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.133.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.35") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.128.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.208.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.35") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1qfww3qzmzyb3zdar3hpsjiv6z3kpd7zbj3vx6rjyh7spr1pm18s") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.37.3 (c (n "swc_node_bundler") (v "0.37.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.250.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.204.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.33") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.133.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.35") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.128.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.208.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.35") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1w9sbx5qbmns647nxzn3ihxz7mf07wayl4ga3ahlnc57gfywwl1y") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.37.4 (c (n "swc_node_bundler") (v "0.37.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.250.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.204.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.33") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.133.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.35") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.128.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.208.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.35") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "05lj7q6kyrg0wbs8y2pn22wddqbjgz6fxqcv2zck3l1yzmda039v") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.37.5 (c (n "swc_node_bundler") (v "0.37.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.250.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.204.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.33") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.133.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.35") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.128.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.208.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.35") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1kycdz8pdlirk8r3smd2rn7p45j53vsvygg2w6qv7clqsilirgb4") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.37.6 (c (n "swc_node_bundler") (v "0.37.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.250.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.204.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.33") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.133.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.35") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.128.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.208.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.35") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1zkcqnj2d53ymbyamhyli5ip4qjkgg96dk586lsc4gga700h4jxn") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.37.7 (c (n "swc_node_bundler") (v "0.37.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.250.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.204.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.33") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.133.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.35") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.128.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.208.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.35") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "04vfrl20r7l4c1kpz0abrj1z9q32waf44vim4dq65gksmvhjkyry") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.37.8 (c (n "swc_node_bundler") (v "0.37.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.250.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.38") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.204.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.34") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.133.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.36") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.128.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.208.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.111.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.36") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0r9gb2zhhh5j0lshgpl93274in7p6b5ki42ylih3azbams474jda") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.37.9 (c (n "swc_node_bundler") (v "0.37.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.250.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.204.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.35") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.133.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.37") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.128.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.208.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.111.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.37") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1wly07fya0wgff9zp19n4875yk4z80z6han0mz7cf0rdbhx4a1ir") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.37.10 (c (n "swc_node_bundler") (v "0.37.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.250.10") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.204.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.35") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.133.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.37") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.128.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.208.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.111.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.37") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1aknz7f124nh68vcghhpdh4vxnhywfkckgbszmmfk8dnn77idzh9") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.38.0 (c (n "swc_node_bundler") (v "0.38.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.251.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.205.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.35") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.98.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.133.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.37") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.128.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.209.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.111.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.84.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.37") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1lj13cf1sfkc1nvi8q3xq6rmjsfmhl2z6kw56gp16zzynhcbaa0h") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.39.0 (c (n "swc_node_bundler") (v "0.39.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.252.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.206.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.35") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.134.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.37") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.129.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.210.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.112.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.37") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1wf5l55y02lk8yywf6gmcgszj6059g07b2bq8p2kpv0pmajv9hw5") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.39.1 (c (n "swc_node_bundler") (v "0.39.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.252.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.206.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.35") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.134.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.37") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.129.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.210.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.112.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.37") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1bls82x6y04afmkrym3fpiqndr9jam0ya9bqs230090a9lfqh8xh") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.39.2 (c (n "swc_node_bundler") (v "0.39.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.252.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.206.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.36") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.134.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.38") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.129.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.210.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.112.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.38") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ndsivcbxsmcrj8v72grr661b9nkvb3fqgwcsk2czkmnaxxm09xd") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.39.3 (c (n "swc_node_bundler") (v "0.39.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.252.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.206.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.36") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.134.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.38") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.129.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.210.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.112.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.38") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0qzb3pamykhnpmxr8n21548mmjvd4idhqjk2ckc2rr6i1kr6ddg2") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.40.0 (c (n "swc_node_bundler") (v "0.40.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.253.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.207.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.36") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.134.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.38") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.129.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.211.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.112.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.38") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0lwx7n4s55mkvmrphjbkvg0ng190z40z7knxk7xy2nvjq73g6rmv") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.40.1 (c (n "swc_node_bundler") (v "0.40.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.253.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.207.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.36") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.134.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.38") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.129.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.211.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.112.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.38") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1c3pm7bpbl3rynzb2jvnbrzvvnn9b08m3c5lnnv0rc692akarfw3") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.40.2 (c (n "swc_node_bundler") (v "0.40.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.253.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.207.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.134.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.129.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.211.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.112.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1qrmpdpv16ch5gnnkn2iqv6i530khsi0vqws9ksv3bjhlpd0zil9") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.40.3 (c (n "swc_node_bundler") (v "0.40.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.253.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.207.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.134.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.129.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.211.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.112.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1b8rpfn7s7imgid4ls9pfhc0wdlnsv180ncq6lw7l87kzidqak23") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.40.4 (c (n "swc_node_bundler") (v "0.40.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.253.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.207.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.134.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.129.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.211.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.112.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1x315mxk4xhhybjfylhmmjl2jpkzpy7mbswnb0rznmg14d9nwr02") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.41.0 (c (n "swc_node_bundler") (v "0.41.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.254.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.207.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.99.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.134.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.129.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.211.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.112.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.85.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "08d0pkfxq916n0n310ci0d0cwkbxhmx7vqkdw20jpcjgqb403wpk") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.0 (c (n "swc_node_bundler") (v "0.42.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.255.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "15sy6q7sg8xz48vd670p2d0yflss07lvw3nwv35aylfck6bcc3qi") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.1 (c (n "swc_node_bundler") (v "0.42.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.2") (d #t) (k 0)) (d (n "swc") (r "^0.255.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1wm2v1k6dpgcimb2nv843n084w4l2gxh7j4kxw6hn4r0lj5ir9l5") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.2 (c (n "swc_node_bundler") (v "0.42.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc") (r "^0.255.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1d1gwflk98ch3q1ka4lmjfvvrvq1kf8sr90n7njp27klfdhmaxv4") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.3 (c (n "swc_node_bundler") (v "0.42.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc") (r "^0.255.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "12gzb7pzh432sigyr7ngbrsb9k1dhnznfixfa67969li4l9d6090") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.4 (c (n "swc_node_bundler") (v "0.42.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc") (r "^0.255.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0z4rn1wxhz1wmapv2fwrn6milzykkmdrwjv88mmvx4zh4djp3vc2") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.5 (c (n "swc_node_bundler") (v "0.42.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc") (r "^0.255.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.39") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "02ld6vhvvma0ybcldn70f6vrqh0bwm9mij1xl981ymx7785n75hz") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.6 (c (n "swc_node_bundler") (v "0.42.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc") (r "^0.255.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "04fy40lp6jsz31xjgx1p2c92qk3a0s7vsy4qv1va3jxpiqfmzpsf") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.7 (c (n "swc_node_bundler") (v "0.42.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc") (r "^0.255.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1zi9zr3wk3p43nf4dyl72wcfmsv45x533frq32kvbvh2y7nkvffh") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.8 (c (n "swc_node_bundler") (v "0.42.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc") (r "^0.255.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1jwz28m7g4agyk338ilwqqprx481dwyzh5nqbvk1wcw393zqlzpz") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.9 (c (n "swc_node_bundler") (v "0.42.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc") (r "^0.255.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1kzgi84chzdiwy1g2pgh8zlsi8k6z717wxjh4wiw4g0nxw4zng9f") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.10 (c (n "swc_node_bundler") (v "0.42.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc") (r "^0.255.10") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0q6rky0ilwvrqkssix4liywjqgasvwmmnshaj3d4pw4r8b3gcwyl") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.11 (c (n "swc_node_bundler") (v "0.42.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc") (r "^0.255.11") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0k12nwb0ccw0n4mgf736j67w15l1ymbr40ppd2mf8002pkp3vj7i") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.12 (c (n "swc_node_bundler") (v "0.42.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc") (r "^0.255.12") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1bdmcv7vqyvhm7xaw1d53l0kpwrlclkxf7pv5l8508h6dm9gpci8") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.13 (c (n "swc_node_bundler") (v "0.42.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc") (r "^0.255.13") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1197nglg448s8y0q8c77f2q7wvrsz5ajnm2y5sprk8kbr0qaxx3v") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.14 (c (n "swc_node_bundler") (v "0.42.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc") (r "^0.255.14") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0cgwia0nv4q0bzqyrns1p2nj3wz9k26lr3qr3i2yyrirbdvgvnq5") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.15 (c (n "swc_node_bundler") (v "0.42.15") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc") (r "^0.255.15") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.11") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "054v1dykx0gqhvq9mb4nqxs0mb28f5f9x17aj54n4xmrqzwhf1gc") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.16 (c (n "swc_node_bundler") (v "0.42.16") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc") (r "^0.255.16") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.12") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ml9q97j1394868sq6m1kr4zhyxdxs2n1fvw4c0zj821zwjfr6zi") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.17 (c (n "swc_node_bundler") (v "0.42.17") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc") (r "^0.255.17") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1g8vkabz05igsmmf1iikn3hx3ic7zqkfyyzdgk90r4nm7pqp7sg3") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.18 (c (n "swc_node_bundler") (v "0.42.18") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc") (r "^0.255.18") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1pcj0v34ykkjj10s0cr6gwhqba2dz1kngsb0gxc92il8fklriqkw") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.19 (c (n "swc_node_bundler") (v "0.42.19") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc") (r "^0.255.19") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.14") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "02bd3va8bq794gyhsasqg0xgifa9rhmckjv9j5hqxn1p3bf0w3cb") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.20 (c (n "swc_node_bundler") (v "0.42.20") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc") (r "^0.255.20") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.15") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0fhqd1g4fv11zaagir9a0r6ypxkgb0q74dmdlrxh351zvj1x40ps") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.21 (c (n "swc_node_bundler") (v "0.42.21") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc") (r "^0.255.21") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.15") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0p5rk9bzmzwzvgy0rz0kfimcizvsp5mhgc0w1i0qamkvlhxpvqqz") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.22 (c (n "swc_node_bundler") (v "0.42.22") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc") (r "^0.255.22") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1yd2ivi3f0v1v3sz8cv6nxgdx79hihj8h7qk994z44wl5jqaadi9") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.23 (c (n "swc_node_bundler") (v "0.42.23") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc") (r "^0.255.23") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.39") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.40") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0977p26q75004k67c7ryd2bbknx7lfji3chkql9n8nb6lab5shzh") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.24 (c (n "swc_node_bundler") (v "0.42.24") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.3") (d #t) (k 0)) (d (n "swc") (r "^0.255.24") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.20") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.38") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.40") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.41") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "04435k98i8l1gjmnklsb6xlw583xxvv1sbri18v154amwqm4di9z") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.25 (c (n "swc_node_bundler") (v "0.42.25") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.4") (d #t) (k 0)) (d (n "swc") (r "^0.255.25") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.39") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.41") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.19") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.42") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1jnjsva8zx3yh0ryvqxyfr063h43j3nwfz21kgbsfr6l7faacq3b") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.26 (c (n "swc_node_bundler") (v "0.42.26") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.4") (d #t) (k 0)) (d (n "swc") (r "^0.255.26") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.22") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.39") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.41") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.20") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.42") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0rdza5c3p3xrlwby43r0ng6p5r72dkmdz7qnw5h37lxpy4hchs4l") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.42.27 (c (n "swc_node_bundler") (v "0.42.27") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.3.4") (d #t) (k 0)) (d (n "swc") (r "^0.255.27") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.208.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.39") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.100.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.135.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.41") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.130.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.212.21") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.113.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.86.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.42") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0mkxq7cdzb0x6hvmzj6zp1i7dqx9w0r4x5m4b0hal4mi9jvfv627") (f (quote (("swc_v2") ("swc_v1") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.43.0 (c (n "swc_node_bundler") (v "0.43.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.256.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.209.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.29.40") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.101.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.136.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.41.42") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.131.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.213.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.114.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.87.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.31.43") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1i590dyd52d9x3dnpfd4wyx966jx1nra53jbkndkyid5gvwhddr4") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.44.0 (c (n "swc_node_bundler") (v "0.44.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.257.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.210.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.30.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.137.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.132.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.214.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.115.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.32.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "04ch0fan2scnbhdmlfgc3bh6bhi1g7m1yjwa2hj3k1xwmfcnwvyy") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.45.0 (c (n "swc_node_bundler") (v "0.45.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.258.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.39") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.211.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.30.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.137.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.132.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.215.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.115.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.32.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1nvl6bqplskq35w265qrm7j1vm3vn7gzw2wgihi90nf33plzg0yr") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.45.1 (c (n "swc_node_bundler") (v "0.45.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.258.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.40") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.211.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.30.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.137.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.132.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.215.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.115.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.32.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1z6711q8n9z07p981404n74i8s2hxjjdsj1alf7zbvdrmc5smdzm") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.45.2 (c (n "swc_node_bundler") (v "0.45.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.258.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.41") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.211.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.30.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.137.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.132.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.215.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.115.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.32.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1yb90pxyzxhc4psfmsnnf4xxvyjizwlwg893lqmvcdicr0l8wvhq") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.45.3 (c (n "swc_node_bundler") (v "0.45.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.258.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.42") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.211.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.30.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.137.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.132.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.215.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.115.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.32.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "019ddfl079dqylcdbrzzax1k6d8nkrkx750faq75i60i481lc96z") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.45.4 (c (n "swc_node_bundler") (v "0.45.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.258.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.42") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.211.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.30.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.137.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.132.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.215.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.115.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.32.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0fwskpnzwxckk3hcysx02n626l1k54ld38c7gh2aqiiwhb4iscr9") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.45.5 (c (n "swc_node_bundler") (v "0.45.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.258.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.42") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.211.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.30.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.137.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.132.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.215.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.115.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.32.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0cdj12d0lfa6l4r6bq8c9gn95wvcy4ya8yzgircfw38h08jlx35a") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.45.6 (c (n "swc_node_bundler") (v "0.45.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.258.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.42") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.211.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.30.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.137.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.132.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.215.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.115.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.32.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1bimm6g4d9710zh64snj4cymkjdglqnwmzxr3x662yasx4f8m8lh") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.45.7 (c (n "swc_node_bundler") (v "0.45.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.258.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.211.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.30.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.137.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.132.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.215.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.115.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.32.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0qy54ymi4a5iv2hj1fni53qh6d8l1maayyg09yylbqdvm2d9dvfv") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.45.8 (c (n "swc_node_bundler") (v "0.45.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.258.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.211.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.30.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.137.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.132.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.215.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.115.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.32.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1k0rrfnxid7fbrz5aqn8rdqbq693mky6706sif8kfxy1x5pv18z2") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.45.9 (c (n "swc_node_bundler") (v "0.45.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.258.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.211.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.30.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.137.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.132.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.215.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.115.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.32.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "09isygmh2cfgyfpd245lrxaz59i9rmd9ck3fra9vjjhzm3gpv1gk") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.45.10 (c (n "swc_node_bundler") (v "0.45.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.258.10") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.211.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.30.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.137.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.132.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.215.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.115.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.32.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1lwnykyizj4f0y1fhvfajas5xhhxhhm2jb9vd2kysxnan698y21l") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.45.11 (c (n "swc_node_bundler") (v "0.45.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.258.11") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.211.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.30.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.137.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.132.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.215.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.115.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.32.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0kpil9n4b4rdw96c34s80h375d06wvlkrc5l2fj146ygv5phf4sz") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.45.12 (c (n "swc_node_bundler") (v "0.45.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.258.12") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.211.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.30.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.137.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.132.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.215.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.115.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.32.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0sdcq8pr50k9vx9i88asy9y08544c5nji3vw98ycq2ldfwva4b6m") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.45.13 (c (n "swc_node_bundler") (v "0.45.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.258.13") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.211.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.30.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.137.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.132.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.215.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.115.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.32.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1p1v0is3bdp0p059jxxza7zb22f2qxwd2rkf5w7l98hzigjlw1ga") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.45.14 (c (n "swc_node_bundler") (v "0.45.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.258.14") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.211.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.30.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.137.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.132.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.215.11") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.115.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.32.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "18ivkfn33if7wrcg4za22dcv6bfd8jajwpkhzlmb3ni10sz2bdii") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.46.0 (c (n "swc_node_bundler") (v "0.46.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.259.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.212.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.30.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.137.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.132.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.216.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.115.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.32.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "18nhph74cgq9lhrp4gxc2xkgrh7ix5i6pqwqhbvqmcsm54f4igf6") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.46.1 (c (n "swc_node_bundler") (v "0.46.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.259.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.212.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.30.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.137.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.132.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.216.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.115.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.32.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "18ybzvsvgbhs121x27w02z3gz7skh5faxgbvb4h03w88hb5ydp1p") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.46.2 (c (n "swc_node_bundler") (v "0.46.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.259.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.212.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.30.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.137.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.132.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.216.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.115.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.32.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1rpfsksrq41c9jial7fakj3qmkjp8l58hylh8y82vrm8dpmi4p0q") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.46.3 (c (n "swc_node_bundler") (v "0.46.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.259.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.212.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.30.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.137.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.132.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.216.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.115.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.32.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "05krkn07v4j54q355dxj93404gdcrjd4nhy61481l17x9gz0vidf") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.46.4 (c (n "swc_node_bundler") (v "0.46.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.259.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.212.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.30.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.137.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.132.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.216.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.115.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.32.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1rhy8annzgz40mk1s3w3qg37rmgmkdi4ns3xp50ays2qqifwl3jg") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.46.5 (c (n "swc_node_bundler") (v "0.46.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.259.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.212.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.30.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.137.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.132.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.216.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.115.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.32.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "10bccrj4fl2k38gvsf5i2g4bp12y92cqr6bsxmng77i5mscnf6n6") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.46.6 (c (n "swc_node_bundler") (v "0.46.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.259.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.4.43") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.212.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.30.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.102.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.137.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.42.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.132.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.216.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.115.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.88.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.32.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "077g7vi79by0cyj6fapqvwzlip0gfrxsghsbnwwd4aj7rspa0qv4") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.0 (c (n "swc_node_bundler") (v "0.47.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1iqk2rq64ca6s1i1ydla529dnpsx6l8cixwfmhbih2hg15iaq6ic") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.1 (c (n "swc_node_bundler") (v "0.47.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "03q51s4ywlsnwama6cbpkbzsggmhwcfdxcbggnzz5cl412vw7nrz") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.2 (c (n "swc_node_bundler") (v "0.47.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0wwlyl4ygcckh1sdc154nn84blf11gabwipj1l3hwp0iivcjd2a4") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.3 (c (n "swc_node_bundler") (v "0.47.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0qlwsisvzaifp2wvkdkwmbib565biiazikdk7cln1nn478ja7z86") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.4 (c (n "swc_node_bundler") (v "0.47.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ycammk4sd03r80ni9djj9yi9hr5hasnz7jp1x2cwjjv1lnglkfy") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.5 (c (n "swc_node_bundler") (v "0.47.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0jl66yczcx860xfsgjh0wc7icqhdv6hmaiwqg6xaypd23hf2py99") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.6 (c (n "swc_node_bundler") (v "0.47.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1vw63i3z151vf3lip6hak7p6y9l4gn92x9mr1jkfgwfspmmp3lp9") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.7 (c (n "swc_node_bundler") (v "0.47.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1qp0mgk8k2ng1v5f5kkl9ccdmcybh5hzr6dmb7zw1k9f2czc2zbp") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.8 (c (n "swc_node_bundler") (v "0.47.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "086g4bdcq45d48hixa1ksa3naffqwyvy8agyw2wvxbcwgss4cifz") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.9 (c (n "swc_node_bundler") (v "0.47.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "06y7pmp746qw8hicj20fp2243c0z9ndkd9src34qxxr6qcdw36i7") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.10 (c (n "swc_node_bundler") (v "0.47.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.10") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.1") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1lg7pshs5ki5l1wkc1pc78c3v2m8mmm1ps0dgiqsfmg1d9qb7rpp") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.11 (c (n "swc_node_bundler") (v "0.47.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.11") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.1") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0ryg7z1j2fpq0q0gq9c2dx0vrarag0n9qgb6r3mqvl4dc4ibah9l") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.12 (c (n "swc_node_bundler") (v "0.47.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.12") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.1") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0hc85v6xvcxdh3dfydrg0bmzay0sp1lzngs25r5l914vw0dvy46s") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.13 (c (n "swc_node_bundler") (v "0.47.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.13") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.2") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0ccldsprflzhcpc5mkl7lxymcb4zhjlh98b91zz3r69k3pgv7p9f") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.14 (c (n "swc_node_bundler") (v "0.47.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.14") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.2") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1685kjccmh3pv1jk4j7dgdj1nscrdwvlqc4v0cr7izvq54xl149g") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.15 (c (n "swc_node_bundler") (v "0.47.15") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.15") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "13mzzv87kfr95mjc78hh4dpk9s31wq7z390f8yzxygv869b4gg8s") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.16 (c (n "swc_node_bundler") (v "0.47.16") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.16") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "16yihbx5c192xnihnkq7pllqfdb5j6b5pd55ni2x21yzxca9r657") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.17 (c (n "swc_node_bundler") (v "0.47.17") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.17") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "11ip2znjf40lnlsrkccjzihirlvlrcnqcc1dfilhshmf4s1cv5gb") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.18 (c (n "swc_node_bundler") (v "0.47.18") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.18") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "16smzp3026c6w66ivv4jijnkn7443c3ysln8mi3sbvzvf5p51cpg") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.19 (c (n "swc_node_bundler") (v "0.47.19") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.19") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.11") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0l3h0a2a7xhlsdrww28arnz0mb9xmxvqv96vwjlhdzs5raq4pb9x") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.20 (c (n "swc_node_bundler") (v "0.47.20") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.20") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.12") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "02anpq0ircp8pmf2b0svpih0j8arlfvx08m2pnrr70db61bxzryp") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.21 (c (n "swc_node_bundler") (v "0.47.21") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.21") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1i5xkysihmyi8xinwjw6rdik8h1r5368wiiav126sdw6pjiclgyb") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.22 (c (n "swc_node_bundler") (v "0.47.22") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.22") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.14") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0xs5dhnqnnz0dlhh8vd18q5w7lr5ixk72i0dsqs0b2533r8qs77r") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.23 (c (n "swc_node_bundler") (v "0.47.23") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.23") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.15") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1kgnl2apbyq3nb2l00xxkszrw1rk9v2080ddkp8167mwipk4imaz") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.24 (c (n "swc_node_bundler") (v "0.47.24") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.24") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.15") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "03nhykckwgqw9qbcgwxz1z1lmhfcckkd7q4dlbjj11aa9b9hgamr") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.25 (c (n "swc_node_bundler") (v "0.47.25") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.25") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.15") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "15nw9anm24xm0djiq65kayr51wn99ad5c18k5c8yrh0ki7ixz1k2") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.26 (c (n "swc_node_bundler") (v "0.47.26") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.26") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0zpfrqicsqq3zzp02wp8wc0krf8rjb650blqxhr976rnplrk39ga") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.27 (c (n "swc_node_bundler") (v "0.47.27") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.27") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1bx68xsy4mhpyrpffwliwr0kgk8p95i1rxdm5wx63m1a8fcqdj9d") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.28 (c (n "swc_node_bundler") (v "0.47.28") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.28") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.20") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0l52alc33wrxp1rpl74hm6jjz94prl3zxp6pflc1f76ndwn32ny6") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.29 (c (n "swc_node_bundler") (v "0.47.29") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.29") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.6") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0cjciqx5si6w3kpxx1hkai5j9zjm3nss1awghrb50mvk1ryqbcl2") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.30 (c (n "swc_node_bundler") (v "0.47.30") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.30") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.22") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.6") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.19") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1rbp06m899jnwdq5r1ifyh2kbmycjfk3pmmnrzcbksg4hgrzhgvw") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.31 (c (n "swc_node_bundler") (v "0.47.31") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.31") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.6") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.20") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1pppckh3gc8l7rwjl1h81rgj3plha8plrhcwhsx9639jq86nmxwf") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.32 (c (n "swc_node_bundler") (v "0.47.32") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.32") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.24") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.6") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.21") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1r7cds6xnq91axin6w9ffi4sxn3fwj6rqvpwz2sisbbyf5bxp66m") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.33 (c (n "swc_node_bundler") (v "0.47.33") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.33") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.6") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.22") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0gvjnh1zzzsmw3pn7liiq1jdyld3v0mrrpjq37fdy80ggaswp5ld") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.34 (c (n "swc_node_bundler") (v "0.47.34") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.34") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.26") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.23") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1d26vqpcs9ckqqz61yx8h79sdrcj2v7s268m8n3hbavwmddrvjhr") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.35 (c (n "swc_node_bundler") (v "0.47.35") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.35") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.24") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0f01sqyk922scnx61xywjarybg4a6q0kivl3yajkxmffjzxny1cz") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.36 (c (n "swc_node_bundler") (v "0.47.36") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.36") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.28") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.25") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "14rc977iz0khmgvhwb9ylvmqxj1cb9gf0v0xmra3fb0bfzjx4ph0") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.37 (c (n "swc_node_bundler") (v "0.47.37") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.37") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.28") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.25") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1yxc5aszbhdwinnl4z2svn2v9nxjqbamxh8flxfzz7xvqlnmva5h") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.38 (c (n "swc_node_bundler") (v "0.47.38") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.38") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.28") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.25") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0jqz5k9rq5yivw1z0lq9c4g8bf05mckdv69hpcg4p5x0yagly61r") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.39 (c (n "swc_node_bundler") (v "0.47.39") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.39") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.25") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "17jwr1g5dy69crz45ckf7973i1bfs0vlfcxilfh2d7m1n93dbx2m") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.40 (c (n "swc_node_bundler") (v "0.47.40") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.40") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.30") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.26") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1f1qpbn6v564632j9hi8jrp8wgx5r3r6hkyaza706v4vma38hi6f") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.41 (c (n "swc_node_bundler") (v "0.47.41") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.41") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.31") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.27") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ws3hnfyibwvnszgmxsyckkkrb6as807a9qdnkpv3cl55rnfd0ph") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.42 (c (n "swc_node_bundler") (v "0.47.42") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.42") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.31") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.27") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "03v0wl8cvjyqbld62bs1npljlmzhy3k7hpr1hxqhnin2mjq7b6qa") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.43 (c (n "swc_node_bundler") (v "0.47.43") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.43") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.32") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.28") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1n4pxvggazfva57r2l6x5wi6p1281hzrjhn7cam2wa7q6xjxg9jg") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.44 (c (n "swc_node_bundler") (v "0.47.44") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.44") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.32") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.28") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "01qn15s3bd5wygpj73a3czncyhiqfsip99yvi5k6fcimxjwfhc1k") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.45 (c (n "swc_node_bundler") (v "0.47.45") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.45") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.33") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.6") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.16") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.8") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.13") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.29") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0x9vzcli97r56w0sv72ph24f3v3pbj5ii0bz44dxdi08lg9m3kxz") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.46 (c (n "swc_node_bundler") (v "0.47.46") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.46") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.34") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.8") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.14") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.30") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "05r0h5d0fdnjx7311ykkixl2gq8y13kns4lg0bh7v94v726hv4xn") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.47 (c (n "swc_node_bundler") (v "0.47.47") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.47") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.35") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.8") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.14") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.31") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0q2d22x4sy3xm3wp49ri5w1v3m6j1n5c4ixnbb07829m0gai8q2v") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.47.48 (c (n "swc_node_bundler") (v "0.47.48") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.260.48") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.213.36") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.103.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.138.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.8") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.133.14") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.217.31") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.116.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.89.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0kzm6y6hgsc0qaysdj8wwqa22yx64cmvmffi69lqns2yaz0jkjvz") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.0 (c (n "swc_node_bundler") (v "0.48.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "05s5kkf6vw9f1byflvvajnxyr5yi07bw7wjhwgdrhlbhydvqff5d") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.1 (c (n "swc_node_bundler") (v "0.48.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "153891qsblpwkadv6pzl1kgrcq32jkj0i16x31lcarn01fvqfhlk") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.2 (c (n "swc_node_bundler") (v "0.48.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "04g39i73rak4rlx7djsfbac3h5z0nf15if5d2w7v5nihsy5x2r3x") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.3 (c (n "swc_node_bundler") (v "0.48.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1dkr5j1l5aqn69x76w1v3l6x9bn73ypvnf3dh3w085px04fah1fw") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.4 (c (n "swc_node_bundler") (v "0.48.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "17p5ji4g1cdi8vvdk4ckfz3myq8nr8m642zizmzry5skz1f56mns") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.5 (c (n "swc_node_bundler") (v "0.48.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0h1bg118pak3hyqdxpnzcfy890qgijawpdi3gfjbd0czybwv580m") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.6 (c (n "swc_node_bundler") (v "0.48.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0r2pxrb28nhfq74h8chh4sncdwc2g9bsgag82csxfai95h8y2iys") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.7 (c (n "swc_node_bundler") (v "0.48.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "10gk69y0ag3h7rcwjd4nbbchgl8y1kqhmgrb3qy29ypx02j1iac7") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.8 (c (n "swc_node_bundler") (v "0.48.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1lga6dc084rn5pjrn0c3gmf55gr13449k2q5hiyh3kv4b1pcx753") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.9 (c (n "swc_node_bundler") (v "0.48.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1h1f22wmn6sksw6zmvbwqj08ynyw4qniq5bzs3gqpahycl7z2iwr") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.10 (c (n "swc_node_bundler") (v "0.48.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.10") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0hzrdykq2hc7jh0cxkn6w2f7mp7wdvhacb9v1ffm49hki28346rp") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.11 (c (n "swc_node_bundler") (v "0.48.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.11") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0z48b4as8qg0dslnczmmqhc37h60iax41wzmv3fkmrnxdc98w6k2") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.12 (c (n "swc_node_bundler") (v "0.48.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.12") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "06ci9w3ndcbx71shvqhx7dmxpfwkwdwakgyy1hydcl108f7manig") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.13 (c (n "swc_node_bundler") (v "0.48.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.13") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0k6vw3z346iqvn16w8nrl2xbxnsmhpqrwh034izf2h4bczjhknpi") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.14 (c (n "swc_node_bundler") (v "0.48.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.14") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1x4ni428jzkx2323zsvjj416vvv1fr0g6l9vljn6j1gnjwnma0qf") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.15 (c (n "swc_node_bundler") (v "0.48.15") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.15") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0w039zgpqqsylqqmp1vmvmz5rrc7r0y2a8238daj1m90m2p8jr3j") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.16 (c (n "swc_node_bundler") (v "0.48.16") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.16") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.11") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0s6yjz3mmvjnwq4hwnlijidpwyj78fx3p4q5pk2vilp3n67r11m8") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.17 (c (n "swc_node_bundler") (v "0.48.17") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.17") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.12") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1pv9k01xw9v6ldr4f3pxc3fxxk3j9rspf371y1vs7qf1pldj0b93") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.18 (c (n "swc_node_bundler") (v "0.48.18") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.18") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1n25k9s2nsg2ibwpnwdrw2zv16ylbz1z5y03h8iv50j3s978jm4f") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.19 (c (n "swc_node_bundler") (v "0.48.19") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.19") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "13xg191rc2qkkvgnlx8bf3lygb47iq8avx52kxai379k9vgg5v1g") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.20 (c (n "swc_node_bundler") (v "0.48.20") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.20") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "12ajkw78hcrsw3sh7n9x0hhb721av3zbxns2vmw3y4whnncw0v6c") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.21 (c (n "swc_node_bundler") (v "0.48.21") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.21") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.14") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0p8r15a8kzv8bfsnw8ibpwn3virz9dafrwwjq7chl1zmvqhblp9q") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.22 (c (n "swc_node_bundler") (v "0.48.22") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.22") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.15") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1hi0v79n6sl7lvh0sqpi6ni4ni3y1x9j7yhhhldss9s6xfpjlsap") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.23 (c (n "swc_node_bundler") (v "0.48.23") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.23") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.12") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0x2pac9f1f1gk9f9bc3d64chyky8z8rsniid6kddpqv891k8wmwf") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.24 (c (n "swc_node_bundler") (v "0.48.24") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.24") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "00k0r4jrkhdddaq1jdivmsxd3h65whkjfy6hgbr64a9l8wm752if") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.25 (c (n "swc_node_bundler") (v "0.48.25") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.25") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1zhyf1rigw70xvs6jiw9if7k09qqr6nsw14a9wrbzpcwbx29w78k") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.26 (c (n "swc_node_bundler") (v "0.48.26") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.26") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.20") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0qf15y15av2l2kxa61vn7ahs4a549rygnssqi4w0vfnwjkpwkkdh") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.27 (c (n "swc_node_bundler") (v "0.48.27") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.27") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "11cd465fnaaj1zrsy6k29i9165ccxjax1ks4dgi33ngql8vmhmgs") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.28 (c (n "swc_node_bundler") (v "0.48.28") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.28") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1wpzr4qvn4gaa5svhcryjpxsm2n7vxwl1c25v3zb6h0zl5915hq8") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.29 (c (n "swc_node_bundler") (v "0.48.29") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.29") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1ki6lca83asa8mp6cjz3rcsgz8kx5555krz6yh29y53fll104g0b") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.30 (c (n "swc_node_bundler") (v "0.48.30") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.30") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.22") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.19") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "11qilkvy007zxllwjzryskpja9vras6aa6jnp1bjaxhfikizanfy") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.31 (c (n "swc_node_bundler") (v "0.48.31") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.31") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.20") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1x759bxv5daa9wvwxw3c7xffg298zjaazcfzp46f9b2qmk327d99") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.32 (c (n "swc_node_bundler") (v "0.48.32") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.32") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.24") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.20") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1q8lfl18sihxqr7ifnq73in1zr2mqiq9kmyl948yp2kh1j0xm9ny") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.33 (c (n "swc_node_bundler") (v "0.48.33") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.33") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.20") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "11isws04h479g1id4w17jilkc837pm5rpiwh7yg1d4iamp3c7n4m") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.34 (c (n "swc_node_bundler") (v "0.48.34") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.34") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.20") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1q92b1yngf0s1rzln4b8sijysisvikcms28b2w1x5d7ybyd14li6") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.35 (c (n "swc_node_bundler") (v "0.48.35") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.35") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.26") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.21") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0w1ym41m4r0y0zr36l0v0w29gmahysi878sbssfpif4a0qnnrfgh") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.36 (c (n "swc_node_bundler") (v "0.48.36") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.36") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.16") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.22") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0kgzx4xains3a9jfbrmd9q2hjjrh50b2afx2ns0ljfv2fc7rpavr") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.37 (c (n "swc_node_bundler") (v "0.48.37") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.37") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.28") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.16") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.22") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1zk0i684hag033l4vm228j291lpf5hg4p5bm79nx8l8w7r6k847c") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.38 (c (n "swc_node_bundler") (v "0.48.38") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.38") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.23") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0383awgc2vk05dyyf2gg0cdx63iak1q1wbhgzrkcfh26cxfq9bxl") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.39 (c (n "swc_node_bundler") (v "0.48.39") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.39") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.23") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "07pzyrgq3j93r2z60kmmijjm9wal9nqdwkrppqawf84a923rhiqs") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.40 (c (n "swc_node_bundler") (v "0.48.40") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.40") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.30") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.23") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0wzn55pak6zkh0wrf119zj7vzhbrllqlb3srxif2fbf972ag5mcm") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.41 (c (n "swc_node_bundler") (v "0.48.41") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.41") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.31") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.24") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "06pzz20xghi6jx9vf6w5hmffaq2fkahs7dxja70zfykcx0mlz3zh") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.42 (c (n "swc_node_bundler") (v "0.48.42") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.42") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.32") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.18") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.13") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.25") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0kf3qdcrls2laf0ap7r1zi5r8d7q4p9pzc6l6h7m29mkbkl6qa8a") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.48.43 (c (n "swc_node_bundler") (v "0.48.43") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.261.43") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.214.33") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.104.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.139.18") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.134.13") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.218.26") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.117.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.90.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0zbpiqwsh6rwvc2mziz3ia7hcigcwlj1xzm2pynq1722jzhb1m1c") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.49.0 (c (n "swc_node_bundler") (v "0.49.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.262.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.215.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.105.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.135.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.219.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.118.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.91.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1l14crbrbghfwcigpms1k5yx2a8j926ba73ppnfasmrz34sq3p4z") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.0 (c (n "swc_node_bundler") (v "0.50.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.263.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "069yvgq4bp44bjprwnkpiwgi74bdm4mqjlp1wdpjxfr9b9l772j7") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.1 (c (n "swc_node_bundler") (v "0.50.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.263.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1mphmr0d5mfkf0iva2w21sg3zxflqq3r6158mzq0fgqz5j5aqwba") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.2 (c (n "swc_node_bundler") (v "0.50.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.263.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "15i189zlxzdkqcj9hriv21v8i9z30li4bwb44kmn7c6r6zbq81qc") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.3 (c (n "swc_node_bundler") (v "0.50.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.263.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "06hmql56almyjj7w0amgi79rima9id1cci12jk35kdzxg2hjasfz") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.4 (c (n "swc_node_bundler") (v "0.50.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.263.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0abjhbjbrqs7zl0vbwb9kndwg2w19xbwkxf07nhp52cp24pgpbrb") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.5 (c (n "swc_node_bundler") (v "0.50.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.263.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0gnn4ga8npxgh5qigcqkhadabr7pc6fxxwa1zqri0d6m8yp0yhzc") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.6 (c (n "swc_node_bundler") (v "0.50.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.263.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1krnsicfa0pbhinbhf0ycab84912yw7q8wp5djqxcw7g89mzdj0x") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.7 (c (n "swc_node_bundler") (v "0.50.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.263.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "02i5vlz73lqx7g2d3g59y9vp1mb2jwn3vpckirwh7x0h18fvycgf") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.8 (c (n "swc_node_bundler") (v "0.50.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.263.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "173fz565cg03yh94dj4gxc3bf5s4cml8p85cj9rzd45fxpn0d0yh") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.9 (c (n "swc_node_bundler") (v "0.50.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.263.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1jkgl98lwkw4171rgiv1l5z59kmw0jni9923nh07dqx9rg35d4vl") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.10 (c (n "swc_node_bundler") (v "0.50.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.263.10") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "099fj41mbs2pqn0zhvnw481h0m0664whiifhyfm4zw23d48zxxbf") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.11 (c (n "swc_node_bundler") (v "0.50.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.263.11") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0sa9327qyy711xha1yadrfj72pr1la20javlmzh5nic0f8gb3b1d") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.12 (c (n "swc_node_bundler") (v "0.50.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.263.12") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "00bqxfpmwjmapi05hzqyc60r4gvjgnrw262sy6vyqfmlr0h6ylhx") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.13 (c (n "swc_node_bundler") (v "0.50.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.263.13") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.11") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0b0d3j6hv2qpzrhdprh99v1wgzgasx58s0pgbf08yb6ncgqqp5f0") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.14 (c (n "swc_node_bundler") (v "0.50.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.263.14") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.12") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "19khhlcs5vbrp2xr1rq3qa8pf0zcjg7nrbahkdgyvd0mgnp1fn0c") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.15 (c (n "swc_node_bundler") (v "0.50.15") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.263.15") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "1mi8xvw0z8c8wd21ah7xzki0whgsp5ggzdp9anfzjh61dnnpjcal") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.16 (c (n "swc_node_bundler") (v "0.50.16") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.263.16") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.14") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "107a51vc53yq254wpg1a1l0ss2kd37mfy49mm5rl6ishh30a5fdd") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.17 (c (n "swc_node_bundler") (v "0.50.17") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.263.17") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.14") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "0nyb6phw4n7pqsir4vqr2h5yhjkirzl6iz6z2l3v27jh1kpw8s7l") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.18 (c (n "swc_node_bundler") (v "0.50.18") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.0") (d #t) (k 0)) (d (n "swc") (r "^0.263.18") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.14") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "02f56zm8jdbi4084rswar2vh65kq8lk7b17z23g0f5sb5nqx1lji") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.19 (c (n "swc_node_bundler") (v "0.50.19") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.263.19") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.15") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.15") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)))) (h "156kjwa3672pyfp9nkcvihc38jp5l06kskz5qy5jy312vhizbyq5") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.20 (c (n "swc_node_bundler") (v "0.50.20") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.263.20") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.16") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "19668079shzx9rfxjhv928xxppza5yah74wiaxxnqlyyi0vqcnhz") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.21 (c (n "swc_node_bundler") (v "0.50.21") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.263.21") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.17") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.18") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "15hh8aklkgm5a7fp1m2rz3c2s70cj6b1h2iqgvnqza2z8f8dlwn8") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.22 (c (n "swc_node_bundler") (v "0.50.22") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.263.22") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.20") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.6") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0gmjf4p8zkdm8mm3z5vihiyy4innsd1zl16gaabpdiv7yqp8y9md") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.23 (c (n "swc_node_bundler") (v "0.50.23") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.263.23") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.20") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.6") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1prsaqcf3b2c6mqzq8l030hdknv6c6r1ysk0w1m24i25298ywn1i") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.24 (c (n "swc_node_bundler") (v "0.50.24") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.263.24") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.6") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.19") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1h5a8y9v88c57cxh7wsrk7avxk8ihfnwdjdp363j6baa4hi5rgqx") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.25 (c (n "swc_node_bundler") (v "0.50.25") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.263.25") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.22") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.6") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.19") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1y5l9wxmbiy0x0ambxqmlips4b9ni911r6ws2r8jcfkq0dmmh1bd") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.26 (c (n "swc_node_bundler") (v "0.50.26") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.263.26") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.6") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.19") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "06sz9ycrka02j2529ybgphck08wazx6ihzvwfmcvkjs9zjsj4scq") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.27 (c (n "swc_node_bundler") (v "0.50.27") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.263.27") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.6") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.19") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1a6wi3glqj14rfjl7n9jnxwgb9i92qqvw57i9ffd5czcljvixzm0") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.50.28 (c (n "swc_node_bundler") (v "0.50.28") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.263.28") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.216.24") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.106.6") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.141.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.136.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.220.20") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.119.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.92.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1sk70qcl5w6kh8b2zp7l22aah04jr0dczzf9qijibim45lv0yzhg") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.0 (c (n "swc_node_bundler") (v "0.51.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1yfq78lg2y907mvnfpaqv6gwybgabsqsgz1dzv3nqzgv4rr7yvry") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.1 (c (n "swc_node_bundler") (v "0.51.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0clvjarjijf7fqrnsa987z8l9grqd4hxd7mmghqmz1k4njhcv3a0") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.2 (c (n "swc_node_bundler") (v "0.51.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "10isdyg7xhrw304amkrxhamvibrinhgg1mhixrcgfzd2mq5z9wlk") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.3 (c (n "swc_node_bundler") (v "0.51.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1lxzbc6zbwdjam29p777w7yp8l1g0pzbwz8i16ls48n3dns1ibp0") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.4 (c (n "swc_node_bundler") (v "0.51.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0hqh1abj85asrln391xr0pzjrn70i5dbld7ivh1c9lcix31ggsgq") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.5 (c (n "swc_node_bundler") (v "0.51.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "17mjh07rvdvf0cghx1740qhc9xijvjch2m1a3yb0xb047di8l9dc") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.6 (c (n "swc_node_bundler") (v "0.51.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0031pnxawfgf1n5ry1slqacxflx6igamhqj0d22rrrfv4ppbqys0") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.7 (c (n "swc_node_bundler") (v "0.51.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1hgjdgcaw94a973i5miinml5vbb2zg9l3vf19wqxc6l1k4s92473") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.8 (c (n "swc_node_bundler") (v "0.51.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.6") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.18") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1y4cq4217328z9f7z7kxwgnwdizai9d0b7j57s5ncik9awxwyv0d") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.9 (c (n "swc_node_bundler") (v "0.51.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.7") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.19") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1p4iwqxd30nf1ya1bs8picacj54qarzr602jplc6il4vhw1aykd0") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.10 (c (n "swc_node_bundler") (v "0.51.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.10") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.7") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.19") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0wa95f8fbi7x6s3vs3zin2d9i9w6zdvpakgfbwwbmxsvj3dhq3la") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.11 (c (n "swc_node_bundler") (v "0.51.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.11") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.7") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.19") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1a05g993pqdzmyrvryjf2371g2spxwbn3zzrjh3pvz291anpknx7") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.12 (c (n "swc_node_bundler") (v "0.51.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.12") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.7") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.19") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0d0iblcq6rdpn7yn9shhsgdw6xakr7pd7n2qfaswyamalajxvsq4") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.13 (c (n "swc_node_bundler") (v "0.51.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.13") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.7") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.19") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "00hn8g18bn228bcgiaxmxxnrkdiz255h6jwfw0i9ibfqjl073ayy") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.14 (c (n "swc_node_bundler") (v "0.51.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.14") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.7") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.19") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1gr7l2qsdr00ysylmz95gzn702p6l932jl9y1y97pw4nim16ffp9") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.15 (c (n "swc_node_bundler") (v "0.51.15") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.15") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.7") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.19") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0w3rj5j73sv28z6aa0c833nja3659l17hpzyczzhpm1ni9z7pgcc") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.16 (c (n "swc_node_bundler") (v "0.51.16") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.16") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.7") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.19") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "12ms2293s1f9786y5vfsv303qc6mrwn6h1fbhgxghg3b4i0km2v3") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.17 (c (n "swc_node_bundler") (v "0.51.17") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.17") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.7") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.19") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1ddhzhwarii6rbhdr0ywr57snvd63cxsflzdl436gsj2dppyaww5") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.18 (c (n "swc_node_bundler") (v "0.51.18") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.18") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.7") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.19") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "02h8hqdamghisnn3rwaipmz15297rb3n36mfwnhidm71yv1l1yaz") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.19 (c (n "swc_node_bundler") (v "0.51.19") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.19") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.7") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.19") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0jl452jclfcnhj7qrpw2xrc65kg34byw6jkl0k0bzqx7nsajl9nb") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.20 (c (n "swc_node_bundler") (v "0.51.20") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.20") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.11") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1lxnkivm39z88d52aam9lsripf7sn2z6ipn7q2rv48shinqfxrdf") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.21 (c (n "swc_node_bundler") (v "0.51.21") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.21") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.12") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1vq27m4flq3msx4wsw2an7iv45fhmb3a5qpjglwj81pqj2rh4jn6") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.22 (c (n "swc_node_bundler") (v "0.51.22") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.22") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.12") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0afya4k82lyajqj3ykr3b3wdh6awadj96ihyv544q6r4hsrc90sy") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.23 (c (n "swc_node_bundler") (v "0.51.23") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.23") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.20") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "01k2sbapmdah3hafxb05yrbd83p9jrhfyyq3pjfmsfvkwji55524") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.24 (c (n "swc_node_bundler") (v "0.51.24") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.24") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1l307gfhzihn37b2wqpp4nxkqshk041dckxv1jwppzwhsqjdha89") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.25 (c (n "swc_node_bundler") (v "0.51.25") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.25") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.22") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "11937kaw4b5abykzn6ig1blh40872zh5qb0g3i9km0nf5p8ials5") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.26 (c (n "swc_node_bundler") (v "0.51.26") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.26") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.22") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1sgi8l55qsy0lcaqy4hmsxwd37i4kv5jpwyk6pg873x3spn9042z") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.27 (c (n "swc_node_bundler") (v "0.51.27") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.27") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.14") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0cvlbgn749drnl05w1130gd42q027hjsxaxhvxw1yy6fi2hxnzc1") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.28 (c (n "swc_node_bundler") (v "0.51.28") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.28") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.24") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.15") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "05n68agrax4b6avqh6a6xf216y527yp5sd6swm158ah7r1pw5q45") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.29 (c (n "swc_node_bundler") (v "0.51.29") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.29") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1ggsh82vl3l98zx3c6qaljkrd5qr6w2jni0b3a2hlwdhnj3r13jx") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.30 (c (n "swc_node_bundler") (v "0.51.30") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.30") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.26") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0s1dpi0pz5cz6apxs9hqmf5g7c63dsk18h234qsn8mj1ghpqqnls") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.31 (c (n "swc_node_bundler") (v "0.51.31") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.31") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1v87kawd59g1021v5npaam2s4hkvz0vvikdzgn2s6i0pi8h2k1z8") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.32 (c (n "swc_node_bundler") (v "0.51.32") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.32") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.28") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "17mc8zx32jcm6hf7mdj6q2ji8agqhszw1i75yyzhj7gcihwdr6zi") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.33 (c (n "swc_node_bundler") (v "0.51.33") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.33") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.28") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "06gan5lbz6h6mms6xmvsly4j76rdfbz4mb2qjkhqnyzc4vlg52zv") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.34 (c (n "swc_node_bundler") (v "0.51.34") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.34") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.28") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0hi4lbkifa2rf7ya24xybaz2k73a6kvf7mdzsihbj8sbydzpl76r") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.35 (c (n "swc_node_bundler") (v "0.51.35") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.35") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1a0s0nrlbggk2i46y76xwhdpl7ky1gsika38qx5d6rq2mmam41kr") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.36 (c (n "swc_node_bundler") (v "0.51.36") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.36") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.30") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.19") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0h01sdgsj2rahg7jg3lhmww8gsz4bz34n6p9c61050vwdrqmyaq2") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.37 (c (n "swc_node_bundler") (v "0.51.37") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.37") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.30") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.19") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1dzklyzjv4xqv9lrvhmprl1ipaxp617nqa7rfmfj6jkyrz0j9vjb") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.38 (c (n "swc_node_bundler") (v "0.51.38") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.38") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.30") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.19") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1vhzkv792v09yn52i4qn4h7kf8kx1sa2nb4pd154gmm42h2mch07") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.39 (c (n "swc_node_bundler") (v "0.51.39") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.39") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.31") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.20") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0kvcvf1hv4glfhi6i5naq5yxbf9ig08nnqsr9hq30z0ghg9jhmrd") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.40 (c (n "swc_node_bundler") (v "0.51.40") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.40") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.32") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.21") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1bzacmifj5smndi31lm5nrnci8gfhi5wsh1d1zci0g7vxx8wwz1w") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.41 (c (n "swc_node_bundler") (v "0.51.41") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.41") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.33") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.22") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "01xrgnkkx31k77fshlmhk3gss708ywdvspddd5rzg7py84yckgxy") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.42 (c (n "swc_node_bundler") (v "0.51.42") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.42") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.34") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.23") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "15y9xqpmwcxdnlqnvp2a1gdflq6l0sm1hzf89hrygjz9i8fvamaf") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.43 (c (n "swc_node_bundler") (v "0.51.43") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.43") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.35") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.23") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "16bd0s5db04s1ll4aqrqaycwlr2csvvk5i84slf2kq85apivv82h") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.44 (c (n "swc_node_bundler") (v "0.51.44") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.44") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.36") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.24") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "047cjmwfgxsn4n280vib1nbmlf2d0l02p6n2g3j7rd2q91lx4dwi") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.45 (c (n "swc_node_bundler") (v "0.51.45") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.45") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.25") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "10kwpv33vng67b7xcvwz44qvxfxpin22kfd3cx5ikai7f9x0vh5f") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.46 (c (n "swc_node_bundler") (v "0.51.46") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.46") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.38") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.25") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0x2hxq94va4wjj3bdx1ir6cgq9jj9596990l0r0i3vyrz12x3cvk") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.47 (c (n "swc_node_bundler") (v "0.51.47") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.47") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.39") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.26") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "06c2ixdy8pmwl3dg63zfaqaydrqnnyaj7yrs7yl7558ys8008s2k") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.48 (c (n "swc_node_bundler") (v "0.51.48") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.48") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.40") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.27") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1zk4x6yzbshhjac9x715mgbziikks3w8n73gjnpxqsixg40jqm7b") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.49 (c (n "swc_node_bundler") (v "0.51.49") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.49") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.41") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.28") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0qjxmxp4br03hp8g4l086kqawdsgjzix2a8g8ghbmjgh5jvj37w9") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.50 (c (n "swc_node_bundler") (v "0.51.50") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.50") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.42") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.29") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "09bs1z2lcmk4057x3dr7iq5mxikxkav3h2p3qxla4ffimf2dkwbz") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.51 (c (n "swc_node_bundler") (v "0.51.51") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.51") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.43") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.29") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1d3bhc2yq57njhsii7v211fgrzz7nsibaqg6dvr5dbafrmcy729w") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.52 (c (n "swc_node_bundler") (v "0.51.52") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.52") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.44") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.30") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1p4rq05i6wv3kizzyynv4sqdrpzf1pmkq7qqyjzw37yazadgmvw4") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.53 (c (n "swc_node_bundler") (v "0.51.53") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.53") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.45") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.31") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0zz10k5z1r9alsl7a5qx754fdifg7pi97jgmgfmf5kzcfmm0qm2w") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.54 (c (n "swc_node_bundler") (v "0.51.54") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.54") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.46") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.32") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.15") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0rxzcpg5rm2d56fyib58g732im61zlx5fny72vrz70iv1vapxj7m") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.55 (c (n "swc_node_bundler") (v "0.51.55") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.55") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.46") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.32") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.15") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "14qvx1cfzfcv2lh3wl5fs89nqq4lxj8ih814iwypl8n5a6d41xvz") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.56 (c (n "swc_node_bundler") (v "0.51.56") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.56") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.47") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.33") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.15") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0ldfg3d5ax5j1acgblpbbmlz5apkw6xblspqd9dhc7vhmxzfn5z1") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.57 (c (n "swc_node_bundler") (v "0.51.57") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.57") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.48") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.21") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.34") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.16") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.22") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "03axr736za8xy9pkzm296qvl0n0cwh5kvfcf3mw9p0rir66kfrjf") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.58 (c (n "swc_node_bundler") (v "0.51.58") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.57") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.48") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.21") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.13") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.35") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.17") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.22") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0y58h1402s5fy5gz4814698znlqa6hxxqmbq410qh4x1x64xmyi6") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.59 (c (n "swc_node_bundler") (v "0.51.59") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.58") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.49") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.20") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.6") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.22") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.14") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.36") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.18") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.23") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "06h7y43qng7w0b446xnij1az2a222ijsb6m2qkfd71cvs71jcw14") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.60 (c (n "swc_node_bundler") (v "0.51.60") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.58") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.49") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.16") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.23") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.15") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.37") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.19") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0j230vy8y3g333pwpd77ba2g8g9pmz99h0hf3wy5i77hpac191h7") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.61 (c (n "swc_node_bundler") (v "0.51.61") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.58") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.49") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.23") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.15") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.38") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.19") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1rrbfnfp33f3hwmw9a6x6zc3gdv1xi9j6h39kzgzy405ibf6xwi7") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.62 (c (n "swc_node_bundler") (v "0.51.62") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.59") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.50") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.23") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.15") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.39") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.19") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1yrfznbdiq7ngigqbib4vj9c5b24c01b4sjlhhymdvphpjkmqxgk") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.63 (c (n "swc_node_bundler") (v "0.51.63") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.60") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.51") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.23") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.15") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.39") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.19") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "10x3f3gra7mbbghj4zpljaphjmapyrrk7zzqb6azpyqi7n8ri7cn") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.64 (c (n "swc_node_bundler") (v "0.51.64") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.61") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.52") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.23") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.15") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.39") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.19") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1m62fhs4xrsrfijvk95jdah960mgjphbpfs2cf2jd1fy3k7k3czm") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.65 (c (n "swc_node_bundler") (v "0.51.65") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.62") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.53") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.23") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.15") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.40") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.19") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0cjn3w7idx5nqri31h9iy1gdhjx9njy9zls10xcc4w7w0mq9hvrn") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.66 (c (n "swc_node_bundler") (v "0.51.66") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.63") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.54") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.23") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.15") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.40") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.19") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1fnkv4sdazs5bhpdmnrbmc8nmyhf6lig5w60dryhjhy3v4lakvrd") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.67 (c (n "swc_node_bundler") (v "0.51.67") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.64") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.55") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.23") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.15") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.40") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.19") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0j37500g9xvi47i2s93zbaziv3s1na79q85blqdclzliy06a2kz4") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.51.68 (c (n "swc_node_bundler") (v "0.51.68") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.65") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.8") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.56") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.23") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.15") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.40") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.19") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1aky4zpgbnczwjmma0xkzi29s8h7hiakh1rpc24ilqlp37f9qy0a") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.52.0 (c (n "swc_node_bundler") (v "0.52.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.265.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.217.57") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.31.22") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.107.8") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.142.18") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.43.24") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.137.16") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.221.41") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.120.20") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.93.8") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.33.25") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1bzvhxjwaxq11gxqjl332849v4vfvdgm1hjcysrw7wf1smn5na2q") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.53.0 (c (n "swc_node_bundler") (v "0.53.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.265.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.218.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.143.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.138.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.222.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.121.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "08wzhd5xkz3ykrphc4h5bcfkk6nhm81pj7raspf77l2b02m8xgc5") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.53.1 (c (n "swc_node_bundler") (v "0.53.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.66") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.218.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.143.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.138.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.222.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.121.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0c52migizmwfj5r5dkc5c4d98jy4zdz4mb19c46sw0afizvcw4h9") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.53.2 (c (n "swc_node_bundler") (v "0.53.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.67") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.218.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.143.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.138.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.222.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.121.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "04awwmdrmwpca7ysmk5hzkqr7la1rrx9chmxjqin8rfz40cs51ac") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.53.3 (c (n "swc_node_bundler") (v "0.53.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.68") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.218.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.143.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.138.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.222.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.121.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0vx301lyqj9c8idlc9d13pnlk8ibx6qscdsbgfxf41z4hv0rsycx") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.53.4 (c (n "swc_node_bundler") (v "0.53.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.69") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.218.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.143.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.138.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.222.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.121.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1jphkvwgwl4ibqw1qk9cb43hqc7mrmzgp6lcprxhvh15pm2xkmql") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.53.5 (c (n "swc_node_bundler") (v "0.53.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.70") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.218.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.143.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.138.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.222.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.121.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0y13v28v73sr0nxz6paq7bhzf5hn8xp8lvqbx5pvn62hkwlr5jcd") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.53.6 (c (n "swc_node_bundler") (v "0.53.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.71") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.218.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.143.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.138.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.222.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.121.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1ah9v3mkf9r6kacl48gznb1v425jgi78kkjchmg60y40whivqxh6") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.53.7 (c (n "swc_node_bundler") (v "0.53.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.72") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.218.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.143.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.138.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.222.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.121.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0gf2la66h71zhnppifdnhiy3jm98qvnfmlsfza4bwmxga4r8vpqx") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.53.8 (c (n "swc_node_bundler") (v "0.53.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.264.73") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.218.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.108.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.143.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.138.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.222.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.121.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.94.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1mg9w43v8k30wyiv9ys9k7k8pgnhq888d28v851gisk4rdmsry9d") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.54.0 (c (n "swc_node_bundler") (v "0.54.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.265.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.219.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.144.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.139.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.223.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1vj04v74smhzwijqsdisx8jys95sr6qrl65fy0vlc0znfy00cykh") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.54.1 (c (n "swc_node_bundler") (v "0.54.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.265.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.219.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.144.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.139.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.223.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "01mh3r9zvls1fiamk12zlxvyx8hkih1l81gwfxbcvs24s0yrfzsk") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.54.2 (c (n "swc_node_bundler") (v "0.54.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.265.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.219.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.144.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.139.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.223.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "07cfmm517622pw5jyxca4s41ahajyx31mgcsca0cw2lxqll60d9b") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.54.3 (c (n "swc_node_bundler") (v "0.54.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.265.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.219.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.144.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.139.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.223.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1hk68ablha79d6rrvfg4r2ndg7znq77k0wf12yad66r1pxhzyy34") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.54.4 (c (n "swc_node_bundler") (v "0.54.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.265.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.219.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.144.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.139.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.223.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0i006njbrzzizqpd45smmzhn8s4xjffdxxb3662c372gy0lcdq18") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.54.5 (c (n "swc_node_bundler") (v "0.54.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.265.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.219.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.144.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.139.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.223.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1w2v0bxxj1hg4sw67wg0h53436wdacpkyl7qp6iwvrwfzrx12rdg") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.54.6 (c (n "swc_node_bundler") (v "0.54.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.265.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.219.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.144.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.139.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.223.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0mnmds81ifx5l042xi03n05z14449fbnf8kd5k1zg6nkv120jbck") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.54.7 (c (n "swc_node_bundler") (v "0.54.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.265.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.219.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.144.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.139.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.223.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0a315knjwcz0v2n4pcw3nsfqv774709ynmjk4vb655dmrpjcadvj") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.54.8 (c (n "swc_node_bundler") (v "0.54.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.265.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.219.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.144.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.139.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.223.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0p9l3j1sx5r8pis1wdmrs2dq3llm81skrhdj9wszrsvcj2mnnsxm") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.54.9 (c (n "swc_node_bundler") (v "0.54.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.265.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.219.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.144.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.139.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.223.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1csbb837nyak4zdza2wplr6jwiai74d5b1qji9cflygsb4ahyahx") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.54.10 (c (n "swc_node_bundler") (v "0.54.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.265.10") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.219.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.144.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.139.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.223.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.122.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1km3gvrisb2j5gsff7a6si6xp244nd8wja08cd3874sgw8fhmlia") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.54.11 (c (n "swc_node_bundler") (v "0.54.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.265.11") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.219.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.144.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.139.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.223.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.122.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "13s35vhxs28wv4m6hy5pv3imxhxn6sh0gbmc4vp8mdlv4635s53s") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.0 (c (n "swc_node_bundler") (v "0.55.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0m59lsfd1kphz7lwl3wq6p5hjx59b5l307gfgkxx5jb59a25amvw") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.1 (c (n "swc_node_bundler") (v "0.55.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0slyq7qkrm3p2k8k08pp32an519m46dmgr7als03h89q7j8hmr4s") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.2 (c (n "swc_node_bundler") (v "0.55.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "09iq2265r1v9gqgv6sg03g4rjyx9xfss81sm72w2vhfa7gi4yr5q") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.3 (c (n "swc_node_bundler") (v "0.55.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1qjj0lrh4f1n0n6jycsi3hysa3sbfr907lqxaww22p4rcn4m1njh") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.4 (c (n "swc_node_bundler") (v "0.55.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1cq8xiycilnnb7fih9kbk8nimr38gfs3020bnsg1ml2jkqi3n9qj") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.5 (c (n "swc_node_bundler") (v "0.55.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0ij6q734fq6k512ajf6832bk024g4dyp5kx9vck91q4phgzpgf5y") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.6 (c (n "swc_node_bundler") (v "0.55.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0c71m474l9pcsi15adpkdnbva7jff0j3jnwhcq7i8chhy4fjbk34") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.7 (c (n "swc_node_bundler") (v "0.55.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "00n5mmdng7vq3cfjyd4k6vchjy3zs2vpzwqlbx8459hc7zybgp2j") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.8 (c (n "swc_node_bundler") (v "0.55.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1n8aabqb7k1kcm9wfdx89ccnpzsg70523kx92bvmkwravm7lyaa3") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.9 (c (n "swc_node_bundler") (v "0.55.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1yq33gx5jyscazj6vf0vrffzh3lk0798a78x8rvkm5ys96k1i76j") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.10 (c (n "swc_node_bundler") (v "0.55.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.10") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1d4k33z9p9hi69aqc48gkw4yk57hzm3b0890abwmpn31wk2976f1") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.11 (c (n "swc_node_bundler") (v "0.55.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.11") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1bfmddfc7m0kxlnvlv6q5n2fa6189s77nly54imwh2mflx61k2qd") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.12 (c (n "swc_node_bundler") (v "0.55.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.12") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0c49l4ifvd6pwd9kh52i9i3689qjr129jy0in2m925acmqgp3pcn") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.13 (c (n "swc_node_bundler") (v "0.55.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.13") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0qv18jxxr2sxaqxgfi8vficbqx19nl3k9pknm72qjns1hxfp4pwl") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.14 (c (n "swc_node_bundler") (v "0.55.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.14") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1d43q5y69zmadszpsq7wcwff68505jx4xz297haffhgjg831mj5b") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.15 (c (n "swc_node_bundler") (v "0.55.15") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.15") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1dyn9zmvmqn6wbswdr0s3z7w979xv2szwd7ss1gjwbr6bn6lxwfg") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.16 (c (n "swc_node_bundler") (v "0.55.16") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.16") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.11") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0r1w3kphvcqs3xqqnm7iisx2qq2diwl0skq56x2gxyap5v3hmxj5") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.17 (c (n "swc_node_bundler") (v "0.55.17") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.17") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.11") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0jh8ypjm7k56y62574pmrypz9cxiz3ff680058zhknw5drpj3zm3") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.18 (c (n "swc_node_bundler") (v "0.55.18") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.18") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.11") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0ncs3abna0vaphypdg8vw3h8v9989nlba971nrwbpf2gy0wsq1yn") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.19 (c (n "swc_node_bundler") (v "0.55.19") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.19") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.12") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "093j1zwzfn2gkpq2dj0pj0rmkhz5yl94h8d7dfdgbj6kb7gpw2sw") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.20 (c (n "swc_node_bundler") (v "0.55.20") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.20") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "019mg4mdv3gl8mynlmmwnhqkp02xvvs7wr9gwf1fvpjjsqs46d0a") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.21 (c (n "swc_node_bundler") (v "0.55.21") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.21") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.14") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0dsd4zr2xg5qq8svb7akwshfxni6v8ihv3zkzb1pp7xjphw004jj") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.22 (c (n "swc_node_bundler") (v "0.55.22") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.22") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.15") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0rn5hnin1r87m07r3qjn898zqxnv3fyyvdr1m458kqb107kwh61h") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.23 (c (n "swc_node_bundler") (v "0.55.23") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.23") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "043gcsmy559g9ihnd7bjrkaszhh6mfqpcckshng6mh0iz7h4wyrs") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.24 (c (n "swc_node_bundler") (v "0.55.24") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.24") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0qwq7260dsabnizx454v79mgjsiwjx7rxy825n92w6c0nk4mqw9z") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.25 (c (n "swc_node_bundler") (v "0.55.25") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.25") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "095v956v3f3knbav0dl9fry7qri5kap7absj5db5r9b81ddyp140") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.26 (c (n "swc_node_bundler") (v "0.55.26") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.26") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.20") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.19") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "09qpy4j685hyddg58n36irxdhs81k4kcla0z6zajlgyj5zkip2fk") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.27 (c (n "swc_node_bundler") (v "0.55.27") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.27") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.20") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "18dh00r8lbynzn2qnnx2fdg48dp8yba9shlvlnxd0kbh6dz0d2cr") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.28 (c (n "swc_node_bundler") (v "0.55.28") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.28") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.22") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.20") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "09g75qxf3mkshfm70r75aclsvwd6qhynk5wycz2dvcm4wzcfv2xh") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.29 (c (n "swc_node_bundler") (v "0.55.29") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.29") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.22") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.20") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1qxw2g4k1w6psgs2nah10jcyaznprjs33i0pzljsrv3jy8p514zc") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.30 (c (n "swc_node_bundler") (v "0.55.30") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.30") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.21") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0q72zm08b6gz0pg0jxmj39wqndc2nzvksksdwm65kjddl416lws3") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.31 (c (n "swc_node_bundler") (v "0.55.31") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.31") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.24") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.22") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "01dm0p4iz3d96ykyhim1g9dfgxw2h0nskwwyaxid6fix5fa7wlp8") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.32 (c (n "swc_node_bundler") (v "0.55.32") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.32") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.22") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1ivgm1kqf9afb8vywvpka0lzmgg33qgpklnmhy1cixspmh6ibk0d") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.33 (c (n "swc_node_bundler") (v "0.55.33") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.33") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.26") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.23") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0y01xa1qdmnfamc4jvfb383j0jb6vsrb2lqz8przq6zqggrvya6f") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.34 (c (n "swc_node_bundler") (v "0.55.34") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.34") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.24") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0k2hs6vk0gpgkwdm2m5224n0p3lqpibmifwwpjh6ndhr0bk57s2p") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.35 (c (n "swc_node_bundler") (v "0.55.35") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.35") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.28") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.25") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1k27y8djlpchchhramwjf6qfr1k0snnq4zn17zdlqdgb0j5dm7w8") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.36 (c (n "swc_node_bundler") (v "0.55.36") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.36") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.26") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1hg88q6zrf8vgg5k5vgjvsq8rl64b4ksp2v2nw83wn2h9g6zf89a") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.37 (c (n "swc_node_bundler") (v "0.55.37") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.37") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.30") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.27") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0w9dqpndrkm8cmi2q68xhxfm0yf1bayva7ag7aaisjlqgchlbqfy") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.38 (c (n "swc_node_bundler") (v "0.55.38") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.38") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.31") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.28") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1plmpryjq3grdxannzv06p54m2i20mk4f1jxqm4zlsswi81s6c2f") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.39 (c (n "swc_node_bundler") (v "0.55.39") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.38") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.31") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.28") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1cmlzlwyns1mpcfmhq8j94shp3vd4i9vxi3mx5ayj1ibam08swck") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.55.40 (c (n "swc_node_bundler") (v "0.55.40") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.266.39") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.220.32") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.32.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.145.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.44.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.140.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.224.29") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.123.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.34.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0g3a1mn8d3nnnck2psm26ns1096n3ql3wl871c76ggrfzla5f0wr") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.56.0 (c (n "swc_node_bundler") (v "0.56.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.267.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.221.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.225.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1n7xzlv410bcj4ir8gwdywgabj2h7wvd7ld1dm8nmlz49f40mill") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.56.1 (c (n "swc_node_bundler") (v "0.56.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.267.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.221.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.225.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "01ww4kacfy59bsr4gcz8w354cd7573p21bm0zvrm4xwc6mykq9r9") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.57.0 (c (n "swc_node_bundler") (v "0.57.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.268.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.221.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.225.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "19ksjyig8cnh1n6qgcjxc2llrlvkfxr851rdgvcik92gfv2z9lpn") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.57.1 (c (n "swc_node_bundler") (v "0.57.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.268.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.221.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.225.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0n02zps0sywhynk94ddmd3c7pp32mns72advxzlqb0cfzaxvacys") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.57.2 (c (n "swc_node_bundler") (v "0.57.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.268.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.221.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.225.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0xgihi32zkwfmpag5jp6zhh816358xy05vd2y1b4qs1nqw8pvkwg") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.57.3 (c (n "swc_node_bundler") (v "0.57.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.268.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.221.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.225.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1qbqxg0s5hd30a80igrbpzjmfr5p3az197v4dh5cfmnya0c6hm2m") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.57.4 (c (n "swc_node_bundler") (v "0.57.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.268.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.221.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.225.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "09zdzvjs84avm8381h4ib7vwnl25gh2qqpkacad4zzgamp7dy917") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.57.5 (c (n "swc_node_bundler") (v "0.57.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.268.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.221.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.225.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1hmshc726wx5x60b8bh9l1jz7w34zpyzfjfy007rzvj6pk8hglj9") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.57.6 (c (n "swc_node_bundler") (v "0.57.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.268.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.221.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.225.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1l4wsml4aq21d4mv0m1rccmlw87ry09fjmlflc9h8gs63ig7ba1w") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.57.7 (c (n "swc_node_bundler") (v "0.57.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.268.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.221.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.225.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1h2sam0kapnij9b5bl6dpprivpx5rk1klxdn54j9kilhcrb4wmmb") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.57.8 (c (n "swc_node_bundler") (v "0.57.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.268.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.221.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.225.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0bd4c80gw9fd7hswqnn9pnmshc9gg4sqyx2k09jij071mnmv5pv2") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.0 (c (n "swc_node_bundler") (v "0.58.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1pbkx1813w57f6b3k9mg1q5vi6qyym1kvl994v3lg29wbr0j9mqw") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.1 (c (n "swc_node_bundler") (v "0.58.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1rki3q8v7ifgxypi39nlzyv8myf6gg1cjz22f0gbdhgivzdx8i1k") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.2 (c (n "swc_node_bundler") (v "0.58.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0ckch7bclw5glal9b52f4xlimx4p2indr3n2q7gxr7y4djfc9niy") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.3 (c (n "swc_node_bundler") (v "0.58.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1w65v68510v9599mrlpspig068p75gcc71as7jgy3khr3lsamigy") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.4 (c (n "swc_node_bundler") (v "0.58.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1gd6fk2sfwaj8iryap9qigiayd8aw3mri110jwig8aj0hram14na") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.5 (c (n "swc_node_bundler") (v "0.58.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "19hzxs56hni9nxj3an9r2ndxfwh828zvxsyf2sa3k84n1x24i417") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.6 (c (n "swc_node_bundler") (v "0.58.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "02x6da3v03fl8272h7ym2zamwgznph3jmjdf3xh55z6lkdcdajd7") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.7 (c (n "swc_node_bundler") (v "0.58.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1q4a8ixgmib5lm8kpppgf3jx8m7r57g3q19z6jq5slcnvfp5p0sh") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.8 (c (n "swc_node_bundler") (v "0.58.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "08rb6klz953k4m6kvs7km2fgchl80vpdbqqv55bvkpj81xl5pc85") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.9 (c (n "swc_node_bundler") (v "0.58.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "14fcxlkd6rdmgigli9zzri8kxlfvj5awdkzy5j42gys3z36lqss9") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.10 (c (n "swc_node_bundler") (v "0.58.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.10") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "00328k6a0x9d9hxyi3pk09jncix4y9qqyn0hhlxx96aglzd4f64c") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.11 (c (n "swc_node_bundler") (v "0.58.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.11") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0m7m1wdcpi380bmlww71raaykxs47mzpz0m3s7pgblbm8f56y7wk") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.12 (c (n "swc_node_bundler") (v "0.58.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.13") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1w546hydqj6v26pmxn8n77rh2xpyrm71v1viarlszk3kacsngnrf") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.13 (c (n "swc_node_bundler") (v "0.58.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.14") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1y7hd595flanz30sjzmkarkbsszi724hvij55v9a7g7p3ar7f4sl") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.14 (c (n "swc_node_bundler") (v "0.58.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.15") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.0") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.0") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1agm83m10lvgjjdrsygwayq2r7jra7vaj7aj4a3514fb346vrag0") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.15 (c (n "swc_node_bundler") (v "0.58.15") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.16") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.1") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0fq7kiylxdwj6qb9swh5j3qs3j0qv7qxrjl433m8db3dbagygkjs") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.16 (c (n "swc_node_bundler") (v "0.58.16") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.16") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.2") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.1") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1cnsd9sywbgp41d4fmd34ziyflqlx05krsqiigvbmxf2dvkjq83q") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.17 (c (n "swc_node_bundler") (v "0.58.17") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.17") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.11") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0lnkkrr4jwk5nk5ykx841gxh7cb8v471dgjb0bcpgj04lr20a7kk") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.18 (c (n "swc_node_bundler") (v "0.58.18") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.18") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.11") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1zwd8mj9kpjiw1i0j77kr3hinzrp4klr2lqkgdf3c0m6nh11sv7q") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.19 (c (n "swc_node_bundler") (v "0.58.19") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.20") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.12") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1wy8yb80r1y3jlzq8fqyk56h8bfny6xr17f4imkv9l0f2haq3h21") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.20 (c (n "swc_node_bundler") (v "0.58.20") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.21") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0cwlhxwmfs85mzzh3wzy2k9hsnzczn8fg8zzhrpafd3572aacvpf") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.21 (c (n "swc_node_bundler") (v "0.58.21") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.21") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.14") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "17cn88rkwq4y475rmb3rm43rjkbcx366097mmn2r92mbg060ly4r") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.22 (c (n "swc_node_bundler") (v "0.58.22") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.22") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.14") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1d2g9wbrx5bapmvx1vaq3rp65cvj5fckd8bcff2xikqdq1y0qmkg") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.23 (c (n "swc_node_bundler") (v "0.58.23") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.23") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.20") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.15") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "13hg64cqvx46d1amasdmf8j27yyrb3049ynn5d3rfwzc8h4ig8l9") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.24 (c (n "swc_node_bundler") (v "0.58.24") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.24") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0wpq1bb55yima0sms6y460b7d27fcb5fii711yagni6n088r8x8p") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.25 (c (n "swc_node_bundler") (v "0.58.25") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.25") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.22") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1b1y2ycdjws7wmg34wlwrhavnf9ci10f6k7aqxz26bw9510l9m2y") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.26 (c (n "swc_node_bundler") (v "0.58.26") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.26") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1fcf9mf1qmmabgp0r5md26xnbh5lv7va5gccvqcl4wg1pilfg5ph") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.27 (c (n "swc_node_bundler") (v "0.58.27") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.27") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.24") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.19") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0b8glfvlq13vy807zc8aglbrm6vggkafhy379c21956jclg1449s") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.28 (c (n "swc_node_bundler") (v "0.58.28") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.28") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.25") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.20") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0pirgixg0lkpswv8b4mc2pnp3rkcn1m87rdk0ilx4agdwj4rssz0") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.29 (c (n "swc_node_bundler") (v "0.58.29") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.29") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.26") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.21") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0xya6p84gw53zxs1aic66r578xjpxrk92blczz14x22bsrbcilfk") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.30 (c (n "swc_node_bundler") (v "0.58.30") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.29") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.26") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.21") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "12wdlnzrpq6jzkf0jdnil9awsg8ljfvcdjxinjxk5xvm8xi4k6z7") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.31 (c (n "swc_node_bundler") (v "0.58.31") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.30") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.22") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "004fawsl40d77qpbv3v86j6x9a5ss1w13792rappv0rq96ybz8ha") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.32 (c (n "swc_node_bundler") (v "0.58.32") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.31") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.27") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.3") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.22") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.2") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "08iqfrbi2c82rrkwqmlwzqv1d075wcacxbz2z2jbbkv4d20qh4x6") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.33 (c (n "swc_node_bundler") (v "0.58.33") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.32") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.28") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.23") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.14") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.3") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0l4my8rq673cb0czqf8bm80hjybmzz5rdxlaynf4sh53cyjnsgzr") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.34 (c (n "swc_node_bundler") (v "0.58.34") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.33") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.29") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.24") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.15") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1cdg09izaqh6pwjjql2qh1xmjivmxfw8g01pv18fjmfq7rm2d8w5") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.35 (c (n "swc_node_bundler") (v "0.58.35") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.34") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.30") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.4") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.25") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.15") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.4") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "097155w2w64w5bq8h68z5mahdcv3v1qk4igl6jy5dvhbxbp8gkax") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.36 (c (n "swc_node_bundler") (v "0.58.36") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.34") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.30") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.13") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.26") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.16") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.8") (d #t) (k 0)) (d (n "testing") (r "^0.35.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0fszsgjjgq73iknd4x70nzcj984x4v0v268hkmvgpfc40549sq0n") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.37 (c (n "swc_node_bundler") (v "0.58.37") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.34") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.30") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.14") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.12") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.27") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.17") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 0)) (d (n "testing") (r "^0.35.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "12phrw0adl2fbrn468mp00s9xzhmb3dccgdhky9fn1dxhx0s13ax") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.38 (c (n "swc_node_bundler") (v "0.58.38") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.34") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.0") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.30") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.15") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.5") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.13") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.28") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.18") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.5") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 0)) (d (n "testing") (r "^0.35.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "03rgim5lhhvyd79jm1xr21mcn27ad9xgirp923spggmp1j2babv6") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.39 (c (n "swc_node_bundler") (v "0.58.39") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.35") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.1") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.31") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.6") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.16") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.6") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.14") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.29") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.19") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 0)) (d (n "testing") (r "^0.35.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1fl3lhw7srpyhm9jx0kgwphzak8nqh73hvg02vgkiwfks059y991") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.40 (c (n "swc_node_bundler") (v "0.58.40") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.36") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.1") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.32") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.6") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.6") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.15") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.30") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.20") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 0)) (d (n "testing") (r "^0.35.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "01hpv055i29slk0xqk426ccwqjppssxi2kj0mh7ykmb62l1br0kg") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.41 (c (n "swc_node_bundler") (v "0.58.41") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.36") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.1") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.32") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.6") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.17") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.6") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.15") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.30") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.20") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.6") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 0)) (d (n "testing") (r "^0.35.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1cnfph71civr8akb1w8rx7qx9kqbdw8p93f8y22bgzky8xs9nwbg") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.42 (c (n "swc_node_bundler") (v "0.58.42") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.37") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.2") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.33") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.18") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.16") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.31") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.21") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 0)) (d (n "testing") (r "^0.35.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1w8cjlx8qdzm73fx1dwbz5n4l057sjrwswlsb41spdyr75kgvx7h") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.43 (c (n "swc_node_bundler") (v "0.58.43") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.38") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.2") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.33") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.7") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.18") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.7") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.16") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.31") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.21") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.7") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 0)) (d (n "testing") (r "^0.35.8") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0lfd7irk6cvygf9wyv9dn6i7qa4cgkd0hk2nkb67z8lh84mwbyc9") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.44 (c (n "swc_node_bundler") (v "0.58.44") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.39") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.3") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.34") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.8") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.19") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.8") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.17") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.32") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.22") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.8") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 0)) (d (n "testing") (r "^0.35.9") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "08crzqa23m8ngqx9n73agr8zrk0ncxk1j66kjkh4w4bjyz24n6ph") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.45 (c (n "swc_node_bundler") (v "0.58.45") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.40") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.35") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.20") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.18") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.33") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.23") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1i8rz1xyw2rq60kw71ysfzgw2ydc879sbkpx83jwj3prd9y9vp6q") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.46 (c (n "swc_node_bundler") (v "0.58.46") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.41") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.36") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.20") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.18") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.33") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.23") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "16p3v76lgafwzn0xiy6x8cml99pdq26lm9hlsx3f4q1myn36jkbf") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.47 (c (n "swc_node_bundler") (v "0.58.47") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.42") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.36") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.20") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.18") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.33") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.23") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1mj13x8b38cskp9dxidnbyl00r43xj3464xb29gdafy26vn1m1df") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.48 (c (n "swc_node_bundler") (v "0.58.48") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.43") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.37") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.21") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.18") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.34") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.23") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1cmlajbpcp99dkcjb6wmwjc1nhhh22vhzpfxznj9pm35r445aw0y") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.49 (c (n "swc_node_bundler") (v "0.58.49") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.44") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.38") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.21") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.18") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.35") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.23") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0midzxlx8nx1bzbyjm94fsrg2y4g9j2pcip7rlszylk8s8cz7p2a") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.50 (c (n "swc_node_bundler") (v "0.58.50") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.45") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.39") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.22") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.19") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.36") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.24") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0hrsl474p39i974gfpni34vkamq0zfqi2dspim1adjz4hkm467c5") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.51 (c (n "swc_node_bundler") (v "0.58.51") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.46") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.40") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.23") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.20") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.37") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.25") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "swc_node_base") (r "^0.5.9") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0pwh4ldrsgzjmk67db0zqk6jwzrzxxmk163rxj79hz3f8k0r5jba") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.52 (c (n "swc_node_bundler") (v "0.58.52") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.47") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.41") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.24") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.21") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.38") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.26") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1kk8s4nq39q4m8nkixcnf9m0a34nn4ahbqc1ngji89ldajk5ibpw") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.53 (c (n "swc_node_bundler") (v "0.58.53") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.48") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.42") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.24") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.21") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.38") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.26") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0i51rpibkh3w9m1jdzqbxvg49lg04skd2xgslfbqqdrk924wbpg1") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.54 (c (n "swc_node_bundler") (v "0.58.54") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.49") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.43") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.25") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.22") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.39") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.27") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "01ca5x7lbgi2idxvv610c3j77wy419fjs4r0nrnbq962gmlmi8n7") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.55 (c (n "swc_node_bundler") (v "0.58.55") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.50") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.44") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.25") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.22") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.40") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0mjqf6074azvi74wjclfhr9bvrj4m953mhyyrzl9gj4fqqpzfx80") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.56 (c (n "swc_node_bundler") (v "0.58.56") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.51") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.45") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.25") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.22") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.40") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "01q0272l52gv31xz4d9xj64j5pk59s1hk35vx0dwb5p6wckjabgy") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.57 (c (n "swc_node_bundler") (v "0.58.57") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.52") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.46") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.25") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.22") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.40") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0r4493pv8c4c9cqrimrh0cypmg2s7kh49rz3x19ca3a4cah677j5") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.58 (c (n "swc_node_bundler") (v "0.58.58") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.53") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.47") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.26") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.22") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.41") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "10k2jlxskh3yvbi08f8la8kyvpxfa4kn6y157r7vfv1szxspwy9g") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.59 (c (n "swc_node_bundler") (v "0.58.59") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.54") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.48") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.26") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.22") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.41") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0m7amag79i611mjk4qycf94g3if11rig1swpqjl0fhcnqysqr3l4") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.60 (c (n "swc_node_bundler") (v "0.58.60") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.55") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.49") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.9") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.26") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.9") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.22") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.41") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.28") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.9") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "17lyjp23392xdgn09dxkjsv8fzazm49276cg5i84k21wrvzhq2wk") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.61 (c (n "swc_node_bundler") (v "0.58.61") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.56") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.50") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.27") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.23") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.42") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1nw3kvqh9igbc9jy24s7bc71bkk3jypfcx0q52c9vsbfx2dhbwbp") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.62 (c (n "swc_node_bundler") (v "0.58.62") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.56") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.50") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.27") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.23") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.43") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "15460hyvjxqyj7zs5wy1rmj84f7jmxqxq5bqfg490pk2i2p70h0r") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.63 (c (n "swc_node_bundler") (v "0.58.63") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.56") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.50") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.27") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.23") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.44") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "08kss92xwf98brhy2mrnrbpl342dzlqz6l3psp7a6ng3cdk3qp9b") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.64 (c (n "swc_node_bundler") (v "0.58.64") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.57") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.51") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.28") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.23") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.45") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0jy4jd0sy8g7qw00faym1xbdp1wllb2ya1h00a3bll6p6bgsnb6x") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.65 (c (n "swc_node_bundler") (v "0.58.65") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.58") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.52") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.29") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.23") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.46") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0z5ynv1k1fzcz8v2x973kx48ha5y2506n0dhgmj2niyr1kkrs1ig") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.66 (c (n "swc_node_bundler") (v "0.58.66") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.59") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.53") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.29") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.23") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.46") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "18sl7c80p5gqqhs83gkdi51xvi2kb31xpjf0da5v9yy1pf8ypw6n") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.67 (c (n "swc_node_bundler") (v "0.58.67") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.60") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.54") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.29") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.23") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.47") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "009lkgrabc77cf5rky68zw1sr7kmf34fgw6fnwfhphp18wcxqng0") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.68 (c (n "swc_node_bundler") (v "0.58.68") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.61") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.55") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.29") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.23") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.47") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1d49ygz68hcwyhx73pdl5dvn82rhd6i7d0g4gh4kpd9x5xq1q40n") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.69 (c (n "swc_node_bundler") (v "0.58.69") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.62") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.56") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.29") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.23") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.48") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.29") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "181w6iq8gimsdvb19hw192sqs2sk41c910w5nh731idaxz0h6vyl") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.70 (c (n "swc_node_bundler") (v "0.58.70") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.63") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.57") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.30") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.24") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.49") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.30") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1c5m7nwnynpdcx7zh026xzf4cp1163kpspj9nkgj5fjgiqj4h4b7") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.71 (c (n "swc_node_bundler") (v "0.58.71") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.64") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.58") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.31") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.25") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.50") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.31") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0nc40fwgsm4fwlsw3858ikdd08m7dx7knl3rdfjdw1km6agpjjkz") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.72 (c (n "swc_node_bundler") (v "0.58.72") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.65") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.60") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.32") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.26") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.52") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.32") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0cjxanx4wnr911rysqkjv00jmn26z4svifkpnp9vympyjv8jqvq6") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.73 (c (n "swc_node_bundler") (v "0.58.73") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.66") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.61") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.32") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.26") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.53") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.32") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1861nyb9wd8v00na8hrjdkbl5nlh838jdrhpyb46w13y002dnw4i") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.74 (c (n "swc_node_bundler") (v "0.58.74") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.67") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.62") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.32") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.26") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.54") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.32") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1pn9anvxp63h2300h6wg2mbi7w6nz0553b6pg484gqk62cw0jrpn") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.75 (c (n "swc_node_bundler") (v "0.58.75") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.68") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.63") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.33") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.27") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.55") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.33") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "18sy7i19c61sq2y7vgslwx5s3j52gd97xfsjdsy5yfha8c2hh1rh") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.76 (c (n "swc_node_bundler") (v "0.58.76") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.68") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.64") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.33") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.27") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.55") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.33") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0yz72zhk6ganm8s888ias5i4h7yplb1r03bd5sr0qj4y5cz56vnk") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.77 (c (n "swc_node_bundler") (v "0.58.77") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.69") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.65") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.33") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.27") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.56") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.33") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1wxnnf5vjklj63wzsv8za4d39asl82f55f7a16s862q83fijx01g") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.78 (c (n "swc_node_bundler") (v "0.58.78") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.70") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.66") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.33") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.27") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.56") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.33") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "154la36dqr7wrnlnmgis0kwi9da9fyqdbqap5nrgjqylpp64z3kj") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.79 (c (n "swc_node_bundler") (v "0.58.79") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.71") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.67") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.33") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.27") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.57") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.33") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "08naz07323v3pa6lz35fk5fphjvcnd05dfx159xqjq8k7xfn8ac0") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.80 (c (n "swc_node_bundler") (v "0.58.80") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.72") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.68") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.34") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.28") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.58") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.34") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "03s1fcbg8vfqvqdnwgqkyq01jkspl2y0yx74rwfppxwfk3p6rgxm") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.81 (c (n "swc_node_bundler") (v "0.58.81") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.73") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.69") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.35") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.28") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.59") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.34") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1pl0ja9410w1m749rz8s6b1wvsazf72ix5v281w3x7vbvz50vhwa") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.82 (c (n "swc_node_bundler") (v "0.58.82") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.74") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.70") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.35") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.28") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.60") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.34") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "084x2xsgkj5cplhv1xqavs6c0xbbpynyhgafhi1dkzn60n3mvdds") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.83 (c (n "swc_node_bundler") (v "0.58.83") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.75") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.4") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.71") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.10") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.36") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.10") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.28") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.61") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.34") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.10") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1bd4w90n3b40vbynddsd9pmr9wk0xyjzgiyp10j25ghmyv3zsqw1") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.84 (c (n "swc_node_bundler") (v "0.58.84") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.76") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.72") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.37") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.29") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.62") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.35") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.11") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0ya4njiaw697a5iws50z29pm1b36c81rzjxnakc9g09z8d360y1h") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.85 (c (n "swc_node_bundler") (v "0.58.85") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.77") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.73") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.38") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.29") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.63") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.35") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.11") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0zv8ixd5j6w8znz3ps5jgv462xzspmrybakvq3i24dq2y3279dm6") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.86 (c (n "swc_node_bundler") (v "0.58.86") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.78") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.74") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.38") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.29") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.64") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.35") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.11") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0rs8npwcp1m0brn9cr8nwfs4jn9i3xqlj5f3dzj67bqfb4iccsw0") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.87 (c (n "swc_node_bundler") (v "0.58.87") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.79") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.74") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.11") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.38") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.29") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.64") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.35") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.11") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0smf79mchhjkzfhg2vw6a3h1bbnnkibf49v4pyf27b4rla2z7f2y") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.88 (c (n "swc_node_bundler") (v "0.58.88") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.80") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.75") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.12") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.39") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.30") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.65") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.36") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.12") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "00pc8xvxj6jb5cdsxyqfim4hjdqfdzxzd0jdlrbnqfy4z4f3scpv") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.89 (c (n "swc_node_bundler") (v "0.58.89") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.81") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.76") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.12") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.39") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.30") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.66") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.36") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.12") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1w5n86a7k8nf11lh0n56g7xii9prkxscs74gzdych8vl6svak905") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.90 (c (n "swc_node_bundler") (v "0.58.90") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.82") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.76") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.12") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.39") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.30") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.66") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.36") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.12") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "104q7970i7g3d2krmh0232p09j55m3p3x40bfaghhg43w4f98343") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.91 (c (n "swc_node_bundler") (v "0.58.91") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.83") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.77") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.12") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.40") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.30") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.67") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.36") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.12") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1rbr1j2rpgd19hfsg61fg0ny8b9w2hkyp510ha8859ddzlgw50fp") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.92 (c (n "swc_node_bundler") (v "0.58.92") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.84") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.77") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.12") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.40") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.11") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.30") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.67") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.36") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.12") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.12") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0fa72i3gyxx9k6j00x72wrh2v1b1p42w6cqmjbvx46iznl33vsa3") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.93 (c (n "swc_node_bundler") (v "0.58.93") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.85") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.78") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.13") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.41") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.12") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.31") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.68") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.37") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.13") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1wp0a8ywc3sppd02amwqr0nqrgi29bpv7930k0vrky382g1mwg26") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.94 (c (n "swc_node_bundler") (v "0.58.94") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.1") (d #t) (k 0)) (d (n "swc") (r "^0.269.86") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.79") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.13") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.41") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.12") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.31") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.69") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.37") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.13") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.13") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1v3fm9myp1q711srm1c4fxci6fa80zz18fqi0mpijx9y2brrqflv") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.95 (c (n "swc_node_bundler") (v "0.58.95") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.269.87") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.80") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.14") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.42") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.32") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.70") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.38") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.14") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0n20qqli6razhij3vwy668dl9za9nfv9jrrzr358l0ysqvsjr3xc") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.96 (c (n "swc_node_bundler") (v "0.58.96") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.269.88") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.81") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.14") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.42") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.32") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.71") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.38") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.14") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0lwrmxx1yzlm6a80vqvvy6xqlk6nc3ha3a50bdkx9h52djx1cxfb") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.97 (c (n "swc_node_bundler") (v "0.58.97") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.269.89") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.82") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.14") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.42") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.32") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.72") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.38") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.14") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0hjjxp3rki83kx4rj38brjmj7vkb6qb4li5dq12lisnjkgvdd77v") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.98 (c (n "swc_node_bundler") (v "0.58.98") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.269.90") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.83") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.43") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.33") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.73") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.39") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "07ydm2f94sc1jzd88hf93dq9hzihlbsyjxhxh8n4ibki8021cspi") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.58.99 (c (n "swc_node_bundler") (v "0.58.99") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.269.91") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.222.84") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.44") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.33") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.74") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.124.39") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "01h8xj3gimm3x542wlabi1jny00d9bj0m7b7s4w8zbppc7zmmykg") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.0 (c (n "swc_node_bundler") (v "0.59.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.44") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.33") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "01ldvpd94xr9c3gnmgp6cvr8pizb6n2bxpzl4vag7ayzzli0bwb9") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.1 (c (n "swc_node_bundler") (v "0.59.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.45") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.33") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "13w14irb36snbszfk3ps0maspa5kblj189c04jwg6nrjsb6ymg2z") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.2 (c (n "swc_node_bundler") (v "0.59.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.45") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.33") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1fgnygb0dlcba2czpbs0h5wlzia169rmnx1lcghhw4jz7p8chrkp") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.3 (c (n "swc_node_bundler") (v "0.59.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.45") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.33") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0qksvz0lw3rvabp1rlp7xinys7z49i6n9zrb5nai3jgd6ks79fgv") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.4 (c (n "swc_node_bundler") (v "0.59.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.46") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.33") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0nbbw1mha2bhklskd0wryqnd7yxc8n24wpc38j0g9rf4l6sf5yba") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.5 (c (n "swc_node_bundler") (v "0.59.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.46") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.33") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0kvbfy158afi6s2b9ldgdnl93qv4z1zfk8ymsmg8rddq9fjc1i6d") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.6 (c (n "swc_node_bundler") (v "0.59.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.46") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.33") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1ml2xqapjhy1dx40p94c4p75v6gsk4da91q40pwh4nphpmqyxw46") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.7 (c (n "swc_node_bundler") (v "0.59.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.47") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.33") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1s77rals0qylg58a3lg38rliwqn3xjcn88j4kgzj6babwfn5xdsd") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.8 (c (n "swc_node_bundler") (v "0.59.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.47") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.33") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0cxk5c1x9scy9p6fb4mk9vpj2iwsnzx17xkym6q5cf957mssmhnh") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.9 (c (n "swc_node_bundler") (v "0.59.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.10") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.48") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.34") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "16c79db57i6xl004hk4rd6zv24h95cdxkqvghwib39ng2d1hx86m") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.10 (c (n "swc_node_bundler") (v "0.59.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.11") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.48") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.34") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1m2mkndv78vd2xbp9rmmsnnh211idrcb7q5wjrrs353033imvd98") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.11 (c (n "swc_node_bundler") (v "0.59.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.12") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.49") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.34") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1q49qk8xfz50b9mzvcqmi400k87mnbrsff9haf6zx5wgsksgsp1a") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.12 (c (n "swc_node_bundler") (v "0.59.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.13") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.50") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.34") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1gnf0y4af8jxhlbfm0jqlssaiik9lb6laayr0jvvf3lkkrwwc3rx") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.13 (c (n "swc_node_bundler") (v "0.59.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.14") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.51") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.34") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.11") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "100b8g2m22nsw0xyr4sglqlnglwgycr8d67dx3dpf19lmv76jy9k") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.14 (c (n "swc_node_bundler") (v "0.59.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.15") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.51") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.34") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.12") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0zh7hmszpbi8pqc8f03cvhkjyh9mv0dzk9pl5dm3z2hm648mq9az") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.15 (c (n "swc_node_bundler") (v "0.59.15") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.16") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.15") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.51") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.34") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.12") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.15") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0y1jdaqbvhx7dsy6z3519cnnn2vn7w3682nzzn3dvxj54i41nrlz") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.16 (c (n "swc_node_bundler") (v "0.59.16") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.18") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.53") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.36") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.14") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.17") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0271z409ich3l9vawih7nybz0ciqv7g4kwrwq32kgrz401r0rx8b") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.17 (c (n "swc_node_bundler") (v "0.59.17") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.18") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.54") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.37") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.15") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.17") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0wgw2n4pafk4yijjixp8jclvzlckc8h4c3qrn50am0libhkv2mca") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.18 (c (n "swc_node_bundler") (v "0.59.18") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.19") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.54") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.37") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.17") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "09wyvibfljl1hmd9znp286nk7cp041f1rj1z4lyjl1s97glb4813") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.19 (c (n "swc_node_bundler") (v "0.59.19") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.20") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.54") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.37") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.17") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0ya9rarhpyldnyg35ifq3v19pihma745knj6629i4sasm7j1lygm") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.20 (c (n "swc_node_bundler") (v "0.59.20") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.21") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.54") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.37") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.17") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1dsnmw2is2hlyrn3n1a1p1s871vlz41m7jgyq1pr1bxpasqkfw6r") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.21 (c (n "swc_node_bundler") (v "0.59.21") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.22") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.54") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.37") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.17") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0w5pd67xhbx45c5kgfyfiia0mq2k7c8gz8yrxp7mbdv83akfigf2") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.22 (c (n "swc_node_bundler") (v "0.59.22") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.23") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.20") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.54") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.37") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.17") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "03x3xmmmx8rr3ad9sk8x5y424m9x5wmf3y73na8wfinasd23d9x5") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.23 (c (n "swc_node_bundler") (v "0.59.23") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.24") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.21") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.54") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.37") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.18") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.17") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "05133aqr9b5a534nc7p8vdxvn7xbl3d3znz1shby8yc2m2l30hx1") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.24 (c (n "swc_node_bundler") (v "0.59.24") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.25") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.22") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.54") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.37") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.19") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.17") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1a2l5spl4v3apdjhms7w3jjkv8dz0yhyym6y3kqjs9z55cck2b78") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.59.25 (c (n "swc_node_bundler") (v "0.59.25") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.270.26") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.223.23") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.110.17") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.55") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.13") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.141.37") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.20") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.125.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.96.17") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1bi35jl0k9chk3ix688qqz2591h8kvybp824qgjxq22krvv68skm") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.60.0 (c (n "swc_node_bundler") (v "0.60.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.271.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.224.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.147.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.14") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.142.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.228.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.126.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.0") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0qlv8z37wcr08hzcxi9vhxpfhn0vfjpv9y9jah65wjlcpmk4h395") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.60.1 (c (n "swc_node_bundler") (v "0.60.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.271.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.224.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.147.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.15") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.142.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.228.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.126.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.0") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.15") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1qnyd45zb7jgg63cmr2jpx1sz4f7knzkzx5w6h93nlhi20nb7xsc") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.61.0 (c (n "swc_node_bundler") (v "0.61.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.272.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.224.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.147.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.16") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.142.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.228.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.126.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.1") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0z87j57i6azvgk7116mfbxgcj1987j9r3qg3267hhzznfbw8b6df") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.61.1 (c (n "swc_node_bundler") (v "0.61.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.272.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.224.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.147.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.16") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.142.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.228.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.126.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.1") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1i4nb308vrjvn18ppvpa2mvr2k87gy19r2apfk9y4aphgwxmmh91") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.61.2 (c (n "swc_node_bundler") (v "0.61.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.272.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.224.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.147.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.16") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.142.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.228.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.126.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.1") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1wcrypb078264afpvqv7jvs94ihs532a5zsa77arjh5rm28icpp3") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.61.3 (c (n "swc_node_bundler") (v "0.61.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.272.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.224.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.147.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.17") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.142.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.228.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.126.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.1") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1dsbc36ijbksvkaswv41y01z7xc112dipihxb3m75kcayb4pspb7") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.61.4 (c (n "swc_node_bundler") (v "0.61.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.272.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.224.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.147.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.17") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.142.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.228.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.126.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.1") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "064m7ry2zakq28cqdyrhgq090s0fymza7x9ywbbq048kr55vp147") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.61.5 (c (n "swc_node_bundler") (v "0.61.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.272.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.224.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.147.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.17") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.142.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.228.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.126.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.1") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "02y8cpj6zvyw02l4rwibvbdar0l8cpgaz73wv2il41ivmh2r945v") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.61.6 (c (n "swc_node_bundler") (v "0.61.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.272.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.224.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.147.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.17") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.142.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.228.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.126.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.1") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "129chx25afcwrr1rar6ag3d2airhk7fdlyx9m4mymxc43la8vg2j") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.61.7 (c (n "swc_node_bundler") (v "0.61.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.272.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.224.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.147.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.17") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.142.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.228.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.126.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.1") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "13bs6bzjzw47vjs0yz50rwiizq12pr1fl0fjmxwlcf7sxbpx09q8") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.61.8 (c (n "swc_node_bundler") (v "0.61.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.272.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.224.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.111.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.147.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.17") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.142.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.228.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.126.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.97.1") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.16") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "11q5zfhf7zkf0a3wl1l00s8srcjhhj8rc5mclpa079gy1yqvl453") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.0 (c (n "swc_node_bundler") (v "0.62.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.18") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0y8ha490kpyws2lnzhjhkndq3czz1ng7q1k6l6wcjkx0fwx7yznz") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.1 (c (n "swc_node_bundler") (v "0.62.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.18") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.0") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1w8a2mik8ivgjfj4db09lr7crp45dv9hw881d3cak633426zz8ki") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.2 (c (n "swc_node_bundler") (v "0.62.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.2") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.2") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.2") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.18") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.2") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.2") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.2") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.1") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.17") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1pcjh66yfhhy5l843djwaia8lnvcs9y235f33b94gs1f1cxwzikz") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.3 (c (n "swc_node_bundler") (v "0.62.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.3") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.19") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.2") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.18") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0krfa3kgsx4vssjl91jharrk506wy66inl88ih2d01zvnq9ili0j") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.4 (c (n "swc_node_bundler") (v "0.62.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.4") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.3") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.19") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.3") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.3") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.2") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.18") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0g455gysg1ajvxg9g2f68ip3h4x49mv9wkqp4jp9zagj3zn0jdxp") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.5 (c (n "swc_node_bundler") (v "0.62.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.5") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.4") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.19") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.4") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.2") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.18") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1fgbv1w81j10636v4v7m1c421yrqd2nff5hr1srplv89b6vxgnh3") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.6 (c (n "swc_node_bundler") (v "0.62.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.6") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.5") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.19") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.5") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.4") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.2") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.18") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1l15hj0kf2jsf22yvgc09xylbcrpk4h6g433v98jimgnzqlbygdf") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.7 (c (n "swc_node_bundler") (v "0.62.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.7") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.6") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.2") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.3") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.19") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.6") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.5") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.2") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.18") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0b4gdsii9jjmlw680w75b9xwjl5zymsmcrnw1b3x3335xsfhazzh") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.8 (c (n "swc_node_bundler") (v "0.62.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.8") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.3") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.4") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.19") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.4") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.7") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.6") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.3") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.18") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1zj28ld2rbvjpzmja7icjiqyis93x3iwhj40dh8bk2nzzcxvk9vq") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.9 (c (n "swc_node_bundler") (v "0.62.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.9") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.7") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.5") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.8") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.4") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1adhyqk5kjsrfsawcrvrnffd154hpiqlp9wzs1s9x934hiwnwaiq") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.10 (c (n "swc_node_bundler") (v "0.62.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.10") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.8") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.6") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.9") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.4") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1bsghk5xmrpb2cgw3nxpmnanqb4rifj7ngzb4mcsmyjwqal51ffn") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.11 (c (n "swc_node_bundler") (v "0.62.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.11") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.4") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0a141giadcfz6mkf4kvk08qp4zkya5wp008q8vdc8bss1skfy5lk") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.12 (c (n "swc_node_bundler") (v "0.62.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.12") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.4") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1jinpch0wh71d862134wmprha2k8k47n5bzjhiymdaf1asqsscas") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.13 (c (n "swc_node_bundler") (v "0.62.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.13") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.9") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.7") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.10") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.7") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.4") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1zlp6h2kwn699xjngz6isqwx1b1p8jjqirwrjyc610dk5nly9alx") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.14 (c (n "swc_node_bundler") (v "0.62.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.14") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.10") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.18") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.4") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.8") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.20") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.11") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.8") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.5") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.19") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1wn8z53d59ml6lgnpkn35b14aawxr46qh73gx1q1gf5vn0cq36r3") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.15 (c (n "swc_node_bundler") (v "0.62.15") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.15") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.11") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.9") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.21") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.7") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.12") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.9") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.6") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "12b8v5f0g41yp2sipvb7p25brl6y5p90bbm7wsgrzfid66rk0ynv") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.16 (c (n "swc_node_bundler") (v "0.62.16") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.16") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.12") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.21") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.6") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1dj3x8gqfzqpws04g52i55733w1k0frmd591aa0nq3mi3fypbgnx") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.17 (c (n "swc_node_bundler") (v "0.62.17") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.17") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.13") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.21") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.13") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.10") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.6") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0i6xxk7ykhndk1bmzy3nnc7vhqibxhmndwr8c114q8p8zb1ii157") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.18 (c (n "swc_node_bundler") (v "0.62.18") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.18") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.14") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.21") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.14") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.6") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "06fw72bgbg1jd6g0jdqawjks7jv5ll1mdfs8gb5csakz7qidi4ci") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.19 (c (n "swc_node_bundler") (v "0.62.19") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.19") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.21") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.15") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.6") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0i2gwgz7hj74vs7frhzjjwyqv8zl2919v4bw350hhbz9rbqhl2dg") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.20 (c (n "swc_node_bundler") (v "0.62.20") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.20") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.15") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.10") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.21") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.8") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.15") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.11") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.6") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "047qm3f9qlr28s6j7b079a5481c4dpp3zw4vds8bizypwzz5123r") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.21 (c (n "swc_node_bundler") (v "0.62.21") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.21") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.16") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.19") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.5") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.11") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.22") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.16") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.12") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.6") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "16c120gpmg11q8m66lyw09glvsx1v0j0bi3907nwf6n9psa21058") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.22 (c (n "swc_node_bundler") (v "0.62.22") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.22") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.20") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.6") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.23") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.7") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "127xh3ycnvigsy1b8wxg3v1ggia1lrvw3wlqkna4hql7g0p9n1q7") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.23 (c (n "swc_node_bundler") (v "0.62.23") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.22") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.20") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.6") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.23") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.7") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "0ah2vcscl0w5aq7ibjm1fimdx4k69symldwii89rs3d6nhkayrcr") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.62.24 (c (n "swc_node_bundler") (v "0.62.24") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.273.22") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.225.17") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.20") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.112.6") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.12") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.23") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.143.10") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.17") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.127.13") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.98.7") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "1lyq7hbw31dfkk64v84r8wkv7gy84v6knh921lmcfxvfpkgxi1b0") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.63.0 (c (n "swc_node_bundler") (v "0.63.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "swc") (r "^0.274.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.226.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.20") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.113.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.149.0") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.23") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.144.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.230.0") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.128.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.99.0") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.21") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "1p2z53s5fi9pa9wyj4rb33hhj3fsiyvk1iq2ljbv98l1dirijxr8") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.63.1 (c (n "swc_node_bundler") (v "0.63.1") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.4") (d #t) (k 0)) (d (n "swc") (r "^0.274.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.226.1") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.26") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.113.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.149.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.144.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.230.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.128.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.99.1") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "0awy19m8la6gwsr6slqvz07587a0w8yir6bywb445cyq5h609ar1") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

(define-public crate-swc_node_bundler-0.64.0 (c (n "swc_node_bundler") (v "0.64.0") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "is-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "string_enum") (r "^0.4.4") (d #t) (k 0)) (d (n "swc") (r "^0.275.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.6.5") (d #t) (k 0)) (d (n "swc_bundler") (r "^0.227.0") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_common") (r "^0.33.26") (f (quote ("concurrent"))) (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.113.1") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.149.1") (d #t) (k 0)) (d (n "swc_ecma_loader") (r "^0.45.28") (d #t) (k 0)) (d (n "swc_ecma_parser") (r "^0.144.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.230.1") (d #t) (k 0)) (d (n "swc_ecma_utils") (r "^0.128.1") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.99.1") (d #t) (k 0)) (d (n "swc_malloc") (r "^0.5.10") (d #t) (k 0)) (d (n "testing") (r "^0.35.24") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "1h4lz5060yk5w88y6yn1mk910sawc5n5h52dx1hcphn2a6a1ibj2") (f (quote (("swc_v2" "serde-impl") ("swc_v1" "serde-impl") ("serde-impl" "serde") ("default" "swc_v1"))))))

