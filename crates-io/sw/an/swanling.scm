(define-module (crates-io sw an swanling) #:use-module (crates-io))

(define-public crate-swanling-0.0.0 (c (n "swanling") (v "0.0.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gumdrop") (r "^0.8") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "httpmock") (r "^0.5") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (k 2)) (d (n "nng") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "num-format") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("cookies" "json"))) (k 0)) (d (n "rustc_version") (r "^0.3") (d #t) (k 1)) (d (n "rustls") (r "^0.19") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "simplelog") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "io-util" "macros" "net" "rt-multi-thread" "time" "sync"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.15") (d #t) (k 0)) (d (n "tungstenite") (r "^0.14") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "16svy11ky0m6jh825flvnbq5fjhdymv468g8ssyanj3d19zkk25y") (f (quote (("rustls-tls" "reqwest/rustls-tls" "tokio-tungstenite/rustls-tls") ("gaggle" "nng") ("default" "reqwest/default-tls"))))))

