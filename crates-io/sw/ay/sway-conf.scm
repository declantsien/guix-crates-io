(define-module (crates-io sw ay sway-conf) #:use-module (crates-io))

(define-public crate-sway-conf-0.1.0 (c (n "sway-conf") (v "0.1.0") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "nom") (r "^6") (f (quote ("alloc"))) (k 0)) (d (n "nom_locate") (r "^3.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)))) (h "0bdkw93c5qd3c5h5nf60wjhqr21v9xilgnzyd8qg5nkmb0ylkwad")))

(define-public crate-sway-conf-0.1.1 (c (n "sway-conf") (v "0.1.1") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "nom") (r "^6") (f (quote ("alloc"))) (k 0)) (d (n "nom_locate") (r "^3.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)))) (h "15rvvb3y2mqblkh9ifc32wqj2av9mhzqiwfbzw2sad6plicvgb5q")))

(define-public crate-sway-conf-0.2.0 (c (n "sway-conf") (v "0.2.0") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "nom") (r "^6") (f (quote ("alloc"))) (k 0)) (d (n "nom_locate") (r "^3.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)))) (h "1cp00iwsb8hks91ary1filbihhp3hg3h41x4r4ccjl3a574mlxnh")))

(define-public crate-sway-conf-0.3.0 (c (n "sway-conf") (v "0.3.0") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "conch-parser") (r "^0.1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "nom") (r "^6") (f (quote ("alloc"))) (k 0)) (d (n "nom_locate") (r "^3.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)))) (h "1199xj6y5jbbfdjzipyklhnhlh2gsirn4g53scrcnihih3h6zffs")))

