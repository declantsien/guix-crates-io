(define-module (crates-io sw c- swc-plugin-inferno) #:use-module (crates-io))

(define-public crate-swc-plugin-inferno-0.0.1 (c (n "swc-plugin-inferno") (v "0.0.1") (d (list (d (n "base64") (r "^0.21.3") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.1") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha-1") (r "=0.10.0") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.5.9") (d #t) (k 0)) (d (n "swc_common") (r "^0.32.0") (d #t) (k 0)) (d (n "swc_config") (r "^0.1.7") (d #t) (k 0)) (d (n "swc_ecma_ast") (r "^0.109.0") (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.144.0") (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.139.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_base") (r "^0.132.0") (d #t) (k 0)) (d (n "swc_ecma_transforms_compat") (r "^0.158.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_macros") (r "^0.5.2") (d #t) (k 0)) (d (n "swc_ecma_transforms_module") (r "^0.175.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.135.0") (d #t) (k 2)) (d (n "swc_ecma_utils") (r "^0.122.0") (d #t) (k 0)) (d (n "swc_ecma_visit") (r "^0.95.0") (d #t) (k 0)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)))) (h "11qbqd6ag1gj5bddpsrsfw4nj0961r7h54bga8nb56lw87zj26jq") (f (quote (("serde-impl" "serde") ("default" "serde-impl") ("concurrent" "rayon"))))))

(define-public crate-swc-plugin-inferno-0.0.6 (c (n "swc-plugin-inferno") (v "0.0.6") (d (list (d (n "base64") (r "^0.21.3") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.1") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha-1") (r "=0.10.0") (d #t) (k 0)) (d (n "swc_config") (r "^0.1.7") (d #t) (k 0)) (d (n "swc_core") (r "^0.82.1") (f (quote ("swc_atoms" "swc_common" "swc_ecma_ast" "swc_ecma_utils" "ecma_plugin_transform" "ecma_utils" "ecma_visit" "ecma_ast" "common"))) (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.144.0") (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.139.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.223.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_compat") (r "^0.158.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_module") (r "^0.175.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.135.0") (d #t) (k 2)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)))) (h "0fgkhsk4yz0pnv4qz547naqbbbmdskx7bmfwr0v1xs7xq8rzdzg1") (f (quote (("serde-impl" "serde") ("default" "serde-impl") ("concurrent" "rayon"))))))

(define-public crate-swc-plugin-inferno-0.0.7 (c (n "swc-plugin-inferno") (v "0.0.7") (d (list (d (n "base64") (r "^0.21.3") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.1") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha-1") (r "=0.10.0") (d #t) (k 0)) (d (n "swc_config") (r "^0.1.7") (d #t) (k 0)) (d (n "swc_core") (r "^0.82.1") (f (quote ("swc_atoms" "swc_common" "swc_ecma_ast" "swc_ecma_utils" "ecma_plugin_transform" "ecma_utils" "ecma_visit" "ecma_ast" "common"))) (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.144.0") (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.139.0") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.223.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_compat") (r "^0.158.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_module") (r "^0.175.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.135.0") (d #t) (k 2)) (d (n "testing") (r "^0.34.0") (d #t) (k 2)))) (h "16r35rl3lm3w4mmqsgvap56mywzgaxrf90hz81z41mkw8i022cvv") (f (quote (("serde-impl" "serde") ("default" "serde-impl") ("concurrent" "rayon"))))))

(define-public crate-swc-plugin-inferno-0.0.9 (c (n "swc-plugin-inferno") (v "0.0.9") (d (list (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha-1") (r "=0.10.1") (d #t) (k 0)) (d (n "swc_config") (r "^0.1.7") (d #t) (k 0)) (d (n "swc_core") (r "^0.82.11") (f (quote ("swc_atoms" "swc_common" "swc_ecma_ast" "swc_ecma_utils" "ecma_plugin_transform" "ecma_utils" "ecma_visit" "ecma_ast" "common"))) (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.144.2") (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.139.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.223.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_compat") (r "^0.158.5") (d #t) (k 2)) (d (n "swc_ecma_transforms_module") (r "^0.175.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.135.4") (d #t) (k 2)) (d (n "testing") (r "^0.34.2") (d #t) (k 2)))) (h "1waj9my8yicfawzsm9gpppi9hiwwgrf084mdmxb5lbcx1hnab3gp") (f (quote (("serde-impl" "serde") ("default" "serde-impl") ("concurrent" "rayon"))))))

(define-public crate-swc-plugin-inferno-0.0.10 (c (n "swc-plugin-inferno") (v "0.0.10") (d (list (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha-1") (r "=0.10.1") (d #t) (k 0)) (d (n "swc_config") (r "^0.1.7") (d #t) (k 0)) (d (n "swc_core") (r "^0.86.12") (f (quote ("swc_atoms" "swc_common" "swc_ecma_ast" "swc_ecma_utils" "ecma_plugin_transform" "ecma_utils" "ecma_visit" "ecma_ast" "common"))) (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.3") (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.3") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_compat") (r "^0.160.10") (d #t) (k 2)) (d (n "swc_ecma_transforms_module") (r "^0.177.11") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.8") (d #t) (k 2)) (d (n "testing") (r "^0.35.0") (d #t) (k 2)))) (h "1lhlsw6g4r2hwzwrchlqg2dlfwsnhkmgfn23mwbxh2m6mf8a9pgp") (f (quote (("serde-impl" "serde") ("default" "serde-impl") ("concurrent" "rayon"))))))

(define-public crate-swc-plugin-inferno-0.0.11 (c (n "swc-plugin-inferno") (v "0.0.11") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha-1") (r "=0.10.1") (d #t) (k 0)) (d (n "swc_config") (r "^0.1.7") (d #t) (k 0)) (d (n "swc_core") (r "^0.86.23") (f (quote ("swc_atoms" "swc_common" "swc_ecma_ast" "swc_ecma_utils" "ecma_plugin_transform" "ecma_utils" "ecma_visit" "ecma_ast" "common"))) (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.6") (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.6") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.14") (d #t) (k 2)) (d (n "swc_ecma_transforms_compat") (r "^0.160.15") (d #t) (k 2)) (d (n "swc_ecma_transforms_module") (r "^0.177.17") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.13") (d #t) (k 2)) (d (n "testing") (r "^0.35.3") (d #t) (k 2)))) (h "04nd823asg8ih1px3dy4j4z9qrf7yfswq36qb0hyi5dsizp0lb57") (f (quote (("serde-impl" "serde") ("default" "serde-impl") ("concurrent" "rayon"))))))

(define-public crate-swc-plugin-inferno-0.0.12 (c (n "swc-plugin-inferno") (v "0.0.12") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha-1") (r "=0.10.1") (d #t) (k 0)) (d (n "swc_config") (r "^0.1.7") (d #t) (k 0)) (d (n "swc_core") (r "^0.86.34") (f (quote ("swc_atoms" "swc_common" "swc_ecma_ast" "swc_ecma_utils" "ecma_plugin_transform" "ecma_utils" "ecma_visit" "ecma_ast" "common"))) (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.10") (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.9") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.23") (d #t) (k 2)) (d (n "swc_ecma_transforms_compat") (r "^0.160.22") (d #t) (k 2)) (d (n "swc_ecma_transforms_module") (r "^0.177.24") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.18") (d #t) (k 2)) (d (n "testing") (r "^0.35.5") (d #t) (k 2)))) (h "1f8r5fhp3lkgiw1ghn7lv7n7qazkhv8v67bkqal7p1mw44w3s2ny") (f (quote (("serde-impl" "serde") ("default" "serde-impl") ("concurrent" "rayon"))))))

(define-public crate-swc-plugin-inferno-0.0.13 (c (n "swc-plugin-inferno") (v "0.0.13") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha-1") (r "=0.10.1") (d #t) (k 0)) (d (n "swc_config") (r "^0.1.7") (d #t) (k 0)) (d (n "swc_core") (r "^0.86.57") (f (quote ("swc_atoms" "swc_common" "swc_ecma_ast" "swc_ecma_utils" "ecma_plugin_transform" "ecma_utils" "ecma_visit" "ecma_ast" "common"))) (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.25") (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.22") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.40") (d #t) (k 2)) (d (n "swc_ecma_transforms_compat") (r "^0.160.38") (d #t) (k 2)) (d (n "swc_ecma_transforms_module") (r "^0.177.40") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.34") (d #t) (k 2)) (d (n "testing") (r "^0.35.10") (d #t) (k 2)))) (h "0da2wvadi5kmzs97ch7rz9rr2ir5s7yym4b7nisnr260lhsnkhz6") (f (quote (("serde-impl" "serde") ("default" "serde-impl") ("concurrent" "rayon"))))))

(define-public crate-swc-plugin-inferno-0.0.14 (c (n "swc-plugin-inferno") (v "0.0.14") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha-1") (r "=0.10.1") (d #t) (k 0)) (d (n "swc_config") (r "^0.1.7") (d #t) (k 0)) (d (n "swc_core") (r "^0.86.79") (f (quote ("swc_atoms" "swc_common" "swc_ecma_ast" "swc_ecma_utils" "ecma_plugin_transform" "ecma_utils" "ecma_visit" "ecma_ast" "common"))) (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.33") (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.27") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.226.56") (d #t) (k 2)) (d (n "swc_ecma_transforms_compat") (r "^0.160.50") (d #t) (k 2)) (d (n "swc_ecma_transforms_module") (r "^0.177.53") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.137.46") (d #t) (k 2)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)))) (h "10ngiansya7pxcrrqyh7ymk7bd5acvgnk7gywlx7lljrzghi2i4k") (f (quote (("serde-impl" "serde") ("default" "serde-impl") ("concurrent" "rayon"))))))

(define-public crate-swc-plugin-inferno-0.0.15 (c (n "swc-plugin-inferno") (v "0.0.15") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha-1") (r "=0.10.1") (d #t) (k 0)) (d (n "swc_config") (r "^0.1.7") (d #t) (k 0)) (d (n "swc_core") (r "^0.87.0") (f (quote ("swc_atoms" "swc_common" "swc_ecma_ast" "swc_ecma_utils" "ecma_plugin_transform" "ecma_utils" "ecma_visit" "ecma_ast" "common"))) (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.33") (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.27") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_compat") (r "^0.161.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_module") (r "^0.178.0") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.138.0") (d #t) (k 2)) (d (n "testing") (r "^0.35.11") (d #t) (k 2)))) (h "1p32vflkvig81wqrsia6bvaa4sc1krvfd2jlvvsvi8iqm72ripip") (f (quote (("serde-impl" "serde") ("default" "serde-impl") ("concurrent" "rayon"))))))

(define-public crate-swc-plugin-inferno-0.0.16 (c (n "swc-plugin-inferno") (v "0.0.16") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha-1") (r "=0.10.1") (d #t) (k 0)) (d (n "swc_config") (r "^0.1.9") (d #t) (k 0)) (d (n "swc_core") (r "^0.87.10") (f (quote ("swc_atoms" "swc_common" "swc_ecma_ast" "swc_ecma_utils" "ecma_plugin_transform" "ecma_utils" "ecma_visit" "ecma_ast" "common"))) (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.48") (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.34") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_compat") (r "^0.161.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_module") (r "^0.178.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.138.5") (d #t) (k 2)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)))) (h "163cgj86y4v31iqg2d4s8m1na39yjfs248yj9krzff6rs6j8k3xf") (f (quote (("serde-impl" "serde") ("default" "serde-impl") ("concurrent" "rayon"))))))

(define-public crate-swc-plugin-inferno-0.0.17 (c (n "swc-plugin-inferno") (v "0.0.17") (d (list (d (n "base64") (r "^0.21.6") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha-1") (r "=0.10.1") (d #t) (k 0)) (d (n "swc_config") (r "^0.1.9") (d #t) (k 0)) (d (n "swc_core") (r "^0.87.21") (f (quote ("swc_atoms" "swc_common" "swc_ecma_ast" "swc_ecma_utils" "ecma_plugin_transform" "ecma_utils" "ecma_visit" "ecma_ast" "common"))) (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.146.54") (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.141.37") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.227.16") (d #t) (k 2)) (d (n "swc_ecma_transforms_compat") (r "^0.161.15") (d #t) (k 2)) (d (n "swc_ecma_transforms_module") (r "^0.178.16") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.138.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.14") (d #t) (k 2)))) (h "0v6z6m2si22ynyr5pcn7lmc8cbss871irvias70a2ndlmnshih9p") (f (quote (("serde-impl" "serde") ("default" "serde-impl") ("concurrent" "rayon"))))))

(define-public crate-swc-plugin-inferno-0.0.18 (c (n "swc-plugin-inferno") (v "0.0.18") (d (list (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "rayon") (r "^1.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha-1") (r "=0.10.1") (d #t) (k 0)) (d (n "swc_config") (r "^0.1.10") (d #t) (k 0)) (d (n "swc_core") (r "^0.89.6") (f (quote ("swc_atoms" "swc_common" "swc_ecma_ast" "swc_ecma_utils" "ecma_plugin_transform" "ecma_utils" "ecma_visit" "ecma_ast" "common"))) (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.147.2") (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.142.1") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.228.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_compat") (r "^0.162.4") (d #t) (k 2)) (d (n "swc_ecma_transforms_module") (r "^0.179.7") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.139.4") (d #t) (k 2)) (d (n "testing") (r "^0.35.16") (d #t) (k 2)))) (h "07x01wwyr0zd33x26843hpw5bgm0limhyccv4a0wi1r0j8xw0srm") (f (quote (("serde-impl" "serde") ("default" "serde-impl") ("concurrent" "rayon"))))))

(define-public crate-swc-plugin-inferno-0.0.19 (c (n "swc-plugin-inferno") (v "0.0.19") (d (list (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "rayon") (r "^1.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha-1") (r "=0.10.1") (d #t) (k 0)) (d (n "swc_config") (r "^0.1.11") (d #t) (k 0)) (d (n "swc_core") (r "^0.90.14") (f (quote ("swc_atoms" "swc_common" "swc_ecma_ast" "swc_ecma_utils" "ecma_plugin_transform" "ecma_utils" "ecma_visit" "ecma_ast" "common"))) (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.7") (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.143.5") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.10") (d #t) (k 2)) (d (n "swc_ecma_transforms_compat") (r "^0.163.10") (d #t) (k 2)) (d (n "swc_ecma_transforms_module") (r "^0.180.10") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.140.10") (d #t) (k 2)) (d (n "testing") (r "^0.35.19") (d #t) (k 2)))) (h "0fr6zk979m2qjfk0pqggr6lvdy57zj809jamwbwkjc13ljsdjy6q") (f (quote (("serde-impl" "serde") ("default" "serde-impl") ("concurrent" "rayon"))))))

(define-public crate-swc-plugin-inferno-0.0.20 (c (n "swc-plugin-inferno") (v "0.0.20") (d (list (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha-1") (r "=0.10.1") (d #t) (k 0)) (d (n "swc_config") (r "^0.1.12") (d #t) (k 0)) (d (n "swc_core") (r "^0.90.26") (f (quote ("swc_atoms" "swc_common" "swc_ecma_ast" "swc_ecma_utils" "ecma_plugin_transform" "ecma_utils" "ecma_visit" "ecma_ast" "common"))) (d #t) (k 0)) (d (n "swc_ecma_codegen") (r "^0.148.13") (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.143.11") (d #t) (k 0)) (d (n "swc_ecma_transforms") (r "^0.229.18") (d #t) (k 2)) (d (n "swc_ecma_transforms_compat") (r "^0.163.17") (d #t) (k 2)) (d (n "swc_ecma_transforms_module") (r "^0.180.17") (d #t) (k 2)) (d (n "swc_ecma_transforms_testing") (r "^0.140.17") (d #t) (k 2)) (d (n "testing") (r "^0.35.21") (d #t) (k 2)))) (h "02xrlnv7dfrqzvkmn081gv197w7f2aakx25ikzdm4rnidgp19hkp") (f (quote (("serde-impl" "serde") ("default" "serde-impl") ("concurrent" "rayon"))))))

