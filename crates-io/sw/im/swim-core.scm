(define-module (crates-io sw im swim-core) #:use-module (crates-io))

(define-public crate-swim-core-0.2.0 (c (n "swim-core") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http1" "http2" "server" "tcp"))) (d #t) (k 0)) (d (n "ron") (r "^0.8") (d #t) (k 0)) (d (n "routerify") (r "^3.0") (f (quote ("hyper-http1" "hyper-http2"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (d #t) (k 0)))) (h "1kgf624sb5r3psz7w4y56a6p304zbni862b3yisyabiw8pw8aicq")))

(define-public crate-swim-core-0.2.1 (c (n "swim-core") (v "0.2.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http1" "http2" "server" "tcp"))) (d #t) (k 0)) (d (n "ron") (r "^0.8") (d #t) (k 0)) (d (n "routerify") (r "^3.0") (f (quote ("hyper-http1" "hyper-http2"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "04g3cmghcw3j7in6mbw4xg63phrgi19lxb2372272xrvggl5gbxp")))

(define-public crate-swim-core-0.3.0 (c (n "swim-core") (v "0.3.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http1" "http2" "server" "tcp"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ron") (r "^0.8") (d #t) (k 0)) (d (n "routerify") (r "^3.0") (f (quote ("hyper-http1" "hyper-http2"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "yansi") (r "^0.5") (d #t) (k 0)))) (h "1v035dnkm6rmx02qvi4msc5dqbsxpwyl05p680ma0bbzhdzvqdmw")))

