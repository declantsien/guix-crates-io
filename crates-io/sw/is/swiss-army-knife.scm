(define-module (crates-io sw is swiss-army-knife) #:use-module (crates-io))

(define-public crate-swiss-army-knife-0.0.0 (c (n "swiss-army-knife") (v "0.0.0") (d (list (d (n "arrayvec") (r "^0.5.1") (f (quote ("array-sizes-33-128" "array-sizes-129-255" "serde"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.69") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0abpqql1xcgmwwn656lzw6b8f64926wl5whypj9zds9irxv9s5pp")))

(define-public crate-swiss-army-knife-0.0.1 (c (n "swiss-army-knife") (v "0.0.1") (d (list (d (n "arrayvec") (r "^0.5.1") (f (quote ("array-sizes-33-128" "array-sizes-129-255" "serde"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.69") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1mhaxgik5ja7q58pcpvkvq7l2si6wpdhkzvia1n6rcq16ba22r1g")))

(define-public crate-swiss-army-knife-0.0.2 (c (n "swiss-army-knife") (v "0.0.2") (d (list (d (n "arrayvec") (r "^0.5.1") (f (quote ("array-sizes-33-128" "array-sizes-129-255" "serde"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.69") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "05rnfi9d5ipm079hd2s2zmhd404ziz1x8j6x55wbm9qqp8nnhshl")))

(define-public crate-swiss-army-knife-0.0.3 (c (n "swiss-army-knife") (v "0.0.3") (d (list (d (n "arrayvec") (r "^0.5.1") (f (quote ("array-sizes-33-128" "array-sizes-129-255" "serde"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.69") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0iki5zrgzq35gp7nhxxmm90jqgsb6x75b4bln2xyih4x1iz0daif")))

(define-public crate-swiss-army-knife-0.0.4 (c (n "swiss-army-knife") (v "0.0.4") (d (list (d (n "arrayvec") (r "^0.5.1") (f (quote ("array-sizes-33-128" "array-sizes-129-255" "serde"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.69") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "15cavslccb7iq5pnmhsmpg4cx465wvhrbh4zjwxqk3x3s24i7dl3")))

(define-public crate-swiss-army-knife-0.0.5 (c (n "swiss-army-knife") (v "0.0.5") (d (list (d (n "arrayvec") (r "^0.5.1") (f (quote ("array-sizes-33-128" "array-sizes-129-255" "serde"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.69") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1cmr2x37w70syipdj3hrd9w7zx9civ3f1j941s5qgp1mjpxnavax")))

(define-public crate-swiss-army-knife-0.0.7 (c (n "swiss-army-knife") (v "0.0.7") (d (list (d (n "arrayvec") (r "^0.5.1") (f (quote ("array-sizes-33-128" "array-sizes-129-255" "serde"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.69") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1fp0amhhv8q86hmx18bnwmf3iak8cwp5l6iy4vbv8ixw1vq8zj0d")))

(define-public crate-swiss-army-knife-0.0.8 (c (n "swiss-army-knife") (v "0.0.8") (d (list (d (n "arrayvec") (r "^0.5.1") (f (quote ("array-sizes-33-128" "array-sizes-129-255" "serde"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.69") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1w16ks4c3ncv3pbrzrimccp8x186jwn2fqxr3ngsp7wr73kvq8nk")))

(define-public crate-swiss-army-knife-0.0.9 (c (n "swiss-army-knife") (v "0.0.9") (d (list (d (n "arrayvec") (r "^0.5.1") (f (quote ("array-sizes-33-128" "array-sizes-129-255" "serde"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.69") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1b8ngmghck27jfr8cfbdf21kxn04xfql84dq87djplljy88gq95q")))

(define-public crate-swiss-army-knife-0.0.10 (c (n "swiss-army-knife") (v "0.0.10") (d (list (d (n "arrayvec") (r "^0.5.1") (f (quote ("array-sizes-33-128" "array-sizes-129-255" "serde"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.69") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1yvgc5z9hs747lcn35ym6dx8y0w8hhsnm6s8636pnj1mgqqvq56z")))

(define-public crate-swiss-army-knife-0.0.11 (c (n "swiss-army-knife") (v "0.0.11") (d (list (d (n "arrayvec") (r "^0.5.1") (f (quote ("array-sizes-33-128" "array-sizes-129-255" "serde"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.69") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "005b34jxyl37c58lq7xglj4np1yss0jk3mzbmmhvfqx182mi7ppi")))

(define-public crate-swiss-army-knife-0.0.12 (c (n "swiss-army-knife") (v "0.0.12") (d (list (d (n "arrayvec") (r "^0.5.1") (f (quote ("array-sizes-33-128" "array-sizes-129-255" "serde"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.69") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1lgs6c2dzfl40cycl98npymxggd437ihyhxznmfjxz4s2miszkr9")))

(define-public crate-swiss-army-knife-0.0.13 (c (n "swiss-army-knife") (v "0.0.13") (d (list (d (n "arrayvec") (r "^0.5.1") (f (quote ("array-sizes-33-128" "array-sizes-129-255" "serde"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.69") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "03q58gqlykc737n8qlqq3vibwdcn7mps1kwi9achx0lrw3rvimq0")))

(define-public crate-swiss-army-knife-0.0.14 (c (n "swiss-army-knife") (v "0.0.14") (d (list (d (n "arrayvec") (r "^0.5.1") (f (quote ("array-sizes-33-128" "array-sizes-129-255" "serde"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.69") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1vhvr92wng4wr5mwb0x14wswwqsm5jpliymwcj7r8w3pfzayhp9y")))

(define-public crate-swiss-army-knife-0.0.15 (c (n "swiss-army-knife") (v "0.0.15") (d (list (d (n "arrayvec") (r "^0.5.1") (f (quote ("array-sizes-33-128" "array-sizes-129-255" "serde"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.69") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1ffv74axk8j4sr2pi1yi705ra02z3v7g3v1g8h5r8hl52bip7b01")))

(define-public crate-swiss-army-knife-0.0.16 (c (n "swiss-army-knife") (v "0.0.16") (d (list (d (n "arrayvec") (r "^0.5.1") (f (quote ("array-sizes-33-128" "array-sizes-129-255" "serde"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.93") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0z7id2vj0ll1xdgax9f2gmmal0cm056nrbja57ifyrgd0r69y2r5")))

(define-public crate-swiss-army-knife-0.0.17 (c (n "swiss-army-knife") (v "0.0.17") (d (list (d (n "arrayvec") (r "^0.5.1") (f (quote ("array-sizes-33-128" "array-sizes-129-255" "serde"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "libc") (r "^0.2.93") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0a58byds1ms6j1wz589q5485ddka6mvq9z43ww349xqh9007d3vr")))

(define-public crate-swiss-army-knife-0.0.18 (c (n "swiss-army-knife") (v "0.0.18") (d (list (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "libc") (r "^0.2.93") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "12nd0xk4bjxf68s1v9migxcl42bj8lanlf67sb098v0kxivmpgc0")))

(define-public crate-swiss-army-knife-0.0.19 (c (n "swiss-army-knife") (v "0.0.19") (d (list (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "libc") (r "^0.2.93") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0ky2y4k0ijv0mcqalzrh599aipdlba5b39x2xf0pl3nm2bnws7hl")))

(define-public crate-swiss-army-knife-0.0.20 (c (n "swiss-army-knife") (v "0.0.20") (d (list (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "libc") (r "^0.2.93") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1vr8fza1b40mzwcr6ap0hhkbk6l5s4q3n72y4y0k2n11v9yfmk1a")))

(define-public crate-swiss-army-knife-0.0.21 (c (n "swiss-army-knife") (v "0.0.21") (d (list (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "libc") (r "^0.2.93") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1knrj36jmsahb0fdbygbp6cgfcy4qln90176szxzb7zpmc7pvhh7")))

(define-public crate-swiss-army-knife-0.0.22 (c (n "swiss-army-knife") (v "0.0.22") (d (list (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "libc") (r "^0.2.93") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0a159mbs2xgdr9d41bg5wpgr417x5ynw4swln0bp64bhnwj11grr")))

(define-public crate-swiss-army-knife-0.0.23 (c (n "swiss-army-knife") (v "0.0.23") (d (list (d (n "arrayvec") (r "^0.7.0") (f (quote ("std" "serde"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "libc") (r "^0.2.93") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "05n1s4hlx1xjbl56q44qjaxvkzma94x2hs2slbayszis1wxqn813")))

(define-public crate-swiss-army-knife-0.0.24 (c (n "swiss-army-knife") (v "0.0.24") (d (list (d (n "arrayvec") (r "^0.7.0") (f (quote ("std" "serde"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "libc") (r "^0.2.93") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "15wbirmcm6mdcc3y2424mhf97ihs2papqzbylmha9my86da151bi")))

(define-public crate-swiss-army-knife-0.0.26 (c (n "swiss-army-knife") (v "0.0.26") (d (list (d (n "arrayvec") (r "^0.7.0") (f (quote ("std" "serde"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "libc") (r "^0.2.93") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1wq93a7v2y2n1wjvyn429zzl58wql0xv8xma34l1xv1yv0767qyw")))

(define-public crate-swiss-army-knife-0.0.27 (c (n "swiss-army-knife") (v "0.0.27") (d (list (d (n "arrayvec") (r "^0.7.0") (f (quote ("std" "serde"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "libc") (r "^0.2.93") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "03hwr7x5nravl4jm45mbax3clmx8m83wic7kf9d4gw1imy20bl4p")))

(define-public crate-swiss-army-knife-0.0.28 (c (n "swiss-army-knife") (v "0.0.28") (d (list (d (n "arrayvec") (r "^0.7.0") (f (quote ("std" "serde"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "libc") (r "^0.2.93") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "173ffb4dqjq7z8rjdkmzq30g3b06da8jh4dggxzn2vj8c565d564")))

(define-public crate-swiss-army-knife-0.0.30 (c (n "swiss-army-knife") (v "0.0.30") (d (list (d (n "arrayvec") (r "^0.7.0") (f (quote ("std" "serde"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "libc") (r "^0.2.93") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0ca7p4zkh5xnap4cpvbbxipja8xa8pf2kg22rccd0k2ggl5s2b3j")))

(define-public crate-swiss-army-knife-0.0.31 (c (n "swiss-army-knife") (v "0.0.31") (d (list (d (n "arrayvec") (r "^0.7.0") (f (quote ("std" "serde"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "libc") (r "^0.2.93") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "175zkh1kwb21a2wflsb7x2ig5xp6kg5bc5g859pnb0k438y4brgy")))

(define-public crate-swiss-army-knife-0.0.32 (c (n "swiss-army-knife") (v "0.0.32") (d (list (d (n "arrayvec") (r "^0.7.0") (f (quote ("std" "serde"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "libc") (r "^0.2.93") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0zpmbh5fm2vqwkismc55n9ix0qmscmqfssy2ldajj5jc87kd9nrb")))

(define-public crate-swiss-army-knife-0.0.33 (c (n "swiss-army-knife") (v "0.0.33") (d (list (d (n "arrayvec") (r "^0.7.0") (f (quote ("std" "serde"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "libc") (r "^0.2.93") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1y99y3df54nz3frjrsairz9jmxjd4mq7dh58zbiz9bwgvnpgni6x")))

(define-public crate-swiss-army-knife-0.0.34 (c (n "swiss-army-knife") (v "0.0.34") (d (list (d (n "arrayvec") (r "^0.7.0") (f (quote ("std" "serde"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "libc") (r "^0.2.93") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1sydx5bpmi2pwbmwk43md3hsjlzr0hj05vdv9bgry34xah5mcjpl")))

(define-public crate-swiss-army-knife-0.0.35 (c (n "swiss-army-knife") (v "0.0.35") (d (list (d (n "arrayvec") (r "^0.7.0") (f (quote ("std" "serde"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "libc") (r "^0.2.93") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "032iy5ay8yasvxr8kl30986i73ickznr67n6jr3z17h81shsxr3c")))

(define-public crate-swiss-army-knife-0.0.36 (c (n "swiss-army-knife") (v "0.0.36") (d (list (d (n "arrayvec") (r "^0.7.0") (f (quote ("std" "serde"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "libc") (r "^0.2.93") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "17m610212r0aj94h75a48jnr2lh75xffwpd6kijzg1d3gzj56m43")))

(define-public crate-swiss-army-knife-0.0.37 (c (n "swiss-army-knife") (v "0.0.37") (d (list (d (n "arrayvec") (r "^0.7.0") (f (quote ("std" "serde"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("nightly" "serde" "raw" "inline-more" "ahash" "ahash-compile-time-rng"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "libc") (r "^0.2.93") (f (quote ("const-extern-fn" "extra_traits" "std"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "likely") (r "^0.2.0") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (t "cfg(target_pointer_width = \"64\")") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1sd0hsy6c2x3j85s1cjny2w1fk5arlz16p1n1i8nbswvxl5fvb6d")))

