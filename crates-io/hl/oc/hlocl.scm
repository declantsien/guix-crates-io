(define-module (crates-io hl oc hlocl) #:use-module (crates-io))

(define-public crate-hlocl-0.1.0 (c (n "hlocl") (v "0.1.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "elor") (r "^1") (d #t) (k 0)) (d (n "error-stack") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "future-parking_lot") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "opencl-sys") (r "^0.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)))) (h "0580jr5iw0qk89n655p66jbav80j870j4gr6db8lk78nz7qri242") (f (quote (("rand") ("default" "def") ("def") ("cl2" "opencl-sys/CL_VERSION_2_0")))) (s 2) (e (quote (("async" "futures" "future-parking_lot" "error-stack?/futures"))))))

