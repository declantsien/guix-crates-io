(define-module (crates-io nr f- nrf-modem) #:use-module (crates-io))

(define-public crate-nrf-modem-0.1.0 (c (n "nrf-modem") (v "0.1.0") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "at-commands") (r "^0.5.2") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (d #t) (k 0)) (d (n "defmt") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.4.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("async-await"))) (k 0)) (d (n "linked_list_allocator") (r "^0.10.1") (f (quote ("use_spin"))) (k 0)) (d (n "no-std-net") (r "^0.6.0") (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.12.2") (d #t) (k 0)) (d (n "nrfxlib-sys") (r "^2.1.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (k 0)))) (h "03l8gilh6v6qbir9n6l7vqjn94861kk7lnv3fx43vqbzii2jsqy8") (f (quote (("default")))) (s 2) (e (quote (("defmt" "dep:defmt" "at-commands/defmt")))) (r "1.64")))

(define-public crate-nrf-modem-0.1.1 (c (n "nrf-modem") (v "0.1.1") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "at-commands") (r "^0.5.2") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (d #t) (k 0)) (d (n "defmt") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.4.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("async-await"))) (k 0)) (d (n "linked_list_allocator") (r "^0.10.1") (f (quote ("use_spin"))) (k 0)) (d (n "no-std-net") (r "^0.6.0") (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.12.2") (d #t) (k 0)) (d (n "nrfxlib-sys") (r "^2.1.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (k 0)))) (h "0h8vmxfrx5gxipwflmkbg7qlvfd6y4w2i24kfhv4l1ryd2rgbgkw") (f (quote (("default")))) (s 2) (e (quote (("defmt" "dep:defmt" "at-commands/defmt")))) (r "1.64")))

(define-public crate-nrf-modem-0.2.0 (c (n "nrf-modem") (v "0.2.0") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "at-commands") (r "^0.5.2") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (d #t) (k 0)) (d (n "defmt") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.4.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("async-await"))) (k 0)) (d (n "linked_list_allocator") (r "^0.10.1") (f (quote ("use_spin"))) (k 0)) (d (n "no-std-net") (r "^0.6.0") (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.12.2") (d #t) (k 0)) (d (n "nrfxlib-sys") (r "^2.1.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (k 0)))) (h "1p9gkkh7ypg6dgl8cgwckzz8vwjrldq2j1rlvqhlxig41m1kkdck") (f (quote (("default")))) (s 2) (e (quote (("defmt" "dep:defmt" "at-commands/defmt")))) (r "1.64")))

(define-public crate-nrf-modem-0.2.1 (c (n "nrf-modem") (v "0.2.1") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "at-commands") (r "^0.5.2") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (d #t) (k 0)) (d (n "defmt") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.4.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("async-await"))) (k 0)) (d (n "linked_list_allocator") (r "^0.10.1") (f (quote ("use_spin"))) (k 0)) (d (n "no-std-net") (r "^0.6.0") (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.12.2") (d #t) (k 0)) (d (n "nrfxlib-sys") (r "^2.1.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (k 0)))) (h "06yslhni3kx8v2g5f7rz8mwdqwf3hscv7phnilahcdn8aj5nbpqj") (f (quote (("default")))) (s 2) (e (quote (("defmt" "dep:defmt" "at-commands/defmt")))) (r "1.64")))

(define-public crate-nrf-modem-0.2.2 (c (n "nrf-modem") (v "0.2.2") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "at-commands") (r "^0.5.2") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (d #t) (k 0)) (d (n "defmt") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.4.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("async-await"))) (k 0)) (d (n "linked_list_allocator") (r "^0.10.1") (f (quote ("use_spin"))) (k 0)) (d (n "no-std-net") (r "^0.6.0") (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.12.2") (d #t) (k 0)) (d (n "nrfxlib-sys") (r "^2.1.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (k 0)))) (h "0s09px5lf3x18rd1d8x7g25kip2pkcrhi5kbwhwbcph2zd6qbw56") (f (quote (("default")))) (s 2) (e (quote (("defmt" "dep:defmt" "at-commands/defmt")))) (r "1.64")))

(define-public crate-nrf-modem-0.2.3 (c (n "nrf-modem") (v "0.2.3") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "at-commands") (r "^0.5.2") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (d #t) (k 0)) (d (n "defmt") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("async-await"))) (k 0)) (d (n "linked_list_allocator") (r "^0.10.1") (f (quote ("use_spin"))) (k 0)) (d (n "no-std-net") (r "^0.6.0") (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.12.2") (d #t) (k 0)) (d (n "nrfxlib-sys") (r "^2.1.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (k 0)))) (h "1vadsjafx5d0apfh6hwdvdbng5yiqyl36zfl5gwvvlzrqfylayg8") (f (quote (("default")))) (s 2) (e (quote (("defmt" "dep:defmt" "at-commands/defmt")))) (r "1.64")))

(define-public crate-nrf-modem-0.3.0 (c (n "nrf-modem") (v "0.3.0") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "at-commands") (r "^0.5.2") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (d #t) (k 0)) (d (n "defmt") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("async-await"))) (k 0)) (d (n "linked_list_allocator") (r "^0.10.1") (f (quote ("use_spin"))) (k 0)) (d (n "no-std-net") (r "^0.6.0") (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.12.2") (d #t) (k 0)) (d (n "nrfxlib-sys") (r "^2.1.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (k 0)))) (h "1q314b6rvnr0w4vf9xb2sr79wkwxdhgn8mamc0a2gqh6lwsdc2rj") (f (quote (("default")))) (s 2) (e (quote (("defmt" "dep:defmt" "at-commands/defmt")))) (r "1.64")))

(define-public crate-nrf-modem-0.3.1 (c (n "nrf-modem") (v "0.3.1") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "at-commands") (r "^0.5.2") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (d #t) (k 0)) (d (n "defmt") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("async-await"))) (k 0)) (d (n "linked_list_allocator") (r "^0.10.1") (f (quote ("use_spin"))) (k 0)) (d (n "no-std-net") (r "^0.6.0") (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.12.2") (d #t) (k 0)) (d (n "nrfxlib-sys") (r "^2.1.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (k 0)))) (h "0n9bgxnzi8c9abckgg1p3js3v08c840f40dqvhm6ja4p6rybf5cp") (f (quote (("default")))) (s 2) (e (quote (("defmt" "dep:defmt" "at-commands/defmt")))) (r "1.64")))

(define-public crate-nrf-modem-0.3.2 (c (n "nrf-modem") (v "0.3.2") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "at-commands") (r "^0.5.2") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (d #t) (k 0)) (d (n "defmt") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("async-await"))) (k 0)) (d (n "linked_list_allocator") (r "^0.10.1") (f (quote ("use_spin"))) (k 0)) (d (n "no-std-net") (r "^0.6.0") (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.12.2") (d #t) (k 0)) (d (n "nrfxlib-sys") (r "^2.1.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (k 0)))) (h "0g6bg48fvrn7f9mdzpch0pma2vllwdarbj2vnih3mjhh3xl39icr") (f (quote (("default")))) (s 2) (e (quote (("defmt" "dep:defmt" "at-commands/defmt")))) (r "1.64")))

(define-public crate-nrf-modem-0.3.3 (c (n "nrf-modem") (v "0.3.3") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "at-commands") (r "^0.5.2") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (d #t) (k 0)) (d (n "defmt") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("async-await"))) (k 0)) (d (n "linked_list_allocator") (r "^0.10.1") (f (quote ("use_spin"))) (k 0)) (d (n "no-std-net") (r "^0.6.0") (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.12.2") (d #t) (k 0)) (d (n "nrfxlib-sys") (r "^2.1.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (k 0)))) (h "1hssb3yfdg98wg4gkpnrliqi29pcwlxk87nd119rd59s8mdyqyvq") (f (quote (("default")))) (s 2) (e (quote (("defmt" "dep:defmt" "at-commands/defmt")))) (r "1.64")))

(define-public crate-nrf-modem-0.3.4 (c (n "nrf-modem") (v "0.3.4") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "at-commands") (r "^0.5.2") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (d #t) (k 0)) (d (n "defmt") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("async-await"))) (k 0)) (d (n "linked_list_allocator") (r "^0.10.1") (f (quote ("use_spin"))) (k 0)) (d (n "no-std-net") (r "^0.6.0") (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.12.2") (d #t) (k 0)) (d (n "nrfxlib-sys") (r "^2.1.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (k 0)))) (h "1i4jdzzif8j3gcqr4jb3ycm0jbv8zqnc5nqwf2cy0mxz2h6gs58w") (f (quote (("default")))) (s 2) (e (quote (("defmt" "dep:defmt" "at-commands/defmt")))) (r "1.64")))

(define-public crate-nrf-modem-0.4.0 (c (n "nrf-modem") (v "0.4.0") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "at-commands") (r "^0.5.2") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (d #t) (k 0)) (d (n "defmt") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("async-await"))) (k 0)) (d (n "linked_list_allocator") (r "^0.10.1") (f (quote ("use_spin"))) (k 0)) (d (n "no-std-net") (r "^0.6.0") (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.12.2") (d #t) (k 0)) (d (n "nrfxlib-sys") (r "^2.4.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (k 0)))) (h "1m8z4x890a8mjlfdrh1rgs9mhbicp38d2zi6jl95lhbix64sfjwi") (f (quote (("default")))) (s 2) (e (quote (("defmt" "dep:defmt" "at-commands/defmt")))) (r "1.64")))

(define-public crate-nrf-modem-0.3.5 (c (n "nrf-modem") (v "0.3.5") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "at-commands") (r "^0.5.2") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (d #t) (k 0)) (d (n "defmt") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("async-await"))) (k 0)) (d (n "linked_list_allocator") (r "^0.10.1") (f (quote ("use_spin"))) (k 0)) (d (n "no-std-net") (r "^0.6.0") (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.12.2") (d #t) (k 0)) (d (n "nrfxlib-sys") (r "~2.1.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.6.1") (k 0)))) (h "0w6rphfbhy0bfxmzlkj9nfflix54q29a60i9kilzwv2w4xvns6ga") (f (quote (("default")))) (s 2) (e (quote (("defmt" "dep:defmt" "at-commands/defmt")))) (r "1.64")))

(define-public crate-nrf-modem-0.4.1 (c (n "nrf-modem") (v "0.4.1") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "at-commands") (r "^0.5.2") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("async-await"))) (k 0)) (d (n "linked_list_allocator") (r "^0.10.1") (f (quote ("use_spin"))) (k 0)) (d (n "no-std-net") (r "^0.6.0") (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.12.2") (d #t) (k 0)) (d (n "nrfxlib-sys") (r "^2.4.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.0") (k 0)))) (h "1nb4iwgdm607zsl6jg75jsidpqr4c62jjp83zrcx3jj9j60bfb49") (f (quote (("default")))) (s 2) (e (quote (("defmt" "dep:defmt" "at-commands/defmt")))) (r "1.64")))

