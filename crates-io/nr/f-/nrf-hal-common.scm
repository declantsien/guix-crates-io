(define-module (crates-io nr f- nrf-hal-common) #:use-module (crates-io))

(define-public crate-nrf-hal-common-0.10.0 (c (n "nrf-hal-common") (v "0.10.0") (d (list (d (n "cast") (r "^0.2.3") (k 0)) (d (n "cortex-m") (r "^0.6.2") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "fpa") (r "^0.1.0") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "nrf51") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52810-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52832-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52840-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "02rja2lgmi1vr1h6fx3ncfkhyjgfpx4q0gvk464bivpx6y7v8dnc") (f (quote (("doc") ("9160" "nrf9160-pac") ("52840" "nrf52840-pac") ("52832" "nrf52832-pac") ("52810" "nrf52810-pac") ("51" "nrf51"))))))

(define-public crate-nrf-hal-common-0.11.0 (c (n "nrf-hal-common") (v "0.11.0") (d (list (d (n "cast") (r "^0.2.3") (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.2") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "fpa") (r "^0.1.0") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "nrf51") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52810-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52832-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52833-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52840-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1ry38izinb1amjp79qlpjcvhhlxghs6k63mx41440p2ddd0dlcp0") (f (quote (("doc") ("9160" "nrf9160-pac") ("52840" "nrf52840-pac") ("52833" "nrf52833-pac") ("52832" "nrf52832-pac") ("52810" "nrf52810-pac") ("51" "nrf51"))))))

(define-public crate-nrf-hal-common-0.11.1 (c (n "nrf-hal-common") (v "0.11.1") (d (list (d (n "cast") (r "^0.2.3") (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.2") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "fixed") (r "^1.0.0") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "nrf51") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52810-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52832-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52833-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52840-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "00cjfzm02xx808mxsdbag2rlklrp64zz08ipr4sf2ajlcxdqx7i9") (f (quote (("doc") ("9160" "nrf9160-pac") ("52840" "nrf52840-pac") ("52833" "nrf52833-pac") ("52832" "nrf52832-pac") ("52810" "nrf52810-pac") ("51" "nrf51"))))))

(define-public crate-nrf-hal-common-0.12.0 (c (n "nrf-hal-common") (v "0.12.0") (d (list (d (n "cast") (r ">=0.2.3, <0.3.0") (k 0)) (d (n "cfg-if") (r ">=0.1.10, <0.2.0") (d #t) (k 0)) (d (n "cortex-m") (r ">=0.6.2, <0.7.0") (d #t) (k 0)) (d (n "embedded-dma") (r ">=0.1.1, <0.2.0") (d #t) (k 0)) (d (n "embedded-hal") (r ">=0.2.4, <0.3.0") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "fixed") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "nb") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "nrf51") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "nrf52810-pac") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "nrf52811-pac") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "nrf52832-pac") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "nrf52833-pac") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "nrf52840-pac") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "nrf9160-pac") (r ">=0.2.1, <0.3.0") (o #t) (d #t) (k 0)) (d (n "rand_core") (r ">=0.5.1, <0.6.0") (d #t) (k 0)) (d (n "void") (r ">=1.0.2, <2.0.0") (k 0)))) (h "0wlbhzqc5fb8l1f8jp0bfpzxfgx2q6nx9qdd3scs34c5490fwpk7") (f (quote (("doc") ("9160" "nrf9160-pac") ("52840" "nrf52840-pac") ("52833" "nrf52833-pac") ("52832" "nrf52832-pac") ("52811" "nrf52811-pac") ("52810" "nrf52810-pac") ("51" "nrf51"))))))

(define-public crate-nrf-hal-common-0.12.1 (c (n "nrf-hal-common") (v "0.12.1") (d (list (d (n "cast") (r "^0.2.3") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.2") (d #t) (k 0)) (d (n "embedded-dma") (r "^0.1.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "fixed") (r "^1.0.0") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "nrf51") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52810-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52811-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52832-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52833-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52840-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0c2p7jq7k719mfp6ln4nfhigbjyj58ybn0riyif688k23zkf2g2f") (f (quote (("doc") ("9160" "nrf9160-pac") ("52840" "nrf52840-pac") ("52833" "nrf52833-pac") ("52832" "nrf52832-pac") ("52811" "nrf52811-pac") ("52810" "nrf52810-pac") ("51" "nrf51"))))))

(define-public crate-nrf-hal-common-0.12.2 (c (n "nrf-hal-common") (v "0.12.2") (d (list (d (n "cast") (r "^0.2.3") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.2") (d #t) (k 0)) (d (n "embedded-dma") (r "^0.1.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "fixed") (r "^1.0.0") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "nrf51") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52810-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52811-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52832-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52833-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52840-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1vbvavx68sc8fbckkg3b6lgx8b3gwky94alnrjkbs7gj7ga52yan") (f (quote (("doc") ("9160" "nrf9160-pac") ("52840" "nrf52840-pac") ("52833" "nrf52833-pac") ("52832" "nrf52832-pac") ("52811" "nrf52811-pac") ("52810" "nrf52810-pac") ("51" "nrf51"))))))

(define-public crate-nrf-hal-common-0.13.0 (c (n "nrf-hal-common") (v "0.13.0") (d (list (d (n "cast") (r "^0.2.3") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-dma") (r "^0.1.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.1.0") (d #t) (k 0)) (d (n "fixed") (r "^1.0.0") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "nrf-usbd") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nrf51") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52810-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52811-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52832-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52833-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf52840-pac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "04p51ma8agxj2jsakx559z0c43jrxkrhsxjnhqiddk226s698zcj") (f (quote (("doc") ("9160" "nrf9160-pac") ("52840" "nrf52840-pac" "nrf-usbd") ("52833" "nrf52833-pac" "nrf-usbd") ("52832" "nrf52832-pac") ("52811" "nrf52811-pac") ("52810" "nrf52810-pac") ("51" "nrf51"))))))

(define-public crate-nrf-hal-common-0.14.0 (c (n "nrf-hal-common") (v "0.14.0") (d (list (d (n "cast") (r "^0.3.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-dma") (r "^0.1.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.2.0") (d #t) (k 0)) (d (n "fixed") (r "^1.0.0") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "nrf-usbd") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nrf51-pac") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "nrf52810-pac") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "nrf52811-pac") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "nrf52832-pac") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "nrf52833-pac") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "nrf52840-pac") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0qkmykw0bg24xvcpkv8zvjg7l47qw8rkgwm4wx3kdbil5z20plhd") (f (quote (("doc") ("9160" "nrf9160-pac") ("52840" "nrf52840-pac" "nrf-usbd") ("52833" "nrf52833-pac" "nrf-usbd") ("52832" "nrf52832-pac") ("52811" "nrf52811-pac") ("52810" "nrf52810-pac") ("51" "nrf51-pac"))))))

(define-public crate-nrf-hal-common-0.14.1 (c (n "nrf-hal-common") (v "0.14.1") (d (list (d (n "cast") (r "^0.3.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-dma") (r "^0.1.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.2.0") (d #t) (k 0)) (d (n "fixed") (r "^1.0.0") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "nrf-usbd") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nrf51-pac") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "nrf52810-pac") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "nrf52811-pac") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "nrf52832-pac") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "nrf52833-pac") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "nrf52840-pac") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "nrf5340-app-pac") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0f864fqy8m5qmpap85q747sip970phhfzm60bh0b89wk0gyv6dxx") (f (quote (("doc") ("9160" "nrf9160-pac") ("5340-app" "nrf5340-app-pac") ("52840" "nrf52840-pac" "nrf-usbd") ("52833" "nrf52833-pac" "nrf-usbd") ("52832" "nrf52832-pac") ("52811" "nrf52811-pac") ("52810" "nrf52810-pac") ("51" "nrf51-pac"))))))

(define-public crate-nrf-hal-common-0.15.0 (c (n "nrf-hal-common") (v "0.15.0") (d (list (d (n "cast") (r "^0.3.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-dma") (r "^0.2.0") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)) (d (n "fixed") (r "^1.0.0") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "nrf-usbd") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nrf51-pac") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nrf52810-pac") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nrf52811-pac") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nrf52832-pac") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nrf52833-pac") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nrf52840-pac") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nrf5340-app-pac") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "04f0i7d5qvqna1syc7vmyanc4prd08f5975cn54zxxi5rsq21pyy") (f (quote (("doc") ("9160" "nrf9160-pac") ("5340-app" "nrf5340-app-pac") ("52840" "nrf52840-pac" "nrf-usbd") ("52833" "nrf52833-pac" "nrf-usbd") ("52832" "nrf52832-pac") ("52811" "nrf52811-pac") ("52810" "nrf52810-pac") ("51" "nrf51-pac"))))))

(define-public crate-nrf-hal-common-0.15.1 (c (n "nrf-hal-common") (v "0.15.1") (d (list (d (n "cast") (r "^0.3.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-dma") (r "^0.2.0") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)) (d (n "fixed") (r "^1.0.0") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "nrf-usbd") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nrf51-pac") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nrf52810-pac") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nrf52811-pac") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nrf52832-pac") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nrf52833-pac") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nrf52840-pac") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nrf5340-app-pac") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nrf5340-net-pac") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "134rx61k617sghf0jc3ydb7hpj7ax4c5bjsd0ncj0qi9nyw454h8") (f (quote (("doc") ("9160" "nrf9160-pac") ("5340-net" "nrf5340-net-pac") ("5340-app" "nrf5340-app-pac") ("52840" "nrf52840-pac" "nrf-usbd") ("52833" "nrf52833-pac" "nrf-usbd") ("52832" "nrf52832-pac") ("52811" "nrf52811-pac") ("52810" "nrf52810-pac") ("51" "nrf51-pac"))))))

(define-public crate-nrf-hal-common-0.16.0 (c (n "nrf-hal-common") (v "0.16.0") (d (list (d (n "cast") (r "^0.3.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-dma") (r "^0.2.0") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)) (d (n "fixed") (r "^1.0.0") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "nrf-usbd") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "nrf51-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52810-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52811-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52832-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52833-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52840-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf5340-app-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf5340-net-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0jvfpkjg68prm7jdssz3far5zzcr6ahfijpxrxsns1l8smilq96d") (f (quote (("doc") ("9160" "nrf9160-pac") ("5340-net" "nrf5340-net-pac") ("5340-app" "nrf5340-app-pac") ("52840" "nrf52840-pac" "nrf-usbd") ("52833" "nrf52833-pac" "nrf-usbd") ("52832" "nrf52832-pac") ("52811" "nrf52811-pac") ("52810" "nrf52810-pac") ("51" "nrf51-pac"))))))

(define-public crate-nrf-hal-common-0.16.1 (c (n "nrf-hal-common") (v "0.16.1") (d (list (d (n "cast") (r "^0.3.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-dma") (r "^0.2.0") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)) (d (n "fixed") (r "^1.0.0") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "nrf-usbd") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "nrf51-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52810-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52811-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52832-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52833-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52840-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf5340-app-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf5340-net-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1r1bail5yknn538fcb783vxav54i3rq4435cbbnfcgw4y3bqx90y") (f (quote (("doc") ("9160" "nrf9160-pac") ("5340-net" "nrf5340-net-pac") ("5340-app" "nrf5340-app-pac") ("52840" "nrf52840-pac" "nrf-usbd") ("52833" "nrf52833-pac" "nrf-usbd") ("52832" "nrf52832-pac") ("52811" "nrf52811-pac") ("52810" "nrf52810-pac") ("51" "nrf51-pac"))))))

(define-public crate-nrf-hal-common-0.17.0 (c (n "nrf-hal-common") (v "0.17.0") (d (list (d (n "cast") (r "^0.3.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.7") (d #t) (k 0)) (d (n "embedded-dma") (r "^0.2.0") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (d #t) (k 0)) (d (n "embedded-hal-02") (r "^0.2.7") (f (quote ("unproven"))) (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-io") (r "^0.6.1") (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3.1") (d #t) (k 0)) (d (n "fixed") (r "^1.25.1") (d #t) (k 0)) (d (n "nb") (r "^1.1.0") (d #t) (k 0)) (d (n "nrf-usbd") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "nrf51-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52810-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52811-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52832-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52833-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52840-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf5340-app-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf5340-net-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "09avl2kbwa47fqwq3ah88sp1wdkx60pc2brw6lm17jl5hys800ig") (f (quote (("doc") ("9160" "nrf9160-pac") ("5340-net" "nrf5340-net-pac") ("5340-app" "nrf5340-app-pac") ("52840" "nrf52840-pac" "nrf-usbd") ("52833" "nrf52833-pac" "nrf-usbd") ("52832" "nrf52832-pac") ("52811" "nrf52811-pac") ("52810" "nrf52810-pac") ("51" "nrf51-pac"))))))

(define-public crate-nrf-hal-common-0.17.1 (c (n "nrf-hal-common") (v "0.17.1") (d (list (d (n "cast") (r "^0.3.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.7") (d #t) (k 0)) (d (n "embedded-dma") (r "^0.2.0") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (d #t) (k 0)) (d (n "embedded-hal-02") (r "^0.2.7") (f (quote ("unproven"))) (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-io") (r "^0.6.1") (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3.1") (d #t) (k 0)) (d (n "fixed") (r "^1.25.1") (d #t) (k 0)) (d (n "nb") (r "^1.1.0") (d #t) (k 0)) (d (n "nrf-usbd") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "nrf51-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52810-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52811-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52832-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52833-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52840-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf5340-app-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf5340-net-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1ssc3g43jmvwdc7ygj54sjbpiai3l1y490s7plr6xwf7k3ayrysn") (f (quote (("doc") ("9160" "nrf9160-pac") ("5340-net" "nrf5340-net-pac") ("5340-app" "nrf5340-app-pac") ("52840" "nrf52840-pac" "nrf-usbd") ("52833" "nrf52833-pac" "nrf-usbd") ("52832" "nrf52832-pac") ("52811" "nrf52811-pac") ("52810" "nrf52810-pac") ("51" "nrf51-pac"))))))

(define-public crate-nrf-hal-common-0.18.0 (c (n "nrf-hal-common") (v "0.18.0") (d (list (d (n "cast") (r "^0.3.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.7") (d #t) (k 0)) (d (n "embedded-dma") (r "^0.2.0") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (d #t) (k 0)) (d (n "embedded-hal-02") (r "^0.2.7") (f (quote ("unproven"))) (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-io") (r "^0.6.1") (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3.1") (d #t) (k 0)) (d (n "fixed") (r "^1.25.1") (d #t) (k 0)) (d (n "fugit") (r "^0.3.7") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.1.0") (d #t) (k 0)) (d (n "nrf-usbd") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "nrf51-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52805-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52810-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52811-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52832-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52833-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf52840-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf5340-app-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf5340-net-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "nrf9160-pac") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rtic-monotonic") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0pb2bw4h6wbiln0xyvmh6vkd2248v8qkhkf27znil6ghybhls4qc") (f (quote (("doc") ("9160" "nrf9160-pac") ("5340-net" "nrf5340-net-pac") ("5340-app" "nrf5340-app-pac") ("52840" "nrf52840-pac" "nrf-usbd") ("52833" "nrf52833-pac" "nrf-usbd") ("52832" "nrf52832-pac") ("52811" "nrf52811-pac") ("52810" "nrf52810-pac") ("52805" "nrf52805-pac") ("51" "nrf51-pac")))) (s 2) (e (quote (("rtic-monotonic" "dep:rtic-monotonic" "dep:fugit"))))))

