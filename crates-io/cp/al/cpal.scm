(define-module (crates-io cp al cpal) #:use-module (crates-io))

(define-public crate-cpal-0.0.1 (c (n "cpal") (v "0.0.1") (d (list (d (n "alsa-sys") (r "^0.0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0.0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "vorbis") (r "^0.0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.0.2") (f (quote ("ole32"))) (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.0.2") (f (quote ("ole32"))) (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "14xl731x8s8bqbqlcp843p2p86qcl3fjk16jghmy5yg5j3n07mf8")))

(define-public crate-cpal-0.0.2 (c (n "cpal") (v "0.0.2") (d (list (d (n "alsa-sys") (r "^0.0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0.0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "vorbis") (r "^0.0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.0.2") (f (quote ("ole32"))) (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.0.2") (f (quote ("ole32"))) (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "0889b372phyp63bky9mcnv4d25byi0ny3aa7yv3baxyisyschqq5")))

(define-public crate-cpal-0.0.3 (c (n "cpal") (v "0.0.3") (d (list (d (n "alsa-sys") (r "^0.0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0.0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "vorbis") (r "^0.0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.0.2") (f (quote ("ole32"))) (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.0.2") (f (quote ("ole32"))) (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "1w7abawnki396fcgnl81iln1sh77s57isaw7api9v8lx2mh52lzw")))

(define-public crate-cpal-0.0.4 (c (n "cpal") (v "0.0.4") (d (list (d (n "alsa-sys") (r "^0.0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0.0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "vorbis") (r "^0.0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.0.2") (f (quote ("ole32"))) (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.0.2") (f (quote ("ole32"))) (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "1lxbgm29mjqz4bfa7sb6gfqm0fq7a3hmian0irgripcz7zyxx2kl")))

(define-public crate-cpal-0.0.5 (c (n "cpal") (v "0.0.5") (d (list (d (n "alsa-sys") (r "^0.0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0.0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "vorbis") (r "^0.0.1") (d #t) (k 2)) (d (n "winapi") (r "^0.0.3") (f (quote ("ole32"))) (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.0.3") (f (quote ("ole32"))) (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "02xidhpsa8d3d2yy992dwdhzqingfvdc45flag3ni65lzn97q6d6")))

(define-public crate-cpal-0.0.6 (c (n "cpal") (v "0.0.6") (d (list (d (n "alsa-sys") (r "^0.0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0.0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0") (f (quote ("ole32"))) (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0") (f (quote ("ole32"))) (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "046lj1lm0f7fs73zavzcgygkp05wr8byfan1bnbrzh9pf2yifyls")))

(define-public crate-cpal-0.0.7 (c (n "cpal") (v "0.0.7") (d (list (d (n "alsa-sys") (r "^0.0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0.0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0") (f (quote ("ole32"))) (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0") (f (quote ("ole32"))) (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "1clwfdpvwn5pigbil2v1v7fg4xa97c2vh1n89hl9hqq5iigvmxnn")))

(define-public crate-cpal-0.0.8 (c (n "cpal") (v "0.0.8") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0") (f (quote ("ole32"))) (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0") (f (quote ("ole32"))) (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "1c63m5i8jf4k3dhzyi7c0b2k1lpy396ad3nvxbhwln2zx3qw27iy")))

(define-public crate-cpal-0.0.10 (c (n "cpal") (v "0.0.10") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "ole32-sys") (r "^0") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "ole32-sys") (r "^0") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "11vvc517ch2f2xh69mnpf7d1hca8zq2d47qmfb5ciyapaia5p913")))

(define-public crate-cpal-0.0.11 (c (n "cpal") (v "0.0.11") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "ole32-sys") (r "^0") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "ole32-sys") (r "^0") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "1yyw8pdjyrkpiabhc0nm36rgvr03ar89wnf2lmr18x8q2fzxb9zx")))

(define-public crate-cpal-0.0.12 (c (n "cpal") (v "0.0.12") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "ole32-sys") (r "^0") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "ole32-sys") (r "^0") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "0z2xrzxfp2y9wrcw2mydq3n0j9llg9q4n9swnbp66scqk1wjs8xw")))

(define-public crate-cpal-0.0.13 (c (n "cpal") (v "0.0.13") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "ole32-sys") (r "^0") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "ole32-sys") (r "^0") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "0p5sjvr64b2q6mnndb5d494v5z48830648dnq4m2sa3nr4l7rxlh")))

(define-public crate-cpal-0.0.14 (c (n "cpal") (v "0.0.14") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "ole32-sys") (r "^0") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "ole32-sys") (r "^0") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "0d643ivx50dnpwdk28ziy475m57pl702j36fl5jml45fkvl03jin")))

(define-public crate-cpal-0.0.15 (c (n "cpal") (v "0.0.15") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "ole32-sys") (r "^0") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "ole32-sys") (r "^0") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "1fhjxw6lnclkaisy1hqkvxyc240rdxf63lh900h1gn9l5crdgycr")))

(define-public crate-cpal-0.0.16 (c (n "cpal") (v "0.0.16") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "*") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "ole32-sys") (r "^0") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "ole32-sys") (r "^0") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "1xv6wh45gz8mz966b2d609bl59zhpfgpjhip99rnmjq43ww8lfzg")))

(define-public crate-cpal-0.0.17 (c (n "cpal") (v "0.0.17") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "*") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "ole32-sys") (r "^0") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "ole32-sys") (r "^0") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "0w1l8fqvbn0zzqpjs5mv6dj1i3bw57rz1hq0zqvnkj5nyvbp0dlg")))

(define-public crate-cpal-0.0.18 (c (n "cpal") (v "0.0.18") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "*") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "0r41dhdfvamydxd8345fjlgk9fvl0p84ylb6nds92mpib3rbgza6")))

(define-public crate-cpal-0.0.19 (c (n "cpal") (v "0.0.19") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "*") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "01clifhjlwahp9i2vc5mgwy998nwf2ldr7zl5avf7zz5x8isq19m")))

(define-public crate-cpal-0.0.20 (c (n "cpal") (v "0.0.20") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "*") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "1wm57kdbiqhs0wgzaarsb9dc1yj04il9nsb3ywfsnxfx6cm8bngq")))

(define-public crate-cpal-0.0.21 (c (n "cpal") (v "0.0.21") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "*") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0.1.19") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1.19") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "0pj432fbgw2d3c23fkk6441pk71qpir1m4wg23y7a5q7xm4r6y3x")))

(define-public crate-cpal-0.0.22 (c (n "cpal") (v "0.0.22") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "*") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0.1.19") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1.19") (d #t) (t "x86_64-pc-windows-gnu") (k 0)))) (h "1biws0b7lj3yrzv21f62im3a1cnk5b706fwahxazm5i73h2zpwi8")))

(define-public crate-cpal-0.0.23 (c (n "cpal") (v "0.0.23") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "*") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0.1.19") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1.19") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.1.19") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1.19") (d #t) (t "x86_64-pc-windows-msvc") (k 0)))) (h "1ag0dvs76yqh0bad52r3gbh8jjys92y72adz7igxv9bj4w4l1gsb")))

(define-public crate-cpal-0.1.0 (c (n "cpal") (v "0.1.0") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "*") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0.1.19") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1.19") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.1.19") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.1.19") (d #t) (t "x86_64-pc-windows-msvc") (k 0)))) (h "19k7zhkxqgaf8nay5yrknhcwjdrvlgx01g6lwbhsqnlvm5sdql9l")))

(define-public crate-cpal-0.1.1 (c (n "cpal") (v "0.1.1") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "*") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0.2.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.2.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)))) (h "0q6c1r1g42fqya3ah8cvm552gmijbxhkcyxpr6d0jdz4ss3ngy07")))

(define-public crate-cpal-0.1.2 (c (n "cpal") (v "0.1.2") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "*") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0.2.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.2.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)))) (h "0wwa99mxlk43rra5n0nb2ajlpxv0qnpldvxl9230kxrb92rln18l")))

(define-public crate-cpal-0.2.0 (c (n "cpal") (v "0.2.0") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "*") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0.2.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.2.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)))) (h "1vpxgqfn0l77iml4y47b9vbjcwvgx9ihaghfs3mihqz392bg7jcl")))

(define-public crate-cpal-0.2.1 (c (n "cpal") (v "0.2.1") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "*") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0.2.3") (d #t) (k 0)))) (h "13id906nyxpk7bmgqhz4b7vaf27gqlkc4f0w2yv3f7ld0k2r5xh1")))

(define-public crate-cpal-0.2.2 (c (n "cpal") (v "0.2.2") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "*") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0.2.3") (d #t) (k 0)))) (h "1vm18ssgfkyqynsf3f9g3a1ny52bv2vdhq0dsmpchzm5n5qfg5h6")))

(define-public crate-cpal-0.2.3 (c (n "cpal") (v "0.2.3") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "*") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0.2.4") (d #t) (k 0)))) (h "0dmjb9i726asmgdiw7fibqgzvx9h89gyf7vhvyid9jymi532bh4l")))

(define-public crate-cpal-0.2.4 (c (n "cpal") (v "0.2.4") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "*") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0.2.4") (d #t) (k 0)))) (h "1kzxm803gskfiv6bf563x8w55xrg70hs9l36c69ahin6f2kpshrb")))

(define-public crate-cpal-0.2.5 (c (n "cpal") (v "0.2.5") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "*") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0.2.4") (d #t) (k 0)))) (h "12j3ysyi2i83msi4dshc0y6wi47kay3gg27c77lcr41z509ndhql")))

(define-public crate-cpal-0.2.6 (c (n "cpal") (v "0.2.6") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "*") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0.2.4") (d #t) (k 0)))) (h "0z2jp7ps17gyd9dsh1vfxcw33h0v142sjqbv4hrjz6k853yjsmc9")))

(define-public crate-cpal-0.2.7 (c (n "cpal") (v "0.2.7") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "*") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0.2.4") (d #t) (k 0)))) (h "0083py0q0q8kiak7dxqidkdbr3r1f6kndcdndqjk491sskvza66y")))

(define-public crate-cpal-0.2.8 (c (n "cpal") (v "0.2.8") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "*") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0.2.5") (d #t) (k 0)))) (h "1frkj5r1qkvzjgp8lq6j2i2nrfcrqfhjzbfhl6v65kszq9lvd5w4")))

(define-public crate-cpal-0.2.9 (c (n "cpal") (v "0.2.9") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "mipsel-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "~0.4.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0.2.5") (d #t) (k 0)))) (h "11wvphbyyn2r8xilqh5hzf0aajawryay151wqhk5iqw4vv37d2ar")))

(define-public crate-cpal-0.2.10 (c (n "cpal") (v "0.2.10") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "mipsel-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "~0.4.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0.2.5") (d #t) (k 0)))) (h "0bjvplhknyalpg1aibg1m4lzjkrk1pyd12p4bd5rghr3qgrd3iys")))

(define-public crate-cpal-0.2.11 (c (n "cpal") (v "0.2.11") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "mipsel-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "~0.4.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "lazy_static") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.1") (d #t) (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0.2.5") (d #t) (k 0)))) (h "088jfjyr0dh504i38gi4v5nwbk2l60c9a3imd9cz23k8vb150n8k")))

(define-public crate-cpal-0.2.12 (c (n "cpal") (v "0.2.12") (d (list (d (n "alsa-sys") (r "^0") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "mipsel-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "~0.5.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.2") (d #t) (k 0)) (d (n "vorbis") (r "^0") (d #t) (k 2)) (d (n "winapi") (r "^0.2.8") (d #t) (k 0)))) (h "04xplav35z7n0jpv2xlyg3n9jilna0z6qhs6c1vihpy6b56zd7cq")))

(define-public crate-cpal-0.3.0 (c (n "cpal") (v "0.3.0") (d (list (d (n "alsa-sys") (r "^0.1") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "alsa-sys") (r "^0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0.1") (d #t) (t "mipsel-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "futures") (r "^0.1.0") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.2") (d #t) (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (k 0)))) (h "0m5kpr13p1c896ql7qws933p7w415iw8sy6w8s1ai3mpm191spqn")))

(define-public crate-cpal-0.3.1 (c (n "cpal") (v "0.3.1") (d (list (d (n "alsa-sys") (r "^0.1") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "alsa-sys") (r "^0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0.1") (d #t) (t "mipsel-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "futures") (r "^0.1.0") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.2") (d #t) (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (k 0)))) (h "09sswp478sl9jf1z5rb10ijp8pklk0kk6jki5nqkkr82jma8m4w2")))

(define-public crate-cpal-0.4.0 (c (n "cpal") (v "0.4.0") (d (list (d (n "alsa-sys") (r "^0.1") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "alsa-sys") (r "^0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0.1") (d #t) (t "mipsel-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "futures") (r "^0.1.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.2") (d #t) (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (k 0)))) (h "0q6qz5419qf3ila78dhsj3lz8csnj2lm0w17h3hsvcf304jz0ck3")))

(define-public crate-cpal-0.4.1 (c (n "cpal") (v "0.4.1") (d (list (d (n "alsa-sys") (r "^0.1") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "alsa-sys") (r "^0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0.1") (d #t) (t "mipsel-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "futures") (r "^0.1.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.2") (d #t) (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (k 0)))) (h "1ax32zxn6z77c62p0rf5va7qvndf94qcqv1qc645kpghdj7y1lx9")))

(define-public crate-cpal-0.4.2 (c (n "cpal") (v "0.4.2") (d (list (d (n "alsa-sys") (r "^0.1") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "alsa-sys") (r "^0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0.1") (d #t) (t "mipsel-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "^0.6") (d #t) (t "i686-apple-darwin") (k 0)) (d (n "coreaudio-rs") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "futures") (r "^0.1.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.2") (d #t) (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (k 0)))) (h "1znv490n8h1hsi509dbc3zq1lm640ah93b5yqfwz73m3qiaqj05p")))

(define-public crate-cpal-0.4.3 (c (n "cpal") (v "0.4.3") (d (list (d (n "alsa-sys") (r "^0.1") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "alsa-sys") (r "^0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0.1") (d #t) (t "mipsel-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "^0.6") (d #t) (t "i686-apple-darwin") (k 0)) (d (n "coreaudio-rs") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "futures") (r "^0.1.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.2") (d #t) (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (k 0)))) (h "0l3w1l6hlr91gyvjpz195lg62my8ignkn2vdrbmg8i1kxfl8zmmx")))

(define-public crate-cpal-0.4.4 (c (n "cpal") (v "0.4.4") (d (list (d (n "alsa-sys") (r "^0.1") (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "alsa-sys") (r "^0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0.1") (d #t) (t "mipsel-unknown-linux-gnu") (k 0)) (d (n "alsa-sys") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "coreaudio-rs") (r "^0.6") (d #t) (t "i686-apple-darwin") (k 0)) (d (n "coreaudio-rs") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "futures") (r "^0.1.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.2") (d #t) (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (k 0)))) (h "0p50kjf3fl1gqnhln5waqa4va6afprrjwgzcl49jm46xpr3rlyy6")))

(define-public crate-cpal-0.4.5 (c (n "cpal") (v "0.4.5") (d (list (d (n "alsa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures") (r "^0.1.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0bvw932zcyng4ylnp27gb7h8ibpbpwq9rwx83qjyl9a9z4iizcyg")))

(define-public crate-cpal-0.4.6 (c (n "cpal") (v "0.4.6") (d (list (d (n "alsa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.7.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "futures") (r "^0.1.1") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "07966blvzp8kmzmjdp4hl1bcy02aiij2kxnbmkxfj3i6v5ysazkw")))

(define-public crate-cpal-0.5.0 (c (n "cpal") (v "0.5.0") (d (list (d (n "alsa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.7.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "ole32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1hwmfqd3r600hwxvarrjk28hci5vgch6krm578pcvr3c2h511rqb")))

(define-public crate-cpal-0.5.1 (c (n "cpal") (v "0.5.1") (d (list (d (n "alsa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.7.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "ole32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0b5h0pibarjzakaspahkd53sgkgs78dwhpjqq9qy6g49xqx7vll8")))

(define-public crate-cpal-0.6.0 (c (n "cpal") (v "0.6.0") (d (list (d (n "alsa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.7.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "ole32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "stdweb") (r "^0.1.3") (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0ppnya0ypqqw4k920fk7f0d42qgi4ics43adqdxpigcxkcx4h2dn")))

(define-public crate-cpal-0.7.0 (c (n "cpal") (v "0.7.0") (d (list (d (n "alsa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "core-foundation-sys") (r "^0.5.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.8.1") (f (quote ("audio_unit" "core_audio"))) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "ole32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "stdweb") (r "^0.1.3") (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "winapi") (r "^0.2.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0ci994sbqp4drgr8h2qhsc8md7k07rkmmarqd3qgxxvcpgq1hb9r")))

(define-public crate-cpal-0.8.0 (c (n "cpal") (v "0.8.0") (d (list (d (n "alsa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "core-foundation-sys") (r "^0.5.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.9.0") (f (quote ("audio_unit" "core_audio"))) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "hound") (r "^3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "stdweb") (r "^0.1.3") (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("audiosessiontypes" "audioclient" "coml2api" "combaseapi" "debug" "devpkey" "handleapi" "ksmedia" "mmdeviceapi" "objbase" "std" "synchapi" "winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0hcmbxgjqbyvc61bzz6lqdw2alylgb4gfsdwj3xbanhg0icf6mfh")))

(define-public crate-cpal-0.8.1 (c (n "cpal") (v "0.8.1") (d (list (d (n "alsa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "core-foundation-sys") (r "^0.5.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.9.0") (f (quote ("audio_unit" "core_audio"))) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "hound") (r "^3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "stdweb") (r "^0.1.3") (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("audiosessiontypes" "audioclient" "coml2api" "combaseapi" "debug" "devpkey" "handleapi" "ksmedia" "mmdeviceapi" "objbase" "std" "synchapi" "winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "01s4ql2wlxgp1sd0z51090mw0sxh09lwkmyin72zp3nmln34ql9r")))

(define-public crate-cpal-0.8.2 (c (n "cpal") (v "0.8.2") (d (list (d (n "alsa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "core-foundation-sys") (r "^0.5.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.9.0") (f (quote ("audio_unit" "core_audio"))) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "hound") (r "^3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "stdweb") (r "^0.1.3") (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("audiosessiontypes" "audioclient" "coml2api" "combaseapi" "debug" "devpkey" "handleapi" "ksmedia" "mmdeviceapi" "objbase" "std" "synchapi" "winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "17l298jyp4lanl0igxp30m6xnv84gacvdbp3ylrv5c9ncpny32nm")))

(define-public crate-cpal-0.9.0 (c (n "cpal") (v "0.9.0") (d (list (d (n "alsa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "core-foundation-sys") (r "^0.5.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.9.0") (f (quote ("audio_unit" "core_audio"))) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "hound") (r "^3.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "stdweb") (r "^0.1.3") (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("audiosessiontypes" "audioclient" "coml2api" "combaseapi" "debug" "devpkey" "handleapi" "ksmedia" "mmdeviceapi" "objbase" "std" "synchapi" "winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0562svs7zd01j2bmc25s2xdw2xywn32s69c17bfdm8fn6iydhs5g")))

(define-public crate-cpal-0.10.0 (c (n "cpal") (v "0.10.0") (d (list (d (n "alsa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "asio-sys") (r "^0.1") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "core-foundation-sys") (r "^0.6.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.9.1") (f (quote ("audio_unit" "core_audio"))) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "hound") (r "^3.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "stdweb") (r "^0.1.3") (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("audiosessiontypes" "audioclient" "coml2api" "combaseapi" "debug" "devpkey" "handleapi" "ksmedia" "mmdeviceapi" "objbase" "std" "synchapi" "winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "084142l0k28x2f3v8raw1rg3kbmqf15a9qz1b5dhp1dy9410gv9x") (f (quote (("asio" "asio-sys"))))))

(define-public crate-cpal-0.11.0 (c (n "cpal") (v "0.11.0") (d (list (d (n "alsa-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "anyhow") (r "^1.0.12") (d #t) (k 2)) (d (n "asio-sys") (r "^0.1") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "core-foundation-sys") (r "^0.6.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.9.1") (f (quote ("audio_unit" "core_audio"))) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "hound") (r "^3.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "ringbuf") (r "^0.1.6") (d #t) (k 2)) (d (n "stdweb") (r "^0.1.3") (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("audiosessiontypes" "audioclient" "coml2api" "combaseapi" "debug" "devpkey" "handleapi" "ksmedia" "mmdeviceapi" "objbase" "std" "synchapi" "winbase" "winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0nfx8d227pcfgb81a3y7418xzbp066s08g5xjlmgc0zld5fxambb") (f (quote (("asio" "asio-sys"))))))

(define-public crate-cpal-0.12.0 (c (n "cpal") (v "0.12.0") (d (list (d (n "alsa") (r "^0.4.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "anyhow") (r "^1.0.12") (d #t) (k 2)) (d (n "asio-sys") (r "^0.1") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "core-foundation-sys") (r "^0.6.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.9.1") (f (quote ("audio_unit" "core_audio"))) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "hound") (r "^3.4") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.35") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "libc") (r "^0.2.65") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "nix") (r "^0.15.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "num-traits") (r "^0.2.6") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ringbuf") (r "^0.1.6") (d #t) (k 2)) (d (n "stdweb") (r "^0.1.3") (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.58") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "web-sys") (r "^0.3.35") (f (quote ("AudioContext" "AudioContextOptions" "AudioBuffer" "AudioBufferSourceNode" "AudioNode" "AudioDestinationNode" "Window" "AudioContextState"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("audiosessiontypes" "audioclient" "coml2api" "combaseapi" "debug" "devpkey" "handleapi" "ksmedia" "mmdeviceapi" "objbase" "profileapi" "std" "synchapi" "winbase" "winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "14ymhzhs6yr3hw1j6rqgx2spblnyjavbcn64lrc41k3fxxn8z82b") (f (quote (("asio" "asio-sys" "num-traits"))))))

(define-public crate-cpal-0.12.1 (c (n "cpal") (v "0.12.1") (d (list (d (n "alsa") (r "^0.4.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "anyhow") (r "^1.0.12") (d #t) (k 2)) (d (n "asio-sys") (r "^0.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "core-foundation-sys") (r "^0.6.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.9.1") (f (quote ("audio_unit" "core_audio"))) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "hound") (r "^3.4") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.35") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "libc") (r "^0.2.65") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "nix") (r "^0.15.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "num-traits") (r "^0.2.6") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ringbuf") (r "^0.1.6") (d #t) (k 2)) (d (n "stdweb") (r "^0.1.3") (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.58") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "web-sys") (r "^0.3.35") (f (quote ("AudioContext" "AudioContextOptions" "AudioBuffer" "AudioBufferSourceNode" "AudioNode" "AudioDestinationNode" "Window" "AudioContextState"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("audiosessiontypes" "audioclient" "coml2api" "combaseapi" "debug" "devpkey" "handleapi" "ksmedia" "mmdeviceapi" "objbase" "profileapi" "std" "synchapi" "winbase" "winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0dwpzlchzn6r28mabrh342a407k006kgqbb1wkij87hq3qii0i5y") (f (quote (("asio" "asio-sys" "num-traits"))))))

(define-public crate-cpal-0.13.0 (c (n "cpal") (v "0.13.0") (d (list (d (n "alsa") (r "^0.4.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "anyhow") (r "^1.0.12") (d #t) (k 2)) (d (n "asio-sys") (r "^0.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "core-foundation-sys") (r "^0.6.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.9.1") (f (quote ("audio_unit" "core_audio"))) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "hound") (r "^3.4") (d #t) (k 2)) (d (n "jack") (r "^0.6.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "jni") (r "^0.17") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3.35") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "libc") (r "^0.2.65") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "ndk") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "nix") (r "^0.15.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "num-traits") (r "^0.2.6") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "oboe") (r "^0.3.0") (f (quote ("java-interface"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ringbuf") (r "^0.1.6") (d #t) (k 2)) (d (n "stdweb") (r "^0.1.3") (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.58") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "web-sys") (r "^0.3.35") (f (quote ("AudioContext" "AudioContextOptions" "AudioBuffer" "AudioBufferSourceNode" "AudioNode" "AudioDestinationNode" "Window" "AudioContextState"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("audiosessiontypes" "audioclient" "coml2api" "combaseapi" "debug" "devpkey" "handleapi" "ksmedia" "mmdeviceapi" "objbase" "profileapi" "std" "synchapi" "winbase" "winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1jidbvk8d662lq42lnxw31lsbcadamx9j6a3p12lp4p3744d66a9") (f (quote (("asio" "asio-sys" "num-traits"))))))

(define-public crate-cpal-0.13.1 (c (n "cpal") (v "0.13.1") (d (list (d (n "alsa") (r "^0.4.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "anyhow") (r "^1.0.12") (d #t) (k 2)) (d (n "asio-sys") (r "^0.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "core-foundation-sys") (r "^0.6.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.9.1") (f (quote ("audio_unit" "core_audio"))) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "hound") (r "^3.4") (d #t) (k 2)) (d (n "jack") (r "^0.6.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "jni") (r "^0.17") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3.35") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "libc") (r "^0.2.65") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "ndk") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.2") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "nix") (r "^0.15.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "num-traits") (r "^0.2.6") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "oboe") (r "^0.3.0") (f (quote ("java-interface"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ringbuf") (r "^0.2") (d #t) (k 2)) (d (n "stdweb") (r "^0.1.3") (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.58") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "web-sys") (r "^0.3.35") (f (quote ("AudioContext" "AudioContextOptions" "AudioBuffer" "AudioBufferSourceNode" "AudioNode" "AudioDestinationNode" "Window" "AudioContextState"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("audiosessiontypes" "audioclient" "coml2api" "combaseapi" "debug" "devpkey" "handleapi" "ksmedia" "mmdeviceapi" "objbase" "profileapi" "std" "synchapi" "winbase" "winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0mrndms8pcknr4dr364nnvp5vvp2jb8bzyqwxavd79fzi4h1wqq5") (f (quote (("asio" "asio-sys" "num-traits"))))))

(define-public crate-cpal-0.13.2 (c (n "cpal") (v "0.13.2") (d (list (d (n "alsa") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "anyhow") (r "^1.0.12") (d #t) (k 2)) (d (n "asio-sys") (r "^0.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "clap") (r "^2.33.3") (k 2)) (d (n "core-foundation-sys") (r "^0.6.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.10.0") (f (quote ("audio_unit" "core_audio" "audio_toolbox"))) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "coreaudio-rs") (r "^0.10.0") (f (quote ("audio_unit" "core_audio"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hound") (r "^3.4") (d #t) (k 2)) (d (n "jack") (r "^0.6.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "jni") (r "^0.18") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3.35") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "libc") (r "^0.2.65") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "ndk") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "nix") (r "^0.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "num-traits") (r "^0.2.6") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "oboe") (r "^0.4.0") (f (quote ("java-interface"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ringbuf") (r "^0.2") (d #t) (k 2)) (d (n "stdweb") (r "^0.1.3") (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.58") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "web-sys") (r "^0.3.35") (f (quote ("AudioContext" "AudioContextOptions" "AudioBuffer" "AudioBufferSourceNode" "AudioNode" "AudioDestinationNode" "Window" "AudioContextState"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("audiosessiontypes" "audioclient" "coml2api" "combaseapi" "debug" "devpkey" "handleapi" "ksmedia" "mmdeviceapi" "objbase" "profileapi" "std" "synchapi" "winbase" "winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1b1q282xsk55f31x9g31pgdbxnqr4gklpmi80c9djc02yg9q22c4") (f (quote (("asio" "asio-sys" "num-traits"))))))

(define-public crate-cpal-0.13.3 (c (n "cpal") (v "0.13.3") (d (list (d (n "alsa") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "anyhow") (r "^1.0.12") (d #t) (k 2)) (d (n "asio-sys") (r "^0.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "clap") (r "^2.33.3") (k 2)) (d (n "core-foundation-sys") (r "^0.6.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.10.0") (f (quote ("audio_unit" "core_audio" "audio_toolbox"))) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "coreaudio-rs") (r "^0.10.0") (f (quote ("audio_unit" "core_audio"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hound") (r "^3.4") (d #t) (k 2)) (d (n "jack") (r "^0.6.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "jni") (r "^0.18") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3.35") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "libc") (r "^0.2.65") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "ndk") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "nix") (r "^0.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "num-traits") (r "^0.2.6") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "oboe") (r "^0.4.0") (f (quote ("java-interface"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ringbuf") (r "^0.2") (d #t) (k 2)) (d (n "stdweb") (r "^0.1.3") (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.58") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "web-sys") (r "^0.3.35") (f (quote ("AudioContext" "AudioContextOptions" "AudioBuffer" "AudioBufferSourceNode" "AudioNode" "AudioDestinationNode" "Window" "AudioContextState"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("audiosessiontypes" "audioclient" "coml2api" "combaseapi" "debug" "devpkey" "handleapi" "ksmedia" "mmdeviceapi" "objbase" "profileapi" "std" "synchapi" "winbase" "winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "09ddgnspmvg2ybazs489l8sp0g3gsarzhac073x87id3mbrdslc3") (f (quote (("asio" "asio-sys" "num-traits"))))))

(define-public crate-cpal-0.13.4 (c (n "cpal") (v "0.13.4") (d (list (d (n "alsa") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "anyhow") (r "^1.0.12") (d #t) (k 2)) (d (n "asio-sys") (r "^0.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "clap") (r "^2.33.3") (k 2)) (d (n "core-foundation-sys") (r "^0.8.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.10.0") (f (quote ("audio_unit" "core_audio" "audio_toolbox"))) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "coreaudio-rs") (r "^0.10.0") (f (quote ("audio_unit" "core_audio"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hound") (r "^3.4") (d #t) (k 2)) (d (n "jack") (r "^0.7.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3.35") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "libc") (r "^0.2.65") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "ndk") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "nix") (r "^0.20") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "num-traits") (r "^0.2.6") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "oboe") (r "^0.4.0") (f (quote ("java-interface"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ringbuf") (r "^0.2") (d #t) (k 2)) (d (n "stdweb") (r "^0.1.3") (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.58") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "web-sys") (r "^0.3.35") (f (quote ("AudioContext" "AudioContextOptions" "AudioBuffer" "AudioBufferSourceNode" "AudioNode" "AudioDestinationNode" "Window" "AudioContextState"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("audiosessiontypes" "audioclient" "coml2api" "combaseapi" "debug" "devpkey" "handleapi" "ksmedia" "mmdeviceapi" "objbase" "profileapi" "std" "synchapi" "winbase" "winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0614gbjg29n817m97595974pbw331dqyz2c8g0ncs5zn4455zx4q") (f (quote (("asio" "asio-sys" "num-traits"))))))

(define-public crate-cpal-0.13.5 (c (n "cpal") (v "0.13.5") (d (list (d (n "alsa") (r "^0.6") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "anyhow") (r "^1.0.12") (d #t) (k 2)) (d (n "asio-sys") (r "^0.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "clap") (r "^3") (f (quote ("std"))) (k 2)) (d (n "core-foundation-sys") (r "^0.8.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.10.0") (f (quote ("audio_unit" "core_audio" "audio_toolbox"))) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "coreaudio-rs") (r "^0.10.0") (f (quote ("audio_unit" "core_audio"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hound") (r "^3.4") (d #t) (k 2)) (d (n "jack") (r "^0.8") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3.35") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "libc") (r "^0.2.65") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "ndk") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "nix") (r "^0.23") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "num-traits") (r "^0.2.6") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "oboe") (r "^0.4") (f (quote ("java-interface"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ringbuf") (r "^0.2") (d #t) (k 2)) (d (n "stdweb") (r "^0.1.3") (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.58") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "web-sys") (r "^0.3.35") (f (quote ("AudioContext" "AudioContextOptions" "AudioBuffer" "AudioBufferSourceNode" "AudioNode" "AudioDestinationNode" "Window" "AudioContextState"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("audiosessiontypes" "audioclient" "coml2api" "combaseapi" "debug" "devpkey" "handleapi" "ksmedia" "mmdeviceapi" "objbase" "profileapi" "std" "synchapi" "winbase" "winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "05j11vz8rw19gqqvpd48i7wvm6j77v8fwx5lwhlkckqjllv7h4bl") (f (quote (("asio" "asio-sys" "num-traits"))))))

(define-public crate-cpal-0.14.0 (c (n "cpal") (v "0.14.0") (d (list (d (n "alsa") (r "^0.6") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "anyhow") (r "^1.0.12") (d #t) (k 2)) (d (n "asio-sys") (r "^0.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "clap") (r "^3.1") (f (quote ("std"))) (k 2)) (d (n "core-foundation-sys") (r "^0.8.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.10") (f (quote ("audio_unit" "core_audio" "audio_toolbox"))) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "coreaudio-rs") (r "^0.10") (f (quote ("audio_unit" "core_audio"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hound") (r "^3.4") (d #t) (k 2)) (d (n "jack") (r "^0.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3.35") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "libc") (r "^0.2.65") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 2)) (d (n "nix") (r "^0.23") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "num-traits") (r "^0.2.6") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "oboe") (r "^0.4") (f (quote ("java-interface"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ringbuf") (r "^0.2") (d #t) (k 2)) (d (n "stdweb") (r "^0.1.3") (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.58") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "web-sys") (r "^0.3.35") (f (quote ("AudioContext" "AudioContextOptions" "AudioBuffer" "AudioBufferSourceNode" "AudioNode" "AudioDestinationNode" "Window" "AudioContextState"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "windows") (r "^0.37") (f (quote ("Win32_Media_Audio" "Win32_Foundation" "Win32_System_Com" "Win32_Devices_Properties" "Win32_Media_KernelStreaming" "Win32_System_Com_StructuredStorage" "Win32_System_Ole" "Win32_System_Threading" "Win32_Security" "Win32_System_SystemServices" "Win32_System_WindowsProgramming" "Win32_Media_Multimedia" "Win32_UI_Shell_PropertiesSystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "06w44iirrhy9ahsmaj7ngkd3v0b605yjvhd7hq0i190frx3nnikx") (f (quote (("asio" "asio-sys" "num-traits"))))))

(define-public crate-cpal-0.14.1 (c (n "cpal") (v "0.14.1") (d (list (d (n "alsa") (r "^0.6") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "anyhow") (r "^1.0.12") (d #t) (k 2)) (d (n "asio-sys") (r "^0.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "clap") (r "^3.1") (f (quote ("std"))) (k 2)) (d (n "core-foundation-sys") (r "^0.8.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.10") (f (quote ("audio_unit" "core_audio" "audio_toolbox"))) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "coreaudio-rs") (r "^0.10") (f (quote ("audio_unit" "core_audio"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hound") (r "^3.4") (d #t) (k 2)) (d (n "jack") (r "^0.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3.35") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "libc") (r "^0.2.65") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 2)) (d (n "nix") (r "^0.25") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "num-traits") (r "^0.2.6") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "oboe") (r "^0.4") (f (quote ("java-interface"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ringbuf") (r "^0.2") (d #t) (k 2)) (d (n "stdweb") (r "^0.4.20") (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.58") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "web-sys") (r "^0.3.35") (f (quote ("AudioContext" "AudioContextOptions" "AudioBuffer" "AudioBufferSourceNode" "AudioNode" "AudioDestinationNode" "Window" "AudioContextState"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "windows") (r "^0.37") (f (quote ("Win32_Media_Audio" "Win32_Foundation" "Win32_System_Com" "Win32_Devices_Properties" "Win32_Media_KernelStreaming" "Win32_System_Com_StructuredStorage" "Win32_System_Ole" "Win32_System_Threading" "Win32_Security" "Win32_System_SystemServices" "Win32_System_WindowsProgramming" "Win32_Media_Multimedia" "Win32_UI_Shell_PropertiesSystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "028818r2n24c3nqda2h9d96ccw70j9272aambw99ihv9rgfi6d77") (f (quote (("asio" "asio-sys" "num-traits"))))))

(define-public crate-cpal-0.14.2 (c (n "cpal") (v "0.14.2") (d (list (d (n "alsa") (r "^0.6") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "anyhow") (r "^1.0.12") (d #t) (k 2)) (d (n "asio-sys") (r "^0.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "clap") (r "^3.1") (f (quote ("std"))) (k 2)) (d (n "core-foundation-sys") (r "^0.8.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.10") (f (quote ("audio_unit" "core_audio" "audio_toolbox"))) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "coreaudio-rs") (r "^0.10") (f (quote ("audio_unit" "core_audio"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hound") (r "^3.4") (d #t) (k 2)) (d (n "jack") (r "^0.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3.35") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "libc") (r "^0.2.65") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 2)) (d (n "num-traits") (r "^0.2.6") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "oboe") (r "^0.4") (f (quote ("java-interface"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ringbuf") (r "^0.2") (d #t) (k 2)) (d (n "stdweb") (r "^0.4.20") (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.58") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "web-sys") (r "^0.3.35") (f (quote ("AudioContext" "AudioContextOptions" "AudioBuffer" "AudioBufferSourceNode" "AudioNode" "AudioDestinationNode" "Window" "AudioContextState"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "windows") (r "^0.37") (f (quote ("Win32_Media_Audio" "Win32_Foundation" "Win32_System_Com" "Win32_Devices_Properties" "Win32_Media_KernelStreaming" "Win32_System_Com_StructuredStorage" "Win32_System_Ole" "Win32_System_Threading" "Win32_Security" "Win32_System_SystemServices" "Win32_System_WindowsProgramming" "Win32_Media_Multimedia" "Win32_UI_Shell_PropertiesSystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "02rdb90fj2fa787322k1jq6qalxz4sbikwjgb19rjphq7svc2hpk") (f (quote (("asio" "asio-sys" "num-traits"))))))

(define-public crate-cpal-0.15.0 (c (n "cpal") (v "0.15.0") (d (list (d (n "alsa") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "asio-sys") (r "^0.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "core-foundation-sys") (r "^0.8.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.11") (f (quote ("audio_unit" "core_audio" "audio_toolbox"))) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "coreaudio-rs") (r "^0.11") (f (quote ("audio_unit" "core_audio"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "hound") (r "^3.5") (d #t) (k 2)) (d (n "jack") (r "^0.11") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3.35") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "js-sys") (r "^0.3.35") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 2)) (d (n "num-traits") (r "^0.2.6") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "oboe") (r "^0.5") (f (quote ("java-interface"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ringbuf") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.58") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.58") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "web-sys") (r "^0.3.35") (f (quote ("AudioContext" "AudioContextOptions" "AudioBuffer" "AudioBufferSourceNode" "AudioNode" "AudioDestinationNode" "Window" "AudioContextState"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "web-sys") (r "^0.3.35") (f (quote ("AudioContext" "AudioContextOptions" "AudioBuffer" "AudioBufferSourceNode" "AudioNode" "AudioDestinationNode" "Window" "AudioContextState"))) (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "windows") (r "^0.44.0") (f (quote ("Win32_Media_Audio" "Win32_Foundation" "Win32_System_Com" "Win32_Devices_Properties" "Win32_Media_KernelStreaming" "Win32_System_Com_StructuredStorage" "Win32_System_Ole" "Win32_System_Threading" "Win32_Security" "Win32_System_SystemServices" "Win32_System_WindowsProgramming" "Win32_Media_Multimedia" "Win32_UI_Shell_PropertiesSystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "02p12zq79cbs47m5j9vswf3ccxs9jhfrpkcly1rqyn6z1arafkyk") (f (quote (("asio" "asio-sys" "num-traits"))))))

(define-public crate-cpal-0.15.1 (c (n "cpal") (v "0.15.1") (d (list (d (n "alsa") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "asio-sys") (r "^0.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "core-foundation-sys") (r "^0.8.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.11") (f (quote ("audio_unit" "core_audio" "audio_toolbox"))) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "coreaudio-rs") (r "^0.11") (f (quote ("audio_unit" "core_audio"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "hound") (r "^3.5") (d #t) (k 2)) (d (n "jack") (r "^0.11") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3.35") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "js-sys") (r "^0.3.35") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "mach2") (r "^0.4") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 2)) (d (n "num-traits") (r "^0.2.6") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "oboe") (r "^0.5") (f (quote ("java-interface"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ringbuf") (r "^0.3") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.58") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.58") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "web-sys") (r "^0.3.35") (f (quote ("AudioContext" "AudioContextOptions" "AudioBuffer" "AudioBufferSourceNode" "AudioNode" "AudioDestinationNode" "Window" "AudioContextState"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "web-sys") (r "^0.3.35") (f (quote ("AudioContext" "AudioContextOptions" "AudioBuffer" "AudioBufferSourceNode" "AudioNode" "AudioDestinationNode" "Window" "AudioContextState"))) (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "windows") (r "^0.44.0") (f (quote ("Win32_Media_Audio" "Win32_Foundation" "Win32_System_Com" "Win32_Devices_Properties" "Win32_Media_KernelStreaming" "Win32_System_Com_StructuredStorage" "Win32_System_Ole" "Win32_System_Threading" "Win32_Security" "Win32_System_SystemServices" "Win32_System_WindowsProgramming" "Win32_Media_Multimedia" "Win32_UI_Shell_PropertiesSystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1ca1mc3z20fbg9gl6ydgxiyb8y44g93f6vyz9f3kz9y4vqci097i") (f (quote (("oboe-shared-stdcxx" "oboe/shared-stdcxx") ("asio" "asio-sys" "num-traits"))))))

(define-public crate-cpal-0.15.2 (c (n "cpal") (v "0.15.2") (d (list (d (n "alsa") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "asio-sys") (r "^0.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "core-foundation-sys") (r "^0.8.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.11") (f (quote ("audio_unit" "core_audio" "audio_toolbox"))) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "coreaudio-rs") (r "^0.11") (f (quote ("audio_unit" "core_audio"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "hound") (r "^3.5") (d #t) (k 2)) (d (n "jack") (r "^0.11") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "jni") (r "^0.19") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3.35") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "js-sys") (r "^0.3.35") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "mach2") (r "^0.4") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 2)) (d (n "num-traits") (r "^0.2.6") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "oboe") (r "^0.5") (f (quote ("java-interface"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ringbuf") (r "^0.3") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.58") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.58") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "web-sys") (r "^0.3.35") (f (quote ("AudioContext" "AudioContextOptions" "AudioBuffer" "AudioBufferSourceNode" "AudioNode" "AudioDestinationNode" "Window" "AudioContextState"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "web-sys") (r "^0.3.35") (f (quote ("AudioContext" "AudioContextOptions" "AudioBuffer" "AudioBufferSourceNode" "AudioNode" "AudioDestinationNode" "Window" "AudioContextState"))) (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "windows") (r "^0.46.0") (f (quote ("Win32_Media_Audio" "Win32_Foundation" "Win32_System_Com" "Win32_Devices_Properties" "Win32_Media_KernelStreaming" "Win32_System_Com_StructuredStorage" "Win32_System_Ole" "Win32_System_Threading" "Win32_Security" "Win32_System_SystemServices" "Win32_System_WindowsProgramming" "Win32_Media_Multimedia" "Win32_UI_Shell_PropertiesSystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "132p39xsdiyn6iysmyk8qr3fsyn0hxll8jsi00q4ki9qx689v5bd") (f (quote (("oboe-shared-stdcxx" "oboe/shared-stdcxx") ("asio" "asio-sys" "num-traits"))))))

(define-public crate-cpal-0.15.3 (c (n "cpal") (v "0.15.3") (d (list (d (n "alsa") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "asio-sys") (r "^0.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "core-foundation-sys") (r "^0.8.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-rs") (r "^0.11") (f (quote ("audio_unit" "core_audio" "audio_toolbox"))) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "coreaudio-rs") (r "^0.11") (f (quote ("audio_unit" "core_audio"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "hound") (r "^3.5") (d #t) (k 2)) (d (n "jack") (r "^0.11") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3.35") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "js-sys") (r "^0.3.35") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))") (k 0)) (d (n "mach2") (r "^0.4") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "ndk") (r "^0.8") (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 2)) (d (n "num-traits") (r "^0.2.6") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "oboe") (r "^0.6") (f (quote ("java-interface"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ringbuf") (r "^0.3") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.58") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.89") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "web-sys") (r "^0.3.35") (f (quote ("AudioContext" "AudioContextOptions" "AudioBuffer" "AudioBufferSourceNode" "AudioNode" "AudioDestinationNode" "Window" "AudioContextState"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "web-sys") (r "^0.3.35") (f (quote ("AudioContext" "AudioContextOptions" "AudioBuffer" "AudioBufferSourceNode" "AudioNode" "AudioDestinationNode" "Window" "AudioContextState"))) (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "windows") (r "^0.54.0") (f (quote ("Win32_Media_Audio" "Win32_Foundation" "Win32_Devices_Properties" "Win32_Media_KernelStreaming" "Win32_System_Com_StructuredStorage" "Win32_System_Threading" "Win32_Security" "Win32_System_SystemServices" "Win32_System_Variant" "Win32_Media_Multimedia" "Win32_UI_Shell_PropertiesSystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0yd7d51kcf8ml0bfkjrac12zgfjzk21wa97maxg0fhzpr03sngc7") (f (quote (("oboe-shared-stdcxx" "oboe/shared-stdcxx") ("asio" "asio-sys" "num-traits")))) (r "1.70")))

