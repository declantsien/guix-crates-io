(define-module (crates-io cp cl cpclib-asm) #:use-module (crates-io))

(define-public crate-cpclib-asm-0.4.0-alpha (c (n "cpclib-asm") (v "0.4.0-alpha") (d (list (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "bitfield") (r "^0.13.2") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bitsets") (r "^0.1.1") (d #t) (k 0)) (d (n "built") (r "^0.4") (f (quote ("chrono"))) (d #t) (k 1)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (o #t) (d #t) (k 0)) (d (n "cpclib-basic") (r "^0.4.0-alpha") (d #t) (k 0)) (d (n "cpclib-disc") (r "^0.4.0-alpha") (o #t) (d #t) (k 0)) (d (n "cpclib-sna") (r "^0.4.0-alpha") (d #t) (k 0)) (d (n "cpclib-tokens") (r "^0.4.0-alpha") (d #t) (k 0)) (d (n "custom_error") (r "^1.7.1") (d #t) (k 0)) (d (n "delegate") (r "^0.3.0") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "getset") (r "^0.0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 0)) (d (n "memchr") (r "^2.2.1") (d #t) (k 0)) (d (n "nom") (r "^5.0.1") (d #t) (k 0)) (d (n "num_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "paste") (r "^0.1.9") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "strsim") (r "^0.9.2") (d #t) (k 0)) (d (n "time") (r "^0.1.42") (o #t) (d #t) (k 0)))) (h "0jv0kjqhv4gskf4zh9sgib1ihx91yxcs932m4vqg5xnymw261rdl") (f (quote (("basm" "clap" "semver" "time" "cpclib-disc"))))))

(define-public crate-cpclib-asm-0.4.1-alpha (c (n "cpclib-asm") (v "0.4.1-alpha") (d (list (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "bitfield") (r "^0.13.2") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bitsets") (r "^0.1.1") (d #t) (k 0)) (d (n "built") (r "^0.4") (f (quote ("chrono"))) (d #t) (k 1)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (o #t) (d #t) (k 0)) (d (n "cpclib-basic") (r "^0.4.1-alpha") (d #t) (k 0)) (d (n "cpclib-disc") (r "^0.4.1-alpha") (d #t) (k 0)) (d (n "cpclib-sna") (r "^0.4.1-alpha") (d #t) (k 0)) (d (n "cpclib-tokens") (r "^0.4.1-alpha") (d #t) (k 0)) (d (n "custom_error") (r "^1.7.1") (d #t) (k 0)) (d (n "delegate") (r "^0.3.0") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "getset") (r "^0.0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 0)) (d (n "memchr") (r "^2.2.1") (d #t) (k 0)) (d (n "nom") (r "^5.0.1") (d #t) (k 0)) (d (n "num_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "paste") (r "^0.1.9") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "strsim") (r "^0.9.2") (d #t) (k 0)) (d (n "time") (r "^0.1.42") (o #t) (d #t) (k 0)))) (h "1wz9hh8di8sp5iw8ggfz5lhpqqhib91214mfgqpm6yxg3ainm21i") (f (quote (("bdasm" "clap" "semver" "time") ("basm" "clap" "semver" "time"))))))

(define-public crate-cpclib-asm-0.4.2-alpha (c (n "cpclib-asm") (v "0.4.2-alpha") (d (list (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "bitfield") (r "^0.13.2") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bitsets") (r "^0.1.1") (d #t) (k 0)) (d (n "built") (r "^0.4") (f (quote ("chrono"))) (d #t) (k 1)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (o #t) (d #t) (k 0)) (d (n "cpclib-basic") (r "^0.4.2-alpha") (d #t) (k 0)) (d (n "cpclib-disc") (r "^0.4.2-alpha") (d #t) (k 0)) (d (n "cpclib-sna") (r "^0.4.2-alpha") (d #t) (k 0)) (d (n "cpclib-tokens") (r "^0.4.2-alpha") (d #t) (k 0)) (d (n "custom_error") (r "^1.7.1") (d #t) (k 0)) (d (n "delegate") (r "^0.3.0") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "getset") (r "^0.0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 0)) (d (n "memchr") (r "^2.2.1") (d #t) (k 0)) (d (n "nom") (r "^5.0.1") (d #t) (k 0)) (d (n "num_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "paste") (r "^0.1.9") (d #t) (k 0)) (d (n "rayon") (r "^1.3.1") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "strsim") (r "^0.9.2") (d #t) (k 0)) (d (n "time") (r "^0.1.42") (o #t) (d #t) (k 0)))) (h "05a57vfpga06gmg86wj31fqbksb559fxwcljm8d5klvzglghpvkc") (f (quote (("bdasm" "clap" "semver" "time") ("basm" "clap" "semver" "time"))))))

(define-public crate-cpclib-asm-0.4.3-alpha (c (n "cpclib-asm") (v "0.4.3-alpha") (d (list (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bitfield") (r "^0.13.2") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bitsets") (r "^0.1.1") (d #t) (k 0)) (d (n "built") (r "^0.4.3") (f (quote ("chrono"))) (d #t) (k 1)) (d (n "cc") (r "^1.0.60") (d #t) (k 1)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "cpclib-basic") (r "^0.4.3-alpha") (d #t) (k 0)) (d (n "cpclib-disc") (r "^0.4.3-alpha") (d #t) (k 0)) (d (n "cpclib-sna") (r "^0.4.3-alpha") (d #t) (k 0)) (d (n "cpclib-tokens") (r "^0.4.3-alpha") (d #t) (k 0)) (d (n "custom_error") (r "^1.8.0") (d #t) (k 0)) (d (n "delegate") (r "^0.4.3") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "failure") (r "^0.1.8") (d #t) (k 0)) (d (n "getset") (r "^0.1.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.77") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (k 0)) (d (n "nom") (r "^5.1.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.1") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "time") (r "^0.2.22") (o #t) (d #t) (k 0)))) (h "0ph3zhdvdn2sxnrdq6zil2i932nq741zq7my80kn0cdj9y0gk289") (f (quote (("bdasm" "clap" "semver" "time") ("basm" "clap" "semver" "time"))))))

(define-public crate-cpclib-asm-0.4.4 (c (n "cpclib-asm") (v "0.4.4") (d (list (d (n "arrayref") (r ">=0.3.6, <0.4.0") (d #t) (k 0)) (d (n "bitfield") (r ">=0.13.2, <0.14.0") (d #t) (k 0)) (d (n "bitflags") (r ">=1.2.1, <2.0.0") (d #t) (k 0)) (d (n "bitsets") (r ">=0.1.1, <0.2.0") (d #t) (k 0)) (d (n "built") (r ">=0.4.3, <0.5.0") (f (quote ("chrono"))) (d #t) (k 1)) (d (n "cc") (r ">=1.0.65, <2.0.0") (d #t) (k 1)) (d (n "cfg-if") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "chardet") (r ">=0.2.4, <0.3.0") (d #t) (k 0)) (d (n "clap") (r ">=2.33.3, <3.0.0") (o #t) (d #t) (k 0)) (d (n "cpclib-basic") (r ">=0.4.4, <0.5.0") (d #t) (k 0)) (d (n "cpclib-disc") (r ">=0.4.4, <0.5.0") (d #t) (k 0)) (d (n "cpclib-sna") (r ">=0.4.4, <0.5.0") (d #t) (k 0)) (d (n "cpclib-tokens") (r ">=0.4.4, <0.5.0") (d #t) (k 0)) (d (n "custom_error") (r ">=1.8.0, <2.0.0") (d #t) (k 0)) (d (n "delegate") (r ">=0.5.0, <0.6.0") (d #t) (k 0)) (d (n "either") (r ">=1.6.1, <2.0.0") (d #t) (k 0)) (d (n "encoding") (r ">=0.2.33, <0.3.0") (d #t) (k 0)) (d (n "failure") (r ">=0.1.8, <0.2.0") (d #t) (k 0)) (d (n "getset") (r ">=0.1.1, <0.2.0") (d #t) (k 0)) (d (n "itertools") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "libc") (r ">=0.2.80, <0.3.0") (d #t) (k 0)) (d (n "matches") (r ">=0.1.8, <0.2.0") (d #t) (k 0)) (d (n "memchr") (r ">=2.3.4, <3.0.0") (d #t) (k 0)) (d (n "nom") (r ">=6.0.0, <7.0.0") (d #t) (k 0)) (d (n "num_enum") (r ">=0.5.1, <0.6.0") (d #t) (k 0)) (d (n "paste") (r ">=1.0.3, <2.0.0") (d #t) (k 0)) (d (n "rayon") (r ">=1.5.0, <2.0.0") (d #t) (k 0)) (d (n "semver") (r ">=0.11.0, <0.12.0") (o #t) (d #t) (k 0)) (d (n "serde") (r ">=1.0.117, <2.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r ">=1.5.0, <2.0.0") (d #t) (k 0)) (d (n "strsim") (r ">=0.10.0, <0.11.0") (d #t) (k 0)) (d (n "time") (r ">=0.2.23, <0.3.0") (o #t) (d #t) (k 0)))) (h "1vy5kyj9hc42dmn4ldykpq3h39ca94sravwlrp6f9cdyf5b601mw") (f (quote (("bdasm" "clap" "semver" "time") ("basm" "clap" "semver" "time"))))))

(define-public crate-cpclib-asm-0.5.0 (c (n "cpclib-asm") (v "0.5.0") (d (list (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "built") (r "^0.5.1") (f (quote ("chrono"))) (d #t) (k 1)) (d (n "cc") (r "^1.0.68") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "cpclib-basic") (r "^0.5.0") (d #t) (k 0)) (d (n "cpclib-common") (r "^0.5.0") (d #t) (k 0)) (d (n "cpclib-disc") (r "^0.5.0") (d #t) (k 0)) (d (n "cpclib-image") (r "^0.5.0") (d #t) (k 0)) (d (n "cpclib-sna") (r "^0.5.0") (d #t) (k 0)) (d (n "cpclib-tokens") (r "^0.5.0") (d #t) (k 0)) (d (n "custom_error") (r "^1.9.2") (d #t) (k 0)) (d (n "delegate") (r "^0.5.2") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "failure") (r "^0.1.8") (d #t) (k 0)) (d (n "getset") (r "^0.1.1") (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 0)) (d (n "libc") (r "^0.2.97") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "substring") (r "^1.4.5") (d #t) (k 0)) (d (n "velcro") (r "^0.5.3") (d #t) (k 0)))) (h "11rk3mkqffwi267x7cvzs4i3kp6vbd5if06mplhagka4i44kbndw") (f (quote (("nocolor") ("basm" "cpclib-common/cmdline"))))))

(define-public crate-cpclib-asm-0.6.0 (c (n "cpclib-asm") (v "0.6.0") (d (list (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 0)) (d (n "built") (r "^0.5.1") (f (quote ("chrono"))) (d #t) (k 1)) (d (n "cc") (r "^1.0.73") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "cpclib-basic") (r "^0.6.0") (d #t) (k 0)) (d (n "cpclib-common") (r "^0.6.0") (d #t) (k 0)) (d (n "cpclib-disc") (r "^0.6.0") (d #t) (k 0)) (d (n "cpclib-image") (r "^0.6.0") (d #t) (k 0)) (d (n "cpclib-sna") (r "^0.6.0") (d #t) (k 0)) (d (n "cpclib-tokens") (r "^0.6.0") (d #t) (k 0)) (d (n "custom_error") (r "^1.9.2") (d #t) (k 0)) (d (n "delegate") (r "^0.6.2") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.33") (d #t) (k 0)) (d (n "failure") (r "^0.1.8") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.124") (d #t) (k 0)) (d (n "matches") (r "^0.1.9") (d #t) (k 0)) (d (n "ouroboros") (r "^0.15.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "substring") (r "^1.4.5") (d #t) (k 0)) (d (n "velcro") (r "^0.5.3") (d #t) (k 0)))) (h "01jrklr2k3bs0hvjk0qvlqgxkvp01fdr645195lhkkjj0g1qj1qf") (f (quote (("default" "colored_errors") ("colored_errors") ("basm" "cpclib-common/cmdline"))))))

(define-public crate-cpclib-asm-0.7.0 (c (n "cpclib-asm") (v "0.7.0") (d (list (d (n "arrayref") (r "^0.3.7") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 0)) (d (n "build-deps") (r "^0.1.4") (d #t) (k 1)) (d (n "built") (r "^0.6.1") (f (quote ("chrono"))) (d #t) (k 1)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chardetng") (r "^0.1.17") (f (quote ("multithreading"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "cpclib-basic") (r "^0.7.0") (k 0)) (d (n "cpclib-common") (r "^0.7.0") (k 0)) (d (n "cpclib-crunchers") (r "^0.7.0") (k 0)) (d (n "cpclib-disc") (r "^0.7.0") (k 0)) (d (n "cpclib-image") (r "^0.7.0") (k 0)) (d (n "cpclib-sna") (r "^0.7.0") (k 0)) (d (n "cpclib-tokens") (r "^0.7.0") (k 0)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "custom_error") (r "^1.9.2") (d #t) (k 0)) (d (n "delegate") (r "^0.10.0") (d #t) (k 0)) (d (n "either") (r "^1.9.0") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.32") (f (quote ("alloc"))) (k 0)) (d (n "failure") (r "^0.1.8") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "globset") (r "^0.4.12") (d #t) (k 0)) (d (n "hashbag") (r "^0.1.11") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.5") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "matches") (r "^0.1.10") (d #t) (k 0)) (d (n "ouroboros") (r "^0.17.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "rust-embed") (r "^6.8.1") (f (quote ("compression" "compression" "debug-embed"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.178") (f (quote ("derive" "derive"))) (d #t) (k 0)) (d (n "smartstring") (r "^1.0.1") (d #t) (k 0)) (d (n "substring") (r "^1.4.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.7.0") (d #t) (k 0)) (d (n "velcro") (r "^0.5.4") (d #t) (k 0)))) (h "1ixrw2h9pvlmlpir1s9rvxa8qd28m6kxg8jxk9pb650ynfkrv5l5") (f (quote (("default" "colored_errors" "indicatif") ("colored_errors")))) (s 2) (e (quote (("indicatif" "dep:indicatif"))))))

