(define-module (crates-io cp cl cpclib-sna) #:use-module (crates-io))

(define-public crate-cpclib-sna-0.4.0-alpha (c (n "cpclib-sna") (v "0.4.0-alpha") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bitsets") (r "^0.1.1") (d #t) (k 0)) (d (n "built") (r "^0.4") (f (quote ("chrono"))) (d #t) (k 1)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 0)) (d (n "num_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "strsim") (r "^0.9.2") (d #t) (k 0)) (d (n "time") (r "^0.1.42") (o #t) (d #t) (k 0)))) (h "12s8v82rpi0b3llg0arkybv4gc726rnnjph5kkizabp9hgwsqc51") (f (quote (("snapshot" "clap" "time" "semver"))))))

(define-public crate-cpclib-sna-0.4.1-alpha (c (n "cpclib-sna") (v "0.4.1-alpha") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bitsets") (r "^0.1.1") (d #t) (k 0)) (d (n "built") (r "^0.4") (f (quote ("chrono"))) (d #t) (k 1)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 0)) (d (n "num_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "strsim") (r "^0.9.2") (d #t) (k 0)) (d (n "time") (r "^0.1.42") (o #t) (d #t) (k 0)))) (h "12m006p320nzx5pxl43gva94ay5x9x39khqf3miqwcnmy8630br3") (f (quote (("snapshot" "clap" "time" "semver"))))))

(define-public crate-cpclib-sna-0.4.2-alpha (c (n "cpclib-sna") (v "0.4.2-alpha") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bitsets") (r "^0.1.1") (d #t) (k 0)) (d (n "built") (r "^0.4") (f (quote ("chrono"))) (d #t) (k 1)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 0)) (d (n "nom") (r "^5.0.1") (d #t) (k 0)) (d (n "num_enum") (r "^0.4.2") (d #t) (k 0)) (d (n "semver") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "strsim") (r "^0.9.2") (d #t) (k 0)) (d (n "time") (r "^0.1.42") (o #t) (d #t) (k 0)))) (h "1klv18mq3s8ldcpzcapmq6k1ag92vmy0bas3kcf0kyixhk5s1di5") (f (quote (("snapshot" "clap" "time" "semver"))))))

(define-public crate-cpclib-sna-0.4.3-alpha (c (n "cpclib-sna") (v "0.4.3-alpha") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bitsets") (r "^0.1.1") (d #t) (k 0)) (d (n "built") (r "^0.4.3") (f (quote ("chrono"))) (d #t) (k 1)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 0)) (d (n "nom") (r "^5.1.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.1") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "time") (r "^0.2.22") (o #t) (d #t) (k 0)))) (h "0q16il0w017yv7xbdvrspkmpxf729mbrf8qmbhamryqynzylr5d8") (f (quote (("snapshot" "clap" "time" "semver"))))))

(define-public crate-cpclib-sna-0.4.4 (c (n "cpclib-sna") (v "0.4.4") (d (list (d (n "bitflags") (r ">=1.2.1, <2.0.0") (d #t) (k 0)) (d (n "bitsets") (r ">=0.1.1, <0.2.0") (d #t) (k 0)) (d (n "built") (r ">=0.4.3, <0.5.0") (f (quote ("chrono"))) (d #t) (k 1)) (d (n "cfg-if") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "clap") (r ">=2.33.3, <3.0.0") (o #t) (d #t) (k 0)) (d (n "matches") (r ">=0.1.8, <0.2.0") (d #t) (k 0)) (d (n "nom") (r ">=6.0.0, <7.0.0") (d #t) (k 0)) (d (n "num_enum") (r ">=0.5.1, <0.6.0") (d #t) (k 0)) (d (n "semver") (r ">=0.11.0, <0.12.0") (o #t) (d #t) (k 0)) (d (n "serde") (r ">=1.0.117, <2.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r ">=1.5.0, <2.0.0") (d #t) (k 0)) (d (n "strsim") (r ">=0.10.0, <0.11.0") (d #t) (k 0)) (d (n "time") (r ">=0.2.23, <0.3.0") (o #t) (d #t) (k 0)))) (h "0xr5197jmjjw89c64npq0qbsk4nyjn8s6xf0vp9205fssqf4v7ni") (f (quote (("snapshot" "clap" "time" "semver"))))))

(define-public crate-cpclib-sna-0.5.0 (c (n "cpclib-sna") (v "0.5.0") (d (list (d (n "built") (r "^0.5.1") (f (quote ("chrono"))) (d #t) (k 1)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cpclib-common") (r "^0.5.0") (d #t) (k 0)) (d (n "delegate") (r "^0.6.2") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)))) (h "1l4mad6rgg7ym0zyfsv65hvndzf5qhipjf6vqk0mvkckn3lg6zw7") (f (quote (("snapshot" "cpclib-common/cmdline") ("default" "snapshot"))))))

(define-public crate-cpclib-sna-0.6.0 (c (n "cpclib-sna") (v "0.6.0") (d (list (d (n "built") (r "^0.5.1") (f (quote ("chrono"))) (d #t) (k 1)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cpclib-common") (r "^0.6.0") (d #t) (k 0)) (d (n "delegate") (r "^0.6.2") (d #t) (k 0)) (d (n "matches") (r "^0.1.9") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.2.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)))) (h "09y7d09qbw9mi08q4jfam1mj1hwr47hzvbjk0vqj8sfzxq3k0afl") (f (quote (("snapshot" "cpclib-common/cmdline") ("default" "snapshot"))))))

(define-public crate-cpclib-sna-0.7.0 (c (n "cpclib-sna") (v "0.7.0") (d (list (d (n "built") (r "^0.6.1") (f (quote ("chrono"))) (d #t) (k 1)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cpclib-common") (r "^0.7.0") (k 0)) (d (n "delegate") (r "^0.10.0") (d #t) (k 0)) (d (n "matches") (r "^0.1.10") (d #t) (k 0)) (d (n "minus") (r "^5.4.0") (f (quote ("static_output"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num_enum") (r "^0.6.1") (d #t) (k 0)) (d (n "rustyline") (r "^12.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.178") (f (quote ("derive"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.7.0") (d #t) (k 2)))) (h "11v012yhkw1rc0z6yjg8ihi9a7m6s2zy9br5xjd5g33jnhsiszv0") (f (quote (("snapshot" "cpclib-common/cmdline" "rustyline" "minus") ("default"))))))

