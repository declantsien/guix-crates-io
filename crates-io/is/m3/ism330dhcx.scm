(define-module (crates-io is m3 ism330dhcx) #:use-module (crates-io))

(define-public crate-ism330dhcx-0.1.0 (c (n "ism330dhcx") (v "0.1.0") (d (list (d (n "cortex-m") (r "^0.6.2") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.12") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.7") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.4") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.6") (d #t) (k 2)) (d (n "vcell") (r "^0.1.3") (d #t) (k 0)))) (h "06ymnrzr30jb846zr0gfan9dsd2z16g7nrniyqyhri7n90zi5nz1")))

(define-public crate-ism330dhcx-0.1.1 (c (n "ism330dhcx") (v "0.1.1") (d (list (d (n "cortex-m") (r "^0.6.2") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.12") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.7") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.4") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.6") (d #t) (k 2)) (d (n "vcell") (r "^0.1.3") (d #t) (k 0)))) (h "0z5fzrzhsiin1yfgrn9mfnqayzacbcyw1aaagd8a7a86qs0kg036")))

(define-public crate-ism330dhcx-0.1.2 (c (n "ism330dhcx") (v "0.1.2") (d (list (d (n "cortex-m") (r "^0.6.2") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.12") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.7") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.4") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.6") (d #t) (k 2)))) (h "0j38j202spvxp0l3pz3l6l77zq25ar2c31byi0f1mxh0vbi8vyql")))

(define-public crate-ism330dhcx-0.2.0 (c (n "ism330dhcx") (v "0.2.0") (d (list (d (n "cortex-m") (r "^0.6.2") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.12") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.7") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.4") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.6") (d #t) (k 2)))) (h "1q8mzz92bbs6hq8nmh74cgjhyq04h58hrl5sj8k7bxw2945smz3m")))

(define-public crate-ism330dhcx-0.3.0 (c (n "ism330dhcx") (v "0.3.0") (d (list (d (n "cortex-m") (r "^0.6.2") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.12") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.7") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.4") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.6") (d #t) (k 2)))) (h "1sg9zxrgb04wmqs4ivsw461kbw6wlxq1p5fzfsmywvckwgw6nvlf")))

(define-public crate-ism330dhcx-0.4.0 (c (n "ism330dhcx") (v "0.4.0") (d (list (d (n "cortex-m") (r "^0.6.2") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.12") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.7") (d #t) (k 2)) (d (n "defmt") (r "^0.3.0") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (d #t) (k 2)) (d (n "embedded-hal-mock") (r "^0.8.0") (d #t) (t "cfg(unix)") (k 2)) (d (n "embedded-hal-mock") (r "^0.8.0") (d #t) (t "cfg(windows)") (k 2)) (d (n "panic-semihosting") (r "^0.5.6") (d #t) (k 2)))) (h "0w4dym6z0w4xm67wzgn0wdwqn222zqrw2xxgsy0frkgs13pyjlyh")))

(define-public crate-ism330dhcx-0.4.1 (c (n "ism330dhcx") (v "0.4.1") (d (list (d (n "cortex-m") (r "^0.7.6") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7.1") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.5.0") (d #t) (k 2)) (d (n "defmt") (r "^0.3.2") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (d #t) (k 2)) (d (n "embedded-hal-mock") (r "^0.8.0") (d #t) (t "cfg(unix)") (k 2)) (d (n "embedded-hal-mock") (r "^0.8.0") (d #t) (t "cfg(windows)") (k 2)) (d (n "panic-semihosting") (r "^0.6.0") (d #t) (k 2)) (d (n "stm32l4xx-hal") (r "^0.7.1") (f (quote ("rt" "stm32l433"))) (d #t) (k 2)))) (h "13xwarlc1jpl8q6vn3bnpnngl2i45ixrggwhy81nc082a1qzqx4m")))

(define-public crate-ism330dhcx-0.5.1 (c (n "ism330dhcx") (v "0.5.1") (d (list (d (n "cortex-m") (r "^0.7.7") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7.3") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.5.0") (d #t) (k 2)) (d (n "defmt") (r "^0.3.2") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (d #t) (k 2)) (d (n "embedded-hal-mock") (r "^0.9.0") (d #t) (t "cfg(unix)") (k 2)) (d (n "embedded-hal-mock") (r "^0.9.0") (d #t) (t "cfg(windows)") (k 2)) (d (n "panic-semihosting") (r "^0.6.0") (d #t) (k 2)) (d (n "stm32l4xx-hal") (r "^0.7.1") (f (quote ("rt" "stm32l433"))) (d #t) (k 2)))) (h "06hjmhkdbf0ja5ynxvc9lkifmimag3wiinnshhrfpk1x8cfcxyp2")))

(define-public crate-ism330dhcx-0.5.2 (c (n "ism330dhcx") (v "0.5.2") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "cortex-m") (r "^0.7.7") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7.3") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.5.0") (d #t) (k 2)) (d (n "defmt") (r "^0.3.5") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.9.0") (d #t) (t "cfg(unix)") (k 2)) (d (n "embedded-hal-mock") (r "^0.9.0") (d #t) (t "cfg(windows)") (k 2)) (d (n "panic-semihosting") (r "^0.6.0") (d #t) (k 2)) (d (n "stm32l4xx-hal") (r "^0.7.1") (f (quote ("rt" "stm32l433"))) (d #t) (k 2)))) (h "1pfpa37pck4z4i8lq6j51x1i7jmh110xbh2af3360ri1nrlxnp4a")))

(define-public crate-ism330dhcx-0.6.0 (c (n "ism330dhcx") (v "0.6.0") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.11") (d #t) (k 2)) (d (n "embedded-io") (r "^0.6.1") (d #t) (k 0)))) (h "1iilznzc9nl4k71rcr0vwpwrb62jag7xcaddrdyfaxpw69qfg3nq")))

