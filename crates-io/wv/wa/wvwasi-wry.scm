(define-module (crates-io wv wa wvwasi-wry) #:use-module (crates-io))

(define-public crate-wvwasi-wry-0.29.0-wvwasi-0.1.2 (c (n "wvwasi-wry") (v "0.29.0-wvwasi-0.1.2") (d (list (d (n "base64") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gio") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.25") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "^1.0") (f (quote ("v2_28"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.20") (f (quote ("serde"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "webkit2gtk") (r "^1.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "^1.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.25") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.48") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.48") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0la8rh64zs3dmaq5q0kfj2psp17jpjgn1q4064q7iczyiz2gcwnl") (f (quote (("tray" "tao/tray") ("transparent") ("protocol") ("objc-exception" "objc/exception") ("linux-body" "webkit2gtk/v2_40") ("fullscreen") ("file-drop") ("dox" "tao/dox" "webkit2gtk/dox" "soup3/dox") ("devtools") ("default" "file-drop" "objc-exception" "protocol"))))))

(define-public crate-wvwasi-wry-0.35.0-wvwasi-0.2.0 (c (n "wvwasi-wry") (v "0.35.0-wvwasi-0.2.0") (d (list (d (n "base64") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "block") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "cfg_aliases") (r "^0.1") (d #t) (k 1)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdkx11") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "html5ever") (r "^0.26") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "javascriptcore-rs") (r "=1.1") (f (quote ("v2_28"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "kuchiki") (r "^0.8") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "kuchikiki")) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndk") (r "^0.7") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-context") (r "^0.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "soup3") (r "^0.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "tao") (r "^0.24") (f (quote ("rwh_05"))) (k 2)) (d (n "tao-macros") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0") (f (quote ("v2_38"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webkit2gtk-sys") (r "=2.0") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.28") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wgpu") (r "^0.18.0") (d #t) (k 2)) (d (n "windows") (r "^0.52") (f (quote ("implement" "Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_LibraryLoader" "Win32_System_Ole" "Win32_System_SystemInformation" "Win32_System_SystemServices" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging" "Win32_Globalization" "Win32_UI_HiDpi" "Win32_UI_Input" "Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-implement") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-version") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29") (f (quote ("rwh_05"))) (d #t) (k 2)) (d (n "x11-dl") (r "^2.9") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "0qqizcpy5phbvc2xv350dnr5ma7v745gq5nb1ld1k1havva0d1hx") (f (quote (("transparent") ("protocol") ("objc-exception" "objc/exception") ("mac-proxy") ("linux-body" "webkit2gtk/v2_40" "os-webview") ("fullscreen") ("file-drop") ("devtools") ("default" "file-drop" "objc-exception" "protocol" "os-webview")))) (s 2) (e (quote (("os-webview" "javascriptcore-rs" "webkit2gtk" "webkit2gtk-sys" "dep:gtk" "soup3" "x11-dl" "gdkx11"))))))

