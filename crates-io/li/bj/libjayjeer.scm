(define-module (crates-io li bj libjayjeer) #:use-module (crates-io))

(define-public crate-libjayjeer-0.1.0 (c (n "libjayjeer") (v "0.1.0") (d (list (d (n "cfg_eval") (r "^0.1.2") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.3") (k 0)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "libaes") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^3.4.0") (f (quote ("base64"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "url") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "^2.0.0") (f (quote ("static_secrets" "zeroize" "precomputed-tables"))) (k 0)))) (h "0lpw0k0rhwhlq4l8nzq28na0arpx3hnnw34fwp7g6wkp1lh5accj") (f (quote (("std" "rand/std" "x25519-dalek/alloc" "hkdf/std" "sha2/std") ("default" "client" "std")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_with") ("message" "std" "dep:libaes" "dep:hmac" "rand/getrandom") ("client" "std" "message" "serde" "dep:url" "dep:reqwest" "dep:serde_json"))))))

(define-public crate-libjayjeer-0.3.0 (c (n "libjayjeer") (v "0.3.0") (d (list (d (n "cfg_eval") (r "^0.1.2") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.3") (k 0)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "libaes") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^3.4.0") (f (quote ("base64"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "url") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "^2.0.0") (f (quote ("static_secrets" "zeroize" "precomputed-tables"))) (k 0)))) (h "11fjiznxzgp2cr8bcxnkh8md91gbpsdbwdhsgb0bb0dhy9gn9455") (f (quote (("std" "rand/std" "x25519-dalek/alloc" "hkdf/std" "sha2/std") ("hazmat") ("default" "client" "std")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_with") ("message" "std" "dep:libaes" "dep:hmac" "rand/getrandom") ("client" "std" "message" "serde" "dep:url" "dep:reqwest" "dep:serde_json"))))))

