(define-module (crates-io li bf libfranka-rs) #:use-module (crates-io))

(define-public crate-libfranka-rs-0.8.0-alpha (c (n "libfranka-rs") (v "0.8.0-alpha") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "float_extras") (r "^0.1.6") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.7.0") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp" "udp"))) (d #t) (k 0)) (d (n "mockall") (r "^0.9.1") (d #t) (k 2)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0lzwf75as2jnj4fjjp800qlzzrid5fvg4l3vngipfid08glnn1s3")))

(define-public crate-libfranka-rs-0.8.0-alpha-1 (c (n "libfranka-rs") (v "0.8.0-alpha-1") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "float_extras") (r "^0.1.6") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.7.0") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp" "udp"))) (d #t) (k 0)) (d (n "mockall") (r "^0.9.1") (d #t) (k 2)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0kdi7hk0g337721rdr8fqdbkvxdk9d6yg5xq1ap0pdyd15dpqs5n")))

(define-public crate-libfranka-rs-0.8.0-alpha-2 (c (n "libfranka-rs") (v "0.8.0-alpha-2") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "float_extras") (r "^0.1.6") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.7.0") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp" "udp"))) (d #t) (k 0)) (d (n "mockall") (r "^0.9.1") (d #t) (k 2)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0606k7nxnnpi00ghryravalpram6xlxmsa35h2vxz89clj9hbkkc")))

(define-public crate-libfranka-rs-0.9.0 (c (n "libfranka-rs") (v "0.9.0") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^3.1.7") (f (quote ("derive"))) (d #t) (k 2)) (d (n "float_extras") (r "^0.1.6") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.7.0") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp" "udp"))) (d #t) (k 0)) (d (n "mockall") (r "^0.9.1") (d #t) (k 2)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1m54b5yv1g813lnq10vzz9hr3lmn1f878gm9vqhpy4lyzyf4sfid")))

