(define-module (crates-io li bf libflatterer) #:use-module (crates-io))

(define-public crate-libflatterer-0.7.0 (c (n "libflatterer") (v "0.7.0") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.6") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.3") (f (quote ("ndjson"))) (d #t) (k 0)))) (h "1y9r1m69b4wcwy29zxhvak2vinjzmklw9gsx8424488ynnijh4wd")))

(define-public crate-libflatterer-0.7.1 (c (n "libflatterer") (v "0.7.1") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.6") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.3") (f (quote ("ndjson"))) (d #t) (k 0)))) (h "0fmgpa130v6lhwlfyzf76wi9ssc9yffdca82jb78m8rzkd15snws")))

(define-public crate-libflatterer-0.8.0 (c (n "libflatterer") (v "0.8.0") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "insta") (r "^1.8.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.6") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.3") (f (quote ("ndjson"))) (d #t) (k 0)))) (h "17cxfb2n78cayaq34mx8hqbdl5gp9vxancs4w9grr9d1wvh79133")))

(define-public crate-libflatterer-0.9.0 (c (n "libflatterer") (v "0.9.0") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.6") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.3") (f (quote ("ndjson"))) (d #t) (k 0)))) (h "05hnc5lk3lks10zzv8q0wqy8hs377q8lh7z1xkfsr61ybbp7v83g")))

(define-public crate-libflatterer-0.10.0 (c (n "libflatterer") (v "0.10.0") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.6") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.3") (f (quote ("ndjson"))) (d #t) (k 0)))) (h "1psahvblj3xdmcln5h073kh69ri5zx7y79v514xgsbdcq5lnh653")))

(define-public crate-libflatterer-0.10.1 (c (n "libflatterer") (v "0.10.1") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.6") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.3") (f (quote ("ndjson"))) (d #t) (k 0)))) (h "0km9m0xv3chg6cx1nlj7jp52nl4073j4hy871cgzavi14479d6ic")))

(define-public crate-libflatterer-0.10.2 (c (n "libflatterer") (v "0.10.2") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.6") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.3") (f (quote ("ndjson"))) (d #t) (k 0)))) (h "1slzgkcv26zzw22jcn5fha6156japqjvk513q74l4pby5n8hbrjg")))

(define-public crate-libflatterer-0.10.3 (c (n "libflatterer") (v "0.10.3") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.6") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.3") (f (quote ("ndjson"))) (d #t) (k 0)))) (h "1lfhhzajkbm89h0kb5ibl2mf5ixxzki2vh8k7x2yq79aap6vphvm")))

(define-public crate-libflatterer-0.10.4 (c (n "libflatterer") (v "0.10.4") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.6") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.3") (f (quote ("ndjson"))) (d #t) (k 0)))) (h "19hl83688l3irsl7my2s94wb9p4f4q1rs3c6caf31fmqb964mkdh")))

(define-public crate-libflatterer-0.10.5 (c (n "libflatterer") (v "0.10.5") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.6") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.3") (f (quote ("ndjson"))) (d #t) (k 0)))) (h "1z76yhq4m9d6zbfs5n238cs8g61gigk9p5360j089gl6cq9phj3j")))

(define-public crate-libflatterer-0.10.6 (c (n "libflatterer") (v "0.10.6") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.6") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.3") (f (quote ("ndjson"))) (d #t) (k 0)))) (h "1y7aqz139hsvfvfrwjwfwdiz29gvhymphrvbrfb4f5b18p2y62as")))

(define-public crate-libflatterer-0.11.0 (c (n "libflatterer") (v "0.11.0") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "0nxw083vrlj9s77jdb58mkxr82q0436fz7k8v6fhbh1vgx3fibzz")))

(define-public crate-libflatterer-0.12.0 (c (n "libflatterer") (v "0.12.0") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26.3") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "1v0vy1c22wnkzazr5jc16fkvibv10ay4nn8piys6qg5sfbqfc34d")))

(define-public crate-libflatterer-0.12.1 (c (n "libflatterer") (v "0.12.1") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26.3") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "0w72h72q6chk4wrmnxrb6vl7mkjrjn22avv4xacv00ijcw7s5n7n")))

(define-public crate-libflatterer-0.12.2 (c (n "libflatterer") (v "0.12.2") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26.3") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "0kpz70sjzq6mi3s87s2rlhkg928xmh4vhdk3wf1r3r03db6yq0ma")))

(define-public crate-libflatterer-0.12.3 (c (n "libflatterer") (v "0.12.3") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26.3") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "19rwqd9dhlz5dk80az20sfrnfklz46326xhanifx33a7dvlqjpks")))

(define-public crate-libflatterer-0.12.4 (c (n "libflatterer") (v "0.12.4") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26.3") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "03nkcciq8m594xksz9rgf507hw0c0m7s469y2mhpdxj9lgg6c30b")))

(define-public crate-libflatterer-0.12.5 (c (n "libflatterer") (v "0.12.5") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26.3") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "0al2jhj4rw082gqrvm5cyy97g4fc3kkfhfrcslkajc5qbqj6km76")))

(define-public crate-libflatterer-0.12.6 (c (n "libflatterer") (v "0.12.6") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26.3") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "08iprbi0x9agdihwxmc2ljnnwwj1ny2zzjy1m79c5w75gqh2xc3b")))

(define-public crate-libflatterer-0.12.7 (c (n "libflatterer") (v "0.12.7") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.27.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "0fzvp4py6vpx13jrqrra66k7mz38x6c278n9v1yicxryaz092qxx")))

(define-public crate-libflatterer-0.12.8 (c (n "libflatterer") (v "0.12.8") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.27.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "0f4nm8xv05z9m7n9m4ncpkzkqvvhcqm6j3gkd88f8raxpa1nn7g2")))

(define-public crate-libflatterer-0.12.9 (c (n "libflatterer") (v "0.12.9") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.27.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "0x2zpdc31ckvjh3ns48iznm0h20mx5sln6067h92xyfcigy4dfip")))

(define-public crate-libflatterer-0.12.10 (c (n "libflatterer") (v "0.12.10") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.27.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "1c15h9lj4xcikm6j9b849xfgzwxq8vhiibpkclnmlyffni2p0yki")))

(define-public crate-libflatterer-0.13.0 (c (n "libflatterer") (v "0.13.0") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "datapackage_convert") (r "^0.3.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.27.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "1vzlpgrs92lpjbybdgzzj9wsbm3jjy4nzf2hzi1c6gyq5ijm05c4")))

(define-public crate-libflatterer-0.13.1 (c (n "libflatterer") (v "0.13.1") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "datapackage_convert") (r "^0.4.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.27.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "0qk9gzcl72i7cznk917vljxaw453vzc7fsxb8nvb3n8hh1ssakj5")))

(define-public crate-libflatterer-0.13.2 (c (n "libflatterer") (v "0.13.2") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "datapackage_convert") (r "^0.4.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.27.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "0za8m4knmpgl4wcn4ir4qwhjk5azylsgr5y0bx1af2y60v2nk9lk")))

(define-public crate-libflatterer-0.13.3 (c (n "libflatterer") (v "0.13.3") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "datapackage_convert") (r "^0.4.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.27.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "16awsal85gd1kpigh43rgq4adpff7b4lwyhbhad353njnqd0fwmp")))

(define-public crate-libflatterer-0.14.0 (c (n "libflatterer") (v "0.14.0") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "datapackage_convert") (r "^0.5.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.27.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "054304p2f0jaj76qv7bka6ak5kc9hphj019yq7vayzaa90p2r6xb")))

(define-public crate-libflatterer-0.14.1 (c (n "libflatterer") (v "0.14.1") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "datapackage_convert") (r "^0.5.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.27.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "1zalhpzy14ic2y7nglr6747ngs1mknl84wfgm7ccbkglx56l1saa")))

(define-public crate-libflatterer-0.14.2 (c (n "libflatterer") (v "0.14.2") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "datapackage_convert") (r "^0.5.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.27.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "1qkm21zrb7gjpmbhppxy31qkqhvzh792scric221knwhh8bpsryx")))

(define-public crate-libflatterer-0.14.3 (c (n "libflatterer") (v "0.14.3") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "datapackage_convert") (r "^0.5.6") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.27.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "19g11yvr7gwm143nb7akn944484r87rn4g2477mms3h4lb48jhsq")))

(define-public crate-libflatterer-0.15.0 (c (n "libflatterer") (v "0.15.0") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "datapackage_convert") (r "^0.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "1dd8rb2br5v3a0n6300b9hb3lk731f8f8hln4l66h20b6lglg6zw")))

(define-public crate-libflatterer-0.15.1 (c (n "libflatterer") (v "0.15.1") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "datapackage_convert") (r "^0.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "1r1zhwmmga4mryi7n9bq3ivd6fh8jqifqv0qdi6l0nir8zk4jds9")))

(define-public crate-libflatterer-0.15.2 (c (n "libflatterer") (v "0.15.2") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "datapackage_convert") (r "^0.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "0b7gghqjphlhq8sj3jqj8avn5nips9qly63wsam8d1316z3ipdh9")))

(define-public crate-libflatterer-0.15.3 (c (n "libflatterer") (v "0.15.3") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "datapackage_convert") (r "^0.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "15izi7f9a3ljhf53ypkk451srirk1qb80frfjmrh4gmnsa0gam0r")))

(define-public crate-libflatterer-0.16.0 (c (n "libflatterer") (v "0.16.0") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "datapackage_convert") (r "^0.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "1x2ci8pdkd8nqc7pzhp7i7774mxz21rpj1c3z7fhr33jyxc6bnlj")))

(define-public crate-libflatterer-0.16.1 (c (n "libflatterer") (v "0.16.1") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "datapackage_convert") (r "^0.6.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.12.0") (f (quote ("redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "1vrpj01j6kiyshvwzk40fc398545mdy7n7v5fg03r1idqykmavpq")))

(define-public crate-libflatterer-0.17.0 (c (n "libflatterer") (v "0.17.0") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "csvs_convert") (r "^0.7.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.21.1") (f (quote ("redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "1zzc3iahbdd8khb6fzfxq3qp3mkxvpq0zwlkl1dn1j4rijm99xx1")))

(define-public crate-libflatterer-0.17.1 (c (n "libflatterer") (v "0.17.1") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "csvs_convert") (r "^0.7.10") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.21.1") (f (quote ("redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "nanoid") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "148nrvy652hpadf9vh56c3dasg8gvsivz28yc5hbzh5wi726afcj")))

(define-public crate-libflatterer-0.17.2 (c (n "libflatterer") (v "0.17.2") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "csvs_convert") (r "^0.7.11") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.21.1") (f (quote ("redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "nanoid") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "0ixnnpxyyphyfws6nxk7bsm8j4g4fr9mbmx7jb5mxpj2wy2npchb")))

(define-public crate-libflatterer-0.18.0 (c (n "libflatterer") (v "0.18.0") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "csvs_convert") (r "^0.7.11") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csvs_convert") (r "^0.7.8") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.21.1") (f (quote ("redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "nanoid") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "umya-spreadsheet") (r "^0.7.2") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "1gdqgpb88zdg6nz2mf4n5lc9hmyfaf0zx22jrjx22pdjpk13lgd1")))

(define-public crate-libflatterer-0.18.1 (c (n "libflatterer") (v "0.18.1") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "csvs_convert") (r "^0.7.11") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csvs_convert") (r "^0.7.8") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.21.1") (f (quote ("redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "nanoid") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "053f5z4qfr6hnd3sz0wjk6kf88qla7iyml6sa6hd87wq0is2mx8v")))

(define-public crate-libflatterer-0.18.2 (c (n "libflatterer") (v "0.18.2") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "csvs_convert") (r "^0.8.1") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.21.1") (f (quote ("redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "nanoid") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "0wbw4dfxjv50zm0rx7gim63l3xyq2ddc2lqiba73id3b7qkdyhjs")))

(define-public crate-libflatterer-0.19.0 (c (n "libflatterer") (v "0.19.0") (d (list (d (n "arrow-array") (r "^38.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "arrow-schema") (r "^38.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("gzip" "tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "csv-async") (r "^1.2.6") (f (quote ("tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csvs_convert") (r "^0.8.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "futures-util") (r "^0.3.27") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.21.1") (f (quote ("redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "nanoid") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "object_store") (r "^0.5.6") (f (quote ("aws" "http"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parquet") (r "^38.0.0") (f (quote ("async"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("io" "io-util"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "umya-spreadsheet") (r "^0.7.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.6") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "1jv1s4rj4gg2kvlinxwvlp63i7bs3vb3iqs435pvqgbzrbs2livy")))

(define-public crate-libflatterer-0.19.1 (c (n "libflatterer") (v "0.19.1") (d (list (d (n "arrow-array") (r "^38.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "arrow-schema") (r "^38.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("gzip" "tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "csv-async") (r "^1.2.6") (f (quote ("tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csvs_convert") (r "^0.8.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "futures-util") (r "^0.3.27") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.21.1") (f (quote ("redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "nanoid") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "object_store") (r "^0.5.6") (f (quote ("aws" "http"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parquet") (r "^38.0.0") (f (quote ("async"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("io" "io-util"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.6") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "008sbfx4kr7a08l9fh4mr4k037dzk5wq9ldg018c3ksqhi5xj4ad")))

(define-public crate-libflatterer-0.19.2 (c (n "libflatterer") (v "0.19.2") (d (list (d (n "arrow-array") (r "^38.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "arrow-schema") (r "^38.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("gzip" "tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "csv-async") (r "^1.2.6") (f (quote ("tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csvs_convert") (r "^0.8.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "futures-util") (r "^0.3.27") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.21.1") (f (quote ("redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "nanoid") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "object_store") (r "^0.5.6") (f (quote ("aws" "http"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parquet") (r "^38.0.0") (f (quote ("async"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("io" "io-util"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.6") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "03fdpp21kaslpsi9n1s1c7p7yz4jy94146yzszipkfxklx8c491x")))

(define-public crate-libflatterer-0.19.3 (c (n "libflatterer") (v "0.19.3") (d (list (d (n "arrow-array") (r "^38.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "arrow-schema") (r "^38.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("gzip" "tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "csv-async") (r "^1.2.6") (f (quote ("tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csvs_convert") (r "^0.8.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "futures-util") (r "^0.3.27") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.21.1") (f (quote ("redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "nanoid") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "object_store") (r "^0.5.6") (f (quote ("aws" "http"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parquet") (r "^38.0.0") (f (quote ("async"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("io" "io-util"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.6") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "0sn9w9y2rhlgs8qwa9zvs0rhic6z4jmz0nvy10pk92ad02i18h1p")))

(define-public crate-libflatterer-0.19.4 (c (n "libflatterer") (v "0.19.4") (d (list (d (n "arrow-array") (r "^38.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "arrow-schema") (r "^38.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("gzip" "tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "csv-async") (r "^1.2.6") (f (quote ("tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csvs_convert") (r "^0.8.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "futures-util") (r "^0.3.27") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.21.1") (f (quote ("redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "nanoid") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "object_store") (r "^0.5.6") (f (quote ("aws" "http"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parquet") (r "^38.0.0") (f (quote ("async"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("io" "io-util"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.6") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "0l8lg70nrw0wc7lmpgdj4x48vd9nykwpyqknsh9zhhjs0a66yx9p")))

(define-public crate-libflatterer-0.19.5 (c (n "libflatterer") (v "0.19.5") (d (list (d (n "arrow-array") (r "^38.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "arrow-schema") (r "^38.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("gzip" "tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "csv-async") (r "^1.2.6") (f (quote ("tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csvs_convert") (r "^0.8.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "futures-util") (r "^0.3.27") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.21.1") (f (quote ("redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "nanoid") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "object_store") (r "^0.5.6") (f (quote ("aws" "http"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parquet") (r "^38.0.0") (f (quote ("async"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("io" "io-util"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.6") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "0fy153q4njhhc2ja84nphqakw4i11s057jlc02rnf36c6i25wrch")))

(define-public crate-libflatterer-0.19.6 (c (n "libflatterer") (v "0.19.6") (d (list (d (n "arrow-array") (r "^38.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "arrow-schema") (r "^38.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("gzip" "tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "csv-async") (r "^1.2.6") (f (quote ("tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csvs_convert") (r "^0.8.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "futures-util") (r "^0.3.27") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.21.1") (f (quote ("redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "nanoid") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "object_store") (r "^0.5.6") (f (quote ("aws" "http"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parquet") (r "^38.0.0") (f (quote ("async"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("io" "io-util"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.6") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "0g4fkag55q7iyif5xz4yrqfjaz74ldaya7iy84k4ghl1zhf8ijba")))

(define-public crate-libflatterer-0.19.7 (c (n "libflatterer") (v "0.19.7") (d (list (d (n "arrow-array") (r "^38.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "arrow-schema") (r "^38.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("gzip" "tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "csv-async") (r "^1.2.6") (f (quote ("tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csvs_convert") (r "^0.8.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "futures-util") (r "^0.3.27") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.21.1") (f (quote ("redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "nanoid") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "object_store") (r "^0.6.1") (f (quote ("aws" "http"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parquet") (r "^38.0.0") (f (quote ("async"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("io" "io-util"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.6") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "1jxa1xxy6nqhcnl874l5jyyps8ic80i89qfwwpdlr08r4n44sglg")))

(define-public crate-libflatterer-0.19.8 (c (n "libflatterer") (v "0.19.8") (d (list (d (n "arrow-array") (r "^38.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "arrow-schema") (r "^38.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("gzip" "tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "csv-async") (r "^1.2.6") (f (quote ("tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csvs_convert") (r "^0.8.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "futures-util") (r "^0.3.27") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.21.1") (f (quote ("redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "nanoid") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "object_store") (r "^0.6.1") (f (quote ("aws" "http"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parquet") (r "^38.0.0") (f (quote ("async"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("io" "io-util"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.6") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "0mn1rmisrwlzl73vr5swi1f0r3z02dfwvx8iiiisj7fka2rm8an8")))

(define-public crate-libflatterer-0.19.9 (c (n "libflatterer") (v "0.19.9") (d (list (d (n "arrow-array") (r "^38.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "arrow-schema") (r "^38.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("gzip" "tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "csv-async") (r "^1.2.6") (f (quote ("tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csvs_convert") (r "^0.8.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "futures-util") (r "^0.3.27") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.21.1") (f (quote ("redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "nanoid") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "object_store") (r "^0.6.1") (f (quote ("aws" "http"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parquet") (r "^38.0.0") (f (quote ("async"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("io" "io-util"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.6") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "0x5zbz6rcf244zv3s81bpbb8vimk4grmnbnjsjc4bvrp459q3wbn")))

(define-public crate-libflatterer-0.19.10 (c (n "libflatterer") (v "0.19.10") (d (list (d (n "arrow-array") (r "^49.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "arrow-schema") (r "^49.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "async-compression") (r "^0.4.5") (f (quote ("gzip" "tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "csv-async") (r "^1.2.6") (f (quote ("tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csvs_convert") (r "^0.8.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "futures-util") (r "^0.3.27") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.21.1") (f (quote ("redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "nanoid") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (f (quote ("aws" "http"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parquet") (r "^49.0.0") (f (quote ("async"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("io" "io-util"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "typed-builder") (r "^0.18.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.6") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "18fmgcyqvaaaqz5jr6bs9rl5q05m4n0g2dixrq2fsybmvdcn9j21")))

(define-public crate-libflatterer-0.19.11 (c (n "libflatterer") (v "0.19.11") (d (list (d (n "arrow-array") (r "^49.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "arrow-schema") (r "^49.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "async-compression") (r "^0.4.5") (f (quote ("gzip" "tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "csv-async") (r "^1.2.6") (f (quote ("tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csvs_convert") (r "^0.8.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "futures-util") (r "^0.3.27") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.21.1") (f (quote ("redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "nanoid") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (f (quote ("aws" "http"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parquet") (r "^49.0.0") (f (quote ("async"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("io" "io-util"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "typed-builder") (r "^0.18.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.6") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "196basdfmr2l39fvjjxinb7bf63jh7d6pidqnpvaiv3nxhwd2dgn")))

(define-public crate-libflatterer-0.19.12 (c (n "libflatterer") (v "0.19.12") (d (list (d (n "arrow-array") (r "^49.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "arrow-schema") (r "^49.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "async-compression") (r "^0.4.5") (f (quote ("gzip" "tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "csv-async") (r "^1.2.6") (f (quote ("tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csvs_convert") (r "^0.8.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "futures-util") (r "^0.3.27") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.21.1") (f (quote ("redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "nanoid") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (f (quote ("aws" "http"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parquet") (r "^49.0.0") (f (quote ("async"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("io" "io-util"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "typed-builder") (r "^0.18.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.6") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "0qyj4695a5ykfz23ba3kbrs5y8xfnczwa1ksc03iba8sc9lpc6nj")))

(define-public crate-libflatterer-0.19.13 (c (n "libflatterer") (v "0.19.13") (d (list (d (n "arrow-array") (r "^49.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "arrow-schema") (r "^49.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "async-compression") (r "^0.4.5") (f (quote ("gzip" "tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "csv-async") (r "^1.2.6") (f (quote ("tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csvs_convert") (r "^0.8.9") (f (quote ("converters"))) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "futures-util") (r "^0.3.27") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.21.1") (f (quote ("redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "nanoid") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (f (quote ("aws" "http"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parquet") (r "^49.0.0") (f (quote ("async"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("io" "io-util"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "typed-builder") (r "^0.18.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.6") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "127l2fjby3wxfrkg48liplm85lq9lwdg6mykqxc3y500y0mhi97s") (f (quote (("parquet" "csvs_convert/parquet") ("default" "parquet"))))))

(define-public crate-libflatterer-0.19.14 (c (n "libflatterer") (v "0.19.14") (d (list (d (n "arrow-array") (r "^51.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "arrow-schema") (r "^51.0.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "async-compression") (r "^0.4.5") (f (quote ("gzip" "tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "csv-async") (r "^1.2.6") (f (quote ("tokio"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "csvs_convert") (r "^0.8.10") (f (quote ("converters"))) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "futures-util") (r "^0.3.27") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.21.1") (f (quote ("redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonref") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "nanoid") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "object_store") (r "^0.9.0") (f (quote ("aws" "http"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parquet") (r "^51.0.0") (f (quote ("async"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("io" "io-util"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "typed-builder") (r "^0.18.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "xlsxwriter") (r "^0.6") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "yajlish") (r "^0.4.0") (d #t) (k 0)))) (h "0wkcvihczr909giyya39csskncmhq71rfjnsrfsd91r98yvrhzpn") (f (quote (("parquet" "csvs_convert/parquet") ("default" "parquet"))))))

