(define-module (crates-io li bc libcfd) #:use-module (crates-io))

(define-public crate-libcfd-0.1.0 (c (n "libcfd") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.25") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "capnp") (r "^0.19") (d #t) (k 0)) (d (n "capnp-futures") (r "^0.19") (d #t) (k 0)) (d (n "capnp-rpc") (r "^0.19") (d #t) (k 0)) (d (n "capnpc") (r "^0.19") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "quinn") (r "^0.10") (f (quote ("futures-io"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "rustls") (r "^0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("rt" "net"))) (d #t) (k 0)) (d (n "uuid") (r "^1.7") (d #t) (k 0)))) (h "1p71fqwnjyh8z4rpn8sx9lrcs4xrf8y8ri32lb5193prd7y7lx48")))

