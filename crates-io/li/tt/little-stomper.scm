(define-module (crates-io li tt little-stomper) #:use-module (crates-io))

(define-public crate-little-stomper-0.1.0 (c (n "little-stomper") (v "0.1.0") (d (list (d (n "async-map") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "im") (r "^15.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.9.1") (d #t) (k 2)) (d (n "stomp-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.5") (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.14") (d #t) (k 0)) (d (n "tungstenite") (r "^0.13.0") (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0xzmkmd3735kdcb0anrding25jyh3srkx98xbk8mg10zka474zc3")))

(define-public crate-little-stomper-0.2.0 (c (n "little-stomper") (v "0.2.0") (d (list (d (n "async-map") (r "^0.2.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "im") (r "^15.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.9.1") (d #t) (k 2)) (d (n "stomp-parser") (r "^0.3.1") (d #t) (k 0)) (d (n "tokio") (r "^1.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.5") (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.14") (d #t) (k 0)) (d (n "tungstenite") (r "^0.13.0") (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0l59z7arx9r3gd6w7kvb0abg7srmbg5san6bjr28gfbm3kdmivz8")))

(define-public crate-little-stomper-0.3.0 (c (n "little-stomper") (v "0.3.0") (d (list (d (n "async-map") (r "^0.2.2") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "im") (r "^15.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.9.1") (d #t) (k 2)) (d (n "stomp-parser") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.6") (f (quote ("full" "test-util"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.5") (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.14") (d #t) (k 0)) (d (n "tungstenite") (r "^0.13.0") (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1h2a3rblvz0ldbahv0kl3c9b8gc03q9n53rnxf7dxnx7bnbnxnpy")))

(define-public crate-little-stomper-0.3.2 (c (n "little-stomper") (v "0.3.2") (d (list (d (n "async-map") (r "^0.2.3") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "im") (r "^15") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "sender-sink") (r "^0.2") (d #t) (k 0)) (d (n "stomp-parser") (r "^0.6") (d #t) (k 0)) (d (n "stomp-test-utils") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "test-util"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18") (d #t) (k 0)) (d (n "tungstenite") (r "^0.18.0") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1fsldqwxn4z1frsklxxwc4w35w473abagvf76f6z7k8cdrsv4aq7")))

