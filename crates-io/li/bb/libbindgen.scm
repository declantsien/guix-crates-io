(define-module (crates-io li bb libbindgen) #:use-module (crates-io))

(define-public crate-libbindgen-0.1.0 (c (n "libbindgen") (v "0.1.0") (d (list (d (n "aster") (r "^0.29") (f (quote ("with-syntex"))) (d #t) (k 0)) (d (n "cexpr") (r "^0.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "clang-sys") (r "^0.11.1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "0.1.*") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "quasi") (r "^0.21") (f (quote ("with-syntex"))) (d #t) (k 0)) (d (n "quasi_codegen") (r "^0.21") (d #t) (k 1)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.19") (d #t) (k 0)) (d (n "shlex") (r "^0.1") (d #t) (k 2)) (d (n "syntex_syntax") (r "^0.44") (d #t) (k 0)))) (h "1w2izjvgcn9b5vk8nyaxwsjwhab25kvk9vq0445gms8jqyx99jv6") (f (quote (("static") ("logging" "env_logger" "log") ("llvm_stable") ("docs_") ("default" "logging")))) (y #t)))

(define-public crate-libbindgen-0.1.1 (c (n "libbindgen") (v "0.1.1") (d (list (d (n "aster") (r "^0.34") (f (quote ("with-syntex"))) (d #t) (k 0)) (d (n "cexpr") (r "^0.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "clang-sys") (r "^0.11.1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "0.1.*") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "quasi") (r "^0.26") (f (quote ("with-syntex"))) (d #t) (k 0)) (d (n "quasi_codegen") (r "^0.26") (d #t) (k 1)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.19") (d #t) (k 0)) (d (n "shlex") (r "^0.1") (d #t) (k 2)) (d (n "syntex_syntax") (r "^0.50") (d #t) (k 0)))) (h "0r4rdra5mvbfp851gwbp3ys3jysmgrrbn7f8x502j6shz9gfjika") (f (quote (("static") ("logging" "env_logger" "log") ("llvm_stable") ("docs_") ("default" "logging")))) (y #t)))

(define-public crate-libbindgen-0.1.2 (c (n "libbindgen") (v "0.1.2") (d (list (d (n "aster") (r "^0.34") (f (quote ("with-syntex"))) (d #t) (k 0)) (d (n "cexpr") (r "^0.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "clang-sys") (r "^0.11.1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "0.1.*") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "quasi") (r "^0.26") (f (quote ("with-syntex"))) (d #t) (k 0)) (d (n "quasi_codegen") (r "^0.26") (d #t) (k 1)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.19") (d #t) (k 0)) (d (n "shlex") (r "^0.1") (d #t) (k 2)) (d (n "syntex_syntax") (r "^0.50") (d #t) (k 0)))) (h "02rxhnzzj3vgcrnbv6956k5lin87qy8jl5hmf2ln3lmcdyp2bsi0") (f (quote (("static") ("logging" "env_logger" "log") ("llvm_stable") ("docs_") ("default" "logging")))) (y #t)))

(define-public crate-libbindgen-0.1.3 (c (n "libbindgen") (v "0.1.3") (d (list (d (n "aster") (r "^0.34") (f (quote ("with-syntex"))) (d #t) (k 0)) (d (n "cexpr") (r "^0.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "clang-sys") (r "^0.12") (f (quote ("runtime" "clang_3_9"))) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "quasi") (r "^0.26") (f (quote ("with-syntex"))) (d #t) (k 0)) (d (n "quasi_codegen") (r "^0.26") (d #t) (k 1)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.19") (d #t) (k 0)) (d (n "shlex") (r "^0.1") (d #t) (k 2)) (d (n "syntex_syntax") (r "^0.50") (d #t) (k 0)))) (h "1pfha4zigizlyqsbqj0y283p2cdhpq2sqh0llaqawhm5r547339r") (f (quote (("static") ("logging" "env_logger" "log") ("llvm_stable") ("docs_") ("default" "logging") ("assert_no_dangling_items")))) (y #t)))

(define-public crate-libbindgen-0.1.4 (c (n "libbindgen") (v "0.1.4") (d (list (d (n "aster") (r "^0.34") (f (quote ("with-syntex"))) (d #t) (k 0)) (d (n "cexpr") (r "^0.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "clang-sys") (r "^0.12") (f (quote ("runtime" "clang_3_9"))) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "quasi") (r "^0.26") (f (quote ("with-syntex"))) (d #t) (k 0)) (d (n "quasi_codegen") (r "^0.26") (d #t) (k 1)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.19") (d #t) (k 0)) (d (n "shlex") (r "^0.1") (d #t) (k 2)) (d (n "syntex_syntax") (r "^0.50") (d #t) (k 0)))) (h "12295cpr292xpk0r7f4didhvb7xvcvqp67znphbz48ffbipid2mh") (f (quote (("static") ("logging" "env_logger" "log") ("llvm_stable") ("docs_") ("default" "logging") ("assert_no_dangling_items")))) (y #t)))

(define-public crate-libbindgen-0.1.5 (c (n "libbindgen") (v "0.1.5") (d (list (d (n "aster") (r "^0.34") (f (quote ("with-syntex"))) (d #t) (k 0)) (d (n "cexpr") (r "^0.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "clang-sys") (r "^0.12") (f (quote ("runtime" "clang_3_9"))) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "quasi") (r "^0.26") (f (quote ("with-syntex"))) (d #t) (k 0)) (d (n "quasi_codegen") (r "^0.26") (d #t) (k 1)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.19") (d #t) (k 0)) (d (n "shlex") (r "^0.1") (d #t) (k 2)) (d (n "syntex_syntax") (r "^0.50") (d #t) (k 0)))) (h "1375i066w8a29nbqd2gcaxzmhaimjkj6913viq3cbannpfhkvz03") (f (quote (("static") ("logging" "env_logger" "log") ("llvm_stable") ("docs_") ("default" "logging") ("assert_no_dangling_items")))) (y #t)))

(define-public crate-libbindgen-0.1.6 (c (n "libbindgen") (v "0.1.6") (d (list (d (n "aster") (r "^0.34") (f (quote ("with-syntex"))) (d #t) (k 0)) (d (n "cexpr") (r "^0.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "clang-sys") (r "^0.12") (f (quote ("runtime" "clang_3_9"))) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "quasi") (r "^0.26") (f (quote ("with-syntex"))) (d #t) (k 0)) (d (n "quasi_codegen") (r "^0.26") (d #t) (k 1)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.19") (d #t) (k 0)) (d (n "shlex") (r "^0.1") (d #t) (k 2)) (d (n "syntex_syntax") (r "^0.50") (d #t) (k 0)))) (h "0q9icprwnl2bhv8rc1ijrvd8z9v62i1d28dj2j9xd360r570sfjj") (f (quote (("static") ("logging" "env_logger" "log") ("llvm_stable") ("docs_") ("default" "logging") ("assert_no_dangling_items")))) (y #t)))

(define-public crate-libbindgen-0.1.7 (c (n "libbindgen") (v "0.1.7") (d (list (d (n "aster") (r "^0.34") (f (quote ("with-syntex"))) (d #t) (k 0)) (d (n "cexpr") (r "^0.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.0") (d #t) (k 0)) (d (n "clang-sys") (r "^0.12") (f (quote ("runtime" "clang_3_9"))) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "quasi") (r "^0.26") (f (quote ("with-syntex"))) (d #t) (k 0)) (d (n "quasi_codegen") (r "^0.26") (d #t) (k 1)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.19") (d #t) (k 0)) (d (n "shlex") (r "^0.1") (d #t) (k 2)) (d (n "syntex_syntax") (r "^0.50") (d #t) (k 0)))) (h "10mdz3i6mvna92h4ls6ki7xghsnyzzjg8h6lmgd25fggh0nf7fq9") (f (quote (("static") ("logging" "env_logger" "log") ("llvm_stable") ("docs_") ("default" "logging") ("assert_no_dangling_items")))) (y #t)))

