(define-module (crates-io li bb libblobd-lite) #:use-module (crates-io))

(define-public crate-libblobd-lite-0.1.1 (c (n "libblobd-lite") (v "0.1.1") (d (list (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "off64") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "seekable-async-file") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-future") (r "^0.1.1") (d #t) (k 0)) (d (n "stochastic-queue") (r "^0.2.0") (d #t) (k 2)) (d (n "struct-name") (r "^0.0.1") (d #t) (k 0)) (d (n "struct-name-macro") (r "^0.0.2") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tinybuf") (r "^0.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "twox-hash") (r "=1.6.3") (d #t) (k 0)) (d (n "write-journal") (r "^0.10.2") (d #t) (k 0)))) (h "1kx7zzdb49v0lymjcrr7j4hzq02rlrmdpdqlc26l3yxp769jdsyv")))

(define-public crate-libblobd-lite-0.2.0 (c (n "libblobd-lite") (v "0.2.0") (d (list (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "off64") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "seekable-async-file") (r "^0.11.3") (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-future") (r "^0.1.1") (d #t) (k 0)) (d (n "stochastic-queue") (r "^0.2.0") (d #t) (k 2)) (d (n "struct-name") (r "^0.0.1") (d #t) (k 0)) (d (n "struct-name-macro") (r "^0.0.2") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tinybuf") (r "^0.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "twox-hash") (r "=1.6.3") (d #t) (k 0)) (d (n "write-journal") (r "^0.11.1") (k 0)))) (h "1c96jcyi7hphcpdkhjhms388rvz81rz2j1q70ci5qg3007zsk24g") (f (quote (("io_mmap" "seekable-async-file/mmap" "write-journal/io_mmap") ("io_file" "seekable-async-file/tokio_file" "write-journal/io_file") ("default" "io_mmap"))))))

