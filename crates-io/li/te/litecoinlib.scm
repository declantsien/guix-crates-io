(define-module (crates-io li te litecoinlib) #:use-module (crates-io))

(define-public crate-litecoinlib-0.29.0 (c (n "litecoinlib") (v "0.29.0") (d (list (d (n "actual-serde") (r "^1.0.103") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin-internals") (r "^0.1.0") (k 0)) (d (n "bitcoin_hashes") (r "^0.11.0") (k 0)) (d (n "bitcoinconsensus") (r "^0.20.2-0.5.0") (o #t) (k 0)) (d (n "core2") (r "^0.3.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "hex_lit") (r "^0.1.1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.25.0") (f (quote ("bitcoin_hashes"))) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "secp256k1") (r "^0.25.0") (f (quote ("recovery"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.19") (d #t) (k 2)))) (h "08wsgzvfy2hh23x39yhisa3x61q38c7rqg5zp403vxp48qvrimmz") (f (quote (("std" "secp256k1/std" "bitcoin_hashes/std" "bech32/std" "bitcoin-internals/std") ("serde" "actual-serde" "bitcoin_hashes/serde" "secp256k1/serde") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand-std" "secp256k1/rand-std") ("rand" "secp256k1/rand") ("no-std" "core2" "bitcoin_hashes/alloc" "bitcoin_hashes/core2" "secp256k1/alloc") ("default" "std" "secp-recovery") ("bitcoinconsensus-std" "bitcoinconsensus/std" "std"))))))

(define-public crate-litecoinlib-0.29.1 (c (n "litecoinlib") (v "0.29.1") (d (list (d (n "actual-serde") (r "^1.0.103") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin-internals") (r "^0.1.0") (k 0)) (d (n "bitcoin_hashes") (r "^0.11.0") (k 0)) (d (n "bitcoinconsensus") (r "^0.20.2-0.5.0") (o #t) (k 0)) (d (n "core2") (r "^0.3.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "hex_lit") (r "^0.1.1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.25.0") (f (quote ("bitcoin_hashes"))) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "secp256k1") (r "^0.25.0") (f (quote ("recovery"))) (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.19") (d #t) (k 2)))) (h "08hj1siil3n60chb1gxdqmkhqgcmmcxsl6vhqxpvqlgscrgn28m8") (f (quote (("std" "secp256k1/std" "bitcoin_hashes/std" "bech32/std" "bitcoin-internals/std") ("serde" "actual-serde" "bitcoin_hashes/serde" "secp256k1/serde") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand-std" "secp256k1/rand-std") ("rand" "secp256k1/rand") ("no-std" "core2" "bitcoin_hashes/alloc" "bitcoin_hashes/core2" "secp256k1/alloc") ("default" "std" "secp-recovery") ("bitcoinconsensus-std" "bitcoinconsensus/std" "std"))))))

