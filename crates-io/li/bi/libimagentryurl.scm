(define-module (crates-io li bi libimagentryurl) #:use-module (crates-io))

(define-public crate-libimagentryurl-0.10.0 (c (n "libimagentryurl") (v "0.10.0") (d (list (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "is-match") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "libimagentrylink") (r "^0.10.0") (d #t) (k 0)) (d (n "libimagerror") (r "^0.10.0") (d #t) (k 0)) (d (n "libimagstore") (r "^0.10.0") (d #t) (k 0)) (d (n "libimagutil") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.94") (d #t) (k 0)) (d (n "sha-1") (r "^0.8.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.1") (d #t) (k 0)) (d (n "toml-query") (r "^0.9.2") (f (quote ("typed"))) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "08s4mfd5hh2ba26774dzhz80jdcig9ml1w64bbbr14yi6m2q0nw7")))

(define-public crate-libimagentryurl-0.10.1 (c (n "libimagentryurl") (v "0.10.1") (d (list (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "is-match") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "libimagentrylink") (r "^0.10.1") (d #t) (k 0)) (d (n "libimagerror") (r "^0.10.1") (d #t) (k 0)) (d (n "libimagstore") (r "^0.10.1") (d #t) (k 0)) (d (n "libimagutil") (r "^0.10.1") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.94") (d #t) (k 0)) (d (n "sha-1") (r "^0.8.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.1") (d #t) (k 0)) (d (n "toml-query") (r "^0.9.2") (f (quote ("typed"))) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "12i6x06xzgv0h949gca9yv9ycp5jh0ba7rkrjaywqfvj40dfpnjj")))

