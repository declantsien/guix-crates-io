(define-module (crates-io li bi libipld-core) #:use-module (crates-io))

(define-public crate-libipld-core-0.1.0 (c (n "libipld-core") (v "0.1.0") (d (list (d (n "cid") (r "^0.4.0") (d #t) (k 0)) (d (n "multibase") (r "^0.8.0") (d #t) (k 0)) (d (n "multihash") (r "^0.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.14") (d #t) (k 0)))) (h "0m171wsnaarffhszpbq2mw4a9m7v27icpgxycl0iywrclwcsiaz3")))

(define-public crate-libipld-core-0.2.0 (c (n "libipld-core") (v "0.2.0") (d (list (d (n "cid") (r "^0.5.0") (d #t) (k 0)) (d (n "multibase") (r "^0.8.0") (d #t) (k 0)) (d (n "multihash") (r "^0.11.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.16") (d #t) (k 0)))) (h "1zgnz094yhzix23pfb9pcxjsm1jslr82ly726ga2fgfjlm4mr0d5")))

(define-public crate-libipld-core-0.3.0 (c (n "libipld-core") (v "0.3.0") (d (list (d (n "cid") (r "^0.5.0") (d #t) (k 0)) (d (n "multibase") (r "^0.8.0") (d #t) (k 0)) (d (n "multihash") (r "^0.11.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)))) (h "0b99m43l8zxc2ngwmllzqkxniq7s5sa6pnaxns4c1x4mj5p1vjsm")))

(define-public crate-libipld-core-0.3.1 (c (n "libipld-core") (v "0.3.1") (d (list (d (n "cid") (r "^0.5.0") (d #t) (k 0)) (d (n "multibase") (r "^0.8.0") (d #t) (k 0)) (d (n "multihash") (r "^0.11.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)))) (h "0v2q3i3n6dhwp5j0s2g0jcg89h6xq22s0dkbsq24i36r3i0ani0n")))

(define-public crate-libipld-core-0.4.0 (c (n "libipld-core") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "multibase") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "tiny-cid") (r "^0.2.0") (d #t) (k 0)) (d (n "tiny-multihash") (r "^0.4.0") (d #t) (k 0)))) (h "1wi8793sa7md33zycczhasd7y1l4bkr00vhc4cjqwbhhjcr2qzgg")))

(define-public crate-libipld-core-0.5.0 (c (n "libipld-core") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "multibase") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "tiny-cid") (r "^0.2.5") (d #t) (k 0)) (d (n "tiny-multihash") (r "^0.4.5") (d #t) (k 0)))) (h "1knrlxkwjijhm0acbw1yvaq2j83wa1a6w11d1ibj3ggzsfwsxvaa")))

(define-public crate-libipld-core-0.6.0 (c (n "libipld-core") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "multibase") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "tiny-cid") (r "^0.2.8") (d #t) (k 0)) (d (n "tiny-multihash") (r "^0.4.7") (d #t) (k 0)))) (h "0fqk9sg76lw4rcvk9vmkdis5xfk7yx01gvfp8d27ldh7wm0nmwnn")))

(define-public crate-libipld-core-0.7.0 (c (n "libipld-core") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "multibase") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "tiny-cid") (r "^0.3.0") (d #t) (k 0)) (d (n "tiny-multihash") (r "^0.5.0") (d #t) (k 0)))) (h "0rhjy1vwp8kl0qm3nh9gnwziw75mbgn9dd07bgf13br0lm4ncm12")))

(define-public crate-libipld-core-0.8.0 (c (n "libipld-core") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.34") (d #t) (k 0)) (d (n "cid") (r "^0.6.0") (f (quote ("std"))) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.13.1") (f (quote ("std"))) (k 0)) (d (n "multihash") (r "^0.13.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)))) (h "00i7idplq5mwi05z2c7q8vi9zjqw0dm084fkaa3cdqndfdysbgdf")))

(define-public crate-libipld-core-0.9.0 (c (n "libipld-core") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "cid") (r "^0.6.0") (f (quote ("std"))) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.13.2") (f (quote ("std"))) (k 0)) (d (n "multihash") (r "^0.13.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)))) (h "1fszh97cjqh4bg5cmpx7ff98mdf08ikacq1zh1j8vbslf4acqmpf")))

(define-public crate-libipld-core-0.10.0 (c (n "libipld-core") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cid") (r "^0.6.0") (f (quote ("std"))) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.13.2") (f (quote ("std"))) (k 0)) (d (n "multihash") (r "^0.13.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "1n0bmvcdj1bdi1kaz6dvp2i6gw12mzmv2iqvpywbsljiw0bn2k6b") (f (quote (("unleashed"))))))

(define-public crate-libipld-core-0.11.0 (c (n "libipld-core") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cid") (r "^0.6.0") (f (quote ("std"))) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.13.2") (f (quote ("std"))) (k 0)) (d (n "multihash") (r "^0.13.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "10gq7afb8sypisvijzj97hybanvqh8vl2dp15j7y4p7gl761cxjb") (f (quote (("unleashed"))))))

(define-public crate-libipld-core-0.11.1 (c (n "libipld-core") (v "0.11.1") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cid") (r "^0.6.0") (f (quote ("std"))) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.13.2") (f (quote ("std"))) (k 0)) (d (n "multihash") (r "^0.13.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "0ndxzv7kii4sz7njwkdkg9kpbr331p7ah2swxjr92fp80c762lgz") (f (quote (("unleashed"))))))

(define-public crate-libipld-core-0.11.2 (c (n "libipld-core") (v "0.11.2") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cid") (r "^0.6.0") (f (quote ("std"))) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.13.2") (f (quote ("std"))) (k 0)) (d (n "multihash") (r "^0.13.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "0pjl79pxg0k25bb90ccp4fga8gaj1c0b3a508kl8qhdzgy9c2938") (f (quote (("unleashed"))))))

(define-public crate-libipld-core-0.11.3 (c (n "libipld-core") (v "0.11.3") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cid") (r "^0.6.0") (f (quote ("std"))) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.13.2") (f (quote ("std"))) (k 0)) (d (n "multihash") (r "^0.13.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "0zz6q7mny6z7x44sqmdn0fs6lvvyijxvr0dlaavygn851d7vzx8i") (f (quote (("unleashed"))))))

(define-public crate-libipld-core-0.12.0 (c (n "libipld-core") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "cid") (r "^0.7.0") (f (quote ("std"))) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.14.0") (f (quote ("std"))) (k 0)) (d (n "multihash") (r "^0.14.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.25") (d #t) (k 0)))) (h "1b02zpbk7py9izsf60m54rfspwqvnn4dhwbvrhaizm94q158m6pj") (f (quote (("unleashed"))))))

(define-public crate-libipld-core-0.13.0 (c (n "libipld-core") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0.40") (k 0)) (d (n "cid") (r "^0.8.0") (f (quote ("alloc"))) (k 0)) (d (n "core2") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "multibase") (r "^0.9.1") (o #t) (k 0)) (d (n "multihash") (r "^0.16.0") (f (quote ("alloc"))) (k 0)) (d (n "multihash") (r "^0.16.0") (f (quote ("multihash-impl" "blake3"))) (k 2)) (d (n "thiserror") (r "^1.0.25") (o #t) (d #t) (k 0)))) (h "02gaihw2hskabk5f2fjnpkc07rzfka8bv5yp1v2x6s6s24mvkngj") (f (quote (("std" "anyhow/std" "cid/std" "multibase/std" "multihash/std" "thiserror") ("default" "std"))))))

(define-public crate-libipld-core-0.13.1 (c (n "libipld-core") (v "0.13.1") (d (list (d (n "anyhow") (r "^1.0.40") (k 0)) (d (n "cid") (r "^0.8.3") (f (quote ("alloc"))) (k 0)) (d (n "core2") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "multibase") (r "^0.9.1") (o #t) (k 0)) (d (n "multihash") (r "^0.16.0") (f (quote ("alloc"))) (k 0)) (d (n "multihash") (r "^0.16.0") (f (quote ("multihash-impl" "blake3"))) (k 2)) (d (n "serde") (r "^1.0.132") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.132") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.25") (o #t) (d #t) (k 0)))) (h "1igpfn659w6wp4b8hpbi4i9c9dryfgdk2g7kia0hls7rcj3pbpgv") (f (quote (("std" "anyhow/std" "cid/std" "multibase/std" "multihash/std" "thiserror") ("serde-codec" "cid/serde-codec" "serde") ("default" "std"))))))

(define-public crate-libipld-core-0.14.0 (c (n "libipld-core") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0.40") (k 0)) (d (n "cid") (r "^0.8.3") (f (quote ("alloc"))) (k 0)) (d (n "core2") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "multibase") (r "^0.9.1") (o #t) (k 0)) (d (n "multihash") (r "^0.16.0") (f (quote ("alloc"))) (k 0)) (d (n "multihash") (r "^0.16.0") (f (quote ("multihash-impl" "blake3"))) (k 2)) (d (n "serde") (r "^1.0.132") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.132") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.25") (o #t) (d #t) (k 0)))) (h "1dcfvpjn86xf82p4jvg6ff0037a77p194nblp9633dy6dqj90iyl") (f (quote (("std" "anyhow/std" "cid/std" "multibase/std" "multihash/std" "thiserror") ("serde-codec" "cid/serde-codec" "serde") ("default" "std"))))))

(define-public crate-libipld-core-0.15.0 (c (n "libipld-core") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0.40") (k 0)) (d (n "cid") (r "^0.9.0") (f (quote ("alloc"))) (k 0)) (d (n "core2") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "multibase") (r "^0.9.1") (o #t) (k 0)) (d (n "multihash") (r "^0.17.0") (f (quote ("alloc"))) (k 0)) (d (n "multihash") (r "^0.17.0") (f (quote ("multihash-impl" "blake3"))) (k 2)) (d (n "serde") (r "^1.0.132") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.132") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.25") (o #t) (d #t) (k 0)))) (h "0z6d0mkrj0xjzybaws9fm7igmphrghnaw7rnlbkykpi57fx099xp") (f (quote (("std" "anyhow/std" "cid/std" "multibase/std" "multihash/std" "thiserror") ("serde-codec" "cid/serde-codec" "serde") ("default" "std"))))))

(define-public crate-libipld-core-0.16.0 (c (n "libipld-core") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0.40") (k 0)) (d (n "cid") (r "^0.10.0") (f (quote ("alloc"))) (k 0)) (d (n "core2") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "multibase") (r "^0.9.1") (o #t) (k 0)) (d (n "multihash") (r "^0.18.0") (f (quote ("alloc"))) (k 0)) (d (n "quickcheck") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.25") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.18.0") (f (quote ("multihash-impl" "blake3"))) (k 2)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.132") (d #t) (k 2)))) (h "0n41xybwfv3grgkgypmphbnsv7khhknpiy9agfb2w2cbimz71kas") (f (quote (("std" "anyhow/std" "cid/std" "multibase/std" "multihash/std" "thiserror") ("serde-codec" "cid/serde-codec" "serde") ("default" "std") ("arb" "quickcheck" "cid/arb"))))))

