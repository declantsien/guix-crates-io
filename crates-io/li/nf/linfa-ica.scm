(define-module (crates-io li nf linfa-ica) #:use-module (crates-io))

(define-public crate-linfa-ica-0.2.1 (c (n "linfa-ica") (v "0.2.1") (d (list (d (n "linfa") (r "^0.2.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (k 0)) (d (n "ndarray-linalg") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (k 2)) (d (n "ndarray-rand") (r "^0.11") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.9") (f (quote ("system"))) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rand_isaac") (r "^0.2.0") (d #t) (k 0)))) (h "1x4fvz73pd3zz7by4mrwab6m9qmpvk2rq9hq4vr3k6z0brdf7c5z")))

(define-public crate-linfa-ica-0.3.0 (c (n "linfa-ica") (v "0.3.0") (d (list (d (n "linfa") (r "^0.3.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (k 0)) (d (n "ndarray-linalg") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (k 2)) (d (n "ndarray-rand") (r "^0.11") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rand_isaac") (r "^0.2.0") (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")))) (h "12c766ff20l0jm17hbx6vwjc39mfisvr8nn63sjbmfvc7d0i3aqz") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

(define-public crate-linfa-ica-0.3.1 (c (n "linfa-ica") (v "0.3.1") (d (list (d (n "linfa") (r "^0.3.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (k 0)) (d (n "ndarray-linalg") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (k 2)) (d (n "ndarray-rand") (r "^0.11") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rand_isaac") (r "^0.2.0") (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")))) (h "045gmvbrxbllpv49frq70cmb3nwffxr3s847vpj9jhy8zkgwc7x6") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

(define-public crate-linfa-ica-0.4.0 (c (n "linfa-ica") (v "0.4.0") (d (list (d (n "linfa") (r "^0.4.0") (f (quote ("ndarray-linalg"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.14") (k 0)) (d (n "ndarray-linalg") (r "^0.13") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.7") (k 2)) (d (n "ndarray-rand") (r "^0.13") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1d33pd1gza8djyiybyd04s4zdfl4w46mlf41a70rp4zgi5bai8jw") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

(define-public crate-linfa-ica-0.5.0 (c (n "linfa-ica") (v "0.5.0") (d (list (d (n "linfa") (r "^0.5.0") (f (quote ("ndarray-linalg"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (k 0)) (d (n "ndarray-linalg") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (k 2)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "10a9sf4y4rgar4svjy8xsk35ai5bkwlvibyhhxbq2zw5mf0aw4nv") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

(define-public crate-linfa-ica-0.5.1 (c (n "linfa-ica") (v "0.5.1") (d (list (d (n "linfa") (r "^0.5.1") (f (quote ("ndarray-linalg"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (k 2)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0ahx39iy7qvwkaqbycwryacqv8x6b075qaz9avbsm32a6sy73w8v") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

(define-public crate-linfa-ica-0.6.0 (c (n "linfa-ica") (v "0.6.0") (d (list (d (n "linfa") (r "^0.6.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (k 2)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0a15r1xyx10z0dhny1l8rq45vldplsyfnxbymsd0qxcgiylxq441") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg"))))))

(define-public crate-linfa-ica-0.6.1 (c (n "linfa-ica") (v "0.6.1") (d (list (d (n "linfa") (r "^0.6.1") (d #t) (k 0)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (k 2)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0b86xcvjahkvx3wrmz1qaznc80mv4ffv88bd7njg06fcs45xlivw") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg"))))))

(define-public crate-linfa-ica-0.7.0 (c (n "linfa-ica") (v "0.7.0") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "linfa") (r "^0.7.0") (d #t) (k 0)) (d (n "linfa") (r "^0.7.0") (f (quote ("benchmarks"))) (d #t) (k 2)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (k 2)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "169h4zx1r2hbhdfnk5z7a9l7yrwda8nwzh3ibxjpqi7wlqvgf2ps") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg"))))))

