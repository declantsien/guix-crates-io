(define-module (crates-io li nf linfa-preprocessing) #:use-module (crates-io))

(define-public crate-linfa-preprocessing-0.4.0 (c (n "linfa-preprocessing") (v "0.4.0") (d (list (d (n "approx") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "curl") (r "^0.4.35") (d #t) (k 2)) (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "linfa") (r "^0.4.0") (f (quote ("ndarray-linalg"))) (d #t) (k 0)) (d (n "linfa-bayes") (r "^0.4.0") (d #t) (k 2)) (d (n "linfa-datasets") (r "^0.4.0") (f (quote ("diabetes" "winequality"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.14") (f (quote ("approx" "blas"))) (k 0)) (d (n "ndarray-linalg") (r "^0.13") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.13") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "sprs") (r "^0.9.4") (k 0)) (d (n "tar") (r "^0.4.33") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.8") (d #t) (k 0)))) (h "0fhmy37hgrd1f3jyifn2239q5z41fk071990cizn7qkcnmq2v2z5")))

(define-public crate-linfa-preprocessing-0.5.0 (c (n "linfa-preprocessing") (v "0.5.0") (d (list (d (n "approx") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "curl") (r "^0.4.35") (d #t) (k 2)) (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "linfa") (r "^0.5.0") (f (quote ("ndarray-linalg"))) (d #t) (k 0)) (d (n "linfa-bayes") (r "^0.5.0") (d #t) (k 2)) (d (n "linfa-datasets") (r "^0.5.0") (f (quote ("diabetes" "winequality"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (f (quote ("approx" "blas"))) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "sprs") (r "^0.11.0") (k 0)) (d (n "tar") (r "^0.4.33") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.8") (d #t) (k 0)))) (h "0938p5zgsh87swbc53s13jdnl4rvnxy640gip7l50hx5lyv83rgl")))

(define-public crate-linfa-preprocessing-0.5.1 (c (n "linfa-preprocessing") (v "0.5.1") (d (list (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "curl") (r "^0.4.35") (d #t) (k 2)) (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "linfa") (r "^0.5.1") (f (quote ("ndarray-linalg"))) (d #t) (k 0)) (d (n "linfa-bayes") (r "^0.5.1") (d #t) (k 2)) (d (n "linfa-datasets") (r "^0.5.1") (f (quote ("diabetes" "winequality"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (f (quote ("approx" "blas"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "sprs") (r "^0.11.0") (k 0)) (d (n "tar") (r "^0.4.33") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.8") (d #t) (k 0)))) (h "07a5gs51a6fm282f8jkqmpc2iyswcb8hs019kcgbw3ngx9srmvcg")))

(define-public crate-linfa-preprocessing-0.6.0 (c (n "linfa-preprocessing") (v "0.6.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "curl") (r "^0.4.35") (d #t) (k 2)) (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "linfa") (r "^0.6.0") (d #t) (k 0)) (d (n "linfa-bayes") (r "^0.6.0") (d #t) (k 2)) (d (n "linfa-datasets") (r "^0.6.0") (f (quote ("diabetes" "winequality"))) (d #t) (k 2)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "sprs") (r "^0.11.0") (k 0)) (d (n "tar") (r "^0.4.33") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.8") (d #t) (k 0)))) (h "1kzr14vgxzddgclqd1a1hdqw2jbnyhsi5gfzdbgilxq8xklv7xn2") (f (quote (("blas" "ndarray-linalg" "linfa/ndarray-linalg"))))))

(define-public crate-linfa-preprocessing-0.6.1 (c (n "linfa-preprocessing") (v "0.6.1") (d (list (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "curl") (r "^0.4.35") (d #t) (k 2)) (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "linfa") (r "^0.6.1") (d #t) (k 0)) (d (n "linfa-bayes") (r "^0.6.1") (d #t) (k 2)) (d (n "linfa-datasets") (r "^0.6.1") (f (quote ("diabetes" "winequality"))) (d #t) (k 2)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "sprs") (r "^0.11.0") (k 0)) (d (n "tar") (r "^0.4.33") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.8") (d #t) (k 0)))) (h "00ry1fzqwzrhqy8h7cy2c5a3sx9lmpk3wb8ifg4gll01k5dprgjh") (f (quote (("blas" "ndarray-linalg" "linfa/ndarray-linalg"))))))

(define-public crate-linfa-preprocessing-0.7.0 (c (n "linfa-preprocessing") (v "0.7.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "curl") (r "^0.4.35") (d #t) (k 2)) (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "linfa") (r "^0.7.0") (d #t) (k 0)) (d (n "linfa-bayes") (r "^0.7.0") (d #t) (k 2)) (d (n "linfa-datasets") (r "^0.7.0") (f (quote ("diabetes" "winequality"))) (d #t) (k 2)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_regex") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "sprs") (r "^0.11.0") (k 0)) (d (n "tar") (r "^0.4.33") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.8") (d #t) (k 0)))) (h "1zx8q031fnfa5gbvnqnrm7dz3i6i0vqfzavpid1143mn7980vq4x") (f (quote (("serde" "serde_crate" "ndarray/serde" "serde_regex") ("blas" "ndarray-linalg" "linfa/ndarray-linalg"))))))

