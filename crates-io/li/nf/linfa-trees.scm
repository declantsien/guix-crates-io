(define-module (crates-io li nf linfa-trees) #:use-module (crates-io))

(define-public crate-linfa-trees-0.2.1 (c (n "linfa-trees") (v "0.2.1") (d (list (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.13") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (k 2)) (d (n "ndarray-rand") (r "^0.11") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.2.0") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "09nj098g5i7d5ljmi0836fr1fgvfsc4v0i1p157p3axbg9c2hby9")))

(define-public crate-linfa-trees-0.3.0 (c (n "linfa-trees") (v "0.3.0") (d (list (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "linfa") (r "^0.3.0") (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.3.0") (f (quote ("iris"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.13") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.11") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.2.0") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")))) (h "1bsa9l0n1qyvvd495svh3l1x4p12qrw1mz6qamypa3j2p8yh53ff") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

(define-public crate-linfa-trees-0.3.1 (c (n "linfa-trees") (v "0.3.1") (d (list (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "linfa") (r "^0.3.1") (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.3.1") (f (quote ("iris"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.13") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")))) (h "12h7pfv6gh42pkw65cysnd53vbc27jw00fz08ag78kyj8vh3sh11") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

(define-public crate-linfa-trees-0.4.0 (c (n "linfa-trees") (v "0.4.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "linfa") (r "^0.4.0") (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.4.0") (f (quote ("iris"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.14") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.13") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")))) (h "1hvwakwcwh4l1q9k9yilg9fkcq78b9gd607hz0zxamv3fsakjp3p") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

(define-public crate-linfa-trees-0.5.0 (c (n "linfa-trees") (v "0.5.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "linfa") (r "^0.5.0") (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.5.0") (f (quote ("iris"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")))) (h "19f3fw0hmfla1vn1x5gbb7xkvaac707w2mda4dmpaj5pdhbdr638") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

(define-public crate-linfa-trees-0.5.1 (c (n "linfa-trees") (v "0.5.1") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "linfa") (r "^0.5.1") (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.5.1") (f (quote ("iris"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")))) (h "04jrsly9ym0jravrzy25csx2xnbyvyfc56yffwqzv95qyh7y221s") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

(define-public crate-linfa-trees-0.6.0 (c (n "linfa-trees") (v "0.6.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "linfa") (r "^0.6.0") (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.6.0") (f (quote ("iris"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")))) (h "1lifn2m55ksph4rd2xw8qkhgfr9vb7m1qq0sbgm3f3kzi72sf6hh") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

(define-public crate-linfa-trees-0.6.1 (c (n "linfa-trees") (v "0.6.1") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "linfa") (r "^0.6.1") (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.6.1") (f (quote ("iris"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")))) (h "133zlxz81mcckxa3himl1vaih4cvaqzaghm975jh3n7zlvwjjh26") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

(define-public crate-linfa-trees-0.7.0 (c (n "linfa-trees") (v "0.7.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "linfa") (r "^0.7.0") (d #t) (k 0)) (d (n "linfa") (r "^0.7.0") (f (quote ("benchmarks"))) (d #t) (k 2)) (d (n "linfa-datasets") (r "^0.7.0") (f (quote ("iris"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "approx"))) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")))) (h "1iiw32ndig2km0my8id2jmr1a6q8wbhkcdi8ws8phg2mymaap58q") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

