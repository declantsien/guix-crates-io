(define-module (crates-io li nf linfa-elasticnet) #:use-module (crates-io))

(define-public crate-linfa-elasticnet-0.3.0 (c (n "linfa-elasticnet") (v "0.3.0") (d (list (d (n "approx") (r "^0.3.2") (d #t) (k 0)) (d (n "linfa") (r "^0.3.0") (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.3.0") (f (quote ("diabetes"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.13") (f (quote ("blas" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.11") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.2") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")))) (h "0wza3zdb9qqdxk9yw6bkad0fbrv4w3g9z08jim4xf8frh3faxzqd") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

(define-public crate-linfa-elasticnet-0.3.1 (c (n "linfa-elasticnet") (v "0.3.1") (d (list (d (n "approx") (r "^0.3.2") (d #t) (k 0)) (d (n "linfa") (r "^0.3.1") (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.3.1") (f (quote ("diabetes"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.13") (f (quote ("blas" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.11") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.2") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0p2clgkj3sag50nhsvhnrjanfcdf9bwjf6k3b2yirqsgxfj4ny7h") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

(define-public crate-linfa-elasticnet-0.4.0 (c (n "linfa-elasticnet") (v "0.4.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "linfa") (r "^0.4.0") (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.4.0") (f (quote ("diabetes"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.14") (f (quote ("blas" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.13") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.13") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1dkwkffp8d7hp1wz690ipi2jdb6jnsfdrpkgxxg6fak9ahrniass") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

(define-public crate-linfa-elasticnet-0.5.0 (c (n "linfa-elasticnet") (v "0.5.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "linfa") (r "^0.5.0") (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.5.0") (f (quote ("diabetes"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (f (quote ("blas" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0mva5a74wx7ci5s6605rc2q9xin13443a2wnryk5373ffbq87czk") (f (quote (("serde" "serde_crate" "ndarray/serde" "linfa/serde") ("default"))))))

(define-public crate-linfa-elasticnet-0.5.1 (c (n "linfa-elasticnet") (v "0.5.1") (d (list (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "linfa") (r "^0.5.1") (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.5.1") (f (quote ("diabetes"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (f (quote ("blas" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0n0wz5yjm583psvpxxyk0ingp70jj0irdylmarn5ffdfypmki6hw") (f (quote (("serde" "serde_crate" "ndarray/serde" "linfa/serde") ("default"))))))

(define-public crate-linfa-elasticnet-0.6.0 (c (n "linfa-elasticnet") (v "0.6.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "linfa") (r "^0.6.0") (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.6.0") (f (quote ("diabetes"))) (d #t) (k 2)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "19n2cakrr7ch039yl31xxv60pcynx8h30hnsfa0yhv4vragn70af") (f (quote (("serde" "serde_crate" "ndarray/serde" "linfa/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg"))))))

(define-public crate-linfa-elasticnet-0.6.1 (c (n "linfa-elasticnet") (v "0.6.1") (d (list (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "linfa") (r "^0.6.1") (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.6.1") (f (quote ("diabetes"))) (d #t) (k 2)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0qxm1id6qj8nhh07wfiyxip0jcw2b0kny9ybm855ik1dsrs3yah5") (f (quote (("serde" "serde_crate" "ndarray/serde" "linfa/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg"))))))

(define-public crate-linfa-elasticnet-0.7.0 (c (n "linfa-elasticnet") (v "0.7.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "linfa") (r "^0.7.0") (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.7.0") (f (quote ("diabetes" "linnerud"))) (d #t) (k 2)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1gdbz0glqn277xb18z2pn3b2a0glvlflxikv8nm7yh3q2dy1amxp") (f (quote (("serde" "serde_crate" "ndarray/serde" "linfa/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg"))))))

