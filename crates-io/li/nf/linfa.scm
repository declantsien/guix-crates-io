(define-module (crates-io li nf linfa) #:use-module (crates-io))

(define-public crate-linfa-0.1.0 (c (n "linfa") (v "0.1.0") (h "04f8l2f6s34yidyz7q1zcz2ci4wz7jh6qpblpdwim34px031nnpd")))

(define-public crate-linfa-0.1.1 (c (n "linfa") (v "0.1.1") (d (list (d (n "linfa-clustering") (r "^0.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (f (quote ("rayon" "serde" "approx"))) (d #t) (k 2)) (d (n "ndarray-npy") (r "^0.5") (k 2)) (d (n "ndarray-rand") (r "^0.11") (d #t) (k 2)) (d (n "rand_isaac") (r "^0.2.0") (d #t) (k 2)))) (h "191a06wwrwmkw9051297ncmc8jgjdkxd3j6nn6q4hlm1jjwmgrdc")))

(define-public crate-linfa-0.1.2 (c (n "linfa") (v "0.1.2") (d (list (d (n "linfa-clustering") (r "^0.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (f (quote ("rayon" "serde" "approx"))) (d #t) (k 2)) (d (n "ndarray-npy") (r "^0.5") (k 2)) (d (n "ndarray-rand") (r "^0.11") (d #t) (k 2)) (d (n "rand_isaac") (r "^0.2.0") (d #t) (k 2)))) (h "031g661h0848nl6344vlmgqh76xm13awnm63hgijlz3d6wv5810y")))

(define-public crate-linfa-0.2.1 (c (n "linfa") (v "0.2.1") (d (list (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.13") (k 0)) (d (n "ndarray-rand") (r "^0.12") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "0s8s2n9agi5k3c871f0nsxh9f9i9lfl93rq9rh0z78gyp11skqjf")))

(define-public crate-linfa-0.3.0 (c (n "linfa") (v "0.3.0") (d (list (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "intel-mkl-src") (r "^0.6.0") (o #t) (k 0)) (d (n "ndarray") (r "^0.13") (k 0)) (d (n "ndarray-linalg") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.12") (d #t) (k 2)) (d (n "netlib-src") (r "^0.8.0") (f (quote ("cblas"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.9.0") (f (quote ("cblas"))) (o #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.2") (d #t) (k 2)))) (h "0ij6cnwnq5s9xnan4mmbp02194pggfap026aqi3xs9sl6i61dism") (f (quote (("openblas-system" "blas" "ndarray-linalg" "openblas-src/system") ("openblas-static" "blas" "ndarray-linalg" "openblas-src/static") ("netlib-system" "blas" "ndarray-linalg" "netlib-src/system") ("netlib-static" "blas" "ndarray-linalg" "netlib-src/static") ("intel-mkl-system" "blas" "ndarray-linalg" "intel-mkl-src/mkl-dynamic-lp64-seq") ("intel-mkl-static" "blas" "ndarray-linalg" "intel-mkl-src/mkl-static-lp64-seq" "intel-mkl-src/download") ("default") ("blas" "ndarray/blas"))))))

(define-public crate-linfa-0.3.1 (c (n "linfa") (v "0.3.1") (d (list (d (n "approx") (r "^0.3") (f (quote ("std"))) (k 2)) (d (n "intel-mkl-src") (r "^0.6.0") (o #t) (k 0)) (d (n "ndarray") (r "^0.13") (f (quote ("approx"))) (k 0)) (d (n "ndarray-linalg") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.11") (d #t) (k 2)) (d (n "netlib-src") (r "^0.8.0") (f (quote ("cblas"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.9.0") (f (quote ("cblas"))) (o #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0iz16s08d0vnh2afbkpa7002nv379j9w1rcp2sn13cs7vjd9612a") (f (quote (("openblas-system" "blas" "ndarray-linalg" "openblas-src/system") ("openblas-static" "blas" "ndarray-linalg" "openblas-src/static") ("netlib-system" "blas" "ndarray-linalg" "netlib-src/system") ("netlib-static" "blas" "ndarray-linalg" "netlib-src/static") ("intel-mkl-system" "blas" "ndarray-linalg" "intel-mkl-src/mkl-dynamic-lp64-seq") ("intel-mkl-static" "blas" "ndarray-linalg" "intel-mkl-src/mkl-static-lp64-seq" "intel-mkl-src/download") ("default") ("blas" "ndarray/blas"))))))

(define-public crate-linfa-0.4.0 (c (n "linfa") (v "0.4.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.6.0") (o #t) (k 0)) (d (n "ndarray") (r "^0.14") (f (quote ("approx"))) (k 0)) (d (n "ndarray-linalg") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.13") (d #t) (k 2)) (d (n "netlib-src") (r "^0.8.0") (f (quote ("cblas"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10.4") (f (quote ("cblas"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0jnifndrc5ycsg001i2s5gd6yai31cw9dqik3lsxrq6h3dwpzywi") (f (quote (("openblas-system" "blas" "ndarray-linalg" "openblas-src/system") ("openblas-static" "blas" "ndarray-linalg" "openblas-src/static") ("netlib-system" "blas" "ndarray-linalg" "netlib-src/system") ("netlib-static" "blas" "ndarray-linalg" "netlib-src/static") ("intel-mkl-system" "blas" "ndarray-linalg" "intel-mkl-src/mkl-dynamic-lp64-seq") ("intel-mkl-static" "blas" "ndarray-linalg" "intel-mkl-src/mkl-static-lp64-seq" "intel-mkl-src/download") ("default") ("blas" "ndarray/blas"))))))

(define-public crate-linfa-0.5.0 (c (n "linfa") (v "0.5.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.6.0") (o #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("approx"))) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 2)) (d (n "netlib-src") (r "^0.8.0") (f (quote ("cblas"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10.4") (f (quote ("cblas"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "13zqybby4jd76pzf6gyf813zqzzdc29i01i0s4jf2pf8f4l635kl") (f (quote (("serde" "serde_crate" "ndarray/serde") ("openblas-system" "blas" "ndarray-linalg" "openblas-src/system") ("openblas-static" "blas" "ndarray-linalg" "openblas-src/static") ("netlib-system" "blas" "ndarray-linalg" "netlib-src/system") ("netlib-static" "blas" "ndarray-linalg" "netlib-src/static") ("intel-mkl-system" "blas" "ndarray-linalg" "intel-mkl-src/mkl-dynamic-lp64-seq") ("intel-mkl-static" "blas" "ndarray-linalg" "intel-mkl-src/mkl-static-lp64-seq" "intel-mkl-src/download") ("default") ("blas" "ndarray/blas"))))))

(define-public crate-linfa-0.5.1 (c (n "linfa") (v "0.5.1") (d (list (d (n "anyhow") (r "<=1.0.48") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.6.0") (o #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 2)) (d (n "netlib-src") (r "^0.8.0") (f (quote ("cblas"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10.4") (f (quote ("cblas"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "01hqq70sk2xl3nzsdxiv9rpmyxlh6w2l72y8fiamr5jlp8cw5zd8") (f (quote (("serde" "serde_crate" "ndarray/serde") ("openblas-system" "blas" "ndarray-linalg" "openblas-src/system") ("openblas-static" "blas" "ndarray-linalg" "openblas-src/static") ("netlib-system" "blas" "ndarray-linalg" "netlib-src/system") ("netlib-static" "blas" "ndarray-linalg" "netlib-src/static") ("intel-mkl-system" "blas" "ndarray-linalg" "intel-mkl-src/mkl-dynamic-lp64-seq") ("intel-mkl-static" "blas" "ndarray-linalg" "intel-mkl-src/mkl-static-lp64-seq" "intel-mkl-src/download") ("default") ("blas" "ndarray/blas"))))))

(define-public crate-linfa-0.6.0 (c (n "linfa") (v "0.6.0") (d (list (d (n "anyhow") (r "<=1.0.48") (d #t) (k 0)) (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0xbhmj8hmng0lvwlrbxbik1394cad0q2bnapchy3s7h4y4kmqd10") (f (quote (("serde" "serde_crate" "ndarray/serde") ("openblas-system" "blas" "ndarray-linalg/openblas-system") ("openblas-static" "blas" "ndarray-linalg/openblas-static") ("netlib-system" "blas" "ndarray-linalg/netlib-system") ("netlib-static" "blas" "ndarray-linalg/netlib-static") ("intel-mkl-system" "blas" "ndarray-linalg/intel-mkl-system") ("intel-mkl-static" "blas" "ndarray-linalg/intel-mkl-static") ("default") ("blas" "ndarray/blas"))))))

(define-public crate-linfa-0.6.1 (c (n "linfa") (v "0.6.1") (d (list (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0250rnna3a98hq4c98ra216kjrqbcbcdmilz79dlhrbgz3cx0rcd") (f (quote (("serde" "serde_crate" "ndarray/serde") ("openblas-system" "blas" "ndarray-linalg/openblas-system") ("openblas-static" "blas" "ndarray-linalg/openblas-static") ("netlib-system" "blas" "ndarray-linalg/netlib-system") ("netlib-static" "blas" "ndarray-linalg/netlib-static") ("intel-mkl-system" "blas" "ndarray-linalg/intel-mkl-system") ("intel-mkl-static" "blas" "ndarray-linalg/intel-mkl-static") ("default") ("blas" "ndarray/blas"))))))

(define-public crate-linfa-0.7.0 (c (n "linfa") (v "0.7.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pprof") (r "^0.11.0") (f (quote ("flamegraph" "criterion"))) (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "sprs") (r "^0.11") (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1cz0mkrby8l0wshc02ihlsjs9ip2aa4shpciz964wdxw20ql5aqw") (f (quote (("serde" "serde_crate" "ndarray/serde") ("openblas-system" "blas" "ndarray-linalg/openblas-system") ("openblas-static" "blas" "ndarray-linalg/openblas-static") ("netlib-system" "blas" "ndarray-linalg/netlib-system") ("netlib-static" "blas" "ndarray-linalg/netlib-static") ("intel-mkl-system" "blas" "ndarray-linalg/intel-mkl-system") ("intel-mkl-static" "blas" "ndarray-linalg/intel-mkl-static") ("default") ("blas" "ndarray/blas") ("benchmarks" "criterion" "pprof"))))))

