(define-module (crates-io li nf linfa-reduction) #:use-module (crates-io))

(define-public crate-linfa-reduction-0.2.1 (c (n "linfa-reduction") (v "0.2.1") (d (list (d (n "linfa") (r "^0.2.1") (d #t) (k 0)) (d (n "linfa-kernel") (r "^0.2.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (k 2)) (d (n "ndarray-rand") (r "^0.11") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.9") (f (quote ("system"))) (k 2)) (d (n "rand_isaac") (r "^0.2.0") (d #t) (k 2)))) (h "13hriafi0pibm4s6dasdcwxqwngq70vw88m30qazjcxp7vfxlgar")))

(define-public crate-linfa-reduction-0.3.0 (c (n "linfa-reduction") (v "0.3.0") (d (list (d (n "linfa") (r "^0.3.0") (d #t) (k 0)) (d (n "linfa-kernel") (r "^0.3.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (k 0)) (d (n "ndarray-linalg") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (k 2)) (d (n "ndarray-rand") (r "^0.11") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.2.0") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")))) (h "0f0v92krb1gndysc4krrhzvz106xgld07vawqg20bc0hsaaa4wdb") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

(define-public crate-linfa-reduction-0.3.1 (c (n "linfa-reduction") (v "0.3.1") (d (list (d (n "approx") (r "^0.3") (f (quote ("std"))) (k 2)) (d (n "linfa") (r "^0.3.1") (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.3.1") (f (quote ("iris"))) (d #t) (k 2)) (d (n "linfa-kernel") (r "^0.3.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (f (quote ("approx"))) (k 0)) (d (n "ndarray-linalg") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (k 2)) (d (n "ndarray-rand") (r "^0.11") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")))) (h "1j6fkn5mdsvv2w7h599z8ap3v8f21ziwvl0gb9s421g1rkm3jky6") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

(define-public crate-linfa-reduction-0.4.0 (c (n "linfa-reduction") (v "0.4.0") (d (list (d (n "approx") (r "^0.4") (f (quote ("std"))) (k 2)) (d (n "linfa") (r "^0.4.0") (f (quote ("ndarray-linalg"))) (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.4.0") (f (quote ("iris"))) (d #t) (k 2)) (d (n "linfa-kernel") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.14") (f (quote ("approx"))) (k 0)) (d (n "ndarray-linalg") (r "^0.13") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.7") (k 2)) (d (n "ndarray-rand") (r "^0.13") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0pkz8c9p4wrrr2ad7hzcikxj1j610i5ginqwix2v20g9xl2kz5kk") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

(define-public crate-linfa-reduction-0.5.0 (c (n "linfa-reduction") (v "0.5.0") (d (list (d (n "approx") (r "^0.4") (f (quote ("std"))) (k 2)) (d (n "linfa") (r "^0.5.0") (f (quote ("ndarray-linalg"))) (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.5.0") (f (quote ("iris"))) (d #t) (k 2)) (d (n "linfa-kernel") (r "^0.5.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("approx"))) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (k 2)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "022w07v1c4x1mm7kfh93gm7w3rypkzwf9zqx7xmibdksj9dbwhyb") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

(define-public crate-linfa-reduction-0.5.1 (c (n "linfa-reduction") (v "0.5.1") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "linfa") (r "^0.5.1") (f (quote ("ndarray-linalg"))) (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.5.1") (f (quote ("iris"))) (d #t) (k 2)) (d (n "linfa-kernel") (r "^0.5.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (k 2)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "00mf2v0yd85shwjjbq7a10241xnqip8fd3pq8408fj9lhbgapyck") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

(define-public crate-linfa-reduction-0.6.0 (c (n "linfa-reduction") (v "0.6.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "linfa") (r "^0.6.0") (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.6.0") (f (quote ("iris" "generate"))) (d #t) (k 2)) (d (n "linfa-kernel") (r "^0.6.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "^0.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (k 2)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0wic0zwx38cvfn0kwwqlk5h9xby0f15rca3wlwvcc4189sas9f2a") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg"))))))

(define-public crate-linfa-reduction-0.6.1 (c (n "linfa-reduction") (v "0.6.1") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "linfa") (r "^0.6.1") (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.6.1") (f (quote ("iris" "generate"))) (d #t) (k 2)) (d (n "linfa-kernel") (r "^0.6.1") (d #t) (k 0)) (d (n "linfa-linalg") (r "^0.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (k 2)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "035i4dxq1c1sjb55fja6rx6bf58kcxyhkxxsiv7lqhlw075w7fv8") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg"))))))

(define-public crate-linfa-reduction-0.7.0 (c (n "linfa-reduction") (v "0.7.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "linfa") (r "^0.7.0") (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.7.0") (f (quote ("iris" "generate"))) (d #t) (k 2)) (d (n "linfa-kernel") (r "^0.7.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "^0.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (k 2)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1siylmjy1kplq7l47ci886iv01fr91kk18jkmwrr7lm89zs3bym8") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg"))))))

