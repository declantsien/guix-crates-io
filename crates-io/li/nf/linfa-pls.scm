(define-module (crates-io li nf linfa-pls) #:use-module (crates-io))

(define-public crate-linfa-pls-0.4.0 (c (n "linfa-pls") (v "0.4.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "linfa") (r "^0.4.0") (f (quote ("ndarray-linalg"))) (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.4.0") (f (quote ("linnerud"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.14") (k 0)) (d (n "ndarray-linalg") (r "^0.13") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.13") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1nq28bygpl19qlkmgfhkv4w6y6kvfa1i17vw2hiqwkd9gr44pdn3") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

(define-public crate-linfa-pls-0.5.0 (c (n "linfa-pls") (v "0.5.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "linfa") (r "^0.5.0") (f (quote ("ndarray-linalg"))) (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.5.0") (f (quote ("linnerud"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (k 0)) (d (n "ndarray-linalg") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "06y759qazsp1czwx71nzjk44zgylycqdcns288avkzcsl3nyi62s") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

(define-public crate-linfa-pls-0.5.1 (c (n "linfa-pls") (v "0.5.1") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "linfa") (r "^0.5.1") (f (quote ("ndarray-linalg"))) (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.5.1") (f (quote ("linnerud"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1s52kb22xqkix3kdi4snq39zddrdibdaggzs7cg7cakbfi8frwdy") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default"))))))

(define-public crate-linfa-pls-0.6.0 (c (n "linfa-pls") (v "0.6.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "linfa") (r "^0.6.0") (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.6.0") (f (quote ("linnerud"))) (d #t) (k 2)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "12jlcydrr5wqc0ix2k4h9pifc6q0rrx4hpql24dvf7951xkv11wj") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg"))))))

(define-public crate-linfa-pls-0.6.1 (c (n "linfa-pls") (v "0.6.1") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "linfa") (r "^0.6.1") (d #t) (k 0)) (d (n "linfa-datasets") (r "^0.6.1") (f (quote ("linnerud"))) (d #t) (k 2)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "07pqplzs9dicl1dc938vdm16vkq28qcykg5rdg6yf8gjszrj1py6") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg"))))))

(define-public crate-linfa-pls-0.7.0 (c (n "linfa-pls") (v "0.7.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "linfa") (r "^0.7.0") (d #t) (k 0)) (d (n "linfa") (r "^0.7.0") (f (quote ("benchmarks"))) (d #t) (k 2)) (d (n "linfa-datasets") (r "^0.7.0") (f (quote ("linnerud"))) (d #t) (k 2)) (d (n "linfa-linalg") (r "^0.1") (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (k 0) (p "serde")) (d (n "statrs") (r "^0.16.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1c5kvscx0ynlqfjkbyaqkb6rv5s7bgn3z7jjd95mrbb70qcvrnab") (f (quote (("serde" "serde_crate" "ndarray/serde") ("default") ("blas" "ndarray-linalg" "linfa/ndarray-linalg"))))))

