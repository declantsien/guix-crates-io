(define-module (crates-io li bp libp2p-noise) #:use-module (crates-io))

(define-public crate-libp2p-noise-0.1.0 (c (n "libp2p-noise") (v "0.1.0") (d (list (d (n "curve25519-dalek") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.3.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "snow") (r "^0.5.0-alpha1") (f (quote ("ring-resolver"))) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)))) (h "0gqnkkh74jdzxy1y362975j14zwp9l27088piy5p10xiks9s9v4v")))

(define-public crate-libp2p-noise-0.2.0 (c (n "libp2p-noise") (v "0.2.0") (d (list (d (n "curve25519-dalek") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "snow") (r "^0.5.0-alpha1") (f (quote ("ring-resolver"))) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)))) (h "1lipmm8h9xkhc66qv1wd3xf3qm8m1654lyq3bva1i67bm468plkh")))

(define-public crate-libp2p-noise-0.3.0 (c (n "libp2p-noise") (v "0.3.0") (d (list (d (n "curve25519-dalek") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.5.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.5.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "ring") (r "^0.14") (f (quote ("use_heap"))) (k 0)) (d (n "snow") (r "^0.5.1") (f (quote ("ring-resolver"))) (k 0)) (d (n "sodiumoxide") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^0.5") (d #t) (k 0)))) (h "0p0yzklv44hl0k7n5g39d788if6mzy21z6fwwlcyczcns1whp0pq")))

(define-public crate-libp2p-noise-0.4.0 (c (n "libp2p-noise") (v "0.4.0") (d (list (d (n "curve25519-dalek") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.6.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.6.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "ring") (r "^0.14") (f (quote ("use_heap"))) (k 0)) (d (n "snow") (r "^0.5.1") (f (quote ("ring-resolver"))) (k 0)) (d (n "sodiumoxide") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^0.5") (d #t) (k 0)))) (h "1r3gbak2c47clxca1js0m9mcw0qbrxy8lgy0h7xgk0sa3x092qp8")))

(define-public crate-libp2p-noise-0.5.0 (c (n "libp2p-noise") (v "0.5.0") (d (list (d (n "curve25519-dalek") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.7.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "ring") (r "^0.14") (f (quote ("use_heap"))) (k 0)) (d (n "snow") (r "^0.5.1") (f (quote ("ring-resolver"))) (k 0)) (d (n "sodiumoxide") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^0.5") (d #t) (k 0)))) (h "05yk2n2spj16zpdmxciawpj4vqjrj1wyfbmygcpa2lhaqn2m2szw")))

(define-public crate-libp2p-noise-0.6.0 (c (n "libp2p-noise") (v "0.6.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.8.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.8.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "protobuf") (r "^2.3") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "ring") (r "^0.14") (f (quote ("use_heap"))) (k 0)) (d (n "snow") (r "^0.5.2") (f (quote ("ring-resolver"))) (k 0)) (d (n "sodiumoxide") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^0.5") (d #t) (k 0)))) (h "1ph7wbybx0cz9p5qr7mhqzwnsj3ngqgxc0lcfk6a5czwqhpcwgbx")))

(define-public crate-libp2p-noise-0.7.0 (c (n "libp2p-noise") (v "0.7.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.9.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "protobuf") (r "^2.3") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "ring") (r "^0.14") (f (quote ("use_heap"))) (k 0)) (d (n "snow") (r "^0.5.2") (f (quote ("ring-resolver"))) (k 0)) (d (n "sodiumoxide") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^0.8") (d #t) (k 0)))) (h "1mg2ds18llljm5a679dvillh5p2hs9wisx1chqmhs9prn8r40cj4")))

(define-public crate-libp2p-noise-0.7.1 (c (n "libp2p-noise") (v "0.7.1") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.9.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "protobuf") (r "^2.3") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "ring") (r "^0.14") (f (quote ("use_heap"))) (k 0)) (d (n "snow") (r "^0.5.2") (f (quote ("ring-resolver"))) (k 0)) (d (n "sodiumoxide") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^0.9") (d #t) (k 0)))) (h "1lcshp4nw4pv24r36dc8bjn8zs2daqsl4lzgwwccb3l21xk4icg9")))

(define-public crate-libp2p-noise-0.8.0 (c (n "libp2p-noise") (v "0.8.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.10.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.10.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "protobuf") (r "^2.3") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "ring") (r "^0.14") (f (quote ("use_heap"))) (k 0)) (d (n "snow") (r "^0.5.2") (f (quote ("ring-resolver"))) (k 0)) (d (n "sodiumoxide") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^0.9") (d #t) (k 0)))) (h "04wfqix3ljkr77dr0vcvq5309l1yb7xw9izw26xgqsy2xx90i3lg")))

(define-public crate-libp2p-noise-0.9.0 (c (n "libp2p-noise") (v "0.9.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.11.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.11.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "protobuf") (r "^2.3") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "ring") (r "^0.14") (f (quote ("use_heap"))) (k 0)) (d (n "snow") (r "^0.5.2") (f (quote ("ring-resolver"))) (k 0)) (d (n "sodiumoxide") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^0.9") (d #t) (k 0)))) (h "0xwba191haa5whn4pbglx5qrdgrmzkb38h52wlx2xf8nh8x33lqx")))

(define-public crate-libp2p-noise-0.10.0 (c (n "libp2p-noise") (v "0.10.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.12.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "protobuf") (r "^2.3") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "ring") (r "^0.14") (f (quote ("use_heap"))) (k 0)) (d (n "snow") (r "^0.5.2") (f (quote ("ring-resolver"))) (k 0)) (d (n "sodiumoxide") (r "^0.2") (d #t) (k 2)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^0.9") (d #t) (k 0)))) (h "05w0p0j85k0a447wccjx6rk504b16dlsb86pl4cgwfyydjrwgcva")))

(define-public crate-libp2p-noise-0.11.0 (c (n "libp2p-noise") (v "0.11.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.13.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.13.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "protobuf") (r "^2.8") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc"))) (k 0)) (d (n "snow") (r "^0.6.1") (f (quote ("ring-resolver"))) (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0fikgi462vpjkzghlw1gh2k21rl1hb6zca4b39msv9v209jc43m3")))

(define-public crate-libp2p-noise-0.11.1 (c (n "libp2p-noise") (v "0.11.1") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.13.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.13.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "protobuf") (r "= 2.8.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc"))) (k 0)) (d (n "snow") (r "^0.6.1") (f (quote ("ring-resolver"))) (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0wmr33c5kcjshm1i033aiqbwyby7sawkqaypj21v1nkwpby9816m")))

(define-public crate-libp2p-noise-0.12.0-alpha.1 (c (n "libp2p-noise") (v "0.12.0-alpha.1") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.14.0-alpha.1") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.14.0-alpha.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "protobuf") (r "= 2.8.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc"))) (k 0)) (d (n "snow") (r "^0.6.1") (f (quote ("ring-resolver"))) (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "x25519-dalek") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0l5lb0d8wmis1rnd5ddz5c9iq8z6vl8pvjn8y33iy66kxddlizzq")))

(define-public crate-libp2p-noise-0.13.0 (c (n "libp2p-noise") (v "0.13.0") (d (list (d (n "curve25519-dalek") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.15.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.15.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc"))) (k 0)) (d (n "snow") (r "^0.6.1") (f (quote ("ring-resolver"))) (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "x25519-dalek") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0zs1kyh83j24kb2fr710i2sk233j5cpnl2n94qfd8k41ilhfhi88")))

(define-public crate-libp2p-noise-0.16.0 (c (n "libp2p-noise") (v "0.16.0") (d (list (d (n "curve25519-dalek") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.16.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "snow") (r "^0.6.1") (f (quote ("ring-resolver"))) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "snow") (r "^0.6.1") (f (quote ("default-resolver"))) (t "cfg(target_os = \"unknown\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "19p5r5pvk3h7191ydfp51ciswl0m9vwzkcpx157pkxpxka036zdc")))

(define-public crate-libp2p-noise-0.16.2 (c (n "libp2p-noise") (v "0.16.2") (d (list (d (n "curve25519-dalek") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.16.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "snow") (r "^0.6.1") (f (quote ("ring-resolver"))) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "snow") (r "^0.6.1") (f (quote ("default-resolver"))) (t "cfg(target_os = \"unknown\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.6.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0nk777pr0b8w4q999r7js7h9ild1gbiamj2lz2vbx67qf4yqlnmi")))

(define-public crate-libp2p-noise-0.17.0 (c (n "libp2p-noise") (v "0.17.0") (d (list (d (n "curve25519-dalek") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.17.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.17.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "snow") (r "^0.6.1") (f (quote ("ring-resolver"))) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "snow") (r "^0.6.1") (f (quote ("default-resolver"))) (t "cfg(target_os = \"unknown\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.6.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1mxlv68k5w7ygr8ydxnyclww12xdgd8k3hbqvlsg33r8aigq9lwq")))

(define-public crate-libp2p-noise-0.18.0 (c (n "libp2p-noise") (v "0.18.0") (d (list (d (n "curve25519-dalek") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.18.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.18.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "snow") (r "^0.6.1") (f (quote ("ring-resolver"))) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "snow") (r "^0.6.1") (f (quote ("default-resolver"))) (t "cfg(target_os = \"unknown\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.6.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0xwwqb4fm6rdgxwaywclgcanvfns58gqq7wzxqj9q4z196k993li")))

(define-public crate-libp2p-noise-0.19.0 (c (n "libp2p-noise") (v "0.19.0") (d (list (d (n "curve25519-dalek") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.19.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.19.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "snow") (r "^0.6.1") (f (quote ("ring-resolver"))) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "snow") (r "^0.6.1") (f (quote ("default-resolver"))) (t "cfg(target_os = \"unknown\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.6.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1x6xalvvikdhkcrxprs480vxhjvixya7ddh63r2xvsmh4x751zc4")))

(define-public crate-libp2p-noise-0.19.1 (c (n "libp2p-noise") (v "0.19.1") (d (list (d (n "curve25519-dalek") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.19.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "snow") (r "^0.7.0") (f (quote ("ring-resolver"))) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "snow") (r "^0.7.0") (f (quote ("default-resolver"))) (t "cfg(target_os = \"unknown\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.6.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "125c1600bc4zrck3md4v12ah3hkqlf1w9kizw1pg8s9kcmjbcgd0")))

(define-public crate-libp2p-noise-0.20.0 (c (n "libp2p-noise") (v "0.20.0") (d (list (d (n "curve25519-dalek") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.20.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "snow") (r "^0.7.0") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.7.0") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.6.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1jym197d5ffv0531fp1cgirnl2hdbbshz2syvifqpph2v1knpbgn")))

(define-public crate-libp2p-noise-0.21.0 (c (n "libp2p-noise") (v "0.21.0") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.20.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.6.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "03kjrdahk1n35r5z031sfx4325bg6qzzvzrmcm2zgamvcs4kydcg")))

(define-public crate-libp2p-noise-0.22.0 (c (n "libp2p-noise") (v "0.22.0") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.20.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.6.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0p8k41pm009qwlapfv3abhqrb3p6la8wj0j8s5x2ng62w0nlyn8y")))

(define-public crate-libp2p-noise-0.23.0 (c (n "libp2p-noise") (v "0.23.0") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.21.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.6.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "02y6pjy615zrix3ckispyjqrhdqqsbqkvni3irgky586km2sdsqb")))

(define-public crate-libp2p-noise-0.24.0 (c (n "libp2p-noise") (v "0.24.0") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.22.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.6.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0nmikv54irzbzv0m1x2qfnkrfg88wvgr4a2z0aqrym1g0j8c9xkf")))

(define-public crate-libp2p-noise-0.25.0 (c (n "libp2p-noise") (v "0.25.0") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.23.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1rn1pjz0009rg6cliv1j4advx73wfxf30ryjlzpqzcg5wd173iwk")))

(define-public crate-libp2p-noise-0.26.0 (c (n "libp2p-noise") (v "0.26.0") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.24.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0wl3nsqbn9vvvf2bgp5kcdvka797pby11nf5k406j5pc2nq1yi7v")))

(define-public crate-libp2p-noise-0.27.0 (c (n "libp2p-noise") (v "0.27.0") (d (list (d (n "bytes") (r ">=0.5.0, <0.6.0") (d #t) (k 0)) (d (n "curve25519-dalek") (r ">=3.0.0, <4.0.0") (d #t) (k 0)) (d (n "env_logger") (r ">=0.8.1, <0.9.0") (d #t) (k 2)) (d (n "futures") (r ">=0.3.1, <0.4.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.2.0, <2.0.0") (d #t) (k 0)) (d (n "libp2p-core") (r ">=0.25.0, <0.26.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "prost") (r ">=0.6.1, <0.7.0") (d #t) (k 0)) (d (n "prost-build") (r ">=0.6.0, <0.7.0") (d #t) (k 1)) (d (n "quickcheck") (r ">=0.9.0, <0.10.0") (d #t) (k 2)) (d (n "rand") (r ">=0.7.2, <0.8.0") (d #t) (k 0)) (d (n "sha2") (r ">=0.9.1, <0.10.0") (d #t) (k 0)) (d (n "snow") (r ">=0.7.1, <0.8.0") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r ">=0.7.1, <0.8.0") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sodiumoxide") (r ">=0.2.5, <0.3.0") (d #t) (k 2)) (d (n "static_assertions") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "x25519-dalek") (r ">=1.1.0, <2.0.0") (d #t) (k 0)) (d (n "zeroize") (r ">=1.0.0, <2.0.0") (d #t) (k 0)))) (h "0gaqc1kicx0bk64zlhkj5jksybkjqhzfrd4nrn1v6kgg9d90lqdr")))

(define-public crate-libp2p-noise-0.28.0 (c (n "libp2p-noise") (v "0.28.0") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.26.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0f919wa8wwrrzi2w0w6s59plnmifnbvkzh29qg4m9lhrh38y1005")))

(define-public crate-libp2p-noise-0.29.0 (c (n "libp2p-noise") (v "0.29.0") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-build") (r "^0.7") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0y3pwna7qfzgqsf6qlisj9j9j7pv8qa9ghx789hi7id0a8mk5jja")))

(define-public crate-libp2p-noise-0.30.0 (c (n "libp2p-noise") (v "0.30.0") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.28.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-build") (r "^0.7") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1gc879rrkzq1wnf46w4i99rs7h5dkv6w1wb3jidkyhxhnc6hznrn")))

(define-public crate-libp2p-noise-0.31.0 (c (n "libp2p-noise") (v "0.31.0") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.28.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-build") (r "^0.7") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "snow") (r "^0.8.0") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.8.0") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1xpcvkw1sj0p3saqaszv6rbg6kgcywa1m551kspmx1g6qipsm8jp")))

(define-public crate-libp2p-noise-0.32.0 (c (n "libp2p-noise") (v "0.32.0") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.29.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.8") (d #t) (k 0)) (d (n "prost-build") (r "^0.8") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "snow") (r "^0.8.0") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.8.0") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0gjj75ccmjif2i6glrcfninfbsbn3zil1k41r6knnarl5whvf79z")))

(define-public crate-libp2p-noise-0.30.1 (c (n "libp2p-noise") (v "0.30.1") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.28.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-build") (r "^0.7") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "snow") (r "^0.8.0") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.8.0") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0bc63i121skjcyqkjxj6786z1d19bkhdcj5djjkp0vhvvv9ldavk")))

(define-public crate-libp2p-noise-0.33.0-rc.1 (c (n "libp2p-noise") (v "0.33.0-rc.1") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.30.0-rc.1") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "prost-build") (r "^0.9") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "snow") (r "^0.8.0") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.8.0") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0nx6wpyyf3qwrc75dv1968xbi7x400gxadxi8mvm07a49krixscc")))

(define-public crate-libp2p-noise-0.33.0 (c (n "libp2p-noise") (v "0.33.0") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.30.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "prost-build") (r "^0.9") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "snow") (r "^0.8.0") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.8.0") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0ymqiy6g4xdj34v9ycacmfklcl7m9dbw1id9gjxj30h8k5x2qxx8")))

(define-public crate-libp2p-noise-0.34.0 (c (n "libp2p-noise") (v "0.34.0") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.31.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "prost-build") (r "^0.9") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "snow") (r "^0.8.0") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.8.0") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "05whprvwi90zn82k2gi7cxjwm838877g5spvh1m4yzqay4nxqxin") (r "1.56.1")))

(define-public crate-libp2p-noise-0.35.0 (c (n "libp2p-noise") (v "0.35.0") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.32.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "prost-build") (r "^0.9") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "snow") (r "^0.9.0") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.9.0") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1vv3zmzkxphjhh3fjyr7wzfs66r1cmmwys5y4dqsdkai834y1mwx") (r "1.56.1")))

(define-public crate-libp2p-noise-0.36.0 (c (n "libp2p-noise") (v "0.36.0") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.33.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.10") (d #t) (k 0)) (d (n "prost-build") (r "^0.10") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "snow") (r "^0.9.0") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.9.0") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1b8m9hn55dzghq0a17caxjf6jy2pana8wahqpmdk50qwmlfywb6g") (r "1.56.1")))

(define-public crate-libp2p-noise-0.37.0 (c (n "libp2p-noise") (v "0.37.0") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.34.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.10") (d #t) (k 0)) (d (n "prost-build") (r "^0.10") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "snow") (r "^0.9.0") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.9.0") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0vzv86x90hjak87mgkgbls6js08q5jjgkmr20ih9md44bp5hh93n") (r "1.56.1")))

(define-public crate-libp2p-noise-0.38.0 (c (n "libp2p-noise") (v "0.38.0") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.35.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "prost-build") (r "^0.11") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "snow") (r "^0.9.0") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.9.0") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0gkygj2pbv12b41il83wgn060c6l4k0im0z9lnrsy6p37w10lmcs") (r "1.56.1")))

(define-public crate-libp2p-noise-0.39.0 (c (n "libp2p-noise") (v "0.39.0") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "ed25519-compact") (r "^1.0.11") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.36.0") (k 0)) (d (n "libsodium-sys-stable") (r "^1.19.22") (f (quote ("fetch-latest"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "prost-build") (r "^0.11") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "snow") (r "^0.9.0") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.9.0") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1f091cbbs2np5x2xlslh4yn70fgixdw3s6smrrwngc24lhwzkc3w") (r "1.56.1")))

(define-public crate-libp2p-noise-0.40.0 (c (n "libp2p-noise") (v "0.40.0") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "ed25519-compact") (r "^1.0.11") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.37.0") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.19.22") (f (quote ("fetch-latest"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "prost-build") (r "^0.11") (d #t) (k 1)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "snow") (r "^0.9.0") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.9.0") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0vr0b986mkr54vvz9s2218md6npjj1i0rvzxbv5yc7yqddl5b084") (r "1.56.1")))

(define-public crate-libp2p-noise-0.41.0 (c (n "libp2p-noise") (v "0.41.0") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "ed25519-compact") (r "^2.0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.38.0") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.19.22") (f (quote ("fetch-latest"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "prost-build") (r "^0.11") (d #t) (k 1)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "snow") (r "^0.9.0") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.9.0") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0bmzzydkmbckgafnirfvg9kyx7xxpwvaaj7kqqp8jbp8xxbwny59") (r "1.60.0")))

(define-public crate-libp2p-noise-0.42.0 (c (n "libp2p-noise") (v "0.42.0") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "ed25519-compact") (r "^2.0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.39.0") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.19.22") (f (quote ("fetch-latest"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "prost-build") (r "^0.11") (d #t) (k 1)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "snow") (r "^0.9.0") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "snow") (r "^0.9.1") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0ijj57jfs61h2z7ly2wj8ng1rs5w9k2p8ilmkcla5irshbngj5hj") (r "1.60.0")))

(define-public crate-libp2p-noise-0.42.1 (c (n "libp2p-noise") (v "0.42.1") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.39.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.1.0") (f (quote ("ed25519"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "snow") (r "^0.9.0") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "snow") (r "^0.9.1") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1rdm4wg82761aj291938myag97wcgwwa0wl022aaxzpg7n0c51ww") (r "1.60.0")))

(define-public crate-libp2p-noise-0.42.2 (c (n "libp2p-noise") (v "0.42.2") (d (list (d (n "async-io") (r "^1.13.0") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.39.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.1.2") (f (quote ("ed25519"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "snow") (r "^0.9.2") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.9.2") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0ppchqzi25arnr6q9kjlsn04261girizrfimcjy3d6fji7d76dlw") (r "1.60.0")))

(define-public crate-libp2p-noise-0.43.0 (c (n "libp2p-noise") (v "0.43.0") (d (list (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures_ringbuf") (r "^0.4.0") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.40.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.0") (f (quote ("ed25519"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiaddr") (r "^0.18.0") (d #t) (k 0)) (d (n "multihash") (r "^0.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "snow") (r "^0.9.2") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.9.2") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "19xwdgglragbrm2xiv3plnahk1z4yfjs16ibnq4syxzrnfr5v547") (r "1.65.0")))

(define-public crate-libp2p-noise-0.43.1 (c (n "libp2p-noise") (v "0.43.1") (d (list (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^4.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures_ringbuf") (r "^0.4.0") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.40.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.3") (f (quote ("ed25519"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiaddr") (r "^0.18.0") (d #t) (k 0)) (d (n "multihash") (r "^0.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "snow") (r "^0.9.2") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.9.2") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.44") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1fy10ivj8b4yf67hfzy3rqb3swm01sqqywzglglq439cgxsp1kki") (r "1.65.0")))

(define-public crate-libp2p-noise-0.43.2 (c (n "libp2p-noise") (v "0.43.2") (d (list (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^4.1.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures_ringbuf") (r "^0.4.0") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.40.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.5") (f (quote ("ed25519"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiaddr") (r "^0.18.0") (d #t) (k 0)) (d (n "multihash") (r "^0.19.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snow") (r "^0.9.2") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.9.2") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "x25519-dalek") (r "^2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "08c95v6pch0rxwxk7gnfihh1fgzin82d6zcha5sngl1smlwyrvnj") (r "1.65.0")))

(define-public crate-libp2p-noise-0.44.0 (c (n "libp2p-noise") (v "0.44.0") (d (list (d (n "asynchronous-codec") (r "^0.7") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^4.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures_ringbuf") (r "^0.4.0") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.41.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("ed25519"))) (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 2)) (d (n "multiaddr") (r "^0.18.0") (d #t) (k 0)) (d (n "multihash") (r "^0.19.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snow") (r "^0.9.2") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "snow") (r "^0.9.2") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "x25519-dalek") (r "^2") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "14sps0mqqdaasg8al2iqnj9jd57ys3l7djsb8fjnwzq7rr2hbkcf") (r "1.73.0")))

