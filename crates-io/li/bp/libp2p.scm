(define-module (crates-io li bp libp2p) #:use-module (crates-io))

(define-public crate-libp2p-0.0.1 (c (n "libp2p") (v "0.0.1") (h "1jbdkbivx1chqvx4k461swj2001xwypykgkqarwinhhr5z0b4xyf")))

(define-public crate-libp2p-0.1.0 (c (n "libp2p") (v "0.1.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.1.0") (d #t) (t "cfg(not(target_os = \"emscripten\"))") (k 0)) (d (n "libp2p-floodsub") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.1.0") (d #t) (t "cfg(not(target_os = \"emscripten\"))") (k 0)) (d (n "libp2p-mplex") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-ratelimit") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.1.0") (k 0)) (d (n "libp2p-tcp") (r "^0.1.0") (d #t) (t "cfg(not(target_os = \"emscripten\"))") (k 0)) (d (n "libp2p-uds") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.1.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.1.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.1.0") (d #t) (k 0) (p "parity-multihash")) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "stdweb") (r "^0.1.3") (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-stdin-stdout") (r "^0.1") (d #t) (k 2)) (d (n "void") (r "^1.0") (d #t) (k 2)))) (h "0awx28mn1fw6zhyi5yrk9jgk01gsgjryy8khax8cys9awbak31yi") (f (quote (("secio-secp256k1" "libp2p-secio/secp256k1") ("secio-rsa" "libp2p-secio/rsa") ("default" "secio-rsa" "secio-secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.2.0 (c (n "libp2p") (v "0.2.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.2.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.2.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-ratelimit") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.2.0") (k 0)) (d (n "libp2p-tcp") (r "^0.2.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.2.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.1.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.1.0") (d #t) (k 0) (p "parity-multihash")) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "stdweb") (r "^0.4") (t "cfg(any(target_os = \"emscripten\", target_os = \"unknown\"))") (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-stdin-stdout") (r "^0.1") (d #t) (k 2)) (d (n "void") (r "^1.0") (d #t) (k 2)))) (h "1g0b3wpyawfz2zsx56lgwcc5bps9f5kaycrwn9xsqcmxq3qzd4ha") (f (quote (("secio-secp256k1" "libp2p-secio/secp256k1") ("secio-rsa" "libp2p-secio/rsa") ("default" "secio-rsa" "secio-secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.2.1 (c (n "libp2p") (v "0.2.1") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.2.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.2.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-ratelimit") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.2.0") (k 0)) (d (n "libp2p-tcp") (r "^0.2.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.2.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.1.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.1.0") (d #t) (k 0) (p "parity-multihash")) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "stdweb") (r "^0.4") (t "cfg(any(target_os = \"emscripten\", target_os = \"unknown\"))") (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-stdin-stdout") (r "^0.1") (d #t) (k 2)) (d (n "void") (r "^1.0") (d #t) (k 2)))) (h "1nscdp34npihm5a169y4z7h9n11lwsk2pkg2wgbkrjfjn3p2r2w1") (f (quote (("secio-secp256k1" "libp2p-secio/secp256k1") ("secio-rsa" "libp2p-secio/rsa") ("default" "secio-rsa" "secio-secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.2.2 (c (n "libp2p") (v "0.2.2") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.2.1") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.2.1") (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.2.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.2.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-ratelimit") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.2.0") (k 0)) (d (n "libp2p-tcp") (r "^0.2.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.2.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.1.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.1.0") (d #t) (k 0) (p "parity-multihash")) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "stdweb") (r "^0.4") (t "cfg(any(target_os = \"emscripten\", target_os = \"unknown\"))") (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-stdin-stdout") (r "^0.1") (d #t) (k 2)) (d (n "void") (r "^1.0") (d #t) (k 2)))) (h "0hj8nx53yib2gw0vnc6333119vhrldwy3r34akgyq39dx1bwwb7g") (f (quote (("secio-secp256k1" "libp2p-secio/secp256k1") ("secio-rsa" "libp2p-secio/rsa") ("default" "secio-rsa" "secio-secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.3.0 (c (n "libp2p") (v "0.3.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.3.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.3.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.1.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-ping") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-ratelimit") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.3.0") (k 0)) (d (n "libp2p-tcp") (r "^0.3.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.3.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.1.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.1.0") (d #t) (k 0) (p "parity-multihash")) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "stdweb") (r "^0.4") (t "cfg(any(target_os = \"emscripten\", target_os = \"unknown\"))") (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-stdin-stdout") (r "^0.1") (d #t) (k 2)) (d (n "void") (r "^1.0") (d #t) (k 2)))) (h "00r5cggvva7lm6hp4fbd23sikyxgms5981nf8z8fpi8vwhw2aipk") (f (quote (("secio-secp256k1" "libp2p-secio/secp256k1") ("default" "secio-secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.3.1 (c (n "libp2p") (v "0.3.1") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.3.2") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.3.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.3.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.1.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-ping") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-ratelimit") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.3.0") (k 0)) (d (n "libp2p-tcp") (r "^0.3.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.3.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.1.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.1.0") (d #t) (k 0) (p "parity-multihash")) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "stdweb") (r "^0.4") (t "cfg(any(target_os = \"emscripten\", target_os = \"unknown\"))") (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-stdin-stdout") (r "^0.1") (d #t) (k 2)) (d (n "void") (r "^1.0") (d #t) (k 2)))) (h "1pklbzqmd2cadzfgn9ki64bd0xfxh0swxnd47ad69k4s41b3dm8w") (f (quote (("secio-secp256k1" "libp2p-secio/secp256k1") ("default" "secio-secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.4.0 (c (n "libp2p") (v "0.4.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.4.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.4.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.1.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-ping") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-ratelimit") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.4.0") (k 0)) (d (n "libp2p-tcp") (r "^0.4.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.4.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.2.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.1.0") (d #t) (k 0) (p "parity-multihash")) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (t "cfg(any(target_os = \"emscripten\", target_os = \"unknown\"))") (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-stdin-stdout") (r "^0.1") (d #t) (k 2)) (d (n "void") (r "^1.0") (d #t) (k 2)))) (h "0srs6f76brr4mplxqc6d1jj0swz9spma2ysdh079zjkf2xn8zfnh") (f (quote (("secio-secp256k1" "libp2p-secio/secp256k1") ("default" "secio-secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.4.1 (c (n "libp2p") (v "0.4.1") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.4.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.4.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.2.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-ping") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-ratelimit") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.4.0") (k 0)) (d (n "libp2p-tcp") (r "^0.4.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.4.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.2.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.1.0") (d #t) (k 0) (p "parity-multihash")) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (t "cfg(any(target_os = \"emscripten\", target_os = \"unknown\"))") (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-stdin-stdout") (r "^0.1") (d #t) (k 2)) (d (n "void") (r "^1.0") (d #t) (k 2)))) (h "17hxl9mpv5kcskxk7gs62jsqz6as4gq2gcmv5s2pbnzh9lrs2650") (f (quote (("secio-secp256k1" "libp2p-secio/secp256k1") ("default" "secio-secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.4.2 (c (n "libp2p") (v "0.4.2") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.4.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.4.1") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.4.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.2.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-ping") (r "^0.4.1") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-ratelimit") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.4.0") (k 0)) (d (n "libp2p-tcp") (r "^0.4.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.4.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.2.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.1.0") (d #t) (k 0) (p "parity-multihash")) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (t "cfg(any(target_os = \"emscripten\", target_os = \"unknown\"))") (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-stdin-stdout") (r "^0.1") (d #t) (k 2)) (d (n "void") (r "^1.0") (d #t) (k 2)))) (h "1g2ikdfnvanfc1ya57x4dy8nsqdxlzl0aidzx9ss2vy9qia5sfdn") (f (quote (("secio-secp256k1" "libp2p-secio/secp256k1") ("default" "secio-secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.5.0 (c (n "libp2p") (v "0.5.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.5.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.5.0") (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.5.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.5.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.5.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.5.0") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.5.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.5.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.3.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-ping") (r "^0.5.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.5.0") (d #t) (k 0)) (d (n "libp2p-ratelimit") (r "^0.5.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.5.0") (k 0)) (d (n "libp2p-tcp") (r "^0.5.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.5.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.5.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.2.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.1.0") (d #t) (k 0) (p "parity-multihash")) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (t "cfg(any(target_os = \"emscripten\", target_os = \"unknown\"))") (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-stdin-stdout") (r "^0.1") (d #t) (k 2)) (d (n "void") (r "^1.0") (d #t) (k 2)))) (h "1ngrwf3v4xpd087d828dafhnksbgnb3mzibl19gkrw0c8yicbgln") (f (quote (("secio-secp256k1" "libp2p-secio/secp256k1") ("default" "secio-secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.6.0 (c (n "libp2p") (v "0.6.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.6.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.6.0") (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.6.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.6.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.6.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.6.0") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.6.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.6.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.4.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-ping") (r "^0.6.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.6.0") (d #t) (k 0)) (d (n "libp2p-ratelimit") (r "^0.6.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.6.0") (k 0)) (d (n "libp2p-tcp") (r "^0.6.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.6.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.6.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.2.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.1.0") (d #t) (k 0) (p "parity-multihash")) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (t "cfg(any(target_os = \"emscripten\", target_os = \"unknown\"))") (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-stdin-stdout") (r "^0.1") (d #t) (k 2)) (d (n "void") (r "^1.0") (d #t) (k 2)))) (h "1ch98yr50l16cl5l3s9b9yczhm9gvxm4iw5vs0pzlm6an4vwvfgm") (f (quote (("secio-secp256k1" "libp2p-secio/secp256k1") ("default" "secio-secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.7.0 (c (n "libp2p") (v "0.7.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.7.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.7.0") (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.7.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.7.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.7.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.7.0") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.7.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.7.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.5.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-ping") (r "^0.7.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.7.0") (d #t) (k 0)) (d (n "libp2p-ratelimit") (r "^0.7.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.7.0") (k 0)) (d (n "libp2p-tcp") (r "^0.7.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.7.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.7.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.4.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.1.0") (d #t) (k 0) (p "parity-multihash")) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "stdweb") (r "^0.4") (t "cfg(any(target_os = \"emscripten\", target_os = \"unknown\"))") (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-stdin-stdout") (r "^0.1") (d #t) (k 2)) (d (n "void") (r "^1.0") (d #t) (k 2)))) (h "1ah3626fanch5hvqqrglrs969csyfcwllj29fw5v6r0h8fmysc82") (f (quote (("secio-secp256k1" "libp2p-secio/secp256k1") ("default" "secio-secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.8.0 (c (n "libp2p") (v "0.8.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.8.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.8.0") (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.8.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.8.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.8.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.8.0") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.8.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.8.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.6.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-ping") (r "^0.8.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.8.0") (d #t) (k 0)) (d (n "libp2p-ratelimit") (r "^0.8.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.8.0") (k 0)) (d (n "libp2p-tcp") (r "^0.8.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.8.0") (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.8.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.4.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.1.0") (d #t) (k 0) (p "parity-multihash")) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-stdin-stdout") (r "^0.1") (d #t) (k 2)) (d (n "void") (r "^1.0") (d #t) (k 2)) (d (n "wasm-timer") (r "^0.1") (d #t) (k 0)))) (h "1dm677r58iagy6xgygh2fr8x07p6hw89r1wc6yv353r6cml0wf9h") (f (quote (("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("default" "secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.8.1 (c (n "libp2p") (v "0.8.1") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.8.1") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.8.0") (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.8.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.8.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.8.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.8.0") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.8.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.8.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.6.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-ping") (r "^0.8.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.8.0") (d #t) (k 0)) (d (n "libp2p-ratelimit") (r "^0.8.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.8.0") (k 0)) (d (n "libp2p-tcp") (r "^0.8.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.8.0") (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.8.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.4.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.1.0") (d #t) (k 0) (p "parity-multihash")) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-stdin-stdout") (r "^0.1") (d #t) (k 2)) (d (n "void") (r "^1.0") (d #t) (k 2)) (d (n "wasm-timer") (r "^0.1") (d #t) (k 0)))) (h "1ph5q1px68zyf8xxvgyswc1hpkpvw28gf73vhk5wi1ywdbwv66hl") (f (quote (("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("default" "secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.9.0 (c (n "libp2p") (v "0.9.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.9.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.9.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.7.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-ping") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-ratelimit") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.9.0") (k 0)) (d (n "libp2p-tcp") (r "^0.9.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.9.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.9.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.5.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.1.0") (d #t) (k 0) (p "parity-multihash")) (d (n "parking_lot") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-stdin-stdout") (r "^0.1") (d #t) (k 2)) (d (n "void") (r "^1.0") (d #t) (k 2)) (d (n "wasm-timer") (r "^0.1") (d #t) (k 0)))) (h "0q5wvhizprp62aa9jj32d3m8x0m1h7rcnwz25nhisif3c5zlf7gr") (f (quote (("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("default" "secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.9.1 (c (n "libp2p") (v "0.9.1") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.9.1") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.9.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.9.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.7.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-ping") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-ratelimit") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.9.0") (k 0)) (d (n "libp2p-tcp") (r "^0.9.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.9.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.9.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.5.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.1.0") (d #t) (k 0) (p "parity-multihash")) (d (n "parking_lot") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-stdin-stdout") (r "^0.1") (d #t) (k 2)) (d (n "void") (r "^1.0") (d #t) (k 2)) (d (n "wasm-timer") (r "^0.1") (d #t) (k 0)))) (h "0dzc7bvh6jvhz88bq5pdf5y8v8xixpfh4lm1w9mc0zbpzkkf9gba") (f (quote (("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("default" "secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.9.2 (c (n "libp2p") (v "0.9.2") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.9.1") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.9.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.9.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.7.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-ping") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-ratelimit") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.9.0") (k 0)) (d (n "libp2p-tcp") (r "^0.9.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.9.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.9.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.5.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.1.0") (d #t) (k 0) (p "parity-multihash")) (d (n "parking_lot") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-stdin-stdout") (r "^0.1") (d #t) (k 2)) (d (n "void") (r "^1.0") (d #t) (k 2)) (d (n "wasm-timer") (r "^0.1") (d #t) (k 0)))) (h "06nxl3j1ahavfvmkmpikd9ar3xbxdxigafjmcb6bq9ji9pm6mz15") (f (quote (("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("default" "secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.10.0 (c (n "libp2p") (v "0.10.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.10.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.10.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.2.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.10.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.10.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.10.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.10.0") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.10.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.10.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.8.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-ping") (r "^0.10.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.10.0") (d #t) (k 0)) (d (n "libp2p-ratelimit") (r "^0.10.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.10.0") (k 0)) (d (n "libp2p-tcp") (r "^0.10.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.10.0") (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.10.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.10.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.5.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.1.0") (d #t) (k 0) (p "parity-multihash")) (d (n "parking_lot") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-stdin-stdout") (r "^0.1") (d #t) (k 2)) (d (n "void") (r "^1.0") (d #t) (k 2)) (d (n "wasm-timer") (r "^0.1") (d #t) (k 0)))) (h "0s45al5xnhz3x60l2qh91771v6c6pyiy4li30xx9zf0cbfzb7xi9") (f (quote (("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("default" "secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.11.0 (c (n "libp2p") (v "0.11.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.11.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.11.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.3.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.11.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.11.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.11.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.11.0") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.11.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.11.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.9.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-ping") (r "^0.11.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.11.0") (d #t) (k 0)) (d (n "libp2p-ratelimit") (r "^0.11.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.11.0") (k 0)) (d (n "libp2p-swarm") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.11.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.11.0") (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.11.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.11.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.5.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.1.0") (d #t) (k 0) (p "parity-multihash")) (d (n "parking_lot") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-stdin-stdout") (r "^0.1") (d #t) (k 2)) (d (n "wasm-timer") (r "^0.1") (d #t) (k 0)))) (h "0z8yf7nmn04wln6x6zpdi3lv2m3jpxcjsjz1mb510c8ymr6l1cqq") (f (quote (("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("default" "secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.12.0 (c (n "libp2p") (v "0.12.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.12.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.12.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.4.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.12.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.12.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.12.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.12.0") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.12.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.12.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.10.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-ping") (r "^0.12.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.12.0") (d #t) (k 0)) (d (n "libp2p-ratelimit") (r "^0.12.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.12.0") (k 0)) (d (n "libp2p-swarm") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.12.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.12.0") (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.5.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.12.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.12.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.5.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.1.0") (d #t) (k 0) (p "parity-multihash")) (d (n "parking_lot") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-stdin-stdout") (r "^0.1") (d #t) (k 2)) (d (n "wasm-timer") (r "^0.1") (d #t) (k 0)))) (h "1nxcvx3mbr99rfirypwmxkkfjdz3daflj35ypfp7pn91wr5zp0s1") (f (quote (("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("default" "secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.13.0 (c (n "libp2p") (v "0.13.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.13.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.13.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.5.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.13.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.13.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.13.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.13.0") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.13.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.13.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.11.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-ping") (r "^0.13.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.13.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.13.0") (k 0)) (d (n "libp2p-swarm") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.13.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.13.0") (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.6.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.13.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.13.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.5.1") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.1.4") (d #t) (k 0) (p "parity-multihash")) (d (n "parking_lot") (r "^0.9.0") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-stdin-stdout") (r "^0.1") (d #t) (k 2)) (d (n "wasm-timer") (r "^0.1") (d #t) (k 0)))) (h "172cznqa9qzznmqrcj297hq9imillfclr6wi5qxpc1kcp4ldg8ws") (f (quote (("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("default" "secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.13.1 (c (n "libp2p") (v "0.13.1") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.13.1") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.13.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.5.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.13.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.13.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.13.1") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.13.1") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.13.1") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.13.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.11.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-ping") (r "^0.13.1") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.13.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.13.0") (k 0)) (d (n "libp2p-swarm") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.13.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.13.0") (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.6.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.13.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.13.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.6.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.2.0") (d #t) (k 0) (p "parity-multihash")) (d (n "parking_lot") (r "^0.9.0") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-stdin-stdout") (r "^0.1") (d #t) (k 2)) (d (n "wasm-timer") (r "^0.1") (d #t) (k 0)))) (h "08m7isiwvm5xsdycz01653wyj1v6zvvc0b3cbvzz1w1srn831awg") (f (quote (("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("default" "secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.13.2 (c (n "libp2p") (v "0.13.2") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.13.2") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.13.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.5.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.13.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.13.1") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.13.2") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.13.2") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.13.1") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.13.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.11.1") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-ping") (r "^0.13.1") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.13.1") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.13.1") (k 0)) (d (n "libp2p-swarm") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.13.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.13.0") (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.6.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.13.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.13.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.6.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.2.0") (d #t) (k 0) (p "parity-multihash")) (d (n "parking_lot") (r "^0.9.0") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-stdin-stdout") (r "^0.1") (d #t) (k 2)) (d (n "wasm-timer") (r "^0.1") (d #t) (k 0)))) (h "0zbi849yga7k83mzh9gy6b4qvxyfmd3d0k8hywf8ppcgfg378ilv") (f (quote (("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("default" "secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.14.0-alpha.1 (c (n "libp2p") (v "0.14.0-alpha.1") (d (list (d (n "async-std") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.14.0-alpha.1") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.14.0-alpha.1") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.6.0-alpha.1") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.14.0-alpha.1") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.14.0-alpha.1") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.14.0-alpha.1") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.14.0-alpha.1") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.14.0-alpha.1") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.14.0-alpha.1") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.12.0-alpha.1") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-ping") (r "^0.14.0-alpha.1") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.14.0-alpha.1") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.14.0-alpha.1") (k 0)) (d (n "libp2p-swarm") (r "^0.4.0-alpha.1") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.14.0-alpha.1") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.14.0-alpha.1") (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.14.0-alpha.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.14.0-alpha.1") (d #t) (k 0)) (d (n "multiaddr") (r "^0.7.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.2.1") (d #t) (k 0) (p "parity-multihash")) (d (n "parking_lot") (r "^0.9.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0h1mpcfbfc8h0637d81fjrxay3qqq9mxh1sj2bdk6xcyci8gi18c") (f (quote (("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("default" "secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.15.0 (c (n "libp2p") (v "0.15.0") (d (list (d (n "async-std") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.15.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.15.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.7.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.15.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.15.0") (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.15.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.15.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.15.0") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.15.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.15.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.13.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-ping") (r "^0.15.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.15.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.15.0") (k 0)) (d (n "libp2p-swarm") (r "^0.5.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.15.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.15.0") (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.8.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.15.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.15.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.7.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.2.1") (d #t) (k 0) (p "parity-multihash")) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0wg4xaa7ccn0chrcxnc615jdz1jqr1m6as0sjz2kyjxjk9w4fj7q") (f (quote (("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("default" "secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.16.0 (c (n "libp2p") (v "0.16.0") (d (list (d (n "async-std") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.16.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.16.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.16.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.16.0") (k 0)) (d (n "libp2p-swarm") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.16.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.16.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.16.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.7.2") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.2.1") (d #t) (k 0) (p "parity-multihash")) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "1s56lmd8830qr8jnj0ni1wccqzqqmkkfdfqmhaxwypsqp7qfr2x5") (f (quote (("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("default" "secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.16.1 (c (n "libp2p") (v "0.16.1") (d (list (d (n "async-std") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.16.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.16.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.16.1") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.16.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.16.1") (k 0)) (d (n "libp2p-swarm") (r "^0.16.1") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.16.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.16.1") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.16.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.16.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.7.2") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.2.1") (d #t) (k 0) (p "parity-multihash")) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "1yr6r288pv1yzlaqld2hps97h0dly2jwqg9d1w1y2l09a4mibgzn") (f (quote (("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("default" "secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.16.2 (c (n "libp2p") (v "0.16.2") (d (list (d (n "async-std") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.16.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.16.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.16.2") (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.16.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.16.2") (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.16.1") (k 0)) (d (n "libp2p-swarm") (r "^0.16.1") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.16.0") (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.16.2") (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.16.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.16.2") (d #t) (k 0)) (d (n "multiaddr") (r "^0.7.2") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.2.1") (d #t) (k 0) (p "parity-multihash")) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "090znwgcsh2rhxd7lsa1py9skw5lv5vrh58jb3g8kfy4rblpx8dv") (f (quote (("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("default" "secp256k1" "libp2p-websocket"))))))

(define-public crate-libp2p-0.17.0 (c (n "libp2p") (v "0.17.0") (d (list (d (n "async-std") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.17.1") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.17.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.17.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.17.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.17.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.17.0") (o #t) (k 0)) (d (n "libp2p-swarm") (r "^0.17.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.17.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.17.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.8.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.10") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "02bhv8mfdpwzml10kvnzl4rpgfmikrc37yigsvsmizypp12149la") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp" "libp2p-tcp") ("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("secio" "libp2p-secio") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "secio" "secp256k1" "tcp" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.18.0 (c (n "libp2p") (v "0.18.0") (d (list (d (n "async-std") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.18.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.18.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.18.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.18.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.18.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.18.0") (o #t) (k 0)) (d (n "libp2p-swarm") (r "^0.18.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.18.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.18.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.8.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.10") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "1arqfil61n543ciy1kywxjryiiaywf1q5gi9hn0pfrgp2fvysnma") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp" "libp2p-tcp") ("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("secio" "libp2p-secio") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "secio" "secp256k1" "tcp" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.18.1 (c (n "libp2p") (v "0.18.1") (d (list (d (n "async-std") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.18.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.18.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.18.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.18.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.18.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.18.0") (o #t) (k 0)) (d (n "libp2p-swarm") (r "^0.18.1") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.18.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.18.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.8.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.10") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0qln4q2rp5a0cd68k0v0pckypagmz7qah8w26nf6ans0hqn79sij") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp" "libp2p-tcp") ("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("secio" "libp2p-secio") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "secio" "secp256k1" "tcp" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.19.0 (c (n "libp2p") (v "0.19.0") (d (list (d (n "async-std") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.19.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.19.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.19.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.19.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.19.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.19.0") (o #t) (k 0)) (d (n "libp2p-swarm") (r "^0.19.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.19.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.19.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.9.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.11.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "1hcnmf9cq131d6j2na575jqhd3ap88a5mb3ry0948zmmi78i9hiy") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("secio" "libp2p-secio") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "secio" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.19.1 (c (n "libp2p") (v "0.19.1") (d (list (d (n "async-std") (r "< 1.6") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.19.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.19.1") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.19.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.19.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.19.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.19.1") (o #t) (k 0)) (d (n "libp2p-swarm") (r "^0.19.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.19.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.19.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.9.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.11.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0rxg85yxnnxf8992xz0vyys7djyhaf8krqf62gil1ryk69ablzh5") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("secio" "libp2p-secio") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "secio" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.20.0 (c (n "libp2p") (v "0.20.0") (d (list (d (n "async-std") (r "^1.5.0") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.19.2") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.19.1") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.19.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.19.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.19.2") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.19.2") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.19.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.19.2") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.19.3") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.19.2") (o #t) (k 0)) (d (n "libp2p-swarm") (r "^0.19.1") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.19.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.19.2") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.9.1") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.11.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.17") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "15y68fk73zp1s62ws1mry2d2f151sq4kvqa0f9m6lsq8266jsyj1") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("secio" "libp2p-secio") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "secio" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.20.1 (c (n "libp2p") (v "0.20.1") (d (list (d (n "async-std") (r "^1.5.0") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.19.2") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.19.1") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.19.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.19.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.19.3") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.19.2") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.19.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.19.2") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.19.3") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.19.2") (o #t) (k 0)) (d (n "libp2p-swarm") (r "^0.19.1") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.19.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.19.2") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.9.1") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.11.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.17") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "12rk54pas2hs3dfz45fr5758saamfn3cs0fbvzfskpjmycyi30fv") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("secio" "libp2p-secio") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "secio" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.21.0 (c (n "libp2p") (v "0.21.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.20.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.20.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.20.0") (o #t) (k 0)) (d (n "libp2p-swarm") (r "^0.20.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.9.1") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.11.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.17") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0fyr1gzj50kmzv771jy4bxgsgrhnvybd6bpc6chswwfw26djn2l3") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("secio" "libp2p-secio") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secio" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.21.1 (c (n "libp2p") (v "0.21.1") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.20.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.20.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.20.0") (o #t) (k 0)) (d (n "libp2p-swarm") (r "^0.20.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.21.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.9.1") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.11.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.17") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "1k9rqwz9azkawjlwdf2ayja5kcimgfw7r89577icv5xkz81ksx3d") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("secio" "libp2p-secio") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secio" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.22.0 (c (n "libp2p") (v "0.22.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.20.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.20.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.20.0") (o #t) (k 0)) (d (n "libp2p-swarm") (r "^0.20.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.21.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.9.1") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.11.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.17") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "11czhlfavmnwwbrsrj6ginc2ry7fn0v6z449c3wni558wsga81h3") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("secio" "libp2p-secio") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secio" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.23.0 (c (n "libp2p") (v "0.23.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "atomic") (r "^0.4.6") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.20.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.20.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.20.0") (o #t) (k 0)) (d (n "libp2p-swarm") (r "^0.20.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.21.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.9.1") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.11.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.17") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0p3bzyyg8l821wh665mklfqx1xaa0x5iwfpyh7qmljjq670bdsxi") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("secio" "libp2p-secio") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secio" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.24.0 (c (n "libp2p") (v "0.24.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "atomic") (r "^0.4.6") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.21.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.20.2") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.21.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.21.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.21.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libp2p-secio") (r "^0.21.0") (o #t) (k 0)) (d (n "libp2p-swarm") (r "^0.21.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.21.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.22.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.9.1") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.11.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.17") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("io-util" "io-std" "stream"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "1a5darvrci2wndl71mrl05jz6763mg97fnq8sigra1lwpgnh3hbn") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("secio" "libp2p-secio") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns-tokio" "libp2p-mdns" "libp2p-mdns/tokio") ("mdns-async-std" "libp2p-mdns" "libp2p-mdns/async-std") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns-async-std" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secio" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.25.0 (c (n "libp2p") (v "0.25.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "atomic") (r "^0.4.6") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.22.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.20.2") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.22.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.22.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.22.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.22.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.22.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.23.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.9.1") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.11.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.17") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("io-util" "io-std" "stream"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "17mac38vqq4l298v92d9szqizqg2nhnd9jkmi4rqvjl0xpvhw5x2") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns-tokio" "libp2p-mdns" "libp2p-mdns/tokio") ("mdns-async-std" "libp2p-mdns" "libp2p-mdns/async-std") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns-async-std" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.26.0 (c (n "libp2p") (v "0.26.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "atomic") (r "^0.4.6") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.22.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.20.2") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.22.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.22.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.22.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.22.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.22.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.23.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.9.1") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.11.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.17") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("io-util" "io-std" "stream"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "1nyfqmw0v20csh6mqyz2lkfndl3i4llsj34dwaz1b2vsv8blc8hi") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns-tokio" "libp2p-mdns" "libp2p-mdns/tokio") ("mdns-async-std" "libp2p-mdns" "libp2p-mdns/async-std") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns-async-std" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.27.0 (c (n "libp2p") (v "0.27.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "atomic") (r "^0.4.6") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.22.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.20.2") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.22.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.22.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.22.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.22.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.22.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.23.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.9.1") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.11.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.17") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("io-util" "io-std" "stream"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "1bnhbszg3llx98ikmrphabj0zpbqx73pkblkq60dr2dfxqd0jh9h") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns-tokio" "libp2p-mdns" "libp2p-mdns/tokio") ("mdns-async-std" "libp2p-mdns" "libp2p-mdns/async-std") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns-async-std" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.28.0 (c (n "libp2p") (v "0.28.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "atomic") (r "^0.4.6") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.22.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.20.2") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.22.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.22.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.22.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.22.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.22.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.23.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.9.1") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.11.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.17") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("io-util" "io-std" "stream"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "12zmp9464nhir2hd0qcxqs15swhcj2xr2dv9cjsmsrxmhy8gqdzi") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns-tokio" "libp2p-mdns" "libp2p-mdns/tokio") ("mdns-async-std" "libp2p-mdns" "libp2p-mdns/async-std") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns-async-std" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.28.1 (c (n "libp2p") (v "0.28.1") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "atomic") (r "^0.4.6") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.22.1") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.20.2") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.22.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.22.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.22.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.22.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.22.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.23.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.9.1") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.11.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.17") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("io-util" "io-std" "stream"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0x024b99fcl052apfyjkkwr1bb99vvgl388xcmshv9610i35l7sp") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns-tokio" "libp2p-mdns" "libp2p-mdns/tokio") ("mdns-async-std" "libp2p-mdns" "libp2p-mdns/async-std") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns-async-std" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.29.0 (c (n "libp2p") (v "0.29.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.23.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.20.2") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.23.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.23.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.23.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.19.2") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.23.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.23.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.24.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.9.3") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.11.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("io-util" "io-std" "stream" "macros"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "1bdnsd5c3nd4b29bf90c1pb80svzc33aib0siihfbbyc7znl0fcm") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns-tokio" "libp2p-mdns" "libp2p-mdns/tokio") ("mdns-async-std" "libp2p-mdns" "libp2p-mdns/async-std") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns-async-std" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.29.1 (c (n "libp2p") (v "0.29.1") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.23.1") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.20.2") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.23.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.23.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.23.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.19.2") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.23.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.23.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.24.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.9.3") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.11.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("io-util" "io-std" "stream" "macros"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "1kgxkpv5zjiaj9h87xgdgvavhffn8jicha4qxxwdmqznzqxp07q2") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns-tokio" "libp2p-mdns" "libp2p-mdns/tokio") ("mdns-async-std" "libp2p-mdns" "libp2p-mdns/async-std") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns-async-std" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.30.0 (c (n "libp2p") (v "0.30.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.24.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.20.2") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.24.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.24.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.24.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.19.2") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.24.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.24.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.25.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.9.4") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.11.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.3") (f (quote ("io-util" "io-std" "stream" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "01yqzlzhrl47sids1hb7dpcr8nx3dw598cglxjh5hip32ipjkh11") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns-tokio" "libp2p-mdns" "libp2p-mdns/tokio") ("mdns-async-std" "libp2p-mdns" "libp2p-mdns/async-std") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns-async-std" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.30.1 (c (n "libp2p") (v "0.30.1") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.24.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.20.2") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.24.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.24.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.24.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.19.2") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.24.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.24.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.25.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.9.4") (d #t) (k 0) (p "parity-multiaddr")) (d (n "multihash") (r "^0.11.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.3") (f (quote ("io-util" "io-std" "stream" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "12s39zvb3nihrhs3d22m0vznqgjxz6n2dhkgfj8bx647kz4v9hp3") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns-tokio" "libp2p-mdns" "libp2p-mdns/tokio") ("mdns-async-std" "libp2p-mdns" "libp2p-mdns/async-std") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns-async-std" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.31.0 (c (n "libp2p") (v "0.31.0") (d (list (d (n "async-std") (r ">=1.6.2, <2.0.0") (d #t) (k 2)) (d (n "atomic") (r ">=0.5.0, <0.6.0") (d #t) (k 0)) (d (n "bytes") (r ">=0.5.0, <0.6.0") (d #t) (k 0)) (d (n "env_logger") (r ">=0.8.1, <0.9.0") (d #t) (k 2)) (d (n "futures") (r ">=0.3.1, <0.4.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.2.0, <2.0.0") (d #t) (k 0)) (d (n "libp2p-core") (r ">=0.25.1, <0.26.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r ">=0.21.0, <0.22.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r ">=0.25.0, <0.26.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r ">=0.25.0, <0.26.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r ">=0.25.0, <0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r ">=0.25.0, <0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r ">=0.25.0, <0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r ">=0.26.0, <0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r ">=0.25.0, <0.26.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r ">=0.25.0, <0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r ">=0.27.0, <0.28.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r ">=0.25.0, <0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r ">=0.25.0, <0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r ">=0.19.2, <0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r ">=0.6.0, <0.7.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r ">=0.25.0, <0.26.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r ">=0.25.0, <0.26.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r ">=0.25.0, <0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r ">=0.25.0, <0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r ">=0.26.0, <0.27.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r ">=0.28.0, <0.29.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r ">=0.10.0, <0.11.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "parking_lot") (r ">=0.11.0, <0.12.0") (d #t) (k 0)) (d (n "pin-project") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "smallvec") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "tokio") (r ">=0.3.0, <0.4.0") (f (quote ("io-util" "io-std" "stream" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "wasm-timer") (r ">=0.2.4, <0.3.0") (d #t) (k 0)))) (h "1yknbvwhyy5vakgjl0l0fmz5hsz6hzxkgkcqddhh3hh4b4w0fkl2") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns-tokio" "libp2p-mdns" "libp2p-mdns/tokio") ("mdns-async-std" "libp2p-mdns" "libp2p-mdns/async-std") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns-async-std" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.31.1 (c (n "libp2p") (v "0.31.1") (d (list (d (n "async-std") (r ">=1.6.2, <2.0.0") (d #t) (k 2)) (d (n "atomic") (r ">=0.5.0, <0.6.0") (d #t) (k 0)) (d (n "bytes") (r ">=0.5.0, <0.6.0") (d #t) (k 0)) (d (n "env_logger") (r ">=0.8.1, <0.9.0") (d #t) (k 2)) (d (n "futures") (r ">=0.3.1, <0.4.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.2.0, <2.0.0") (d #t) (k 0)) (d (n "libp2p-core") (r ">=0.25.1, <0.26.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r ">=0.21.0, <0.22.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r ">=0.25.0, <0.26.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r ">=0.25.0, <0.26.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r ">=0.25.0, <0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r ">=0.25.0, <0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r ">=0.25.0, <0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r ">=0.26.0, <0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r ">=0.25.0, <0.26.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r ">=0.25.0, <0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r ">=0.27.0, <0.28.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r ">=0.25.0, <0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r ">=0.25.0, <0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r ">=0.19.2, <0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r ">=0.6.0, <0.7.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r ">=0.25.0, <0.26.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r ">=0.25.1, <0.26.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r ">=0.25.0, <0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r ">=0.25.0, <0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r ">=0.26.0, <0.27.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r ">=0.28.0, <0.29.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r ">=0.10.0, <0.11.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "parking_lot") (r ">=0.11.0, <0.12.0") (d #t) (k 0)) (d (n "pin-project") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "smallvec") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "tokio") (r ">=0.3.0, <0.4.0") (f (quote ("io-util" "io-std" "stream" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "wasm-timer") (r ">=0.2.4, <0.3.0") (d #t) (k 0)))) (h "07a5fjx6700r9pc7wcynnhva8vfbcxgkc9dh2k7sc92nrirnx5i4") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns-tokio" "libp2p-mdns" "libp2p-mdns/tokio") ("mdns-async-std" "libp2p-mdns" "libp2p-mdns/async-std") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns-async-std" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.31.2 (c (n "libp2p") (v "0.31.2") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.25.2") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.21.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.25.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.25.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.25.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.19.2") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.25.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.25.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.26.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.10.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.3") (f (quote ("io-util" "io-std" "stream" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0vrr9yrim198ppfrkqzgwf1c72hvw09apgbymkygws2336ilcj3j") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns-tokio" "libp2p-mdns" "libp2p-mdns/tokio") ("mdns-async-std" "libp2p-mdns" "libp2p-mdns/async-std") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns-async-std" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.32.0 (c (n "libp2p") (v "0.32.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.25.2") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.21.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.25.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.25.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.26.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.19.2") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.25.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.25.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.26.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.10.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.3") (f (quote ("io-util" "io-std" "stream" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0wgf6dcvrcb516xd2zjzy0a6rpckx3grnrn3cijb0mmssh61xizs") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.32.1 (c (n "libp2p") (v "0.32.1") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.25.2") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.21.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.25.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.25.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.26.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.19.2") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.25.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.25.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.26.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.10.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.3") (f (quote ("io-util" "io-std" "stream" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "05qa1fk01gyds5wav2mdky2225d2qh131a5fjigd29zx8l5z26ll") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.32.2 (c (n "libp2p") (v "0.32.2") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.25.2") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.21.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.25.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.25.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.26.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.19.2") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.25.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.25.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.26.3") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.10.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.3") (f (quote ("io-util" "io-std" "stream" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "03igvnc0xahy5jfnd57g3qgpvysddmwr3rc1wlny2jqjmg2dlb02") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.33.0 (c (n "libp2p") (v "0.33.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.26.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.21.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.26.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.26.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.27.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.26.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.26.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.27.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.10.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.3") (f (quote ("io-util" "io-std" "stream" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "1235y130s7bq78j23n2i2lrargvl61j0p162rh0gjpzynlvcc5rf") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.34.0 (c (n "libp2p") (v "0.34.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.0") (d #t) (k 0)) (d (n "libp2p-core-derive") (r "^0.21.0") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.27.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.27.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.28.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.27.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.27.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.28.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.11.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0flgj03gywnifzp7la9wx74vpmjxc0mfjyx8ys199gj2rq9324ym") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.35.0 (c (n "libp2p") (v "0.35.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.1") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.27.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.27.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.28.1") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.28.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.27.2") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.22.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.27.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.28.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.11.1") (d #t) (k 0) (p "parity-multiaddr")) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "1ry6122avlb46nn08yk27rqxb1h0578p09hz0pgja205g52ms7sd") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.35.1 (c (n "libp2p") (v "0.35.1") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.1") (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.27.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.27.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.28.1") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.28.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.27.2") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.22.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.27.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.28.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.30.1") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.11.1") (d #t) (k 0) (p "parity-multiaddr")) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0nn9y3w1agv2pd5q4q5pz6fjknhcix5nmp8c1nqrmkvkk6j2bhmd") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.36.0 (c (n "libp2p") (v "0.36.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.28.0") (k 0)) (d (n "libp2p-deflate") (r "^0.28.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.28.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.29.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.28.0") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.22.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.28.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.28.0") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.29.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.11.2") (d #t) (k 0) (p "parity-multiaddr")) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "03a7fcw1360dj8smz6yi5r8bzd03crbdir0mkj104lgp4ssmjmzy") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("relay" "libp2p-relay") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns-tokio" "libp2p-dns" "libp2p-dns/tokio") ("dns-async-std" "libp2p-dns" "libp2p-dns/async-std") ("deflate" "libp2p-deflate") ("default" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.37.0 (c (n "libp2p") (v "0.37.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.28.2") (k 0)) (d (n "libp2p-deflate") (r "^0.28.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.28.1") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.30.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.29.0") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.22.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.28.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.28.1") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.29.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.11.2") (d #t) (k 0) (p "parity-multiaddr")) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0pmbjikc0bkf7bf5c4kx16mkxxgyjn1hfqnnwfvx9ib85bh35c7y") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("relay" "libp2p-relay") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns-tokio" "libp2p-dns" "libp2p-dns/tokio") ("dns-async-std" "libp2p-dns" "libp2p-dns/async-std") ("deflate" "libp2p-deflate") ("default" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux")))) (y #t)))

(define-public crate-libp2p-0.37.1 (c (n "libp2p") (v "0.37.1") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.28.2") (k 0)) (d (n "libp2p-deflate") (r "^0.28.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.28.1") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.30.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.29.0") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.23.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.28.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.28.1") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.29.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.11.2") (d #t) (k 0) (p "parity-multiaddr")) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "06vlrf49mmh4lhzjqwfp9q5kgkifrax5xagpkq27gmvwysz3y188") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("relay" "libp2p-relay") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns-tokio" "libp2p-dns" "libp2p-dns/tokio") ("dns-async-std" "libp2p-dns" "libp2p-dns/async-std") ("deflate" "libp2p-deflate") ("default" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.38.0 (c (n "libp2p") (v "0.38.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.28.3") (k 0)) (d (n "libp2p-deflate") (r "^0.28.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.28.1") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.30.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.29.0") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.23.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.28.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.28.2") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.29.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.11.2") (d #t) (k 0) (p "parity-multiaddr")) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0666y3jwfs0yfl1iir540p55kjhnbj176348f2wmpv2arvp1gfzb") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("relay" "libp2p-relay") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns-tokio" "libp2p-dns" "libp2p-dns/tokio") ("dns-async-std" "libp2p-dns" "libp2p-dns/async-std") ("deflate" "libp2p-deflate") ("default" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.39.0 (c (n "libp2p") (v "0.39.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.29.0") (k 0)) (d (n "libp2p-deflate") (r "^0.29.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.29.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.31.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.30.0") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.23.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.29.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.29.0") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.30.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0cmgxmzn7cv4y0gpscnv6lcxx1gjfr5wyjxvf7kv4yd846kj3xpy") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("relay" "libp2p-relay") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns-tokio" "libp2p-dns" "libp2p-dns/tokio") ("dns-async-std" "libp2p-dns" "libp2p-dns/async-std") ("deflate" "libp2p-deflate") ("default" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux")))) (y #t)))

(define-public crate-libp2p-0.39.1 (c (n "libp2p") (v "0.39.1") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.29.0") (k 0)) (d (n "libp2p-deflate") (r "^0.29.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.29.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.31.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-mplex") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.30.0") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.24.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.29.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.29.0") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.30.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0cz4dsri75z44cigi1vjfyzj1vc71la9mrk7815kp3zgg1lc014h") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("relay" "libp2p-relay") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns-tokio" "libp2p-dns" "libp2p-dns/tokio") ("dns-async-std" "libp2p-dns" "libp2p-dns/async-std") ("deflate" "libp2p-deflate") ("default" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.40.0-rc.1 (c (n "libp2p") (v "0.40.0-rc.1") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.30.0-rc.1") (k 0)) (d (n "libp2p-deflate") (r "^0.30.0-rc.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.30.0-rc.1") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.31.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.33.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.31.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.32.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.32.0-rc.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-metrics") (r "^0.1.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.30.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.33.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.31.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.30.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.4.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.1.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.13.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.31.0-rc.1") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.25.0-rc.1") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.30.0-rc.1") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.30.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.30.0-rc.1") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.31.0-rc.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.34.0-rc.1") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.13.0-rc.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "1vkvk9raw11gvc93ncxp6k54spw1vw1mvly8m8x8z8iim6pqwhlg") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("wasm-bindgen" "parking_lot/wasm-bindgen") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("rendezvous" "libp2p-rendezvous") ("relay" "libp2p-relay") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping" "libp2p-metrics/ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("metrics" "libp2p-metrics") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad" "libp2p-metrics/kad") ("identify" "libp2p-identify" "libp2p-metrics/identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns-tokio" "libp2p-dns" "libp2p-dns/tokio") ("dns-async-std" "libp2p-dns" "libp2p-dns/async-std") ("deflate" "libp2p-deflate") ("default" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "rendezvous" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.40.0-rc.2 (c (n "libp2p") (v "0.40.0-rc.2") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.30.0-rc.1") (k 0)) (d (n "libp2p-deflate") (r "^0.30.0-rc.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.30.0-rc.1") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.31.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.33.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.31.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.32.0-rc.2") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.32.0-rc.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-metrics") (r "^0.1.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.30.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.33.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.31.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.30.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.4.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.1.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.13.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.31.0-rc.1") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.25.0-rc.1") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.30.0-rc.1") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.30.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.30.0-rc.1") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.31.0-rc.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.34.0-rc.1") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.13.0-rc.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0900fq3rn0fr84qwgyfmk8prlb195d2hsy5im5470c1vchisvbqp") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("wasm-bindgen" "parking_lot/wasm-bindgen") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("rendezvous" "libp2p-rendezvous") ("relay" "libp2p-relay") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping" "libp2p-metrics/ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("metrics" "libp2p-metrics") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad" "libp2p-metrics/kad") ("identify" "libp2p-identify" "libp2p-metrics/identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns-tokio" "libp2p-dns" "libp2p-dns/tokio") ("dns-async-std" "libp2p-dns" "libp2p-dns/async-std") ("deflate" "libp2p-deflate") ("default" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "rendezvous" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.40.0-rc.3 (c (n "libp2p") (v "0.40.0-rc.3") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.30.0-rc.2") (k 0)) (d (n "libp2p-deflate") (r "^0.30.0-rc.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.30.0-rc.1") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.31.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.33.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.31.0-rc.2") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.32.0-rc.2") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.32.0-rc.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-metrics") (r "^0.1.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.30.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.33.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.31.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.30.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.4.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.1.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.13.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.31.0-rc.2") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.25.0-rc.1") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.30.0-rc.1") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.30.0-rc.1") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.30.0-rc.1") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.31.0-rc.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.34.0-rc.1") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.13.0-rc.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "1rg91f02vjmjryygxw93fzbyz0lskni2284xx7pc7bzc9gnvszkv") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("wasm-bindgen" "parking_lot/wasm-bindgen") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("rendezvous" "libp2p-rendezvous") ("relay" "libp2p-relay") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping" "libp2p-metrics/ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("metrics" "libp2p-metrics") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad" "libp2p-metrics/kad") ("identify" "libp2p-identify" "libp2p-metrics/identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns-tokio" "libp2p-dns" "libp2p-dns/tokio") ("dns-async-std" "libp2p-dns" "libp2p-dns/async-std") ("deflate" "libp2p-deflate") ("default" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "rendezvous" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.40.0 (c (n "libp2p") (v "0.40.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.30.0") (k 0)) (d (n "libp2p-deflate") (r "^0.30.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.30.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.32.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-metrics") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.31.0") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.25.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.30.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.30.0") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.31.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "178dzlnygv7b5z19pi98bn1kj4bjqq9famf5lr05kflj6hs59v1v") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("wasm-bindgen" "parking_lot/wasm-bindgen") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("rendezvous" "libp2p-rendezvous") ("relay" "libp2p-relay") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping" "libp2p-metrics/ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("metrics" "libp2p-metrics") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad" "libp2p-metrics/kad") ("identify" "libp2p-identify" "libp2p-metrics/identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns-tokio" "libp2p-dns" "libp2p-dns/tokio") ("dns-async-std" "libp2p-dns" "libp2p-dns/async-std") ("deflate" "libp2p-deflate") ("default" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "rendezvous" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.41.0 (c (n "libp2p") (v "0.41.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.30.0") (k 0)) (d (n "libp2p-deflate") (r "^0.30.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.30.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.33.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-metrics") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.32.0") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.26.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.30.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.30.0") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.32.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "0jp6yq9qns0skj6i2zgfbvbz16dsc3hzf27fwcpb3mgp1gwjj8kq") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "parking_lot/wasm-bindgen" "getrandom/js" "rand/wasm-bindgen") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("rendezvous" "libp2p-rendezvous") ("relay" "libp2p-relay") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping" "libp2p-metrics/ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("metrics" "libp2p-metrics") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad" "libp2p-metrics/kad") ("identify" "libp2p-identify" "libp2p-metrics/identify") ("gossipsub" "libp2p-gossipsub" "libp2p-metrics/gossipsub") ("floodsub" "libp2p-floodsub") ("dns-tokio" "libp2p-dns" "libp2p-dns/tokio") ("dns-async-std" "libp2p-dns" "libp2p-dns/async-std") ("deflate" "libp2p-deflate") ("default" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "rendezvous" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.41.1 (c (n "libp2p") (v "0.41.1") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.30.0") (k 0)) (d (n "libp2p-deflate") (r "^0.30.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.30.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.32.1") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.33.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-metrics") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.32.0") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.26.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.30.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.30.0") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.32.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "0clcsrf2b6cdid4qn27pgkv478v0c88x3q4w2sqv3l9yq87vgi9f") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "parking_lot/wasm-bindgen" "getrandom/js" "rand/wasm-bindgen") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("rendezvous" "libp2p-rendezvous") ("relay" "libp2p-relay") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping" "libp2p-metrics/ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("metrics" "libp2p-metrics") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad" "libp2p-metrics/kad") ("identify" "libp2p-identify" "libp2p-metrics/identify") ("gossipsub" "libp2p-gossipsub" "libp2p-metrics/gossipsub") ("floodsub" "libp2p-floodsub") ("dns-tokio" "libp2p-dns" "libp2p-dns/tokio") ("dns-async-std" "libp2p-dns" "libp2p-dns/async-std") ("deflate" "libp2p-deflate") ("default" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "rendezvous" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.42.0 (c (n "libp2p") (v "0.42.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.31.0") (k 0)) (d (n "libp2p-deflate") (r "^0.31.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.31.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.34.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-metrics") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.33.0") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.26.1") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.31.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.31.0") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.33.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "0pzl443igrxiscs88qx8m6ixmqinji8yzpgrs14rfr49ndn0jyxg") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "parking_lot/wasm-bindgen" "getrandom/js" "rand/wasm-bindgen") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("serde" "libp2p-core/serde" "libp2p-kad/serde" "libp2p-gossipsub/serde") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("rendezvous" "libp2p-rendezvous") ("relay" "libp2p-relay" "libp2p-metrics/relay") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping" "libp2p-metrics/ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("metrics" "libp2p-metrics") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad" "libp2p-metrics/kad") ("identify" "libp2p-identify" "libp2p-metrics/identify") ("gossipsub" "libp2p-gossipsub" "libp2p-metrics/gossipsub") ("floodsub" "libp2p-floodsub") ("dns-tokio" "libp2p-dns" "libp2p-dns/tokio") ("dns-async-std" "libp2p-dns" "libp2p-dns/async-std") ("deflate" "libp2p-deflate") ("default" "autonat" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "rendezvous" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux") ("autonat" "libp2p-autonat")))) (r "1.56.1")))

(define-public crate-libp2p-0.42.1 (c (n "libp2p") (v "0.42.1") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.31.0") (k 0)) (d (n "libp2p-deflate") (r "^0.31.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.31.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.34.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-metrics") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.33.0") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.26.1") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.31.1") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.31.0") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.33.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "1n1fc9g6lrnp9jr24aqh9x078h10akdz5ibgwkpa49d81213dclq") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "parking_lot/wasm-bindgen" "getrandom/js" "rand/wasm-bindgen") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("serde" "libp2p-core/serde" "libp2p-kad/serde" "libp2p-gossipsub/serde") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("rendezvous" "libp2p-rendezvous") ("relay" "libp2p-relay" "libp2p-metrics/relay") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping" "libp2p-metrics/ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("metrics" "libp2p-metrics") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad" "libp2p-metrics/kad") ("identify" "libp2p-identify" "libp2p-metrics/identify") ("gossipsub" "libp2p-gossipsub" "libp2p-metrics/gossipsub") ("floodsub" "libp2p-floodsub") ("dns-tokio" "libp2p-dns" "libp2p-dns/tokio") ("dns-async-std" "libp2p-dns" "libp2p-dns/async-std") ("deflate" "libp2p-deflate") ("default" "autonat" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "rendezvous" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux") ("autonat" "libp2p-autonat")))) (r "1.56.1")))

(define-public crate-libp2p-0.42.2 (c (n "libp2p") (v "0.42.2") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.31.1") (k 0)) (d (n "libp2p-deflate") (r "^0.31.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.31.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.34.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-metrics") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.33.0") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.26.1") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.31.1") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.31.0") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.33.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "10bk3pbg6k6inw22pwc9bxnwjqd1i7rfjyyyln35capi0qdjyn8g") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "parking_lot/wasm-bindgen" "getrandom/js" "rand/wasm-bindgen") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("serde" "libp2p-core/serde" "libp2p-kad/serde" "libp2p-gossipsub/serde") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("rendezvous" "libp2p-rendezvous") ("relay" "libp2p-relay" "libp2p-metrics/relay") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping" "libp2p-metrics/ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("metrics" "libp2p-metrics") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad" "libp2p-metrics/kad") ("identify" "libp2p-identify" "libp2p-metrics/identify") ("gossipsub" "libp2p-gossipsub" "libp2p-metrics/gossipsub") ("floodsub" "libp2p-floodsub") ("dns-tokio" "libp2p-dns" "libp2p-dns/tokio") ("dns-async-std" "libp2p-dns" "libp2p-dns/async-std") ("deflate" "libp2p-deflate") ("default" "autonat" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "rendezvous" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux") ("autonat" "libp2p-autonat")))) (r "1.56.1")))

(define-public crate-libp2p-0.41.2 (c (n "libp2p") (v "0.41.2") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.30.2") (k 0)) (d (n "libp2p-deflate") (r "^0.30.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.30.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.32.1") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.33.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-metrics") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.32.0") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.26.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.30.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.30.0") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.32.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "1nsg65hayx4wzg062n3y90cxrhskla35v2yl9ib71240fbaza03f") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "parking_lot/wasm-bindgen" "getrandom/js" "rand/wasm-bindgen") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("rendezvous" "libp2p-rendezvous") ("relay" "libp2p-relay") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping" "libp2p-metrics/ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("metrics" "libp2p-metrics") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad" "libp2p-metrics/kad") ("identify" "libp2p-identify" "libp2p-metrics/identify") ("gossipsub" "libp2p-gossipsub" "libp2p-metrics/gossipsub") ("floodsub" "libp2p-floodsub") ("dns-tokio" "libp2p-dns" "libp2p-dns/tokio") ("dns-async-std" "libp2p-dns" "libp2p-dns/async-std") ("deflate" "libp2p-deflate") ("default" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "rendezvous" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-libp2p-0.43.0 (c (n "libp2p") (v "0.43.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.32.0") (k 0)) (d (n "libp2p-dcutr") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.32.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.32.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.36.0") (o #t) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "libp2p-identify") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.35.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-metrics") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.34.0") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.27.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.32.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.32.0") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.34.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.14.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "1y9mkw18m4m8w623vw2217jkw3m01daazgjx822l6gd0bzi711af") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js" "rand/wasm-bindgen") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("serde" "libp2p-core/serde" "libp2p-kad/serde" "libp2p-gossipsub/serde") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("rendezvous" "libp2p-rendezvous") ("relay" "libp2p-relay" "libp2p-metrics/relay") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping" "libp2p-metrics/ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("metrics" "libp2p-metrics") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad" "libp2p-metrics/kad") ("identify" "libp2p-identify" "libp2p-metrics/identify") ("gossipsub" "libp2p-gossipsub" "libp2p-metrics/gossipsub") ("floodsub" "libp2p-floodsub") ("dns-tokio" "libp2p-dns" "libp2p-dns/tokio") ("dns-async-std" "libp2p-dns" "libp2p-dns/async-std") ("deflate" "libp2p-deflate") ("default" "autonat" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "rendezvous" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux") ("dcutr" "libp2p-dcutr" "libp2p-metrics/dcutr") ("autonat" "libp2p-autonat")))) (r "1.56.1")))

(define-public crate-libp2p-0.44.0 (c (n "libp2p") (v "0.44.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.32.1") (k 0)) (d (n "libp2p-dcutr") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.32.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.32.1") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.37.0") (o #t) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "libp2p-identify") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.36.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-metrics") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.35.0") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.27.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.32.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.32.0") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.34.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.14.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "03svzlv4w61x217x5i1r1n7vmz5b71dy0vlza4xfa9wp9anf4p27") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js" "rand/wasm-bindgen") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("serde" "libp2p-core/serde" "libp2p-kad/serde" "libp2p-gossipsub/serde") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("rendezvous" "libp2p-rendezvous") ("relay" "libp2p-relay" "libp2p-metrics/relay") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping" "libp2p-metrics/ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("metrics" "libp2p-metrics") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad" "libp2p-metrics/kad") ("identify" "libp2p-identify" "libp2p-metrics/identify") ("gossipsub" "libp2p-gossipsub" "libp2p-metrics/gossipsub") ("floodsub" "libp2p-floodsub") ("dns-tokio" "libp2p-dns" "libp2p-dns/tokio") ("dns-async-std" "libp2p-dns" "libp2p-dns/async-std") ("deflate" "libp2p-deflate") ("default" "autonat" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "rendezvous" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux") ("dcutr" "libp2p-dcutr" "libp2p-metrics/dcutr") ("autonat" "libp2p-autonat")))) (r "1.56.1")))

(define-public crate-libp2p-0.45.0 (c (n "libp2p") (v "0.45.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.33.0") (k 0)) (d (n "libp2p-dcutr") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.33.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.33.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.38.0") (o #t) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "libp2p-identify") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.37.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-metrics") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.36.0") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.27.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.33.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.33.0") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.35.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.14.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "19nvgcp92lnxv9w1mdgpyw54zjaa4viyjm3g3gcnd8byhfdilm7k") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js" "rand/wasm-bindgen") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("serde" "libp2p-core/serde" "libp2p-kad/serde" "libp2p-gossipsub/serde") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("rendezvous" "libp2p-rendezvous") ("relay" "libp2p-relay" "libp2p-metrics/relay") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping" "libp2p-metrics/ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("metrics" "libp2p-metrics") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad" "libp2p-metrics/kad") ("identify" "libp2p-identify" "libp2p-metrics/identify") ("gossipsub" "libp2p-gossipsub" "libp2p-metrics/gossipsub") ("floodsub" "libp2p-floodsub") ("dns-tokio" "libp2p-dns" "libp2p-dns/tokio") ("dns-async-std" "libp2p-dns" "libp2p-dns/async-std") ("deflate" "libp2p-deflate") ("default" "autonat" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "rendezvous" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux") ("dcutr" "libp2p-dcutr" "libp2p-metrics/dcutr") ("autonat" "libp2p-autonat")))) (r "1.56.1")))

(define-public crate-libp2p-0.45.1 (c (n "libp2p") (v "0.45.1") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.33.0") (k 0)) (d (n "libp2p-dcutr") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.33.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.33.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.38.0") (o #t) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "libp2p-identify") (r "^0.36.1") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.37.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-metrics") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.36.1") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.27.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.33.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.33.0") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.35.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.14.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "0ach18xcxm1rhkygnly9p3nchz032i5lhb9dpapkymk2yvl6wwj1") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js" "rand/wasm-bindgen") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("serde" "libp2p-core/serde" "libp2p-kad/serde" "libp2p-gossipsub/serde") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("rendezvous" "libp2p-rendezvous") ("relay" "libp2p-relay" "libp2p-metrics/relay") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping" "libp2p-metrics/ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("metrics" "libp2p-metrics") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad" "libp2p-metrics/kad") ("identify" "libp2p-identify" "libp2p-metrics/identify") ("gossipsub" "libp2p-gossipsub" "libp2p-metrics/gossipsub") ("floodsub" "libp2p-floodsub") ("dns-tokio" "libp2p-dns" "libp2p-dns/tokio") ("dns-async-std" "libp2p-dns" "libp2p-dns/async-std") ("deflate" "libp2p-deflate") ("default" "autonat" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "rendezvous" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux") ("dcutr" "libp2p-dcutr" "libp2p-metrics/dcutr") ("autonat" "libp2p-autonat")))) (r "1.56.1")))

(define-public crate-libp2p-0.46.0 (c (n "libp2p") (v "0.46.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.34.0") (k 0)) (d (n "libp2p-dcutr") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.34.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.34.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "libp2p-identify") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.38.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-metrics") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.37.0") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.27.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.34.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.34.0") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.36.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.14.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "0ivag7s0g8gwqqs5qvfm1f9bg2qrlmb8j20c95dp0pgxxlsjqr48") (f (quote (("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js" "rand/wasm-bindgen") ("secp256k1" "libp2p-core/secp256k1") ("default" "autonat" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "rendezvous" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux")))) (s 2) (e (quote (("yamux" "dep:libp2p-yamux") ("websocket" "dep:libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext?/websocket") ("wasm-ext" "dep:libp2p-wasm-ext") ("uds" "dep:libp2p-uds") ("tcp-tokio" "dep:libp2p-tcp" "libp2p-tcp?/tokio") ("tcp-async-io" "dep:libp2p-tcp" "libp2p-tcp?/async-io") ("serde" "libp2p-core/serde" "libp2p-kad?/serde" "libp2p-gossipsub?/serde") ("request-response" "dep:libp2p-request-response") ("rendezvous" "dep:libp2p-rendezvous") ("relay" "dep:libp2p-relay" "libp2p-metrics?/relay") ("pnet" "dep:libp2p-pnet") ("plaintext" "dep:libp2p-plaintext") ("ping" "dep:libp2p-ping" "libp2p-metrics?/ping") ("noise" "dep:libp2p-noise") ("mplex" "dep:libp2p-mplex") ("metrics" "dep:libp2p-metrics") ("mdns" "dep:libp2p-mdns") ("kad" "dep:libp2p-kad" "libp2p-metrics?/kad") ("identify" "dep:libp2p-identify" "libp2p-metrics?/identify") ("gossipsub" "dep:libp2p-gossipsub" "libp2p-metrics?/gossipsub") ("floodsub" "dep:libp2p-floodsub") ("dns-tokio" "dep:libp2p-dns" "libp2p-dns?/tokio") ("dns-async-std" "dep:libp2p-dns" "libp2p-dns?/async-std") ("deflate" "dep:libp2p-deflate") ("dcutr" "dep:libp2p-dcutr" "libp2p-metrics?/dcutr") ("autonat" "dep:libp2p-autonat")))) (r "1.60.0")))

(define-public crate-libp2p-0.46.1 (c (n "libp2p") (v "0.46.1") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.34.0") (k 0)) (d (n "libp2p-dcutr") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.34.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.34.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "libp2p-identify") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.38.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-metrics") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.37.0") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.28.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.34.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.34.0") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.36.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.14.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "07b1hls83k728p75zff10wp2xgkm6vwzxcfszc2d0hkyi0372cl1") (f (quote (("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js" "rand/wasm-bindgen") ("secp256k1" "libp2p-core/secp256k1") ("default" "autonat" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "rendezvous" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux")))) (s 2) (e (quote (("yamux" "dep:libp2p-yamux") ("websocket" "dep:libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext?/websocket") ("wasm-ext" "dep:libp2p-wasm-ext") ("uds" "dep:libp2p-uds") ("tcp-tokio" "dep:libp2p-tcp" "libp2p-tcp?/tokio") ("tcp-async-io" "dep:libp2p-tcp" "libp2p-tcp?/async-io") ("serde" "libp2p-core/serde" "libp2p-kad?/serde" "libp2p-gossipsub?/serde") ("request-response" "dep:libp2p-request-response") ("rendezvous" "dep:libp2p-rendezvous") ("relay" "dep:libp2p-relay" "libp2p-metrics?/relay") ("pnet" "dep:libp2p-pnet") ("plaintext" "dep:libp2p-plaintext") ("ping" "dep:libp2p-ping" "libp2p-metrics?/ping") ("noise" "dep:libp2p-noise") ("mplex" "dep:libp2p-mplex") ("metrics" "dep:libp2p-metrics") ("mdns" "dep:libp2p-mdns") ("kad" "dep:libp2p-kad" "libp2p-metrics?/kad") ("identify" "dep:libp2p-identify" "libp2p-metrics?/identify") ("gossipsub" "dep:libp2p-gossipsub" "libp2p-metrics?/gossipsub") ("floodsub" "dep:libp2p-floodsub") ("dns-tokio" "dep:libp2p-dns" "libp2p-dns?/tokio") ("dns-async-std" "dep:libp2p-dns" "libp2p-dns?/async-std") ("deflate" "dep:libp2p-deflate") ("dcutr" "dep:libp2p-dcutr" "libp2p-metrics?/dcutr") ("autonat" "dep:libp2p-autonat")))) (r "1.60.0")))

(define-public crate-libp2p-0.47.0 (c (n "libp2p") (v "0.47.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.35.0") (k 0)) (d (n "libp2p-dcutr") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.35.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.35.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.40.0") (o #t) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "libp2p-identify") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-metrics") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.38.0") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.29.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.35.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.35.0") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.37.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.14.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "0zln0bzvx4282n1as9bq25rdlwwi0678q58554926a0kivcc8z1f") (f (quote (("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js" "rand/wasm-bindgen") ("secp256k1" "libp2p-core/secp256k1") ("default" "autonat" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "rendezvous" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux")))) (s 2) (e (quote (("yamux" "dep:libp2p-yamux") ("websocket" "dep:libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext?/websocket") ("wasm-ext" "dep:libp2p-wasm-ext") ("uds" "dep:libp2p-uds") ("tcp-tokio" "dep:libp2p-tcp" "libp2p-tcp?/tokio") ("tcp-async-io" "dep:libp2p-tcp" "libp2p-tcp?/async-io") ("serde" "libp2p-core/serde" "libp2p-kad?/serde" "libp2p-gossipsub?/serde") ("request-response" "dep:libp2p-request-response") ("rendezvous" "dep:libp2p-rendezvous") ("relay" "dep:libp2p-relay" "libp2p-metrics?/relay") ("pnet" "dep:libp2p-pnet") ("plaintext" "dep:libp2p-plaintext") ("ping" "dep:libp2p-ping" "libp2p-metrics?/ping") ("noise" "dep:libp2p-noise") ("mplex" "dep:libp2p-mplex") ("metrics" "dep:libp2p-metrics") ("mdns" "dep:libp2p-mdns") ("kad" "dep:libp2p-kad" "libp2p-metrics?/kad") ("identify" "dep:libp2p-identify" "libp2p-metrics?/identify") ("gossipsub" "dep:libp2p-gossipsub" "libp2p-metrics?/gossipsub") ("floodsub" "dep:libp2p-floodsub") ("dns-tokio" "dep:libp2p-dns" "libp2p-dns?/tokio") ("dns-async-std" "dep:libp2p-dns" "libp2p-dns?/async-std") ("deflate" "dep:libp2p-deflate") ("dcutr" "dep:libp2p-dcutr" "libp2p-metrics?/dcutr") ("autonat" "dep:libp2p-autonat")))) (r "1.60.0")))

(define-public crate-libp2p-0.48.0 (c (n "libp2p") (v "0.48.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.36.0") (k 0)) (d (n "libp2p-dcutr") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.36.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.36.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.41.0") (o #t) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "libp2p-identify") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.40.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-metrics") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.39.0") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.30.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.36.0") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.35.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.36.0") (o #t) (k 0)) (d (n "libp2p-websocket") (r "^0.38.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.14.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "1dnkwaqaz89v3p692wxrnw0ckkp8rf7d8wdglpslgfpxbgz9djcl") (f (quote (("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js" "rand/wasm-bindgen") ("secp256k1" "libp2p-core/secp256k1") ("rsa" "libp2p-core/rsa") ("default" "autonat" "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns-async-io" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "rendezvous" "rsa" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux")))) (s 2) (e (quote (("yamux" "dep:libp2p-yamux") ("websocket" "dep:libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext?/websocket") ("wasm-ext" "dep:libp2p-wasm-ext") ("uds" "dep:libp2p-uds") ("tcp-tokio" "dep:libp2p-tcp" "libp2p-tcp?/tokio") ("tcp-async-io" "dep:libp2p-tcp" "libp2p-tcp?/async-io") ("serde" "libp2p-core/serde" "libp2p-kad?/serde" "libp2p-gossipsub?/serde") ("request-response" "dep:libp2p-request-response") ("rendezvous" "dep:libp2p-rendezvous") ("relay" "dep:libp2p-relay" "libp2p-metrics?/relay") ("pnet" "dep:libp2p-pnet") ("plaintext" "dep:libp2p-plaintext") ("ping" "dep:libp2p-ping" "libp2p-metrics?/ping") ("noise" "dep:libp2p-noise") ("mplex" "dep:libp2p-mplex") ("metrics" "dep:libp2p-metrics") ("mdns-tokio" "dep:libp2p-mdns" "libp2p-mdns?/tokio") ("mdns-async-io" "dep:libp2p-mdns" "libp2p-mdns?/async-io") ("kad" "dep:libp2p-kad" "libp2p-metrics?/kad") ("identify" "dep:libp2p-identify" "libp2p-metrics?/identify") ("gossipsub" "dep:libp2p-gossipsub" "libp2p-metrics?/gossipsub") ("floodsub" "dep:libp2p-floodsub") ("dns-tokio" "dep:libp2p-dns" "libp2p-dns?/tokio") ("dns-async-std" "dep:libp2p-dns" "libp2p-dns?/async-std") ("deflate" "dep:libp2p-deflate") ("dcutr" "dep:libp2p-dcutr" "libp2p-metrics?/dcutr") ("autonat" "dep:libp2p-autonat")))) (r "1.60.0")))

(define-public crate-libp2p-0.49.0 (c (n "libp2p") (v "0.49.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.0.13") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.37.0") (d #t) (k 0)) (d (n "libp2p-dcutr") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.37.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.37.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.40.1") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.42.1") (o #t) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "libp2p-identify") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.41.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-metrics") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.40.1") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.1") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.22.1") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.40.1") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.30.1") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.37.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.36.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.14.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "1h82kqj6bgv838df2iqqqnj0y67z92y4x4dkhs8lgv7b2bd8z1zc") (f (quote (("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js") ("secp256k1" "libp2p-core/secp256k1") ("rsa" "libp2p-core/rsa") ("full" "async-std" "autonat" "dcutr" "deflate" "dns" "dns-async-std" "dns-tokio" "ecdsa" "floodsub" "gossipsub" "identify" "kad" "mdns" "mdns-async-io" "mdns-tokio" "metrics" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "rendezvous" "request-response" "rsa" "secp256k1" "serde" "tcp" "tcp-async-io" "tcp-tokio" "tokio" "uds" "wasm-bindgen" "wasm-ext" "wasm-ext-websocket" "websocket" "yamux") ("ecdsa" "libp2p-core/ecdsa")))) (s 2) (e (quote (("yamux" "dep:libp2p-yamux") ("websocket" "dep:libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext?/websocket") ("wasm-ext" "dep:libp2p-wasm-ext") ("uds" "dep:libp2p-uds") ("tokio" "libp2p-mdns?/tokio" "libp2p-tcp?/tokio" "libp2p-dns?/tokio") ("tcp-tokio" "dep:libp2p-tcp" "libp2p-tcp?/tokio") ("tcp-async-io" "dep:libp2p-tcp" "libp2p-tcp?/async-io") ("tcp" "dep:libp2p-tcp") ("serde" "libp2p-core/serde" "libp2p-kad?/serde" "libp2p-gossipsub?/serde") ("request-response" "dep:libp2p-request-response") ("rendezvous" "dep:libp2p-rendezvous") ("relay" "dep:libp2p-relay" "libp2p-metrics?/relay") ("pnet" "dep:libp2p-pnet") ("plaintext" "dep:libp2p-plaintext") ("ping" "dep:libp2p-ping" "libp2p-metrics?/ping") ("noise" "dep:libp2p-noise") ("mplex" "dep:libp2p-mplex") ("metrics" "dep:libp2p-metrics") ("mdns-tokio" "dep:libp2p-mdns" "libp2p-mdns?/tokio") ("mdns-async-io" "dep:libp2p-mdns" "libp2p-mdns?/async-io") ("mdns" "dep:libp2p-mdns") ("kad" "dep:libp2p-kad" "libp2p-metrics?/kad") ("identify" "dep:libp2p-identify" "libp2p-metrics?/identify") ("gossipsub" "dep:libp2p-gossipsub" "libp2p-metrics?/gossipsub") ("floodsub" "dep:libp2p-floodsub") ("dns-tokio" "dep:libp2p-dns" "libp2p-dns?/tokio") ("dns-async-std" "dep:libp2p-dns" "libp2p-dns?/async-std") ("dns" "dep:libp2p-dns") ("deflate" "dep:libp2p-deflate") ("dcutr" "dep:libp2p-dcutr" "libp2p-metrics?/dcutr") ("autonat" "dep:libp2p-autonat") ("async-std" "libp2p-mdns?/async-io" "libp2p-tcp?/async-io" "libp2p-dns?/async-std")))) (r "1.60.0")))

(define-public crate-libp2p-0.50.0 (c (n "libp2p") (v "0.50.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.0.13") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.38.0") (d #t) (k 0)) (d (n "libp2p-dcutr") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.38.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.38.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.43.0") (o #t) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "libp2p-identify") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.42.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-metrics") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.2") (o #t) (d #t) (k 0)) (d (n "libp2p-quic") (r "^0.7.0-alpha") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-relay") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.41.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.38.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-tls") (r "^0.1.0-alpha") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "libp2p-webrtc") (r "^0.4.0-alpha") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-websocket") (r "^0.40.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "06c8avfgcnfdgj6i1nfb4fg0cy4bqh8dbi8kxnfz8x9nd4phs2if") (f (quote (("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js" "libp2p-swarm/wasm-bindgen") ("secp256k1" "libp2p-core/secp256k1") ("rsa" "libp2p-core/rsa") ("macros" "libp2p-swarm/macros") ("full" "async-std" "autonat" "dcutr" "deflate" "dns" "ecdsa" "floodsub" "gossipsub" "identify" "kad" "mdns" "metrics" "mplex" "noise" "ping" "plaintext" "pnet" "quic" "macros" "relay" "rendezvous" "request-response" "rsa" "secp256k1" "serde" "tcp" "tls" "tokio" "uds" "wasm-bindgen" "wasm-ext" "wasm-ext-websocket" "webrtc" "websocket" "yamux") ("ecdsa" "libp2p-core/ecdsa")))) (s 2) (e (quote (("yamux" "dep:libp2p-yamux") ("websocket" "dep:libp2p-websocket") ("webrtc" "dep:libp2p-webrtc" "libp2p-webrtc?/pem") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext?/websocket") ("wasm-ext" "dep:libp2p-wasm-ext") ("uds" "dep:libp2p-uds") ("tokio" "libp2p-swarm/tokio" "libp2p-mdns?/tokio" "libp2p-tcp?/tokio" "libp2p-dns?/tokio" "libp2p-quic?/tokio" "libp2p-webrtc?/tokio") ("tls" "dep:libp2p-tls") ("tcp" "dep:libp2p-tcp") ("serde" "libp2p-core/serde" "libp2p-kad?/serde" "libp2p-gossipsub?/serde") ("request-response" "dep:libp2p-request-response") ("rendezvous" "dep:libp2p-rendezvous") ("relay" "dep:libp2p-relay" "libp2p-metrics?/relay") ("quic" "dep:libp2p-quic") ("pnet" "dep:libp2p-pnet") ("plaintext" "dep:libp2p-plaintext") ("ping" "dep:libp2p-ping" "libp2p-metrics?/ping") ("noise" "dep:libp2p-noise") ("mplex" "dep:libp2p-mplex") ("metrics" "dep:libp2p-metrics") ("mdns" "dep:libp2p-mdns") ("kad" "dep:libp2p-kad" "libp2p-metrics?/kad") ("identify" "dep:libp2p-identify" "libp2p-metrics?/identify") ("gossipsub" "dep:libp2p-gossipsub" "libp2p-metrics?/gossipsub") ("floodsub" "dep:libp2p-floodsub") ("dns" "dep:libp2p-dns") ("deflate" "dep:libp2p-deflate") ("dcutr" "dep:libp2p-dcutr" "libp2p-metrics?/dcutr") ("autonat" "dep:libp2p-autonat") ("async-std" "libp2p-swarm/async-std" "libp2p-mdns?/async-io" "libp2p-tcp?/async-io" "libp2p-dns?/async-std" "libp2p-quic?/async-std")))) (r "1.62.0")))

(define-public crate-libp2p-0.51.0 (c (n "libp2p") (v "0.51.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.8.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.39.0") (d #t) (k 0)) (d (n "libp2p-dcutr") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.44.0") (o #t) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "libp2p-identify") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.43.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-metrics") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.2") (o #t) (d #t) (k 0)) (d (n "libp2p-quic") (r "^0.7.0-alpha.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-relay") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.42.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-tls") (r "^0.1.0-alpha.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "libp2p-webrtc") (r "^0.4.0-alpha.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-websocket") (r "^0.41.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.17.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "0xn67h2snkyzl5zcan305yxr2vwihxih4qb4c3h4bijr0sarzd1y") (f (quote (("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js" "libp2p-swarm/wasm-bindgen") ("secp256k1" "libp2p-core/secp256k1") ("rsa" "libp2p-core/rsa") ("macros" "libp2p-swarm/macros") ("full" "async-std" "autonat" "dcutr" "deflate" "dns" "ecdsa" "floodsub" "gossipsub" "identify" "kad" "mdns" "metrics" "mplex" "noise" "ping" "plaintext" "pnet" "quic" "macros" "relay" "rendezvous" "request-response" "rsa" "secp256k1" "serde" "tcp" "tls" "tokio" "uds" "wasm-bindgen" "wasm-ext" "wasm-ext-websocket" "webrtc" "websocket" "yamux") ("ecdsa" "libp2p-core/ecdsa")))) (s 2) (e (quote (("yamux" "dep:libp2p-yamux") ("websocket" "dep:libp2p-websocket") ("webrtc" "dep:libp2p-webrtc" "libp2p-webrtc?/pem") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext?/websocket") ("wasm-ext" "dep:libp2p-wasm-ext") ("uds" "dep:libp2p-uds") ("tokio" "libp2p-swarm/tokio" "libp2p-mdns?/tokio" "libp2p-tcp?/tokio" "libp2p-dns?/tokio" "libp2p-quic?/tokio" "libp2p-webrtc?/tokio") ("tls" "dep:libp2p-tls") ("tcp" "dep:libp2p-tcp") ("serde" "libp2p-core/serde" "libp2p-kad?/serde" "libp2p-gossipsub?/serde") ("request-response" "dep:libp2p-request-response") ("rendezvous" "dep:libp2p-rendezvous") ("relay" "dep:libp2p-relay" "libp2p-metrics?/relay") ("quic" "dep:libp2p-quic") ("pnet" "dep:libp2p-pnet") ("plaintext" "dep:libp2p-plaintext") ("ping" "dep:libp2p-ping" "libp2p-metrics?/ping") ("noise" "dep:libp2p-noise") ("mplex" "dep:libp2p-mplex") ("metrics" "dep:libp2p-metrics") ("mdns" "dep:libp2p-mdns") ("kad" "dep:libp2p-kad" "libp2p-metrics?/kad") ("identify" "dep:libp2p-identify" "libp2p-metrics?/identify") ("gossipsub" "dep:libp2p-gossipsub" "libp2p-metrics?/gossipsub") ("floodsub" "dep:libp2p-floodsub") ("dns" "dep:libp2p-dns") ("deflate" "dep:libp2p-deflate") ("dcutr" "dep:libp2p-dcutr" "libp2p-metrics?/dcutr") ("autonat" "dep:libp2p-autonat") ("async-std" "libp2p-swarm/async-std" "libp2p-mdns?/async-io" "libp2p-tcp?/async-io" "libp2p-dns?/async-std" "libp2p-quic?/async-std")))) (r "1.65.0")))

(define-public crate-libp2p-0.50.1 (c (n "libp2p") (v "0.50.1") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.0.13") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.38.0") (d #t) (k 0)) (d (n "libp2p-dcutr") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.38.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-dns") (r "^0.38.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-floodsub") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.43.0") (o #t) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "libp2p-identify") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.42.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-metrics") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.2") (o #t) (d #t) (k 0)) (d (n "libp2p-quic") (r "=0.7.0-alpha") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-relay") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.41.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.38.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-tls") (r "=0.1.0-alpha") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-uds") (r "^0.37.0") (o #t) (d #t) (k 0)) (d (n "libp2p-wasm-ext") (r "^0.38.0") (o #t) (d #t) (k 0)) (d (n "libp2p-webrtc") (r "=0.4.0-alpha") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-websocket") (r "^0.40.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "libp2p-yamux") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "1f3608lm4y7jqcjxh21sc979h1366p99pnwprznp3s0bg4202yww") (f (quote (("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js" "libp2p-swarm/wasm-bindgen") ("secp256k1" "libp2p-core/secp256k1") ("rsa" "libp2p-core/rsa") ("macros" "libp2p-swarm/macros") ("full" "async-std" "autonat" "dcutr" "deflate" "dns" "ecdsa" "floodsub" "gossipsub" "identify" "kad" "mdns" "metrics" "mplex" "noise" "ping" "plaintext" "pnet" "quic" "macros" "relay" "rendezvous" "request-response" "rsa" "secp256k1" "serde" "tcp" "tls" "tokio" "uds" "wasm-bindgen" "wasm-ext" "wasm-ext-websocket" "webrtc" "websocket" "yamux") ("ecdsa" "libp2p-core/ecdsa")))) (s 2) (e (quote (("yamux" "dep:libp2p-yamux") ("websocket" "dep:libp2p-websocket") ("webrtc" "dep:libp2p-webrtc" "libp2p-webrtc?/pem") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext?/websocket") ("wasm-ext" "dep:libp2p-wasm-ext") ("uds" "dep:libp2p-uds") ("tokio" "libp2p-swarm/tokio" "libp2p-mdns?/tokio" "libp2p-tcp?/tokio" "libp2p-dns?/tokio" "libp2p-quic?/tokio" "libp2p-webrtc?/tokio") ("tls" "dep:libp2p-tls") ("tcp" "dep:libp2p-tcp") ("serde" "libp2p-core/serde" "libp2p-kad?/serde" "libp2p-gossipsub?/serde") ("request-response" "dep:libp2p-request-response") ("rendezvous" "dep:libp2p-rendezvous") ("relay" "dep:libp2p-relay" "libp2p-metrics?/relay") ("quic" "dep:libp2p-quic") ("pnet" "dep:libp2p-pnet") ("plaintext" "dep:libp2p-plaintext") ("ping" "dep:libp2p-ping" "libp2p-metrics?/ping") ("noise" "dep:libp2p-noise") ("mplex" "dep:libp2p-mplex") ("metrics" "dep:libp2p-metrics") ("mdns" "dep:libp2p-mdns") ("kad" "dep:libp2p-kad" "libp2p-metrics?/kad") ("identify" "dep:libp2p-identify" "libp2p-metrics?/identify") ("gossipsub" "dep:libp2p-gossipsub" "libp2p-metrics?/gossipsub") ("floodsub" "dep:libp2p-floodsub") ("dns" "dep:libp2p-dns") ("deflate" "dep:libp2p-deflate") ("dcutr" "dep:libp2p-dcutr" "libp2p-metrics?/dcutr") ("autonat" "dep:libp2p-autonat") ("async-std" "libp2p-swarm/async-std" "libp2p-mdns?/async-io" "libp2p-tcp?/async-io" "libp2p-dns?/async-std" "libp2p-quic?/async-std")))) (r "1.62.0")))

(define-public crate-libp2p-0.51.1 (c (n "libp2p") (v "0.51.1") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.8.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.39.0") (d #t) (k 0)) (d (n "libp2p-dcutr") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-dns") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-floodsub") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.44.0") (o #t) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "libp2p-identify") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.43.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-metrics") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.2") (o #t) (d #t) (k 0)) (d (n "libp2p-quic") (r "^0.7.0-alpha.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-relay") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.42.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-tls") (r "^0.1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-uds") (r "^0.38.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-wasm-ext") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "libp2p-webrtc") (r "^0.4.0-alpha.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-websocket") (r "^0.41.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-yamux") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.17.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "0wvlm442sx3q90gwngpaf0gsq64026ja8p6y8pnhnkpghfxniq2k") (f (quote (("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js" "libp2p-swarm/wasm-bindgen") ("secp256k1" "libp2p-identity/secp256k1") ("rsa" "libp2p-identity/rsa") ("macros" "libp2p-swarm/macros") ("full" "async-std" "autonat" "dcutr" "deflate" "dns" "ecdsa" "ed25519" "floodsub" "gossipsub" "identify" "kad" "macros" "mdns" "metrics" "mplex" "noise" "ping" "plaintext" "pnet" "quic" "relay" "rendezvous" "request-response" "rsa" "secp256k1" "serde" "tcp" "tls" "tokio" "uds" "wasm-bindgen" "wasm-ext" "wasm-ext-websocket" "webrtc" "websocket" "yamux") ("ed25519" "libp2p-identity/ed25519") ("ecdsa" "libp2p-identity/ecdsa")))) (s 2) (e (quote (("yamux" "dep:libp2p-yamux") ("websocket" "dep:libp2p-websocket") ("webrtc" "dep:libp2p-webrtc" "libp2p-webrtc?/pem") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext?/websocket") ("wasm-ext" "dep:libp2p-wasm-ext") ("uds" "dep:libp2p-uds") ("tokio" "libp2p-swarm/tokio" "libp2p-mdns?/tokio" "libp2p-tcp?/tokio" "libp2p-dns?/tokio" "libp2p-quic?/tokio" "libp2p-webrtc?/tokio") ("tls" "dep:libp2p-tls") ("tcp" "dep:libp2p-tcp") ("serde" "libp2p-core/serde" "libp2p-kad?/serde" "libp2p-gossipsub?/serde") ("request-response" "dep:libp2p-request-response") ("rendezvous" "dep:libp2p-rendezvous") ("relay" "dep:libp2p-relay" "libp2p-metrics?/relay") ("quic" "dep:libp2p-quic") ("pnet" "dep:libp2p-pnet") ("plaintext" "dep:libp2p-plaintext") ("ping" "dep:libp2p-ping" "libp2p-metrics?/ping") ("noise" "dep:libp2p-noise") ("mplex" "dep:libp2p-mplex") ("metrics" "dep:libp2p-metrics") ("mdns" "dep:libp2p-mdns") ("kad" "dep:libp2p-kad" "libp2p-metrics?/kad") ("identify" "dep:libp2p-identify" "libp2p-metrics?/identify") ("gossipsub" "dep:libp2p-gossipsub" "libp2p-metrics?/gossipsub") ("floodsub" "dep:libp2p-floodsub") ("dns" "dep:libp2p-dns") ("deflate" "dep:libp2p-deflate") ("dcutr" "dep:libp2p-dcutr" "libp2p-metrics?/dcutr") ("autonat" "dep:libp2p-autonat") ("async-std" "libp2p-swarm/async-std" "libp2p-mdns?/async-io" "libp2p-tcp?/async-io" "libp2p-dns?/async-std" "libp2p-quic?/async-std")))) (r "1.65.0")))

(define-public crate-libp2p-0.51.2 (c (n "libp2p") (v "0.51.2") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.8.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "libp2p-connection-limits") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.39.0") (d #t) (k 0)) (d (n "libp2p-dcutr") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-dns") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-floodsub") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.44.0") (o #t) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "libp2p-identify") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.43.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-metrics") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "libp2p-perf") (r "^0.1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-ping") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.2") (o #t) (d #t) (k 0)) (d (n "libp2p-quic") (r "^0.7.0-alpha.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-relay") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.42.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-tls") (r "^0.1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-uds") (r "^0.38.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-wasm-ext") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "libp2p-webrtc") (r "^0.4.0-alpha.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-websocket") (r "^0.41.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-yamux") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.17.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "08h7rb16is4qwwl406vmrnyz1f7n19a3rwyz6cxbny0m439dcy5b") (f (quote (("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js" "libp2p-swarm/wasm-bindgen") ("secp256k1" "libp2p-identity/secp256k1") ("rsa" "libp2p-identity/rsa") ("macros" "libp2p-swarm/macros") ("full" "async-std" "autonat" "dcutr" "deflate" "dns" "ecdsa" "ed25519" "floodsub" "gossipsub" "identify" "kad" "macros" "mdns" "metrics" "mplex" "noise" "perf" "ping" "plaintext" "pnet" "quic" "relay" "rendezvous" "request-response" "rsa" "secp256k1" "serde" "tcp" "tls" "tokio" "uds" "wasm-bindgen" "wasm-ext" "wasm-ext-websocket" "webrtc" "websocket" "yamux") ("ed25519" "libp2p-identity/ed25519") ("ecdsa" "libp2p-identity/ecdsa")))) (s 2) (e (quote (("yamux" "dep:libp2p-yamux") ("websocket" "dep:libp2p-websocket") ("webrtc" "dep:libp2p-webrtc" "libp2p-webrtc?/pem") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext?/websocket") ("wasm-ext" "dep:libp2p-wasm-ext") ("uds" "dep:libp2p-uds") ("tokio" "libp2p-swarm/tokio" "libp2p-mdns?/tokio" "libp2p-tcp?/tokio" "libp2p-dns?/tokio" "libp2p-quic?/tokio" "libp2p-webrtc?/tokio") ("tls" "dep:libp2p-tls") ("tcp" "dep:libp2p-tcp") ("serde" "libp2p-core/serde" "libp2p-kad?/serde" "libp2p-gossipsub?/serde") ("request-response" "dep:libp2p-request-response") ("rendezvous" "dep:libp2p-rendezvous") ("relay" "dep:libp2p-relay" "libp2p-metrics?/relay") ("quic" "dep:libp2p-quic") ("pnet" "dep:libp2p-pnet") ("plaintext" "dep:libp2p-plaintext") ("ping" "dep:libp2p-ping" "libp2p-metrics?/ping") ("perf" "dep:libp2p-perf") ("noise" "dep:libp2p-noise") ("mplex" "dep:libp2p-mplex") ("metrics" "dep:libp2p-metrics") ("mdns" "dep:libp2p-mdns") ("kad" "dep:libp2p-kad" "libp2p-metrics?/kad") ("identify" "dep:libp2p-identify" "libp2p-metrics?/identify") ("gossipsub" "dep:libp2p-gossipsub" "libp2p-metrics?/gossipsub") ("floodsub" "dep:libp2p-floodsub") ("dns" "dep:libp2p-dns") ("deflate" "dep:libp2p-deflate") ("dcutr" "dep:libp2p-dcutr" "libp2p-metrics?/dcutr") ("autonat" "dep:libp2p-autonat") ("async-std" "libp2p-swarm/async-std" "libp2p-mdns?/async-io" "libp2p-tcp?/async-io" "libp2p-dns?/async-std" "libp2p-quic?/async-std")))) (r "1.65.0")))

(define-public crate-libp2p-0.51.3 (c (n "libp2p") (v "0.51.3") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.8.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "libp2p-connection-limits") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.39.0") (d #t) (k 0)) (d (n "libp2p-dcutr") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-dns") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-floodsub") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.44.0") (o #t) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "libp2p-identify") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.43.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-metrics") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "libp2p-perf") (r "^0.1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-ping") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.2") (o #t) (d #t) (k 0)) (d (n "libp2p-quic") (r "^0.7.0-alpha.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-relay") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.42.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-tls") (r "^0.1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-uds") (r "^0.38.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-wasm-ext") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "libp2p-webrtc") (r "^0.4.0-alpha.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-websocket") (r "^0.41.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-yamux") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.17.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "15rh23m5kfpq0c5kgpknggdmwx5p3630fj2wbc085bjff9cx447j") (f (quote (("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js" "libp2p-swarm/wasm-bindgen") ("secp256k1" "libp2p-identity/secp256k1") ("rsa" "libp2p-identity/rsa") ("macros" "libp2p-swarm/macros") ("full" "async-std" "autonat" "dcutr" "deflate" "dns" "ecdsa" "ed25519" "floodsub" "gossipsub" "identify" "kad" "macros" "mdns" "metrics" "mplex" "noise" "perf" "ping" "plaintext" "pnet" "quic" "relay" "rendezvous" "request-response" "rsa" "secp256k1" "serde" "tcp" "tls" "tokio" "uds" "wasm-bindgen" "wasm-ext" "wasm-ext-websocket" "webrtc" "websocket" "yamux") ("ed25519" "libp2p-identity/ed25519") ("ecdsa" "libp2p-identity/ecdsa")))) (s 2) (e (quote (("yamux" "dep:libp2p-yamux") ("websocket" "dep:libp2p-websocket") ("webrtc" "dep:libp2p-webrtc" "libp2p-webrtc?/pem") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext?/websocket") ("wasm-ext" "dep:libp2p-wasm-ext") ("uds" "dep:libp2p-uds") ("tokio" "libp2p-swarm/tokio" "libp2p-mdns?/tokio" "libp2p-tcp?/tokio" "libp2p-dns?/tokio" "libp2p-quic?/tokio" "libp2p-webrtc?/tokio") ("tls" "dep:libp2p-tls") ("tcp" "dep:libp2p-tcp") ("serde" "libp2p-core/serde" "libp2p-kad?/serde" "libp2p-gossipsub?/serde") ("request-response" "dep:libp2p-request-response") ("rendezvous" "dep:libp2p-rendezvous") ("relay" "dep:libp2p-relay" "libp2p-metrics?/relay") ("quic" "dep:libp2p-quic") ("pnet" "dep:libp2p-pnet") ("plaintext" "dep:libp2p-plaintext") ("ping" "dep:libp2p-ping" "libp2p-metrics?/ping") ("perf" "dep:libp2p-perf") ("noise" "dep:libp2p-noise") ("mplex" "dep:libp2p-mplex") ("metrics" "dep:libp2p-metrics") ("mdns" "dep:libp2p-mdns") ("kad" "dep:libp2p-kad" "libp2p-metrics?/kad") ("identify" "dep:libp2p-identify" "libp2p-metrics?/identify") ("gossipsub" "dep:libp2p-gossipsub" "libp2p-metrics?/gossipsub") ("floodsub" "dep:libp2p-floodsub") ("dns" "dep:libp2p-dns") ("deflate" "dep:libp2p-deflate") ("dcutr" "dep:libp2p-dcutr" "libp2p-metrics?/dcutr") ("autonat" "dep:libp2p-autonat") ("async-std" "libp2p-swarm/async-std" "libp2p-mdns?/async-io" "libp2p-tcp?/async-io" "libp2p-dns?/async-std" "libp2p-quic?/async-std")))) (r "1.65.0")))

(define-public crate-libp2p-0.52.0 (c (n "libp2p") (v "0.52.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.8.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "libp2p-connection-limits") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.40.0") (d #t) (k 0)) (d (n "libp2p-dcutr") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.40.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-dns") (r "^0.40.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-floodsub") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.45.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.44.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-metrics") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.43.0") (d #t) (k 2)) (d (n "libp2p-ping") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.43.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.40.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-tcp") (r "^0.40.0") (f (quote ("tokio"))) (d #t) (k 2)) (d (n "libp2p-tls") (r "^0.2.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-uds") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-wasm-ext") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.42.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-yamux") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.18.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "04q5h2r2qxxyh08a79cbiw42dlv3wnh8pnafciqfg8kfxgx14nr6") (f (quote (("secp256k1" "libp2p-identity/secp256k1") ("rsa" "libp2p-identity/rsa") ("macros" "libp2p-swarm/macros") ("full" "async-std" "autonat" "cbor" "dcutr" "deflate" "dns" "ecdsa" "ed25519" "floodsub" "gossipsub" "identify" "kad" "macros" "mdns" "metrics" "noise" "ping" "plaintext" "pnet" "relay" "rendezvous" "request-response" "rsa" "secp256k1" "serde" "tcp" "tls" "tokio" "uds" "wasm-bindgen" "wasm-ext" "wasm-ext-websocket" "websocket" "yamux") ("ed25519" "libp2p-identity/ed25519") ("ecdsa" "libp2p-identity/ecdsa")))) (s 2) (e (quote (("yamux" "dep:libp2p-yamux") ("websocket" "dep:libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext?/websocket") ("wasm-ext" "dep:libp2p-wasm-ext") ("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js" "libp2p-swarm/wasm-bindgen" "libp2p-gossipsub?/wasm-bindgen") ("uds" "dep:libp2p-uds") ("tokio" "libp2p-swarm/tokio" "libp2p-mdns?/tokio" "libp2p-tcp?/tokio" "libp2p-dns?/tokio") ("tls" "dep:libp2p-tls") ("tcp" "dep:libp2p-tcp") ("serde" "libp2p-core/serde" "libp2p-kad?/serde" "libp2p-gossipsub?/serde") ("request-response" "dep:libp2p-request-response") ("rendezvous" "dep:libp2p-rendezvous") ("relay" "dep:libp2p-relay" "libp2p-metrics?/relay") ("pnet" "dep:libp2p-pnet") ("plaintext" "dep:libp2p-plaintext") ("ping" "dep:libp2p-ping" "libp2p-metrics?/ping") ("noise" "dep:libp2p-noise") ("metrics" "dep:libp2p-metrics") ("mdns" "dep:libp2p-mdns") ("kad" "dep:libp2p-kad" "libp2p-metrics?/kad") ("identify" "dep:libp2p-identify" "libp2p-metrics?/identify") ("gossipsub" "dep:libp2p-gossipsub" "libp2p-metrics?/gossipsub") ("floodsub" "dep:libp2p-floodsub") ("dns" "dep:libp2p-dns") ("deflate" "dep:libp2p-deflate") ("dcutr" "dep:libp2p-dcutr" "libp2p-metrics?/dcutr") ("cbor" "libp2p-request-response?/cbor") ("autonat" "dep:libp2p-autonat") ("async-std" "libp2p-swarm/async-std" "libp2p-mdns?/async-io" "libp2p-tcp?/async-io" "libp2p-dns?/async-std")))) (r "1.65.0")))

(define-public crate-libp2p-0.52.1 (c (n "libp2p") (v "0.52.1") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.8.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "libp2p-connection-limits") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.40.0") (d #t) (k 0)) (d (n "libp2p-dcutr") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.40.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-dns") (r "^0.40.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-floodsub") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.45.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.44.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-metrics") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.43.0") (d #t) (k 2)) (d (n "libp2p-ping") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.43.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.40.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-tcp") (r "^0.40.0") (f (quote ("tokio"))) (d #t) (k 2)) (d (n "libp2p-tls") (r "^0.2.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-uds") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-wasm-ext") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.42.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-webtransport-websys") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.18.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "1vqh36sqhl2k8p3dn0ys4qgwq150yjp5v12h4225acjgvyi9n0rq") (f (quote (("secp256k1" "libp2p-identity/secp256k1") ("rsa" "libp2p-identity/rsa") ("macros" "libp2p-swarm/macros") ("full" "async-std" "autonat" "cbor" "dcutr" "deflate" "dns" "ecdsa" "ed25519" "floodsub" "gossipsub" "identify" "kad" "macros" "mdns" "metrics" "noise" "ping" "plaintext" "pnet" "relay" "rendezvous" "request-response" "rsa" "secp256k1" "serde" "tcp" "tls" "tokio" "uds" "wasm-bindgen" "wasm-ext" "wasm-ext-websocket" "websocket" "webtransport-websys" "yamux") ("ed25519" "libp2p-identity/ed25519") ("ecdsa" "libp2p-identity/ecdsa")))) (s 2) (e (quote (("yamux" "dep:libp2p-yamux") ("webtransport-websys" "dep:libp2p-webtransport-websys") ("websocket" "dep:libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext?/websocket") ("wasm-ext" "dep:libp2p-wasm-ext") ("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js" "libp2p-swarm/wasm-bindgen" "libp2p-gossipsub?/wasm-bindgen") ("uds" "dep:libp2p-uds") ("tokio" "libp2p-swarm/tokio" "libp2p-mdns?/tokio" "libp2p-tcp?/tokio" "libp2p-dns?/tokio") ("tls" "dep:libp2p-tls") ("tcp" "dep:libp2p-tcp") ("serde" "libp2p-core/serde" "libp2p-kad?/serde" "libp2p-gossipsub?/serde") ("request-response" "dep:libp2p-request-response") ("rendezvous" "dep:libp2p-rendezvous") ("relay" "dep:libp2p-relay" "libp2p-metrics?/relay") ("pnet" "dep:libp2p-pnet") ("plaintext" "dep:libp2p-plaintext") ("ping" "dep:libp2p-ping" "libp2p-metrics?/ping") ("noise" "dep:libp2p-noise") ("metrics" "dep:libp2p-metrics") ("mdns" "dep:libp2p-mdns") ("kad" "dep:libp2p-kad" "libp2p-metrics?/kad") ("identify" "dep:libp2p-identify" "libp2p-metrics?/identify") ("gossipsub" "dep:libp2p-gossipsub" "libp2p-metrics?/gossipsub") ("floodsub" "dep:libp2p-floodsub") ("dns" "dep:libp2p-dns") ("deflate" "dep:libp2p-deflate") ("dcutr" "dep:libp2p-dcutr" "libp2p-metrics?/dcutr") ("cbor" "libp2p-request-response?/cbor") ("autonat" "dep:libp2p-autonat") ("async-std" "libp2p-swarm/async-std" "libp2p-mdns?/async-io" "libp2p-tcp?/async-io" "libp2p-dns?/async-std")))) (r "1.65.0")))

(define-public crate-libp2p-0.52.2 (c (n "libp2p") (v "0.52.2") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.8.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "libp2p-connection-limits") (r "^0.2.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.40.0") (d #t) (k 0)) (d (n "libp2p-dcutr") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.40.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-dns") (r "^0.40.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-floodsub") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.45.1") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.2") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.44.4") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.44.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-memory-connection-limits") (r "^0.1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-metrics") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.43.0") (d #t) (k 2)) (d (n "libp2p-ping") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-relay") (r "^0.16.1") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.43.3") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.40.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-tcp") (r "^0.40.0") (f (quote ("tokio"))) (d #t) (k 2)) (d (n "libp2p-tls") (r "^0.2.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-uds") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-wasm-ext") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.42.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-webtransport-websys") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.44.1") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.18.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "1ng780z5hkvqxfp40di185k1xbv1i0q4fmvjy7j52c7sdc3r8j6a") (f (quote (("secp256k1" "libp2p-identity/secp256k1") ("rsa" "libp2p-identity/rsa") ("macros" "libp2p-swarm/macros") ("full" "async-std" "autonat" "cbor" "dcutr" "deflate" "dns" "ecdsa" "ed25519" "floodsub" "gossipsub" "identify" "json" "kad" "macros" "mdns" "memory-connection-limits" "metrics" "noise" "ping" "plaintext" "pnet" "relay" "rendezvous" "request-response" "rsa" "secp256k1" "serde" "tcp" "tls" "tokio" "uds" "wasm-bindgen" "wasm-ext" "wasm-ext-websocket" "websocket" "webtransport-websys" "yamux") ("ed25519" "libp2p-identity/ed25519") ("ecdsa" "libp2p-identity/ecdsa")))) (s 2) (e (quote (("yamux" "dep:libp2p-yamux") ("webtransport-websys" "dep:libp2p-webtransport-websys") ("websocket" "dep:libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext?/websocket") ("wasm-ext" "dep:libp2p-wasm-ext") ("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js" "libp2p-swarm/wasm-bindgen" "libp2p-gossipsub?/wasm-bindgen") ("uds" "dep:libp2p-uds") ("tokio" "libp2p-swarm/tokio" "libp2p-mdns?/tokio" "libp2p-tcp?/tokio" "libp2p-dns?/tokio") ("tls" "dep:libp2p-tls") ("tcp" "dep:libp2p-tcp") ("serde" "libp2p-core/serde" "libp2p-kad?/serde" "libp2p-gossipsub?/serde") ("request-response" "dep:libp2p-request-response") ("rendezvous" "dep:libp2p-rendezvous") ("relay" "dep:libp2p-relay" "libp2p-metrics?/relay") ("pnet" "dep:libp2p-pnet") ("plaintext" "dep:libp2p-plaintext") ("ping" "dep:libp2p-ping" "libp2p-metrics?/ping") ("noise" "dep:libp2p-noise") ("metrics" "dep:libp2p-metrics") ("memory-connection-limits" "dep:libp2p-memory-connection-limits") ("mdns" "dep:libp2p-mdns") ("kad" "dep:libp2p-kad" "libp2p-metrics?/kad") ("json" "libp2p-request-response?/json") ("identify" "dep:libp2p-identify" "libp2p-metrics?/identify") ("gossipsub" "dep:libp2p-gossipsub" "libp2p-metrics?/gossipsub") ("floodsub" "dep:libp2p-floodsub") ("dns" "dep:libp2p-dns") ("deflate" "dep:libp2p-deflate") ("dcutr" "dep:libp2p-dcutr" "libp2p-metrics?/dcutr") ("cbor" "libp2p-request-response?/cbor") ("autonat" "dep:libp2p-autonat") ("async-std" "libp2p-swarm/async-std" "libp2p-mdns?/async-io" "libp2p-tcp?/async-io" "libp2p-dns?/async-std")))) (r "1.65.0")))

(define-public crate-libp2p-0.52.3 (c (n "libp2p") (v "0.52.3") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.8.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "libp2p-connection-limits") (r "^0.2.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.40.0") (d #t) (k 0)) (d (n "libp2p-dcutr") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.40.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-dns") (r "^0.40.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-floodsub") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.45.1") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.3") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.44.4") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.44.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-memory-connection-limits") (r "^0.1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-metrics") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.43.1") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.43.1") (d #t) (k 2)) (d (n "libp2p-ping") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "libp2p-quic") (r "^0.9.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-relay") (r "^0.16.1") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.43.3") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.40.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-tcp") (r "^0.40.0") (f (quote ("tokio"))) (d #t) (k 2)) (d (n "libp2p-tls") (r "^0.2.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-uds") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-wasm-ext") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.42.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-webtransport-websys") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.44.1") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.18.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "1mw1jq29impy6lxz2g8s27f9ay1d3ii8gqdgamnkc9x008apvl1j") (f (quote (("secp256k1" "libp2p-identity/secp256k1") ("rsa" "libp2p-identity/rsa") ("macros" "libp2p-swarm/macros") ("full" "async-std" "autonat" "cbor" "dcutr" "deflate" "dns" "ecdsa" "ed25519" "floodsub" "gossipsub" "identify" "json" "kad" "macros" "mdns" "memory-connection-limits" "metrics" "noise" "ping" "plaintext" "pnet" "quic" "relay" "rendezvous" "request-response" "rsa" "secp256k1" "serde" "tcp" "tls" "tokio" "uds" "wasm-bindgen" "wasm-ext" "wasm-ext-websocket" "websocket" "webtransport-websys" "yamux") ("ed25519" "libp2p-identity/ed25519") ("ecdsa" "libp2p-identity/ecdsa")))) (s 2) (e (quote (("yamux" "dep:libp2p-yamux") ("webtransport-websys" "dep:libp2p-webtransport-websys") ("websocket" "dep:libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext?/websocket") ("wasm-ext" "dep:libp2p-wasm-ext") ("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js" "libp2p-swarm/wasm-bindgen" "libp2p-gossipsub?/wasm-bindgen") ("uds" "dep:libp2p-uds") ("tokio" "libp2p-swarm/tokio" "libp2p-mdns?/tokio" "libp2p-tcp?/tokio" "libp2p-dns?/tokio" "libp2p-quic?/tokio") ("tls" "dep:libp2p-tls") ("tcp" "dep:libp2p-tcp") ("serde" "libp2p-core/serde" "libp2p-kad?/serde" "libp2p-gossipsub?/serde") ("request-response" "dep:libp2p-request-response") ("rendezvous" "dep:libp2p-rendezvous") ("relay" "dep:libp2p-relay" "libp2p-metrics?/relay") ("quic" "dep:libp2p-quic") ("pnet" "dep:libp2p-pnet") ("plaintext" "dep:libp2p-plaintext") ("ping" "dep:libp2p-ping" "libp2p-metrics?/ping") ("noise" "dep:libp2p-noise") ("metrics" "dep:libp2p-metrics") ("memory-connection-limits" "dep:libp2p-memory-connection-limits") ("mdns" "dep:libp2p-mdns") ("kad" "dep:libp2p-kad" "libp2p-metrics?/kad") ("json" "libp2p-request-response?/json") ("identify" "dep:libp2p-identify" "libp2p-metrics?/identify") ("gossipsub" "dep:libp2p-gossipsub" "libp2p-metrics?/gossipsub") ("floodsub" "dep:libp2p-floodsub") ("dns" "dep:libp2p-dns") ("deflate" "dep:libp2p-deflate") ("dcutr" "dep:libp2p-dcutr" "libp2p-metrics?/dcutr") ("cbor" "libp2p-request-response?/cbor") ("autonat" "dep:libp2p-autonat") ("async-std" "libp2p-swarm/async-std" "libp2p-mdns?/async-io" "libp2p-tcp?/async-io" "libp2p-dns?/async-std" "libp2p-quic?/async-std")))) (r "1.65.0")))

(define-public crate-libp2p-0.52.4 (c (n "libp2p") (v "0.52.4") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.9.0") (d #t) (k 0)) (d (n "either") (r "^1.8.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "libp2p-connection-limits") (r "^0.2.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.40.1") (d #t) (k 0)) (d (n "libp2p-dcutr") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.40.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-dns") (r "^0.40.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-floodsub") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.45.2") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.43.1") (o #t) (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.44.6") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.44.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-memory-connection-limits") (r "^0.1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-metrics") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.40.0") (d #t) (k 2)) (d (n "libp2p-noise") (r "^0.43.2") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.43.2") (d #t) (k 2)) (d (n "libp2p-ping") (r "^0.43.1") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.40.1") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.23.1") (o #t) (d #t) (k 0)) (d (n "libp2p-quic") (r "^0.9.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-relay") (r "^0.16.2") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.25.2") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.43.6") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.40.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-tcp") (r "^0.40.1") (f (quote ("tokio"))) (d #t) (k 2)) (d (n "libp2p-tls") (r "^0.2.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-uds") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-upnp") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-wasm-ext") (r "^0.40.0") (o #t) (d #t) (k 0)) (d (n "libp2p-websocket") (r "^0.42.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-websocket-websys") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libp2p-webtransport-websys") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.44.1") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.18.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "rw-stream-sink") (r "^0.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "0r34gr58a6k9ijvjb464f5f5bcsvm64j6pmqd05bg1cs67mrai79") (f (quote (("secp256k1" "libp2p-identity/secp256k1") ("rsa" "libp2p-identity/rsa") ("macros" "libp2p-swarm/macros") ("full" "async-std" "autonat" "cbor" "dcutr" "deflate" "dns" "ecdsa" "ed25519" "floodsub" "gossipsub" "identify" "json" "kad" "macros" "mdns" "memory-connection-limits" "metrics" "noise" "ping" "plaintext" "pnet" "quic" "relay" "rendezvous" "request-response" "rsa" "secp256k1" "serde" "tcp" "tls" "tokio" "uds" "wasm-bindgen" "wasm-ext" "wasm-ext-websocket" "websocket-websys" "websocket" "webtransport-websys" "yamux" "upnp") ("ed25519" "libp2p-identity/ed25519") ("ecdsa" "libp2p-identity/ecdsa")))) (s 2) (e (quote (("yamux" "dep:libp2p-yamux") ("webtransport-websys" "dep:libp2p-webtransport-websys") ("websocket-websys" "dep:libp2p-websocket-websys") ("websocket" "dep:libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext?/websocket") ("wasm-ext" "dep:libp2p-wasm-ext") ("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js" "libp2p-swarm/wasm-bindgen" "libp2p-gossipsub?/wasm-bindgen") ("upnp" "dep:libp2p-upnp") ("uds" "dep:libp2p-uds") ("tokio" "libp2p-swarm/tokio" "libp2p-mdns?/tokio" "libp2p-tcp?/tokio" "libp2p-dns?/tokio" "libp2p-quic?/tokio" "libp2p-upnp?/tokio") ("tls" "dep:libp2p-tls") ("tcp" "dep:libp2p-tcp") ("serde" "libp2p-core/serde" "libp2p-kad?/serde" "libp2p-gossipsub?/serde") ("request-response" "dep:libp2p-request-response") ("rendezvous" "dep:libp2p-rendezvous") ("relay" "dep:libp2p-relay" "libp2p-metrics?/relay") ("quic" "dep:libp2p-quic") ("pnet" "dep:libp2p-pnet") ("plaintext" "dep:libp2p-plaintext") ("ping" "dep:libp2p-ping" "libp2p-metrics?/ping") ("noise" "dep:libp2p-noise") ("metrics" "dep:libp2p-metrics") ("memory-connection-limits" "dep:libp2p-memory-connection-limits") ("mdns" "dep:libp2p-mdns") ("kad" "dep:libp2p-kad" "libp2p-metrics?/kad") ("json" "libp2p-request-response?/json") ("identify" "dep:libp2p-identify" "libp2p-metrics?/identify") ("gossipsub" "dep:libp2p-gossipsub" "libp2p-metrics?/gossipsub") ("floodsub" "dep:libp2p-floodsub") ("dns" "dep:libp2p-dns") ("deflate" "dep:libp2p-deflate") ("dcutr" "dep:libp2p-dcutr" "libp2p-metrics?/dcutr") ("cbor" "libp2p-request-response?/cbor") ("autonat" "dep:libp2p-autonat") ("async-std" "libp2p-swarm/async-std" "libp2p-mdns?/async-io" "libp2p-tcp?/async-io" "libp2p-dns?/async-std" "libp2p-quic?/async-std")))) (r "1.65.0")))

(define-public crate-libp2p-0.53.0 (c (n "libp2p") (v "0.53.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "libp2p-connection-limits") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.41.0") (d #t) (k 0)) (d (n "libp2p-dcutr") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.41.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-floodsub") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.46.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.45.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.45.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-memory-connection-limits") (r "^0.2.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-metrics") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.41.0") (d #t) (k 2)) (d (n "libp2p-noise") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.44.0") (d #t) (k 2)) (d (n "libp2p-ping") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-quic") (r "^0.10.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-relay") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.44.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.41.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-tcp") (r "^0.41.0") (f (quote ("tokio"))) (d #t) (k 2)) (d (n "libp2p-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-uds") (r "^0.40.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-upnp") (r "^0.2.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-websocket") (r "^0.43.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-websocket-websys") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libp2p-webtransport-websys") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.45.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.18.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "rw-stream-sink") (r "^0.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0g2x79873ixx8w8kfw25wrp08w3vw1dp3007p4wyv6301kxdgi37") (f (quote (("secp256k1" "libp2p-identity/secp256k1") ("rsa" "libp2p-identity/rsa") ("macros" "libp2p-swarm/macros") ("full" "async-std" "autonat" "cbor" "dcutr" "dns" "ecdsa" "ed25519" "floodsub" "gossipsub" "identify" "json" "kad" "macros" "mdns" "memory-connection-limits" "metrics" "noise" "ping" "plaintext" "pnet" "quic" "relay" "rendezvous" "request-response" "rsa" "secp256k1" "serde" "tcp" "tls" "tokio" "uds" "wasm-bindgen" "websocket-websys" "websocket" "webtransport-websys" "yamux" "upnp") ("ed25519" "libp2p-identity/ed25519") ("ecdsa" "libp2p-identity/ecdsa")))) (s 2) (e (quote (("yamux" "dep:libp2p-yamux") ("webtransport-websys" "dep:libp2p-webtransport-websys") ("websocket-websys" "dep:libp2p-websocket-websys") ("websocket" "dep:libp2p-websocket") ("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js" "libp2p-swarm/wasm-bindgen" "libp2p-gossipsub?/wasm-bindgen") ("upnp" "dep:libp2p-upnp") ("uds" "dep:libp2p-uds") ("tokio" "libp2p-swarm/tokio" "libp2p-mdns?/tokio" "libp2p-tcp?/tokio" "libp2p-dns?/tokio" "libp2p-quic?/tokio" "libp2p-upnp?/tokio") ("tls" "dep:libp2p-tls") ("tcp" "dep:libp2p-tcp") ("serde" "libp2p-core/serde" "libp2p-kad?/serde" "libp2p-gossipsub?/serde") ("request-response" "dep:libp2p-request-response") ("rendezvous" "dep:libp2p-rendezvous") ("relay" "dep:libp2p-relay" "libp2p-metrics?/relay") ("quic" "dep:libp2p-quic") ("pnet" "dep:libp2p-pnet") ("plaintext" "dep:libp2p-plaintext") ("ping" "dep:libp2p-ping" "libp2p-metrics?/ping") ("noise" "dep:libp2p-noise") ("metrics" "dep:libp2p-metrics") ("memory-connection-limits" "dep:libp2p-memory-connection-limits") ("mdns" "dep:libp2p-mdns") ("kad" "dep:libp2p-kad" "libp2p-metrics?/kad") ("json" "libp2p-request-response?/json") ("identify" "dep:libp2p-identify" "libp2p-metrics?/identify") ("gossipsub" "dep:libp2p-gossipsub" "libp2p-metrics?/gossipsub") ("floodsub" "dep:libp2p-floodsub") ("dns" "dep:libp2p-dns") ("dcutr" "dep:libp2p-dcutr" "libp2p-metrics?/dcutr") ("cbor" "libp2p-request-response?/cbor") ("autonat" "dep:libp2p-autonat") ("async-std" "libp2p-swarm/async-std" "libp2p-mdns?/async-io" "libp2p-tcp?/async-io" "libp2p-dns?/async-std" "libp2p-quic?/async-std")))) (r "1.73.0")))

(define-public crate-libp2p-0.53.1 (c (n "libp2p") (v "0.53.1") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "libp2p-connection-limits") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.41.1") (d #t) (k 0)) (d (n "libp2p-dcutr") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.41.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-floodsub") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.46.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.45.1") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.45.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-memory-connection-limits") (r "^0.2.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-metrics") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.41.0") (d #t) (k 2)) (d (n "libp2p-noise") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.44.0") (d #t) (k 2)) (d (n "libp2p-ping") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-quic") (r "^0.10.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-relay") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.44.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.41.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-tcp") (r "^0.41.0") (f (quote ("tokio"))) (d #t) (k 2)) (d (n "libp2p-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-uds") (r "^0.40.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-upnp") (r "^0.2.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-websocket") (r "^0.43.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-websocket-websys") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libp2p-webtransport-websys") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.45.0") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.18.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "rw-stream-sink") (r "^0.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0q32y9bvz6v4ccl5h7y6lalx4yb6x2ycyk6l6jf851ikd56a6lhj") (f (quote (("secp256k1" "libp2p-identity/secp256k1") ("rsa" "libp2p-identity/rsa") ("macros" "libp2p-swarm/macros") ("full" "async-std" "autonat" "cbor" "dcutr" "dns" "ecdsa" "ed25519" "floodsub" "gossipsub" "identify" "json" "kad" "macros" "mdns" "memory-connection-limits" "metrics" "noise" "ping" "plaintext" "pnet" "quic" "relay" "rendezvous" "request-response" "rsa" "secp256k1" "serde" "tcp" "tls" "tokio" "uds" "wasm-bindgen" "websocket-websys" "websocket" "webtransport-websys" "yamux" "upnp") ("ed25519" "libp2p-identity/ed25519") ("ecdsa" "libp2p-identity/ecdsa")))) (s 2) (e (quote (("yamux" "dep:libp2p-yamux") ("webtransport-websys" "dep:libp2p-webtransport-websys") ("websocket-websys" "dep:libp2p-websocket-websys") ("websocket" "dep:libp2p-websocket") ("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js" "libp2p-swarm/wasm-bindgen" "libp2p-gossipsub?/wasm-bindgen") ("upnp" "dep:libp2p-upnp") ("uds" "dep:libp2p-uds") ("tokio" "libp2p-swarm/tokio" "libp2p-mdns?/tokio" "libp2p-tcp?/tokio" "libp2p-dns?/tokio" "libp2p-quic?/tokio" "libp2p-upnp?/tokio") ("tls" "dep:libp2p-tls") ("tcp" "dep:libp2p-tcp") ("serde" "libp2p-core/serde" "libp2p-kad?/serde" "libp2p-gossipsub?/serde") ("request-response" "dep:libp2p-request-response") ("rendezvous" "dep:libp2p-rendezvous") ("relay" "dep:libp2p-relay" "libp2p-metrics?/relay") ("quic" "dep:libp2p-quic") ("pnet" "dep:libp2p-pnet") ("plaintext" "dep:libp2p-plaintext") ("ping" "dep:libp2p-ping" "libp2p-metrics?/ping") ("noise" "dep:libp2p-noise") ("metrics" "dep:libp2p-metrics") ("memory-connection-limits" "dep:libp2p-memory-connection-limits") ("mdns" "dep:libp2p-mdns") ("kad" "dep:libp2p-kad" "libp2p-metrics?/kad") ("json" "libp2p-request-response?/json") ("identify" "dep:libp2p-identify" "libp2p-metrics?/identify") ("gossipsub" "dep:libp2p-gossipsub" "libp2p-metrics?/gossipsub") ("floodsub" "dep:libp2p-floodsub") ("dns" "dep:libp2p-dns") ("dcutr" "dep:libp2p-dcutr" "libp2p-metrics?/dcutr") ("cbor" "libp2p-request-response?/cbor") ("autonat" "dep:libp2p-autonat") ("async-std" "libp2p-swarm/async-std" "libp2p-mdns?/async-io" "libp2p-tcp?/async-io" "libp2p-dns?/async-std" "libp2p-quic?/async-std")))) (r "1.73.0")))

(define-public crate-libp2p-0.51.4 (c (n "libp2p") (v "0.51.4") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.8.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "libp2p-connection-limits") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.39.0") (d #t) (k 0)) (d (n "libp2p-dcutr") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "libp2p-deflate") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-dns") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-floodsub") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.44.0") (o #t) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "libp2p-identify") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.43.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.43.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-metrics") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.42.2") (o #t) (d #t) (k 0)) (d (n "libp2p-perf") (r "^0.1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-ping") (r "^0.42.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.22.2") (o #t) (d #t) (k 0)) (d (n "libp2p-quic") (r "^0.7.0-alpha.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-relay") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.42.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.39.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-tls") (r "^0.1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-uds") (r "^0.38.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-wasm-ext") (r "^0.39.0") (o #t) (d #t) (k 0)) (d (n "libp2p-webrtc") (r "^0.4.0-alpha.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-websocket") (r "^0.41.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-yamux") (r "^0.43.1") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.17.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "1zhpv7hxhavxa6iz9l64s7zbzldbss9350nwdg73x68s40wawppk") (f (quote (("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js" "libp2p-swarm/wasm-bindgen") ("secp256k1" "libp2p-identity/secp256k1") ("rsa" "libp2p-identity/rsa") ("macros" "libp2p-swarm/macros") ("full" "async-std" "autonat" "dcutr" "deflate" "dns" "ecdsa" "ed25519" "floodsub" "gossipsub" "identify" "kad" "macros" "mdns" "metrics" "mplex" "noise" "perf" "ping" "plaintext" "pnet" "quic" "relay" "rendezvous" "request-response" "rsa" "secp256k1" "serde" "tcp" "tls" "tokio" "uds" "wasm-bindgen" "wasm-ext" "wasm-ext-websocket" "webrtc" "websocket" "yamux") ("ed25519" "libp2p-identity/ed25519") ("ecdsa" "libp2p-identity/ecdsa")))) (s 2) (e (quote (("yamux" "dep:libp2p-yamux") ("websocket" "dep:libp2p-websocket") ("webrtc" "dep:libp2p-webrtc" "libp2p-webrtc?/pem" "libp2p-webrtc/tokio") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext?/websocket") ("wasm-ext" "dep:libp2p-wasm-ext") ("uds" "dep:libp2p-uds") ("tokio" "libp2p-swarm/tokio" "libp2p-mdns?/tokio" "libp2p-tcp?/tokio" "libp2p-dns?/tokio" "libp2p-quic?/tokio") ("tls" "dep:libp2p-tls") ("tcp" "dep:libp2p-tcp") ("serde" "libp2p-core/serde" "libp2p-kad?/serde" "libp2p-gossipsub?/serde") ("request-response" "dep:libp2p-request-response") ("rendezvous" "dep:libp2p-rendezvous") ("relay" "dep:libp2p-relay" "libp2p-metrics?/relay") ("quic" "dep:libp2p-quic") ("pnet" "dep:libp2p-pnet") ("plaintext" "dep:libp2p-plaintext") ("ping" "dep:libp2p-ping" "libp2p-metrics?/ping") ("perf" "dep:libp2p-perf") ("noise" "dep:libp2p-noise") ("mplex" "dep:libp2p-mplex") ("metrics" "dep:libp2p-metrics") ("mdns" "dep:libp2p-mdns") ("kad" "dep:libp2p-kad" "libp2p-metrics?/kad") ("identify" "dep:libp2p-identify" "libp2p-metrics?/identify") ("gossipsub" "dep:libp2p-gossipsub" "libp2p-metrics?/gossipsub") ("floodsub" "dep:libp2p-floodsub") ("dns" "dep:libp2p-dns") ("deflate" "dep:libp2p-deflate") ("dcutr" "dep:libp2p-dcutr" "libp2p-metrics?/dcutr") ("autonat" "dep:libp2p-autonat") ("async-std" "libp2p-swarm/async-std" "libp2p-mdns?/async-io" "libp2p-tcp?/async-io" "libp2p-dns?/async-std" "libp2p-quic?/async-std")))) (r "1.65.0")))

(define-public crate-libp2p-0.53.2 (c (n "libp2p") (v "0.53.2") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-allow-block-list") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-autonat") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "libp2p-connection-limits") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.41.2") (d #t) (k 0)) (d (n "libp2p-dcutr") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.41.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-floodsub") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "libp2p-gossipsub") (r "^0.46.1") (o #t) (d #t) (k 0)) (d (n "libp2p-identify") (r "^0.44.1") (o #t) (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.8") (f (quote ("rand"))) (d #t) (k 0)) (d (n "libp2p-kad") (r "^0.45.3") (o #t) (d #t) (k 0)) (d (n "libp2p-mdns") (r "^0.45.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-memory-connection-limits") (r "^0.2.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-metrics") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.41.0") (d #t) (k 2)) (d (n "libp2p-noise") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.44.0") (d #t) (k 2)) (d (n "libp2p-ping") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.41.0") (o #t) (d #t) (k 0)) (d (n "libp2p-pnet") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "libp2p-quic") (r "^0.10.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-relay") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "libp2p-rendezvous") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.26.1") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.44.1") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.41.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-tcp") (r "^0.41.0") (f (quote ("tokio"))) (d #t) (k 2)) (d (n "libp2p-tls") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-uds") (r "^0.40.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-upnp") (r "^0.2.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-websocket") (r "^0.43.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p-websocket-websys") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "libp2p-webtransport-websys") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.45.1") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.18.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "rw-stream-sink") (r "^0.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "16gwqsf38j82qgrsr18i0sa9y2ywvkjynckxlpbyvyzdhgqv67v8") (f (quote (("secp256k1" "libp2p-identity/secp256k1") ("rsa" "libp2p-identity/rsa") ("macros" "libp2p-swarm/macros") ("full" "async-std" "autonat" "cbor" "dcutr" "dns" "ecdsa" "ed25519" "floodsub" "gossipsub" "identify" "json" "kad" "macros" "mdns" "memory-connection-limits" "metrics" "noise" "ping" "plaintext" "pnet" "quic" "relay" "rendezvous" "request-response" "rsa" "secp256k1" "serde" "tcp" "tls" "tokio" "uds" "wasm-bindgen" "websocket-websys" "websocket" "webtransport-websys" "yamux" "upnp") ("ed25519" "libp2p-identity/ed25519") ("ecdsa" "libp2p-identity/ecdsa")))) (s 2) (e (quote (("yamux" "dep:libp2p-yamux") ("webtransport-websys" "dep:libp2p-webtransport-websys") ("websocket-websys" "dep:libp2p-websocket-websys") ("websocket" "dep:libp2p-websocket") ("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen" "getrandom/js" "libp2p-swarm/wasm-bindgen" "libp2p-gossipsub?/wasm-bindgen") ("upnp" "dep:libp2p-upnp") ("uds" "dep:libp2p-uds") ("tokio" "libp2p-swarm/tokio" "libp2p-mdns?/tokio" "libp2p-tcp?/tokio" "libp2p-dns?/tokio" "libp2p-quic?/tokio" "libp2p-upnp?/tokio") ("tls" "dep:libp2p-tls") ("tcp" "dep:libp2p-tcp") ("serde" "libp2p-core/serde" "libp2p-kad?/serde" "libp2p-gossipsub?/serde") ("request-response" "dep:libp2p-request-response") ("rendezvous" "dep:libp2p-rendezvous") ("relay" "dep:libp2p-relay" "libp2p-metrics?/relay") ("quic" "dep:libp2p-quic") ("pnet" "dep:libp2p-pnet") ("plaintext" "dep:libp2p-plaintext") ("ping" "dep:libp2p-ping" "libp2p-metrics?/ping") ("noise" "dep:libp2p-noise") ("metrics" "dep:libp2p-metrics") ("memory-connection-limits" "dep:libp2p-memory-connection-limits") ("mdns" "dep:libp2p-mdns") ("kad" "dep:libp2p-kad" "libp2p-metrics?/kad") ("json" "libp2p-request-response?/json") ("identify" "dep:libp2p-identify" "libp2p-metrics?/identify") ("gossipsub" "dep:libp2p-gossipsub" "libp2p-metrics?/gossipsub") ("floodsub" "dep:libp2p-floodsub") ("dns" "dep:libp2p-dns") ("dcutr" "dep:libp2p-dcutr" "libp2p-metrics?/dcutr") ("cbor" "libp2p-request-response?/cbor") ("autonat" "dep:libp2p-autonat") ("async-std" "libp2p-swarm/async-std" "libp2p-mdns?/async-io" "libp2p-tcp?/async-io" "libp2p-dns?/async-std" "libp2p-quic?/async-std")))) (r "1.73.0")))

