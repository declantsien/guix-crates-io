(define-module (crates-io li bp libp2p-swarm) #:use-module (crates-io))

(define-public crate-libp2p-swarm-0.1.0 (c (n "libp2p-swarm") (v "0.1.0") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.11.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.1") (d #t) (k 0)))) (h "0c3qjjr80kdlm30js6qmwvs49mvz3savn4q9xhrac2r4ajga3247")))

(define-public crate-libp2p-swarm-0.2.0 (c (n "libp2p-swarm") (v "0.2.0") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.12.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.1") (d #t) (k 0)))) (h "0d21bdlx0fb99azkkvfvxbzw7r1zpskdnd9d0yw2yljfg766c7sl")))

(define-public crate-libp2p-swarm-0.3.0 (c (n "libp2p-swarm") (v "0.3.0") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.13.0") (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.13.0") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.1") (d #t) (k 0)))) (h "0nwhc9dfvb1h3zpadirqmikaa42qcn53rji4zyqjpb4ybygvqmfd")))

(define-public crate-libp2p-swarm-0.4.0-alpha.1 (c (n "libp2p-swarm") (v "0.4.0-alpha.1") (d (list (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.14.0-alpha.1") (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.14.0-alpha.1") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "027lp985wmah5f0rj3v8kz7sdz1k9njf3g47lw9m2ylcn2c9z8if")))

(define-public crate-libp2p-swarm-0.5.0 (c (n "libp2p-swarm") (v "0.5.0") (d (list (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.15.0") (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.15.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "1bh51j445bbhxdikax5acawaxdni5b767lmsdbiqafdwh6z01shl")))

(define-public crate-libp2p-swarm-0.16.0 (c (n "libp2p-swarm") (v "0.16.0") (d (list (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.16.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "1vynasjgi2y4pjzpfsm4y1lbl5zh9b6zphb1lg9y7gx4hkxz9sgi")))

(define-public crate-libp2p-swarm-0.16.1 (c (n "libp2p-swarm") (v "0.16.1") (d (list (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.16.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "0k2d1ijdh3gm4wd59vyayk8qpg83yracsrh8cq2f12p8q3kp2m17")))

(define-public crate-libp2p-swarm-0.17.0 (c (n "libp2p-swarm") (v "0.17.0") (d (list (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.17.0") (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.17.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "0r4mygak9pv045pjxxr8in5ly06z78ggnhy2vbcxd9bqi7gm7v54")))

(define-public crate-libp2p-swarm-0.18.0 (c (n "libp2p-swarm") (v "0.18.0") (d (list (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.18.0") (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.18.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "0g9q2mzml95v1l95mn4ynsz8ddqlwl3jb70qf9apprl5g20ha9k2")))

(define-public crate-libp2p-swarm-0.18.1 (c (n "libp2p-swarm") (v "0.18.1") (d (list (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.18.0") (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.18.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "060ghvqq0v9z4279j4vqdinch9izlkpnmsbg1bd93ijcwjd2ias4")))

(define-public crate-libp2p-swarm-0.19.0 (c (n "libp2p-swarm") (v "0.19.0") (d (list (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.19.0") (d #t) (k 0)) (d (n "libp2p-mplex") (r "^0.19.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "00mi7kk6i5lhflxf9xxjv9dws8slbyzpd91p45b08pqd1qd11a5l")))

(define-public crate-libp2p-swarm-0.19.1 (c (n "libp2p-swarm") (v "0.19.1") (d (list (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.19.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "0c1rk6aj9nk9cs7f1kl8azc9pm1jra0x7nw4vydb7y3w296zylyf")))

(define-public crate-libp2p-swarm-0.20.0 (c (n "libp2p-swarm") (v "0.20.0") (d (list (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.20.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "1165rfw4m6brly9w39d6c0bjzwbk7pxvn39d6rir6sh9zqiv6a9q")))

(define-public crate-libp2p-swarm-0.20.1 (c (n "libp2p-swarm") (v "0.20.1") (d (list (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.20.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "0cyivggfbv6yb5m40rr546mnsp015x74hcyd8bqasaha14m5x3gq")))

(define-public crate-libp2p-swarm-0.21.0 (c (n "libp2p-swarm") (v "0.21.0") (d (list (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.21.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "0s4x9ysli63zbzkshr4k7k2vjmzhj7bvadmfvaid3san87kagr2p")))

(define-public crate-libp2p-swarm-0.22.0 (c (n "libp2p-swarm") (v "0.22.0") (d (list (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.22.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "18ganqpcgh4lkdr1kxrwyp94n71zwmzyqmdph5xj6ch1452f94vi")))

(define-public crate-libp2p-swarm-0.23.0 (c (n "libp2p-swarm") (v "0.23.0") (d (list (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.23.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "18g6gcnras38sddpcq49mfhi2q460qabxzpviajvhmk9n4rzm9pz")))

(define-public crate-libp2p-swarm-0.24.0 (c (n "libp2p-swarm") (v "0.24.0") (d (list (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.24.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "06d976nymah517na0687xwyf1a5asn1l07j7g34k6h2bcw30wpsn")))

(define-public crate-libp2p-swarm-0.25.0 (c (n "libp2p-swarm") (v "0.25.0") (d (list (d (n "either") (r ">=1.6.0, <2.0.0") (d #t) (k 0)) (d (n "futures") (r ">=0.3.1, <0.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r ">=0.25.0, <0.26.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "quickcheck") (r ">=0.9.0, <0.10.0") (d #t) (k 2)) (d (n "rand") (r ">=0.7.0, <0.8.0") (d #t) (k 0)) (d (n "rand") (r ">=0.7.2, <0.8.0") (d #t) (k 2)) (d (n "smallvec") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "void") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "wasm-timer") (r ">=0.2.0, <0.3.0") (d #t) (k 0)))) (h "08hw1qshbi150aqfz7hk2mpqgqgm6r583vvcgg7jxl177x43qcyy")))

(define-public crate-libp2p-swarm-0.25.1 (c (n "libp2p-swarm") (v "0.25.1") (d (list (d (n "either") (r ">=1.6.0, <2.0.0") (d #t) (k 0)) (d (n "futures") (r ">=0.3.1, <0.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r ">=0.25.0, <0.26.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "quickcheck") (r ">=0.9.0, <0.10.0") (d #t) (k 2)) (d (n "rand") (r ">=0.7.0, <0.8.0") (d #t) (k 0)) (d (n "rand") (r ">=0.7.2, <0.8.0") (d #t) (k 2)) (d (n "smallvec") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "void") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "wasm-timer") (r ">=0.2.0, <0.3.0") (d #t) (k 0)))) (h "1zkx1m2x8kv2yxy0jhqdyq8nsnxcd8x1ns5l3qqaf4smx1afxv56")))

(define-public crate-libp2p-swarm-0.26.0 (c (n "libp2p-swarm") (v "0.26.0") (d (list (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.26.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "0hgcg8fs9h805hq24yzab5mxwzng7mpa2n4dln5a6qzfw578kxgx")))

(define-public crate-libp2p-swarm-0.27.0 (c (n "libp2p-swarm") (v "0.27.0") (d (list (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "0x9y63sh0kliyj1k25g4gg1qmm1ln8n2h93aihy5j3lshdlqrsi2")))

(define-public crate-libp2p-swarm-0.27.1 (c (n "libp2p-swarm") (v "0.27.1") (d (list (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "12744742vi693m1f1spn7gm8swpyb4cqgs934shvslw99nxrxy6l")))

(define-public crate-libp2p-swarm-0.27.2 (c (n "libp2p-swarm") (v "0.27.2") (d (list (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "167x4nd3z694m5if7fnmmi51zxi328f2dkj3zlgxcazxw5rvjmbr")))

(define-public crate-libp2p-swarm-0.28.0 (c (n "libp2p-swarm") (v "0.28.0") (d (list (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.28.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "1ynarqw27iyxqs1ivjcc29ilipzmyzhj7jvij3c2az6xra06khkm")))

(define-public crate-libp2p-swarm-0.29.0 (c (n "libp2p-swarm") (v "0.29.0") (d (list (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.28.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "14iskkga34dfnjcvcyb69gc7ayfss3l19fi8qyg04xgnxvhxh10y")))

(define-public crate-libp2p-swarm-0.30.0 (c (n "libp2p-swarm") (v "0.30.0") (d (list (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.29.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "1agr90r1y3vx14852yqggiwc9s51pq1dhk1vhrkm8mg1849qd0vh")))

(define-public crate-libp2p-swarm-0.31.0-rc.1 (c (n "libp2p-swarm") (v "0.31.0-rc.1") (d (list (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.30.0-rc.1") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "083ivslag00gn7vi598c9f7wyv6mxm1i0axz8nkpbhr2lckagfjy")))

(define-public crate-libp2p-swarm-0.31.0-rc.2 (c (n "libp2p-swarm") (v "0.31.0-rc.2") (d (list (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.30.0-rc.2") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "0q7nvvf8pjr9zzr0j3pxrfcslg22lzbs7z9wzkl00rff233h8krd")))

(define-public crate-libp2p-swarm-0.31.0 (c (n "libp2p-swarm") (v "0.31.0") (d (list (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.30.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "1sbs20dz02v7zgp0kz1nkw777f1zfwbmarhj188bq8zj12jq8l9z")))

(define-public crate-libp2p-swarm-0.32.0 (c (n "libp2p-swarm") (v "0.32.0") (d (list (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.30.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "14n76324fp5mnac8vj2n4gs06ngp9sfjda9xyjxrn46d4w3d916b")))

(define-public crate-libp2p-swarm-0.33.0 (c (n "libp2p-swarm") (v "0.33.0") (d (list (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.31.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "1h83hlq90bc7jxmhwy5d2nvwnmdhd76bakk8qvnvc1bs3j0y12nv") (r "1.56.1")))

(define-public crate-libp2p-swarm-0.34.0 (c (n "libp2p-swarm") (v "0.34.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.32.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "1jcfd27qlhcyrz96wg3dyxnh4cfjrm2r51fz1yqncaggp172vask") (r "1.56.1")))

(define-public crate-libp2p-swarm-0.35.0 (c (n "libp2p-swarm") (v "0.35.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.32.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "0k6ifkir77znjwqn4araacb3gwspidy9rbfm1b2myz4gksnnj34g") (r "1.56.1")))

(define-public crate-libp2p-swarm-0.36.0 (c (n "libp2p-swarm") (v "0.36.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.33.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "0jszjxz148kqy8c0zr5wwisqq6j873iq9azykyb245k42xz3r1p8") (r "1.56.1")))

(define-public crate-libp2p-swarm-0.36.1 (c (n "libp2p-swarm") (v "0.36.1") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.33.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "0ikkhvdjspb2iwa4dk939zni45vzz1mz2d67c01z1nxsb8fb4jwg") (r "1.56.1")))

(define-public crate-libp2p-swarm-0.37.0 (c (n "libp2p-swarm") (v "0.37.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.34.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "056i4zsskzl3fwkh50l07qgpp0lamxpxlgv9yzriybfyqbk5pb4m") (r "1.56.1")))

(define-public crate-libp2p-swarm-0.38.0 (c (n "libp2p-swarm") (v "0.38.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.35.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "0cqrjnz7h6gq8d3y9jc4gypkf9scn1sklq2idgbcd6jpgyk346fr") (r "1.56.1")))

(define-public crate-libp2p-swarm-0.39.0 (c (n "libp2p-swarm") (v "0.39.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.36.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "1wh0qqk2kwsbw9xkid1wm63yrvrjgqjf8n2bnl33cq061jv2vbbh") (r "1.56.1")))

(define-public crate-libp2p-swarm-0.40.1 (c (n "libp2p-swarm") (v "0.40.1") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.37.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "1kwf76sks106n9rp68yadk5yynd60i5hw34kh9frc1vqqgvkvla6") (r "1.56.1")))

(define-public crate-libp2p-swarm-0.41.0 (c (n "libp2p-swarm") (v "0.41.0") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "either") (r "^1.6.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.38.0") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.30.2") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.30.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("rt"))) (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (o #t) (d #t) (k 0)))) (h "11n4g8xs4q477zz9isnaqqvrvs3sgaxk5nci1kycprjc9iixk9ac") (s 2) (e (quote (("wasm-bindgen" "dep:wasm-bindgen-futures" "dep:getrandom") ("tokio" "dep:tokio") ("macros" "dep:libp2p-swarm-derive") ("async-std" "dep:async-std")))) (r "1.62.0")))

(define-public crate-libp2p-swarm-0.41.1 (c (n "libp2p-swarm") (v "0.41.1") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "either") (r "^1.6.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.38.0") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("rt"))) (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (o #t) (d #t) (k 0)))) (h "1871qrkxz71lsnd44mh20dg624w4x8rc1w80bj2v6xijzrr598xj") (s 2) (e (quote (("wasm-bindgen" "dep:wasm-bindgen-futures" "dep:getrandom") ("tokio" "dep:tokio") ("macros" "dep:libp2p-swarm-derive") ("async-std" "dep:async-std")))) (r "1.62.0")))

(define-public crate-libp2p-swarm-0.42.0 (c (n "libp2p-swarm") (v "0.42.0") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "either") (r "^1.6.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.39.0") (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("rt"))) (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (o #t) (d #t) (k 0)))) (h "11nsy30v4zivzp18mkm7ikzzzkbfl0f9r5ic150d20q7sy1jmhlj") (s 2) (e (quote (("wasm-bindgen" "dep:wasm-bindgen-futures" "dep:getrandom") ("tokio" "dep:tokio") ("macros" "dep:libp2p-swarm-derive") ("async-std" "dep:async-std")))) (r "1.62.0")))

(define-public crate-libp2p-swarm-0.42.1 (c (n "libp2p-swarm") (v "0.42.1") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "either") (r "^1.6.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.27") (d #t) (k 0)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.39.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.1.0") (f (quote ("ed25519"))) (d #t) (k 2)) (d (n "libp2p-swarm-derive") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("rt"))) (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (o #t) (d #t) (k 0)))) (h "1hkbjhp6bxvxm5zv5bida7ii063rh4p4x5cv1xwy7mzw08zj47mx") (s 2) (e (quote (("wasm-bindgen" "dep:wasm-bindgen-futures" "dep:getrandom") ("tokio" "dep:tokio") ("macros" "dep:libp2p-swarm-derive") ("async-std" "dep:async-std")))) (r "1.62.0")))

(define-public crate-libp2p-swarm-0.42.2 (c (n "libp2p-swarm") (v "0.42.2") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "either") (r "^1.6.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.9") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.39.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.1.0") (f (quote ("ed25519"))) (d #t) (k 2)) (d (n "libp2p-swarm-derive") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("rt"))) (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (o #t) (d #t) (k 0)))) (h "15mj4zpy7hqzffl4nr46jglln05w66fz44fj0iifb53n5mcksfwh") (s 2) (e (quote (("wasm-bindgen" "dep:wasm-bindgen-futures" "dep:getrandom") ("tokio" "dep:tokio") ("macros" "dep:libp2p-swarm-derive") ("async-std" "dep:async-std")))) (r "1.62.0")))

(define-public crate-libp2p-swarm-0.43.0 (c (n "libp2p-swarm") (v "0.43.0") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "either") (r "^1.6.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.9") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.40.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.0") (f (quote ("ed25519"))) (d #t) (k 2)) (d (n "libp2p-swarm-derive") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-swarm-derive") (r "^0.33.0") (d #t) (k 2)) (d (n "libp2p-yamux") (r "^0.44.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multistream-select") (r "^0.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("rt"))) (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "trybuild") (r "^1.0.80") (d #t) (k 2)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.36") (o #t) (d #t) (k 0)))) (h "0bx8pxxg071l9sz7jkng5s00qfpzlnx5z2wc572qhbs92wwgxwd6") (s 2) (e (quote (("wasm-bindgen" "dep:wasm-bindgen-futures" "dep:getrandom") ("tokio" "dep:tokio") ("macros" "dep:libp2p-swarm-derive") ("async-std" "dep:async-std")))) (r "1.65.0")))

(define-public crate-libp2p-swarm-0.43.1 (c (n "libp2p-swarm") (v "0.43.1") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "either") (r "^1.6.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.9") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.40.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.1") (f (quote ("ed25519"))) (d #t) (k 2)) (d (n "libp2p-swarm-derive") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.44.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multistream-select") (r "^0.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("rt"))) (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "trybuild") (r "^1.0.80") (d #t) (k 2)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (o #t) (d #t) (k 0)))) (h "0v147n8mbnn57g0h33xixmzldzrq6n005hpq7l3dwfzwjwh5pqax") (s 2) (e (quote (("wasm-bindgen" "dep:wasm-bindgen-futures" "dep:getrandom") ("tokio" "dep:tokio") ("macros" "dep:libp2p-swarm-derive") ("async-std" "dep:async-std")))) (r "1.65.0")))

(define-public crate-libp2p-swarm-0.43.2 (c (n "libp2p-swarm") (v "0.43.2") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.9.0") (d #t) (k 0)) (d (n "either") (r "^1.9.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.9") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.40.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.2") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.2") (f (quote ("ed25519"))) (d #t) (k 2)) (d (n "libp2p-swarm-derive") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.44.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multistream-select") (r "^0.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("rt"))) (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "trybuild") (r "^1.0.80") (d #t) (k 2)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (o #t) (d #t) (k 0)))) (h "0c0xkw83kch9m31p0374linnfvpnjcsqg8q1gg3na3vy0lh6h423") (s 2) (e (quote (("wasm-bindgen" "dep:wasm-bindgen-futures" "dep:getrandom") ("tokio" "dep:tokio") ("macros" "dep:libp2p-swarm-derive") ("async-std" "dep:async-std")))) (r "1.65.0")))

(define-public crate-libp2p-swarm-0.43.3 (c (n "libp2p-swarm") (v "0.43.3") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.9.0") (d #t) (k 0)) (d (n "either") (r "^1.9.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.9") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.40.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.2") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.2") (f (quote ("ed25519"))) (d #t) (k 2)) (d (n "libp2p-swarm-derive") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.44.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multistream-select") (r "^0.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("rt"))) (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "trybuild") (r "^1.0.80") (d #t) (k 2)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (o #t) (d #t) (k 0)))) (h "06n0f8bkmnj7ajg0y24gamyf5fx91yzslin1sck3bmqvhm26j098") (s 2) (e (quote (("wasm-bindgen" "dep:wasm-bindgen-futures" "dep:getrandom") ("tokio" "dep:tokio") ("macros" "dep:libp2p-swarm-derive") ("async-std" "dep:async-std")))) (r "1.65.0")))

(define-public crate-libp2p-swarm-0.43.4 (c (n "libp2p-swarm") (v "0.43.4") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.9.0") (d #t) (k 0)) (d (n "either") (r "^1.9.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.9") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.40.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.3") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.3") (f (quote ("ed25519"))) (d #t) (k 2)) (d (n "libp2p-swarm-derive") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multistream-select") (r "^0.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt"))) (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("time" "rt" "macros"))) (d #t) (k 2)) (d (n "trybuild") (r "^1.0.85") (d #t) (k 2)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (o #t) (d #t) (k 0)))) (h "1np1qi0q5gfaq3zngp9xzpy4sihjy2h8xp4ncb71vjn5pnd79kzh") (s 2) (e (quote (("wasm-bindgen" "dep:wasm-bindgen-futures" "dep:getrandom") ("tokio" "dep:tokio") ("macros" "dep:libp2p-swarm-derive") ("async-std" "dep:async-std")))) (r "1.65.0")))

(define-public crate-libp2p-swarm-0.43.5 (c (n "libp2p-swarm") (v "0.43.5") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.9.0") (d #t) (k 0)) (d (n "either") (r "^1.9.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.9") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.40.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.3") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.3") (f (quote ("ed25519"))) (d #t) (k 2)) (d (n "libp2p-swarm-derive") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multistream-select") (r "^0.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.1") (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt"))) (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("time" "rt" "macros"))) (d #t) (k 2)) (d (n "trybuild") (r "^1.0.85") (d #t) (k 2)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (o #t) (d #t) (k 0)))) (h "0sd35fdjj5sp19n61m1c6schqd24xdnr8msvhcbmhcn2iwzii55b") (s 2) (e (quote (("wasm-bindgen" "dep:wasm-bindgen-futures" "dep:getrandom") ("tokio" "dep:tokio") ("macros" "dep:libp2p-swarm-derive") ("async-std" "dep:async-std")))) (r "1.65.0")))

(define-public crate-libp2p-swarm-0.43.6 (c (n "libp2p-swarm") (v "0.43.6") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.9.0") (d #t) (k 0)) (d (n "either") (r "^1.9.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.9") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.40.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("ed25519"))) (d #t) (k 2)) (d (n "libp2p-swarm-derive") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multistream-select") (r "^0.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.1") (d #t) (k 0)) (d (n "tokio") (r "^1.33") (f (quote ("rt"))) (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("time" "rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "trybuild") (r "^1.0.85") (d #t) (k 2)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (o #t) (d #t) (k 0)))) (h "15w7igyinw5p8wvbw4wbm8ac5ijpg9ab0c3vyavc1zj5ia8hxzs8") (s 2) (e (quote (("wasm-bindgen" "dep:wasm-bindgen-futures" "dep:getrandom") ("tokio" "dep:tokio") ("macros" "dep:libp2p-swarm-derive") ("async-std" "dep:async-std")))) (r "1.65.0")))

(define-public crate-libp2p-swarm-0.43.7 (c (n "libp2p-swarm") (v "0.43.7") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.9.0") (d #t) (k 0)) (d (n "either") (r "^1.9.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.9") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.40.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("ed25519"))) (d #t) (k 2)) (d (n "libp2p-swarm-derive") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multistream-select") (r "^0.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.1") (d #t) (k 0)) (d (n "tokio") (r "^1.33") (f (quote ("rt"))) (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("time" "rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "trybuild") (r "^1.0.85") (d #t) (k 2)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (o #t) (d #t) (k 0)))) (h "0h81bjhgrfg8b4b5msipvbnrl19h7x7zapp7j3glgy2a0zh8j0aq") (s 2) (e (quote (("wasm-bindgen" "dep:wasm-bindgen-futures" "dep:getrandom") ("tokio" "dep:tokio") ("macros" "dep:libp2p-swarm-derive") ("async-std" "dep:async-std")))) (r "1.65.0")))

(define-public crate-libp2p-swarm-0.44.0 (c (n "libp2p-swarm") (v "0.44.0") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.9.0") (d #t) (k 0)) (d (n "either") (r "^1.9.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.9") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.41.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("ed25519"))) (d #t) (k 2)) (d (n "libp2p-swarm-derive") (r "=0.34.0") (o #t) (d #t) (k 0)) (d (n "multistream-select") (r "^0.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.1") (d #t) (k 0)) (d (n "tokio") (r "^1.33") (f (quote ("rt"))) (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("time" "rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trybuild") (r "^1.0.85") (d #t) (k 2)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (o #t) (d #t) (k 0)))) (h "1c3q1rb6wrn1cz12xiadz4sb8d9lp1hpnxf965v3hmnvhwfy2g34") (s 2) (e (quote (("wasm-bindgen" "dep:wasm-bindgen-futures" "dep:getrandom") ("tokio" "dep:tokio") ("macros" "dep:libp2p-swarm-derive") ("async-std" "dep:async-std")))) (r "1.73.0")))

(define-public crate-libp2p-swarm-0.44.1 (c (n "libp2p-swarm") (v "0.44.1") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.9.0") (d #t) (k 0)) (d (n "either") (r "^1.9.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.11") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.41.2") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.8") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.8") (f (quote ("ed25519"))) (d #t) (k 2)) (d (n "libp2p-swarm-derive") (r "=0.34.1") (o #t) (d #t) (k 0)) (d (n "multistream-select") (r "^0.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "tokio") (r "^1.34") (f (quote ("rt"))) (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("time" "rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trybuild") (r "^1.0.85") (d #t) (k 2)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (o #t) (d #t) (k 0)))) (h "0rhqfsj6ihmbjxafl9kpfwc3f40hkdf82wf362p95cjg7ky349g9") (s 2) (e (quote (("wasm-bindgen" "dep:wasm-bindgen-futures" "dep:getrandom") ("tokio" "dep:tokio") ("macros" "dep:libp2p-swarm-derive") ("async-std" "dep:async-std")))) (r "1.73.0")))

(define-public crate-libp2p-swarm-0.44.2 (c (n "libp2p-swarm") (v "0.44.2") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "either") (r "^1.11.0") (d #t) (k 0)) (d (n "either") (r "^1.11.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.14") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.41.2") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.8") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.8") (f (quote ("ed25519"))) (d #t) (k 2)) (d (n "libp2p-swarm-derive") (r "=0.34.2") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.12.3") (d #t) (k 0)) (d (n "multistream-select") (r "^0.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.13.2") (d #t) (k 0)) (d (n "tokio") (r "^1.37") (f (quote ("rt"))) (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0)) (d (n "tokio") (r "^1.37") (f (quote ("time" "rt" "macros" "rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trybuild") (r "^1.0.91") (d #t) (k 2)) (d (n "void") (r "^1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (o #t) (d #t) (k 0)))) (h "0zhgkg61vrdrmzxgqqi761xslqzlp7hfpyb272jvr7gqfp5ydjl0") (s 2) (e (quote (("wasm-bindgen" "dep:wasm-bindgen-futures" "dep:getrandom") ("tokio" "dep:tokio") ("macros" "dep:libp2p-swarm-derive") ("async-std" "dep:async-std")))) (r "1.75.0")))

