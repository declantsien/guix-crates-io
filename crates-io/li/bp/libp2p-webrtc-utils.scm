(define-module (crates-io li bp libp2p-webrtc-utils) #:use-module (crates-io))

(define-public crate-libp2p-webrtc-utils-0.1.0 (c (n "libp2p-webrtc-utils") (v "0.1.0") (d (list (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.40.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.3") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.43.1") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 2)))) (h "0ii3jxsdr8hzx9gklrrdb3p6pnzrjwfgnadfc3f92dgch5w3g1mi") (r "1.65.0")))

(define-public crate-libp2p-webrtc-utils-0.2.0 (c (n "libp2p-webrtc-utils") (v "0.2.0") (d (list (d (n "asynchronous-codec") (r "^0.7.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.41.2") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.8") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.44.0") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.3.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "11zn3fz77lm7nq36fffyav4b9f3aq2acn3iw0da45qskr9qi9wci") (r "1.73.0")))

