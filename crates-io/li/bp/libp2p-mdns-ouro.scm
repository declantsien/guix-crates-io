(define-module (crates-io li bp libp2p-mdns-ouro) #:use-module (crates-io))

(define-public crate-libp2p-mdns-ouro-0.31.1 (c (n "libp2p-mdns-ouro") (v "0.31.1") (d (list (d (n "async-io") (r "^1.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (k 2)) (d (n "if-watch") (r "^0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.29.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.30.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "socket2") (r "^0.4.0") (f (quote ("all"))) (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("rt" "rt-multi-thread"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "0nlffcznqgdw3b1gyqf1ww4yqn2cig51hsc3bmr6c48kcmlqp5bn")))

