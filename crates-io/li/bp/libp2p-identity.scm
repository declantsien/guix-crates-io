(define-module (crates-io li bp libp2p-identity) #:use-module (crates-io))

(define-public crate-libp2p-identity-0.1.0 (c (n "libp2p-identity") (v "0.1.0") (d (list (d (n "asn1_der") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiaddr") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.17.0") (f (quote ("std" "multihash-impl" "identity" "sha2"))) (o #t) (k 0)) (d (n "p256") (r "^0.12") (f (quote ("ecdsa" "std"))) (o #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "prost-build") (r "^0.11") (d #t) (k 1)) (d (n "quick-protobuf") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^1.0") (d #t) (k 2)) (d (n "sec1") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1lkvzrjvwdpl6rg35jgz7q0jw2hxbyd6nmg730gx6cr33svrqv7z") (f (quote (("secp256k1" "libsecp256k1" "asn1_der" "prost" "rand" "sha2" "zeroize") ("peerid" "multihash" "multiaddr" "bs58" "rand" "thiserror") ("ed25519" "ed25519-dalek" "prost" "rand" "zeroize") ("ecdsa" "p256" "prost" "rand" "void" "zeroize" "sec1")))) (s 2) (e (quote (("rsa" "dep:ring" "asn1_der" "prost" "rand" "zeroize")))) (r "1.60.0")))

(define-public crate-libp2p-identity-0.1.1 (c (n "libp2p-identity") (v "0.1.1") (d (list (d (n "asn1_der") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiaddr") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.17.0") (f (quote ("std" "multihash-impl" "identity" "sha2"))) (o #t) (k 0)) (d (n "p256") (r "^0.12") (f (quote ("ecdsa" "std"))) (o #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^1.0") (d #t) (k 2)) (d (n "sec1") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.0") (o #t) (d #t) (k 0)))) (h "09zxf1779jjpga513ckqabjaz5wqgcihahrm2lrpxshcmqrs93la") (f (quote (("secp256k1" "libsecp256k1" "asn1_der" "prost" "rand" "sha2" "zeroize") ("peerid" "multihash" "multiaddr" "bs58" "rand" "thiserror") ("ed25519" "ed25519-dalek" "prost" "rand" "zeroize") ("ecdsa" "p256" "prost" "rand" "void" "zeroize" "sec1")))) (s 2) (e (quote (("rsa" "dep:ring" "asn1_der" "prost" "rand" "zeroize")))) (r "1.60.0")))

(define-public crate-libp2p-identity-0.1.2 (c (n "libp2p-identity") (v "0.1.2") (d (list (d (n "asn1_der") (r "^0.7.6") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiaddr") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.17.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "p256") (r "^0.12") (f (quote ("ecdsa" "std"))) (o #t) (k 0)) (d (n "quick-protobuf") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^1.0") (d #t) (k 2)) (d (n "sec1") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (o #t) (d #t) (k 0)))) (h "1hbgb57j0fgn5b7j1r7ll1h8lcwipvk6n42nmamjmjyfa53mhbcy") (s 2) (e (quote (("secp256k1" "dep:libsecp256k1" "dep:asn1_der" "dep:rand" "dep:sha2" "dep:zeroize" "dep:quick-protobuf") ("rsa" "dep:ring" "dep:asn1_der" "dep:rand" "dep:zeroize" "dep:quick-protobuf") ("peerid" "dep:multihash" "dep:multiaddr" "dep:bs58" "dep:rand" "dep:thiserror" "dep:sha2") ("ed25519" "dep:ed25519-dalek" "dep:rand" "dep:zeroize" "dep:quick-protobuf") ("ecdsa" "dep:p256" "dep:rand" "dep:void" "dep:zeroize" "dep:sec1" "dep:quick-protobuf")))) (r "1.60.0")))

(define-public crate-libp2p-identity-0.2.0 (c (n "libp2p-identity") (v "0.2.0") (d (list (d (n "asn1_der") (r "^0.7.6") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 2)) (d (n "bs58") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "libsecp256k1") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multihash") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.13") (f (quote ("ecdsa" "std" "pem"))) (o #t) (k 0)) (d (n "quick-protobuf") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^1.0") (d #t) (k 2)) (d (n "sec1") (r "^0.7") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (o #t) (d #t) (k 0)))) (h "1h5kkbsclrfgbn951b6ds0bffif80rl28xl0bnc8kzl49d9v79wk") (s 2) (e (quote (("secp256k1" "dep:libsecp256k1" "dep:asn1_der" "dep:rand" "dep:sha2" "dep:zeroize") ("rsa" "dep:ring" "dep:asn1_der" "dep:rand" "dep:zeroize") ("peerid" "dep:multihash" "dep:bs58" "dep:rand" "dep:thiserror" "dep:sha2") ("ed25519" "dep:ed25519-dalek" "dep:rand" "dep:zeroize") ("ecdsa" "dep:p256" "dep:rand" "dep:void" "dep:zeroize" "dep:sec1")))) (r "1.65.0")))

(define-public crate-libp2p-identity-0.2.1 (c (n "libp2p-identity") (v "0.2.1") (d (list (d (n "asn1_der") (r "^0.7.6") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 2)) (d (n "bs58") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "libsecp256k1") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multihash") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.13") (f (quote ("ecdsa" "std" "pem"))) (o #t) (k 0)) (d (n "quick-protobuf") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^1.0") (d #t) (k 2)) (d (n "sec1") (r "^0.7") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (o #t) (d #t) (k 0)))) (h "18im90w0p1yy7786y2pypbgxrzxh5g2gaah2a6hxgwbmcnf4v1yj") (s 2) (e (quote (("secp256k1" "dep:libsecp256k1" "dep:asn1_der" "dep:rand" "dep:sha2" "dep:zeroize") ("rsa" "dep:ring" "dep:asn1_der" "dep:rand" "dep:zeroize") ("peerid" "dep:multihash" "dep:bs58" "dep:rand" "dep:thiserror" "dep:sha2") ("ed25519" "dep:ed25519-dalek" "dep:rand" "dep:zeroize") ("ecdsa" "dep:p256" "dep:rand" "dep:void" "dep:zeroize" "dep:sec1")))) (r "1.65.0")))

(define-public crate-libp2p-identity-0.2.2 (c (n "libp2p-identity") (v "0.2.2") (d (list (d (n "asn1_der") (r "^0.7.6") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 2)) (d (n "bs58") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "libsecp256k1") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multihash") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.13") (f (quote ("ecdsa" "std" "pem"))) (o #t) (k 0)) (d (n "quick-protobuf") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^1.1") (d #t) (k 2)) (d (n "sec1") (r "^0.7") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (o #t) (d #t) (k 0)))) (h "1h9ymk3hpdyrj06rypf1dm2prz0ibd0ynhylwqacrr2gg09613d3") (s 2) (e (quote (("secp256k1" "dep:libsecp256k1" "dep:asn1_der" "dep:rand" "dep:sha2" "dep:zeroize") ("rsa" "dep:ring" "dep:asn1_der" "dep:rand" "dep:zeroize") ("peerid" "dep:multihash" "dep:bs58" "dep:rand" "dep:thiserror" "dep:sha2") ("ed25519" "dep:ed25519-dalek" "dep:rand" "dep:zeroize") ("ecdsa" "dep:p256" "dep:rand" "dep:void" "dep:zeroize" "dep:sec1")))) (r "1.65.0")))

(define-public crate-libp2p-identity-0.2.3 (c (n "libp2p-identity") (v "0.2.3") (d (list (d (n "asn1_der") (r "^0.7.6") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 2)) (d (n "bs58") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0") (f (quote ("rand_core"))) (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "libsecp256k1") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multihash") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.13") (f (quote ("ecdsa" "std" "pem"))) (o #t) (k 0)) (d (n "quick-protobuf") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^1.1") (d #t) (k 2)) (d (n "sec1") (r "^0.7") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (o #t) (d #t) (k 0)))) (h "1aawag5cz0m13f43la3vma36js6qdzm40ly8kfwzngp2ynpp6vk8") (s 2) (e (quote (("secp256k1" "dep:libsecp256k1" "dep:asn1_der" "dep:rand" "dep:sha2" "dep:zeroize") ("rsa" "dep:ring" "dep:asn1_der" "dep:rand" "dep:zeroize") ("peerid" "dep:multihash" "dep:bs58" "dep:rand" "dep:thiserror" "dep:sha2") ("ed25519" "dep:ed25519-dalek" "dep:rand" "dep:zeroize") ("ecdsa" "dep:p256" "dep:rand" "dep:void" "dep:zeroize" "dep:sec1")))) (r "1.65.0")))

(define-public crate-libp2p-identity-0.1.3 (c (n "libp2p-identity") (v "0.1.3") (d (list (d (n "asn1_der") (r "^0.7.6") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0") (f (quote ("rand_core"))) (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiaddr") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.17.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "p256") (r "^0.12") (f (quote ("ecdsa" "std"))) (o #t) (k 0)) (d (n "quick-protobuf") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^1.0") (d #t) (k 2)) (d (n "sec1") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (o #t) (d #t) (k 0)))) (h "1kmwgb074ja6ry7a39sbxxz2nxf66bfwn49w1l88ypgig9zbasr7") (s 2) (e (quote (("secp256k1" "dep:libsecp256k1" "dep:asn1_der" "dep:rand" "dep:sha2" "dep:zeroize" "dep:quick-protobuf") ("rsa" "dep:ring" "dep:asn1_der" "dep:rand" "dep:zeroize" "dep:quick-protobuf") ("peerid" "dep:multihash" "dep:multiaddr" "dep:bs58" "dep:rand" "dep:thiserror" "dep:sha2") ("ed25519" "dep:ed25519-dalek" "dep:rand" "dep:zeroize" "dep:quick-protobuf") ("ecdsa" "dep:p256" "dep:rand" "dep:void" "dep:zeroize" "dep:sec1" "dep:quick-protobuf")))) (r "1.60.0")))

(define-public crate-libp2p-identity-0.2.4 (c (n "libp2p-identity") (v "0.2.4") (d (list (d (n "asn1_der") (r "^0.7.6") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 2)) (d (n "bs58") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0") (f (quote ("rand_core"))) (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "hkdf") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multihash") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.13") (f (quote ("ecdsa" "std" "pem"))) (o #t) (k 0)) (d (n "quick-protobuf") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^1.1") (d #t) (k 2)) (d (n "sec1") (r "^0.7") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (o #t) (d #t) (k 0)))) (h "0yy6w0csrvdyqhzlsha63w8kly1grmhbmah6vc4f9vc2kkr08wzk") (s 2) (e (quote (("secp256k1" "dep:libsecp256k1" "dep:asn1_der" "dep:rand" "dep:sha2" "dep:hkdf" "dep:zeroize") ("rsa" "dep:ring" "dep:asn1_der" "dep:rand" "dep:zeroize") ("peerid" "dep:multihash" "dep:bs58" "dep:rand" "dep:thiserror" "dep:sha2" "dep:hkdf") ("ed25519" "dep:ed25519-dalek" "dep:rand" "dep:zeroize" "dep:sha2" "dep:hkdf") ("ecdsa" "dep:p256" "dep:rand" "dep:void" "dep:zeroize" "dep:sec1" "dep:sha2" "dep:hkdf")))) (r "1.65.0")))

(define-public crate-libp2p-identity-0.2.5 (c (n "libp2p-identity") (v "0.2.5") (d (list (d (n "asn1_der") (r "^0.7.6") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 2)) (d (n "bs58") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0") (f (quote ("rand_core"))) (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "hkdf") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multihash") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.13") (f (quote ("ecdsa" "std" "pem"))) (o #t) (k 0)) (d (n "quick-protobuf") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^1.1") (d #t) (k 2)) (d (n "sec1") (r "^0.7") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (o #t) (d #t) (k 0)))) (h "1m0jm14p8g4vmq9914qnfcdnhvij7fqgylysb0lh5ry51rrnxgsp") (s 2) (e (quote (("secp256k1" "dep:libsecp256k1" "dep:asn1_der" "dep:rand" "dep:sha2" "dep:hkdf" "dep:zeroize") ("rsa" "dep:ring" "dep:asn1_der" "dep:rand" "dep:zeroize") ("peerid" "dep:multihash" "dep:bs58" "dep:rand" "dep:thiserror" "dep:sha2" "dep:hkdf") ("ed25519" "dep:ed25519-dalek" "dep:rand" "dep:zeroize" "dep:sha2" "dep:hkdf") ("ecdsa" "dep:p256" "dep:rand" "dep:void" "dep:zeroize" "dep:sec1" "dep:sha2" "dep:hkdf")))) (r "1.65.0")))

(define-public crate-libp2p-identity-0.2.6 (c (n "libp2p-identity") (v "0.2.6") (d (list (d (n "asn1_der") (r "^0.7.6") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 2)) (d (n "bs58") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0") (f (quote ("rand_core"))) (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "hkdf") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multihash") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.13") (f (quote ("ecdsa" "std" "pem"))) (o #t) (k 0)) (d (n "quick-protobuf") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^1.1") (d #t) (k 2)) (d (n "sec1") (r "^0.7") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (o #t) (d #t) (k 0)))) (h "1bagk7qiabyyf6palcp6dc1qjcw1cjyfyln4wwnkq65i8qxwrrii") (s 2) (e (quote (("secp256k1" "dep:libsecp256k1" "dep:asn1_der" "dep:rand" "dep:sha2" "dep:hkdf" "dep:zeroize") ("rsa" "dep:ring" "dep:asn1_der" "dep:rand" "dep:zeroize") ("peerid" "dep:multihash" "dep:bs58" "dep:rand" "dep:thiserror" "dep:sha2" "dep:hkdf") ("ed25519" "dep:ed25519-dalek" "dep:rand" "dep:zeroize" "dep:sha2" "dep:hkdf") ("ecdsa" "dep:p256" "dep:rand" "dep:void" "dep:zeroize" "dep:sec1" "dep:sha2" "dep:hkdf")))) (r "1.65.0")))

(define-public crate-libp2p-identity-0.2.7 (c (n "libp2p-identity") (v "0.2.7") (d (list (d (n "asn1_der") (r "^0.7.6") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (d #t) (k 2)) (d (n "bs58") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "hkdf") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multihash") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.13") (f (quote ("ecdsa" "std" "pem"))) (o #t) (k 0)) (d (n "quick-protobuf") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^1.1") (d #t) (k 2)) (d (n "sec1") (r "^0.7") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (o #t) (d #t) (k 0)))) (h "0wk9m5g81q9rw26n9dlrac22c1zbhij9r662fjyblqgk85s33mnd") (s 2) (e (quote (("secp256k1" "dep:libsecp256k1" "dep:asn1_der" "dep:sha2" "dep:hkdf" "dep:zeroize") ("rsa" "dep:ring" "dep:asn1_der" "dep:rand" "dep:zeroize") ("rand" "dep:rand" "ed25519-dalek?/rand_core") ("peerid" "dep:multihash" "dep:bs58" "dep:thiserror" "dep:sha2" "dep:hkdf") ("ed25519" "dep:ed25519-dalek" "dep:zeroize" "dep:sha2" "dep:hkdf") ("ecdsa" "dep:p256" "dep:void" "dep:zeroize" "dep:sec1" "dep:sha2" "dep:hkdf")))) (r "1.65.0")))

(define-public crate-libp2p-identity-0.2.8 (c (n "libp2p-identity") (v "0.2.8") (d (list (d (n "asn1_der") (r "^0.7.6") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 2)) (d (n "bs58") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "hkdf") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.13") (f (quote ("ecdsa" "std" "pem"))) (o #t) (k 0)) (d (n "quick-protobuf") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.17.5") (f (quote ("alloc" "std"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp-serde") (r "^1.1") (d #t) (k 2)) (d (n "sec1") (r "^0.7") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "void") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (o #t) (d #t) (k 0)))) (h "1q4vmg3igan0qq8nlvy6pplk5jb6qimnlwkna0skbyxj842cg7lr") (s 2) (e (quote (("secp256k1" "dep:libsecp256k1" "dep:asn1_der" "dep:sha2" "dep:hkdf" "dep:zeroize") ("rsa" "dep:ring" "dep:asn1_der" "dep:rand" "dep:zeroize") ("rand" "dep:rand" "ed25519-dalek?/rand_core") ("peerid" "dep:multihash" "dep:bs58" "dep:thiserror" "dep:sha2" "dep:hkdf") ("ed25519" "dep:ed25519-dalek" "dep:zeroize" "dep:sha2" "dep:hkdf") ("ecdsa" "dep:p256" "dep:void" "dep:zeroize" "dep:sec1" "dep:sha2" "dep:hkdf")))) (r "1.73.0")))

