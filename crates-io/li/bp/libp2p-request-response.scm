(define-module (crates-io li bp libp2p-request-response) #:use-module (crates-io))

(define-public crate-libp2p-request-response-0.1.0 (c (n "libp2p-request-response") (v "0.1.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.20.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.20.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "1mxzsdrahnhd0k5c1a4d5qw4vw1jj1xjfs60k2dm3yl9fk2lq6hg")))

(define-public crate-libp2p-request-response-0.1.1 (c (n "libp2p-request-response") (v "0.1.1") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.20.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.20.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "1a9jq0yjx44zds305fhb4i8f5hagsv0m1lgd4filard990mnhj3g")))

(define-public crate-libp2p-request-response-0.2.0 (c (n "libp2p-request-response") (v "0.2.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.21.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.21.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "lru") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "13vz3bcdbdkbhs16z8y0ap4qsqdm6fbh2q8s372lc7d1aq7dxw2a")))

(define-public crate-libp2p-request-response-0.3.0 (c (n "libp2p-request-response") (v "0.3.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.22.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.22.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "lru") (r "^0.6") (d #t) (k 0)) (d (n "minicbor") (r "^0.5") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.5") (f (quote ("std" "futures"))) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "18w4drmdy5nszin25id8mc8z84km00yk2m3ccklrg7fn9j59w34w")))

(define-public crate-libp2p-request-response-0.4.0 (c (n "libp2p-request-response") (v "0.4.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.23.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.23.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "lru") (r "^0.6") (d #t) (k 0)) (d (n "minicbor") (r "^0.6") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.5") (f (quote ("std" "futures"))) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "1j97rwz1fb6iiwjlwc6b11bgxwkk11412lds16613k3wfajimfh2")))

(define-public crate-libp2p-request-response-0.5.0 (c (n "libp2p-request-response") (v "0.5.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.24.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.24.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "lru") (r "^0.6") (d #t) (k 0)) (d (n "minicbor") (r "^0.7") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.5") (f (quote ("std" "futures"))) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "1jnl4lzfsgrd6w3aldj5m1idlhxapml7wbvhkqffqganwvha3n9d")))

(define-public crate-libp2p-request-response-0.6.0 (c (n "libp2p-request-response") (v "0.6.0") (d (list (d (n "async-std") (r ">=1.6.2, <2.0.0") (d #t) (k 2)) (d (n "async-trait") (r ">=0.1.0, <0.2.0") (d #t) (k 0)) (d (n "bytes") (r ">=0.5.6, <0.6.0") (d #t) (k 0)) (d (n "futures") (r ">=0.3.1, <0.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r ">=0.25.0, <0.26.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r ">=0.25.0, <0.26.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.11, <0.5.0") (d #t) (k 0)) (d (n "lru") (r ">=0.6.0, <0.7.0") (d #t) (k 0)) (d (n "minicbor") (r ">=0.7.0, <0.8.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "rand") (r ">=0.7.0, <0.8.0") (d #t) (k 0)) (d (n "rand") (r ">=0.7.0, <0.8.0") (d #t) (k 2)) (d (n "smallvec") (r ">=1.4.0, <2.0.0") (d #t) (k 0)) (d (n "unsigned-varint") (r ">=0.5.0, <0.6.0") (f (quote ("std" "futures"))) (d #t) (k 0)) (d (n "wasm-timer") (r ">=0.2.0, <0.3.0") (d #t) (k 0)))) (h "1vdkapz1g2mgl10pg6iy7va1n293awjzzz4bmr2pwzidkp62v58y")))

(define-public crate-libp2p-request-response-0.7.0 (c (n "libp2p-request-response") (v "0.7.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.25.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.25.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "lru") (r "^0.6") (d #t) (k 0)) (d (n "minicbor") (r "^0.7") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.5") (f (quote ("std" "futures"))) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "0l2mlk4pqfhmf87ayqjka6vx6nkz3kvc41krmiwr76p51xcc75mx")))

(define-public crate-libp2p-request-response-0.8.0 (c (n "libp2p-request-response") (v "0.8.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.26.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.26.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "lru") (r "^0.6") (d #t) (k 0)) (d (n "minicbor") (r "^0.7") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.5") (f (quote ("std" "futures"))) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "07kbxx3jqh0szydhzir87y908b0fgm7q5lxfnma7bxybvr82j3k2")))

(define-public crate-libp2p-request-response-0.9.0 (c (n "libp2p-request-response") (v "0.9.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.27.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "lru") (r "^0.6") (d #t) (k 0)) (d (n "minicbor") (r "^0.7") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.6") (f (quote ("std" "futures"))) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "0viljmrg7yvydagwkzplv90sa2kxi4rql1nc5hr90lrvnfj3fxnk")))

(define-public crate-libp2p-request-response-0.9.1 (c (n "libp2p-request-response") (v "0.9.1") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.27.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "lru") (r "^0.6") (d #t) (k 0)) (d (n "minicbor") (r "^0.7") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("std" "futures"))) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "12fxd4hz60y3ydm22nxmq50gljxsl1rxm0i6a0k86gf34wl5br8h")))

(define-public crate-libp2p-request-response-0.10.0 (c (n "libp2p-request-response") (v "0.10.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.28.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.28.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "lru") (r "^0.6") (d #t) (k 0)) (d (n "minicbor") (r "^0.8") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("std" "futures"))) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "168qd77jn2r2i61zpfyzvsq6675hwn98ahd6n5d4ri8q4gfnflvj")))

(define-public crate-libp2p-request-response-0.11.0 (c (n "libp2p-request-response") (v "0.11.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.28.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.29.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "lru") (r "^0.6") (d #t) (k 0)) (d (n "minicbor") (r "^0.8") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("std" "futures"))) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "1qv21h9v152i8gkk6bnycd08q9n4siry4d46zaahyvcfy1rf3nqw")))

(define-public crate-libp2p-request-response-0.12.0 (c (n "libp2p-request-response") (v "0.12.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.29.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.30.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "lru") (r "^0.6") (d #t) (k 0)) (d (n "minicbor") (r "^0.8") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("std" "futures"))) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "0hfj2sad6ik457f9rbx86javmrn9qzgbqg7r7896c542nr2axk86")))

(define-public crate-libp2p-request-response-0.13.0-rc.1 (c (n "libp2p-request-response") (v "0.13.0-rc.1") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.30.0-rc.1") (k 0)) (d (n "libp2p-swarm") (r "^0.31.0-rc.1") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "lru") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("std" "futures"))) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "01gsafb31gbybaa0kvwkbhbprfj6nfhrpb26y4ixr3wya71ykq0h")))

(define-public crate-libp2p-request-response-0.13.0 (c (n "libp2p-request-response") (v "0.13.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.30.0") (k 0)) (d (n "libp2p-swarm") (r "^0.31.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "lru") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("std" "futures"))) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "1n1l8qx25dkcins6zsdjffpk9d0zys64x5z1fx3ghsylsv7a8xx8")))

(define-public crate-libp2p-request-response-0.14.0 (c (n "libp2p-request-response") (v "0.14.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.30.0") (k 0)) (d (n "libp2p-swarm") (r "^0.32.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "lru") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("std" "futures"))) (d #t) (k 0)))) (h "0mqn165kvdv0xfrhaq3drx9319z7zv0cqv3qfws59r532ch4pwmx")))

(define-public crate-libp2p-request-response-0.14.1 (c (n "libp2p-request-response") (v "0.14.1") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.30.0") (k 0)) (d (n "libp2p-swarm") (r "^0.32.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("std" "futures"))) (d #t) (k 0)))) (h "0swlrjacncdpzjw4jqkxp6mm021yzmn5cvxy9zdpg97ywqhs5zfx")))

(define-public crate-libp2p-request-response-0.15.0 (c (n "libp2p-request-response") (v "0.15.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.31.0") (k 0)) (d (n "libp2p-swarm") (r "^0.33.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("std" "futures"))) (d #t) (k 0)))) (h "0pixpq7i7pl06bh120y8rvcvzw9vv4qd9gmddgancgdhyncl869n") (r "1.56.1")))

(define-public crate-libp2p-request-response-0.16.0 (c (n "libp2p-request-response") (v "0.16.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.32.0") (k 0)) (d (n "libp2p-swarm") (r "^0.34.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("std" "futures"))) (d #t) (k 0)))) (h "0wvyrhkswm8c0y52fdg43mc2ii590nxy1k398192f5vdc9rqlf0j") (r "1.56.1")))

(define-public crate-libp2p-request-response-0.17.0 (c (n "libp2p-request-response") (v "0.17.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.32.0") (k 0)) (d (n "libp2p-swarm") (r "^0.35.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("std" "futures"))) (d #t) (k 0)))) (h "0sdqsh8ajs167gzrgr2d9b8r6adx6hxlg2b9yihmdncsdkyadrmm") (r "1.56.1")))

(define-public crate-libp2p-request-response-0.18.0 (c (n "libp2p-request-response") (v "0.18.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.33.0") (k 0)) (d (n "libp2p-swarm") (r "^0.36.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("std" "futures"))) (d #t) (k 0)))) (h "0hg4rcchflgaps5ppfl2zsa76fnpiwlrasy9fxypanjyfb5hlbmh") (r "1.56.1")))

(define-public crate-libp2p-request-response-0.19.0 (c (n "libp2p-request-response") (v "0.19.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.34.0") (k 0)) (d (n "libp2p-swarm") (r "^0.37.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("std" "futures"))) (d #t) (k 0)))) (h "0hqq6q8qic85gfzrs90bgcnx6i8q1fg1xyn1yp495n4m4yg1i2jh") (r "1.56.1")))

(define-public crate-libp2p-request-response-0.20.0 (c (n "libp2p-request-response") (v "0.20.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.35.0") (k 0)) (d (n "libp2p-swarm") (r "^0.38.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("std" "futures"))) (d #t) (k 0)))) (h "0dy292p95w6h6vv87w454p1d2r3c6xydg7bspfadij4nr9yx9v0n") (r "1.56.1")))

(define-public crate-libp2p-request-response-0.21.0 (c (n "libp2p-request-response") (v "0.21.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.36.0") (k 0)) (d (n "libp2p-swarm") (r "^0.39.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("std" "futures"))) (d #t) (k 0)))) (h "1xr6vni6619mky13vc5hlyz9nla463v7q7894q7fj7cbvj9sli13") (r "1.56.1")))

(define-public crate-libp2p-request-response-0.22.1 (c (n "libp2p-request-response") (v "0.22.1") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.37.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.40.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("std" "futures"))) (d #t) (k 0)))) (h "1hdd659glfah88c7d5kk0kn95bd90mi65fqhlh8m7dhpl0bay9w8") (r "1.56.1")))

(define-public crate-libp2p-request-response-0.23.0 (c (n "libp2p-request-response") (v "0.23.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.38.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.41.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("std" "futures"))) (d #t) (k 0)))) (h "1128k9y9agdilsvfv2xh8k3f4qak869n6xkzjbsgqyvjjs3icdij") (r "1.62.0")))

(define-public crate-libp2p-request-response-0.24.0 (c (n "libp2p-request-response") (v "0.24.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.39.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.42.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("std" "futures"))) (d #t) (k 0)))) (h "1sfjjki53001bmfaklkn6l4klnd5ginbwc0c260rykflzrirsaw7") (r "1.62.0")))

(define-public crate-libp2p-request-response-0.24.1 (c (n "libp2p-request-response") (v "0.24.1") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.39.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.42.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)))) (h "1m9h3r6g3r5r1gjccya7jv2lm9nl07kgclxwsmgdqhkx4rsb7zbz") (r "1.62.0")))

(define-public crate-libp2p-request-response-0.25.0 (c (n "libp2p-request-response") (v "0.25.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures_ringbuf") (r "^0.4.0") (d #t) (k 2)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.40.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.43.0") (d #t) (k 2)) (d (n "libp2p-swarm") (r "^0.43.0") (d #t) (k 0)) (d (n "libp2p-swarm-test") (r "^0.2.0") (d #t) (k 2)) (d (n "libp2p-tcp") (r "^0.40.0") (f (quote ("async-io"))) (d #t) (k 2)) (d (n "libp2p-yamux") (r "^0.44.0") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "11v8xmzg5cz1cx1lvavfsm8acmiprn5z0x967llf9k6dk1vq7g90") (s 2) (e (quote (("json" "dep:serde" "dep:serde_json" "libp2p-swarm/macros") ("cbor" "dep:serde" "dep:serde_cbor" "libp2p-swarm/macros")))) (r "1.65.0")))

(define-public crate-libp2p-request-response-0.25.1 (c (n "libp2p-request-response") (v "0.25.1") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "cbor4ii") (r "^0.3.1") (f (quote ("serde1" "use_std"))) (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures_ringbuf") (r "^0.4.0") (d #t) (k 2)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.40.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.2") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.43.0") (d #t) (k 2)) (d (n "libp2p-swarm") (r "^0.43.3") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.40.0") (f (quote ("async-io"))) (d #t) (k 2)) (d (n "libp2p-yamux") (r "^0.44.1") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.100") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "16wfbsmfpjy997hppbblh6j0k2hvkgmacqwl7psmazmmxydwpqj9") (s 2) (e (quote (("json" "dep:serde" "dep:serde_json" "libp2p-swarm/macros") ("cbor" "dep:serde" "dep:cbor4ii" "libp2p-swarm/macros")))) (r "1.65.0")))

(define-public crate-libp2p-request-response-0.25.2 (c (n "libp2p-request-response") (v "0.25.2") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "cbor4ii") (r "^0.3.1") (f (quote ("serde1" "use_std"))) (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures_ringbuf") (r "^0.4.0") (d #t) (k 2)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.40.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.43.2") (d #t) (k 2)) (d (n "libp2p-swarm") (r "^0.43.6") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.40.0") (f (quote ("async-io"))) (d #t) (k 2)) (d (n "libp2p-yamux") (r "^0.44.1") (d #t) (k 2)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11.1") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "0gfxi9f4yfqy995xfjbg7i0qg6p9cbsqnhc8clcxl9528mk22wn7") (s 2) (e (quote (("json" "dep:serde" "dep:serde_json" "libp2p-swarm/macros") ("cbor" "dep:serde" "dep:cbor4ii" "libp2p-swarm/macros")))) (r "1.65.0")))

(define-public crate-libp2p-request-response-0.25.3 (c (n "libp2p-request-response") (v "0.25.3") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "cbor4ii") (r "^0.3.1") (f (quote ("serde1" "use_std"))) (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures_ringbuf") (r "^0.4.0") (d #t) (k 2)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.40.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.43.2") (d #t) (k 2)) (d (n "libp2p-swarm") (r "^0.43.7") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.40.1") (f (quote ("async-io"))) (d #t) (k 2)) (d (n "libp2p-yamux") (r "^0.44.1") (d #t) (k 2)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11.1") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "1m6gzv1qkw4qawkkw3jffg842rpfc31bz1xc5fvqsivhg3bb9qyq") (s 2) (e (quote (("json" "dep:serde" "dep:serde_json" "libp2p-swarm/macros") ("cbor" "dep:serde" "dep:cbor4ii" "libp2p-swarm/macros")))) (r "1.65.0")))

(define-public crate-libp2p-request-response-0.26.0 (c (n "libp2p-request-response") (v "0.26.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "cbor4ii") (r "^0.3.1") (f (quote ("serde1" "use_std"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures-bounded") (r "^0.2.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "futures_ringbuf") (r "^0.4.0") (d #t) (k 2)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.41.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.44.0") (d #t) (k 2)) (d (n "libp2p-swarm") (r "^0.44.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.41.0") (f (quote ("async-io"))) (d #t) (k 2)) (d (n "libp2p-yamux") (r "^0.45.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "0qglcpw960wv30yq01mgcdp0al2pzcyyym0gvcyas8ya8ph0g2hr") (s 2) (e (quote (("json" "dep:serde" "dep:serde_json" "libp2p-swarm/macros") ("cbor" "dep:serde" "dep:cbor4ii" "libp2p-swarm/macros")))) (r "1.73.0")))

(define-public crate-libp2p-request-response-0.26.1 (c (n "libp2p-request-response") (v "0.26.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "cbor4ii") (r "^0.3.2") (f (quote ("serde1" "use_std"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures-bounded") (r "^0.2.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "futures_ringbuf") (r "^0.4.0") (d #t) (k 2)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.41.2") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.8") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.44.0") (d #t) (k 2)) (d (n "libp2p-swarm") (r "^0.44.1") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.41.0") (f (quote ("async-io"))) (d #t) (k 2)) (d (n "libp2p-yamux") (r "^0.45.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "0vrgay4vpzcllbcf3x1z53qsy2d6x4mzmvm6vvfmpi701wjj6a71") (s 2) (e (quote (("json" "dep:serde" "dep:serde_json" "libp2p-swarm/macros") ("cbor" "dep:serde" "dep:cbor4ii" "libp2p-swarm/macros")))) (r "1.73.0")))

(define-public crate-libp2p-request-response-0.26.2 (c (n "libp2p-request-response") (v "0.26.2") (d (list (d (n "anyhow") (r "^1.0.82") (d #t) (k 2)) (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "cbor4ii") (r "^0.3.2") (f (quote ("serde1" "use_std"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-bounded") (r "^0.2.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.3") (d #t) (k 0)) (d (n "futures_ringbuf") (r "^0.4.0") (d #t) (k 2)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.41.2") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.8") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.44.0") (d #t) (k 2)) (d (n "libp2p-swarm") (r "^0.44.2") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.41.0") (f (quote ("async-io"))) (d #t) (k 2)) (d (n "libp2p-yamux") (r "^0.45.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.116") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.13.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "1qcd5aj95mz0fg3y4xlc2gvx2g0cniya2dychwqigcs0c92yaik9") (s 2) (e (quote (("json" "dep:serde" "dep:serde_json" "libp2p-swarm/macros") ("cbor" "dep:serde" "dep:cbor4ii" "libp2p-swarm/macros")))) (r "1.75.0")))

