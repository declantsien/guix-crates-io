(define-module (crates-io li bp libpaillier) #:use-module (crates-io))

(define-public crate-libpaillier-0.1.0 (c (n "libpaillier") (v "0.1.0") (d (list (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.9") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.8") (f (quote ("arithmetic" "zeroize"))) (d #t) (k 2)) (d (n "multibase") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bare") (r "^0.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "unicase") (r "^2.6") (d #t) (k 2)) (d (n "unknown_order") (r "^0.1") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0ib17s024080xk0sxvjaf8m7qf6zd4zix39mp7m4bh5qggqv1bv3") (f (quote (("rust" "unknown_order/rust") ("openssl" "unknown_order/openssl") ("gmp" "unknown_order/gmp") ("default" "rust"))))))

(define-public crate-libpaillier-0.2.0 (c (n "libpaillier") (v "0.2.0") (d (list (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.9") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.8") (f (quote ("arithmetic" "zeroize"))) (d #t) (k 2)) (d (n "multibase") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bare") (r "^0.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "unicase") (r "^2.6") (d #t) (k 2)) (d (n "unknown_order") (r "^0.2") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0a8mgnjrb7p5hm0lln1ybfjp4sv5dzpzlv7cnj0f4qnf810mk3z3") (f (quote (("rust" "unknown_order/rust") ("openssl" "unknown_order/openssl") ("gmp" "unknown_order/gmp") ("default" "rust"))))))

(define-public crate-libpaillier-0.2.1 (c (n "libpaillier") (v "0.2.1") (d (list (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.9") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.8") (f (quote ("arithmetic" "zeroize"))) (d #t) (k 2)) (d (n "multibase") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bare") (r "^0.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "unicase") (r "^2.6") (d #t) (k 2)) (d (n "unknown_order") (r "^0.2") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (k 0)) (d (n "zeroize") (r "^1.4") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "00sipkq6bwn24is8fsv3pqyw0a77l0j5d79d1fj1vspcb5kw33cy") (f (quote (("wasm" "getrandom" "rand" "wasm-bindgen") ("rust" "unknown_order/rust") ("openssl" "unknown_order/openssl") ("gmp" "unknown_order/gmp") ("default" "rust"))))))

(define-public crate-libpaillier-0.3.0 (c (n "libpaillier") (v "0.3.0") (d (list (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.9") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.8") (f (quote ("arithmetic" "zeroize"))) (d #t) (k 2)) (d (n "multibase") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bare") (r "^0.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "unicase") (r "^2.6") (d #t) (k 2)) (d (n "unknown_order") (r "^0.2") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (k 0)) (d (n "zeroize") (r "^1.4") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "16zr52fy6vhglq2z0nmg29kcamv9xp9a652c2imbm865qi48fvdw") (f (quote (("wasm" "getrandom" "rand" "wasm-bindgen") ("rust" "unknown_order/rust") ("openssl" "unknown_order/openssl") ("gmp" "unknown_order/gmp") ("default" "rust"))))))

(define-public crate-libpaillier-0.3.1 (c (n "libpaillier") (v "0.3.1") (d (list (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.9") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.9") (f (quote ("arithmetic" "zeroize"))) (d #t) (k 2)) (d (n "multibase") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bare") (r "^0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "unicase") (r "^2.6") (d #t) (k 2)) (d (n "unknown_order") (r "^0.3.1") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (k 0)) (d (n "zeroize") (r "^1.4") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1rkiw1vljf127kjfzvaj2lfmhmcbjvfgqf8dhc1kk3a0fkgdmx13") (f (quote (("wasm" "getrandom" "rand" "wasm-bindgen") ("rust" "unknown_order/rust") ("openssl" "unknown_order/openssl") ("gmp" "unknown_order/gmp") ("default" "rust"))))))

(define-public crate-libpaillier-0.4.0 (c (n "libpaillier") (v "0.4.0") (d (list (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.9") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.9") (f (quote ("arithmetic" "zeroize"))) (d #t) (k 2)) (d (n "multibase") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bare") (r "^0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "unicase") (r "^2.6") (d #t) (k 2)) (d (n "unknown_order") (r "^0.5.0") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (k 0)) (d (n "zeroize") (r "^1.4") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0hd8fl1yf9awggd3xdfxdbpw8k13cwpn4s8wsjknhymwfbjs88aq") (f (quote (("wasm" "getrandom" "rand" "wasm-bindgen") ("rust" "unknown_order/rust") ("openssl" "unknown_order/openssl") ("gmp" "unknown_order/gmp") ("default" "openssl"))))))

(define-public crate-libpaillier-0.5.0 (c (n "libpaillier") (v "0.5.0") (d (list (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.11") (f (quote ("arithmetic"))) (d #t) (k 2)) (d (n "multibase") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bare") (r "^0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 2)) (d (n "unicase") (r "^2.6") (d #t) (k 2)) (d (n "unknown_order") (r "^0.6.0") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "05jb7b5vxnzq2jrx2cz2gkkh5dpij4hlgx3crdq96i2d2wgib08i") (f (quote (("wasm" "getrandom" "rand" "wasm-bindgen") ("rust" "unknown_order/rust") ("openssl" "unknown_order/openssl") ("gmp" "unknown_order/gmp") ("default" "openssl"))))))

(define-public crate-libpaillier-0.6.0 (c (n "libpaillier") (v "0.6.0") (d (list (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.13") (f (quote ("arithmetic"))) (d #t) (k 2)) (d (n "multibase") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_bare") (r "^0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "unicase") (r "^2.6") (d #t) (k 2)) (d (n "unknown_order") (r "^0.8") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "079plki4ddayhj0n7hplgrnybhzdjkkkx017qg3slr12lf1a6n3l") (f (quote (("wasm" "getrandom" "rand" "wasm-bindgen") ("rust" "unknown_order/rust") ("openssl" "unknown_order/openssl") ("gmp" "unknown_order/gmp") ("default" "crypto") ("crypto" "unknown_order/crypto"))))))

