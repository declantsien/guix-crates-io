(define-module (crates-io li bp libpasta) #:use-module (crates-io))

(define-public crate-libpasta-0.0.2 (c (n "libpasta") (v "0.0.2") (d (list (d (n "argon2rs") (r "^0.2") (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.23") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2.2") (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "optimization") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "ring") (r "^0.12") (f (quote ("use_heap"))) (k 0)) (d (n "ring-pwhash") (r "^0.12") (d #t) (k 0)) (d (n "rpassword") (r "^2.0") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_mcf") (r "^0.1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 0)) (d (n "sys-info") (r "^0.5") (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)))) (h "0m9hzbdf3fmpdka50x0wkab0m234d3k1cn9m594ycvci62w5ym2m") (f (quote (("simd" "argon2rs/simd") ("long_tests") ("bench"))))))

(define-public crate-libpasta-0.0.4 (c (n "libpasta") (v "0.0.4") (d (list (d (n "argon2rs") (r "^0.2") (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.23") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2.2") (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "optimization") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "ring") (r "^0.12") (f (quote ("use_heap"))) (k 0)) (d (n "ring-pwhash") (r "^0.12") (d #t) (k 0)) (d (n "rpassword") (r "^2.0") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_mcf") (r "^0.1.2") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 0)) (d (n "sys-info") (r "^0.5") (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)))) (h "0y62vfl9rlpbx3ywwcr76f9ncb6kfaxbv470hcgxglhpqi9saplw") (f (quote (("simd" "argon2rs/simd") ("long_tests") ("bench"))))))

(define-public crate-libpasta-0.0.5 (c (n "libpasta") (v "0.0.5") (d (list (d (n "argon2rs") (r "^0.2") (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2.2") (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "ring") (r ">= 0.11, < 0.13") (k 0)) (d (n "ring-pwhash") (r ">= 0.11, < 0.13") (d #t) (k 0)) (d (n "rpassword") (r "^2.0") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.4") (d #t) (k 0)) (d (n "serde_mcf") (r "^0.1.3") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 2)))) (h "0lc06r98zy39cmbpj74m05hlr6p1db9gr4gvg27lil1yhl8c1p56") (f (quote (("simd" "argon2rs/simd") ("long_tests") ("bench"))))))

(define-public crate-libpasta-0.1.0-rc0 (c (n "libpasta") (v "0.1.0-rc0") (d (list (d (n "argon2rs") (r "^0.2") (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ring") (r ">= 0.11, < 0.13") (k 0)) (d (n "ring-pwhash") (r ">= 0.11, < 0.13") (d #t) (k 0)) (d (n "rpassword") (r "^2.0") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.4") (d #t) (k 0)) (d (n "serde_mcf") (r "^0.1.3") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 2)))) (h "1vsp06qcxbj5q8n8v9crw4swjdlla82jgydqn95bdq1kj7zvhml6") (f (quote (("simd" "argon2rs/simd") ("long_tests") ("bench"))))))

(define-public crate-libpasta-0.1.0-rc1 (c (n "libpasta") (v "0.1.0-rc1") (d (list (d (n "argon2rs") (r "^0.2") (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (d #t) (k 2)) (d (n "data-encoding") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ring") (r ">= 0.11, < 0.13") (k 0)) (d (n "ring-pwhash") (r ">= 0.11, < 0.13") (d #t) (k 0)) (d (n "rpassword") (r "^2.0") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_mcf") (r "^0.1.3") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 2)))) (h "0ldygnrzndy36qbi17gm2ykg0g9w9g3ii577rv7zlchsg9w6c2fi") (f (quote (("simd" "argon2rs/simd") ("long_tests") ("bench"))))))

(define-public crate-libpasta-0.1.0-rc2 (c (n "libpasta") (v "0.1.0-rc2") (d (list (d (n "argon2rs") (r "^0.2") (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (d #t) (k 2)) (d (n "data-encoding") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ring") (r ">= 0.11, < 0.13") (k 0)) (d (n "ring-pwhash") (r ">= 0.11, < 0.13") (d #t) (k 0)) (d (n "rpassword") (r "^2.0") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_mcf") (r "^0.1.3") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.7") (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 2)))) (h "1k4z5rpfwp6waxd3wyzclgx4jnhrcnasw9sswna5ij9j90jb9zq0") (f (quote (("simd" "argon2rs/simd") ("long_tests") ("bench"))))))

(define-public crate-libpasta-0.1.0 (c (n "libpasta") (v "0.1.0") (d (list (d (n "argon2rs") (r "^0.2.5") (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (d #t) (k 2)) (d (n "data-encoding") (r "^2.1.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 2)) (d (n "error-chain") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "ring") (r "^0.14.2") (f (quote ("use_heap"))) (k 0)) (d (n "rpassword") (r "^2.1.0") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "scrypt") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.85") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_mcf") (r "^0.1.3") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.8") (d #t) (k 0)) (d (n "time") (r "^0.1.42") (d #t) (k 2)))) (h "169g6s8pa6gcf42wz8wgz1q7fmnld80hp1fdsa46zbql8y5bv8ri") (f (quote (("simd" "argon2rs/simd") ("long_tests") ("bench"))))))

(define-public crate-libpasta-0.1.1 (c (n "libpasta") (v "0.1.1") (d (list (d (n "argon2rs") (r "^0.2.5") (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "ring") (r "^0.16.18") (f (quote ("std"))) (k 0)) (d (n "rpassword") (r "^5.0.0") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "scrypt") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_mcf") (r "^0.1.3") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 0)))) (h "0wx5fxiz64x0kb6cpdlfyyhaar1rib5mrbl8f5jb1syq0nxlmgrg") (f (quote (("simd" "argon2rs/simd") ("long_tests") ("bench"))))))

(define-public crate-libpasta-0.1.2 (c (n "libpasta") (v "0.1.2") (d (list (d (n "argon2rs") (r "^0.2.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.9.0") (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (f (quote ("std"))) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "scrypt") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_mcf") (r "^0.1.3") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.17") (d #t) (k 0)))) (h "0bmwzqpdhyq3xqip9byhfcs9fbfsiafw0lapx1rprgnrv15rxz6a") (f (quote (("simd" "argon2rs/simd") ("long_tests") ("bench"))))))

