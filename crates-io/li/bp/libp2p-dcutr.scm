(define-module (crates-io li bp libp2p-dcutr) #:use-module (crates-io))

(define-public crate-libp2p-dcutr-0.1.0 (c (n "libp2p-dcutr") (v "0.1.0") (d (list (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.32") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.34") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-build") (r "^0.7") (d #t) (k 1)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "1kw6c458iiv58sijaji1mdfrq88lvdjjvc5dmrpzrkzilx9a9h90") (r "1.56.1")))

(define-public crate-libp2p-dcutr-0.2.0 (c (n "libp2p-dcutr") (v "0.2.0") (d (list (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.32") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.35.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "prost-build") (r "^0.9") (d #t) (k 1)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "0mw6hy41q9420c66l9qk3c85nasm1k9j00m4zn5lylpvfb931z57") (r "1.56.1")))

(define-public crate-libp2p-dcutr-0.3.0 (c (n "libp2p-dcutr") (v "0.3.0") (d (list (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.33.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.36.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.10") (d #t) (k 0)) (d (n "prost-build") (r "^0.10") (d #t) (k 1)) (d (n "prost-codec") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "1f28kic3vrm8f0frxqwj1bq2f08v052fm2c8dfw1cjryq93xcg9p") (r "1.56.1")))

(define-public crate-libp2p-dcutr-0.3.1 (c (n "libp2p-dcutr") (v "0.3.1") (d (list (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.33.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.36.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.10") (d #t) (k 0)) (d (n "prost-build") (r "^0.10") (d #t) (k 1)) (d (n "prost-codec") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "17wmn5yj162rd2j5fvhdcjfa3qgyvi0yqj59f5arind8j1brq0lq") (r "1.56.1")))

(define-public crate-libp2p-dcutr-0.4.0 (c (n "libp2p-dcutr") (v "0.4.0") (d (list (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.34.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.37.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.10") (d #t) (k 0)) (d (n "prost-build") (r "^0.10") (d #t) (k 1)) (d (n "prost-codec") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "12xvd9zd8sygbxwh3qml89f7s35lpa59hcvm6ai814hm6mknslla") (r "1.56.1")))

(define-public crate-libp2p-dcutr-0.5.0 (c (n "libp2p-dcutr") (v "0.5.0") (d (list (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.35.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.38.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "prost-build") (r "^0.11") (d #t) (k 1)) (d (n "prost-codec") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "071bgq259zw6rpff1ksncjblvgh4z3yzpqx02w84a36qrv2f6lp1") (r "1.56.1")))

(define-public crate-libp2p-dcutr-0.5.1 (c (n "libp2p-dcutr") (v "0.5.1") (d (list (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.35.0") (k 0)) (d (n "libp2p-swarm") (r "^0.38.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "prost-build") (r "^0.11") (d #t) (k 1)) (d (n "prost-codec") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "1z9ls8az63zwl3d0rl0hipp60rn2r512ip4bq3rnffxmb48nidfg") (r "1.56.1")))

(define-public crate-libp2p-dcutr-0.6.0 (c (n "libp2p-dcutr") (v "0.6.0") (d (list (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.36.0") (k 0)) (d (n "libp2p-swarm") (r "^0.39.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "prost-build") (r "^0.11") (d #t) (k 1)) (d (n "prost-codec") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "15qg2112h9ffb3rq025fkqyicafsg51glqffhz79v1zddgdm5mnh") (r "1.56.1")))

(define-public crate-libp2p-dcutr-0.7.0 (c (n "libp2p-dcutr") (v "0.7.0") (d (list (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.0.13") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.37.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.40.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "prost-build") (r "^0.11") (d #t) (k 1)) (d (n "prost-codec") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "1ag295r7q40brqdzgf1frqkkb4mvrdvws5xkzn5x6hg64jn4c21q") (r "1.56.1")))

(define-public crate-libp2p-dcutr-0.8.0 (c (n "libp2p-dcutr") (v "0.8.0") (d (list (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.0.13") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.38.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.41.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "prost-build") (r "^0.11") (d #t) (k 1)) (d (n "prost-codec") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "1iijh56dnk186g6mh0rhzhbskfckpga38iilsspasinbaqlawixh") (r "1.62.0")))

(define-public crate-libp2p-dcutr-0.8.1 (c (n "libp2p-dcutr") (v "0.8.1") (d (list (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.0.13") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.38.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.41.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "prost-build") (r "^0.11") (d #t) (k 1)) (d (n "prost-codec") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "12m2gwa39hvz6rswfbj2b4302w0ybc27qv400yv1qc56dh7lfhn6") (r "1.62.0")))

(define-public crate-libp2p-dcutr-0.9.0 (c (n "libp2p-dcutr") (v "0.9.0") (d (list (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.39.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.42.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "prost-build") (r "^0.11") (d #t) (k 1)) (d (n "prost-codec") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "0vjdi0w41c8ky9nbvxvvpldnw3mdb9vrllxrcc2ddval916x0n9v") (r "1.62.0")))

(define-public crate-libp2p-dcutr-0.9.1 (c (n "libp2p-dcutr") (v "0.9.1") (d (list (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.39.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.42.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "06ya68ijn2kx5pvbg6vgv77rgwvdc3z569b5y1y5s5544g95920a") (r "1.62.0")))

(define-public crate-libp2p-dcutr-0.10.0 (c (n "libp2p-dcutr") (v "0.10.0") (d (list (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "clap") (r "^4.3.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.40.0") (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.40.0") (f (quote ("async-std"))) (d #t) (k 2)) (d (n "libp2p-identify") (r "^0.43.0") (d #t) (k 2)) (d (n "libp2p-identity") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.43.0") (d #t) (k 2)) (d (n "libp2p-ping") (r "^0.43.0") (d #t) (k 2)) (d (n "libp2p-plaintext") (r "^0.40.0") (d #t) (k 2)) (d (n "libp2p-relay") (r "^0.16.0") (d #t) (k 2)) (d (n "libp2p-swarm") (r "^0.43.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.43.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "libp2p-swarm-test") (r "^0.2.0") (d #t) (k 2)) (d (n "libp2p-tcp") (r "^0.40.0") (f (quote ("async-io"))) (d #t) (k 2)) (d (n "libp2p-yamux") (r "^0.44.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "1hvwzqrw631bx58lvwwyhmsvzpy68c9lqjk3q1z7ld55g8cwx3a5") (r "1.65.0")))

(define-public crate-libp2p-dcutr-0.11.0 (c (n "libp2p-dcutr") (v "0.11.0") (d (list (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive"))) (d #t) (k 2)) (d (n "either") (r "^1.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures-bounded") (r "^0.2.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.41.0") (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.41.0") (f (quote ("async-std"))) (d #t) (k 2)) (d (n "libp2p-identify") (r "^0.44.0") (d #t) (k 2)) (d (n "libp2p-identity") (r "^0.2.7") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.44.0") (d #t) (k 2)) (d (n "libp2p-ping") (r "^0.44.0") (d #t) (k 2)) (d (n "libp2p-plaintext") (r "^0.41.0") (d #t) (k 2)) (d (n "libp2p-relay") (r "^0.17.0") (d #t) (k 2)) (d (n "libp2p-swarm") (r "^0.44.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.44.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "libp2p-tcp") (r "^0.41.0") (f (quote ("async-io"))) (d #t) (k 2)) (d (n "libp2p-yamux") (r "^0.45.0") (d #t) (k 2)) (d (n "lru") (r "^0.11.1") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "1wvvr7wqa6l66mg3gdk2iijln7jwzzinfvqaqgcwmrmrl9zvpxx4") (r "1.73.0")))

