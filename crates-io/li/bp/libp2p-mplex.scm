(define-module (crates-io li bp libp2p-mplex) #:use-module (crates-io))

(define-public crate-libp2p-mplex-0.1.0 (c (n "libp2p-mplex") (v "0.1.0") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.1.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.2.1") (f (quote ("codec"))) (d #t) (k 0)))) (h "1w2l1rrgz5dw3s4463l3qs3bcxa3pm0jmh9srxi3i8swk4n1xfxs")))

(define-public crate-libp2p-mplex-0.2.0 (c (n "libp2p-mplex") (v "0.2.0") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.2.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.2.1") (f (quote ("codec"))) (d #t) (k 0)))) (h "1cfla84a8kbxazg8gk1h5jbv8hky5fk6lbbx1y14gvsgrrcfl1ll")))

(define-public crate-libp2p-mplex-0.3.0 (c (n "libp2p-mplex") (v "0.3.0") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.3.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.2.1") (f (quote ("codec"))) (d #t) (k 0)))) (h "06qc598mi30mmpp4h1r09h0kvmm2n1llj4rqzxrdhqpfp3qxrr2q")))

(define-public crate-libp2p-mplex-0.4.0 (c (n "libp2p-mplex") (v "0.4.0") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.4.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.2.1") (f (quote ("codec"))) (d #t) (k 0)))) (h "1ckhv9w1gz85yv2w6w6q9fzy9s1x80v64vzmv3q6h193d9d3f7kr")))

(define-public crate-libp2p-mplex-0.5.0 (c (n "libp2p-mplex") (v "0.5.0") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.5.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.5.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.2.1") (f (quote ("codec"))) (d #t) (k 0)))) (h "0j5ghw51pzbrm58wa88i83frjfxmknl8d39h4vw854d2vax7i1lk")))

(define-public crate-libp2p-mplex-0.6.0 (c (n "libp2p-mplex") (v "0.6.0") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.6.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.6.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.2.1") (f (quote ("codec"))) (d #t) (k 0)))) (h "0bb11bysyl8w66yql08qadigiap7h2r3h1h2vj99g00jvmqb6nrm")))

(define-public crate-libp2p-mplex-0.7.0 (c (n "libp2p-mplex") (v "0.7.0") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.7.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.2.1") (f (quote ("codec"))) (d #t) (k 0)))) (h "0ihpc29l8jgvv423wfl2kjdn9np1pb2fvxvl8i38kk518a1qanpy")))

(define-public crate-libp2p-mplex-0.8.0 (c (n "libp2p-mplex") (v "0.8.0") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.8.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.8.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.2.1") (f (quote ("codec"))) (d #t) (k 0)))) (h "0f7bxjpl6xdmrn9l7wblr2l0alg88q8q5a7d70wrvyycv9lriyyc")))

(define-public crate-libp2p-mplex-0.9.0 (c (n "libp2p-mplex") (v "0.9.0") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.9.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.2.1") (f (quote ("codec"))) (d #t) (k 0)))) (h "01phspa3g3w3nsyym0wzm348c5376wi40qhgnvkm8wg9czyindbv")))

(define-public crate-libp2p-mplex-0.10.0 (c (n "libp2p-mplex") (v "0.10.0") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.10.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.10.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.2.1") (f (quote ("codec"))) (d #t) (k 0)))) (h "09gmzbxl2l897hin7szr1cx0wbxs1ahhcgm83wxdjm4ivn2hig99")))

(define-public crate-libp2p-mplex-0.11.0 (c (n "libp2p-mplex") (v "0.11.0") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.11.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.11.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.2.1") (f (quote ("codec"))) (d #t) (k 0)))) (h "02c0azgq10df6dq3hvd1axc763mqzf5wsqqh5y85rp6zx191j44b")))

(define-public crate-libp2p-mplex-0.12.0 (c (n "libp2p-mplex") (v "0.12.0") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.12.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.2.1") (f (quote ("codec"))) (d #t) (k 0)))) (h "1bz0iyvknzjv6jpb05nhwkxppxj2z3acarjwws4aly5h0gk87wjr")))

(define-public crate-libp2p-mplex-0.13.0 (c (n "libp2p-mplex") (v "0.13.0") (d (list (d (n "bytes") (r "^0.4.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.13.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.13.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.2.1") (f (quote ("codec"))) (d #t) (k 0)))) (h "1rf329573ahb2lmqk2pjlrw1s6ck7hd555iki47xr4yr2r45izp2")))

(define-public crate-libp2p-mplex-0.14.0-alpha.1 (c (n "libp2p-mplex") (v "0.14.0-alpha.1") (d (list (d (n "async-std") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures_codec") (r "^0.3.4") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.14.0-alpha.1") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.14.0-alpha.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.3") (f (quote ("futures-codec"))) (d #t) (k 0)))) (h "1gd521idqyzpkffykcgszq8n1ls92yw5j8mgcv2xs7siqx1cmhjl")))

(define-public crate-libp2p-mplex-0.15.0 (c (n "libp2p-mplex") (v "0.15.0") (d (list (d (n "async-std") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures_codec") (r "^0.3.4") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.15.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.15.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.3") (f (quote ("futures-codec"))) (d #t) (k 0)))) (h "0c7cv3xv9mjpbid42n94r9g914y7w5yi4bdlwhmwr07gzm6v9l49")))

(define-public crate-libp2p-mplex-0.16.0 (c (n "libp2p-mplex") (v "0.16.0") (d (list (d (n "async-std") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures_codec") (r "^0.3.4") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.16.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.3") (f (quote ("futures-codec"))) (d #t) (k 0)))) (h "15dgw54fi24jbf297cb80z4gcnnqqcis0ryyzig2gv8fmlvpnl6q")))

(define-public crate-libp2p-mplex-0.17.0 (c (n "libp2p-mplex") (v "0.17.0") (d (list (d (n "async-std") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures_codec") (r "^0.3.4") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.17.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.17.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.3") (f (quote ("futures-codec"))) (d #t) (k 0)))) (h "0bxrlawzksv0pxl9hnxabnjz3rl46yh5qxm8hzgfrgk2q2w7sc8g")))

(define-public crate-libp2p-mplex-0.18.0 (c (n "libp2p-mplex") (v "0.18.0") (d (list (d (n "async-std") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures_codec") (r "^0.3.4") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.18.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.18.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.3") (f (quote ("futures-codec"))) (d #t) (k 0)))) (h "00jal1bfhwnj8xwadg50cj0hcg7aadvl8wafsy0jx6v10qmqhch8")))

(define-public crate-libp2p-mplex-0.19.0 (c (n "libp2p-mplex") (v "0.19.0") (d (list (d (n "async-std") (r "^1.0") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures_codec") (r "^0.3.4") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.19.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.19.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.3") (f (quote ("futures-codec"))) (d #t) (k 0)))) (h "0s6fdk7sav9r4qhgis9s6any8vln1h0vspgpy61hi10g23ibr5a0")))

(define-public crate-libp2p-mplex-0.19.1 (c (n "libp2p-mplex") (v "0.19.1") (d (list (d (n "async-std") (r "< 1.6") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures_codec") (r "^0.3.4") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.19.0") (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.19.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.3") (f (quote ("futures-codec"))) (d #t) (k 0)))) (h "0lrgk62239iza7qhhrz1pc77m91y56hr5hjldvby5g6l78qn7kil")))

(define-public crate-libp2p-mplex-0.19.2 (c (n "libp2p-mplex") (v "0.19.2") (d (list (d (n "async-std") (r "^1.5.0") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures_codec") (r "^0.4") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.19.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.4") (f (quote ("futures-codec"))) (d #t) (k 0)))) (h "0r4q0z5fb0whspi2601p1cwwxgvpgpq77v2p680y4zfm9hx92zdy")))

(define-public crate-libp2p-mplex-0.20.0 (c (n "libp2p-mplex") (v "0.20.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures_codec") (r "^0.4") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.20.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.4") (f (quote ("futures-codec"))) (d #t) (k 0)))) (h "0hg56fgzj6ng4d5nl4rxgk18mc9crp4v466mdkwp7w1hrpx0zbhl")))

(define-public crate-libp2p-mplex-0.21.0 (c (n "libp2p-mplex") (v "0.21.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures_codec") (r "^0.4") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.21.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.4") (f (quote ("futures-codec"))) (d #t) (k 0)))) (h "08ywklxdc1by80pzym7fj94q0f05dldwxvvkyx30hnbi3ra7k7nz")))

(define-public crate-libp2p-mplex-0.22.0 (c (n "libp2p-mplex") (v "0.22.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures_codec") (r "^0.4") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.22.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.4") (f (quote ("futures-codec"))) (d #t) (k 0)))) (h "1lqjlv7llvl72zsin4976zyrxjxvpavc9x5q81pb6444rjcsfwwa")))

(define-public crate-libp2p-mplex-0.23.0 (c (n "libp2p-mplex") (v "0.23.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures_codec") (r "^0.4") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.23.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.5") (f (quote ("futures-codec"))) (d #t) (k 0)))) (h "15g9ajhaz25vjkkwig40k3hgdjl7cflq9pmhi05nk5i4nkl8wv39")))

(define-public crate-libp2p-mplex-0.23.1 (c (n "libp2p-mplex") (v "0.23.1") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures_codec") (r "^0.4") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.23.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.5") (f (quote ("futures-codec"))) (d #t) (k 0)))) (h "1c0fzzykfqvx2kn60nrm578njaq085za0n3s8736f06872156ax9")))

(define-public crate-libp2p-mplex-0.24.0 (c (n "libp2p-mplex") (v "0.24.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures_codec") (r "^0.4") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.24.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.5") (f (quote ("futures-codec"))) (d #t) (k 0)))) (h "0qwnp48k7k957s82k0sj1qkz5zh6bbsrdiznvjvvd3rsc6mlwxpd")))

(define-public crate-libp2p-mplex-0.25.0 (c (n "libp2p-mplex") (v "0.25.0") (d (list (d (n "async-std") (r ">=1.7.0, <2.0.0") (d #t) (k 2)) (d (n "bytes") (r ">=0.5.0, <0.6.0") (d #t) (k 0)) (d (n "criterion") (r ">=0.3.0, <0.4.0") (d #t) (k 2)) (d (n "env_logger") (r ">=0.8.0, <0.9.0") (d #t) (k 2)) (d (n "futures") (r ">=0.3.1, <0.4.0") (d #t) (k 0)) (d (n "futures") (r ">=0.3.0, <0.4.0") (d #t) (k 2)) (d (n "futures_codec") (r ">=0.4.1, <0.5.0") (d #t) (k 0)) (d (n "libp2p-core") (r ">=0.25.0, <0.26.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "nohash-hasher") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11.0, <0.12.0") (d #t) (k 0)) (d (n "quickcheck") (r ">=0.9.0, <0.10.0") (d #t) (k 2)) (d (n "rand") (r ">=0.7.0, <0.8.0") (d #t) (k 0)) (d (n "rand") (r ">=0.7.0, <0.8.0") (d #t) (k 2)) (d (n "smallvec") (r ">=1.4.0, <2.0.0") (d #t) (k 0)) (d (n "unsigned-varint") (r ">=0.5.0, <0.6.0") (f (quote ("futures-codec"))) (d #t) (k 0)))) (h "0yw3av4ymx5sskrmip6yi45fz4lm8phhcyjpiq7rn02582qk48df")))

(define-public crate-libp2p-mplex-0.26.0 (c (n "libp2p-mplex") (v "0.26.0") (d (list (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures_codec") (r "^0.4.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.26.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.5") (f (quote ("futures-codec"))) (d #t) (k 0)))) (h "0jr6h50zz1qk1vfzqb8apgpy985gig65k97gv4xn53k0wvxh0cnf")))

(define-public crate-libp2p-mplex-0.27.0 (c (n "libp2p-mplex") (v "0.27.0") (d (list (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.27.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.6") (f (quote ("asynchronous_codec"))) (d #t) (k 0)))) (h "1w2sm28p496fz8q5r1ry47nkgrhj6yzrp822kdvy7f8sn2adq197")))

(define-public crate-libp2p-mplex-0.27.1 (c (n "libp2p-mplex") (v "0.27.1") (d (list (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.27.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)))) (h "0r741g8p1g3qycnz7hr9582kb105bn3kyvjxppdax51mjaryh31m")))

(define-public crate-libp2p-mplex-0.28.0 (c (n "libp2p-mplex") (v "0.28.0") (d (list (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.28.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)))) (h "0p8hcdqwi4pwp5wg0mbskkqzdppspvnrdahxyw5d67jx6d2bbsc5")))

(define-public crate-libp2p-mplex-0.29.0 (c (n "libp2p-mplex") (v "0.29.0") (d (list (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.29.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)))) (h "16bsdy0ijl0z9cayagf3y94zsgwxgbk2802qbx1g93f64sjrwg9i")))

(define-public crate-libp2p-mplex-0.30.0-rc.1 (c (n "libp2p-mplex") (v "0.30.0-rc.1") (d (list (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.30.0-rc.1") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)))) (h "00zn936za81j7p87c6sd44qnwr1a0y3fi686a54hnkpshnqj3wn7")))

(define-public crate-libp2p-mplex-0.30.0 (c (n "libp2p-mplex") (v "0.30.0") (d (list (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.30.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)))) (h "1gsghdw708mlmrnpjq8w41nxsqyb1vsrf16fpwa0xx4pym7dcb3z")))

(define-public crate-libp2p-mplex-0.31.0 (c (n "libp2p-mplex") (v "0.31.0") (d (list (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.31.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)))) (h "0bvk84j4h4yix3i8vyz3723n8ji7xmlq89zs57j40hx7fgp71m29") (r "1.56.1")))

(define-public crate-libp2p-mplex-0.32.0 (c (n "libp2p-mplex") (v "0.32.0") (d (list (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.32.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)))) (h "0q11qw3lrn92qxihkvbrw1viiq1w2js28mq19yij5gzhzz4v0bj4") (r "1.56.1")))

(define-public crate-libp2p-mplex-0.33.0 (c (n "libp2p-mplex") (v "0.33.0") (d (list (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.33.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)))) (h "0h3n7yhm3h72l2z570mvr6cghaj38wy7079h26kk2xinya9wiyaz") (r "1.56.1")))

(define-public crate-libp2p-mplex-0.34.0 (c (n "libp2p-mplex") (v "0.34.0") (d (list (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.34.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)))) (h "1qi26gahcz27g9zvgmrsrp1lxsm7ws62xysx0z2hkhlfcch1pzb1") (r "1.56.1")))

(define-public crate-libp2p-mplex-0.35.0 (c (n "libp2p-mplex") (v "0.35.0") (d (list (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.35.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)))) (h "120028qs38i07i7c77fascfb4bmlf84afmz212ac8p9w9irjpsqp") (r "1.56.1")))

(define-public crate-libp2p-mplex-0.36.0 (c (n "libp2p-mplex") (v "0.36.0") (d (list (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.36.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)))) (h "0kd4x050qfbnwxm9hkr4sy5gl27k726yyyzf33my0vi2a69iclyf") (r "1.56.1")))

(define-public crate-libp2p-mplex-0.37.0 (c (n "libp2p-mplex") (v "0.37.0") (d (list (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.37.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)))) (h "12bx6cvjrqlm8dmvwj8a35kis3v71l5bpb5877kjsrcqznn689k9") (r "1.56.1")))

(define-public crate-libp2p-mplex-0.38.0 (c (n "libp2p-mplex") (v "0.38.0") (d (list (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.38.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)))) (h "1kmsqhmqi60r670061mhvzgvwv6365xn59dzrgki783s2125p003") (r "1.60.0")))

(define-public crate-libp2p-mplex-0.39.0 (c (n "libp2p-mplex") (v "0.39.0") (d (list (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.39.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)))) (h "1fiif0n5xrbfhpkx38nw53d8kv344vks62yp7xprw5aba45phd2d") (r "1.60.0")))

(define-public crate-libp2p-mplex-0.40.0 (c (n "libp2p-mplex") (v "0.40.0") (d (list (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.40.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-plaintext") (r "^0.40.0") (d #t) (k 2)) (d (n "libp2p-tcp") (r "^0.40.0") (f (quote ("async-io"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)))) (h "1gpsy2vdqqry239l8z7ggxwrh81ny4jmwrb7w089ibvcig89x5ck") (r "1.65.0")))

(define-public crate-libp2p-mplex-0.41.0 (c (n "libp2p-mplex") (v "0.41.0") (d (list (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.41.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 2)) (d (n "libp2p-plaintext") (r "^0.41.0") (d #t) (k 2)) (d (n "libp2p-tcp") (r "^0.41.0") (f (quote ("async-io"))) (d #t) (k 2)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)))) (h "095901lmd66qs7zxwbxzh3zx3nl68snbfz2zn8bh5qr7brv9bs55") (r "1.73.0")))

