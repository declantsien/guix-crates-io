(define-module (crates-io li bp libp2p-relay-manager) #:use-module (crates-io))

(define-public crate-libp2p-relay-manager-0.0.0 (c (n "libp2p-relay-manager") (v "0.0.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.52.3") (f (quote ("relay"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)))) (h "0acgw91phh4wba076lp7mqlx48az6nmwqr7v33cjbvrn8k29pwvm")))

(define-public crate-libp2p-relay-manager-0.1.0 (c (n "libp2p-relay-manager") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.52.3") (f (quote ("relay"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (f (quote ("full"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)))) (h "0vyajc7akyj29q9kw5r3vfcyvx8v6m6bd9yjkc7sxy7ncb5i5hbk")))

(define-public crate-libp2p-relay-manager-0.1.1 (c (n "libp2p-relay-manager") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.52.3") (f (quote ("relay"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (f (quote ("full"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)))) (h "1jsr2ljsixn6yxsmh1bphsb9a62h8x1ngvi2kir9knmxnfwqvrjf")))

(define-public crate-libp2p-relay-manager-0.1.2 (c (n "libp2p-relay-manager") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.52.3") (f (quote ("relay"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (f (quote ("full"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)))) (h "1jf9sb6xav2mzcgf16qxll6r8f54cf3gkcahinslzb1kcl7rilva")))

(define-public crate-libp2p-relay-manager-0.2.0 (c (n "libp2p-relay-manager") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.52.4") (f (quote ("relay"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (f (quote ("full"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)))) (h "19ap2gvp978kh5pgbmnpdwdk3ajz13r995mbzbc58nkcdpf9sx9w")))

(define-public crate-libp2p-relay-manager-0.2.1 (c (n "libp2p-relay-manager") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("relay"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("full"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)))) (h "1fk969smhcpla0194zkdz32201gyrfl3qaq0chv777gyzb35xhz3")))

(define-public crate-libp2p-relay-manager-0.2.2 (c (n "libp2p-relay-manager") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.14") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("relay"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)))) (h "13a2113si9ls69cx7kdfvbc59wrj8wv9zkvj5p45hjrbaak29kp8")))

(define-public crate-libp2p-relay-manager-0.2.3 (c (n "libp2p-relay-manager") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-timer") (r "^3.0") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.14") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("relay"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)))) (h "0n4pgs69di8nw5m76z7k28mw11m05pxs043li61lv6jgyvwqnklc")))

(define-public crate-libp2p-relay-manager-0.2.4 (c (n "libp2p-relay-manager") (v "0.2.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-timer") (r "^3.0") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2.14") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("relay"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)))) (h "13xkml0vjd1lany5qb8kx373wkdwnbjshpvriijsdlrqdjibcfr4")))

(define-public crate-libp2p-relay-manager-0.2.5 (c (n "libp2p-relay-manager") (v "0.2.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-timer") (r "^3.0") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "=0.2.14") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("relay"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)))) (h "1bv5i8lsf7s7fvvpfnbhkcd2rhb977jzipqbqn27nnjs5m2gk7q8")))

