(define-module (crates-io li bp libpt) #:use-module (crates-io))

(define-public crate-libpt-0.1.0 (c (n "libpt") (v "0.1.0") (d (list (d (n "clap") (r "^4.3.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "gag") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (f (quote ("max_level_trace" "release_max_level_trace"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.18.1") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)))) (h "1mk9y2d9izbpbjir5gky3spbhvi69ccb9khv79pjkz0i404637hx")))

(define-public crate-libpt-0.1.1 (c (n "libpt") (v "0.1.1") (d (list (d (n "clap") (r "^4.3.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "gag") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (f (quote ("max_level_trace" "release_max_level_trace"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.18.1") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)))) (h "00jy2gpmffnygcx733xk7r4xf9svdmj21517hld1q5jswl2hsakw")))

(define-public crate-libpt-0.1.2 (c (n "libpt") (v "0.1.2") (d (list (d (n "clap") (r "^4.3.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap-num") (r "^1.0.2") (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "gag") (r "^1.0.0") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (f (quote ("max_level_trace" "release_max_level_trace"))) (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.18.1") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.15") (d #t) (k 0)))) (h "1p82fqsh4iqyjvi8fi0sq6a0qmh80193rrjal9arv8y6m49rfh50")))

(define-public crate-libpt-0.1.3 (c (n "libpt") (v "0.1.3") (d (list (d (n "clap") (r "^4.3.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap-num") (r "^1.0.2") (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "gag") (r "^1.0.0") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (f (quote ("max_level_trace" "release_max_level_trace"))) (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.18.1") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.15") (d #t) (k 0)))) (h "0ain8mhyhpvg7agixc391p3ai61l252lin10jg3xqkx2f9yadgkm")))

(define-public crate-libpt-0.1.4 (c (n "libpt") (v "0.1.4") (d (list (d (n "clap") (r "^4.3.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap-num") (r "^1.0.2") (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "gag") (r "^1.0.0") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (f (quote ("max_level_trace" "release_max_level_trace"))) (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.55") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.90") (d #t) (k 0)) (d (n "pyo3") (r "^0.18.1") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.15") (d #t) (k 0)))) (h "1brpags8ckhm96c4ar4kvjjllg44brs1gx5dii5p63i0ggi6ldxv")))

(define-public crate-libpt-0.1.5 (c (n "libpt") (v "0.1.5") (d (list (d (n "clap") (r "^4.3.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap-num") (r "^1.0.2") (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "gag") (r "^1.0.0") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (f (quote ("max_level_trace" "release_max_level_trace"))) (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.55") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.90") (d #t) (k 0)) (d (n "pyo3") (r "^0.18.1") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.15") (d #t) (k 0)))) (h "1fn1p4q3bw616xra4asp1mgpa1ijwbqd5vsmcvfhg0i36zbky4a8")))

(define-public crate-libpt-0.1.6 (c (n "libpt") (v "0.1.6") (d (list (d (n "clap") (r "^4.3.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap-num") (r "^1.0.2") (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "gag") (r "^1.0.0") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (f (quote ("max_level_trace" "release_max_level_trace"))) (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10.55") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.90") (d #t) (k 0)) (d (n "pyo3") (r "^0.18.1") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.102") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.15") (d #t) (k 0)))) (h "09w945kav3kqsc24x82470cfyh75vwi2jbz7a4ljii7kyr5ms3d1")))

(define-public crate-libpt-0.3.10 (c (n "libpt") (v "0.3.10") (d (list (d (n "clap") (r "^4.4.4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "clap-num") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "libpt-bintols") (r "^0.3.10") (d #t) (k 0)) (d (n "libpt-core") (r "^0.3.10") (d #t) (k 0)) (d (n "libpt-log") (r "^0.3.10") (d #t) (k 0)) (d (n "libpt-math") (r "^0.3.10") (d #t) (k 0)) (d (n "libpt-net") (r "^0.3.10") (d #t) (k 0)))) (h "1cjsm5wixqadnqbr6jah89nfw4kax410y8sml8lh82wzbn8kd3hb") (f (quote (("net") ("math") ("log") ("default" "log" "core" "bin") ("core") ("bintols")))) (s 2) (e (quote (("bin" "dep:clap" "dep:clap-num" "dep:clap-verbosity-flag" "math" "bintols"))))))

(define-public crate-libpt-0.3.11-alpha.1 (c (n "libpt") (v "0.3.11-alpha.1") (d (list (d (n "clap") (r "^4.4.4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "clap-num") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "libpt-bintols") (r "^0.3.11-alpha.1") (d #t) (k 0)) (d (n "libpt-core") (r "^0.3.11-alpha.1") (d #t) (k 0)) (d (n "libpt-log") (r "^0.3.11-alpha.1") (d #t) (k 0)) (d (n "libpt-math") (r "^0.3.11-alpha.1") (d #t) (k 0)) (d (n "libpt-net") (r "^0.3.11-alpha.1") (d #t) (k 0)))) (h "11f6s6a68ncsvp4f2d55vnl4f3gyffz6a6pkfmvwcin5f75nqqgf") (f (quote (("net") ("math") ("log") ("default" "log" "core" "bin") ("core") ("bintols")))) (s 2) (e (quote (("bin" "dep:clap" "dep:clap-num" "dep:clap-verbosity-flag" "math" "bintols"))))))

(define-public crate-libpt-0.3.11 (c (n "libpt") (v "0.3.11") (d (list (d (n "clap") (r "^4.4.4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "clap-num") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "libpt-bintols") (r "^0.3.11") (d #t) (k 0)) (d (n "libpt-core") (r "^0.3.11") (d #t) (k 0)) (d (n "libpt-log") (r "^0.3.11") (d #t) (k 0)) (d (n "libpt-math") (r "^0.3.11") (d #t) (k 0)) (d (n "libpt-net") (r "^0.3.11") (d #t) (k 0)))) (h "1ff25g1dyd0598yqhd8m6wgp3as32x9sqg1kasxnvvkqpim0j8zh") (f (quote (("net") ("math") ("log") ("default" "log" "core" "bin") ("core") ("bintols")))) (s 2) (e (quote (("bin" "dep:clap" "dep:clap-num" "dep:clap-verbosity-flag" "math" "bintols"))))))

(define-public crate-libpt-0.4.0-alpha.2 (c (n "libpt") (v "0.4.0-alpha.2") (d (list (d (n "libpt-bintols") (r "^0.4.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "libpt-core") (r "^0.4.0-alpha.2") (d #t) (k 0)) (d (n "libpt-log") (r "^0.4.0-alpha.2") (o #t) (d #t) (k 0)))) (h "1ci6pbmm5mwrs2wbhrhd53qnpdm1hwq2q55glqp92aw9b6zh214d") (f (quote (("full" "default" "core" "log" "bintols") ("default" "log" "core") ("core")))) (s 2) (e (quote (("log" "dep:libpt-log") ("bintols" "dep:libpt-bintols" "log"))))))

(define-public crate-libpt-0.4.1 (c (n "libpt") (v "0.4.1") (d (list (d (n "libpt-bintols") (r "^0.4.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "libpt-core") (r "^0.4.0-alpha.2") (d #t) (k 0)) (d (n "libpt-log") (r "^0.4.0-alpha.2") (o #t) (d #t) (k 0)))) (h "1wcb73y64vbaq8yi35jvww148qiv3adgfh8xnpg9gh7nqgxah06j") (f (quote (("full" "default" "core" "log" "bintols") ("default" "log" "core") ("core")))) (s 2) (e (quote (("log" "dep:libpt-log") ("bintols" "dep:libpt-bintols" "log"))))))

(define-public crate-libpt-0.4.2 (c (n "libpt") (v "0.4.2") (d (list (d (n "libpt-bintols") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "libpt-core") (r "^0.4.0") (d #t) (k 0)) (d (n "libpt-log") (r "^0.4.1") (o #t) (d #t) (k 0)))) (h "0r25a0ki6d61c5yh8352kym779rw99bwkd7r9qyvyl1ghnzjs90z") (f (quote (("full" "default" "core" "log" "bintols") ("default" "log" "core") ("core")))) (s 2) (e (quote (("log" "dep:libpt-log") ("bintols" "dep:libpt-bintols" "log"))))))

(define-public crate-libpt-0.5.0 (c (n "libpt") (v "0.5.0") (d (list (d (n "libpt-bintols") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "libpt-core") (r "^0.4.0") (d #t) (k 0)) (d (n "libpt-log") (r "^0.4.2") (o #t) (d #t) (k 0)))) (h "07wlj26yf9yrcw79df2x873dz6c2dlr1c6455vqvvcsmzcnca5bi") (f (quote (("full" "default" "core" "log" "bintols") ("default" "log" "core") ("core")))) (s 2) (e (quote (("log" "dep:libpt-log") ("bintols" "dep:libpt-bintols" "log"))))))

(define-public crate-libpt-0.5.1 (c (n "libpt") (v "0.5.1") (d (list (d (n "libpt-bintols") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "libpt-core") (r "^0.4.0") (d #t) (k 0)) (d (n "libpt-log") (r "^0.4.2") (o #t) (d #t) (k 0)))) (h "0cmbrp9m9n1g5slqz9yicrs8m2sd7k677d2q43wj1nk1x5pcpsl1") (f (quote (("full" "default" "core" "log" "bintols") ("default" "log" "core") ("core")))) (s 2) (e (quote (("log" "dep:libpt-log") ("bintols" "dep:libpt-bintols" "log"))))))

