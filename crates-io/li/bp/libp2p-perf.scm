(define-module (crates-io li bp libp2p-perf) #:use-module (crates-io))

(define-public crate-libp2p-perf-0.1.0 (c (n "libp2p-perf") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "instant") (r "^0.1.11") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.39.0") (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.39.0") (f (quote ("async-std"))) (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.42.0") (d #t) (k 0)) (d (n "libp2p-quic") (r "^0.7.0-alpha.2") (f (quote ("async-std"))) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.42.0") (f (quote ("macros" "async-std"))) (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.39.0") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.43.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "076g0rkq7kwpb6rps4l41chppjb7wwm3f8msdnhv9in2csavshpm") (r "1.64.0")))

(define-public crate-libp2p-perf-0.2.0 (c (n "libp2p-perf") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4.3.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.40.0") (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.40.0") (f (quote ("tokio"))) (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-quic") (r "^0.8.0-alpha") (f (quote ("tokio"))) (d #t) (k 0)) (d (n "libp2p-request-response") (r "^0.25.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.43.0") (f (quote ("macros" "tokio"))) (d #t) (k 0)) (d (n "libp2p-swarm-test") (r "^0.2.0") (d #t) (k 2)) (d (n "libp2p-tcp") (r "^0.40.0") (f (quote ("tokio"))) (d #t) (k 0)) (d (n "libp2p-tls") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.44.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "010vq160jbm1xqclafa0pfs0lhwcy46sags4y0cf4mfdi1wyfszc") (r "1.65.0")))

(define-public crate-libp2p-perf-0.3.0 (c (n "libp2p-perf") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures-bounded") (r "^0.2.1") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p") (r "^0.53.0") (f (quote ("tokio" "tcp" "quic" "tls" "yamux" "dns"))) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.41.0") (d #t) (k 0)) (d (n "libp2p-dns") (r "^0.41.0") (f (quote ("tokio"))) (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "libp2p-quic") (r "^0.10.0") (f (quote ("tokio"))) (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.44.0") (f (quote ("macros" "tokio"))) (d #t) (k 0)) (d (n "libp2p-tcp") (r "^0.41.0") (f (quote ("tokio"))) (d #t) (k 0)) (d (n "libp2p-tls") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-yamux") (r "^0.45.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.33") (f (quote ("macros" "rt" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "04v2rg1lil91552ar4c5kvc63m3zcz54fmsjw8xd8lz6xzzl5kii") (r "1.73.0")))

