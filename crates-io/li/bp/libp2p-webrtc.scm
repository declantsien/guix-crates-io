(define-module (crates-io li bp libp2p-webrtc) #:use-module (crates-io))

(define-public crate-libp2p-webrtc-0.1.0 (c (n "libp2p-webrtc") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "async-datachannel") (r "^0.2.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.15.0") (f (quote ("tokio" "tokio-openssl"))) (d #t) (k 0)) (d (n "http") (r "^0.2.4") (d #t) (k 0)) (d (n "libp2p") (r "^0.39.1") (k 0)) (d (n "libp2p") (r "^0.39.1") (f (quote ("ping"))) (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "tokio") (r "^1.11.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.7") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.8") (f (quote ("compat"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.27") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.23") (d #t) (k 2)))) (h "1jcqbnbnvf2bwhls8iwq0g604qhq9jjqvkc88i33shb32h751x4n")))

(define-public crate-libp2p-webrtc-0.2.0 (c (n "libp2p-webrtc") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "async-datachannel") (r "^0.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-datachannel-wasm") (r "^0.1.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-stream") (r "^0.3.2") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.15.0") (f (quote ("tokio" "tokio-openssl"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-timer") (r "^3.0.2") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.41.0") (k 0)) (d (n "libp2p") (r "^0.41.0") (f (quote ("wasm-bindgen"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p") (r "^0.41.0") (f (quote ("ping" "noise" "mplex" "yamux"))) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project") (r "^1.0.8") (d #t) (k 0)) (d (n "send_wrapper") (r "^0.5.0") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "streamunordered") (r "^0.5.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing-subscriber") (r "^0.2.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "ws_stream_wasm") (r "^0.7.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1n3alv9iv1di4agx4d8d94w55w9jv4n6wwdick0xny4fny55ignl")))

(define-public crate-libp2p-webrtc-0.2.1 (c (n "libp2p-webrtc") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "async-datachannel") (r "^0.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-datachannel-wasm") (r "^0.1.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-stream") (r "^0.3.2") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.16.1") (f (quote ("tokio" "tokio-native-tls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-timer") (r "^3.0.2") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "libp2p") (r "^0.41.1") (k 0)) (d (n "libp2p") (r "^0.41.1") (f (quote ("wasm-bindgen"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p") (r "^0.41.1") (f (quote ("ping" "noise" "mplex" "yamux"))) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "send_wrapper") (r "^0.5.0") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "streamunordered") (r "^0.5.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing-subscriber") (r "^0.3.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "ws_stream_wasm") (r "^0.7.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "199knh0snz4nsq9p7v4lyrgwd5lhcr21a1qcz88qzdk5lr8g33ib")))

(define-public crate-libp2p-webrtc-0.3.0 (c (n "libp2p-webrtc") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "async-datachannel") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-datachannel-wasm") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-stream") (r "^0.3.2") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.17.1") (f (quote ("tokio" "tokio-native-tls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-timer") (r "^3.0.2") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "libp2p") (r "^0.43.0") (k 0)) (d (n "libp2p") (r "^0.43.0") (f (quote ("wasm-bindgen"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p") (r "^0.43.0") (f (quote ("ping" "noise" "mplex" "yamux"))) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "send_wrapper") (r "^0.5.0") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "streamunordered") (r "^0.5.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing-subscriber") (r "^0.3.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4.29") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.29") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "ws_stream_wasm") (r "^0.7.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0hf05k1k9nx9srdamicxsaq1k9ygdppw43yr0x9zki36vwf4v72z")))

(define-public crate-libp2p-webrtc-0.4.0-alpha (c (n "libp2p-webrtc") (v "0.4.0-alpha") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "if-watch") (r "^3.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.38.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.41.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multihash") (r "^0.16") (f (quote ("sha2"))) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "prost-build") (r "^0.11") (d #t) (k 1)) (d (n "prost-codec") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rcgen") (r "^0.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stun") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("net"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 2)) (d (n "void") (r "^1") (d #t) (k 2)) (d (n "webrtc") (r "^0.6.0") (o #t) (d #t) (k 0)))) (h "0shgjzix8mbr2r40bi47w7k0mfpkxcfdw1ga10isgjv8vn3cvdnd") (s 2) (e (quote (("tokio" "dep:tokio" "dep:tokio-util" "dep:webrtc" "if-watch/tokio") ("pem" "webrtc?/pem")))) (r "1.60.0")))

(define-public crate-libp2p-webrtc-0.4.0-alpha.2 (c (n "libp2p-webrtc") (v "0.4.0-alpha.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "if-watch") (r "^3.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.39.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.42.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multihash") (r "^0.17.0") (f (quote ("sha2"))) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "prost-build") (r "^0.11") (d #t) (k 1)) (d (n "prost-codec") (r "^0.3.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rcgen") (r "^0.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stun") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("net"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 2)) (d (n "void") (r "^1") (d #t) (k 2)) (d (n "webrtc") (r "^0.6.0") (o #t) (d #t) (k 0)))) (h "0nzbq65hyc5j6bdwl08nzf4izcjbaszx998b649z8dhdapn02i6v") (s 2) (e (quote (("tokio" "dep:tokio" "dep:tokio-util" "dep:webrtc" "if-watch/tokio") ("pem" "webrtc?/pem")))) (r "1.60.0")))

(define-public crate-libp2p-webrtc-0.4.0-alpha.3 (c (n "libp2p-webrtc") (v "0.4.0-alpha.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "if-watch") (r "^3.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.39.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.42.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multihash") (r "^0.17.0") (f (quote ("sha2"))) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.1") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rcgen") (r "^0.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stun") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("net"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 2)) (d (n "void") (r "^1") (d #t) (k 2)) (d (n "webrtc") (r "^0.6.0") (o #t) (d #t) (k 0)))) (h "1xv1skdwmavrxb9krln1ckpps6aspvryxwydzvavvqr1b6pw7l7z") (s 2) (e (quote (("tokio" "dep:tokio" "dep:tokio-util" "dep:webrtc" "if-watch/tokio") ("pem" "webrtc?/pem")))) (r "1.60.0")))

(define-public crate-libp2p-webrtc-0.4.0-alpha.4 (c (n "libp2p-webrtc") (v "0.4.0-alpha.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "if-watch") (r "^3.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.39.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.42.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multihash") (r "^0.17.0") (f (quote ("sha2"))) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.1") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rcgen") (r "^0.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stun") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("net"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 2)) (d (n "void") (r "^1") (d #t) (k 2)) (d (n "webrtc") (r "^0.6.0") (o #t) (d #t) (k 0)))) (h "1y1npqrhv25njgsgs9nz0x69dhxh8madc43wpjs60bxwxn98b96v") (s 2) (e (quote (("tokio" "dep:tokio" "dep:tokio-util" "dep:webrtc" "if-watch/tokio") ("pem" "webrtc?/pem")))) (r "1.60.0")))

(define-public crate-libp2p-webrtc-0.5.0-alpha (c (n "libp2p-webrtc") (v "0.5.0-alpha") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "if-watch") (r "^3.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.40.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.43.0") (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.43.0") (d #t) (k 2)) (d (n "libp2p-swarm") (r "^0.43.0") (f (quote ("macros" "tokio"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multihash") (r "^0.19.0") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rcgen") (r "^0.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "stun") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("net"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 2)) (d (n "void") (r "^1") (d #t) (k 2)) (d (n "webrtc") (r "^0.6.0") (o #t) (d #t) (k 0)))) (h "0v47x8z6dc5xjc071cdr1gp7h3jzrcycjz1h7hvf962rc61z72np") (s 2) (e (quote (("tokio" "dep:tokio" "dep:tokio-util" "dep:webrtc" "if-watch/tokio") ("pem" "webrtc?/pem")))) (r "1.65.0")))

(define-public crate-libp2p-webrtc-0.6.0-alpha (c (n "libp2p-webrtc") (v "0.6.0-alpha") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "if-watch") (r "^3.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.40.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.43.0") (d #t) (k 0)) (d (n "libp2p-ping") (r "^0.43.0") (d #t) (k 2)) (d (n "libp2p-swarm") (r "^0.43.0") (f (quote ("macros" "tokio"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multihash") (r "^0.19.0") (d #t) (k 0)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "quick-protobuf-codec") (r "^0.2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rcgen") (r "^0.10.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "stun") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("net"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 2)) (d (n "void") (r "^1") (d #t) (k 2)) (d (n "webrtc") (r "^0.8.0") (o #t) (d #t) (k 0)))) (h "0qwkp4rmfyw0hris9369wxd6kkprwi7a3yzn6i9xzawg8yqygy2l") (s 2) (e (quote (("tokio" "dep:tokio" "dep:tokio-util" "dep:webrtc" "if-watch/tokio") ("pem" "webrtc?/pem")))) (r "1.65.0")))

(define-public crate-libp2p-webrtc-0.6.1-alpha (c (n "libp2p-webrtc") (v "0.6.1-alpha") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "if-watch") (r "^3.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.40.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.3") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.43.1") (d #t) (k 0)) (d (n "libp2p-webrtc-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multihash") (r "^0.19.1") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rcgen") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stun") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("net"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "webrtc") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "13ickfizlblkfrsl0c1grl9xx2xszxkbzxxarpk3vz9mlbxq0fpg") (s 2) (e (quote (("tokio" "dep:tokio" "dep:tokio-util" "dep:webrtc" "if-watch/tokio") ("pem" "webrtc?/pem")))) (r "1.65.0")))

(define-public crate-libp2p-webrtc-0.7.0-alpha (c (n "libp2p-webrtc") (v "0.7.0-alpha") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "if-watch") (r "^3.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.41.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.8") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.8") (f (quote ("rand"))) (d #t) (k 2)) (d (n "libp2p-noise") (r "^0.44.0") (d #t) (k 0)) (d (n "libp2p-webrtc-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "multihash") (r "^0.19.1") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rcgen") (r "^0.11.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stun") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.34") (f (quote ("net"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.34") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "webrtc") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "07cdlk4q6p7b18xg9grc49xh3fj0msainwf0x42s7y93d51dnn92") (s 2) (e (quote (("tokio" "dep:tokio" "dep:tokio-util" "dep:webrtc" "if-watch/tokio") ("pem" "webrtc?/pem")))) (r "1.73.0")))

(define-public crate-libp2p-webrtc-0.7.1-alpha (c (n "libp2p-webrtc") (v "0.7.1-alpha") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "if-watch") (r "^3.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.41.2") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.8") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.8") (f (quote ("rand"))) (d #t) (k 2)) (d (n "libp2p-noise") (r "^0.44.0") (d #t) (k 0)) (d (n "libp2p-webrtc-utils") (r "^0.2.0") (d #t) (k 0)) (d (n "multihash") (r "^0.19.1") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rcgen") (r "^0.11.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stun") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinytemplate") (r "^1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("net"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "webrtc") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "135h2dvdkg09h17aahha5vx9jk2nfjz285wlpwz3a5xn9vnqrbz9") (s 2) (e (quote (("tokio" "dep:tokio" "dep:tokio-util" "dep:webrtc" "if-watch/tokio") ("pem" "webrtc?/pem")))) (r "1.73.0")))

