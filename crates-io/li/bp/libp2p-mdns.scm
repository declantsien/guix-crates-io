(define-module (crates-io li bp libp2p-mdns) #:use-module (crates-io))

(define-public crate-libp2p-mdns-0.1.0 (c (n "libp2p-mdns") (v "0.1.0") (d (list (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.1.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.1.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-reactor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "tokio-udp") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)))) (h "1b54lm9lhgrjnaglh34k09cg7p5v3r8dfgjjm1lzicmx381nrffd")))

(define-public crate-libp2p-mdns-0.2.0 (c (n "libp2p-mdns") (v "0.2.0") (d (list (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.2.0") (d #t) (k 0)) (d (n "multiaddr") (r "^0.1.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-reactor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "tokio-udp") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)))) (h "1a6dx20qzj96z9rqjs6kywjig2s1kn8pv5lpysmhamjlcchbig0v")))

(define-public crate-libp2p-mdns-0.3.0 (c (n "libp2p-mdns") (v "0.3.0") (d (list (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiaddr") (r "^0.1.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-reactor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "tokio-udp") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)))) (h "01cyzji87xys69dfw7lk8a074kyz75hr46b71zml90ffaypqhhvz")))

(define-public crate-libp2p-mdns-0.4.0 (c (n "libp2p-mdns") (v "0.4.0") (d (list (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiaddr") (r "^0.2.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-reactor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "tokio-udp") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)))) (h "1k942afwnb7z8cwsppj1vfk2h44dqd604pm4v2022x9rdqlrya33")))

(define-public crate-libp2p-mdns-0.5.0 (c (n "libp2p-mdns") (v "0.5.0") (d (list (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.5.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiaddr") (r "^0.2.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-reactor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "tokio-udp") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)))) (h "1az369z8d5q3c1iqxcwrhvkl2m73rr8d64v41ilf47m59mjbf316")))

(define-public crate-libp2p-mdns-0.6.0 (c (n "libp2p-mdns") (v "0.6.0") (d (list (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiaddr") (r "^0.2.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-reactor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "tokio-udp") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)))) (h "0npm2s3yxh80qcm1gicpbr12mpg7vknjbcfwl0k5v838vq65v4fw")))

(define-public crate-libp2p-mdns-0.7.0 (c (n "libp2p-mdns") (v "0.7.0") (d (list (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.7.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiaddr") (r "^0.4.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-reactor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-timer") (r "^0.2") (d #t) (k 0)) (d (n "tokio-udp") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)))) (h "19walwcfqw2vql6m6z5cgfcjizk34x1rmd37cfp2r0glhmfimg69")))

(define-public crate-libp2p-mdns-0.8.0 (c (n "libp2p-mdns") (v "0.8.0") (d (list (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiaddr") (r "^0.4.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-reactor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-udp") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.1") (d #t) (k 0)))) (h "122ndqcvlrk49kd8xk652zpx9b1501jkgqib8mzwalnrg17mj2gh")))

(define-public crate-libp2p-mdns-0.9.0 (c (n "libp2p-mdns") (v "0.9.0") (d (list (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiaddr") (r "^0.5.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-reactor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-udp") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.1") (d #t) (k 0)))) (h "18hfhl3sfpfkdgis4nxn6f55l44kbf7k006vlndw1704y2kaxgfd")))

(define-public crate-libp2p-mdns-0.10.0 (c (n "libp2p-mdns") (v "0.10.0") (d (list (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiaddr") (r "^0.5.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-reactor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-udp") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.1") (d #t) (k 0)))) (h "1kzqgprkwm68bddwckqd9iy2gzqkvcyq6pasxrq3sy9sw7k4fy0f")))

(define-public crate-libp2p-mdns-0.11.0 (c (n "libp2p-mdns") (v "0.11.0") (d (list (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.11.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiaddr") (r "^0.5.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-reactor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-udp") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.1") (d #t) (k 0)))) (h "1n9r3j2dgz76jfap322q3lq0b9akd25iam20qcapwr1llafva95x")))

(define-public crate-libp2p-mdns-0.12.0 (c (n "libp2p-mdns") (v "0.12.0") (d (list (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.12.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiaddr") (r "^0.5.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-reactor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-udp") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.1") (d #t) (k 0)))) (h "005fh16i0g0s41ifcqih742aq44cp1xkp1p6nqshjrs22l847m6b")))

(define-public crate-libp2p-mdns-0.13.0 (c (n "libp2p-mdns") (v "0.13.0") (d (list (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.13.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiaddr") (r "^0.5.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-reactor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-udp") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.1") (d #t) (k 0)))) (h "1yni6kd1ggf2rxzsizjqb8cl86ll4j1w7c7cv0z8hx7wb0lyq7mb")))

(define-public crate-libp2p-mdns-0.13.1 (c (n "libp2p-mdns") (v "0.13.1") (d (list (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.13.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiaddr") (r "^0.6.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-reactor") (r "^0.1") (d #t) (k 0)) (d (n "tokio-udp") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.1") (d #t) (k 0)))) (h "0zb7rmkqaxhrkyn8j8np8bz7lly9rknab83pmp1p3ifzlwjy5hn4")))

(define-public crate-libp2p-mdns-0.14.0-alpha.1 (c (n "libp2p-mdns") (v "0.14.0-alpha.1") (d (list (d (n "async-std") (r "^1.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.14.0-alpha.1") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.4.0-alpha.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiaddr") (r "^0.7.0") (d #t) (k 0) (p "parity-multiaddr")) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "1ajc3igk0s58d1vgbn2n7wg8qc4by672bvgak6800b5dn3g7q2xy")))

(define-public crate-libp2p-mdns-0.15.0 (c (n "libp2p-mdns") (v "0.15.0") (d (list (d (n "async-std") (r "^1.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.15.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.5.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0pwyvj7rxrxkrcyivrkabhpybmvgn5qyq1d1zw533psm6csi4hq7")))

(define-public crate-libp2p-mdns-0.16.0 (c (n "libp2p-mdns") (v "0.16.0") (d (list (d (n "async-std") (r "^1.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.16.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.16.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "1pilfc8abv8l6hqkic58v5p5a8cnaa4nzfz6y2wjv0n2c2rwy7w8")))

(define-public crate-libp2p-mdns-0.17.0 (c (n "libp2p-mdns") (v "0.17.0") (d (list (d (n "async-std") (r "^1.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.17.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.17.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0kmlszycqsnwbb7m544gpcwsdn42h3ycwhqz54fclbza7dmjflmp")))

(define-public crate-libp2p-mdns-0.18.0 (c (n "libp2p-mdns") (v "0.18.0") (d (list (d (n "async-std") (r "^1.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.18.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.18.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0wclp457ac1n88ka4s1sn2q7yxzx8hcgw0hzmp30xzzqmb90isa1")))

(define-public crate-libp2p-mdns-0.19.0 (c (n "libp2p-mdns") (v "0.19.0") (d (list (d (n "async-std") (r "^1.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.19.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.19.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "1rmbijkyplxm6wphqrdmmqx36ikgz8rf1llj1k5h460ija6pig6m")))

(define-public crate-libp2p-mdns-0.19.1 (c (n "libp2p-mdns") (v "0.19.1") (d (list (d (n "async-std") (r "< 1.6") (d #t) (k 0)) (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.19.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.19.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0f0bva5kn2as9ayzj935v9isz2jzayhbw9y4cyp5lw1zs5ih3c2i")))

(define-public crate-libp2p-mdns-0.19.2 (c (n "libp2p-mdns") (v "0.19.2") (d (list (d (n "async-std") (r "^1.5.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.19.2") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.19.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0mzkf9a1bidbp9pl7rgc8kvfgh4f4qisnw422nzyb1h9p3ab4mbz")))

(define-public crate-libp2p-mdns-0.20.0 (c (n "libp2p-mdns") (v "0.20.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 0)) (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.20.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.20.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "00ixfpmqc03pnng4wx4wblb6kzsh8lgcvck8f8pr5zb0h5k4q06d")))

(define-public crate-libp2p-mdns-0.21.0 (c (n "libp2p-mdns") (v "0.21.0") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.21.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.21.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("udp"))) (o #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "059qdlvs1ybcy36yfkkcf43lg7iwwzyd1akhb3pp9by5q8a5dznl")))

(define-public crate-libp2p-mdns-0.22.0 (c (n "libp2p-mdns") (v "0.22.0") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.22.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.22.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("udp"))) (o #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0s8c7mi5p412xwar1bnxfsn338a1jidxi63pw2dc547nnakbawri")))

(define-public crate-libp2p-mdns-0.23.0 (c (n "libp2p-mdns") (v "0.23.0") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.23.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.23.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("udp"))) (o #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "03zgah14b774xsjj46jwn00j046msixkganncp8cng0arr7m2xdm")))

(define-public crate-libp2p-mdns-0.24.0 (c (n "libp2p-mdns") (v "0.24.0") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.24.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.24.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.3") (f (quote ("net"))) (o #t) (k 0)) (d (n "tokio") (r "^0.3") (f (quote ("rt" "rt-multi-thread"))) (k 2)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "09idiw52xlw59lf50xrf7f3bgbidln4dy14gkwij4hvrk200csvq")))

(define-public crate-libp2p-mdns-0.25.0 (c (n "libp2p-mdns") (v "0.25.0") (d (list (d (n "async-std") (r ">=1.6.2, <2.0.0") (o #t) (d #t) (k 0)) (d (n "data-encoding") (r ">=2.0.0, <3.0.0") (d #t) (k 0)) (d (n "dns-parser") (r ">=0.8.0, <0.9.0") (d #t) (k 0)) (d (n "either") (r ">=1.5.3, <2.0.0") (d #t) (k 0)) (d (n "futures") (r ">=0.3.1, <0.4.0") (d #t) (k 0)) (d (n "if-addrs") (r ">=0.6.4, <0.7.0") (d #t) (k 2)) (d (n "lazy_static") (r ">=1.2.0, <2.0.0") (d #t) (k 0)) (d (n "libp2p-core") (r ">=0.25.0, <0.26.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r ">=0.25.0, <0.26.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "net2") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "rand") (r ">=0.7.0, <0.8.0") (d #t) (k 0)) (d (n "smallvec") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "tokio") (r ">=0.3.0, <0.4.0") (f (quote ("net"))) (o #t) (k 0)) (d (n "tokio") (r ">=0.3.0, <0.4.0") (f (quote ("rt" "rt-multi-thread"))) (k 2)) (d (n "void") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "wasm-timer") (r ">=0.2.4, <0.3.0") (d #t) (k 0)))) (h "0dw9phrz03k7lz3q327ydsms07arw6vbk2sw9pxn49mbnlvfqn24")))

(define-public crate-libp2p-mdns-0.26.0 (c (n "libp2p-mdns") (v "0.26.0") (d (list (d (n "async-io") (r "^1.3.0") (d #t) (k 0)) (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.1") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (k 2)) (d (n "if-watch") (r "^0.1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.25.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.25.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.5.0") (d #t) (k 0)) (d (n "socket2") (r "^0.3.17") (f (quote ("reuseport"))) (d #t) (k 0)) (d (n "tokio") (r "^0.3.4") (f (quote ("rt" "rt-multi-thread"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "0r9zxw9qw9s0wbkdajcgqls5aa3v2yjfypfpyxyk27rn7bh4x4vv")))

(define-public crate-libp2p-mdns-0.27.0 (c (n "libp2p-mdns") (v "0.27.0") (d (list (d (n "async-io") (r "^1.3.0") (d #t) (k 0)) (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.1") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (k 2)) (d (n "if-watch") (r "^0.1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.26.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.26.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.5.0") (d #t) (k 0)) (d (n "socket2") (r "^0.3.17") (f (quote ("reuseport"))) (d #t) (k 0)) (d (n "tokio") (r "^0.3.4") (f (quote ("rt" "rt-multi-thread"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "1x9n2acj9rflki0mz07s2vrxni6bhzjzs7hcjn60054girl157la")))

(define-public crate-libp2p-mdns-0.28.0 (c (n "libp2p-mdns") (v "0.28.0") (d (list (d (n "async-io") (r "^1.3.0") (d #t) (k 0)) (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.1") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (k 2)) (d (n "if-watch") (r "^0.1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.27.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.5.0") (d #t) (k 0)) (d (n "socket2") (r "^0.3.17") (f (quote ("reuseport"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0.1") (f (quote ("rt" "rt-multi-thread"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "1445y2g0ki7aagw10q2bdz4qbqmaji17krzdyjcy3h1z4dixnx5r")))

(define-public crate-libp2p-mdns-0.28.1 (c (n "libp2p-mdns") (v "0.28.1") (d (list (d (n "async-io") (r "^1.3.0") (d #t) (k 0)) (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.1") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (k 2)) (d (n "if-watch") (r "^0.1.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.27.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.5.0") (d #t) (k 0)) (d (n "socket2") (r "^0.3.17") (f (quote ("reuseport"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0.1") (f (quote ("rt" "rt-multi-thread"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "1q8g13r8pc7fb308p2n3dp8hp4f8fp4xzaycjy6i26sdh5s677hf")))

(define-public crate-libp2p-mdns-0.29.0 (c (n "libp2p-mdns") (v "0.29.0") (d (list (d (n "async-io") (r "^1.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (k 2)) (d (n "if-watch") (r "^0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.28.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.28.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "socket2") (r "^0.4.0") (f (quote ("all"))) (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("rt" "rt-multi-thread"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "0varzd4la7zz6l8cxw6mvm071kk4ph77bgdfkfd293b4pc9wla5y")))

(define-public crate-libp2p-mdns-0.30.0 (c (n "libp2p-mdns") (v "0.30.0") (d (list (d (n "async-io") (r "^1.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (k 2)) (d (n "if-watch") (r "^0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.28.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.29.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "socket2") (r "^0.4.0") (f (quote ("all"))) (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("rt" "rt-multi-thread"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "093pa3xs9s3gnpwba1f6c5dqwndsbrf23v6ggvg1bwnp7xxqj8f2")))

(define-public crate-libp2p-mdns-0.30.1 (c (n "libp2p-mdns") (v "0.30.1") (d (list (d (n "async-io") (r "^1.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (k 2)) (d (n "if-watch") (r "^0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.28.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.29.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "socket2") (r "^0.4.0") (f (quote ("all"))) (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("rt" "rt-multi-thread"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "07lncbkbvc4h06rqqca6wc398605gww51jmcp1nsbgn4fkwq5qj1")))

(define-public crate-libp2p-mdns-0.30.2 (c (n "libp2p-mdns") (v "0.30.2") (d (list (d (n "async-io") (r "^1.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (k 2)) (d (n "if-watch") (r "^0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.28.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.29.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "socket2") (r "^0.4.0") (f (quote ("all"))) (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("rt" "rt-multi-thread"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "056prr1nssbaxbrv99v6q1i7sa2yp2p2fvjlz0vi5nfjqg0p1yjf")))

(define-public crate-libp2p-mdns-0.31.0 (c (n "libp2p-mdns") (v "0.31.0") (d (list (d (n "async-io") (r "^1.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (k 2)) (d (n "if-watch") (r "^0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.29.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.30.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "socket2") (r "^0.4.0") (f (quote ("all"))) (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("rt" "rt-multi-thread"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "0czsskbl5s6i8h4bx8hf1xnhmdz7x2h81rb7cldlgf145ay6r7m2")))

(define-public crate-libp2p-mdns-0.32.0-rc.1 (c (n "libp2p-mdns") (v "0.32.0-rc.1") (d (list (d (n "async-io") (r "^1.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "if-watch") (r "^0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.30.0-rc.1") (k 0)) (d (n "libp2p-swarm") (r "^0.31.0-rc.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "socket2") (r "^0.4.0") (f (quote ("all"))) (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("macros" "rt" "rt-multi-thread"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "1w898c6rfvhwn3z3k3vh9jc9qn8mdnw2cbyrcgy6za0hac10j2qf")))

(define-public crate-libp2p-mdns-0.32.0 (c (n "libp2p-mdns") (v "0.32.0") (d (list (d (n "async-io") (r "^1.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "if-watch") (r "^0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.30.0") (k 0)) (d (n "libp2p-swarm") (r "^0.31.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "socket2") (r "^0.4.0") (f (quote ("all"))) (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("macros" "rt" "rt-multi-thread"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "0iadwvwcn43y3q7qfl54j5hjapskws4dz80h77zq92nw9fv69j0l")))

(define-public crate-libp2p-mdns-0.33.0 (c (n "libp2p-mdns") (v "0.33.0") (d (list (d (n "async-io") (r "^1.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "if-watch") (r "^0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.30.0") (k 0)) (d (n "libp2p-swarm") (r "^0.32.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "socket2") (r "^0.4.0") (f (quote ("all"))) (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("macros" "rt" "rt-multi-thread"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "1b3wr7kym7rci8yfac8p6f3pwf7ayk6qfmiz91x33qrbkfr6rshk")))

(define-public crate-libp2p-mdns-0.34.0 (c (n "libp2p-mdns") (v "0.34.0") (d (list (d (n "async-io") (r "^1.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "if-watch") (r "^1.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.31.0") (k 0)) (d (n "libp2p-swarm") (r "^0.33.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "socket2") (r "^0.4.0") (f (quote ("all"))) (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "0vrj25rpfpm309bxa4qjqbsqzpix5y4vx4n7qbrfgznik8208n8x") (r "1.56.1")))

(define-public crate-libp2p-mdns-0.35.0 (c (n "libp2p-mdns") (v "0.35.0") (d (list (d (n "async-io") (r "^1.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "if-watch") (r "^1.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.32.0") (k 0)) (d (n "libp2p-swarm") (r "^0.34.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "socket2") (r "^0.4.0") (f (quote ("all"))) (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "0php8zhwxh4sn31cgkzick772r5mm76y56dc2lxmz3lpfr2r3lal") (r "1.56.1")))

(define-public crate-libp2p-mdns-0.36.0 (c (n "libp2p-mdns") (v "0.36.0") (d (list (d (n "async-io") (r "^1.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "if-watch") (r "^1.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.32.0") (k 0)) (d (n "libp2p-swarm") (r "^0.35.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "socket2") (r "^0.4.0") (f (quote ("all"))) (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "1c2qc2a66y7h9w8k7qi98lv4yr65r89plz6mn3xcr072r1ryh6k1") (r "1.56.1")))

(define-public crate-libp2p-mdns-0.37.0 (c (n "libp2p-mdns") (v "0.37.0") (d (list (d (n "async-io") (r "^1.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "if-watch") (r "^1.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.33.0") (k 0)) (d (n "libp2p-swarm") (r "^0.36.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "socket2") (r "^0.4.0") (f (quote ("all"))) (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "0lb9g92ayk26zfv16bixad2jn10bypyb8w0q1zzw3dn7037zi0s7") (r "1.56.1")))

(define-public crate-libp2p-mdns-0.38.0 (c (n "libp2p-mdns") (v "0.38.0") (d (list (d (n "async-io") (r "^1.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "if-watch") (r "^1.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.34.0") (k 0)) (d (n "libp2p-swarm") (r "^0.37.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "socket2") (r "^0.4.0") (f (quote ("all"))) (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "1cnwbkg0fjz1ymxbcx72ii1a9xqxqq367l9z0f0k4q09jn8ybrb6") (r "1.56.1")))

(define-public crate-libp2p-mdns-0.39.0 (c (n "libp2p-mdns") (v "0.39.0") (d (list (d (n "async-io") (r "^1.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "if-watch") (r "^1.1.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.35.0") (k 0)) (d (n "libp2p-swarm") (r "^0.38.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "socket2") (r "^0.4.0") (f (quote ("all"))) (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "1k58kaz97n2szgdzwnvrbm2m0vlciac2qq8dd01a0f0s8bkczv80") (r "1.56.1")))

(define-public crate-libp2p-mdns-0.40.0 (c (n "libp2p-mdns") (v "0.40.0") (d (list (d (n "async-io") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "if-watch") (r "^1.1.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.36.0") (k 0)) (d (n "libp2p-swarm") (r "^0.39.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "socket2") (r "^0.4.0") (f (quote ("all"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("net" "time"))) (o #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "0xpwh71y4ws9zl1cgcfxi9by95v8ag2qbs89jkiy0az3xsy1ylzz") (f (quote (("default" "async-io")))) (s 2) (e (quote (("tokio" "dep:tokio") ("async-io" "dep:async-io")))) (r "1.56.1")))

(define-public crate-libp2p-mdns-0.41.0 (c (n "libp2p-mdns") (v "0.41.0") (d (list (d (n "async-io") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "if-watch") (r "^2.0.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.37.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.40.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "socket2") (r "^0.4.0") (f (quote ("all"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("net" "time"))) (o #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "05bssd5rvw3d287jj96y2jc1pz75zbm328mwsxc8vmpp4zkh85vn") (s 2) (e (quote (("tokio" "dep:tokio") ("async-io" "dep:async-io")))) (r "1.56.1")))

(define-public crate-libp2p-mdns-0.42.0 (c (n "libp2p-mdns") (v "0.42.0") (d (list (d (n "async-io") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "if-watch") (r "^3.0.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.38.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.41.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "socket2") (r "^0.4.0") (f (quote ("all"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("net" "time"))) (o #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (k 2)) (d (n "trust-dns-proto") (r "^0.22.0") (f (quote ("mdns" "tokio-runtime"))) (k 0)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "0nrbns1zkdp56sf1pz0mbniy72y1rh55qcfddhnqgsdd98k7iwq4") (s 2) (e (quote (("tokio" "dep:tokio" "if-watch/tokio") ("async-io" "dep:async-io" "if-watch/smol")))) (r "1.62.0")))

(define-public crate-libp2p-mdns-0.43.0 (c (n "libp2p-mdns") (v "0.43.0") (d (list (d (n "async-io") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "if-watch") (r "^3.0.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.39.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.42.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "socket2") (r "^0.4.0") (f (quote ("all"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("net" "time"))) (o #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (k 2)) (d (n "trust-dns-proto") (r "^0.22.0") (f (quote ("mdns" "tokio-runtime"))) (k 0)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "19gydy46c9aidvcvlzl5rnsfxb0gscmv64ph6sz0cwcgxra0nyk8") (s 2) (e (quote (("tokio" "dep:tokio" "if-watch/tokio") ("async-io" "dep:async-io" "if-watch/smol")))) (r "1.62.0")))

(define-public crate-libp2p-mdns-0.43.1 (c (n "libp2p-mdns") (v "0.43.1") (d (list (d (n "async-io") (r "^1.13.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (d #t) (k 0)) (d (n "if-watch") (r "^3.0.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.39.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.1.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.42.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "socket2") (r "^0.4.0") (f (quote ("all"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("net" "time"))) (o #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (k 2)) (d (n "trust-dns-proto") (r "^0.22.0") (f (quote ("mdns" "tokio-runtime"))) (k 0)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "02s6861v3k2i4sk97b744gfc030qrzhksq1ciy99m5wzjhgkx60r") (s 2) (e (quote (("tokio" "dep:tokio" "if-watch/tokio") ("async-io" "dep:async-io" "if-watch/smol")))) (r "1.62.0")))

(define-public crate-libp2p-mdns-0.44.0 (c (n "libp2p-mdns") (v "0.44.0") (d (list (d (n "async-io") (r "^1.13.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "if-watch") (r "^3.0.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.40.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.0") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.43.0") (d #t) (k 2)) (d (n "libp2p-swarm") (r "^0.43.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.43.0") (f (quote ("tokio" "async-std"))) (d #t) (k 2)) (d (n "libp2p-swarm-test") (r "^0.2.0") (d #t) (k 2)) (d (n "libp2p-tcp") (r "^0.40.0") (f (quote ("tokio" "async-io"))) (d #t) (k 2)) (d (n "libp2p-yamux") (r "^0.44.0") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "socket2") (r "^0.5.3") (f (quote ("all"))) (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("net" "time"))) (o #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (k 2)) (d (n "trust-dns-proto") (r "^0.22.0") (f (quote ("mdns" "tokio-runtime"))) (k 0)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "0apmhbd4c0mcn0ml06a8cz84z2csaw29cphqakpzacjj61y5d8j2") (s 2) (e (quote (("tokio" "dep:tokio" "if-watch/tokio") ("async-io" "dep:async-io" "if-watch/smol")))) (r "1.65.0")))

(define-public crate-libp2p-mdns-0.45.0 (c (n "libp2p-mdns") (v "0.45.0") (d (list (d (n "async-io") (r "^1.13.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "hickory-proto") (r "^0.24.0") (f (quote ("mdns"))) (k 0)) (d (n "if-watch") (r "^3.1.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.41.0") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.44.0") (d #t) (k 2)) (d (n "libp2p-swarm") (r "^0.44.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.44.0") (f (quote ("tokio" "async-std"))) (d #t) (k 2)) (d (n "libp2p-tcp") (r "^0.41.0") (f (quote ("tokio" "async-io"))) (d #t) (k 2)) (d (n "libp2p-yamux") (r "^0.45.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.1") (d #t) (k 0)) (d (n "socket2") (r "^0.5.5") (f (quote ("all"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33") (f (quote ("net" "time"))) (o #t) (k 0)) (d (n "tokio") (r "^1.33") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "0sp911ba6wwabrajk766vrci8dximypayxazd5whm7gfa6jp7wk8") (s 2) (e (quote (("tokio" "dep:tokio" "if-watch/tokio") ("async-io" "dep:async-io" "dep:async-std" "if-watch/smol")))) (r "1.73.0")))

(define-public crate-libp2p-mdns-0.45.1 (c (n "libp2p-mdns") (v "0.45.1") (d (list (d (n "async-io") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "hickory-proto") (r "^0.24.0") (f (quote ("mdns"))) (k 0)) (d (n "if-watch") (r "^3.1.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.41.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.8") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.44.0") (d #t) (k 2)) (d (n "libp2p-swarm") (r "^0.44.0") (d #t) (k 0)) (d (n "libp2p-swarm") (r "^0.44.0") (f (quote ("tokio" "async-std"))) (d #t) (k 2)) (d (n "libp2p-tcp") (r "^0.41.0") (f (quote ("tokio" "async-io"))) (d #t) (k 2)) (d (n "libp2p-yamux") (r "^0.45.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "socket2") (r "^0.5.5") (f (quote ("all"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34") (f (quote ("net" "time"))) (o #t) (k 0)) (d (n "tokio") (r "^1.34") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "1wpssw16iwnkq8z1k4fhnw0d68xzbp06fkdwxrz1sglv6fd7s029") (s 2) (e (quote (("tokio" "dep:tokio" "if-watch/tokio") ("async-io" "dep:async-io" "dep:async-std" "if-watch/smol")))) (r "1.73.0")))

