(define-module (crates-io li ne linera-alloy-sol-types) #:use-module (crates-io))

(define-public crate-linera-alloy-sol-types-0.7.4 (c (n "linera-alloy-sol-types") (v "0.7.4") (d (list (d (n "alloy-rlp") (r "^0.3") (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "hex") (r "^1.10") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "linera-alloy-json-abi") (r "^0.7.4") (o #t) (k 0)) (d (n "linera-alloy-primitives") (r "^0.7.4") (k 0)) (d (n "linera-alloy-primitives") (r "^0.7.4") (f (quote ("arbitrary" "serde" "rlp"))) (k 2)) (d (n "linera-alloy-sol-macro") (r "^0.7.4") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)))) (h "0mvwdplp5z2cyydz3bgmvw6fqq7nxn5y3qkph0wdablw0rj7h97x") (f (quote (("default" "std") ("arbitrary" "linera-alloy-primitives/arbitrary")))) (s 2) (e (quote (("std" "linera-alloy-primitives/std" "hex/std" "serde?/std") ("json" "dep:linera-alloy-json-abi" "linera-alloy-sol-macro/json") ("eip712-serde" "dep:serde" "linera-alloy-primitives/serde")))) (r "1.65")))

