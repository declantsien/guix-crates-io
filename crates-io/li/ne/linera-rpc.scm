(define-module (crates-io li ne linera-rpc) #:use-module (crates-io))

(define-public crate-linera-rpc-0.0.1 (c (n "linera-rpc") (v "0.0.1") (h "1xshqqnkch104ym0yc7qsgiqn2mcvfg4cx60c475641dfny4lrn2") (y #t)))

(define-public crate-linera-rpc-0.1.0 (c (n "linera-rpc") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-trait") (r "=0.1.58") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519") (r "^1.2.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "linera-base") (r "^0.1.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.1.0") (d #t) (k 0)) (d (n "linera-core") (r "^0.1.0") (k 0)) (d (n "linera-execution") (r "^0.1.0") (k 0)) (d (n "linera-storage") (r "^0.1.0") (k 0)) (d (n "linera-views") (r "^0.1.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.5") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.21") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.1.0") (d #t) (k 2)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 2)) (d (n "test-strategy") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.9") (f (quote ("codec" "net"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (d #t) (k 0)) (d (n "tonic-build") (r "^0.8") (d #t) (k 1)) (d (n "tonic-health") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1dnwq3kilp3kz6q6wx2szfcbkklyzgy031rpm3yql9bz34r8nfbq") (f (quote (("test" "linera-base/test" "linera-chain/test" "linera-core/test" "linera-execution/test" "linera-storage/test")))) (y #t)))

(define-public crate-linera-rpc-0.2.0 (c (n "linera-rpc") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-trait") (r "=0.1.58") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519") (r "^1.2.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "linera-base") (r "^0.2.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.2.0") (d #t) (k 0)) (d (n "linera-core") (r "^0.2.0") (k 0)) (d (n "linera-execution") (r "^0.2.0") (k 0)) (d (n "linera-storage") (r "^0.2.0") (k 0)) (d (n "linera-views") (r "^0.2.0") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.5") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.21") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.1.0") (d #t) (k 2)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 2)) (d (n "test-strategy") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.9") (f (quote ("codec" "net"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (d #t) (k 0)) (d (n "tonic-build") (r "^0.8") (d #t) (k 1)) (d (n "tonic-health") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0iv4vgbri5nnhn4d2180pl3xhhjq70js3llflgy4gbx3iy1yayw9") (f (quote (("test" "linera-base/test" "linera-chain/test" "linera-core/test" "linera-execution/test" "linera-storage/test")))) (y #t)))

(define-public crate-linera-rpc-0.3.0 (c (n "linera-rpc") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-trait") (r "=0.1.58") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519") (r "^1.2.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "linera-base") (r "^0.3.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.3.0") (d #t) (k 0)) (d (n "linera-core") (r "^0.3.0") (k 0)) (d (n "linera-execution") (r "^0.3.0") (k 0)) (d (n "linera-storage") (r "^0.3.0") (k 0)) (d (n "linera-views") (r "^0.3.0") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.5") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.21") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.1.0") (d #t) (k 2)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 2)) (d (n "test-strategy") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.9") (f (quote ("codec" "net"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (d #t) (k 0)) (d (n "tonic-build") (r "^0.8") (d #t) (k 1)) (d (n "tonic-health") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0c4l41raq5v5z9qfwd6xws08l42j2xzficiww5cx9xn6rhnqlzw0") (f (quote (("test" "linera-base/test" "linera-chain/test" "linera-core/test" "linera-execution/test" "linera-storage/test")))) (y #t)))

(define-public crate-linera-rpc-0.4.0 (c (n "linera-rpc") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-trait") (r "=0.1.58") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519") (r "^1.2.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "linera-base") (r "^0.4.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.4.0") (d #t) (k 0)) (d (n "linera-core") (r "^0.4.0") (k 0)) (d (n "linera-execution") (r "^0.4.0") (k 0)) (d (n "linera-storage") (r "^0.4.0") (k 0)) (d (n "linera-views") (r "^0.4.0") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.5") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.21") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.1.0") (d #t) (k 2)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 2)) (d (n "test-strategy") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.9") (f (quote ("codec" "net"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (d #t) (k 0)) (d (n "tonic-build") (r "^0.8") (d #t) (k 1)) (d (n "tonic-health") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0rk6c81h8acp8h2jwd0k8p6hg1chaavvf8p06dbyfhbaapd7kg8d") (f (quote (("test" "linera-base/test" "linera-chain/test" "linera-core/test" "linera-execution/test" "linera-storage/test")))) (y #t)))

(define-public crate-linera-rpc-0.4.1 (c (n "linera-rpc") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-trait") (r "=0.1.58") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519") (r "^1.2.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "linera-base") (r "^0.4.1") (d #t) (k 0)) (d (n "linera-chain") (r "^0.4.1") (d #t) (k 0)) (d (n "linera-core") (r "^0.4.1") (k 0)) (d (n "linera-execution") (r "^0.4.1") (k 0)) (d (n "linera-storage") (r "^0.4.1") (k 0)) (d (n "linera-views") (r "^0.4.1") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.5") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.21") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.1.0") (d #t) (k 2)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 2)) (d (n "test-strategy") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.9") (f (quote ("codec" "net"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (d #t) (k 0)) (d (n "tonic-build") (r "^0.8") (d #t) (k 1)) (d (n "tonic-health") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1bspsq30rx9zxwcs725amflbi4kimi8aaiy6ljhsvggk0k7k2s1h") (f (quote (("test" "linera-base/test" "linera-chain/test" "linera-core/test" "linera-execution/test" "linera-storage/test"))))))

(define-public crate-linera-rpc-0.5.0 (c (n "linera-rpc") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-trait") (r "=0.1.58") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "ed25519") (r "^1.2.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "http") (r "^0.2.7") (d #t) (k 0)) (d (n "linera-base") (r "^0.5.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.5.0") (d #t) (k 0)) (d (n "linera-core") (r "^0.5.0") (k 0)) (d (n "linera-execution") (r "^0.5.0") (k 0)) (d (n "linera-storage") (r "^0.5.0") (k 0)) (d (n "linera-views") (r "^0.5.0") (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.5") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.21") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.1.0") (d #t) (k 2)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 2)) (d (n "test-strategy") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.9") (f (quote ("codec" "net"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (d #t) (k 0)) (d (n "tonic-build") (r "^0.8") (d #t) (k 1)) (d (n "tonic-health") (r "^0.8") (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1ig28n292mj57kr9qma5ixgvn2g49xylhlar4p8wmx2gnawp0vbm") (f (quote (("test" "linera-base/test" "linera-chain/test" "linera-core/test" "linera-execution/test" "linera-storage/test"))))))

(define-public crate-linera-rpc-0.6.0 (c (n "linera-rpc") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "ed25519") (r "^1.5.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "linera-base") (r "^0.6.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.6.0") (d #t) (k 0)) (d (n "linera-core") (r "^0.6.0") (k 0)) (d (n "linera-execution") (r "^0.6.0") (k 0)) (d (n "linera-storage") (r "^0.6.0") (k 0)) (d (n "linera-views") (r "^0.6.0") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "structopt") (r "^0.3.26") (d #t) (k 0)) (d (n "structopt") (r "^0.3.26") (d #t) (k 2)) (d (n "test-strategy") (r "^0.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.10") (f (quote ("codec" "net"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (f (quote ("tls" "tls-roots" "transport"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8") (d #t) (k 1)) (d (n "tonic-health") (r "^0.8") (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "02z0mmh8f4kacs43rfk0ykv8q9rgp51h1lalip2wzmh21cas6x97") (f (quote (("test" "linera-base/test" "linera-chain/test" "linera-core/test" "linera-execution/test" "linera-storage/test"))))))

(define-public crate-linera-rpc-0.7.1 (c (n "linera-rpc") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "ed25519") (r "^1.5.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "linera-base") (r "^0.7.1") (d #t) (k 0)) (d (n "linera-chain") (r "^0.7.1") (d #t) (k 0)) (d (n "linera-core") (r "^0.7.1") (k 0)) (d (n "linera-execution") (r "^0.7.1") (k 0)) (d (n "linera-storage") (r "^0.7.1") (k 0)) (d (n "linera-views") (r "^0.7.1") (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "test-strategy") (r "^0.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.10") (f (quote ("codec" "net"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (f (quote ("tls" "tls-roots" "transport"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8") (d #t) (k 1)) (d (n "tonic-health") (r "^0.8") (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "0gzv7li0bhrfmlwwk9vda2ssnlydmkivl3lqbr60hwjvy529ffdk") (f (quote (("test" "linera-base/test" "linera-chain/test" "linera-core/test" "linera-execution/test" "linera-storage/test"))))))

(define-public crate-linera-rpc-0.8.0 (c (n "linera-rpc") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "ed25519") (r "^1.5.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "linera-base") (r "^0.8.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.8.0") (d #t) (k 0)) (d (n "linera-core") (r "^0.8.0") (k 0)) (d (n "linera-execution") (r "^0.8.0") (k 0)) (d (n "linera-storage") (r "^0.8.0") (k 0)) (d (n "linera-version") (r "^0.8.0") (d #t) (k 0)) (d (n "linera-views") (r "^0.8.0") (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "test-strategy") (r "^0.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.10") (f (quote ("codec" "net"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (f (quote ("tls" "tls-roots" "transport"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8") (d #t) (k 1)) (d (n "tonic-health") (r "^0.8") (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "0q0bzm49kr2nmmnk5m9lxyp90vz29sjasjnz35z7i0v7q53m7759") (f (quote (("test" "linera-base/test" "linera-chain/test" "linera-core/test" "linera-execution/test" "linera-storage/test"))))))

(define-public crate-linera-rpc-0.9.0 (c (n "linera-rpc") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "linera-base") (r "^0.9.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.9.0") (d #t) (k 0)) (d (n "linera-core") (r "^0.9.0") (k 0)) (d (n "linera-execution") (r "^0.9.0") (k 0)) (d (n "linera-storage") (r "^0.9.0") (k 0)) (d (n "linera-version") (r "^0.9.0") (d #t) (k 0)) (d (n "linera-views") (r "^0.9.0") (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "test-strategy") (r "^0.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.10") (f (quote ("codec" "net"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (f (quote ("tls" "tls-roots" "transport"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8") (d #t) (k 1)) (d (n "tonic-health") (r "^0.8") (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "1jjzipzy0swx7vd7dlip99g662jk0blqy2yki027mdmxdig08ggj") (f (quote (("test" "linera-base/test" "linera-chain/test" "linera-core/test" "linera-execution/test" "linera-storage/test"))))))

(define-public crate-linera-rpc-0.10.0 (c (n "linera-rpc") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "http") (r "^1.1.0") (d #t) (k 0)) (d (n "insta") (r "^1.36.1") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "linera-base") (r "^0.10.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.10.0") (d #t) (k 0)) (d (n "linera-core") (r "^0.10.0") (k 0)) (d (n "linera-execution") (r "^0.10.0") (k 0)) (d (n "linera-storage") (r "^0.10.0") (k 0)) (d (n "linera-version") (r "^0.10.0") (d #t) (k 0)) (d (n "linera-views") (r "^0.10.0") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("codec"))) (o #t) (d #t) (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("prost" "codegen" "transport"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("codegen" "prost"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tonic-build") (r "^0.11") (f (quote ("prost"))) (k 1)) (d (n "tonic-health") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tonic-reflection") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tonic-web-wasm-client") (r "^0.5.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "10nzi9l68hy2l79433fk07ijcq721sivcykxkc6m7jn38cg29bry") (f (quote (("web" "linera-base/web" "linera-chain/web" "linera-core/web" "linera-execution/web" "linera-views/web") ("test" "linera-base/test" "linera-chain/test" "linera-core/test" "linera-execution/test" "linera-storage/test") ("simple-network" "tokio-util/net") ("server" "tonic-health" "tonic-reflection") ("metrics" "prometheus" "linera-base/metrics" "linera-chain/metrics" "linera-core/metrics" "linera-execution/metrics" "linera-storage/metrics" "linera-views/metrics"))))))

(define-public crate-linera-rpc-0.10.1 (c (n "linera-rpc") (v "0.10.1") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "http") (r "^1.1.0") (d #t) (k 0)) (d (n "insta") (r "^1.36.1") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "linera-base") (r "^0.10.1") (d #t) (k 0)) (d (n "linera-chain") (r "^0.10.1") (d #t) (k 0)) (d (n "linera-core") (r "^0.10.1") (k 0)) (d (n "linera-execution") (r "^0.10.1") (k 0)) (d (n "linera-storage") (r "^0.10.1") (k 0)) (d (n "linera-version") (r "^0.10.1") (d #t) (k 0)) (d (n "linera-views") (r "^0.10.1") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("codec"))) (o #t) (d #t) (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("prost" "codegen" "transport"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("codegen" "prost"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tonic-build") (r "^0.11") (f (quote ("prost"))) (k 1)) (d (n "tonic-health") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tonic-reflection") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tonic-web-wasm-client") (r "^0.5.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1rmxy3z2zsbn6jg4y2l6dfchdxciy7m9s1fw4fcmsb0gs28zwibr") (f (quote (("web" "linera-base/web" "linera-chain/web" "linera-core/web" "linera-execution/web" "linera-views/web") ("test" "linera-base/test" "linera-chain/test" "linera-core/test" "linera-execution/test" "linera-storage/test") ("simple-network" "tokio-util/net") ("server" "tonic-health" "tonic-reflection") ("metrics" "prometheus" "linera-base/metrics" "linera-chain/metrics" "linera-core/metrics" "linera-execution/metrics" "linera-storage/metrics" "linera-views/metrics"))))))

(define-public crate-linera-rpc-0.11.0 (c (n "linera-rpc") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "http") (r "^1.1.0") (d #t) (k 0)) (d (n "insta") (r "^1.36.1") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "linera-base") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-core") (r "^0.11.0") (k 0)) (d (n "linera-execution") (r "^0.11.0") (k 0)) (d (n "linera-storage") (r "^0.11.0") (k 0)) (d (n "linera-version") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-views") (r "^0.11.0") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc"))) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("codec"))) (o #t) (d #t) (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("prost" "codegen" "transport"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("codegen" "prost"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tonic-build") (r "^0.11") (f (quote ("prost"))) (k 1)) (d (n "tonic-health") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tonic-reflection") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tonic-web-wasm-client") (r "^0.5.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1kg615sz87rfvv4n9g10k0qhhxs1z7lwadjclsxyb974rz8wz6rm") (f (quote (("web" "linera-base/web" "linera-chain/web" "linera-core/web" "linera-execution/web" "linera-views/web") ("test" "linera-base/test" "linera-chain/test" "linera-core/test" "linera-execution/test" "linera-storage/test") ("simple-network" "tokio-util/net") ("server" "tonic-health" "tonic-reflection") ("metrics" "prometheus" "linera-base/metrics" "linera-chain/metrics" "linera-core/metrics" "linera-execution/metrics" "linera-storage/metrics" "linera-views/metrics"))))))

(define-public crate-linera-rpc-0.10.2 (c (n "linera-rpc") (v "0.10.2") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "http") (r "^1.1.0") (d #t) (k 0)) (d (n "insta") (r "^1.36.1") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "linera-base") (r "^0.10.2") (d #t) (k 0)) (d (n "linera-chain") (r "^0.10.2") (d #t) (k 0)) (d (n "linera-core") (r "^0.10.2") (k 0)) (d (n "linera-execution") (r "^0.10.2") (k 0)) (d (n "linera-storage") (r "^0.10.2") (k 0)) (d (n "linera-version") (r "^0.10.2") (d #t) (k 0)) (d (n "linera-views") (r "^0.10.2") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("codec"))) (o #t) (d #t) (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("prost" "codegen" "transport"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("codegen" "prost"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tonic-build") (r "^0.11") (f (quote ("prost"))) (k 1)) (d (n "tonic-health") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tonic-reflection") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tonic-web-wasm-client") (r "^0.5.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "032772zcshcfgij1z9qv6rrsg6hknaryj0acxl0h2ip3g142cgv1") (f (quote (("web" "linera-base/web" "linera-chain/web" "linera-core/web" "linera-execution/web" "linera-views/web") ("test" "linera-base/test" "linera-chain/test" "linera-core/test" "linera-execution/test" "linera-storage/test") ("simple-network" "tokio-util/net") ("server" "tonic-health" "tonic-reflection") ("metrics" "prometheus" "linera-base/metrics" "linera-chain/metrics" "linera-core/metrics" "linera-execution/metrics" "linera-storage/metrics" "linera-views/metrics"))))))

(define-public crate-linera-rpc-0.10.3 (c (n "linera-rpc") (v "0.10.3") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "http") (r "^1.1.0") (d #t) (k 0)) (d (n "insta") (r "^1.36.1") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "linera-base") (r "^0.10.3") (d #t) (k 0)) (d (n "linera-chain") (r "^0.10.3") (d #t) (k 0)) (d (n "linera-core") (r "^0.10.3") (k 0)) (d (n "linera-execution") (r "^0.10.3") (k 0)) (d (n "linera-storage") (r "^0.10.3") (k 0)) (d (n "linera-version") (r "^0.10.3") (d #t) (k 0)) (d (n "linera-views") (r "^0.10.3") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("codec"))) (o #t) (d #t) (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("prost" "codegen" "transport"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("codegen" "prost"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tonic-build") (r "^0.11") (f (quote ("prost"))) (k 1)) (d (n "tonic-health") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tonic-reflection") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tonic-web-wasm-client") (r "^0.5.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "09ijkxdyn32vxgky66qrjxqf1rjymqald5g0a2xz2bn9wlp2i1qp") (f (quote (("web" "linera-base/web" "linera-chain/web" "linera-core/web" "linera-execution/web" "linera-views/web") ("test" "linera-base/test" "linera-chain/test" "linera-core/test" "linera-execution/test" "linera-storage/test") ("simple-network" "tokio-util/net") ("server" "tonic-health" "tonic-reflection") ("metrics" "prometheus" "linera-base/metrics" "linera-chain/metrics" "linera-core/metrics" "linera-execution/metrics" "linera-storage/metrics" "linera-views/metrics"))))))

(define-public crate-linera-rpc-0.11.1 (c (n "linera-rpc") (v "0.11.1") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "http") (r "^1.1.0") (d #t) (k 0)) (d (n "insta") (r "^1.36.1") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "linera-base") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-core") (r "^0.11.0") (k 0)) (d (n "linera-execution") (r "^0.11.0") (k 0)) (d (n "linera-storage") (r "^0.11.0") (k 0)) (d (n "linera-version") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-views") (r "^0.11.0") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc"))) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("codec"))) (o #t) (d #t) (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("prost" "codegen" "transport"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("codegen" "prost"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tonic-build") (r "^0.11") (f (quote ("prost"))) (k 1)) (d (n "tonic-health") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tonic-reflection") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tonic-web-wasm-client") (r "^0.5.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1khr6va2yd4szl880ixiybwfaimwkbiwpnn581qrp33zl7mc6qmr") (f (quote (("web" "linera-base/web" "linera-chain/web" "linera-core/web" "linera-execution/web" "linera-views/web") ("test" "linera-base/test" "linera-chain/test" "linera-core/test" "linera-execution/test" "linera-storage/test") ("simple-network" "tokio-util/net") ("server" "tonic-health" "tonic-reflection") ("metrics" "prometheus" "linera-base/metrics" "linera-chain/metrics" "linera-core/metrics" "linera-execution/metrics" "linera-storage/metrics" "linera-views/metrics"))))))

(define-public crate-linera-rpc-0.10.4 (c (n "linera-rpc") (v "0.10.4") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "http") (r "^1.1.0") (d #t) (k 0)) (d (n "insta") (r "^1.36.1") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "linera-base") (r "^0.10.4") (d #t) (k 0)) (d (n "linera-chain") (r "^0.10.4") (d #t) (k 0)) (d (n "linera-core") (r "^0.10.4") (k 0)) (d (n "linera-execution") (r "^0.10.4") (k 0)) (d (n "linera-storage") (r "^0.10.4") (k 0)) (d (n "linera-version") (r "^0.10.4") (d #t) (k 0)) (d (n "linera-views") (r "^0.10.4") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("codec"))) (o #t) (d #t) (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("prost" "codegen" "transport"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("codegen" "prost"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tonic-build") (r "^0.11") (f (quote ("prost"))) (k 1)) (d (n "tonic-health") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tonic-reflection") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tonic-web-wasm-client") (r "^0.5.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "04l7xkph7fn3aw3giz1adk0kcr7374x5m7m30k7hazjxwgk75nbg") (f (quote (("web" "linera-base/web" "linera-chain/web" "linera-core/web" "linera-execution/web" "linera-views/web") ("test" "linera-base/test" "linera-chain/test" "linera-core/test" "linera-execution/test" "linera-storage/test") ("simple-network" "tokio-util/net") ("server" "tonic-health" "tonic-reflection") ("metrics" "prometheus" "linera-base/metrics" "linera-chain/metrics" "linera-core/metrics" "linera-execution/metrics" "linera-storage/metrics" "linera-views/metrics"))))))

(define-public crate-linera-rpc-0.11.2 (c (n "linera-rpc") (v "0.11.2") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "http") (r "^1.1.0") (d #t) (k 0)) (d (n "insta") (r "^1.36.1") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "linera-base") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-core") (r "^0.11.0") (k 0)) (d (n "linera-execution") (r "^0.11.0") (k 0)) (d (n "linera-storage") (r "^0.11.0") (k 0)) (d (n "linera-version") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-views") (r "^0.11.0") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc"))) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("codec"))) (o #t) (d #t) (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("prost" "codegen" "transport"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("codegen" "prost"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tonic-build") (r "^0.11") (f (quote ("prost"))) (k 1)) (d (n "tonic-health") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tonic-reflection") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tonic-web-wasm-client") (r "^0.5.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1nifj89h95kwinr4rxkqscmr5hp0zp68xf9immshf3vjr7xic8y1") (f (quote (("web" "linera-base/web" "linera-chain/web" "linera-core/web" "linera-execution/web" "linera-views/web") ("test" "linera-base/test" "linera-chain/test" "linera-core/test" "linera-execution/test" "linera-storage/test") ("simple-network" "tokio-util/net") ("server" "tonic-health" "tonic-reflection") ("metrics" "prometheus" "linera-base/metrics" "linera-chain/metrics" "linera-core/metrics" "linera-execution/metrics" "linera-storage/metrics" "linera-views/metrics"))))))

(define-public crate-linera-rpc-0.11.3 (c (n "linera-rpc") (v "0.11.3") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "http") (r "^1.1.0") (d #t) (k 0)) (d (n "insta") (r "^1.36.1") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "linera-base") (r "^0.11.3") (d #t) (k 0)) (d (n "linera-chain") (r "^0.11.3") (d #t) (k 0)) (d (n "linera-core") (r "^0.11.3") (k 0)) (d (n "linera-execution") (r "^0.11.3") (k 0)) (d (n "linera-storage") (r "^0.11.3") (k 0)) (d (n "linera-version") (r "^0.11.3") (d #t) (k 0)) (d (n "linera-views") (r "^0.11.3") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc"))) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("codec"))) (o #t) (d #t) (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("prost" "codegen" "transport"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("codegen" "prost"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tonic-build") (r "^0.11") (f (quote ("prost"))) (k 1)) (d (n "tonic-health") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tonic-reflection") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tonic-web-wasm-client") (r "^0.5.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "025w7xargpvfxci2my08d2jhcl4cqq0jnhdjjkvj4ywlcjvi62i2") (f (quote (("web" "linera-base/web" "linera-chain/web" "linera-core/web" "linera-execution/web" "linera-views/web") ("test" "linera-base/test" "linera-chain/test" "linera-core/test" "linera-execution/test" "linera-storage/test") ("simple-network" "tokio-util/net") ("server" "tonic-health" "tonic-reflection") ("metrics" "prometheus" "linera-base/metrics" "linera-chain/metrics" "linera-core/metrics" "linera-execution/metrics" "linera-storage/metrics" "linera-views/metrics"))))))

(define-public crate-linera-rpc-0.10.5 (c (n "linera-rpc") (v "0.10.5") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "http") (r "^1.1.0") (d #t) (k 0)) (d (n "insta") (r "^1.36.1") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "linera-base") (r "^0.10.5") (d #t) (k 0)) (d (n "linera-chain") (r "^0.10.5") (d #t) (k 0)) (d (n "linera-core") (r "^0.10.5") (k 0)) (d (n "linera-execution") (r "^0.10.5") (k 0)) (d (n "linera-storage") (r "^0.10.5") (k 0)) (d (n "linera-version") (r "^0.10.5") (d #t) (k 0)) (d (n "linera-views") (r "^0.10.5") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("codec"))) (o #t) (d #t) (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("prost" "codegen" "transport"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("codegen" "prost"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tonic-build") (r "^0.11") (f (quote ("prost"))) (k 1)) (d (n "tonic-health") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tonic-reflection") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tonic-web-wasm-client") (r "^0.5.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1b8y1bb36zb6hbi0vmghy66rwp8j52v4lc6iksm8r5yzccnyj4vs") (f (quote (("web" "linera-base/web" "linera-chain/web" "linera-core/web" "linera-execution/web" "linera-views/web") ("test" "linera-base/test" "linera-chain/test" "linera-core/test" "linera-execution/test" "linera-storage/test") ("simple-network" "tokio-util/net") ("server" "tonic-health" "tonic-reflection") ("metrics" "prometheus" "linera-base/metrics" "linera-chain/metrics" "linera-core/metrics" "linera-execution/metrics" "linera-storage/metrics" "linera-views/metrics"))))))

