(define-module (crates-io li ne linera-core) #:use-module (crates-io))

(define-public crate-linera-core-0.0.1 (c (n "linera-core") (v "0.0.1") (h "0qjgmr4gy1yj7g3sgwiyl2sny6iv046qaqn8qbrna0ghm68m9yfg") (y #t)))

(define-public crate-linera-core-0.1.0 (c (n "linera-core") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-graphql") (r "^5.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "linera-base") (r "^0.1.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.1.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.1.0") (k 0)) (d (n "linera-storage") (r "^0.1.0") (k 0)) (d (n "linera-views") (r "^0.1.0") (d #t) (k 0)) (d (n "lru") (r "^0.9.0") (d #t) (k 0)) (d (n "metrics") (r "^0.20.1") (d #t) (k 2)) (d (n "metrics-util") (r "^0.14.0") (d #t) (k 2)) (d (n "portable-atomic") (r "^0.3.19") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (o #t) (k 0)) (d (n "test-strategy") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "fmt"))) (k 2)))) (h "0h9glfqrph1mdy695irpp9vn4xci38b0vkznlq4nybspr8jddafl") (f (quote (("wasmtime" "linera-execution/wasmtime" "linera-storage/wasmtime") ("wasmer" "linera-execution/wasmer" "linera-storage/wasmer") ("test" "linera-base/test" "linera-chain/test" "linera-execution/test" "linera-storage/test" "linera-views/test" "proptest" "tempfile" "test-log" "test-strategy" "tokio/parking_lot") ("default" "wasmer") ("aws" "linera-views/aws" "linera-storage/aws")))) (y #t)))

(define-public crate-linera-core-0.2.0 (c (n "linera-core") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-graphql") (r "^5.0.7") (d #t) (k 0)) (d (n "async-trait") (r "=0.1.58") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "linera-base") (r "^0.2.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.2.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.2.0") (k 0)) (d (n "linera-storage") (r "^0.2.0") (k 0)) (d (n "linera-views") (r "^0.2.0") (k 0)) (d (n "linera-views") (r "^0.2.0") (k 2)) (d (n "lru") (r "^0.9.0") (d #t) (k 0)) (d (n "metrics") (r "^0.20.1") (d #t) (k 2)) (d (n "metrics-util") (r "^0.14.0") (d #t) (k 2)) (d (n "portable-atomic") (r "^0.3.19") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (o #t) (k 0)) (d (n "test-strategy") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "fmt"))) (k 2)))) (h "1fyvz9qcwiyv10y6ddq6v0gi588gjw0i994rn2z52jqhzjm1rjp1") (f (quote (("wasmtime" "linera-execution/wasmtime" "linera-storage/wasmtime") ("wasmer" "linera-execution/wasmer" "linera-storage/wasmer") ("test" "linera-base/test" "linera-chain/test" "linera-execution/test" "linera-storage/test" "linera-views/test" "proptest" "tempfile" "test-log" "test-strategy" "tokio/parking_lot") ("rocksdb" "linera-views/rocksdb" "linera-storage/rocksdb") ("default" "wasmer" "rocksdb") ("aws" "linera-views/aws" "linera-storage/aws")))) (y #t)))

(define-public crate-linera-core-0.3.0 (c (n "linera-core") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-graphql") (r "^5.0.7") (d #t) (k 0)) (d (n "async-trait") (r "=0.1.58") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "linera-base") (r "^0.3.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.3.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.3.0") (k 0)) (d (n "linera-storage") (r "^0.3.0") (k 0)) (d (n "linera-views") (r "^0.3.0") (k 0)) (d (n "linera-views") (r "^0.3.0") (k 2)) (d (n "lru") (r "^0.9.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (d #t) (k 2)) (d (n "metrics-util") (r "^0.15.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (o #t) (k 0)) (d (n "test-strategy") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "fmt"))) (k 2)))) (h "1y4agkr6h57bl0zsj35321a91aw6idw84g8vlgy2wal0gjlm68wa") (f (quote (("wasmtime" "linera-execution/wasmtime" "linera-storage/wasmtime") ("wasmer" "linera-execution/wasmer" "linera-storage/wasmer") ("test" "linera-base/test" "linera-chain/test" "linera-execution/test" "linera-storage/test" "linera-views/test" "proptest" "tempfile" "test-log" "test-strategy" "tokio/parking_lot") ("rocksdb" "linera-views/rocksdb" "linera-storage/rocksdb") ("default" "wasmer" "rocksdb") ("aws" "linera-views/aws" "linera-storage/aws")))) (y #t)))

(define-public crate-linera-core-0.4.0 (c (n "linera-core") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-graphql") (r "^5.0.7") (d #t) (k 0)) (d (n "async-trait") (r "=0.1.58") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "linera-base") (r "^0.4.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.4.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.4.0") (k 0)) (d (n "linera-storage") (r "^0.4.0") (k 0)) (d (n "linera-views") (r "^0.4.0") (k 0)) (d (n "linera-views") (r "^0.4.0") (k 2)) (d (n "lru") (r "^0.9.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (d #t) (k 2)) (d (n "metrics-util") (r "^0.15.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (o #t) (k 0)) (d (n "test-strategy") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "fmt"))) (k 2)))) (h "1jz1j9i2akr34xrmd75cq4aaq8g110fdqyizbwnrhbkw3n6p4rzc") (f (quote (("wasmtime" "linera-execution/wasmtime" "linera-storage/wasmtime") ("wasmer" "linera-execution/wasmer" "linera-storage/wasmer") ("test" "linera-base/test" "linera-chain/test" "linera-execution/test" "linera-storage/test" "linera-views/test" "proptest" "tempfile" "test-log" "test-strategy" "tokio/parking_lot") ("scylladb" "linera-views/scylladb" "linera-storage/scylladb") ("rocksdb" "linera-views/rocksdb" "linera-storage/rocksdb") ("default" "wasmer" "rocksdb") ("aws" "linera-views/aws" "linera-storage/aws")))) (y #t)))

(define-public crate-linera-core-0.4.1 (c (n "linera-core") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "async-graphql") (r "^5.0.7") (d #t) (k 0)) (d (n "async-trait") (r "=0.1.58") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "linera-base") (r "^0.4.1") (d #t) (k 0)) (d (n "linera-chain") (r "^0.4.1") (d #t) (k 0)) (d (n "linera-execution") (r "^0.4.1") (k 0)) (d (n "linera-storage") (r "^0.4.1") (k 0)) (d (n "linera-views") (r "^0.4.1") (k 0)) (d (n "linera-views") (r "^0.4.1") (k 2)) (d (n "lru") (r "^0.9.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (d #t) (k 2)) (d (n "metrics-util") (r "^0.15.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (o #t) (k 0)) (d (n "test-strategy") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "fmt"))) (k 2)))) (h "1dhbpa1d5c0myp1bk5j747cfb7w5afy0rvg15fchx2xs7zbqlkry") (f (quote (("wasmtime" "linera-execution/wasmtime" "linera-storage/wasmtime") ("wasmer" "linera-execution/wasmer" "linera-storage/wasmer") ("test" "anyhow" "linera-base/test" "linera-chain/test" "linera-execution/test" "linera-storage/test" "linera-views/test" "proptest" "tempfile" "test-log" "test-strategy" "tokio/parking_lot") ("scylladb" "linera-views/scylladb" "linera-storage/scylladb") ("rocksdb" "linera-views/rocksdb" "linera-storage/rocksdb") ("default" "wasmer" "rocksdb") ("aws" "linera-views/aws" "linera-storage/aws"))))))

(define-public crate-linera-core-0.5.0 (c (n "linera-core") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "async-graphql") (r "^5.0.7") (d #t) (k 0)) (d (n "async-trait") (r "=0.1.58") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "linera-base") (r "^0.5.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.5.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.5.0") (k 0)) (d (n "linera-storage") (r "^0.5.0") (k 0)) (d (n "linera-views") (r "^0.5.0") (k 0)) (d (n "linera-views") (r "^0.5.0") (k 2)) (d (n "lru") (r "^0.9.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (o #t) (k 0)) (d (n "test-strategy") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "fmt"))) (k 2)))) (h "03iz00nd5w4g2lrzn3j8a5qdhg2n1jswr4chisfyyzf1c7jmwf8v") (f (quote (("wasmtime" "linera-execution/wasmtime" "linera-storage/wasmtime") ("wasmer" "linera-execution/wasmer" "linera-storage/wasmer") ("test" "anyhow" "linera-base/test" "linera-chain/test" "linera-execution/test" "linera-storage/test" "linera-views/test" "proptest" "tempfile" "test-log" "test-strategy" "tokio/parking_lot") ("scylladb" "linera-views/scylladb" "linera-storage/scylladb") ("rocksdb" "linera-views/rocksdb" "linera-storage/rocksdb") ("default" "wasmer" "rocksdb") ("aws" "linera-views/aws" "linera-storage/aws"))))))

(define-public crate-linera-core-0.6.0 (c (n "linera-core") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.75") (o #t) (d #t) (k 0)) (d (n "async-graphql") (r "^5.0.10") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "linera-base") (r "^0.6.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.6.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.6.0") (k 0)) (d (n "linera-storage") (r "^0.6.0") (k 0)) (d (n "linera-views") (r "^0.6.0") (k 0)) (d (n "linera-views") (r "^0.6.0") (k 2)) (d (n "lru") (r "^0.9.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "tempfile") (r "^3.8.1") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (o #t) (k 0)) (d (n "test-strategy") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)))) (h "1gh3rbpdclcghzfjlcsmgvzkv7f3qnzbb9q0mcqpks79y929zhkf") (f (quote (("wasmtime" "linera-execution/wasmtime" "linera-storage/wasmtime") ("wasmer" "linera-execution/wasmer" "linera-storage/wasmer") ("test" "anyhow" "linera-base/test" "linera-chain/test" "linera-execution/test" "linera-storage/test" "linera-views/test" "proptest" "tempfile" "test-log" "test-strategy" "tokio/parking_lot") ("scylladb" "linera-views/scylladb" "linera-storage/scylladb") ("rocksdb" "linera-views/rocksdb" "linera-storage/rocksdb") ("default" "wasmer" "rocksdb") ("aws" "linera-views/aws" "linera-storage/aws"))))))

(define-public crate-linera-core-0.7.1 (c (n "linera-core") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0.75") (o #t) (d #t) (k 0)) (d (n "async-graphql") (r "^5.0.10") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "linera-base") (r "^0.7.1") (d #t) (k 0)) (d (n "linera-chain") (r "^0.7.1") (d #t) (k 0)) (d (n "linera-execution") (r "^0.7.1") (k 0)) (d (n "linera-storage") (r "^0.7.1") (k 0)) (d (n "linera-views") (r "^0.7.1") (k 0)) (d (n "linera-views") (r "^0.7.1") (k 2)) (d (n "lru") (r "^0.9.0") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "tempfile") (r "^3.8.1") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (o #t) (k 0)) (d (n "test-strategy") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "tonic") (r "^0.8") (f (quote ("tls" "tls-roots" "transport"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)))) (h "19c9fbjavskqs0klfih0yszzmwwpv5fs7wf7hrjidb0mch18g8nm") (f (quote (("wasmtime" "linera-execution/wasmtime" "linera-storage/wasmtime") ("wasmer" "linera-execution/wasmer" "linera-storage/wasmer") ("test" "anyhow" "linera-base/test" "linera-chain/test" "linera-execution/test" "linera-storage/test" "linera-views/test" "proptest" "tempfile" "test-log" "test-strategy" "tokio/parking_lot") ("scylladb" "linera-views/scylladb" "linera-storage/scylladb") ("rocksdb" "linera-views/rocksdb" "linera-storage/rocksdb") ("default" "wasmer" "rocksdb") ("aws" "linera-views/aws" "linera-storage/aws"))))))

(define-public crate-linera-core-0.8.0 (c (n "linera-core") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.75") (o #t) (d #t) (k 0)) (d (n "async-graphql") (r "^5.0.10") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "linera-base") (r "^0.8.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.8.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.8.0") (k 0)) (d (n "linera-storage") (r "^0.8.0") (k 0)) (d (n "linera-version") (r "^0.8.0") (d #t) (k 0)) (d (n "linera-views") (r "^0.8.0") (k 0)) (d (n "linera-views") (r "^0.8.0") (k 2)) (d (n "lru") (r "^0.9.0") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "tempfile") (r "^3.8.1") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (o #t) (k 0)) (d (n "test-strategy") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "tonic") (r "^0.8") (f (quote ("tls" "tls-roots" "transport"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)))) (h "1zzv2wvx8w6jg1j9amrda62rzxpfz326vg7wscf4sy90nsm9144m") (f (quote (("wasmtime" "linera-execution/wasmtime" "linera-storage/wasmtime") ("wasmer" "linera-execution/wasmer" "linera-storage/wasmer") ("test" "anyhow" "linera-base/test" "linera-chain/test" "linera-execution/test" "linera-storage/test" "linera-views/test" "proptest" "tempfile" "test-log" "test-strategy" "tokio/parking_lot") ("scylladb" "linera-views/scylladb" "linera-storage/scylladb") ("rocksdb" "linera-views/rocksdb" "linera-storage/rocksdb") ("default" "wasmer" "rocksdb") ("aws" "linera-views/aws" "linera-storage/aws"))))))

(define-public crate-linera-core-0.9.0 (c (n "linera-core") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.75") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-graphql") (r "^5.0.10") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "linera-base") (r "^0.9.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.9.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.9.0") (k 0)) (d (n "linera-storage") (r "^0.9.0") (k 0)) (d (n "linera-version") (r "^0.9.0") (d #t) (k 0)) (d (n "linera-views") (r "^0.9.0") (k 0)) (d (n "linera-views") (r "^0.9.0") (k 2)) (d (n "lru") (r "^0.9.0") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "tempfile") (r "^3.8.1") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (o #t) (k 0)) (d (n "test-strategy") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "tonic") (r "^0.8") (f (quote ("tls" "tls-roots" "transport"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)))) (h "145a5pnrar3f0jpgzpj6shn3dggd2fcigs7kmfgxzajklnlbb2xp") (f (quote (("wasmtime" "linera-execution/wasmtime" "linera-storage/wasmtime") ("wasmer" "linera-execution/wasmer" "linera-storage/wasmer") ("test" "anyhow" "linera-base/test" "linera-chain/test" "linera-execution/test" "linera-storage/test" "linera-views/test" "proptest" "tempfile" "test-log" "test-strategy" "tokio/parking_lot") ("scylladb" "linera-views/scylladb" "linera-storage/scylladb") ("rocksdb" "linera-views/rocksdb" "linera-storage/rocksdb") ("default" "wasmer" "rocksdb") ("aws" "linera-views/aws" "linera-storage/aws"))))))

(define-public crate-linera-core-0.10.0 (c (n "linera-core") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-graphql") (r "^7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "linera-base") (r "^0.10.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.10.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.10.0") (k 0)) (d (n "linera-storage") (r "^0.10.0") (k 0)) (d (n "linera-storage-service") (r "^0.10.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "linera-version") (r "^0.10.0") (d #t) (k 0)) (d (n "linera-views") (r "^0.10.0") (k 0)) (d (n "linera-views") (r "^0.10.0") (k 2)) (d (n "lru") (r "^0.12.3") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.15") (f (quote ("trace"))) (o #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "tonic") (r "^0.11") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "trait-variant") (r "^0.1.1") (d #t) (k 0)))) (h "1xb9lqnmk2az15qrsqxfv4b450l08kim0w7xnk4gfwkzji0hqv19") (f (quote (("web" "linera-base/web" "linera-chain/web" "linera-execution/web" "linera-storage/web" "linera-views/web") ("wasmtime" "linera-execution/wasmtime" "linera-storage/wasmtime") ("wasmer" "linera-execution/wasmer" "linera-storage/wasmer") ("test" "anyhow" "linera-base/test" "linera-chain/test" "linera-execution/test" "linera-storage/test" "linera-views/test" "proptest" "tempfile" "test-log" "test-strategy" "tokio/parking_lot") ("scylladb" "linera-views/scylladb" "linera-storage/scylladb") ("rocksdb" "linera-views/rocksdb" "linera-storage/rocksdb") ("metrics" "prometheus" "linera-base/metrics" "linera-chain/metrics" "linera-execution/metrics" "linera-storage/metrics" "linera-views/metrics") ("aws" "linera-views/dynamodb" "linera-storage/dynamodb"))))))

(define-public crate-linera-core-0.10.1 (c (n "linera-core") (v "0.10.1") (d (list (d (n "anyhow") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-graphql") (r "^7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "linera-base") (r "^0.10.1") (d #t) (k 0)) (d (n "linera-chain") (r "^0.10.1") (d #t) (k 0)) (d (n "linera-execution") (r "^0.10.1") (k 0)) (d (n "linera-storage") (r "^0.10.1") (k 0)) (d (n "linera-storage-service") (r "^0.10.1") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "linera-version") (r "^0.10.1") (d #t) (k 0)) (d (n "linera-views") (r "^0.10.1") (k 0)) (d (n "linera-views") (r "^0.10.1") (k 2)) (d (n "lru") (r "^0.12.3") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.15") (f (quote ("trace"))) (o #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "tonic") (r "^0.11") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "trait-variant") (r "^0.1.1") (d #t) (k 0)))) (h "0nlg1yc66f294bkfbfrkys2aw2mambd43rz1hs6xvpnzmkk6kcjq") (f (quote (("web" "linera-base/web" "linera-chain/web" "linera-execution/web" "linera-storage/web" "linera-views/web") ("wasmtime" "linera-execution/wasmtime" "linera-storage/wasmtime") ("wasmer" "linera-execution/wasmer" "linera-storage/wasmer") ("test" "anyhow" "linera-base/test" "linera-chain/test" "linera-execution/test" "linera-storage/test" "linera-views/test" "proptest" "tempfile" "test-log" "test-strategy" "tokio/parking_lot") ("scylladb" "linera-views/scylladb" "linera-storage/scylladb") ("rocksdb" "linera-views/rocksdb" "linera-storage/rocksdb") ("metrics" "prometheus" "linera-base/metrics" "linera-chain/metrics" "linera-execution/metrics" "linera-storage/metrics" "linera-views/metrics") ("aws" "linera-views/dynamodb" "linera-storage/dynamodb"))))))

(define-public crate-linera-core-0.11.0 (c (n "linera-core") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-graphql") (r "^7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "linera-base") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.11.0") (k 0)) (d (n "linera-storage") (r "^0.11.0") (k 0)) (d (n "linera-storage-service") (r "^0.11.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "linera-version") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-views") (r "^0.11.0") (k 0)) (d (n "linera-views") (r "^0.11.0") (k 2)) (d (n "lru") (r "^0.12.3") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.15") (f (quote ("trace"))) (o #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "tonic") (r "^0.11") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "trait-variant") (r "^0.1.1") (d #t) (k 0)) (d (n "wasmtimer") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "1c3s69kzv8wjg45fzw4l5ycq0zd389155dsjwbjxhni2yaqxaa0n") (f (quote (("web" "linera-base/web" "linera-chain/web" "linera-execution/web" "linera-storage/web" "linera-views/web" "wasmtimer") ("wasmtime" "linera-execution/wasmtime" "linera-storage/wasmtime") ("wasmer" "linera-execution/wasmer" "linera-storage/wasmer") ("test" "anyhow" "linera-base/test" "linera-chain/test" "linera-execution/test" "linera-storage/test" "linera-views/test" "proptest" "tempfile" "test-log" "test-strategy" "tokio/parking_lot") ("scylladb" "linera-views/scylladb" "linera-storage/scylladb") ("rocksdb" "linera-views/rocksdb" "linera-storage/rocksdb") ("metrics" "prometheus" "linera-base/metrics" "linera-chain/metrics" "linera-execution/metrics" "linera-storage/metrics" "linera-views/metrics") ("dynamodb" "linera-views/dynamodb" "linera-storage/dynamodb"))))))

(define-public crate-linera-core-0.10.2 (c (n "linera-core") (v "0.10.2") (d (list (d (n "anyhow") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "linera-base") (r "^0.10.2") (d #t) (k 0)) (d (n "linera-chain") (r "^0.10.2") (d #t) (k 0)) (d (n "linera-execution") (r "^0.10.2") (k 0)) (d (n "linera-storage") (r "^0.10.2") (k 0)) (d (n "linera-storage-service") (r "^0.10.2") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "linera-version") (r "^0.10.2") (d #t) (k 0)) (d (n "linera-views") (r "^0.10.2") (k 0)) (d (n "linera-views") (r "^0.10.2") (k 2)) (d (n "lru") (r "^0.12.3") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.15") (f (quote ("trace"))) (o #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "tonic") (r "^0.11") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "trait-variant") (r "^0.1.1") (d #t) (k 0)))) (h "0r4pkp43g71905risz83igyrf3jxz804iikpaxj17mjjb4kbs5ia") (f (quote (("web" "linera-base/web" "linera-chain/web" "linera-execution/web" "linera-storage/web" "linera-views/web") ("wasmtime" "linera-execution/wasmtime" "linera-storage/wasmtime") ("wasmer" "linera-execution/wasmer" "linera-storage/wasmer") ("test" "anyhow" "linera-base/test" "linera-chain/test" "linera-execution/test" "linera-storage/test" "linera-views/test" "proptest" "tempfile" "test-log" "test-strategy" "tokio/parking_lot") ("scylladb" "linera-views/scylladb" "linera-storage/scylladb") ("rocksdb" "linera-views/rocksdb" "linera-storage/rocksdb") ("metrics" "prometheus" "linera-base/metrics" "linera-chain/metrics" "linera-execution/metrics" "linera-storage/metrics" "linera-views/metrics") ("aws" "linera-views/dynamodb" "linera-storage/dynamodb"))))))

(define-public crate-linera-core-0.10.3 (c (n "linera-core") (v "0.10.3") (d (list (d (n "anyhow") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "linera-base") (r "^0.10.3") (d #t) (k 0)) (d (n "linera-chain") (r "^0.10.3") (d #t) (k 0)) (d (n "linera-execution") (r "^0.10.3") (k 0)) (d (n "linera-storage") (r "^0.10.3") (k 0)) (d (n "linera-storage-service") (r "^0.10.3") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "linera-version") (r "^0.10.3") (d #t) (k 0)) (d (n "linera-views") (r "^0.10.3") (k 0)) (d (n "linera-views") (r "^0.10.3") (k 2)) (d (n "lru") (r "^0.12.3") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.15") (f (quote ("trace"))) (o #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "tonic") (r "^0.11") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "trait-variant") (r "^0.1.1") (d #t) (k 0)))) (h "1qfnz1vjw0bb1hxyq4maijdws03brpfh9vi8kqb0an6h3vvhxwnk") (f (quote (("web" "linera-base/web" "linera-chain/web" "linera-execution/web" "linera-storage/web" "linera-views/web") ("wasmtime" "linera-execution/wasmtime" "linera-storage/wasmtime") ("wasmer" "linera-execution/wasmer" "linera-storage/wasmer") ("test" "anyhow" "linera-base/test" "linera-chain/test" "linera-execution/test" "linera-storage/test" "linera-views/test" "proptest" "tempfile" "test-log" "test-strategy" "tokio/parking_lot") ("scylladb" "linera-views/scylladb" "linera-storage/scylladb") ("rocksdb" "linera-views/rocksdb" "linera-storage/rocksdb") ("metrics" "prometheus" "linera-base/metrics" "linera-chain/metrics" "linera-execution/metrics" "linera-storage/metrics" "linera-views/metrics") ("aws" "linera-views/dynamodb" "linera-storage/dynamodb"))))))

(define-public crate-linera-core-0.11.1 (c (n "linera-core") (v "0.11.1") (d (list (d (n "anyhow") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "linera-base") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.11.0") (k 0)) (d (n "linera-storage") (r "^0.11.0") (k 0)) (d (n "linera-storage-service") (r "^0.11.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "linera-version") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-views") (r "^0.11.0") (k 0)) (d (n "linera-views") (r "^0.11.0") (k 2)) (d (n "lru") (r "^0.12.3") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.15") (f (quote ("trace"))) (o #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "tonic") (r "^0.11") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "trait-variant") (r "^0.1.1") (d #t) (k 0)) (d (n "wasmtimer") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "1ksh1wwpgmwzqhm59lfjhchi16v0fl7w7201rbzj5775pkc7c74b") (f (quote (("web" "linera-base/web" "linera-chain/web" "linera-execution/web" "linera-storage/web" "linera-views/web" "wasmtimer") ("wasmtime" "linera-execution/wasmtime" "linera-storage/wasmtime") ("wasmer" "linera-execution/wasmer" "linera-storage/wasmer") ("test" "anyhow" "linera-base/test" "linera-chain/test" "linera-execution/test" "linera-storage/test" "linera-views/test" "proptest" "tempfile" "test-log" "test-strategy" "tokio/parking_lot") ("scylladb" "linera-views/scylladb" "linera-storage/scylladb") ("rocksdb" "linera-views/rocksdb" "linera-storage/rocksdb") ("metrics" "prometheus" "linera-base/metrics" "linera-chain/metrics" "linera-execution/metrics" "linera-storage/metrics" "linera-views/metrics") ("dynamodb" "linera-views/dynamodb" "linera-storage/dynamodb"))))))

(define-public crate-linera-core-0.10.4 (c (n "linera-core") (v "0.10.4") (d (list (d (n "anyhow") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "linera-base") (r "^0.10.4") (d #t) (k 0)) (d (n "linera-chain") (r "^0.10.4") (d #t) (k 0)) (d (n "linera-execution") (r "^0.10.4") (k 0)) (d (n "linera-storage") (r "^0.10.4") (k 0)) (d (n "linera-storage-service") (r "^0.10.4") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "linera-version") (r "^0.10.4") (d #t) (k 0)) (d (n "linera-views") (r "^0.10.4") (k 0)) (d (n "linera-views") (r "^0.10.4") (k 2)) (d (n "lru") (r "^0.12.3") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.15") (f (quote ("trace"))) (o #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "tonic") (r "^0.11") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "trait-variant") (r "^0.1.1") (d #t) (k 0)))) (h "0bz6243x0gdzb7y7wwhijxhascycaralkfhybbc8hqarbdcn4b7q") (f (quote (("web" "linera-base/web" "linera-chain/web" "linera-execution/web" "linera-storage/web" "linera-views/web") ("wasmtime" "linera-execution/wasmtime" "linera-storage/wasmtime") ("wasmer" "linera-execution/wasmer" "linera-storage/wasmer") ("test" "anyhow" "linera-base/test" "linera-chain/test" "linera-execution/test" "linera-storage/test" "linera-views/test" "proptest" "tempfile" "test-log" "test-strategy" "tokio/parking_lot") ("scylladb" "linera-views/scylladb" "linera-storage/scylladb") ("rocksdb" "linera-views/rocksdb" "linera-storage/rocksdb") ("metrics" "prometheus" "linera-base/metrics" "linera-chain/metrics" "linera-execution/metrics" "linera-storage/metrics" "linera-views/metrics") ("aws" "linera-views/dynamodb" "linera-storage/dynamodb"))))))

(define-public crate-linera-core-0.11.2 (c (n "linera-core") (v "0.11.2") (d (list (d (n "anyhow") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "linera-base") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.11.0") (k 0)) (d (n "linera-storage") (r "^0.11.0") (k 0)) (d (n "linera-storage-service") (r "^0.11.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "linera-version") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-views") (r "^0.11.0") (k 0)) (d (n "linera-views") (r "^0.11.0") (k 2)) (d (n "lru") (r "^0.12.3") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.15") (f (quote ("trace"))) (o #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "tonic") (r "^0.11") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "trait-variant") (r "^0.1.1") (d #t) (k 0)) (d (n "wasmtimer") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "0afdi4qnyzy9sgczm4yfsfkjfkh4myy3qmi9vj4i4nwvj7slbc60") (f (quote (("web" "linera-base/web" "linera-chain/web" "linera-execution/web" "linera-storage/web" "linera-views/web" "wasmtimer") ("wasmtime" "linera-execution/wasmtime" "linera-storage/wasmtime") ("wasmer" "linera-execution/wasmer" "linera-storage/wasmer") ("test" "anyhow" "linera-base/test" "linera-chain/test" "linera-execution/test" "linera-storage/test" "linera-views/test" "proptest" "tempfile" "test-log" "test-strategy" "tokio/parking_lot") ("scylladb" "linera-views/scylladb" "linera-storage/scylladb") ("rocksdb" "linera-views/rocksdb" "linera-storage/rocksdb") ("metrics" "prometheus" "linera-base/metrics" "linera-chain/metrics" "linera-execution/metrics" "linera-storage/metrics" "linera-views/metrics") ("dynamodb" "linera-views/dynamodb" "linera-storage/dynamodb"))))))

(define-public crate-linera-core-0.11.3 (c (n "linera-core") (v "0.11.3") (d (list (d (n "anyhow") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "linera-base") (r "^0.11.3") (d #t) (k 0)) (d (n "linera-chain") (r "^0.11.3") (d #t) (k 0)) (d (n "linera-execution") (r "^0.11.3") (k 0)) (d (n "linera-storage") (r "^0.11.3") (k 0)) (d (n "linera-storage-service") (r "^0.11.3") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "linera-version") (r "^0.11.3") (d #t) (k 0)) (d (n "linera-views") (r "^0.11.3") (k 0)) (d (n "linera-views") (r "^0.11.3") (k 2)) (d (n "lru") (r "^0.12.3") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.15") (f (quote ("trace"))) (o #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "tonic") (r "^0.11") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "trait-variant") (r "^0.1.1") (d #t) (k 0)) (d (n "wasmtimer") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "1cj9c4i5gbiryssyfmg7gprjp9h7hdvn8cm9kf2553m2x266qyaj") (f (quote (("web" "linera-base/web" "linera-chain/web" "linera-execution/web" "linera-storage/web" "linera-views/web" "wasmtimer") ("wasmtime" "linera-execution/wasmtime" "linera-storage/wasmtime") ("wasmer" "linera-execution/wasmer" "linera-storage/wasmer") ("test" "anyhow" "linera-base/test" "linera-chain/test" "linera-execution/test" "linera-storage/test" "linera-views/test" "proptest" "tempfile" "test-log" "test-strategy" "tokio/parking_lot") ("scylladb" "linera-views/scylladb" "linera-storage/scylladb") ("rocksdb" "linera-views/rocksdb" "linera-storage/rocksdb") ("metrics" "prometheus" "linera-base/metrics" "linera-chain/metrics" "linera-execution/metrics" "linera-storage/metrics" "linera-views/metrics") ("dynamodb" "linera-views/dynamodb" "linera-storage/dynamodb"))))))

(define-public crate-linera-core-0.10.5 (c (n "linera-core") (v "0.10.5") (d (list (d (n "anyhow") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "linera-base") (r "^0.10.5") (d #t) (k 0)) (d (n "linera-chain") (r "^0.10.5") (d #t) (k 0)) (d (n "linera-execution") (r "^0.10.5") (k 0)) (d (n "linera-storage") (r "^0.10.5") (k 0)) (d (n "linera-storage-service") (r "^0.10.5") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "linera-version") (r "^0.10.5") (d #t) (k 0)) (d (n "linera-views") (r "^0.10.5") (k 0)) (d (n "linera-views") (r "^0.10.5") (k 2)) (d (n "lru") (r "^0.12.3") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.15") (f (quote ("trace"))) (o #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "tonic") (r "^0.11") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "trait-variant") (r "^0.1.1") (d #t) (k 0)))) (h "1lfmsm04b654iccf98vkw8lbf6gsqi7v6qzjqg24apf0rnma82r0") (f (quote (("web" "linera-base/web" "linera-chain/web" "linera-execution/web" "linera-storage/web" "linera-views/web") ("wasmtime" "linera-execution/wasmtime" "linera-storage/wasmtime") ("wasmer" "linera-execution/wasmer" "linera-storage/wasmer") ("test" "anyhow" "linera-base/test" "linera-chain/test" "linera-execution/test" "linera-storage/test" "linera-views/test" "proptest" "tempfile" "test-log" "test-strategy" "tokio/parking_lot") ("scylladb" "linera-views/scylladb" "linera-storage/scylladb") ("rocksdb" "linera-views/rocksdb" "linera-storage/rocksdb") ("metrics" "prometheus" "linera-base/metrics" "linera-chain/metrics" "linera-execution/metrics" "linera-storage/metrics" "linera-views/metrics") ("aws" "linera-views/dynamodb" "linera-storage/dynamodb"))))))

