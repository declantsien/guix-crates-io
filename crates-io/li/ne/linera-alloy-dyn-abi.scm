(define-module (crates-io li ne linera-alloy-dyn-abi) #:use-module (crates-io))

(define-public crate-linera-alloy-dyn-abi-0.7.4 (c (n "linera-alloy-dyn-abi") (v "0.7.4") (d (list (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "ethabi") (r "^18") (d #t) (k 2)) (d (n "hex") (r "^1.10") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "linera-alloy-json-abi") (r "^0.7.4") (k 0)) (d (n "linera-alloy-primitives") (r "^0.7.4") (k 0)) (d (n "linera-alloy-sol-type-parser") (r "^0.7.4") (k 0)) (d (n "linera-alloy-sol-types") (r "^0.7.4") (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "winnow") (r "^0.6") (f (quote ("alloc"))) (k 0)))) (h "1p5cdfnf1b5kiq0iqcc26abkgrkpnvc7fnjfw23kjg9f8j4v3dxk") (f (quote (("default" "std") ("debug" "std" "linera-alloy-sol-type-parser/debug")))) (s 2) (e (quote (("std" "linera-alloy-json-abi/std" "linera-alloy-sol-types/std" "linera-alloy-sol-type-parser/std" "linera-alloy-primitives/std" "hex/std" "serde?/std" "serde_json?/std") ("eip712" "linera-alloy-sol-types/eip712-serde" "dep:derive_more" "dep:serde" "dep:serde_json") ("arbitrary" "std" "linera-alloy-sol-types/arbitrary" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest")))) (r "1.65")))

