(define-module (crates-io li ne linera-alloy-signer-wallet) #:use-module (crates-io))

(define-public crate-linera-alloy-signer-wallet-0.1.0 (c (n "linera-alloy-signer-wallet") (v "0.1.0") (d (list (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "coins-bip32") (r "^0.8.7") (o #t) (k 0)) (d (n "coins-bip39") (r "^0.8.7") (f (quote ("english"))) (o #t) (k 0)) (d (n "elliptic-curve") (r "^0.13") (o #t) (k 0)) (d (n "eth-keystore") (r "^0.5.0") (o #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (k 0)) (d (n "linera-alloy-consensus") (r "^0.1.0") (f (quote ("std"))) (k 0)) (d (n "linera-alloy-consensus") (r "^0.1.0") (f (quote ("std"))) (k 2)) (d (n "linera-alloy-dyn-abi") (r "^0.7.4") (k 2)) (d (n "linera-alloy-network") (r "^0.1.0") (k 0)) (d (n "linera-alloy-network") (r "^0.1.0") (k 2)) (d (n "linera-alloy-primitives") (r "^0.7.4") (k 0)) (d (n "linera-alloy-signer") (r "^0.1.0") (k 0)) (d (n "linera-alloy-sol-types") (r "^0.7.4") (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tempfile") (r "^3.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "yubihsm") (r "^0.42") (f (quote ("secp256k1" "http" "usb"))) (o #t) (d #t) (k 0)) (d (n "yubihsm") (r "^0.42") (f (quote ("mockhsm"))) (d #t) (k 2)))) (h "0hv106y4m34x83ckrjm2rp42bv3xdn69nria2mwl6cdb7q5j55n6") (f (quote (("eip712" "linera-alloy-signer/eip712")))) (s 2) (e (quote (("yubihsm" "dep:yubihsm" "dep:elliptic-curve") ("mnemonic-all-languages" "mnemonic" "coins-bip39?/all-langs") ("mnemonic" "dep:coins-bip32" "dep:coins-bip39") ("keystore" "dep:eth-keystore" "dep:elliptic-curve")))) (r "1.76")))

