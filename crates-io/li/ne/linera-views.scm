(define-module (crates-io li ne linera-views) #:use-module (crates-io))

(define-public crate-linera-views-0.0.1 (c (n "linera-views") (v "0.0.1") (h "0f76vlm0xdlznv7cjc6mhb8h8s5bcda92l4am9qdcs565b1iwls4") (y #t)))

(define-public crate-linera-views-0.1.0 (c (n "linera-views") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.57") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.6.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "aws-config") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-sdk-dynamodb") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-sdk-s3") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-smithy-http") (r "^0.44.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-types") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "linera-base") (r "^0.1.0") (d #t) (k 0)) (d (n "linera-views-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "metrics") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rocksdb") (r "^0.19.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt" "sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1v77cgywznn43gfgkcyy6hzjbn9p1739kfh8xakq4abqw5mkdb6n") (f (quote (("test" "anyhow" "tokio/macros" "tokio/parking_lot") ("db_timings") ("aws" "aws-config" "aws-sdk-dynamodb" "aws-sdk-s3" "aws-smithy-http" "aws-types")))) (y #t) (s 2) (e (quote (("metrics" "dep:hex" "dep:metrics"))))))

(define-public crate-linera-views-0.2.0 (c (n "linera-views") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.57") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.6.0") (d #t) (k 0)) (d (n "async-trait") (r "=0.1.58") (d #t) (k 0)) (d (n "aws-config") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-sdk-dynamodb") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-sdk-s3") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-smithy-http") (r "^0.44.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-types") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "linera-base") (r "^0.2.0") (d #t) (k 0)) (d (n "linera-views-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "metrics") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rocksdb") (r "^0.19.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt" "sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0acjiwv3j8l0q520l3nyxh4z5d5vjvgv227yd55ppdln6fpv2wv9") (f (quote (("test" "anyhow" "tokio/macros" "tokio/parking_lot") ("db_timings") ("aws" "aws-config" "aws-sdk-dynamodb" "aws-sdk-s3" "aws-smithy-http" "aws-types")))) (y #t) (s 2) (e (quote (("metrics" "dep:hex" "dep:metrics"))))))

(define-public crate-linera-views-0.3.0 (c (n "linera-views") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.57") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.6.0") (d #t) (k 0)) (d (n "async-trait") (r "=0.1.58") (d #t) (k 0)) (d (n "aws-config") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-sdk-dynamodb") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-sdk-s3") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-smithy-http") (r "^0.44.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-types") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "linera-base") (r "^0.3.0") (d #t) (k 0)) (d (n "linera-views-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rocksdb") (r "^0.19.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt" "sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0jks88idbzjfypbwn0wisv3kp6yiz3ddszmfv8vc6gvaawnrg1nx") (f (quote (("test" "anyhow" "tokio/macros" "tokio/parking_lot") ("db_timings") ("aws" "aws-config" "aws-sdk-dynamodb" "aws-sdk-s3" "aws-smithy-http" "aws-types")))) (y #t) (s 2) (e (quote (("metrics" "dep:hex" "dep:metrics"))))))

(define-public crate-linera-views-0.4.0 (c (n "linera-views") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.6.0") (d #t) (k 0)) (d (n "async-trait") (r "=0.1.58") (d #t) (k 0)) (d (n "aws-config") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-sdk-dynamodb") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-sdk-s3") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-smithy-http") (r "^0.44.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-types") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "linera-base") (r "^0.4.0") (d #t) (k 0)) (d (n "linera-views-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rocksdb") (r "^0.19.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scylla") (r "^0.8.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt" "sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "03njzqx7bpi24xcg8yyr4kx8nxx3j43c5n797svqf8h871xfymvz") (f (quote (("test" "anyhow" "tokio/macros" "tokio/parking_lot") ("scylladb" "scylla") ("db_timings") ("aws" "aws-config" "aws-sdk-dynamodb" "aws-sdk-s3" "aws-smithy-http" "aws-types")))) (y #t) (s 2) (e (quote (("metrics" "dep:hex" "dep:metrics"))))))

(define-public crate-linera-views-0.4.1 (c (n "linera-views") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.6.0") (d #t) (k 0)) (d (n "async-trait") (r "=0.1.58") (d #t) (k 0)) (d (n "aws-config") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-sdk-dynamodb") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-sdk-s3") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-smithy-http") (r "^0.44.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-types") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "linera-base") (r "^0.4.1") (d #t) (k 0)) (d (n "linera-views-derive") (r "^0.4.1") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rocksdb") (r "^0.19.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scylla") (r "^0.8.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt" "sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1lkd0m9qnyfblfalg7m3llx2dwkmmr39l1gry3shfz1fdd9sjdil") (f (quote (("test" "anyhow" "tokio/macros" "tokio/parking_lot") ("scylladb" "scylla") ("db_timings") ("aws" "aws-config" "aws-sdk-dynamodb" "aws-sdk-s3" "aws-smithy-http" "aws-types")))) (s 2) (e (quote (("metrics" "dep:hex" "dep:metrics"))))))

(define-public crate-linera-views-0.5.0 (c (n "linera-views") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.8.0") (d #t) (k 0)) (d (n "async-trait") (r "=0.1.58") (d #t) (k 0)) (d (n "aws-config") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-sdk-dynamodb") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-sdk-s3") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-smithy-http") (r "^0.44.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-types") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "linera-base") (r "^0.5.0") (d #t) (k 0)) (d (n "linera-views-derive") (r "^0.5.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scylla") (r "^0.8.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt" "sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1xcyh9gryglaklm1ki9n0pigcg8s9h9rkkchw83cvxllnpw46m12") (f (quote (("test" "anyhow" "tokio/macros" "tokio/parking_lot") ("scylladb" "scylla") ("db_timings") ("aws" "aws-config" "aws-sdk-dynamodb" "aws-sdk-s3" "aws-smithy-http" "aws-types")))) (s 2) (e (quote (("metrics" "dep:hex"))))))

(define-public crate-linera-views-0.6.0 (c (n "linera-views") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.8.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "aws-config") (r "^0.57.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-sdk-dynamodb") (r "^0.35.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-sdk-s3") (r "^0.35.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-smithy-http") (r "^0.57.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-smithy-types") (r "^0.57.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-types") (r "^0.57.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "linera-base") (r "^0.6.0") (d #t) (k 0)) (d (n "linera-views-derive") (r "^0.6.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scylla") (r "^0.8.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("rt" "sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-test") (r "^0.4.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0rmb79js5jm4vl7la6wmdpwbh0a00526lhd1y5cplbapwfgmdxvj") (f (quote (("test" "anyhow" "tokio/macros" "tokio/parking_lot") ("scylladb" "scylla") ("db_timings") ("aws" "aws-config" "aws-sdk-dynamodb" "aws-sdk-s3" "aws-smithy-http" "aws-smithy-types" "aws-types")))) (s 2) (e (quote (("metrics" "dep:hex"))))))

(define-public crate-linera-views-0.7.1 (c (n "linera-views") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-graphql") (r "^5.0.10") (d #t) (k 0)) (d (n "async-lock") (r "^2.8.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "aws-config") (r "^1.0.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-sdk-dynamodb") (r "^1.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-sdk-s3") (r "^1.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-smithy-http") (r "^0.60.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-smithy-types") (r "^1.0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-types") (r "^1.0.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "linera-base") (r "^0.7.1") (d #t) (k 0)) (d (n "linera-views-derive") (r "^0.7.1") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scylla") (r "^0.10.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("rt" "sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-test") (r "^0.4.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "15za5z15d294lc4wbn12g7p4dhynmy5c66y6j0d3xsdqn52w0xzd") (f (quote (("test" "anyhow" "tokio/macros" "tokio/parking_lot") ("scylladb" "scylla") ("db_timings") ("aws" "aws-config" "aws-sdk-dynamodb" "aws-sdk-s3" "aws-smithy-http" "aws-smithy-types" "aws-types")))) (s 2) (e (quote (("metrics" "dep:hex"))))))

(define-public crate-linera-views-0.8.0 (c (n "linera-views") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-graphql") (r "^5.0.10") (d #t) (k 0)) (d (n "async-lock") (r "^2.8.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "aws-config") (r "^1.0.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-sdk-dynamodb") (r "^1.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-sdk-s3") (r "^1.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-smithy-http") (r "^0.60.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-smithy-types") (r "^1.0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-types") (r "^1.0.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "linera-base") (r "^0.8.0") (d #t) (k 0)) (d (n "linera-views-derive") (r "^0.8.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scylla") (r "^0.10.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("rt" "sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-test") (r "^0.4.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1gzzsvix2yq0gb3lcm62q1z8ki4nx6b6b3bwq2c7dg75vz1la6zg") (f (quote (("test" "anyhow" "tokio/macros" "tokio/parking_lot") ("scylladb" "scylla") ("db_timings") ("aws" "aws-config" "aws-sdk-dynamodb" "aws-sdk-s3" "aws-smithy-http" "aws-smithy-types" "aws-types")))) (s 2) (e (quote (("metrics" "dep:hex"))))))

(define-public crate-linera-views-0.9.0 (c (n "linera-views") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-graphql") (r "^5.0.10") (d #t) (k 0)) (d (n "async-lock") (r "^2.8.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-sdk-dynamodb") (r "^1.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-sdk-s3") (r "^1.15.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-smithy-http") (r "^0.60.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-smithy-types") (r "^1.1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "aws-types") (r "^1.1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "linera-base") (r "^0.9.0") (d #t) (k 0)) (d (n "linera-views-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scylla") (r "^0.10.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("rt" "sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-test") (r "^0.4.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "02jls4ldim7hk0xqyn3sm8ll2rmp5hgc2h68484n7xd778xhjfa2") (f (quote (("test" "anyhow" "tokio/macros" "tokio/parking_lot") ("scylladb" "scylla") ("db_timings") ("aws" "aws-config" "aws-sdk-dynamodb" "aws-sdk-s3" "aws-smithy-http" "aws-smithy-types" "aws-types")))) (s 2) (e (quote (("metrics" "dep:hex"))))))

(define-public crate-linera-views-0.10.0 (c (n "linera-views") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-graphql") (r "^7.0.2") (d #t) (k 0)) (d (n "async-lock") (r "^3.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.7") (o #t) (d #t) (k 0)) (d (n "aws-sdk-dynamodb") (r "^1.16.0") (o #t) (d #t) (k 0)) (d (n "aws-smithy-types") (r "^1.1.7") (o #t) (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "linera-base") (r "^0.10.0") (d #t) (k 0)) (d (n "linera-views-derive") (r "^0.10.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 2)) (d (n "rocksdb") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "04qgkqw3mbqzbw9h8k64hn2lnymwy80ijp1jm2lx8f68z8cvn7hc") (f (quote (("web" "linera-base/web") ("test" "tokio/macros" "rand") ("scylladb" "scylla") ("dynamodb" "aws-config" "aws-sdk-dynamodb" "aws-smithy-types")))) (s 2) (e (quote (("metrics" "dep:hex" "linera-base/metrics" "linera-views-derive/metrics"))))))

(define-public crate-linera-views-0.10.1 (c (n "linera-views") (v "0.10.1") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-graphql") (r "^7.0.2") (d #t) (k 0)) (d (n "async-lock") (r "^3.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.7") (o #t) (d #t) (k 0)) (d (n "aws-sdk-dynamodb") (r "^1.16.0") (o #t) (d #t) (k 0)) (d (n "aws-smithy-types") (r "^1.1.7") (o #t) (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "linera-base") (r "^0.10.1") (d #t) (k 0)) (d (n "linera-views-derive") (r "^0.10.1") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 2)) (d (n "rocksdb") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "1phx8d6csrgagrhysxq9wq0pxwah34nr735mb2vg85izd4fq6nk1") (f (quote (("web" "linera-base/web") ("test" "tokio/macros" "rand") ("scylladb" "scylla") ("dynamodb" "aws-config" "aws-sdk-dynamodb" "aws-smithy-types")))) (s 2) (e (quote (("metrics" "dep:hex" "linera-base/metrics" "linera-views-derive/metrics"))))))

(define-public crate-linera-views-0.11.0 (c (n "linera-views") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-graphql") (r "^7.0.2") (d #t) (k 0)) (d (n "async-lock") (r "^3.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.7") (o #t) (d #t) (k 0)) (d (n "aws-sdk-dynamodb") (r "^1.16.0") (o #t) (d #t) (k 0)) (d (n "aws-smithy-types") (r "^1.1.7") (o #t) (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexed_db_futures") (r "^0.4.1") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "linera-base") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-views-derive") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-witty") (r "^0.11.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 2)) (d (n "rocksdb") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "trait-variant") (r "^0.1.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.92") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "web-sys") (r "^0.3.69") (f (quote ("console"))) (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "051gbfc4xi3pcd69kz4lli6rwc3pd32wni4fdfpw241v6mzprvf0") (f (quote (("web" "linera-base/web") ("test" "tokio/macros" "rand") ("scylladb" "scylla") ("indexeddb" "indexed_db_futures" "wasm-bindgen") ("dynamodb" "aws-config" "aws-sdk-dynamodb" "aws-smithy-types")))) (s 2) (e (quote (("metrics" "dep:hex" "linera-base/metrics" "linera-views-derive/metrics"))))))

(define-public crate-linera-views-0.10.2 (c (n "linera-views") (v "0.10.2") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-lock") (r "^3.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.7") (o #t) (d #t) (k 0)) (d (n "aws-sdk-dynamodb") (r "^1.16.0") (o #t) (d #t) (k 0)) (d (n "aws-smithy-types") (r "^1.1.7") (o #t) (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "linera-base") (r "^0.10.2") (d #t) (k 0)) (d (n "linera-views-derive") (r "^0.10.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 2)) (d (n "rocksdb") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "0dsczkcjb553aq39lp6g3ghbj2jzi1vkszk4s5jmm1dv69zmszf2") (f (quote (("web" "linera-base/web") ("test" "tokio/macros" "rand") ("scylladb" "scylla") ("dynamodb" "aws-config" "aws-sdk-dynamodb" "aws-smithy-types")))) (s 2) (e (quote (("metrics" "dep:hex" "linera-base/metrics" "linera-views-derive/metrics"))))))

(define-public crate-linera-views-0.10.3 (c (n "linera-views") (v "0.10.3") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-lock") (r "^3.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.7") (o #t) (d #t) (k 0)) (d (n "aws-sdk-dynamodb") (r "^1.16.0") (o #t) (d #t) (k 0)) (d (n "aws-smithy-types") (r "^1.1.7") (o #t) (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "linera-base") (r "^0.10.3") (d #t) (k 0)) (d (n "linera-views-derive") (r "^0.10.3") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 2)) (d (n "rocksdb") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "01h2lzh0bngd15dhrzrfn8i2lkblgnv0y3rvlrlfnskijil869dz") (f (quote (("web" "linera-base/web") ("test" "tokio/macros" "rand") ("scylladb" "scylla") ("dynamodb" "aws-config" "aws-sdk-dynamodb" "aws-smithy-types")))) (s 2) (e (quote (("metrics" "dep:hex" "linera-base/metrics" "linera-views-derive/metrics"))))))

(define-public crate-linera-views-0.11.1 (c (n "linera-views") (v "0.11.1") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-lock") (r "^3.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.7") (o #t) (d #t) (k 0)) (d (n "aws-sdk-dynamodb") (r "^1.16.0") (o #t) (d #t) (k 0)) (d (n "aws-smithy-types") (r "^1.1.7") (o #t) (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexed_db_futures") (r "^0.4.1") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "linera-base") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-views-derive") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-witty") (r "^0.11.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 2)) (d (n "rocksdb") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "trait-variant") (r "^0.1.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.92") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "web-sys") (r "^0.3.69") (f (quote ("console"))) (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "0a1hc8sjwcfzqd59lsza9h8c5almpkmnp6sn5ak0ffa50my8wi58") (f (quote (("web" "linera-base/web") ("test" "tokio/macros" "rand") ("scylladb" "scylla") ("indexeddb" "indexed_db_futures" "wasm-bindgen") ("dynamodb" "aws-config" "aws-sdk-dynamodb" "aws-smithy-types")))) (s 2) (e (quote (("metrics" "dep:hex" "linera-base/metrics" "linera-views-derive/metrics"))))))

(define-public crate-linera-views-0.10.4 (c (n "linera-views") (v "0.10.4") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-lock") (r "^3.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.7") (o #t) (d #t) (k 0)) (d (n "aws-sdk-dynamodb") (r "^1.16.0") (o #t) (d #t) (k 0)) (d (n "aws-smithy-types") (r "^1.1.7") (o #t) (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "linera-base") (r "^0.10.4") (d #t) (k 0)) (d (n "linera-views-derive") (r "^0.10.4") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 2)) (d (n "rocksdb") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "1zldx8ymks2k3k5lk32gkaj8p5dvykm386jq29mi3akr660dznw4") (f (quote (("web" "linera-base/web") ("test" "tokio/macros" "rand") ("scylladb" "scylla") ("dynamodb" "aws-config" "aws-sdk-dynamodb" "aws-smithy-types")))) (s 2) (e (quote (("metrics" "dep:hex" "linera-base/metrics" "linera-views-derive/metrics"))))))

(define-public crate-linera-views-0.11.2 (c (n "linera-views") (v "0.11.2") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-lock") (r "^3.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.7") (o #t) (d #t) (k 0)) (d (n "aws-sdk-dynamodb") (r "^1.16.0") (o #t) (d #t) (k 0)) (d (n "aws-smithy-types") (r "^1.1.7") (o #t) (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexed_db_futures") (r "^0.4.1") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "linera-base") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-views-derive") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-witty") (r "^0.11.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 2)) (d (n "rocksdb") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "trait-variant") (r "^0.1.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.92") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "web-sys") (r "^0.3.69") (f (quote ("console"))) (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "0hkakfgai4n6q54b94dbgdfjcpwphfff26xxw8kdmlkknc6czlyh") (f (quote (("web" "linera-base/web") ("test" "tokio/macros" "rand") ("scylladb" "scylla") ("indexeddb" "indexed_db_futures" "wasm-bindgen") ("dynamodb" "aws-config" "aws-sdk-dynamodb" "aws-smithy-types")))) (s 2) (e (quote (("metrics" "dep:hex" "linera-base/metrics" "linera-views-derive/metrics"))))))

(define-public crate-linera-views-0.11.3 (c (n "linera-views") (v "0.11.3") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-lock") (r "^3.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.7") (o #t) (d #t) (k 0)) (d (n "aws-sdk-dynamodb") (r "^1.16.0") (o #t) (d #t) (k 0)) (d (n "aws-smithy-types") (r "^1.1.7") (o #t) (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexed_db_futures") (r "^0.4.1") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "linera-base") (r "^0.11.3") (d #t) (k 0)) (d (n "linera-views-derive") (r "^0.11.3") (d #t) (k 0)) (d (n "linera-witty") (r "^0.11.3") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 2)) (d (n "rocksdb") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "trait-variant") (r "^0.1.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.92") (o #t) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "web-sys") (r "^0.3.69") (f (quote ("console"))) (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "0kl71yf8qjkihfpiiy86a22qdc64c2q28q21f0rll2sb3xi43m6k") (f (quote (("web" "linera-base/web") ("test" "tokio/macros" "rand") ("scylladb" "scylla") ("indexeddb" "indexed_db_futures" "wasm-bindgen") ("dynamodb" "aws-config" "aws-sdk-dynamodb" "aws-smithy-types")))) (s 2) (e (quote (("metrics" "dep:hex" "linera-base/metrics" "linera-views-derive/metrics"))))))

(define-public crate-linera-views-0.10.5 (c (n "linera-views") (v "0.10.5") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-lock") (r "^3.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.7") (o #t) (d #t) (k 0)) (d (n "aws-sdk-dynamodb") (r "^1.16.0") (o #t) (d #t) (k 0)) (d (n "aws-smithy-types") (r "^1.1.7") (o #t) (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "linera-base") (r "^0.10.5") (d #t) (k 0)) (d (n "linera-views-derive") (r "^0.10.5") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 2)) (d (n "rocksdb") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "198368gkz5v9cwba807m1v3c2civ35jdvh0zwxg3n3f8ygbk9vma") (f (quote (("web" "linera-base/web") ("test" "tokio/macros" "rand") ("scylladb" "scylla") ("dynamodb" "aws-config" "aws-sdk-dynamodb" "aws-smithy-types")))) (s 2) (e (quote (("metrics" "dep:hex" "linera-base/metrics" "linera-views-derive/metrics"))))))

