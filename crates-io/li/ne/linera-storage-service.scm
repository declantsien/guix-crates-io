(define-module (crates-io li ne linera-storage-service) #:use-module (crates-io))

(define-public crate-linera-storage-service-0.10.0 (c (n "linera-storage-service") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-lock") (r "^3.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "linera-base") (r "^0.10.0") (d #t) (k 0)) (d (n "linera-version") (r "^0.10.0") (d #t) (k 0)) (d (n "linera-views") (r "^0.10.0") (k 0)) (d (n "port-selector") (r "^0.1.6") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc"))) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("codegen" "prost" "transport"))) (k 0)) (d (n "tonic-build") (r "^0.11") (f (quote ("prost" "transport"))) (k 1)))) (h "02p5p1r89q59b8hq9q17xqi75nn2v3arznpzhzlljm9g1r7v5233") (f (quote (("test" "linera-views/test") ("scylladb" "linera-views/scylladb") ("rocksdb" "linera-views/rocksdb") ("default" "rocksdb") ("aws" "linera-views/dynamodb"))))))

(define-public crate-linera-storage-service-0.10.1 (c (n "linera-storage-service") (v "0.10.1") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-lock") (r "^3.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "linera-base") (r "^0.10.1") (d #t) (k 0)) (d (n "linera-version") (r "^0.10.1") (d #t) (k 0)) (d (n "linera-views") (r "^0.10.1") (k 0)) (d (n "port-selector") (r "^0.1.6") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc"))) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("codegen" "prost" "transport"))) (k 0)) (d (n "tonic-build") (r "^0.11") (f (quote ("prost" "transport"))) (k 1)))) (h "143hix773jfkv8bj8yc963nm8xcbvz8i5hv5pdzsr1yml7cdz2i4") (f (quote (("test" "linera-views/test") ("scylladb" "linera-views/scylladb") ("rocksdb" "linera-views/rocksdb") ("default" "rocksdb") ("aws" "linera-views/dynamodb"))))))

(define-public crate-linera-storage-service-0.11.0 (c (n "linera-storage-service") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-lock") (r "^3.3.0") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "linera-base") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-version") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-views") (r "^0.11.0") (k 0)) (d (n "port-selector") (r "^0.1.6") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc" "alloc"))) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("codegen" "prost" "transport"))) (k 0)) (d (n "tonic-build") (r "^0.11") (f (quote ("prost" "transport"))) (k 1)))) (h "0xmlkjsrmk9znm10wzziggfndsxmpkqymhwrzcc06bcrjrppzfd6") (f (quote (("test" "linera-views/test") ("scylladb" "linera-views/scylladb") ("rocksdb" "linera-views/rocksdb") ("dynamodb" "linera-views/dynamodb") ("default" "rocksdb"))))))

(define-public crate-linera-storage-service-0.10.2 (c (n "linera-storage-service") (v "0.10.2") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-lock") (r "^3.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "linera-base") (r "^0.10.2") (d #t) (k 0)) (d (n "linera-version") (r "^0.10.2") (d #t) (k 0)) (d (n "linera-views") (r "^0.10.2") (k 0)) (d (n "port-selector") (r "^0.1.6") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc"))) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("codegen" "prost" "transport"))) (k 0)) (d (n "tonic-build") (r "^0.11") (f (quote ("prost" "transport"))) (k 1)))) (h "1197n0m097gazh4rgzgw9lpy1c7i046ybfa4pr0nk68ik8j8di1s") (f (quote (("test" "linera-views/test") ("scylladb" "linera-views/scylladb") ("rocksdb" "linera-views/rocksdb") ("default" "rocksdb") ("aws" "linera-views/dynamodb"))))))

(define-public crate-linera-storage-service-0.10.3 (c (n "linera-storage-service") (v "0.10.3") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-lock") (r "^3.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "linera-base") (r "^0.10.3") (d #t) (k 0)) (d (n "linera-version") (r "^0.10.3") (d #t) (k 0)) (d (n "linera-views") (r "^0.10.3") (k 0)) (d (n "port-selector") (r "^0.1.6") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc"))) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("codegen" "prost" "transport"))) (k 0)) (d (n "tonic-build") (r "^0.11") (f (quote ("prost" "transport"))) (k 1)))) (h "15l2iaishkqxgskg2pjv85kvsw565cd60gaz62ly525bz0k9if41") (f (quote (("test" "linera-views/test") ("scylladb" "linera-views/scylladb") ("rocksdb" "linera-views/rocksdb") ("default" "rocksdb") ("aws" "linera-views/dynamodb"))))))

(define-public crate-linera-storage-service-0.11.1 (c (n "linera-storage-service") (v "0.11.1") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-lock") (r "^3.3.0") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "linera-base") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-version") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-views") (r "^0.11.0") (k 0)) (d (n "port-selector") (r "^0.1.6") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc" "alloc"))) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("codegen" "prost" "transport"))) (k 0)) (d (n "tonic-build") (r "^0.11") (f (quote ("prost" "transport"))) (k 1)))) (h "0viybr7yfvrxmfl4xrhbdsiazb8zp6i907i1q8y5abkb4bbn4lw0") (f (quote (("test" "linera-views/test") ("scylladb" "linera-views/scylladb") ("rocksdb" "linera-views/rocksdb") ("dynamodb" "linera-views/dynamodb") ("default" "rocksdb"))))))

(define-public crate-linera-storage-service-0.10.4 (c (n "linera-storage-service") (v "0.10.4") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-lock") (r "^3.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "linera-base") (r "^0.10.4") (d #t) (k 0)) (d (n "linera-version") (r "^0.10.4") (d #t) (k 0)) (d (n "linera-views") (r "^0.10.4") (k 0)) (d (n "port-selector") (r "^0.1.6") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc"))) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("codegen" "prost" "transport"))) (k 0)) (d (n "tonic-build") (r "^0.11") (f (quote ("prost" "transport"))) (k 1)))) (h "1lg9l65ibj52jmq3dqmk3px63i0nyg2asnrs48dlgcv7ghc20v2s") (f (quote (("test" "linera-views/test") ("scylladb" "linera-views/scylladb") ("rocksdb" "linera-views/rocksdb") ("default" "rocksdb") ("aws" "linera-views/dynamodb"))))))

(define-public crate-linera-storage-service-0.11.2 (c (n "linera-storage-service") (v "0.11.2") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-lock") (r "^3.3.0") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "linera-base") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-version") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-views") (r "^0.11.0") (k 0)) (d (n "port-selector") (r "^0.1.6") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc" "alloc"))) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("codegen" "prost" "transport"))) (k 0)) (d (n "tonic-build") (r "^0.11") (f (quote ("prost" "transport"))) (k 1)))) (h "0ak5pr7a5npl1zb818c26frjwy8r6hlrg9l7h8r7g7jq6wmncacx") (f (quote (("test" "linera-views/test") ("scylladb" "linera-views/scylladb") ("rocksdb" "linera-views/rocksdb") ("dynamodb" "linera-views/dynamodb") ("default" "rocksdb"))))))

(define-public crate-linera-storage-service-0.11.3 (c (n "linera-storage-service") (v "0.11.3") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-lock") (r "^3.3.0") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "linera-base") (r "^0.11.3") (d #t) (k 0)) (d (n "linera-version") (r "^0.11.3") (d #t) (k 0)) (d (n "linera-views") (r "^0.11.3") (k 0)) (d (n "port-selector") (r "^0.1.6") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc" "alloc"))) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("codegen" "prost" "transport"))) (k 0)) (d (n "tonic-build") (r "^0.11") (f (quote ("prost" "transport"))) (k 1)))) (h "0ary30l48sni5v521q87w10chg1yxiw786ybjff2y9x3jxamyz3k") (f (quote (("test" "linera-views/test") ("scylladb" "linera-views/scylladb") ("rocksdb" "linera-views/rocksdb") ("dynamodb" "linera-views/dynamodb") ("default" "rocksdb"))))))

(define-public crate-linera-storage-service-0.10.5 (c (n "linera-storage-service") (v "0.10.5") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-lock") (r "^3.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "linera-base") (r "^0.10.5") (d #t) (k 0)) (d (n "linera-version") (r "^0.10.5") (d #t) (k 0)) (d (n "linera-views") (r "^0.10.5") (k 0)) (d (n "port-selector") (r "^0.1.6") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc"))) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("codegen" "prost" "transport"))) (k 0)) (d (n "tonic-build") (r "^0.11") (f (quote ("prost" "transport"))) (k 1)))) (h "14v04fdsxmibva78mhjm3ncyf0xsn23ss1x1dr9vziz2k87na6bs") (f (quote (("test" "linera-views/test") ("scylladb" "linera-views/scylladb") ("rocksdb" "linera-views/rocksdb") ("default" "rocksdb") ("aws" "linera-views/dynamodb"))))))

