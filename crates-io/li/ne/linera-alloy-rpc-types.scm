(define-module (crates-io li ne linera-alloy-rpc-types) #:use-module (crates-io))

(define-public crate-linera-alloy-rpc-types-0.1.0 (c (n "linera-alloy-rpc-types") (v "0.1.0") (d (list (d (n "alloy-rlp") (r "^0.3") (f (quote ("arrayvec" "derive"))) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "jsonrpsee-types") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "linera-alloy-consensus") (r "^0.1.0") (f (quote ("std" "serde"))) (k 0)) (d (n "linera-alloy-consensus") (r "^0.1.0") (f (quote ("std" "arbitrary"))) (k 2)) (d (n "linera-alloy-eips") (r "^0.1.0") (f (quote ("std" "serde"))) (k 0)) (d (n "linera-alloy-genesis") (r "^0.1.0") (k 0)) (d (n "linera-alloy-primitives") (r "^0.7.4") (f (quote ("rlp" "serde" "std"))) (k 0)) (d (n "linera-alloy-primitives") (r "^0.7.4") (f (quote ("rand" "rlp" "serde" "arbitrary"))) (k 2)) (d (n "linera-alloy-serde") (r "^0.1.0") (k 0)) (d (n "linera-alloy-sol-types") (r "^0.7.4") (k 0)) (d (n "proptest") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "similar-asserts") (r "^1.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0xixiw7z538dcwmhkinz7w10hywwsgpirslqmm1wrlmw28vhhr71") (f (quote (("ssz" "linera-alloy-primitives/ssz" "linera-alloy-eips/ssz") ("k256" "linera-alloy-consensus/k256")))) (s 2) (e (quote (("jsonrpsee-types" "dep:jsonrpsee-types") ("arbitrary" "dep:arbitrary" "dep:proptest-derive" "dep:proptest" "linera-alloy-primitives/arbitrary" "linera-alloy-eips/arbitrary")))) (r "1.76")))

