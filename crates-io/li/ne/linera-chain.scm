(define-module (crates-io li ne linera-chain) #:use-module (crates-io))

(define-public crate-linera-chain-0.0.1 (c (n "linera-chain") (v "0.0.1") (h "0h6w1sbsgqdwdj8c8ddy40465yi5and0xz62ak74gv4n24x0sz8p") (y #t)))

(define-public crate-linera-chain-0.1.0 (c (n "linera-chain") (v "0.1.0") (d (list (d (n "async-graphql") (r "^5.0.7") (d #t) (k 0)) (d (n "async-lock") (r "^2.6.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "=0.1.58") (d #t) (k 0)) (d (n "linera-base") (r "^0.1.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.1.0") (k 0)) (d (n "linera-views") (r "^0.1.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0p4a15psmhiyl2jm378jlf5svciciygqgr40m8qa6zilp9m6mn7i") (f (quote (("test" "tokio/macros" "async-lock" "linera-base/test" "linera-execution/test")))) (y #t)))

(define-public crate-linera-chain-0.2.0 (c (n "linera-chain") (v "0.2.0") (d (list (d (n "async-graphql") (r "^5.0.7") (d #t) (k 0)) (d (n "async-lock") (r "^2.6.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "=0.1.58") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "linera-base") (r "^0.2.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.2.0") (k 0)) (d (n "linera-views") (r "^0.2.0") (f (quote ("metrics"))) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1zqrj0bvzk1vfm3j0h3cjzz7g36qjkg875gvv9fkv95kjf4lxcxn") (f (quote (("test" "tokio/macros" "async-lock" "linera-base/test" "linera-execution/test")))) (y #t)))

(define-public crate-linera-chain-0.3.0 (c (n "linera-chain") (v "0.3.0") (d (list (d (n "async-graphql") (r "^5.0.7") (d #t) (k 0)) (d (n "async-lock") (r "^2.6.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "=0.1.58") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "linera-base") (r "^0.3.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.3.0") (k 0)) (d (n "linera-views") (r "^0.3.0") (f (quote ("metrics"))) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "13nh7bafibg02p1ap9zwi76hr6h0v13j0j91ylvw96gh4vc0irli") (f (quote (("test" "tokio/macros" "async-lock" "linera-base/test" "linera-execution/test")))) (y #t)))

(define-public crate-linera-chain-0.4.0 (c (n "linera-chain") (v "0.4.0") (d (list (d (n "async-graphql") (r "^5.0.7") (d #t) (k 0)) (d (n "async-lock") (r "^2.6.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "=0.1.58") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "linera-base") (r "^0.4.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.4.0") (k 0)) (d (n "linera-views") (r "^0.4.0") (f (quote ("metrics"))) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0kyy5qb1j0a809zrwjapps944d1qm09vcnkq4vzgxl01v6458b2c") (f (quote (("test" "tokio/macros" "async-lock" "linera-base/test" "linera-execution/test")))) (y #t)))

(define-public crate-linera-chain-0.4.1 (c (n "linera-chain") (v "0.4.1") (d (list (d (n "async-graphql") (r "^5.0.7") (d #t) (k 0)) (d (n "async-lock") (r "^2.6.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "=0.1.58") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "linera-base") (r "^0.4.1") (d #t) (k 0)) (d (n "linera-execution") (r "^0.4.1") (k 0)) (d (n "linera-views") (r "^0.4.1") (f (quote ("metrics"))) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "14w4b98gz9pr0n83b1n9n4kvyqddhn6zy0psik6jg1yni88y8x9y") (f (quote (("test" "tokio/macros" "async-lock" "linera-base/test" "linera-execution/test"))))))

(define-public crate-linera-chain-0.5.0 (c (n "linera-chain") (v "0.5.0") (d (list (d (n "async-graphql") (r "^5.0.7") (d #t) (k 0)) (d (n "async-lock") (r "^2.8.0") (d #t) (k 0)) (d (n "async-trait") (r "=0.1.58") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "linera-base") (r "^0.5.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.5.0") (k 0)) (d (n "linera-views") (r "^0.5.0") (f (quote ("metrics"))) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "00ps8gna0q1c1fbv6pm6hpic9yk44zkrmxfwrh4d9mijp9ddn707") (f (quote (("test" "tokio/macros" "linera-base/test" "linera-execution/test"))))))

(define-public crate-linera-chain-0.6.0 (c (n "linera-chain") (v "0.6.0") (d (list (d (n "async-graphql") (r "^5.0.10") (d #t) (k 0)) (d (n "async-lock") (r "^2.8.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "linera-base") (r "^0.6.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.6.0") (k 0)) (d (n "linera-views") (r "^0.6.0") (f (quote ("metrics"))) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "1n13cxvfgn7xp7b5ylvy6iaxj17zhjkid41yh847w073afc3rfbf") (f (quote (("test" "tokio/macros" "linera-base/test" "linera-execution/test"))))))

(define-public crate-linera-chain-0.7.1 (c (n "linera-chain") (v "0.7.1") (d (list (d (n "async-graphql") (r "^5.0.10") (d #t) (k 0)) (d (n "async-lock") (r "^2.8.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "linera-base") (r "^0.7.1") (d #t) (k 0)) (d (n "linera-execution") (r "^0.7.1") (k 0)) (d (n "linera-views") (r "^0.7.1") (f (quote ("metrics"))) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "1miihp95zidqrw70j1zba20klm2fzbjzfdqzr6hd233zlijscivb") (f (quote (("test" "tokio/macros" "linera-base/test" "linera-execution/test"))))))

(define-public crate-linera-chain-0.8.0 (c (n "linera-chain") (v "0.8.0") (d (list (d (n "async-graphql") (r "^5.0.10") (d #t) (k 0)) (d (n "async-lock") (r "^2.8.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "linera-base") (r "^0.8.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.8.0") (k 0)) (d (n "linera-views") (r "^0.8.0") (f (quote ("metrics"))) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "1jvnvnwwxs5k4xd8c5f35sby3la2507g1s1svk7m1lr8scyjxv1n") (f (quote (("test" "tokio/macros" "linera-base/test" "linera-execution/test"))))))

(define-public crate-linera-chain-0.9.0 (c (n "linera-chain") (v "0.9.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-graphql") (r "^5.0.10") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "linera-base") (r "^0.9.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.9.0") (k 0)) (d (n "linera-views") (r "^0.9.0") (f (quote ("metrics"))) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "1z4f04d61yihpg9z8vx5xdabh8mk5z2rk85w2nvdgp0yp8jvyk81") (f (quote (("test" "tokio/macros" "linera-base/test" "linera-execution/test"))))))

(define-public crate-linera-chain-0.10.0 (c (n "linera-chain") (v "0.10.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-graphql") (r "^7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "linera-base") (r "^0.10.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.10.0") (k 0)) (d (n "linera-views") (r "^0.10.0") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "rand_distr") (r "^0.4.3") (f (quote ("alloc" "serde1"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "04j3q6gd12ghj6vc2lps10x7ysvcsdc3jmyv8m5k8y4n9bn0ssbm") (f (quote (("web" "linera-base/web" "linera-views/web" "linera-execution/web") ("test" "tokio/macros" "linera-base/test" "linera-execution/test") ("metrics" "prometheus" "linera-views/metrics" "linera-execution/metrics"))))))

(define-public crate-linera-chain-0.10.1 (c (n "linera-chain") (v "0.10.1") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-graphql") (r "^7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "linera-base") (r "^0.10.1") (d #t) (k 0)) (d (n "linera-execution") (r "^0.10.1") (k 0)) (d (n "linera-views") (r "^0.10.1") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "rand_distr") (r "^0.4.3") (f (quote ("alloc" "serde1"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "00clvnx8msb2aqxz4c1psxbm5h5ymcslv9q5fa4sk6cjjzy2dpxl") (f (quote (("web" "linera-base/web" "linera-views/web" "linera-execution/web") ("test" "tokio/macros" "linera-base/test" "linera-execution/test") ("metrics" "prometheus" "linera-views/metrics" "linera-execution/metrics"))))))

(define-public crate-linera-chain-0.11.0 (c (n "linera-chain") (v "0.11.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-graphql") (r "^7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "linera-base") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.11.0") (k 0)) (d (n "linera-views") (r "^0.11.0") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "rand_distr") (r "^0.4.3") (f (quote ("alloc" "serde1"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "0iwd7iiay6v90gi47ahldfkxzpc4xvk65yj0lhjzxf17f5324g72") (f (quote (("web" "linera-base/web" "linera-views/web" "linera-execution/web") ("test" "tokio/macros" "linera-base/test" "linera-execution/test") ("metrics" "prometheus" "linera-views/metrics" "linera-execution/metrics"))))))

(define-public crate-linera-chain-0.10.2 (c (n "linera-chain") (v "0.10.2") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "linera-base") (r "^0.10.2") (d #t) (k 0)) (d (n "linera-execution") (r "^0.10.2") (k 0)) (d (n "linera-views") (r "^0.10.2") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "rand_distr") (r "^0.4.3") (f (quote ("alloc" "serde1"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "0pxg63gm8s1h0r0kxfvjkhzd0mx0nqf8011akmk1jxb3gb4qp834") (f (quote (("web" "linera-base/web" "linera-views/web" "linera-execution/web") ("test" "tokio/macros" "linera-base/test" "linera-execution/test") ("metrics" "prometheus" "linera-views/metrics" "linera-execution/metrics"))))))

(define-public crate-linera-chain-0.10.3 (c (n "linera-chain") (v "0.10.3") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "linera-base") (r "^0.10.3") (d #t) (k 0)) (d (n "linera-execution") (r "^0.10.3") (k 0)) (d (n "linera-views") (r "^0.10.3") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "rand_distr") (r "^0.4.3") (f (quote ("alloc" "serde1"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "1m6xvswnf1panhp6qr97gxn5lnrkdd4328awykf46filskmq21hw") (f (quote (("web" "linera-base/web" "linera-views/web" "linera-execution/web") ("test" "tokio/macros" "linera-base/test" "linera-execution/test") ("metrics" "prometheus" "linera-views/metrics" "linera-execution/metrics"))))))

(define-public crate-linera-chain-0.11.1 (c (n "linera-chain") (v "0.11.1") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "linera-base") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.11.0") (k 0)) (d (n "linera-views") (r "^0.11.0") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "rand_distr") (r "^0.4.3") (f (quote ("alloc" "serde1"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "188gykd0sqap1x1gbbkys7fwz5j2rd0bn0znx758cvvcqdm43h49") (f (quote (("web" "linera-base/web" "linera-views/web" "linera-execution/web") ("test" "tokio/macros" "linera-base/test" "linera-execution/test") ("metrics" "prometheus" "linera-views/metrics" "linera-execution/metrics"))))))

(define-public crate-linera-chain-0.10.4 (c (n "linera-chain") (v "0.10.4") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "linera-base") (r "^0.10.4") (d #t) (k 0)) (d (n "linera-execution") (r "^0.10.4") (k 0)) (d (n "linera-views") (r "^0.10.4") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "rand_distr") (r "^0.4.3") (f (quote ("alloc" "serde1"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "01p9bxaf0wmdb7hyw2bfkkhydnn1xvxhmlfs31fvy5j54a6dx0my") (f (quote (("web" "linera-base/web" "linera-views/web" "linera-execution/web") ("test" "tokio/macros" "linera-base/test" "linera-execution/test") ("metrics" "prometheus" "linera-views/metrics" "linera-execution/metrics"))))))

(define-public crate-linera-chain-0.11.2 (c (n "linera-chain") (v "0.11.2") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "linera-base") (r "^0.11.0") (d #t) (k 0)) (d (n "linera-execution") (r "^0.11.0") (k 0)) (d (n "linera-views") (r "^0.11.0") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "rand_distr") (r "^0.4.3") (f (quote ("alloc" "serde1"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "1fc2rvwzkkvahrrbxh2iym5nlsiykzw3v5pqj1fgj84w0r84nzjk") (f (quote (("web" "linera-base/web" "linera-views/web" "linera-execution/web") ("test" "tokio/macros" "linera-base/test" "linera-execution/test") ("metrics" "prometheus" "linera-views/metrics" "linera-execution/metrics"))))))

(define-public crate-linera-chain-0.11.3 (c (n "linera-chain") (v "0.11.3") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "linera-base") (r "^0.11.3") (d #t) (k 0)) (d (n "linera-execution") (r "^0.11.3") (k 0)) (d (n "linera-views") (r "^0.11.3") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "rand_distr") (r "^0.4.3") (f (quote ("alloc" "serde1"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "1gv6pc3aisakqzdvpzryykgz1gmivsddv3sdi6p7f8cq1ja60a4q") (f (quote (("web" "linera-base/web" "linera-views/web" "linera-execution/web") ("test" "tokio/macros" "linera-base/test" "linera-execution/test") ("metrics" "prometheus" "linera-views/metrics" "linera-execution/metrics"))))))

(define-public crate-linera-chain-0.10.5 (c (n "linera-chain") (v "0.10.5") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "linera-base") (r "^0.10.5") (d #t) (k 0)) (d (n "linera-execution") (r "^0.10.5") (k 0)) (d (n "linera-views") (r "^0.10.5") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "rand_distr") (r "^0.4.3") (f (quote ("alloc" "serde1"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "0ar8172zgqjwy916a1x9fjy9dp4bhpirzsh41b5xiyd7zcb8030f") (f (quote (("web" "linera-base/web" "linera-views/web" "linera-execution/web") ("test" "tokio/macros" "linera-base/test" "linera-execution/test") ("metrics" "prometheus" "linera-views/metrics" "linera-execution/metrics"))))))

