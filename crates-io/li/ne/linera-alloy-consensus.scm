(define-module (crates-io li ne linera-alloy-consensus) #:use-module (crates-io))

(define-public crate-linera-alloy-consensus-0.1.0 (c (n "linera-alloy-consensus") (v "0.1.0") (d (list (d (n "alloy-rlp") (r "^0.3") (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "c-kzg") (r "^1.0") (f (quote ("serde"))) (o #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (k 2)) (d (n "linera-alloy-eips") (r "^0.1.0") (k 0)) (d (n "linera-alloy-primitives") (r "^0.7.4") (f (quote ("rlp"))) (k 0)) (d (n "linera-alloy-primitives") (r "^0.7.4") (f (quote ("arbitrary" "rand"))) (k 2)) (d (n "linera-alloy-serde") (r "^0.1.0") (o #t) (k 0)) (d (n "linera-alloy-signer") (r "^0.1.0") (k 2)) (d (n "proptest") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (k 2)))) (h "0235mzkcpb2fxqc81486q0lnsci3mlyvkb1gkshkdiwjbj959v06") (f (quote (("k256" "linera-alloy-primitives/k256") ("default" "std")))) (s 2) (e (quote (("std" "linera-alloy-eips/std" "c-kzg?/std") ("serde" "dep:serde" "linera-alloy-primitives/serde" "dep:linera-alloy-serde" "linera-alloy-eips/serde") ("kzg" "dep:c-kzg" "linera-alloy-eips/kzg" "std") ("arbitrary" "std" "dep:arbitrary" "dep:proptest-derive" "dep:proptest" "linera-alloy-eips/arbitrary")))) (r "1.76")))

