(define-module (crates-io li ne linera-base) #:use-module (crates-io))

(define-public crate-linera-base-0.0.1 (c (n "linera-base") (v "0.0.1") (h "0azvz01q0jagrgisg167277lm9jlh7d5p8bp8sym7rlvzds0pvcg") (y #t)))

(define-public crate-linera-base-0.1.0 (c (n "linera-base") (v "0.1.0") (d (list (d (n "async-graphql") (r "^5.0.5") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "custom_debug_derive") (r "^0.5.1") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.2.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "test-strategy") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "0zrvdd71plxwdbn2xrxarlpav16w4kwq9103w9iz0zvdpbd31ahy") (f (quote (("test" "test-strategy" "proptest")))) (y #t)))

(define-public crate-linera-base-0.2.0 (c (n "linera-base") (v "0.2.0") (d (list (d (n "async-graphql") (r "^5.0.7") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "custom_debug_derive") (r "^0.5.1") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand07") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rand")) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.2.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "test-strategy") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "1la6vzhmxdj6cxvrncla2xpf8g4m2m4ljgmacqvnpqyq08w0wcvr") (f (quote (("test" "test-strategy" "proptest")))) (y #t)))

(define-public crate-linera-base-0.3.0 (c (n "linera-base") (v "0.3.0") (d (list (d (n "async-graphql") (r "^5.0.7") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "custom_debug_derive") (r "^0.5.1") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand07") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rand")) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.2.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "test-strategy") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "0avqxv699a5m3a16rnmzz2kgs9whvyh9z87j97n2fwyvg4mdi3ag") (f (quote (("test" "test-strategy" "proptest")))) (y #t)))

(define-public crate-linera-base-0.4.0 (c (n "linera-base") (v "0.4.0") (d (list (d (n "async-graphql") (r "^5.0.7") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "custom_debug_derive") (r "^0.5.1") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand07") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rand")) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.2.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "test-strategy") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "12z3lmvrpvjcggh74rb96za1y4v2vjjjygyv0azy9md4d2650nkd") (f (quote (("test" "test-strategy" "proptest")))) (y #t)))

(define-public crate-linera-base-0.4.1 (c (n "linera-base") (v "0.4.1") (d (list (d (n "async-graphql") (r "^5.0.7") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "custom_debug_derive") (r "^0.5.1") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand07") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rand")) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.2.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "test-strategy") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "032ij119m0ni3yf8lprckbsf2ljq4vcgq6ddy7yfcm767d5253sb") (f (quote (("test" "test-strategy" "proptest"))))))

(define-public crate-linera-base-0.5.0 (c (n "linera-base") (v "0.5.0") (d (list (d (n "async-graphql") (r "^5.0.7") (d #t) (k 0)) (d (n "bcs") (r "^0.1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "custom_debug_derive") (r "^0.5.1") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand07") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rand")) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.2.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "test-strategy") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "1r9km680mkmc3npd2q655512gff4dn5sna5f9z8rqnzh0dsmaqb6") (f (quote (("test" "test-strategy" "proptest"))))))

(define-public crate-linera-base-0.6.0 (c (n "linera-base") (v "0.6.0") (d (list (d (n "async-graphql") (r "^5.0.10") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "custom_debug_derive") (r "^0.5.1") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "rand07") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rand")) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "test-strategy") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "1p8yg87pn0b39bajif5lb7jq64wcrmwdpyqpq5af0b0hdx1jfmjm") (f (quote (("test" "test-strategy" "proptest"))))))

(define-public crate-linera-base-0.7.0 (c (n "linera-base") (v "0.7.0") (d (list (d (n "async-graphql") (r "^5.0.10") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "custom_debug_derive") (r "^0.5.1") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proptest") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "rand07") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rand")) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "test-strategy") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "0kh6hm07lcm89j61s9vwnv7d3s9k25a9d4whv8dkci9d27s1hbrr") (f (quote (("test" "test-strategy" "proptest")))) (y #t)))

(define-public crate-linera-base-0.7.1 (c (n "linera-base") (v "0.7.1") (d (list (d (n "async-graphql") (r "^5.0.10") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "custom_debug_derive") (r "^0.5.1") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proptest") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "rand07") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rand")) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "test-strategy") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "0lmm5dnls5cwqh6m3pq0nx9zsgfj8gdnmslfha38y825w5wv78lf") (f (quote (("test" "test-strategy" "proptest"))))))

(define-public crate-linera-base-0.8.0 (c (n "linera-base") (v "0.8.0") (d (list (d (n "async-graphql") (r "^5.0.10") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "custom_debug_derive") (r "^0.5.1") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proptest") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "rand07") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rand")) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "test-strategy") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "1zwg7ifsycpg4bkds6kvaxsc80j2cqxz1m50m035zs7qlpqxq9p3") (f (quote (("test" "test-strategy" "proptest"))))))

(define-public crate-linera-base-0.9.0 (c (n "linera-base") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "async-graphql") (r "^5.0.10") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "custom_debug_derive") (r "^0.5.1") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proptest") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "test-strategy") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "1g879sppm8zklwxlva4121ib513zbakma9rf6klj0rc3bvgzkycg") (f (quote (("test" "test-strategy" "proptest"))))))

(define-public crate-linera-base-0.10.0 (c (n "linera-base") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-graphql") (r "^7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "chrono") (r "^0.4.35") (k 0)) (d (n "chrono") (r "^0.4.35") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "custom_debug_derive") (r "^0.6.1") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom" "std" "std_rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("process" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "19lgq2p700x4khybsf0c7rrx7zz7bhs7zi6a3az8pwz7a8mwwf99") (f (quote (("web" "getrandom/js" "rand/getrandom" "rand/std" "rand/std_rng") ("test" "test-strategy" "proptest") ("metrics" "prometheus"))))))

(define-public crate-linera-base-0.10.1 (c (n "linera-base") (v "0.10.1") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-graphql") (r "^7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "chrono") (r "^0.4.35") (k 0)) (d (n "chrono") (r "^0.4.35") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "custom_debug_derive") (r "^0.6.1") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom" "std" "std_rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("process" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1dhshws2l9z84d09f2nmim7925i7wai16aw8h848wsb85ba6npk1") (f (quote (("web" "getrandom/js" "rand/getrandom" "rand/std" "rand/std_rng") ("test" "test-strategy" "proptest") ("metrics" "prometheus"))))))

(define-public crate-linera-base-0.11.0 (c (n "linera-base") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-graphql") (r "^7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "chrono") (r "^0.4.35") (k 0)) (d (n "chrono") (r "^0.4.35") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "custom_debug_derive") (r "^0.6.1") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "linera-witty") (r "^0.11.0") (f (quote ("macros"))) (d #t) (k 0)) (d (n "linera-witty") (r "^0.11.0") (f (quote ("test"))) (d #t) (k 2)) (d (n "prometheus") (r "^0.13.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc" "alloc"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom" "std" "std_rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("process" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "web-time") (r "^1.1.0") (o #t) (d #t) (k 0)))) (h "0w89xc3f8mc7j6ggafn3fx6cr0dhad0nw6v2gd61ikxbbqq60fc1") (f (quote (("web" "getrandom/js" "rand/getrandom" "rand/std" "rand/std_rng" "web-time") ("test" "test-strategy" "proptest") ("metrics" "prometheus"))))))

(define-public crate-linera-base-0.10.2 (c (n "linera-base") (v "0.10.2") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-graphql-derive") (r "=7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "chrono") (r "^0.4.35") (k 0)) (d (n "chrono") (r "^0.4.35") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "custom_debug_derive") (r "^0.6.1") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom" "std" "std_rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("process" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "09xddq2ibim2hxwkbhyjhg33sq4jsxh3njysm5fywrbagsd7470p") (f (quote (("web" "getrandom/js" "rand/getrandom" "rand/std" "rand/std_rng") ("test" "test-strategy" "proptest") ("metrics" "prometheus"))))))

(define-public crate-linera-base-0.10.3 (c (n "linera-base") (v "0.10.3") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-graphql-derive") (r "=7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "chrono") (r "^0.4.35") (k 0)) (d (n "chrono") (r "^0.4.35") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "custom_debug_derive") (r "^0.6.1") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom" "std" "std_rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("process" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0rzj51017n1sl6i64blssaww5px4g9kalhdzmnkrhyrk0drdl0nf") (f (quote (("web" "getrandom/js" "rand/getrandom" "rand/std" "rand/std_rng") ("test" "test-strategy" "proptest") ("metrics" "prometheus"))))))

(define-public crate-linera-base-0.11.1 (c (n "linera-base") (v "0.11.1") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-graphql-derive") (r "=7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "chrono") (r "^0.4.35") (k 0)) (d (n "chrono") (r "^0.4.35") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "custom_debug_derive") (r "^0.6.1") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "linera-witty") (r "^0.11.0") (f (quote ("macros"))) (d #t) (k 0)) (d (n "linera-witty") (r "^0.11.0") (f (quote ("test"))) (d #t) (k 2)) (d (n "prometheus") (r "^0.13.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc" "alloc"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom" "std" "std_rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("process" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "web-time") (r "^1.1.0") (o #t) (d #t) (k 0)))) (h "19d4bb7gjmj0f08hdlykm85sbmnsh62gjifxc0afazh7d0405pyp") (f (quote (("web" "getrandom/js" "rand/getrandom" "rand/std" "rand/std_rng" "web-time") ("test" "test-strategy" "proptest") ("metrics" "prometheus"))))))

(define-public crate-linera-base-0.10.4 (c (n "linera-base") (v "0.10.4") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-graphql-derive") (r "=7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "chrono") (r "^0.4.35") (k 0)) (d (n "chrono") (r "^0.4.35") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "custom_debug_derive") (r "^0.6.1") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom" "std" "std_rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("process" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0kp4z9dhdmsg2gk29nk970624akhhflym8qbaba0i2dqxx2qm0ly") (f (quote (("web" "getrandom/js" "rand/getrandom" "rand/std" "rand/std_rng") ("test" "test-strategy" "proptest") ("metrics" "prometheus"))))))

(define-public crate-linera-base-0.11.2 (c (n "linera-base") (v "0.11.2") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-graphql-derive") (r "=7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "chrono") (r "^0.4.35") (k 0)) (d (n "chrono") (r "^0.4.35") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "custom_debug_derive") (r "^0.6.1") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "linera-witty") (r "^0.11.0") (f (quote ("macros"))) (d #t) (k 0)) (d (n "linera-witty") (r "^0.11.0") (f (quote ("test"))) (d #t) (k 2)) (d (n "prometheus") (r "^0.13.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc" "alloc"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom" "std" "std_rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("process" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "web-time") (r "^1.1.0") (o #t) (d #t) (k 0)))) (h "0mnkxqa96cn28jp0129339c0k4mv5vnha6qgsiagx6lf10z9pddw") (f (quote (("web" "getrandom/js" "rand/getrandom" "rand/std" "rand/std_rng" "web-time") ("test" "test-strategy" "proptest") ("metrics" "prometheus"))))))

(define-public crate-linera-base-0.11.3 (c (n "linera-base") (v "0.11.3") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-graphql-derive") (r "=7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "chrono") (r "^0.4.35") (k 0)) (d (n "chrono") (r "^0.4.35") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "custom_debug_derive") (r "^0.6.1") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "linera-witty") (r "^0.11.0") (f (quote ("macros"))) (d #t) (k 0)) (d (n "linera-witty") (r "^0.11.0") (f (quote ("test"))) (d #t) (k 2)) (d (n "prometheus") (r "^0.13.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc" "alloc"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom" "std" "std_rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("process" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "web-time") (r "^1.1.0") (o #t) (d #t) (k 0)))) (h "00yc9iwgw0ijgxh9q305xv6wwf31w5k03h7zb7vbp51bxabzx672") (f (quote (("web" "getrandom/js" "rand/getrandom" "rand/std" "rand/std_rng" "web-time") ("test" "test-strategy" "proptest") ("metrics" "prometheus"))))))

(define-public crate-linera-base-0.10.5 (c (n "linera-base") (v "0.10.5") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "async-graphql") (r "=7.0.2") (d #t) (k 0)) (d (n "async-graphql-derive") (r "=7.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bcs") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.2.0") (d #t) (k 1)) (d (n "chrono") (r "^0.4.35") (k 0)) (d (n "chrono") (r "^0.4.35") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "custom_debug_derive") (r "^0.6.1") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.1.1") (f (quote ("batch" "serde"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "prometheus") (r "^0.13.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prometheus") (r "^0.13.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom" "std" "std_rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("process" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "04c5dxmmv1yv4qpfhscxja8iadsih2f78blgfwy15vz4ihnbyyik") (f (quote (("web" "getrandom/js" "rand/getrandom" "rand/std" "rand/std_rng") ("test" "test-strategy" "proptest") ("metrics" "prometheus"))))))

