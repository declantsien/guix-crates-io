(define-module (crates-io li ba libafl) #:use-module (crates-io))

(define-public crate-libafl-0.1.0 (c (n "libafl") (v "0.1.0") (d (list (d (n "ahash") (r "^0.6.1") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (f (quote ("std" "libbacktrace"))) (o #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "compression") (r "^0.1.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1.20") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.12") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.9") (f (quote ("serde" "ahash-compile-time-rng"))) (d #t) (k 0)) (d (n "libafl_derive") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "lock_api") (r "^0.4.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 2)) (d (n "num_enum") (r "^0.5.1") (d #t) (k 0)) (d (n "postcard") (r "^0.5.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tuple_list") (r "^0.1.2") (d #t) (k 0)) (d (n "uds") (r "^0.2.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(windows)") (k 1)) (d (n "xxhash-rust") (r "^0.8.0") (f (quote ("xxh3" "const_xxh3"))) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.0") (f (quote ("const_xxh3" "xxh3"))) (d #t) (k 2)))) (h "0jnaq37kh8lgckj3dvw9w3wll4a3j4qr4klmxn3d314hvsy3slha") (f (quote (("std") ("llmp_small_maps") ("llmp_debug" "backtrace") ("llmp_compression") ("derive" "libafl_derive") ("default" "std" "anymap_debug" "derive" "llmp_compression") ("anymap_debug" "serde_json"))))))

(define-public crate-libafl-0.2.0 (c (n "libafl") (v "0.2.0") (d (list (d (n "ahash") (r "^0.6.1") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (f (quote ("std" "libbacktrace"))) (o #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "compression") (r "^0.1.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1.20") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.12") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.9") (f (quote ("serde" "ahash-compile-time-rng"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "libafl_derive") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "lock_api") (r "^0.4.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 2)) (d (n "num_enum") (r "^0.5.1") (d #t) (k 0)) (d (n "postcard") (r "^0.5.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (t "cfg(unix)") (k 0)) (d (n "rustc_version") (r "^0.3.3") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tuple_list") (r "^0.1.2") (d #t) (k 0)) (d (n "uds") (r "^0.2.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(windows)") (k 1)) (d (n "xxhash-rust") (r "^0.8.0") (f (quote ("xxh3" "const_xxh3"))) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.0") (f (quote ("const_xxh3" "xxh3"))) (d #t) (k 2)))) (h "0cfcif70a8z8fbipnl2p2060hzavrqd9yxb8ydwi1r6qq75gp135") (f (quote (("std") ("llmp_small_maps") ("llmp_debug" "backtrace") ("llmp_compression") ("llmp_bind_public") ("derive" "libafl_derive") ("default" "std" "anymap_debug" "derive" "llmp_compression") ("anymap_debug" "serde_json"))))))

(define-public crate-libafl-0.2.1 (c (n "libafl") (v "0.2.1") (d (list (d (n "ahash") (r "^0.6.1") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (f (quote ("std" "libbacktrace"))) (o #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "compression") (r "^0.1.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1.20") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.12") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.9") (f (quote ("serde" "ahash-compile-time-rng"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "libafl_derive") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "lock_api") (r "^0.4.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 2)) (d (n "num_enum") (r "^0.5.1") (d #t) (k 0)) (d (n "postcard") (r "^0.5.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (t "cfg(unix)") (k 0)) (d (n "rustc_version") (r "^0.3.3") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tuple_list") (r "^0.1.2") (d #t) (k 0)) (d (n "uds") (r "^0.2.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(windows)") (k 1)) (d (n "xxhash-rust") (r "^0.8.0") (f (quote ("xxh3" "const_xxh3"))) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.0") (f (quote ("const_xxh3" "xxh3"))) (d #t) (k 2)))) (h "1km9kc38aghzgbwk4mv57bxhrvbr2pcd6265ajcpwbi57il687ci") (f (quote (("std") ("llmp_small_maps") ("llmp_debug" "backtrace") ("llmp_compression") ("llmp_bind_public") ("introspection") ("derive" "libafl_derive") ("default" "std" "anymap_debug" "derive" "llmp_compression") ("anymap_debug" "serde_json"))))))

(define-public crate-libafl-0.3.0 (c (n "libafl") (v "0.3.0") (d (list (d (n "ahash") (r "^0.6.1") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (f (quote ("std" "libbacktrace"))) (o #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "compression") (r "^0.1.5") (d #t) (k 0)) (d (n "core_affinity") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1.20") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.12") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.9") (f (quote ("serde" "ahash-compile-time-rng"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "libafl_derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "lock_api") (r "^0.4.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 2)) (d (n "num_enum") (r "^0.5.1") (d #t) (k 0)) (d (n "postcard") (r "^0.5.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (t "cfg(unix)") (k 0)) (d (n "rustc_version") (r "^0.3.3") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tuple_list") (r "^0.1.2") (d #t) (k 0)) (d (n "typed-builder") (r "^0.9.0") (d #t) (k 0)) (d (n "uds") (r "^0.2.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(windows)") (k 1)) (d (n "xxhash-rust") (r "^0.8.0") (f (quote ("xxh3" "const_xxh3"))) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.0") (f (quote ("const_xxh3" "xxh3"))) (d #t) (k 2)))) (h "0nfh1k3gzvqxvw816kd9a19xnh8r2i1g0wmw7fshd99mhyykcfgw") (f (quote (("std") ("llmp_small_maps") ("llmp_debug" "backtrace") ("llmp_compression") ("llmp_bind_public") ("introspection") ("derive" "libafl_derive") ("default" "std" "anymap_debug" "derive" "llmp_compression") ("anymap_debug" "serde_json"))))))

(define-public crate-libafl-0.3.1 (c (n "libafl") (v "0.3.1") (d (list (d (n "ahash") (r "^0.6.1") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (f (quote ("std" "libbacktrace"))) (o #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "compression") (r "^0.1.5") (d #t) (k 0)) (d (n "core_affinity") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1.20") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.12") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.9") (f (quote ("serde" "ahash-compile-time-rng"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "libafl_derive") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "lock_api") (r "^0.4.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 2)) (d (n "num_enum") (r "^0.5.1") (d #t) (k 0)) (d (n "postcard") (r "^0.5.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (t "cfg(unix)") (k 0)) (d (n "rustc_version") (r "^0.3.3") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tuple_list") (r "^0.1.2") (d #t) (k 0)) (d (n "typed-builder") (r "^0.9.0") (d #t) (k 0)) (d (n "uds") (r "^0.2.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(windows)") (k 1)) (d (n "xxhash-rust") (r "^0.8.0") (f (quote ("xxh3" "const_xxh3"))) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.0") (f (quote ("const_xxh3" "xxh3"))) (d #t) (k 2)))) (h "18hrs5d7kjdjf4ldhan6ywmgpgabdpczncsfp6ip8ybl5xpbc3d6") (f (quote (("std") ("llmp_small_maps") ("llmp_debug" "backtrace") ("llmp_compression") ("llmp_bind_public") ("introspection") ("derive" "libafl_derive") ("default" "std" "anymap_debug" "derive" "llmp_compression") ("anymap_debug" "serde_json"))))))

(define-public crate-libafl-0.3.2 (c (n "libafl") (v "0.3.2") (d (list (d (n "ahash") (r "^0.6.1") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (f (quote ("std" "libbacktrace"))) (o #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "compression") (r "^0.1.5") (d #t) (k 0)) (d (n "core_affinity") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1.20") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.12") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.9") (f (quote ("serde" "ahash-compile-time-rng"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "libafl_derive") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "lock_api") (r "^0.4.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 2)) (d (n "num_enum") (r "^0.5.1") (d #t) (k 0)) (d (n "postcard") (r "^0.5.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (t "cfg(unix)") (k 0)) (d (n "rustc_version") (r "^0.3.3") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tuple_list") (r "^0.1.2") (d #t) (k 0)) (d (n "typed-builder") (r "^0.9.0") (d #t) (k 0)) (d (n "uds") (r "^0.2.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(windows)") (k 1)) (d (n "xxhash-rust") (r "^0.8.0") (f (quote ("xxh3" "const_xxh3"))) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.0") (f (quote ("const_xxh3" "xxh3"))) (d #t) (k 2)))) (h "14awfmpy8fcrbwj9ypxpp3zdsng630cin00r67fxkl4d8vn1460r") (f (quote (("std") ("llmp_small_maps") ("llmp_debug" "backtrace") ("llmp_compression") ("llmp_bind_public") ("introspection") ("derive" "libafl_derive") ("default" "std" "anymap_debug" "derive" "llmp_compression") ("anymap_debug" "serde_json"))))))

(define-public crate-libafl-0.4.0 (c (n "libafl") (v "0.4.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "ahash") (r "^0.7") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (f (quote ("std" "libbacktrace"))) (o #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "core_affinity") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1.20") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.12") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.9") (f (quote ("serde" "ahash-compile-time-rng"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "libafl_derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "lock_api") (r "^0.4.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "miniz_oxide") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 2)) (d (n "num_enum") (r "^0.5.1") (d #t) (k 0)) (d (n "postcard") (r "^0.5.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (t "cfg(unix)") (k 0)) (d (n "rustc_version") (r "^0.3.3") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tuple_list") (r "^0.1.2") (d #t) (k 0)) (d (n "typed-builder") (r "^0.9.0") (d #t) (k 0)) (d (n "uds") (r "^0.2.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(windows)") (k 1)) (d (n "xxhash-rust") (r "^0.8.2") (f (quote ("xxh3"))) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.2") (f (quote ("xxh3"))) (d #t) (k 2)))) (h "0741aib0jvd6cly2grak2kyhdapvn5afvybpr73y6gplf48b44pg") (f (quote (("std" "serde_json") ("rand_trait" "rand_core") ("llmp_small_maps") ("llmp_debug" "backtrace") ("llmp_compression" "miniz_oxide") ("llmp_bind_public") ("introspection") ("derive" "libafl_derive") ("default" "std" "anymap_debug" "derive" "llmp_compression") ("anymap_debug" "serde_json"))))))

(define-public crate-libafl-0.5.0 (c (n "libafl") (v "0.5.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "ahash") (r "^0.7") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (f (quote ("std" "libbacktrace"))) (o #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "core_affinity") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1.20") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.12") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.9") (f (quote ("serde" "ahash-compile-time-rng"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "libafl_derive") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "lock_api") (r "^0.4.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "miniz_oxide") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 2)) (d (n "num_enum") (r "^0.5.1") (d #t) (k 0)) (d (n "postcard") (r "^0.5.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (t "cfg(unix)") (k 0)) (d (n "rustc_version") (r "^0.3.3") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tuple_list") (r "^0.1.2") (d #t) (k 0)) (d (n "typed-builder") (r "^0.9.0") (d #t) (k 0)) (d (n "uds") (r "^0.2.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(windows)") (k 1)) (d (n "xxhash-rust") (r "^0.8.2") (f (quote ("xxh3"))) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.2") (f (quote ("xxh3"))) (d #t) (k 2)))) (h "1bkq8npj14jl20inqx847arn73j51kpd06zzyn994zscdk9321lf") (f (quote (("std" "serde_json") ("rand_trait" "rand_core") ("llmp_small_maps") ("llmp_debug" "backtrace") ("llmp_compression" "miniz_oxide") ("llmp_bind_public") ("introspection") ("derive" "libafl_derive") ("default" "std" "anymap_debug" "derive" "llmp_compression") ("anymap_debug" "serde_json"))))))

(define-public crate-libafl-0.6.0 (c (n "libafl") (v "0.6.0") (d (list (d (n "ahash") (r "^0.7") (f (quote ("compile-time-rng"))) (k 0)) (d (n "ahash") (r "^0.7") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (f (quote ("std" "libbacktrace"))) (o #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "core_affinity") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1.20") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.12") (f (quote ("alloc"))) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.9") (f (quote ("serde" "ahash-compile-time-rng"))) (k 0)) (d (n "hostname") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libafl_derive") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "lock_api") (r "^0.4.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "miniz_oxide") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4.0") (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 2)) (d (n "num_enum") (r "^0.5.1") (k 0)) (d (n "postcard") (r "^0.5.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (t "cfg(unix)") (k 0)) (d (n "rustc_version") (r "^0.3.3") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 2)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tuple_list") (r "^0.1.2") (d #t) (k 0)) (d (n "typed-builder") (r "^0.9.0") (d #t) (k 0)) (d (n "uds") (r "^0.2.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "wait-timeout") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.18.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.18.0") (d #t) (t "cfg(windows)") (k 1)) (d (n "xxhash-rust") (r "^0.8.2") (f (quote ("xxh3"))) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.2") (f (quote ("xxh3"))) (d #t) (k 2)) (d (n "z3") (r "^0.10") (o #t) (d #t) (k 0)))) (h "18kfm24c2czjlm00m8nkx08dchhy288gyv8mx5nwqlnz7zpm1291") (f (quote (("std" "serde_json" "hostname" "core_affinity" "nix" "serde/std" "bincode" "wait-timeout") ("rand_trait" "rand_core") ("llmp_small_maps") ("llmp_debug" "backtrace") ("llmp_compression" "miniz_oxide") ("llmp_bind_public") ("introspection") ("derive" "libafl_derive") ("default" "std" "anymap_debug" "derive" "llmp_compression") ("concolic_mutation" "z3") ("anymap_debug" "serde_json"))))))

(define-public crate-libafl-0.6.1 (c (n "libafl") (v "0.6.1") (d (list (d (n "ahash") (r "^0.7") (f (quote ("compile-time-rng"))) (k 0)) (d (n "ahash") (r "^0.7") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (f (quote ("std" "libbacktrace"))) (o #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "core_affinity") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1.20") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.12") (f (quote ("alloc"))) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.9") (f (quote ("serde" "ahash-compile-time-rng"))) (k 0)) (d (n "hostname") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libafl_derive") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "lock_api") (r "^0.4.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "miniz_oxide") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4.0") (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 2)) (d (n "num_enum") (r "^0.5.1") (k 0)) (d (n "postcard") (r "^0.5.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (t "cfg(unix)") (k 0)) (d (n "rustc_version") (r "^0.3.3") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 2)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tuple_list") (r "^0.1.2") (d #t) (k 0)) (d (n "typed-builder") (r "^0.9.0") (d #t) (k 0)) (d (n "uds") (r "^0.2.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "wait-timeout") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.18.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.18.0") (d #t) (t "cfg(windows)") (k 1)) (d (n "xxhash-rust") (r "^0.8.2") (f (quote ("xxh3"))) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.2") (f (quote ("xxh3"))) (d #t) (k 2)) (d (n "z3") (r "^0.10") (o #t) (d #t) (k 0)))) (h "1n8a6jywa727qfvb0zhfql4xp6v21av55sh895x4430ysk5709gb") (f (quote (("std" "serde_json" "hostname" "core_affinity" "nix" "serde/std" "bincode" "wait-timeout") ("rand_trait" "rand_core") ("llmp_small_maps") ("llmp_debug" "backtrace") ("llmp_compression" "miniz_oxide") ("llmp_bind_public") ("introspection") ("derive" "libafl_derive") ("default" "std" "anymap_debug" "derive" "llmp_compression") ("concolic_mutation" "z3") ("anymap_debug" "serde_json"))))))

(define-public crate-libafl-0.7.0 (c (n "libafl") (v "0.7.0") (d (list (d (n "ahash") (r "^0.7") (f (quote ("compile-time-rng"))) (k 0)) (d (n "ahash") (r "^0.7") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "build_id") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "core_affinity") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1.20") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.12") (f (quote ("alloc"))) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "grammartec") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("serde" "ahash-compile-time-rng"))) (k 0)) (d (n "hostname") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2.7") (f (quote ("serde"))) (k 0)) (d (n "libafl_derive") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "lock_api") (r "^0.4.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "miniz_oxide") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 2)) (d (n "num_enum") (r "^0.5.1") (k 0)) (d (n "postcard") (r "^0.7") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (t "cfg(unix)") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 2)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tuple_list") (r "^0.1.3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.9.0") (d #t) (k 0)) (d (n "uds") (r "^0.2.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "wait-timeout") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.18.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.18.0") (d #t) (t "cfg(windows)") (k 1)) (d (n "xxhash-rust") (r "^0.8.2") (f (quote ("xxh3"))) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.2") (f (quote ("xxh3"))) (d #t) (k 2)) (d (n "z3") (r "^0.11") (f (quote ("static-link-z3"))) (o #t) (d #t) (k 0)))) (h "1kx6m71pzvvr39cb3b10w45vckqyx0avwmw4381znnqbkg52cdhj") (f (quote (("std" "serde_json" "serde_json/std" "hostname" "core_affinity" "nix" "serde/std" "bincode" "wait-timeout" "regex" "build_id" "uuid") ("rand_trait" "rand_core") ("nautilus" "grammartec" "std" "serde_json/std") ("llmp_small_maps") ("llmp_debug") ("llmp_compression" "miniz_oxide") ("llmp_bind_public") ("introspection") ("gpl") ("fork") ("derive" "libafl_derive") ("default" "std" "anymap_debug" "derive" "llmp_compression" "rand_trait" "fork") ("concolic_mutation" "z3") ("anymap_debug" "serde_json") ("agpl" "gpl" "nautilus"))))))

(define-public crate-libafl-0.7.1 (c (n "libafl") (v "0.7.1") (d (list (d (n "ahash") (r "^0.7") (f (quote ("compile-time-rng"))) (k 0)) (d (n "ahash") (r "^0.7") (d #t) (k 2)) (d (n "backtrace") (r "^0.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "build_id") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "core_affinity") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctor") (r "^0.1.20") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.12") (f (quote ("alloc"))) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "grammartec") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("serde" "ahash-compile-time-rng"))) (k 0)) (d (n "hostname") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2.7") (f (quote ("serde"))) (k 0)) (d (n "libafl_derive") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "lock_api") (r "^0.4.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "miniz_oxide") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 2)) (d (n "num_enum") (r "^0.5.4") (k 0)) (d (n "postcard") (r "^0.7") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (t "cfg(unix)") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tuple_list") (r "^0.1.3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.9.1") (d #t) (k 0)) (d (n "uds") (r "^0.2.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "wait-timeout") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.29.0") (f (quote ("std" "Win32_Foundation" "Win32_System_Threading" "Win32_System_Diagnostics_Debug" "Win32_System_Kernel" "Win32_System_Memory" "Win32_Security"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.29.0") (d #t) (t "cfg(windows)") (k 1)) (d (n "xxhash-rust") (r "^0.8.2") (f (quote ("xxh3"))) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.2") (f (quote ("xxh3"))) (d #t) (k 2)) (d (n "z3") (r "^0.11") (f (quote ("static-link-z3"))) (o #t) (d #t) (k 0)))) (h "16la12afx7pjvz1akr7dx0vlsaq33rabwm10kzwi11q8si5yrsdv") (f (quote (("std" "serde_json" "serde_json/std" "hostname" "core_affinity" "nix" "serde/std" "bincode" "wait-timeout" "regex" "build_id" "uuid") ("rand_trait" "rand_core") ("nautilus" "grammartec" "std" "serde_json/std") ("llmp_small_maps") ("llmp_debug") ("llmp_compression" "miniz_oxide") ("llmp_bind_public") ("introspection") ("gpl") ("fork") ("derive" "libafl_derive") ("default" "std" "derive" "llmp_compression" "rand_trait" "fork") ("concolic_mutation" "z3") ("agpl" "gpl" "nautilus"))))))

(define-public crate-libafl-0.8.0 (c (n "libafl") (v "0.8.0") (d (list (d (n "ahash") (r "^0.7") (f (quote ("compile-time-rng"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive" "wrap_help"))) (o #t) (d #t) (k 0)) (d (n "concat-idents") (r "^1.1.3") (d #t) (k 0)) (d (n "crossterm") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.12") (f (quote ("alloc"))) (k 0)) (d (n "grammartec") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("serde" "ahash-compile-time-rng"))) (k 0)) (d (n "hostname") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2.7") (f (quote ("serde"))) (k 0)) (d (n "libafl_derive") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "lock_api") (r "^0.4.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "miniz_oxide") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "num_cpus") (r "^1.6.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.6.2") (d #t) (k 2)) (d (n "num_enum") (r "^0.5.4") (k 0)) (d (n "once_cell") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^0.7") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.15") (f (quote ("serde" "macros"))) (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (t "cfg(unix)") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tui") (r "^0.16") (f (quote ("crossterm"))) (o #t) (k 0)) (d (n "tuple_list") (r "^0.1.3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.9.1") (d #t) (k 0)) (d (n "uds") (r "^0.2.3") (d #t) (t "cfg(unix)") (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "wait-timeout") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("Win32_Foundation" "Win32_System_Threading" "Win32_System_Diagnostics_Debug" "Win32_System_Kernel" "Win32_System_Memory" "Win32_Security" "Win32_System_SystemInformation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.37.0") (d #t) (t "cfg(windows)") (k 1)) (d (n "xxhash-rust") (r "^0.8.2") (f (quote ("xxh3"))) (d #t) (k 0)) (d (n "z3") (r "^0.11") (f (quote ("static-link-z3"))) (o #t) (d #t) (k 0)))) (h "14fvq07pgzvcljm92p5b8r4fy60kkwmb70a6fa32jhz5ix7i2kq3") (f (quote (("tui_monitor" "tui" "crossterm") ("std" "serde_json" "serde_json/std" "hostname" "nix" "serde/std" "bincode" "wait-timeout" "regex" "byteorder" "once_cell" "uuid" "tui_monitor" "ctor" "backtrace" "num_cpus") ("rand_trait" "rand_core") ("qemu_cli" "cli") ("python" "pyo3") ("nautilus" "grammartec" "std" "serde_json/std") ("llmp_small_maps") ("llmp_debug") ("llmp_compression" "miniz_oxide") ("llmp_bind_public") ("introspection") ("gpl") ("frida_cli" "cli") ("fork") ("errors_backtrace" "backtrace") ("derive" "libafl_derive") ("default" "std" "derive" "llmp_compression" "rand_trait" "fork") ("concolic_mutation" "z3") ("cli" "clap") ("agpl" "gpl" "nautilus") ("afl_exec_sec"))))))

(define-public crate-libafl-0.8.1 (c (n "libafl") (v "0.8.1") (d (list (d (n "ahash") (r "^0.7") (f (quote ("compile-time-rng"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3.2") (f (quote ("derive" "wrap_help"))) (o #t) (d #t) (k 0)) (d (n "concat-idents") (r "^1.1.3") (d #t) (k 0)) (d (n "crossterm") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.21") (f (quote ("alloc"))) (k 0)) (d (n "grammartec") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("serde" "ahash-compile-time-rng"))) (k 0)) (d (n "hostname") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2.7") (f (quote ("serde"))) (k 0)) (d (n "libafl_derive") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "libm") (r "^0.2.2") (d #t) (k 0)) (d (n "lock_api") (r "^0.4.7") (d #t) (t "cfg(unix)") (k 0)) (d (n "miniz_oxide") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "num_enum") (r "^0.5.7") (k 0)) (d (n "once_cell") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.15") (f (quote ("serde" "macros"))) (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(unix)") (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "serial_test") (r "^0.8") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tui") (r "^0.18") (f (quote ("crossterm"))) (o #t) (k 0)) (d (n "tuple_list") (r "^0.1.3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "uds") (r "^0.2.6") (d #t) (t "cfg(unix)") (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "wait-timeout") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation" "Win32_System_Threading" "Win32_System_Diagnostics_Debug" "Win32_System_Kernel" "Win32_System_Memory" "Win32_Security" "Win32_System_SystemInformation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (d #t) (t "cfg(windows)") (k 1)) (d (n "xxhash-rust") (r "^0.8.5") (f (quote ("xxh3"))) (d #t) (k 0)) (d (n "z3") (r "^0.11") (f (quote ("static-link-z3"))) (o #t) (d #t) (k 0)))) (h "1wkarb0cdchwn37jaqavli2j5kpppi8019v2qjpijgjhhm15yv49") (f (quote (("tui_monitor" "tui" "crossterm") ("std" "serde_json" "serde_json/std" "hostname" "nix" "serde/std" "bincode" "wait-timeout" "regex" "byteorder" "once_cell" "uuid" "tui_monitor" "ctor" "backtrace") ("rand_trait" "rand_core") ("qemu_cli" "cli") ("python" "pyo3") ("nautilus" "grammartec" "std" "serde_json/std") ("llmp_small_maps") ("llmp_debug") ("llmp_compression" "miniz_oxide") ("llmp_bind_public") ("introspection") ("gpl") ("frida_cli" "cli") ("fork") ("errors_backtrace" "backtrace") ("derive" "libafl_derive") ("default" "std" "derive" "llmp_compression" "rand_trait" "fork") ("concolic_mutation" "z3") ("cli" "clap") ("agpl" "gpl" "nautilus") ("afl_exec_sec"))))))

(define-public crate-libafl-0.8.2 (c (n "libafl") (v "0.8.2") (d (list (d (n "ahash") (r "^0.7") (f (quote ("compile-time-rng"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3.2") (f (quote ("derive" "wrap_help"))) (o #t) (d #t) (k 0)) (d (n "concat-idents") (r "^1.1.3") (d #t) (k 0)) (d (n "crossterm") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.21") (f (quote ("alloc"))) (k 0)) (d (n "grammartec") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("serde" "ahash-compile-time-rng"))) (k 0)) (d (n "hostname") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2.7") (f (quote ("serde"))) (k 0)) (d (n "libafl_derive") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "libm") (r "^0.2.2") (d #t) (k 0)) (d (n "lock_api") (r "^0.4.7") (d #t) (t "cfg(unix)") (k 0)) (d (n "miniz_oxide") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "num_enum") (r "^0.5.7") (k 0)) (d (n "once_cell") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.15") (f (quote ("serde" "macros"))) (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(unix)") (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "serial_test") (r "^0.8") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tui") (r "^0.18") (f (quote ("crossterm"))) (o #t) (k 0)) (d (n "tuple_list") (r "^0.1.3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "uds") (r "^0.2.6") (d #t) (t "cfg(unix)") (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "wait-timeout") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation" "Win32_System_Threading" "Win32_System_Diagnostics_Debug" "Win32_System_Kernel" "Win32_System_Memory" "Win32_Security" "Win32_System_SystemInformation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (d #t) (t "cfg(windows)") (k 1)) (d (n "xxhash-rust") (r "^0.8.5") (f (quote ("xxh3"))) (d #t) (k 0)) (d (n "z3") (r "^0.11") (f (quote ("static-link-z3"))) (o #t) (d #t) (k 0)))) (h "0zq4zl8alyjyp8v3jqz65ys7yja480gii3059b5sblrcv8h0f10h") (f (quote (("tui_monitor" "tui" "crossterm") ("std" "serde_json" "serde_json/std" "hostname" "nix" "serde/std" "bincode" "wait-timeout" "regex" "byteorder" "once_cell" "uuid" "tui_monitor" "ctor" "backtrace") ("rand_trait" "rand_core") ("qemu_cli" "cli") ("python" "pyo3") ("prelude") ("nautilus" "grammartec" "std" "serde_json/std") ("llmp_small_maps") ("llmp_debug") ("llmp_compression" "miniz_oxide") ("llmp_bind_public") ("introspection") ("gpl") ("frida_cli" "cli") ("fork") ("errors_backtrace" "backtrace") ("derive" "libafl_derive") ("default" "std" "derive" "llmp_compression" "rand_trait" "fork" "prelude") ("concolic_mutation" "z3") ("cmin" "z3") ("cli" "clap") ("agpl" "gpl" "nautilus") ("afl_exec_sec"))))))

(define-public crate-libafl-0.9.0 (c (n "libafl") (v "0.9.0") (d (list (d (n "ahash") (r "^0.7") (k 0)) (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "c2rust-bitfields") (r "^0.3") (f (quote ("no_std"))) (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (o #t) (d #t) (k 0)) (d (n "concat-idents") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.21") (f (quote ("alloc"))) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (d #t) (k 0)) (d (n "grammartec") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("serde" "ahash-compile-time-rng"))) (k 0)) (d (n "hostname") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2.7") (f (quote ("serde"))) (k 0)) (d (n "libafl_derive") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "libm") (r "^0.2.2") (d #t) (k 0)) (d (n "lock_api") (r "^0.4.7") (d #t) (t "cfg(unix)") (k 0)) (d (n "miniz_oxide") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "num_enum") (r "^0.5.7") (k 0)) (d (n "once_cell") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "prometheus-client") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.17") (f (quote ("serde" "macros"))) (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "serial_test") (r "^0.9") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tide") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "tui") (r "^0.19") (f (quote ("crossterm"))) (o #t) (k 0)) (d (n "tuple_list") (r "^0.1.3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (d #t) (k 0)) (d (n "uds") (r "^0.2.6") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "wait-timeout") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.42.0") (f (quote ("Win32_Foundation" "Win32_System_Threading" "Win32_System_Diagnostics_Debug" "Win32_System_Kernel" "Win32_System_Memory" "Win32_Security" "Win32_System_SystemInformation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.42.0") (d #t) (t "cfg(windows)") (k 1)) (d (n "xxhash-rust") (r "^0.8.5") (f (quote ("xxh3"))) (d #t) (k 0)) (d (n "z3") (r "^0.11") (f (quote ("static-link-z3"))) (o #t) (d #t) (k 0)))) (h "0hw2wdyv9am11k9dscjkad9v7zdq6v82q8zpcj075sypin56cxv5") (f (quote (("tui_monitor" "tui" "crossterm") ("std" "serde_json" "serde_json/std" "hostname" "nix" "serde/std" "bincode" "wait-timeout" "regex" "byteorder" "once_cell" "uuid" "tui_monitor" "ctor" "backtrace" "uds") ("rand_trait" "rand_core") ("qemu_cli" "cli") ("python" "pyo3" "concat-idents") ("prometheus_monitor" "std" "async-std" "prometheus-client" "tide" "futures") ("prelude") ("nautilus" "grammartec" "std" "serde_json/std") ("llmp_small_maps") ("llmp_debug") ("llmp_compression" "gzip") ("llmp_broker_timeouts" "std") ("llmp_bind_public") ("introspection") ("gzip" "miniz_oxide") ("gpl") ("frida_cli" "cli") ("fork") ("errors_backtrace" "backtrace") ("derive" "libafl_derive") ("default" "std" "derive" "llmp_compression" "llmp_small_maps" "llmp_broker_timeouts" "rand_trait" "fork" "prelude" "gzip") ("corpus_btreemap") ("concolic_mutation" "z3") ("cmin" "z3") ("cli" "clap") ("agpl" "gpl" "nautilus") ("afl_exec_sec"))))))

(define-public crate-libafl-0.10.0 (c (n "libafl") (v "0.10.0") (d (list (d (n "ahash") (r "^0.8") (k 0)) (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bytecount") (r "^0.6.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "c2rust-bitfields") (r "^0.17") (f (quote ("no_std"))) (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (o #t) (d #t) (k 0)) (d (n "concat-idents") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.21") (f (quote ("alloc"))) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (d #t) (k 0)) (d (n "grammartec") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("serde" "ahash"))) (k 0)) (d (n "hostname") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2.7") (f (quote ("serde"))) (k 0)) (d (n "libafl_derive") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "libcasr") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.2.2") (d #t) (k 0)) (d (n "lock_api") (r "^0.4.7") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miniz_oxide") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "num_enum") (r "^0.5.7") (k 0)) (d (n "once_cell") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "prometheus-client") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.17") (f (quote ("serde" "macros"))) (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "serial_test") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tide") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "tui") (r "^0.19") (f (quote ("crossterm"))) (o #t) (k 0)) (d (n "tuple_list") (r "^0.1.3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.14") (d #t) (k 0)) (d (n "uds") (r "^0.2.6") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "wait-timeout") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.44") (f (quote ("Win32_Foundation" "Win32_System_Threading" "Win32_System_Diagnostics_Debug" "Win32_System_Kernel" "Win32_System_Memory" "Win32_Security" "Win32_System_SystemInformation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.44") (d #t) (t "cfg(windows)") (k 1)) (d (n "xxhash-rust") (r "^0.8.5") (f (quote ("xxh3"))) (d #t) (k 0)) (d (n "z3") (r "^0.11") (f (quote ("static-link-z3"))) (o #t) (d #t) (k 0)))) (h "109iqmif43nxwr74z6dgbv51mdigpns91grhbpj42v68823sb6n5") (f (quote (("tui_monitor" "tui" "crossterm") ("std" "serde_json" "serde_json/std" "hostname" "nix" "serde/std" "bincode" "wait-timeout" "byteorder" "once_cell" "uuid" "tui_monitor" "ctor" "backtrace" "uds") ("rand_trait" "rand_core") ("qemu_cli" "cli") ("python" "pyo3" "concat-idents") ("prometheus_monitor" "std" "async-std" "prometheus-client" "tide" "futures") ("prelude") ("nautilus" "grammartec" "std" "serde_json/std") ("llmp_small_maps") ("llmp_debug") ("llmp_compression" "gzip") ("llmp_broker_timeouts" "std") ("llmp_bind_public") ("introspection") ("gzip" "miniz_oxide") ("gpl") ("frida_cli" "cli") ("fork") ("errors_backtrace" "backtrace") ("derive" "libafl_derive") ("default" "std" "derive" "llmp_compression" "llmp_small_maps" "llmp_broker_timeouts" "rand_trait" "fork" "prelude" "gzip" "regex") ("corpus_btreemap") ("concolic_mutation" "z3") ("cmin" "z3") ("cli" "clap") ("casr" "libcasr" "std" "regex") ("agpl" "gpl" "nautilus") ("afl_exec_sec")))) (s 2) (e (quote (("regex" "std" "dep:regex"))))))

(define-public crate-libafl-0.10.1 (c (n "libafl") (v "0.10.1") (d (list (d (n "ahash") (r "^0.8") (k 0)) (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bytecount") (r "^0.6.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "c2rust-bitfields") (r "^0.17") (f (quote ("no_std"))) (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (o #t) (d #t) (k 0)) (d (n "concat-idents") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.21") (f (quote ("alloc"))) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (d #t) (k 0)) (d (n "grammartec") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("serde" "ahash"))) (k 0)) (d (n "hostname") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2.7") (f (quote ("serde"))) (k 0)) (d (n "libafl_derive") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "libcasr") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.2.2") (d #t) (k 0)) (d (n "lock_api") (r "^0.4.7") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miniz_oxide") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "num_enum") (r "^0.5.7") (k 0)) (d (n "once_cell") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "prometheus-client") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.18.3") (f (quote ("serde" "macros"))) (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "serial_test") (r "^1") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tide") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "tui") (r "^0.19") (f (quote ("crossterm"))) (o #t) (k 0)) (d (n "tuple_list") (r "^0.1.3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.14") (d #t) (k 0)) (d (n "uds") (r "^0.2.6") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "wait-timeout") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.44") (f (quote ("Win32_Foundation" "Win32_System_Threading" "Win32_System_Diagnostics_Debug" "Win32_System_Kernel" "Win32_System_Memory" "Win32_Security" "Win32_System_SystemInformation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.44") (d #t) (t "cfg(windows)") (k 1)) (d (n "xxhash-rust") (r "^0.8.5") (f (quote ("xxh3"))) (d #t) (k 0)) (d (n "z3") (r "^0.11") (f (quote ("static-link-z3"))) (o #t) (d #t) (k 0)))) (h "1xl7y7i8f9rh8c77smgffgjzkd49a5b513cr7fp8z7yvmwlgbkkd") (f (quote (("tui_monitor" "tui" "crossterm") ("std" "serde_json" "serde_json/std" "hostname" "nix" "serde/std" "bincode" "wait-timeout" "byteorder" "once_cell" "uuid" "tui_monitor" "ctor" "backtrace" "uds" "serial_test") ("rand_trait" "rand_core") ("qemu_cli" "cli") ("python" "pyo3" "concat-idents") ("prometheus_monitor" "std" "async-std" "prometheus-client" "tide" "futures") ("prelude") ("nautilus" "grammartec" "std" "serde_json/std") ("llmp_small_maps") ("llmp_debug") ("llmp_compression" "gzip") ("llmp_broker_timeouts" "std") ("llmp_bind_public") ("introspection") ("gzip" "miniz_oxide") ("gpl") ("frida_cli" "cli") ("fork") ("errors_backtrace" "backtrace") ("derive" "libafl_derive") ("default" "std" "derive" "llmp_compression" "llmp_small_maps" "llmp_broker_timeouts" "rand_trait" "fork" "prelude" "gzip" "regex") ("corpus_btreemap") ("concolic_mutation" "z3") ("cmin" "z3") ("cli" "clap") ("casr" "libcasr" "std" "regex") ("agpl" "gpl" "nautilus") ("afl_exec_sec")))) (s 2) (e (quote (("regex" "std" "dep:regex"))))))

(define-public crate-libafl-0.11.0 (c (n "libafl") (v "0.11.0") (d (list (d (n "ahash") (r "^0.8") (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bytecount") (r "^0.6.3") (d #t) (k 2)) (d (n "c2rust-bitfields") (r "^0.17") (f (quote ("no_std"))) (d #t) (k 0)) (d (n "concat-idents") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (d #t) (k 0)) (d (n "grammartec") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("serde" "ahash"))) (k 0)) (d (n "libafl_bolts") (r "^0.11.0") (f (quote ("alloc"))) (k 0)) (d (n "libafl_derive") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "libcasr") (r "^2.7") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "meminterval") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "prometheus-client") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.18.3") (f (quote ("serde" "macros"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "serial_test") (r "^2") (f (quote ("logging"))) (o #t) (k 0)) (d (n "tide") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("sync" "net" "rt" "io-util" "macros"))) (o #t) (d #t) (k 0)) (d (n "tui") (r "^0.19") (f (quote ("crossterm"))) (o #t) (k 0)) (d (n "tuple_list") (r "^0.1.3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.15.2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "wait-timeout") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.51.1") (f (quote ("Win32_Foundation" "Win32_System_Threading" "Win32_System_Diagnostics_Debug" "Win32_System_Kernel" "Win32_System_Memory" "Win32_Security" "Win32_System_SystemInformation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.51.1") (d #t) (t "cfg(windows)") (k 1)) (d (n "z3") (r "^0.12.0") (f (quote ("static-link-z3"))) (o #t) (d #t) (k 0)))) (h "1qjkmcklyfq200bxwyxcbny27ckd2kqgmfg65k4hbw942hqgln0l") (f (quote (("tui_monitor" "tui" "crossterm") ("tcp_manager" "tokio" "std") ("std" "serde_json" "serde_json/std" "nix" "serde/std" "bincode" "wait-timeout" "uuid" "backtrace" "serial_test" "libafl_bolts/std" "typed-builder") ("serdeany_autoreg" "libafl_bolts/serdeany_autoreg") ("rand_trait" "libafl_bolts/rand_trait") ("qemu_cli" "cli" "libafl_bolts/qemu_cli") ("python" "pyo3" "concat-idents" "libafl_bolts/python") ("prometheus_monitor" "std" "async-std" "prometheus-client" "tide" "futures") ("prelude" "libafl_bolts/prelude") ("nautilus" "grammartec" "std" "serde_json/std") ("llmp_small_maps" "libafl_bolts/llmp_small_maps") ("llmp_debug" "libafl_bolts/llmp_debug") ("llmp_compression" "libafl_bolts/llmp_compression") ("llmp_broker_timeouts" "std") ("llmp_bind_public" "libafl_bolts/llmp_bind_public") ("introspection") ("gzip" "libafl_bolts/gzip") ("frida_cli" "cli" "libafl_bolts/frida_cli") ("fork" "libafl_bolts/derive") ("errors_backtrace" "libafl_bolts/errors_backtrace") ("derive" "libafl_derive" "libafl_bolts/derive") ("default" "std" "derive" "llmp_compression" "llmp_small_maps" "llmp_broker_timeouts" "rand_trait" "fork" "prelude" "gzip" "regex" "serdeany_autoreg" "tui_monitor") ("corpus_btreemap") ("concolic_mutation" "z3") ("cmin" "z3") ("cli" "libafl_bolts/cli") ("casr" "libcasr" "std" "regex") ("agpl" "nautilus") ("afl_exec_sec") ("adaptive_serialization")))) (s 2) (e (quote (("regex" "std" "dep:regex"))))))

(define-public crate-libafl-0.11.1 (c (n "libafl") (v "0.11.1") (d (list (d (n "ahash") (r "^0.8") (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bytecount") (r "^0.6.3") (d #t) (k 2)) (d (n "c2rust-bitfields") (r "^0.17") (f (quote ("no_std"))) (d #t) (k 0)) (d (n "concat-idents") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (d #t) (k 0)) (d (n "grammartec") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("serde" "ahash"))) (k 0)) (d (n "libafl_bolts") (r "^0.11.1") (f (quote ("alloc"))) (k 0)) (d (n "libafl_derive") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "libcasr") (r "^2.7") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "meminterval") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "prometheus-client") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.18.3") (f (quote ("serde" "macros"))) (o #t) (d #t) (k 0)) (d (n "ratatui") (r "^0.23.0") (f (quote ("crossterm"))) (o #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "serial_test") (r "^2") (f (quote ("logging"))) (o #t) (k 0)) (d (n "tide") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("sync" "net" "rt" "io-util" "macros"))) (o #t) (d #t) (k 0)) (d (n "tuple_list") (r "^0.1.3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.15.2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "wait-timeout") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.51.1") (f (quote ("Win32_Foundation" "Win32_System_Threading" "Win32_System_Diagnostics_Debug" "Win32_System_Kernel" "Win32_System_Memory" "Win32_Security" "Win32_System_SystemInformation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.51.1") (d #t) (t "cfg(windows)") (k 1)) (d (n "z3") (r "^0.12.0") (f (quote ("static-link-z3"))) (o #t) (d #t) (k 0)))) (h "1092gmwqkabpil6fhbbgmxfzwqlr1smds24lckp9h3l6z3q7n82r") (f (quote (("tui_monitor" "ratatui" "crossterm") ("tcp_manager" "tokio" "std") ("std" "serde_json" "serde_json/std" "nix" "serde/std" "bincode" "wait-timeout" "uuid" "backtrace" "serial_test" "libafl_bolts/std" "typed-builder") ("serdeany_autoreg" "libafl_bolts/serdeany_autoreg") ("rand_trait" "libafl_bolts/rand_trait") ("qemu_cli" "cli" "libafl_bolts/qemu_cli") ("python" "pyo3" "concat-idents" "libafl_bolts/python") ("prometheus_monitor" "std" "async-std" "prometheus-client" "tide" "futures") ("prelude" "libafl_bolts/prelude") ("nautilus" "grammartec" "std" "serde_json/std") ("llmp_small_maps" "libafl_bolts/llmp_small_maps") ("llmp_debug" "libafl_bolts/llmp_debug") ("llmp_compression" "libafl_bolts/llmp_compression") ("llmp_broker_timeouts" "std") ("llmp_bind_public" "libafl_bolts/llmp_bind_public") ("introspection") ("gzip" "libafl_bolts/gzip") ("frida_cli" "cli" "libafl_bolts/frida_cli") ("fork" "libafl_bolts/derive") ("errors_backtrace" "libafl_bolts/errors_backtrace") ("derive" "libafl_derive" "libafl_bolts/derive") ("default" "std" "derive" "llmp_compression" "llmp_small_maps" "llmp_broker_timeouts" "rand_trait" "fork" "prelude" "gzip" "regex" "serdeany_autoreg" "tui_monitor" "libafl_bolts/xxh3") ("corpus_btreemap") ("concolic_mutation" "z3") ("cmin" "z3") ("cli" "libafl_bolts/cli") ("casr" "libcasr" "std" "regex") ("agpl" "nautilus") ("afl_exec_sec") ("adaptive_serialization")))) (s 2) (e (quote (("regex" "std" "dep:regex") ("document-features" "dep:document-features"))))))

(define-public crate-libafl-0.11.2 (c (n "libafl") (v "0.11.2") (d (list (d (n "ahash") (r "^0.8") (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bitvec") (r "^1.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "bytecount") (r "^0.6.3") (d #t) (k 2)) (d (n "c2rust-bitfields") (r "^0.18") (f (quote ("no_std"))) (d #t) (k 0)) (d (n "concat-idents") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (d #t) (k 0)) (d (n "grammartec") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("serde" "ahash"))) (k 0)) (d (n "libafl_bolts") (r "^0.11.2") (f (quote ("alloc"))) (k 0)) (d (n "libafl_derive") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "libcasr") (r "^2.7") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "meminterval") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "prometheus-client") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.18") (f (quote ("serde" "macros"))) (o #t) (d #t) (k 0)) (d (n "ratatui") (r "^0.23.0") (f (quote ("crossterm"))) (o #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (o #t) (d #t) (k 1)) (d (n "rustversion") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "serial_test") (r "^2") (f (quote ("logging"))) (o #t) (k 0)) (d (n "tide") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("sync" "net" "rt" "io-util" "macros"))) (o #t) (d #t) (k 0)) (d (n "tuple_list") (r "^0.1.3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "wait-timeout") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.51.1") (f (quote ("Win32_Foundation" "Win32_System_Threading" "Win32_System_Diagnostics_Debug" "Win32_System_Kernel" "Win32_System_Memory" "Win32_Security" "Win32_System_SystemInformation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.51.1") (d #t) (t "cfg(windows)") (k 1)) (d (n "z3") (r "^0.12.0") (f (quote ("static-link-z3"))) (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6") (o #t) (d #t) (k 1)))) (h "0n3wk0n4v78y75v9h2jg2vrrqf9yp64rpg93q0cwfllfpk8za858") (f (quote (("unicode" "libafl_bolts/alloc" "ahash/std" "serde/rc" "bitvec" "reqwest" "zip") ("tui_monitor" "ratatui" "crossterm") ("tcp_manager" "tokio" "std") ("std" "serde_json" "serde_json/std" "nix" "serde/std" "bincode" "wait-timeout" "uuid" "backtrace" "serial_test" "libafl_bolts/std" "typed-builder") ("serdeany_autoreg" "libafl_bolts/serdeany_autoreg") ("scalability_introspection") ("rand_trait" "libafl_bolts/rand_trait") ("qemu_cli" "cli" "libafl_bolts/qemu_cli") ("python" "pyo3" "concat-idents" "libafl_bolts/python") ("prometheus_monitor" "std" "async-std" "prometheus-client" "tide" "futures") ("prelude" "libafl_bolts/prelude") ("nautilus" "grammartec" "std" "serde_json/std") ("llmp_small_maps" "libafl_bolts/llmp_small_maps") ("llmp_debug" "libafl_bolts/llmp_debug") ("llmp_compression" "libafl_bolts/llmp_compression") ("llmp_broker_timeouts" "std") ("llmp_bind_public" "libafl_bolts/llmp_bind_public") ("introspection") ("gzip" "libafl_bolts/gzip") ("frida_cli" "cli" "libafl_bolts/frida_cli") ("fork" "libafl_bolts/derive") ("errors_backtrace" "libafl_bolts/errors_backtrace") ("derive" "libafl_derive" "libafl_bolts/derive") ("default" "std" "derive" "llmp_compression" "llmp_small_maps" "llmp_broker_timeouts" "rand_trait" "fork" "prelude" "gzip" "regex" "serdeany_autoreg" "tui_monitor" "libafl_bolts/xxh3") ("corpus_btreemap") ("concolic_mutation" "z3") ("cmin" "z3") ("cli" "libafl_bolts/cli") ("casr" "libcasr" "std" "regex") ("agpl" "nautilus") ("afl_exec_sec") ("adaptive_serialization")))) (s 2) (e (quote (("regex" "std" "dep:regex") ("document-features" "dep:document-features"))))))

(define-public crate-libafl-0.12.0 (c (n "libafl") (v "0.12.0") (d (list (d (n "ahash") (r "^0.8") (k 0)) (d (n "arrayvec") (r "^0.7.4") (o #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bitvec") (r "^1.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "bytecount") (r "^0.6.3") (d #t) (k 2)) (d (n "c2rust-bitfields") (r "^0.18") (f (quote ("no_std"))) (d #t) (k 0)) (d (n "concat-idents") (r "^1.1.3") (o #t) (d #t) (k 0)) (d (n "const_format") (r "^0.2.32") (d #t) (k 0)) (d (n "const_panic") (r "^0.2.8") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (d #t) (k 0)) (d (n "grammartec") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("serde" "ahash"))) (k 0)) (d (n "libafl_bolts") (r "^0.12.0") (f (quote ("alloc"))) (k 0)) (d (n "libafl_derive") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(unix)") (k 0)) (d (n "libcasr") (r "^2.7") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "meminterval") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "nix") (r "^0.27") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "prometheus-client") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "ratatui") (r "^0.23.0") (f (quote ("crossterm"))) (o #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (o #t) (d #t) (k 1)) (d (n "rustversion") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "serial_test") (r "^2") (f (quote ("logging"))) (o #t) (k 0)) (d (n "tide") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("sync" "net" "rt" "io-util" "macros"))) (o #t) (d #t) (k 0)) (d (n "tuple_list") (r "^0.1.3") (d #t) (k 0)) (d (n "typed-builder") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "wait-timeout") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.51.1") (f (quote ("Win32_Foundation" "Win32_System_Threading" "Win32_System_Diagnostics_Debug" "Win32_System_Kernel" "Win32_System_Memory" "Win32_Security" "Win32_System_SystemInformation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.51.1") (d #t) (t "cfg(windows)") (k 1)) (d (n "z3") (r "^0.12.0") (f (quote ("static-link-z3"))) (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6") (o #t) (d #t) (k 1)))) (h "0n2nm69kvbincl2zy8wfiyn8bdhxry264annvqp9a27vyq6waxxm") (f (quote (("unicode" "libafl_bolts/alloc" "ahash/std" "serde/rc" "bitvec" "reqwest" "zip") ("tui_monitor" "ratatui" "crossterm") ("tcp_manager" "tokio" "std") ("std" "serde_json" "serde_json/std" "nix" "serde/std" "bincode" "wait-timeout" "uuid" "backtrace" "serial_test" "libafl_bolts/std" "typed-builder") ("serdeany_autoreg" "libafl_bolts/serdeany_autoreg") ("scalability_introspection") ("rand_trait" "libafl_bolts/rand_trait") ("qemu_cli" "cli" "libafl_bolts/qemu_cli") ("prometheus_monitor" "std" "async-std" "prometheus-client" "tide" "futures") ("prelude" "libafl_bolts/prelude") ("nautilus" "grammartec" "std" "serde_json/std") ("multipart_inputs" "arrayvec" "rand_trait") ("llmp_small_maps" "libafl_bolts/llmp_small_maps") ("llmp_debug" "std" "libafl_bolts/llmp_debug") ("llmp_compression" "libafl_bolts/llmp_compression") ("llmp_broker_timeouts" "std") ("llmp_bind_public" "libafl_bolts/llmp_bind_public") ("introspection") ("handle_sigpipe") ("gzip" "libafl_bolts/gzip") ("frida_cli" "cli" "libafl_bolts/frida_cli") ("fork" "libafl_bolts/derive") ("errors_backtrace" "libafl_bolts/errors_backtrace") ("derive" "libafl_derive" "libafl_bolts/derive") ("default" "std" "derive" "llmp_compression" "llmp_small_maps" "llmp_broker_timeouts" "rand_trait" "fork" "prelude" "gzip" "regex" "serdeany_autoreg" "tui_monitor" "libafl_bolts/xxh3") ("corpus_btreemap") ("concolic_mutation" "z3") ("cmin" "z3") ("cli" "libafl_bolts/cli") ("casr" "libcasr" "std" "regex") ("agpl" "nautilus") ("afl_exec_sec") ("adaptive_serialization")))) (s 2) (e (quote (("regex" "std" "dep:regex") ("document-features" "dep:document-features"))))))

