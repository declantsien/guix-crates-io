(define-module (crates-io li br librice) #:use-module (crates-io))

(define-public crate-librice-0.0.1 (c (n "librice") (v "0.0.1") (d (list (d (n "async-channel") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crc") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5") (d #t) (k 0)) (d (n "hmac") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "sha-1") (r "^0.9") (d #t) (k 0)))) (h "08l19f94pgq0d76ykwksxzi4zpmm1q3439zxkpjz3v2glhi8jqyp")))

(define-public crate-librice-0.0.2 (c (n "librice") (v "0.0.2") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "async-channel") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crc") (r "^2") (d #t) (k 0)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std" "std-future"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "env-filter"))) (d #t) (k 0)))) (h "0qq269q4qvngkgqjna6sfak38ff5c9svws4iy1wi1ch10v49dywn")))

(define-public crate-librice-0.0.3 (c (n "librice") (v "0.0.3") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "async-channel") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std" "std-future" "futures-03"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "env-filter"))) (d #t) (k 0)))) (h "0yy9m578kcpk08rczwg0accz1vkqghyh5rh2cqychad2d1m7npkb")))

