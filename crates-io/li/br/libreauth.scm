(define-module (crates-io li br libreauth) #:use-module (crates-io))

(define-public crate-libreauth-0.5.2 (c (n "libreauth") (v "0.5.2") (d (list (d (n "base32") (r "^0.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.31") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.15") (d #t) (k 0)) (d (n "time") (r "^0.1.31") (d #t) (k 0)))) (h "12zgg31971hypbnb6r1cb9am97gkrw0v7j0pqiar12ahbd9bjy8r") (f (quote (("cbindings" "libc"))))))

(define-public crate-libreauth-0.5.3 (c (n "libreauth") (v "0.5.3") (d (list (d (n "base32") (r "^0.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.31") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.15") (d #t) (k 0)) (d (n "time") (r "^0.1.31") (d #t) (k 0)))) (h "0rrk44fmzs8bss9fb1ksvk9s42mx67ryvb4gh533k2qv5rhqzr2i") (f (quote (("cbindings" "libc"))))))

(define-public crate-libreauth-0.6.0 (c (n "libreauth") (v "0.6.0") (d (list (d (n "base32") (r "^0.3.0") (d #t) (k 0)) (d (n "base64") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.3.1") (d #t) (k 0)) (d (n "hmac") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "nom") (r "^2.2.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "rust-argon2") (r "^0.3.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.4") (d #t) (k 0)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "time") (r "^0.1.31") (d #t) (k 0)))) (h "01aaga9qbkhklsyif11rrgfizysxd6jdn0vd1wvs6n4fnky8h3ki") (f (quote (("cbindings" "libc"))))))

(define-public crate-libreauth-0.6.1 (c (n "libreauth") (v "0.6.1") (d (list (d (n "base32") (r "^0.3.0") (d #t) (k 0)) (d (n "base64") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.3.1") (d #t) (k 0)) (d (n "hmac") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "nom") (r "^2.2.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "rust-argon2") (r "^0.3.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.4") (d #t) (k 0)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "time") (r "^0.1.31") (d #t) (k 0)))) (h "05sbahi1r340k298jjyb52irm8pgm8g0y2sw3bj5c9whyraa9yzh") (f (quote (("cbindings" "libc"))))))

(define-public crate-libreauth-0.7.0 (c (n "libreauth") (v "0.7.0") (d (list (d (n "base32") (r "^0.3.0") (d #t) (k 0)) (d (n "base64") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.3.1") (d #t) (k 0)) (d (n "hmac") (r "^0.6.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (o #t) (d #t) (k 0)) (d (n "nom") (r "^3.2.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "rust-argon2") (r "^0.3.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.7.0") (d #t) (k 0)) (d (n "time") (r "^0.1.31") (d #t) (k 0)))) (h "0iplvvk1p2ig564dqd4vzcpzw1f7knd76dfhpygz1wh02ngv1vaa") (f (quote (("cbindings" "libc"))))))

(define-public crate-libreauth-0.8.0 (c (n "libreauth") (v "0.8.0") (d (list (d (n "base32") (r "^0.3.0") (d #t) (k 0)) (d (n "base64") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.3.1") (d #t) (k 0)) (d (n "hmac") (r "^0.6.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (o #t) (d #t) (k 0)) (d (n "nom") (r "^3.2.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "rust-argon2") (r "^0.3.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.7.0") (d #t) (k 0)) (d (n "time") (r "^0.1.31") (d #t) (k 0)))) (h "1yv3ad7q59dw5bhqhcnvxy6h70lycm9r6dw47bcxsbdk12m0mbyw") (f (quote (("cbindings" "libc"))))))

(define-public crate-libreauth-0.9.0 (c (n "libreauth") (v "0.9.0") (d (list (d (n "base32") (r "^0.3.0") (d #t) (k 0)) (d (n "base64") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "hmac") (r "^0.6.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (o #t) (d #t) (k 0)) (d (n "nom") (r "^3.2.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "rust-argon2") (r "^0.3.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.7.0") (d #t) (k 0)) (d (n "sha3") (r "^0.7.3") (d #t) (k 0)) (d (n "time") (r "^0.1.31") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.5") (d #t) (k 0)))) (h "01s2sp2fr6yrdbzlpp8ha6ka5dcsfqhrsxly5ssr0h258k9srvyk") (f (quote (("cbindings" "libc"))))))

(define-public crate-libreauth-0.10.0 (c (n "libreauth") (v "0.10.0") (d (list (d (n "base32") (r "^0.3.0") (d #t) (k 0)) (d (n "base64") (r "^0.9.2") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "hmac") (r "^0.6.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.43") (o #t) (d #t) (k 0)) (d (n "nom") (r "^4.0.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.2.1") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)) (d (n "rust-argon2") (r "^0.3.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.7.0") (d #t) (k 0)) (d (n "sha3") (r "^0.7.3") (d #t) (k 0)) (d (n "time") (r "^0.1.31") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.5") (d #t) (k 0)))) (h "0wqkcn7n4iqva76xfv4mfr98grri7p5limci015dv4wam3m9fk2v") (f (quote (("cbindings" "libc"))))))

(define-public crate-libreauth-0.11.0 (c (n "libreauth") (v "0.11.0") (d (list (d (n "base32") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.6") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nom") (r "^4.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "rust-argon2") (r "^0.3") (d #t) (k 0)) (d (n "sha-1") (r "^0.7") (d #t) (k 0)) (d (n "sha2") (r "^0.7") (d #t) (k 0)) (d (n "sha3") (r "^0.7") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 0)))) (h "10bhd4yrnm0r7hnzl60yg8x4wli5pzsrdw6mg5hnw930bf2ka5cs") (f (quote (("cbindings" "libc"))))))

(define-public crate-libreauth-0.12.0 (c (n "libreauth") (v "0.12.0") (d (list (d (n "base32") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nom") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rust-argon2") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1") (o #t) (d #t) (k 0)))) (h "14fqxmzqgb5ncp4jblbv79p9kvpb1v4j2ybs990zd906hhrjswy1") (f (quote (("pass" "base64" "hmac" "key" "nom" "pbkdf2" "rust-argon2" "sha-1" "sha2" "sha3" "unicode-normalization") ("oath" "base32" "base64" "hex" "hmac" "sha-1" "sha2" "sha3" "time" "url") ("key" "base32" "base64" "hex" "rand") ("default" "key" "oath" "pass") ("cbindings" "libc"))))))

(define-public crate-libreauth-0.13.0 (c (n "libreauth") (v "0.13.0") (d (list (d (n "base32") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "crypto-mac") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nom") (r "^5.1.1") (o #t) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3") (o #t) (k 0)) (d (n "rust-argon2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1") (o #t) (d #t) (k 0)))) (h "1wylidvgacbg7syy347wi9xs1yfnyb0ihks2jvz6dvz2vkg7yxc1") (f (quote (("pass" "base64" "crypto-mac" "hash" "key" "nom" "pbkdf2" "rust-argon2" "unicode-normalization") ("oath" "base32" "base64" "hash" "hex" "url") ("key" "base32" "base64" "hex" "getrandom") ("hash" "hmac" "sha-1" "sha2" "sha3") ("default" "hash" "key" "oath" "pass") ("cbindings" "libc"))))))

(define-public crate-libreauth-0.14.0 (c (n "libreauth") (v "0.14.0") (d (list (d (n "base32") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "crypto-mac") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nom") (r "^6.0") (o #t) (k 0)) (d (n "pbkdf2") (r "^0.6") (o #t) (k 0)) (d (n "rust-argon2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1") (o #t) (d #t) (k 0)))) (h "1ij7q4m0b2169hm7px51lbkkfg76cxrc0v2nl09xgyk0zdgyzy47") (f (quote (("pass" "base64" "crypto-mac" "hash" "key" "nom" "pbkdf2" "rust-argon2" "unicode-normalization") ("oath-uri" "oath" "url") ("oath" "base32" "base64" "hash" "hex") ("key" "base32" "base64" "hex" "getrandom") ("hash" "hmac" "sha-1" "sha2" "sha3") ("default" "hash" "key" "oath" "pass") ("cbindings" "libc"))))))

(define-public crate-libreauth-0.14.1 (c (n "libreauth") (v "0.14.1") (d (list (d (n "base32") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "crypto-mac") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nom") (r "^6.0") (o #t) (k 0)) (d (n "pbkdf2") (r "^0.7") (o #t) (k 0)) (d (n "rust-argon2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1") (o #t) (d #t) (k 0)))) (h "123mida6pia4173l34927g8rgza000aklvprpiciczy0bd6xkw1h") (f (quote (("pass" "base64" "crypto-mac" "hash" "key" "nom" "pbkdf2" "rust-argon2" "unicode-normalization") ("oath-uri" "oath" "url") ("oath" "base32" "base64" "hash" "hex") ("key" "base32" "base64" "hex" "getrandom") ("hash" "hmac" "sha-1" "sha2" "sha3") ("default" "hash" "key" "oath" "pass") ("cbindings" "libc"))))))

(define-public crate-libreauth-0.15.0 (c (n "libreauth") (v "0.15.0") (d (list (d (n "base32") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "crypto-mac") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0") (o #t) (k 0)) (d (n "pbkdf2") (r "^0.11") (o #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1") (o #t) (d #t) (k 0)))) (h "08rx1llwvk6n9cfil49wgdd63ax1cyjs6z5gi2rrqzn63mybwxj2") (f (quote (("pass" "base64" "crypto-mac" "hash" "key" "nom" "pbkdf2" "rust-argon2" "unicode-normalization") ("oath-uri" "oath" "url") ("oath" "base32" "base64" "hash" "hex") ("key" "base32" "base64" "hex" "getrandom") ("hash" "hmac" "sha-1" "sha2" "sha3") ("default" "hash" "key" "oath" "pass") ("cbindings" "libc"))))))

(define-public crate-libreauth-0.16.0 (c (n "libreauth") (v "0.16.0") (d (list (d (n "base32") (r "^0.4.0") (o #t) (k 0)) (d (n "base64") (r "^0.21.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "crypto-mac") (r "^0.11.1") (o #t) (k 0)) (d (n "getrandom") (r "^0.2.9") (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hmac") (r "^0.12.1") (o #t) (k 0)) (d (n "libc") (r "^0.2.141") (o #t) (k 0)) (d (n "nom") (r "^7.1.3") (o #t) (k 0)) (d (n "pbkdf2") (r "^0.12.1") (o #t) (k 0)) (d (n "rust-argon2") (r "^1.0.0") (f (quote ("crossbeam-utils"))) (o #t) (k 0)) (d (n "sha-1") (r "^0.10.1") (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (o #t) (k 0)) (d (n "sha3") (r "^0.10.7") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (o #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (o #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (k 0)))) (h "1h66a4ac67dy8cxhxw53s2izxbjd06a7p1xs1dy8s0cbvrkajaxn") (f (quote (("stderror" "thiserror") ("pass" "base64" "crypto-mac" "hash" "key" "nom" "pbkdf2" "rust-argon2" "unicode-normalization") ("oath-uri" "oath" "url") ("oath" "base32" "base64" "hash" "hex") ("key" "base32" "base64" "hex" "getrandom") ("hash" "hmac" "sha-1" "sha2" "sha3") ("default" "hash" "key" "oath" "pass" "stderror") ("cbindings" "libc")))) (r "1.60")))

