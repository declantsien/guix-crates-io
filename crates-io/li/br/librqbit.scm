(define-module (crates-io li br librqbit) #:use-module (crates-io))

(define-public crate-librqbit-2.2.1 (c (n "librqbit") (v "2.2.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "axum") (r "^0.6") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bitvec") (r "^1") (d #t) (k 0)) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "crypto-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dht") (r "^2.2.1") (d #t) (k 0) (p "librqbit-dht")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "librqbit-core") (r "^2.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peer_binary_protocol") (r "^2.2.1") (d #t) (k 0) (p "librqbit-peer-protocol")) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha1w") (r "^2.2.1") (k 0) (p "librqbit-sha1-wrapper")) (d (n "size_format") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "014ixfybg42v74n2chg17a0hxwdzyjms09wmx5c0dm244kqnmvxf") (f (quote (("sha1-system" "sha1w/sha1-system") ("sha1-rust" "sha1w/sha1-rust") ("sha1-openssl" "sha1w/sha1-openssl") ("rust-tls" "reqwest/rustls-tls") ("default-tls" "reqwest/default-tls") ("default" "sha1-system" "default-tls"))))))

(define-public crate-librqbit-2.2.2 (c (n "librqbit") (v "2.2.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "axum") (r "^0.6") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bitvec") (r "^1") (d #t) (k 0)) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "crypto-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dht") (r "^2.2.2") (d #t) (k 0) (p "librqbit-dht")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "librqbit-core") (r "^2.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peer_binary_protocol") (r "^2.2.2") (d #t) (k 0) (p "librqbit-peer-protocol")) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha1w") (r "^2.2.1") (k 0) (p "librqbit-sha1-wrapper")) (d (n "size_format") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0y4qh0qv7cidkq22j5f74rjy4fxpq5biy0ciqfsgm7hd4x0pblbw") (f (quote (("sha1-system" "sha1w/sha1-system") ("sha1-rust" "sha1w/sha1-rust") ("sha1-openssl" "sha1w/sha1-openssl") ("rust-tls" "reqwest/rustls-tls") ("default-tls" "reqwest/default-tls") ("default" "sha1-system" "default-tls"))))))

(define-public crate-librqbit-3.0.0-beta.0 (c (n "librqbit") (v "3.0.0-beta.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "axum") (r "^0.6") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bitvec") (r "^1") (d #t) (k 0)) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "crypto-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dht") (r "^3.0.0") (d #t) (k 0) (p "librqbit-dht")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "librqbit-core") (r "^3.0.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peer_binary_protocol") (r "^3.0.0") (d #t) (k 0) (p "librqbit-peer-protocol")) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha1w") (r "^2.2.1") (k 0) (p "librqbit-sha1-wrapper")) (d (n "size_format") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1j8xxx8znhlbaw2hsvmg9jpjzcc8iaxn84ap90h28gnvspr838zp") (f (quote (("timed_existence") ("sha1-system" "sha1w/sha1-system") ("sha1-rust" "sha1w/sha1-rust") ("sha1-openssl" "sha1w/sha1-openssl") ("rust-tls" "reqwest/rustls-tls") ("default-tls" "reqwest/default-tls") ("default" "sha1-system" "default-tls"))))))

(define-public crate-librqbit-3.1.0 (c (n "librqbit") (v "3.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "axum") (r "^0.6") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bitvec") (r "^1") (d #t) (k 0)) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "crypto-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dht") (r "^3.0.0") (d #t) (k 0) (p "librqbit-dht")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "librqbit-core") (r "^3.0.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peer_binary_protocol") (r "^3.0.0") (d #t) (k 0) (p "librqbit-peer-protocol")) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha1w") (r "^2.2.1") (k 0) (p "librqbit-sha1-wrapper")) (d (n "size_format") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tower-http") (r "^0.4") (f (quote ("cors" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1fk2yqbwd0hlnfg0ncqbh3ckyivysb99cgxc0zh701l7vpkaad3k") (f (quote (("webui") ("timed_existence") ("sha1-system" "sha1w/sha1-system") ("sha1-rust" "sha1w/sha1-rust") ("sha1-openssl" "sha1w/sha1-openssl") ("rust-tls" "reqwest/rustls-tls") ("default-tls" "reqwest/default-tls") ("default" "sha1-system" "default-tls"))))))

(define-public crate-librqbit-4.0.0-beta.1 (c (n "librqbit") (v "4.0.0-beta.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "axum") (r "^0.7") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bitvec") (r "^1") (d #t) (k 0)) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "crypto-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dht") (r "^4.0.0-beta.1") (d #t) (k 0) (p "librqbit-dht")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "librqbit-core") (r "^3.1.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peer_binary_protocol") (r "^3.1.0") (d #t) (k 0) (p "librqbit-peer-protocol")) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha1w") (r "^2.2.1") (k 0) (p "librqbit-sha1-wrapper")) (d (n "size_format") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tower-http") (r "^0.5") (f (quote ("cors" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0ihp46xhiyahaqaz060hinx6fi3kha378pf516gkzrx683y23jng") (f (quote (("webui") ("timed_existence") ("sha1-system" "sha1w/sha1-system") ("sha1-rust" "sha1w/sha1-rust") ("sha1-openssl" "sha1w/sha1-openssl") ("rust-tls" "reqwest/rustls-tls") ("default-tls" "reqwest/default-tls") ("default" "sha1-system" "default-tls"))))))

(define-public crate-librqbit-4.0.0-beta.2 (c (n "librqbit") (v "4.0.0-beta.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "axum") (r "^0.7") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bitvec") (r "^1") (d #t) (k 0)) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "crypto-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dht") (r "^4.0.0-beta.2") (d #t) (k 0) (p "librqbit-dht")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "librqbit-core") (r "^3.1.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peer_binary_protocol") (r "^3.1.0") (d #t) (k 0) (p "librqbit-peer-protocol")) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha1w") (r "^2.2.1") (k 0) (p "librqbit-sha1-wrapper")) (d (n "size_format") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tower-http") (r "^0.5") (f (quote ("cors" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0w5z4n290zasnd7c0d73cvlbwkjv65pb731awlnx10ffhv5z08s8") (f (quote (("webui") ("timed_existence") ("sha1-system" "sha1w/sha1-system") ("sha1-rust" "sha1w/sha1-rust") ("sha1-openssl" "sha1w/sha1-openssl") ("rust-tls" "reqwest/rustls-tls") ("default-tls" "reqwest/default-tls") ("default" "sha1-system" "default-tls"))))))

(define-public crate-librqbit-4.0.0 (c (n "librqbit") (v "4.0.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "axum") (r "^0.7") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bitvec") (r "^1") (d #t) (k 0)) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "crypto-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dht") (r "^4.0.0") (d #t) (k 0) (p "librqbit-dht")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "librqbit-core") (r "^3.2.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peer_binary_protocol") (r "^3.2.1") (d #t) (k 0) (p "librqbit-peer-protocol")) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "serde_with") (r "^3.4.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha1w") (r "^2.2.1") (k 0) (p "librqbit-sha1-wrapper")) (d (n "size_format") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tower-http") (r "^0.5") (f (quote ("cors" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0d0p808bin5ljavp3sl7p6w8agbk18xa47wlp8dh57nq79kshxrk") (f (quote (("webui") ("timed_existence") ("sha1-system" "sha1w/sha1-system") ("sha1-rust" "sha1w/sha1-rust") ("sha1-openssl" "sha1w/sha1-openssl") ("rust-tls" "reqwest/rustls-tls") ("default-tls" "reqwest/default-tls") ("default" "sha1-system" "default-tls"))))))

(define-public crate-librqbit-5.0.0-beta.0 (c (n "librqbit") (v "5.0.0-beta.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "axum") (r "^0.7") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bitvec") (r "^1") (d #t) (k 0)) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "crypto-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dht") (r "^4.1.0") (d #t) (k 0) (p "librqbit-dht")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "librqbit-core") (r "^3.3.0") (d #t) (k 0)) (d (n "librqbit-upnp") (r "^0.1.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peer_binary_protocol") (r "^3.3.0") (d #t) (k 0) (p "librqbit-peer-protocol")) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "serde_with") (r "^3.4.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha1w") (r "^2.2.1") (k 0) (p "librqbit-sha1-wrapper")) (d (n "size_format") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tower-http") (r "^0.5") (f (quote ("cors" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1a2x3nn3z5nqg3r0q9vbfdv8cw8pbkc832g782m1394hw4w0z7m9") (f (quote (("webui") ("timed_existence") ("sha1-system" "sha1w/sha1-system") ("sha1-rust" "sha1w/sha1-rust") ("sha1-openssl" "sha1w/sha1-openssl") ("rust-tls" "reqwest/rustls-tls") ("default-tls" "reqwest/default-tls") ("default" "sha1-system" "default-tls"))))))

(define-public crate-librqbit-4.0.1 (c (n "librqbit") (v "4.0.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "axum") (r "^0.7") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bitvec") (r "^1") (d #t) (k 0)) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "crypto-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dht") (r "^4.0.0") (d #t) (k 0) (p "librqbit-dht")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "librqbit-core") (r "~3.2.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peer_binary_protocol") (r "~3.2.1") (d #t) (k 0) (p "librqbit-peer-protocol")) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "serde_with") (r "^3.4.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha1w") (r "^2.2.1") (k 0) (p "librqbit-sha1-wrapper")) (d (n "size_format") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tower-http") (r "^0.5") (f (quote ("cors" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1bs17lacc4ncsxbzql5swsclws563igjw80mf4gvb7y0n1jv7sm1") (f (quote (("webui") ("timed_existence") ("sha1-system" "sha1w/sha1-system") ("sha1-rust" "sha1w/sha1-rust") ("sha1-openssl" "sha1w/sha1-openssl") ("rust-tls" "reqwest/rustls-tls") ("default-tls" "reqwest/default-tls") ("default" "sha1-system" "default-tls"))))))

(define-public crate-librqbit-5.0.0 (c (n "librqbit") (v "5.0.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "axum") (r "^0.7") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bitvec") (r "^1") (d #t) (k 0)) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "crypto-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dht") (r "^5.0.0") (d #t) (k 0) (p "librqbit-dht")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "librqbit-core") (r "^3.4.0") (d #t) (k 0)) (d (n "librqbit-upnp") (r "^0.1.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peer_binary_protocol") (r "^3.4.0") (d #t) (k 0) (p "librqbit-peer-protocol")) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "serde_with") (r "^3.4.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha1w") (r "^2.2.1") (k 0) (p "librqbit-sha1-wrapper")) (d (n "size_format") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.10") (d #t) (k 0)) (d (n "tower-http") (r "^0.5") (f (quote ("cors" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1vn2kxvy8kpdawrkcjwpw2iss1b0cpp5phxyhzmih5swp7snz4gp") (f (quote (("webui") ("timed_existence") ("sha1-system" "sha1w/sha1-system") ("sha1-rust" "sha1w/sha1-rust") ("sha1-openssl" "sha1w/sha1-openssl") ("rust-tls" "reqwest/rustls-tls") ("default-tls" "reqwest/default-tls") ("default" "sha1-system" "default-tls"))))))

(define-public crate-librqbit-5.3.0 (c (n "librqbit") (v "5.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "axum") (r "^0.7") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bitvec") (r "^1") (d #t) (k 0)) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "crypto-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dht") (r "^5.0.0") (d #t) (k 0) (p "librqbit-dht")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "librqbit-core") (r "^3.4.0") (d #t) (k 0)) (d (n "librqbit-upnp") (r "^0.1.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peer_binary_protocol") (r "^3.4.0") (d #t) (k 0) (p "librqbit-peer-protocol")) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "serde_with") (r "^3.4.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha1w") (r "^2.2.1") (k 0) (p "librqbit-sha1-wrapper")) (d (n "size_format") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.10") (d #t) (k 0)) (d (n "tower-http") (r "^0.5") (f (quote ("cors" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("json" "fmt" "env-filter"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0h6sw32jx16lnbaapznwlb4kl94wbxv3yddl09azjzabicl1gw2k") (f (quote (("webui") ("timed_existence") ("sha1-system" "sha1w/sha1-system") ("sha1-rust" "sha1w/sha1-rust") ("sha1-openssl" "sha1w/sha1-openssl") ("rust-tls" "reqwest/rustls-tls") ("default-tls" "reqwest/default-tls") ("default" "sha1-system" "default-tls"))))))

(define-public crate-librqbit-5.4.1 (c (n "librqbit") (v "5.4.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "axum") (r "^0.7") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bitvec") (r "^1") (d #t) (k 0)) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "crypto-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dht") (r "^5.0.0") (d #t) (k 0) (p "librqbit-dht")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "librqbit-core") (r "^3.5.0") (d #t) (k 0)) (d (n "librqbit-upnp") (r "^0.1.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peer_binary_protocol") (r "^3.4.0") (d #t) (k 0) (p "librqbit-peer-protocol")) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json"))) (k 0)) (d (n "rlimit") (r "^0.10.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "serde_with") (r "^3.4.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha1w") (r "^2.2.1") (k 0) (p "librqbit-sha1-wrapper")) (d (n "size_format") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.10") (d #t) (k 0)) (d (n "tower-http") (r "^0.5") (f (quote ("cors" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("json" "fmt" "env-filter"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0cbl0nbczyfmfr17xz60kldprz1ipm3v440x03533qxlkbap6r8d") (f (quote (("webui") ("timed_existence") ("sha1-system" "sha1w/sha1-system") ("sha1-rust" "sha1w/sha1-rust") ("sha1-openssl" "sha1w/sha1-openssl") ("rust-tls" "reqwest/rustls-tls") ("default-tls" "reqwest/default-tls") ("default" "sha1-system" "default-tls"))))))

(define-public crate-librqbit-5.5.2 (c (n "librqbit") (v "5.5.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bitvec") (r "^1") (d #t) (k 0)) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "crypto-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dht") (r "^5.0.0") (d #t) (k 0) (p "librqbit-dht")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "librqbit-core") (r "^3.5.0") (d #t) (k 0)) (d (n "librqbit-upnp") (r "^0.1.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peer_binary_protocol") (r "^3.5.0") (d #t) (k 0) (p "librqbit-peer-protocol")) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (k 0)) (d (n "rlimit") (r "^0.10.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "serde_with") (r "^3.4.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha1w") (r "^2.2.1") (k 0) (p "librqbit-sha1-wrapper")) (d (n "size_format") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.10") (d #t) (k 0)) (d (n "tower-http") (r "^0.5") (f (quote ("cors" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("json" "fmt" "env-filter"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracker_comms") (r "^1.0.0") (k 0) (p "librqbit-tracker-comms")) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1gbp6fs85zs8abdffk778zfrxj5zw03g3fhfkiv4lhs433g94d0m") (f (quote (("webui") ("timed_existence") ("sha1-system" "sha1w/sha1-system") ("sha1-rust" "sha1w/sha1-rust") ("sha1-openssl" "sha1w/sha1-openssl") ("rust-tls" "reqwest/rustls-tls") ("default-tls" "reqwest/default-tls") ("default" "sha1-system" "default-tls"))))))

(define-public crate-librqbit-5.5.3 (c (n "librqbit") (v "5.5.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bitvec") (r "^1") (d #t) (k 0)) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "crypto-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dht") (r "^5.0.0") (d #t) (k 0) (p "librqbit-dht")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "librqbit-core") (r "^3.6.1") (d #t) (k 0)) (d (n "librqbit-upnp") (r "^0.1.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peer_binary_protocol") (r "^3.5.0") (d #t) (k 0) (p "librqbit-peer-protocol")) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (k 0)) (d (n "rlimit") (r "^0.10.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "serde_with") (r "^3.4.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha1w") (r "^2.2.1") (k 0) (p "librqbit-sha1-wrapper")) (d (n "size_format") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.10") (d #t) (k 0)) (d (n "tower-http") (r "^0.5") (f (quote ("cors" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("json" "fmt" "env-filter"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracker_comms") (r "^1.0.0") (k 0) (p "librqbit-tracker-comms")) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "11abgvqddypr4h8p7c2p142sr4zmdvw9k3r1g79drrl2xkddywph") (f (quote (("webui") ("timed_existence") ("sha1-system" "sha1w/sha1-system") ("sha1-rust" "sha1w/sha1-rust") ("sha1-openssl" "sha1w/sha1-openssl") ("rust-tls" "reqwest/rustls-tls") ("default-tls" "reqwest/default-tls") ("default" "sha1-system" "default-tls"))))))

(define-public crate-librqbit-5.5.4 (c (n "librqbit") (v "5.5.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bencode") (r "^2.2.2") (k 0) (p "librqbit-bencode")) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bitvec") (r "^1") (d #t) (k 0)) (d (n "buffers") (r "^3.0.0") (d #t) (k 0) (p "librqbit-buffers")) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "crypto-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dht") (r "^5.0.2") (d #t) (k 0) (p "librqbit-dht")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "librqbit-core") (r "^3.6.2") (d #t) (k 0)) (d (n "librqbit-upnp") (r "^0.1.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peer_binary_protocol") (r "^3.5.1") (d #t) (k 0) (p "librqbit-peer-protocol")) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (k 0)) (d (n "rlimit") (r "^0.10.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "serde_with") (r "^3.4.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha1w") (r "^3.0.0") (k 0) (p "librqbit-sha1-wrapper")) (d (n "size_format") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.10") (d #t) (k 0)) (d (n "tower-http") (r "^0.5") (f (quote ("cors" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("json" "fmt" "env-filter"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracker_comms") (r "^1.0.1") (k 0) (p "librqbit-tracker-comms")) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0cn33g134srv2z5hkwprld83ym75a8hih9cqrxyg95yfdsqi9qxw") (f (quote (("webui") ("timed_existence") ("rust-tls" "reqwest/rustls-tls") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-librqbit-5.6.0 (c (n "librqbit") (v "5.6.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bencode") (r "^2.2.2") (k 0) (p "librqbit-bencode")) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bitvec") (r "^1") (d #t) (k 0)) (d (n "buffers") (r "^3.0.0") (d #t) (k 0) (p "librqbit-buffers")) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "crypto-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dht") (r "^5.0.3") (d #t) (k 0) (p "librqbit-dht")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "librqbit-core") (r "^3.7.0") (d #t) (k 0)) (d (n "librqbit-upnp") (r "^0.1.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peer_binary_protocol") (r "^3.5.2") (d #t) (k 0) (p "librqbit-peer-protocol")) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (k 0)) (d (n "rlimit") (r "^0.10.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "serde_with") (r "^3.4.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha1w") (r "^3.0.0") (k 0) (p "librqbit-sha1-wrapper")) (d (n "size_format") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.10") (d #t) (k 0)) (d (n "tower-http") (r "^0.5") (f (quote ("cors" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("json" "fmt" "env-filter"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracker_comms") (r "^1.0.2") (k 0) (p "librqbit-tracker-comms")) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0ajfyhznsi8dznwsrc43cng0i3k01z576ahkbg34lsbn2svjpk6a") (f (quote (("webui") ("timed_existence") ("rust-tls" "reqwest/rustls-tls") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-librqbit-5.6.1 (c (n "librqbit") (v "5.6.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bencode") (r "^2.2.2") (k 0) (p "librqbit-bencode")) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bitvec") (r "^1") (d #t) (k 0)) (d (n "buffers") (r "^3.0.0") (d #t) (k 0) (p "librqbit-buffers")) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "crypto-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dht") (r "^5.0.3") (d #t) (k 0) (p "librqbit-dht")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "librqbit-core") (r "^3.8.0") (d #t) (k 0)) (d (n "librqbit-upnp") (r "^0.1.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peer_binary_protocol") (r "^3.5.3") (d #t) (k 0) (p "librqbit-peer-protocol")) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (k 0)) (d (n "rlimit") (r "^0.10.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "serde_with") (r "^3.4.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha1w") (r "^3.0.0") (k 0) (p "librqbit-sha1-wrapper")) (d (n "size_format") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.10") (d #t) (k 0)) (d (n "tower-http") (r "^0.5") (f (quote ("cors" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("json" "fmt" "env-filter"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracker_comms") (r "^1.0.2") (k 0) (p "librqbit-tracker-comms")) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "16s5v0s1wkn7di9db29rmwcd87cqx2mbs7v9gkiwp11k59wcy646") (f (quote (("webui") ("timed_existence") ("rust-tls" "reqwest/rustls-tls") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-librqbit-5.6.2 (c (n "librqbit") (v "5.6.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bencode") (r "^2.2.2") (k 0) (p "librqbit-bencode")) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bitvec") (r "^1") (d #t) (k 0)) (d (n "buffers") (r "^3.0.0") (d #t) (k 0) (p "librqbit-buffers")) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "crypto-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dht") (r "^5.0.3") (d #t) (k 0) (p "librqbit-dht")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "librqbit-core") (r "^3.8.0") (d #t) (k 0)) (d (n "librqbit-upnp") (r "^0.1.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peer_binary_protocol") (r "^3.5.3") (d #t) (k 0) (p "librqbit-peer-protocol")) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (k 0)) (d (n "rlimit") (r "^0.10.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "serde_with") (r "^3.4.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha1w") (r "^3.0.0") (k 0) (p "librqbit-sha1-wrapper")) (d (n "size_format") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.10") (d #t) (k 0)) (d (n "tower-http") (r "^0.5") (f (quote ("cors" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("json" "fmt" "env-filter"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracker_comms") (r "^1.0.2") (k 0) (p "librqbit-tracker-comms")) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "13mn3s6drjm8vg4123jvzgbbqax6kqngqk7pqkpmmvqm3153syxz") (f (quote (("webui") ("timed_existence") ("rust-tls" "reqwest/rustls-tls") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-librqbit-5.6.4 (c (n "librqbit") (v "5.6.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bencode") (r "^2.2.2") (k 0) (p "librqbit-bencode")) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "bitvec") (r "^1") (d #t) (k 0)) (d (n "buffers") (r "^3.0.0") (d #t) (k 0) (p "librqbit-buffers")) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "crypto-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dht") (r "^5.0.3") (d #t) (k 0) (p "librqbit-dht")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "librqbit-core") (r "^3.8.0") (d #t) (k 0)) (d (n "librqbit-upnp") (r "^0.1.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peer_binary_protocol") (r "^3.5.3") (d #t) (k 0) (p "librqbit-peer-protocol")) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (k 0)) (d (n "rlimit") (r "^0.10.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "serde_with") (r "^3.4.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha1w") (r "^3.0.0") (k 0) (p "librqbit-sha1-wrapper")) (d (n "size_format") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.10") (d #t) (k 0)) (d (n "tower-http") (r "^0.5") (f (quote ("cors" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("json" "fmt" "env-filter"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracker_comms") (r "^1.0.2") (k 0) (p "librqbit-tracker-comms")) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0a4x3r2sbmcq2dizh52rccny6whwmwygcna5y83mqqb759kjwrd1") (f (quote (("webui") ("timed_existence") ("rust-tls" "reqwest/rustls-tls") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

