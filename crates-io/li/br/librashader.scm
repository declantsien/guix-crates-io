(define-module (crates-io li br librashader) #:use-module (crates-io))

(define-public crate-librashader-0.1.0-alpha.1 (c (n "librashader") (v "0.1.0-alpha.1") (d (list (d (n "librashader-common") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-alpha.1") (d #t) (k 0)))) (h "1q8n7bwg76lddwsbhzp6h3gzs6xy6gab9c7mcgbpjhnwpm3h21q1") (f (quote (("gl" "librashader-common/opengl") ("d3d11" "librashader-common/d3d11"))))))

(define-public crate-librashader-0.1.0-alpha.2 (c (n "librashader") (v "0.1.0-alpha.2") (d (list (d (n "librashader-common") (r "^0.1.0-alpha.2") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-alpha.2") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-alpha.2") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-alpha.2") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-alpha.2") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-alpha.2") (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-alpha.2") (d #t) (k 0)))) (h "1dfzwkprl90v29lvgc6k5g2qvrx6wbhvpdpq97bql9j1dlv0x75y") (f (quote (("runtime") ("reflect") ("presets") ("preprocess") ("gl" "runtime" "librashader-common/opengl") ("default" "gl" "d3d11" "reflect" "preprocess" "presets") ("d3d11" "runtime" "librashader-common/d3d11"))))))

(define-public crate-librashader-0.1.0-alpha.3 (c (n "librashader") (v "0.1.0-alpha.3") (d (list (d (n "librashader-common") (r "^0.1.0-alpha.3") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-alpha.3") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-alpha.3") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-alpha.3") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-alpha.3") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-alpha.3") (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-alpha.3") (d #t) (k 0)))) (h "0gpvzl7016hmw677y756zcxj9fq9drbpl8w4scckqywkv6cnjzjr") (f (quote (("runtime") ("reflect") ("presets") ("preprocess") ("gl" "runtime" "librashader-common/opengl") ("default" "gl" "d3d11" "reflect" "preprocess" "presets") ("d3d11" "runtime" "librashader-common/d3d11"))))))

(define-public crate-librashader-0.1.0-alpha.4 (c (n "librashader") (v "0.1.0-alpha.4") (d (list (d (n "librashader-common") (r "^0.1.0-alpha.4") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-alpha.4") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-alpha.4") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-alpha.4") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-alpha.4") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-alpha.4") (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-alpha.4") (d #t) (k 0)))) (h "16xxczwv642jz7l64072xr1apgvsmm98nnr8abqi5nr59dwwzp0m") (f (quote (("runtime") ("reflect") ("presets") ("preprocess") ("gl" "runtime" "librashader-common/opengl") ("default" "gl" "d3d11" "reflect" "preprocess" "presets") ("d3d11" "runtime" "librashader-common/d3d11"))))))

(define-public crate-librashader-0.1.0-alpha.5 (c (n "librashader") (v "0.1.0-alpha.5") (d (list (d (n "librashader-common") (r "^0.1.0-alpha.5") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-alpha.5") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-alpha.5") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-alpha.5") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-alpha.5") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-alpha.5") (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-alpha.5") (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-alpha.5") (d #t) (k 0)))) (h "1xr5mdd3whc1g8sb1asagcr3yx85r1sjsc83jl216ayk3jkwi76h") (f (quote (("vk" "runtime" "librashader-common/vulkan") ("runtime") ("reflect") ("presets") ("preprocess") ("gl" "runtime" "librashader-common/opengl") ("default" "gl" "d3d11" "vk" "reflect" "preprocess" "presets") ("d3d11" "runtime" "librashader-common/d3d11"))))))

(define-public crate-librashader-0.1.0-alpha.6 (c (n "librashader") (v "0.1.0-alpha.6") (d (list (d (n "librashader-common") (r "^0.1.0-alpha.6") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-alpha.6") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-alpha.6") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-alpha.6") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-alpha.6") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-alpha.6") (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-alpha.6") (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-alpha.6") (d #t) (k 0)))) (h "0qjf6n7s3c28x1m48v48ms5aam0skmiwxdm0ffzshhc2v7m4czr9") (f (quote (("vk" "runtime" "librashader-common/vulkan") ("runtime") ("reflect") ("presets") ("preprocess") ("gl" "runtime" "librashader-common/opengl") ("default" "gl" "d3d11" "vk" "reflect" "preprocess" "presets") ("d3d11" "runtime" "librashader-common/d3d11"))))))

(define-public crate-librashader-0.1.0-beta.1 (c (n "librashader") (v "0.1.0-beta.1") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-beta.1") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-beta.1") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-beta.1") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-beta.1") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-beta.1") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-beta.1") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-beta.1") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-beta.1") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.43.0") (f (quote ("Win32_Graphics_Direct3D11"))) (o #t) (d #t) (k 0)))) (h "0bk23h1p78fnr5p4v2l7s1f4yszzjf7s6yyiskl749bgv4p6z3cn") (f (quote (("vk" "runtime" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime") ("reflect") ("presets") ("preprocess") ("gl" "runtime" "librashader-common/opengl" "librashader-runtime-gl") ("default" "gl" "d3d11" "vk" "reflect" "preprocess" "presets") ("d3d11" "runtime" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows"))))))

(define-public crate-librashader-0.1.0-beta.2 (c (n "librashader") (v "0.1.0-beta.2") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-beta.2") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-beta.2") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-beta.2") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-beta.2") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-beta.2") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-beta.2") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-beta.2") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-beta.2") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.43.0") (f (quote ("Win32_Graphics_Direct3D11"))) (o #t) (d #t) (k 0)))) (h "1bjrdr6q9n4s9b6bhaivsmxn1cxki0inkrn2cflidfr4zj7qaiy1") (f (quote (("vk" "runtime" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime") ("reflect") ("presets") ("preprocess") ("gl" "runtime" "librashader-common/opengl" "librashader-runtime-gl") ("default" "gl" "d3d11" "vk" "reflect" "preprocess" "presets") ("d3d11" "runtime" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows"))))))

(define-public crate-librashader-0.1.0-beta.3 (c (n "librashader") (v "0.1.0-beta.3") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-beta.3") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-beta.3") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-beta.3") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-beta.3") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-beta.3") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-beta.3") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-beta.3") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-beta.3") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.43.0") (f (quote ("Win32_Graphics_Direct3D11"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0zw3f675nj7gn5dsvvv1sv2qp6jwki23q218ysgzksc080rnkjfy") (f (quote (("vk" "runtime" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime") ("reflect") ("presets") ("preprocess") ("gl" "runtime" "librashader-common/opengl" "librashader-runtime-gl") ("default" "gl" "d3d11" "vk" "reflect" "preprocess" "presets") ("d3d11" "runtime" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows"))))))

(define-public crate-librashader-0.1.0-beta.4 (c (n "librashader") (v "0.1.0-beta.4") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-beta.4") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-beta.4") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-beta.4") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-beta.4") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-beta.4") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-beta.4") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-beta.4") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-beta.4") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.43.0") (f (quote ("Win32_Graphics_Direct3D11"))) (o #t) (d #t) (k 0)))) (h "16a3ssyb5j6pxf76gs93qizhyihl2xa4aj4asydxmspv7zr82cmk") (f (quote (("vk" "runtime" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime") ("reflect") ("presets") ("preprocess") ("gl" "runtime" "librashader-common/opengl" "librashader-runtime-gl") ("default" "gl" "d3d11" "vk" "reflect" "preprocess" "presets") ("d3d11" "runtime" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows"))))))

(define-public crate-librashader-0.1.0-beta.5 (c (n "librashader") (v "0.1.0-beta.5") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-beta.5") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-beta.5") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-beta.5") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-beta.5") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-beta.5") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-beta.5") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-beta.5") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-beta.5") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.43.0") (f (quote ("Win32_Graphics_Direct3D11"))) (o #t) (d #t) (k 0)))) (h "0a2gfs6wbgpzwxi2rqjx95gb05vawx3hhwwdkhwnrzv1d1qykc9r") (f (quote (("vk" "runtime" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime") ("reflect") ("presets") ("preprocess") ("gl" "runtime" "librashader-common/opengl" "librashader-runtime-gl") ("default" "gl" "d3d11" "vk" "reflect" "preprocess" "presets") ("d3d11" "runtime" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows"))))))

(define-public crate-librashader-0.1.0-beta.6 (c (n "librashader") (v "0.1.0-beta.6") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-beta.6") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-beta.6") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-beta.6") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-beta.6") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-beta.6") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-beta.6") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-beta.6") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-beta.6") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.43.0") (f (quote ("Win32_Graphics_Direct3D11"))) (o #t) (d #t) (k 0)))) (h "1qfbndk54a7wsk0dvqj6w13fnskhf5gwx4jnj8hvb30q0i3d6shg") (f (quote (("vk" "runtime" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime") ("reflect") ("presets") ("preprocess") ("gl" "runtime" "librashader-common/opengl" "librashader-runtime-gl") ("default" "gl" "d3d11" "vk" "reflect" "preprocess" "presets") ("d3d11" "runtime" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows"))))))

(define-public crate-librashader-0.1.0-beta.7 (c (n "librashader") (v "0.1.0-beta.7") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-beta.7") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-beta.7") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-beta.7") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-beta.7") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-beta.7") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-beta.7") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-beta.7") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-beta.7") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.43.0") (f (quote ("Win32_Graphics_Direct3D11"))) (o #t) (d #t) (k 0)))) (h "1lmrsww6z6672cslhmzxccbi0szcl57p3irm103sj9x8bsgx8px5") (f (quote (("vk" "runtime" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime") ("reflect") ("presets") ("preprocess") ("gl" "runtime" "librashader-common/opengl" "librashader-runtime-gl") ("default" "gl" "d3d11" "vk" "reflect" "preprocess" "presets") ("d3d11" "runtime" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows"))))))

(define-public crate-librashader-0.1.0-beta.8 (c (n "librashader") (v "0.1.0-beta.8") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-beta.8") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-beta.8") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-beta.8") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-beta.8") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-beta.8") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-beta.8") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-beta.8") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-beta.8") (o #t) (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23") (f (quote ("glsl"))) (o #t) (d #t) (k 0) (p "librashader-spirv-cross")) (d (n "windows") (r "^0.44.0") (f (quote ("Win32_Graphics_Direct3D11"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "01l692mxjs702bn966qayq3z9xk39xnbkkxsc61mpsp9i1p27cx7") (f (quote (("vk" "runtime" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime") ("reflect") ("presets") ("preprocess") ("internal") ("gl" "runtime" "librashader-common/opengl" "librashader-runtime-gl" "spirv_cross") ("default" "gl" "d3d11" "vk" "reflect" "preprocess" "presets") ("d3d11" "runtime" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows"))))))

(define-public crate-librashader-0.1.0-beta.9 (c (n "librashader") (v "0.1.0-beta.9") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-beta.9") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-beta.9") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-beta.9") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-beta.9") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-beta.9") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-beta.9") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-beta.9") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-beta.9") (o #t) (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23") (f (quote ("glsl"))) (o #t) (d #t) (k 0) (p "librashader-spirv-cross")) (d (n "windows") (r "^0.44.0") (f (quote ("Win32_Graphics_Direct3D11"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1sjfbvypg2yv5yzg18pg358372cprj124y6yzwwl5hydrzkjcxva") (f (quote (("vk" "runtime" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime") ("reflect") ("presets") ("preprocess") ("internal") ("gl" "runtime" "librashader-common/opengl" "librashader-runtime-gl" "spirv_cross") ("default" "gl" "d3d11" "vk" "reflect" "preprocess" "presets") ("d3d11" "runtime" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows"))))))

(define-public crate-librashader-0.1.0-beta.10 (c (n "librashader") (v "0.1.0-beta.10") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-beta.10") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-beta.10") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-beta.10") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-beta.10") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-beta.10") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-beta.10") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-beta.10") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-beta.10") (o #t) (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23") (f (quote ("glsl"))) (o #t) (d #t) (k 0) (p "librashader-spirv-cross")) (d (n "windows") (r "^0.44.0") (f (quote ("Win32_Graphics_Direct3D11"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "05ssmjcdv81pwmvgg57ad4p8yx3ww856harf0j228m1hb6svlnjr") (f (quote (("vk" "runtime" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime") ("reflect") ("presets") ("preprocess") ("internal") ("gl" "runtime" "librashader-common/opengl" "librashader-runtime-gl" "spirv_cross") ("default" "gl" "d3d11" "vk" "reflect" "preprocess" "presets") ("d3d11" "runtime" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows"))))))

(define-public crate-librashader-0.1.0-beta.11 (c (n "librashader") (v "0.1.0-beta.11") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-beta.11") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-beta.11") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-beta.11") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-beta.11") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-beta.11") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-beta.11") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.1.0-beta.11") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-beta.11") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-beta.11") (o #t) (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23") (f (quote ("glsl" "hlsl"))) (o #t) (d #t) (k 0) (p "librashader-spirv-cross")) (d (n "windows") (r "^0.44.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1xzyk3jf09hcfkf6m48djqq77vig78l2q9svxn5dlxmyxjcync9l") (f (quote (("vk" "runtime" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime") ("reflect") ("presets") ("preprocess") ("internal") ("gl" "runtime" "librashader-common/opengl" "librashader-runtime-gl" "spirv_cross") ("default" "gl" "d3d11" "d3d12" "vk" "reflect" "preprocess" "presets") ("d3d12" "runtime" "librashader-common/d3d11" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("d3d11" "runtime" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11"))))))

(define-public crate-librashader-0.1.0-beta.12 (c (n "librashader") (v "0.1.0-beta.12") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-beta.12") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-beta.12") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-beta.12") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-beta.12") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-beta.12") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-beta.12") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.1.0-beta.12") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-beta.12") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-beta.12") (o #t) (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23") (f (quote ("glsl" "hlsl"))) (o #t) (d #t) (k 0) (p "librashader-spirv-cross")) (d (n "windows") (r "^0.44.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "09g5hghpk5sgcy755b3rw6vkn91bfwcgxx4bv9bkslypackd9w7r") (f (quote (("vk" "runtime" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime") ("reflect") ("presets") ("preprocess") ("internal") ("gl" "runtime" "librashader-common/opengl" "librashader-runtime-gl" "spirv_cross") ("default" "gl" "d3d11" "d3d12" "vk" "reflect" "preprocess" "presets") ("d3d12" "runtime" "librashader-common/d3d11" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("d3d11" "runtime" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11"))))))

(define-public crate-librashader-0.1.0-beta.13 (c (n "librashader") (v "0.1.0-beta.13") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-beta.13") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-beta.13") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-beta.13") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-beta.13") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-beta.13") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-beta.13") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.1.0-beta.13") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-beta.13") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-beta.13") (o #t) (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23") (f (quote ("glsl" "hlsl"))) (o #t) (d #t) (k 0) (p "librashader-spirv-cross")) (d (n "windows") (r "^0.44.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0l951lg53nmnm1lcjl81zpqkcic040hhkrili5m9fd1jggfwzsxz") (f (quote (("vk" "runtime" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime") ("reflect") ("presets") ("preprocess") ("internal") ("gl" "runtime" "librashader-common/opengl" "librashader-runtime-gl" "spirv_cross") ("default" "gl" "d3d11" "d3d12" "vk" "reflect" "preprocess" "presets") ("d3d12" "runtime" "librashader-common/d3d11" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("d3d11" "runtime" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11"))))))

(define-public crate-librashader-0.1.0-beta.14 (c (n "librashader") (v "0.1.0-beta.14") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-beta.14") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-beta.14") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-beta.14") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-beta.14") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-beta.14") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-beta.14") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.1.0-beta.14") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-beta.14") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-beta.14") (o #t) (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23") (f (quote ("glsl" "hlsl"))) (o #t) (d #t) (k 0) (p "librashader-spirv-cross")) (d (n "windows") (r "^0.44.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1m1yjgp7w9hy88ii3rb5yv0qycd7v57513k1blq6pr61q34pfvd1") (f (quote (("vk" "runtime" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime") ("reflect") ("presets") ("preprocess") ("internal") ("gl" "runtime" "librashader-common/opengl" "librashader-runtime-gl" "spirv_cross") ("default" "gl" "d3d11" "d3d12" "vk" "reflect" "preprocess" "presets") ("d3d12" "runtime" "librashader-common/d3d11" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("d3d11" "runtime" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11"))))))

(define-public crate-librashader-0.1.0-beta.15 (c (n "librashader") (v "0.1.0-beta.15") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-beta.15") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-beta.15") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-beta.15") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-beta.15") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-beta.15") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-beta.15") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.1.0-beta.15") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-beta.15") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-beta.15") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.44.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1p3kb34q6685v1p0s31g3wxq2ax5bi563hbvssain7jksis1yccn") (f (quote (("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk") ("runtime") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil") ("reflect") ("presets") ("preprocess") ("internal") ("default" "runtime-all" "reflect-all" "preprocess" "presets"))))))

(define-public crate-librashader-0.1.0-beta.16 (c (n "librashader") (v "0.1.0-beta.16") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-beta.16") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-beta.16") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-beta.16") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-beta.16") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-beta.16") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-beta.16") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.1.0-beta.16") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-beta.16") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-beta.16") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.44.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1jl8qxwq20fy0mrj2wz7j3vkv6rblk019cns995ys1a00c4a9wvj") (f (quote (("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk") ("runtime") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil") ("reflect") ("presets") ("preprocess") ("internal") ("default" "runtime-all" "reflect-all" "preprocess" "presets"))))))

(define-public crate-librashader-0.1.0-beta.21 (c (n "librashader") (v "0.1.0-beta.21") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-beta.21") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-beta.21") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-beta.21") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-beta.21") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-beta.21") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-beta.21") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.1.0-beta.21") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-beta.21") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-beta.21") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.44.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0cf43xxj0g2b1p7zj3aw9qd37215gajk9wqv3p0k79x01n87jzby") (f (quote (("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk") ("runtime") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil") ("reflect") ("presets") ("preprocess") ("internal") ("default" "runtime-all" "reflect-all" "preprocess" "presets"))))))

(define-public crate-librashader-0.1.0-rc.1 (c (n "librashader") (v "0.1.0-rc.1") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-rc.1") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-rc.1") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.1.0-rc.1") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-rc.1") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-rc.1") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.44.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1993nw4lwdkh4n11pyhmv90r9khwd230vs62b9f1daq2c15pmzgv") (f (quote (("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk") ("runtime") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil") ("reflect") ("presets") ("preprocess") ("internal") ("default" "runtime-all" "reflect-all" "preprocess" "presets"))))))

(define-public crate-librashader-0.1.0-rc.2 (c (n "librashader") (v "0.1.0-rc.2") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-rc.2") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-rc.2") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-rc.2") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-rc.2") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-rc.2") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-rc.2") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.1.0-rc.2") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-rc.2") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-rc.2") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.44.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0i8kzd2ys0hs0sqjmnldrxxjl45r9lybb3qqidxp8cyddgpasn7k") (f (quote (("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk") ("runtime") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil") ("reflect") ("presets") ("preprocess") ("internal") ("default" "runtime-all" "reflect-all" "preprocess" "presets"))))))

(define-public crate-librashader-0.1.0-rc.3 (c (n "librashader") (v "0.1.0-rc.3") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-rc.3") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-rc.3") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-rc.3") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-rc.3") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-rc.3") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-rc.3") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.1.0-rc.3") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-rc.3") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-rc.3") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.44.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1zskwws82qwi14j7gykf4ysq6bw2qdh593kk7bn71r8lqgcagz7a") (f (quote (("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk") ("runtime") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil") ("reflect") ("presets") ("preprocess") ("internal") ("default" "runtime-all" "reflect-all" "preprocess" "presets"))))))

(define-public crate-librashader-0.1.0-rc.4 (c (n "librashader") (v "0.1.0-rc.4") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-rc.4") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-rc.4") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-rc.4") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-rc.4") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-rc.4") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-rc.4") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.1.0-rc.4") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-rc.4") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-rc.4") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.44.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "15lm18lpmh3568iavb13sfp7c6975iysmgiq29z6raaxzvjap2sl") (f (quote (("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk") ("runtime") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil") ("reflect") ("presets") ("preprocess") ("internal") ("default" "runtime-all" "reflect-all" "preprocess" "presets"))))))

(define-public crate-librashader-0.1.0-rc.5 (c (n "librashader") (v "0.1.0-rc.5") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-rc.5") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-rc.5") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-rc.5") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-rc.5") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-rc.5") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-rc.5") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.1.0-rc.5") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-rc.5") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-rc.5") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.44.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0r36w8spzhg6jhvyj1xs2cdm7n7gbf6nwd1a9g3jnp5x614yhlyl") (f (quote (("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk") ("runtime") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil") ("reflect") ("presets") ("preprocess") ("internal") ("default" "runtime-all" "reflect-all" "preprocess" "presets"))))))

(define-public crate-librashader-0.1.0-rc.6 (c (n "librashader") (v "0.1.0-rc.6") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-cache") (r "^0.1.0-rc.6") (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-rc.6") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-rc.6") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-rc.6") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-rc.6") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-rc.6") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-rc.6") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.1.0-rc.6") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-rc.6") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-rc.6") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.44.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0jsqcx74f0f5l1qjlll7xh47blknxir9dxxj88qw28va1fb21ylm") (f (quote (("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk") ("runtime") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs") ("default" "full"))))))

(define-public crate-librashader-0.1.0-rc.7 (c (n "librashader") (v "0.1.0-rc.7") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-cache") (r "^0.1.0-rc.7") (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0-rc.7") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0-rc.7") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0-rc.7") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0-rc.7") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0-rc.7") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0-rc.7") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.1.0-rc.7") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0-rc.7") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0-rc.7") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.44.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0sdj59dyivakxf8x72rwhbwq5mrb5h4xiv8pk0zx4c9lpvzv80zf") (f (quote (("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk") ("runtime") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs") ("default" "full"))))))

(define-public crate-librashader-0.1.0 (c (n "librashader") (v "0.1.0") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-cache") (r "^0.1.0") (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.0") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.0") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.0") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.0") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.0") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.44.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1xiwjr5lla43520nyypij66dj4j05hfszffhnrxvn8gl57qsbalr") (f (quote (("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk") ("runtime") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs") ("default" "full"))))))

(define-public crate-librashader-0.1.1 (c (n "librashader") (v "0.1.1") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-cache") (r "^0.1.1") (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.1") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.1") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.1") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.1") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.1") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.44.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1hi11yxg4cjp8bf97vrmkw44nqasy1pw4brzwbhrqm8vjh3hzzbm") (f (quote (("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk") ("runtime") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs") ("default" "full"))))))

(define-public crate-librashader-0.1.3 (c (n "librashader") (v "0.1.3") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-cache") (r "^0.1.3") (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.3") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.3") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.3") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.3") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.3") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.44.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0x5fx2z6ia5r652mf9i2hlkw9skjsmxsryqsclw0j0v5pxdsxshy") (f (quote (("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk") ("runtime") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs") ("default" "full"))))))

(define-public crate-librashader-0.1.4 (c (n "librashader") (v "0.1.4") (d (list (d (n "ash") (r "^0.37.1") (o #t) (d #t) (k 0)) (d (n "librashader-cache") (r "^0.1.4") (d #t) (k 0)) (d (n "librashader-common") (r "^0.1.4") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.1.4") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.1.4") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.1.4") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.1.4") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.48.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "10fxi9i5y38zbca810l7zwcglhflsmq6sfq8hlfqpynck926igw7") (f (quote (("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk") ("runtime") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.0-beta.2 (c (n "librashader") (v "0.2.0-beta.2") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "librashader-cache") (r "^0.2.0-beta.2") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.0-beta.2") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.0-beta.2") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.0-beta.2") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.0-beta.2") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.0-beta.2") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.0-beta.2") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.0-beta.2") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.0-beta.2") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.0-beta.2") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.48.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0v42zz3abv9z3bsvidslnv6q8naf7ljfq7c023chvnq9d32ya4v6") (f (quote (("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk") ("runtime") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.0-beta.3 (c (n "librashader") (v "0.2.0-beta.3") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "librashader-cache") (r "^0.2.0-beta.3") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.0-beta.3") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.0-beta.3") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.0-beta.3") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.0-beta.3") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.0-beta.3") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.0-beta.3") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.0-beta.3") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.0-beta.3") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.0-beta.3") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.48.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1v0njji8p607xwzicvj7y5hzbann2jy43lbp17mwrj98fwyvk1sl") (f (quote (("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk") ("runtime") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.0-beta.4 (c (n "librashader") (v "0.2.0-beta.4") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "librashader-cache") (r "^0.2.0-beta.4") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.0-beta.4") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.0-beta.4") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.0-beta.4") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.0-beta.4") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.0-beta.4") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.0-beta.4") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.0-beta.4") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.0-beta.4") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.0-beta.4") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-wgpu") (r "^0.2.0-beta.4") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.48.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0bj1b6wn0zwf5s7yslmqy10w2j6xwlzsr2d8pxbzklqh6msqj7dl") (f (quote (("runtime-wgpu" "runtime" "reflect-naga" "librashader-common/wgpu" "librashader-runtime-wgpu") ("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk" "runtime-wgpu") ("runtime") ("reflect-naga" "reflect" "librashader-reflect/naga") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil" "reflect-naga") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.0-beta.5 (c (n "librashader") (v "0.2.0-beta.5") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "librashader-cache") (r "^0.2.0-beta.5") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.0-beta.5") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.0-beta.5") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.0-beta.5") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.0-beta.5") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.0-beta.5") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.0-beta.5") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.0-beta.5") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.0-beta.5") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.0-beta.5") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-wgpu") (r "^0.2.0-beta.5") (o #t) (d #t) (k 0)) (d (n "wgpu") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.48.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1gack1mnl3gc99dcdlssp5dbfd2x9dalp6n8ipfyjdb57p58ykcw") (f (quote (("runtime-wgpu" "runtime" "reflect-naga" "librashader-common/wgpu" "librashader-runtime-wgpu" "wgpu") ("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk" "runtime-wgpu") ("runtime") ("reflect-naga" "reflect" "librashader-reflect/naga") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil" "reflect-naga") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.0-beta.6 (c (n "librashader") (v "0.2.0-beta.6") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "librashader-cache") (r "^0.2.0-beta.6") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.0-beta.6") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.0-beta.6") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.0-beta.6") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.0-beta.6") (f (quote ("standalone"))) (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.0-beta.6") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.0-beta.6") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.0-beta.6") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.0-beta.6") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.0-beta.6") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-wgpu") (r "^0.2.0-beta.6") (o #t) (d #t) (k 0)) (d (n "wgpu") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "wgpu-types") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.48.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1dfj2nky08bfd2nds25m7jqg4blv29kx9pig3ndvn82ymf87pgm7") (f (quote (("runtime-wgpu" "runtime" "reflect-naga" "librashader-common/wgpu" "librashader-runtime-wgpu" "wgpu" "wgpu-types") ("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk" "runtime-wgpu") ("runtime") ("reflect-naga" "reflect" "librashader-reflect/naga") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil" "reflect-naga") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.0-beta.7 (c (n "librashader") (v "0.2.0-beta.7") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "librashader-cache") (r "^0.2.0-beta.7") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.0-beta.7") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.0-beta.7") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.0-beta.7") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.0-beta.7") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.0-beta.7") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.0-beta.7") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.0-beta.7") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.0-beta.7") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.0-beta.7") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-wgpu") (r "^0.2.0-beta.7") (o #t) (d #t) (k 0)) (d (n "wgpu") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "wgpu-types") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.48.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "12vv3kca32sywx84cr2drfy18g44ggizx6272bp6jr8n7mvh0b64") (f (quote (("runtime-wgpu" "runtime" "reflect-naga" "librashader-common/wgpu" "librashader-runtime-wgpu" "wgpu" "wgpu-types") ("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk" "runtime-wgpu") ("runtime") ("reflect-naga" "reflect" "librashader-reflect/naga") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil" "reflect-naga") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.0-beta.8 (c (n "librashader") (v "0.2.0-beta.8") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "librashader-cache") (r "^0.2.0-beta.8") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.0-beta.8") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.0-beta.8") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.0-beta.8") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.0-beta.8") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.0-beta.8") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.0-beta.8") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.0-beta.8") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.0-beta.8") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.0-beta.8") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-wgpu") (r "^0.2.0-beta.8") (o #t) (d #t) (k 0)) (d (n "wgpu") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "wgpu-types") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.48.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0cdh5bar6sr6qgas4b5xgx86y2m9dda83a66w65l5ciasd8z396h") (f (quote (("runtime-wgpu" "runtime" "reflect-naga" "librashader-common/wgpu" "librashader-runtime-wgpu" "wgpu" "wgpu-types") ("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk" "runtime-wgpu") ("runtime") ("reflect-naga" "reflect" "librashader-reflect/naga") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil" "reflect-naga") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.0-beta.9 (c (n "librashader") (v "0.2.0-beta.9") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "librashader-cache") (r "^0.2.0-beta.9") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.0-beta.9") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.0-beta.9") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.0-beta.9") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.0-beta.9") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.0-beta.9") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.0-beta.9") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.0-beta.9") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.0-beta.9") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.0-beta.9") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-wgpu") (r "^0.2.0-beta.9") (o #t) (d #t) (k 0)) (d (n "wgpu") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "wgpu-types") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.48.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1i7ygnvx4znn5nd4ff4hhhpm8bqyj442cjmkvs5qqva1wcgp6mvb") (f (quote (("runtime-wgpu" "runtime" "reflect-naga" "librashader-common/wgpu" "librashader-runtime-wgpu" "wgpu" "wgpu-types") ("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk" "runtime-wgpu") ("runtime") ("reflect-naga" "reflect" "librashader-reflect/naga") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil" "reflect-naga") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.0-beta.11 (c (n "librashader") (v "0.2.0-beta.11") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "icrate") (r "^0.1.0") (f (quote ("Metal" "Metal_all"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "librashader-cache") (r "^0.2.0-beta.11") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.0-beta.11") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.0-beta.11") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.0-beta.11") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.0-beta.11") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.0-beta.11") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.0-beta.11") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.0-beta.11") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.0-beta.11") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-mtl") (r "^0.2.0-beta.11") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.0-beta.11") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-wgpu") (r "^0.2.0-beta.11") (o #t) (d #t) (k 0)) (d (n "objc2") (r "^0.5.0") (f (quote ("apple"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "wgpu") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "wgpu-types") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.48.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0a5473p63siaymsrjjh8pmzvamdmz8drwn3cf2q6zjgskygjwsgm") (f (quote (("runtime-wgpu" "runtime" "reflect-naga" "librashader-common/wgpu" "librashader-runtime-wgpu" "wgpu" "wgpu-types") ("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-metal" "runtime" "reflect-naga" "reflect-cross" "librashader-common/metal" "librashader-runtime-mtl" "icrate" "objc2") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk" "runtime-wgpu" "runtime-metal") ("runtime") ("reflect-naga" "reflect" "librashader-reflect/naga") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil" "reflect-naga") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.0-beta.14 (c (n "librashader") (v "0.2.0-beta.14") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "icrate") (r "^0.1.0") (f (quote ("Metal" "Metal_all"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "librashader-cache") (r "^0.2.0-beta.14") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.0-beta.14") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.0-beta.14") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.0-beta.14") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.0-beta.14") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.0-beta.14") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.0-beta.14") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.0-beta.14") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.0-beta.14") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-mtl") (r "^0.2.0-beta.14") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.0-beta.14") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-wgpu") (r "^0.2.0-beta.14") (o #t) (d #t) (k 0)) (d (n "objc2") (r "^0.5.0") (f (quote ("apple"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "wgpu") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "wgpu-types") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.48.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0pzpslkfkzn5pq52b356cildyc0xh06567spkn8x92awzxb2r7m2") (f (quote (("runtime-wgpu" "runtime" "reflect-naga" "librashader-common/wgpu" "librashader-runtime-wgpu" "wgpu" "wgpu-types") ("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-metal" "runtime" "reflect-naga" "reflect-cross" "librashader-common/metal" "librashader-runtime-mtl" "icrate" "objc2") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk" "runtime-wgpu" "runtime-metal") ("runtime") ("reflect-naga" "reflect" "librashader-reflect/naga") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil" "reflect-naga") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs" "objc2/unstable-docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.0-beta.16 (c (n "librashader") (v "0.2.0-beta.16") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "icrate") (r "^0.1.0") (f (quote ("Metal" "Metal_all"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "librashader-cache") (r "^0.2.0-beta.16") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.0-beta.16") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.0-beta.16") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.0-beta.16") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.0-beta.16") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.0-beta.16") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.0-beta.16") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.0-beta.16") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.0-beta.16") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-mtl") (r "^0.2.0-beta.16") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.0-beta.16") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-wgpu") (r "^0.2.0-beta.16") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "objc2") (r "^0.5.0") (f (quote ("apple"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "wgpu") (r "^0.19") (o #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "wgpu-types") (r "^0.19") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "windows") (r "^0.48.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0f37n36hq8jpny4zjlgd26bihn8fdcc2a7yw5xldphjf1liwx50m") (f (quote (("runtime-wgpu" "runtime" "reflect-naga" "librashader-common/wgpu" "librashader-runtime-wgpu" "wgpu" "wgpu-types") ("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-metal" "runtime" "reflect-naga" "reflect-cross" "librashader-common/metal" "librashader-runtime-mtl" "icrate" "objc2") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk" "runtime-wgpu" "runtime-metal") ("runtime") ("reflect-naga" "reflect" "librashader-reflect/naga") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil" "reflect-naga") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs" "objc2/unstable-docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.0-macos-build-test.1 (c (n "librashader") (v "0.2.0-macos-build-test.1") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "icrate") (r "^0.1.0") (f (quote ("Metal" "Metal_all"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "librashader-cache") (r "^0.2.0-beta.16") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.0-beta.16") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.0-beta.16") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.0-beta.16") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.0-beta.16") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.0-beta.16") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.0-beta.16") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.0-beta.16") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.0-beta.16") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-mtl") (r "^0.2.0-beta.16") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.0-beta.16") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-wgpu") (r "^0.2.0-beta.16") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "objc2") (r "^0.5.0") (f (quote ("apple"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "wgpu") (r "^0.19") (o #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "wgpu-types") (r "^0.19") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "windows") (r "^0.48.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "13nj0f92wb7l79zq14q1qs5c9g6j0fxdg0yfkbphbm557cfzws6w") (f (quote (("runtime-wgpu" "runtime" "reflect-naga" "librashader-common/wgpu" "librashader-runtime-wgpu" "wgpu" "wgpu-types") ("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-metal" "runtime" "reflect-naga" "reflect-cross" "librashader-common/metal" "librashader-runtime-mtl" "icrate" "objc2") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk" "runtime-wgpu" "runtime-metal") ("runtime") ("reflect-naga" "reflect" "librashader-reflect/naga") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil" "reflect-naga") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs" "objc2/unstable-docsrs") ("default" "full")))) (y #t)))

(define-public crate-librashader-0.2.0-beta.17 (c (n "librashader") (v "0.2.0-beta.17") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "icrate") (r "^0.1.0") (f (quote ("Metal" "Metal_all"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "librashader-cache") (r "^0.2.0-beta.17") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.0-beta.17") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.0-beta.17") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.0-beta.17") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.0-beta.17") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.0-beta.17") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.0-beta.17") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.0-beta.17") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.0-beta.17") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-mtl") (r "^0.2.0-beta.17") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.0-beta.17") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-wgpu") (r "^0.2.0-beta.17") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "objc2") (r "^0.5.0") (f (quote ("apple"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "wgpu") (r "^0.19") (o #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "wgpu-types") (r "^0.19") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "windows") (r "^0.48.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1f7d9wpfhb9829yffi0d4yrchf0flmpgpys9ynw2xbq75sjd3jx4") (f (quote (("runtime-wgpu" "runtime" "reflect-naga" "librashader-common/wgpu" "librashader-runtime-wgpu" "wgpu" "wgpu-types") ("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-metal" "runtime" "reflect-naga" "reflect-cross" "librashader-common/metal" "librashader-runtime-mtl" "icrate" "objc2") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk" "runtime-wgpu" "runtime-metal") ("runtime") ("reflect-naga" "reflect" "librashader-reflect/naga") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil" "reflect-naga") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs" "objc2/unstable-docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.0-beta.18 (c (n "librashader") (v "0.2.0-beta.18") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "icrate") (r "^0.1.0") (f (quote ("Metal" "Metal_all"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "librashader-cache") (r "^0.2.0-beta.18") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.0-beta.18") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.0-beta.18") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.0-beta.18") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.0-beta.18") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.0-beta.18") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.0-beta.18") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.0-beta.18") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.0-beta.18") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-mtl") (r "^0.2.0-beta.18") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.0-beta.18") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-wgpu") (r "^0.2.0-beta.18") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "objc2") (r "^0.5.0") (f (quote ("apple"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "wgpu") (r "^0.19") (o #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "wgpu-types") (r "^0.19") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "windows") (r "^0.48.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "17m42phkpkp2nibg2hnb23bniq2x6glfcbkx0pfx105mrpw96d5c") (f (quote (("runtime-wgpu" "runtime" "reflect-naga" "librashader-common/wgpu" "librashader-runtime-wgpu" "wgpu" "wgpu-types") ("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-metal" "runtime" "reflect-naga" "reflect-cross" "librashader-common/metal" "librashader-runtime-mtl" "icrate" "objc2") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk" "runtime-wgpu" "runtime-metal") ("runtime") ("reflect-naga" "reflect" "librashader-reflect/naga") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil" "reflect-naga") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs" "objc2/unstable-docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.0-rc.1 (c (n "librashader") (v "0.2.0-rc.1") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "icrate") (r "^0.1.0") (f (quote ("Metal" "Metal_all"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "librashader-cache") (r "^0.2.0-rc.1") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.0-rc.1") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.0-rc.1") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.0-rc.1") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.0-rc.1") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.0-rc.1") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-mtl") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-wgpu") (r "^0.2.0-rc.1") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "objc2") (r "^0.5.0") (f (quote ("apple"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "wgpu") (r "^0.19") (o #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "wgpu-types") (r "^0.19") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "windows") (r "^0.48.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1p2l1p528a0gmcj6jswql7c8j8rgw01kczj1b8gm80c7drg13jld") (f (quote (("runtime-wgpu" "runtime" "reflect-naga" "librashader-common/wgpu" "librashader-runtime-wgpu" "wgpu" "wgpu-types") ("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-metal" "runtime" "reflect-naga" "reflect-cross" "librashader-common/metal" "librashader-runtime-mtl" "icrate" "objc2") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk" "runtime-wgpu" "runtime-metal") ("runtime") ("reflect-naga" "reflect" "librashader-reflect/naga") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil" "reflect-naga") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs" "objc2/unstable-docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.0-rc.2 (c (n "librashader") (v "0.2.0-rc.2") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "icrate") (r "^0.1.0") (f (quote ("Metal" "Metal_all"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "librashader-cache") (r "^0.2.0-rc.2") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.0-rc.2") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.0-rc.2") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.0-rc.2") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.0-rc.2") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.0-rc.2") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.0-rc.2") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.0-rc.2") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.0-rc.2") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-mtl") (r "^0.2.0-rc.2") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.0-rc.2") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-wgpu") (r "^0.2.0-rc.2") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "objc2") (r "^0.5.0") (f (quote ("apple"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "wgpu") (r "^0.19") (o #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "wgpu-types") (r "^0.19") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "windows") (r "^0.48.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0wzqghs2lka0js9z1pd2qz709sj94bz7g7m00c215c13h68hrfyd") (f (quote (("runtime-wgpu" "runtime" "reflect-naga" "librashader-common/wgpu" "librashader-runtime-wgpu" "wgpu" "wgpu-types") ("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-metal" "runtime" "reflect-naga" "reflect-cross" "librashader-common/metal" "librashader-runtime-mtl" "icrate" "objc2") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk" "runtime-wgpu" "runtime-metal") ("runtime") ("reflect-naga" "reflect" "librashader-reflect/naga") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil" "reflect-naga") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs" "objc2/unstable-docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.0-rc.3 (c (n "librashader") (v "0.2.0-rc.3") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "halfbrown") (r "^0.2.4") (d #t) (k 0)) (d (n "icrate") (r "^0.1.0") (f (quote ("Metal" "Metal_all"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "librashader-cache") (r "^0.2.0-rc.3") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.0-rc.3") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.0-rc.3") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.0-rc.3") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.0-rc.3") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.0-rc.3") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.0-rc.3") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.0-rc.3") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.0-rc.3") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-mtl") (r "^0.2.0-rc.3") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.0-rc.3") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-wgpu") (r "^0.2.0-rc.3") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "objc2") (r "^0.5.0") (f (quote ("apple"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "wgpu") (r "^0.19") (o #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "wgpu-types") (r "^0.19") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "windows") (r "^0.48.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1z25r2fzzbr6y3c878cp7j7p713039vvz8gwl17ckvikwn3rn39a") (f (quote (("runtime-wgpu" "runtime" "reflect-naga" "librashader-common/wgpu" "librashader-runtime-wgpu" "wgpu" "wgpu-types") ("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-metal" "runtime" "reflect-naga" "reflect-cross" "librashader-common/metal" "librashader-runtime-mtl" "icrate" "objc2") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk" "runtime-wgpu" "runtime-metal") ("runtime") ("reflect-naga" "reflect" "librashader-reflect/naga") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil" "reflect-naga") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs" "objc2/unstable-docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.0 (c (n "librashader") (v "0.2.0") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "halfbrown") (r "^0.2.4") (d #t) (k 0)) (d (n "icrate") (r "^0.1.0") (f (quote ("Metal" "Metal_all"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "librashader-cache") (r "^0.2.0") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.0") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.0") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.0") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.0") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.0") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-mtl") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-wgpu") (r "^0.2.0") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "objc2") (r "^0.5.0") (f (quote ("apple"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "wgpu") (r "^0.19") (o #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "wgpu-types") (r "^0.19") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "windows") (r "^0.48.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1csswbp5ln9w1dxz37nqw9cwq6laxghill4gaw7ls51qgm8mzvp1") (f (quote (("runtime-wgpu" "runtime" "reflect-naga" "librashader-common/wgpu" "librashader-runtime-wgpu" "wgpu" "wgpu-types") ("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-metal" "runtime" "reflect-naga" "reflect-cross" "librashader-common/metal" "librashader-runtime-mtl" "icrate" "objc2") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk" "runtime-wgpu" "runtime-metal") ("runtime") ("reflect-naga" "reflect" "librashader-reflect/naga") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil" "reflect-naga") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs" "objc2/unstable-docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.1 (c (n "librashader") (v "0.2.1") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "halfbrown") (r "^0.2.4") (d #t) (k 0)) (d (n "icrate") (r "^0.1.0") (f (quote ("Metal" "Metal_all"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "librashader-cache") (r "^0.2.1") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.1") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.1") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.1") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.1") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.1") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-mtl") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-wgpu") (r "^0.2.1") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "objc2") (r "^0.5.0") (f (quote ("apple"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "wgpu") (r "^0.19") (o #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "wgpu-types") (r "^0.19") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "windows") (r "^0.48.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "12rxj27gp0bilii0wmv1kv26d0iqqm5q2fb7prm1ln63mdpmmg7x") (f (quote (("runtime-wgpu" "runtime" "reflect-naga" "librashader-common/wgpu" "librashader-runtime-wgpu" "wgpu" "wgpu-types") ("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-metal" "runtime" "reflect-naga" "reflect-cross" "librashader-common/metal" "librashader-runtime-mtl" "icrate" "objc2") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk" "runtime-wgpu" "runtime-metal") ("runtime") ("reflect-naga" "reflect" "librashader-reflect/naga") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil" "reflect-naga") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs" "objc2/unstable-docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.2 (c (n "librashader") (v "0.2.2") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "halfbrown") (r "^0.2.4") (d #t) (k 0)) (d (n "icrate") (r "^0.1.0") (f (quote ("Metal" "Metal_all"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "librashader-cache") (r "^0.2.2") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.2") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.2") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.2") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.2") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.2") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-mtl") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-wgpu") (r "^0.2.2") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "objc2") (r "^0.5.0") (f (quote ("apple"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "wgpu") (r "^0.19") (o #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "wgpu-types") (r "^0.19") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "windows") (r "^0.48.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1s2lhb5gbc35sdk7yhdfgr1x5g1qxhpnmg2s5nkhwzjk7ngxx88h") (f (quote (("runtime-wgpu" "runtime" "reflect-naga" "librashader-common/wgpu" "librashader-runtime-wgpu" "wgpu" "wgpu-types") ("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-metal" "runtime" "reflect-naga" "reflect-cross" "librashader-common/metal" "librashader-runtime-mtl" "icrate" "objc2") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk" "runtime-wgpu" "runtime-metal") ("runtime") ("reflect-naga" "reflect" "librashader-reflect/naga") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil" "reflect-naga") ("reflect") ("presets") ("preprocess") ("internal") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs" "objc2/unstable-docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.3 (c (n "librashader") (v "0.2.3") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "halfbrown") (r "^0.2.4") (d #t) (k 0)) (d (n "icrate") (r "^0.1.0") (f (quote ("Metal" "Metal_all"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "librashader-cache") (r "^0.2.3") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.3") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.3") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.3") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.3") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.3") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-mtl") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-wgpu") (r "^0.2.3") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "objc2") (r "^0.5.0") (f (quote ("apple"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "rayon") (r "^1.6.1") (d #t) (k 2)) (d (n "wgpu") (r "^0.19") (o #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "wgpu-types") (r "^0.19") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "windows") (r "^0.48.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1iay4zxyakn2cjsjaqr05xja9bapynlma3hk1gikykisn65q1i4l") (f (quote (("runtime-wgpu" "runtime" "reflect-naga" "librashader-common/wgpu" "librashader-runtime-wgpu" "wgpu" "wgpu-types") ("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-metal" "runtime" "reflect-naga" "reflect-cross" "librashader-common/metal" "librashader-runtime-mtl" "icrate" "objc2") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk" "runtime-wgpu" "runtime-metal") ("runtime") ("reflect-naga" "reflect" "librashader-reflect/naga") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil" "reflect-naga") ("reflect") ("presets") ("preprocess") ("internal") ("github-ci") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs" "objc2/unstable-docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.4 (c (n "librashader") (v "0.2.4") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "halfbrown") (r "^0.2.4") (d #t) (k 0)) (d (n "icrate") (r "^0.1.0") (f (quote ("Metal" "Metal_all"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "librashader-cache") (r "^0.2.4") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.4") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.4") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.4") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.4") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.4") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-mtl") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-wgpu") (r "^0.2.4") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "objc2") (r "^0.5.0") (f (quote ("apple"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "rayon") (r "^1.6.1") (d #t) (k 2)) (d (n "wgpu") (r "^0.19") (o #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "wgpu-types") (r "^0.19") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "windows") (r "^0.52.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0zdys81skv2njj6898q5liwl2g248sz4bbvx6p7bsikflj8acss6") (f (quote (("runtime-wgpu" "runtime" "reflect-naga" "librashader-common/wgpu" "librashader-runtime-wgpu" "wgpu" "wgpu-types") ("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-metal" "runtime" "reflect-naga" "reflect-cross" "librashader-common/metal" "librashader-runtime-mtl" "icrate" "objc2") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk" "runtime-wgpu" "runtime-metal") ("runtime") ("reflect-naga" "reflect" "librashader-reflect/naga") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil" "reflect-naga") ("reflect") ("presets") ("preprocess") ("internal") ("github-ci") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs" "objc2/unstable-docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.5 (c (n "librashader") (v "0.2.5") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "halfbrown") (r "^0.2.4") (d #t) (k 0)) (d (n "icrate") (r "^0.1.0") (f (quote ("Metal" "Metal_all"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "librashader-cache") (r "^0.2.5") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.5") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.5") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.5") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.5") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.5") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-mtl") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-wgpu") (r "^0.2.5") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "objc2") (r "^0.5.0") (f (quote ("apple"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "rayon") (r "^1.6.1") (d #t) (k 2)) (d (n "wgpu") (r "^0.19") (o #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "wgpu-types") (r "^0.19") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "windows") (r "^0.52.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1rp21wfzbns4cjjzrhk77h3g8isbgxag35vi7qdqa4d3qdiaw23f") (f (quote (("runtime-wgpu" "runtime" "reflect-naga" "librashader-common/wgpu" "librashader-runtime-wgpu" "wgpu" "wgpu-types") ("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-metal" "runtime" "reflect-naga" "reflect-cross" "librashader-common/metal" "librashader-runtime-mtl" "icrate" "objc2") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk" "runtime-wgpu" "runtime-metal") ("runtime") ("reflect-naga" "reflect" "librashader-reflect/naga") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil" "reflect-naga") ("reflect") ("presets") ("preprocess") ("internal") ("github-ci") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs" "objc2/unstable-docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.6 (c (n "librashader") (v "0.2.6") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "halfbrown") (r "^0.2.4") (d #t) (k 0)) (d (n "icrate") (r "^0.1.0") (f (quote ("Metal" "Metal_all"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "librashader-cache") (r "^0.2.6") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.6") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.6") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.6") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.6") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.6") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-mtl") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-wgpu") (r "^0.2.6") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "objc2") (r "^0.5.0") (f (quote ("apple"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "rayon") (r "^1.6.1") (d #t) (k 2)) (d (n "wgpu") (r "^0.19") (o #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "wgpu-types") (r "^0.19") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "windows") (r "^0.52.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1k1k5bjgcgivk3xr62wv8m3p28k8w333qcw18zznda46h3kxyq74") (f (quote (("runtime-wgpu" "runtime" "reflect-naga" "librashader-common/wgpu" "librashader-runtime-wgpu" "wgpu" "wgpu-types") ("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-metal" "runtime" "reflect-naga" "reflect-cross" "librashader-common/metal" "librashader-runtime-mtl" "icrate" "objc2") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk" "runtime-wgpu" "runtime-metal") ("runtime") ("reflect-naga" "reflect" "librashader-reflect/naga") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil" "reflect-naga") ("reflect") ("presets") ("preprocess") ("internal") ("github-ci") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs" "objc2/unstable-docsrs") ("default" "full"))))))

(define-public crate-librashader-0.2.7 (c (n "librashader") (v "0.2.7") (d (list (d (n "ash") (r "^0.37") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "halfbrown") (r "^0.2.4") (d #t) (k 0)) (d (n "icrate") (r "^0.1.0") (f (quote ("Metal" "Metal_all"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "librashader-cache") (r "^0.2.7") (d #t) (k 0)) (d (n "librashader-common") (r "^0.2.7") (d #t) (k 0)) (d (n "librashader-preprocess") (r "^0.2.7") (d #t) (k 0)) (d (n "librashader-presets") (r "^0.2.7") (d #t) (k 0)) (d (n "librashader-reflect") (r "^0.2.7") (d #t) (k 0)) (d (n "librashader-runtime") (r "^0.2.7") (d #t) (k 0)) (d (n "librashader-runtime-d3d11") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d12") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-d3d9") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-gl") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-mtl") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-vk") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "librashader-runtime-wgpu") (r "^0.2.7") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "objc2") (r "^0.5.0") (f (quote ("apple"))) (o #t) (d #t) (t "cfg(target_vendor=\"apple\")") (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "rayon") (r "^1.6.1") (d #t) (k 2)) (d (n "wgpu") (r "^0.19") (o #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "wgpu-types") (r "^0.19") (o #t) (d #t) (t "cfg(not(all(target_vendor=\"apple\", docsrs)))") (k 0)) (d (n "windows") (r "^0.52.0") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "12qidwr4a0h595k5hyjrgbrhjf7bmccfw1sb7v4msn01fbsjvgwb") (f (quote (("runtime-wgpu" "runtime" "reflect-naga" "librashader-common/wgpu" "librashader-runtime-wgpu" "wgpu" "wgpu-types") ("runtime-vk" "runtime" "reflect-cross" "librashader-common/vulkan" "librashader-runtime-vk" "ash") ("runtime-metal" "runtime" "reflect-naga" "reflect-cross" "librashader-common/metal" "librashader-runtime-mtl" "icrate" "objc2") ("runtime-gl" "runtime" "reflect-cross" "librashader-common/opengl" "librashader-runtime-gl") ("runtime-d3d9" "runtime" "reflect-cross" "librashader-common/d3d9" "librashader-runtime-d3d9" "windows/Win32_Graphics_Direct3D9") ("runtime-d3d12" "runtime" "reflect-cross" "reflect-dxil" "librashader-common/d3d12" "librashader-runtime-d3d12" "windows/Win32_Graphics_Direct3D12") ("runtime-d3d11" "runtime" "reflect-cross" "librashader-common/d3d11" "librashader-runtime-d3d11" "windows/Win32_Graphics_Direct3D11") ("runtime-all" "runtime-gl" "runtime-d3d11" "runtime-d3d12" "runtime-vk" "runtime-wgpu" "runtime-metal") ("runtime") ("reflect-naga" "reflect" "librashader-reflect/naga") ("reflect-dxil" "reflect" "librashader-reflect/dxil") ("reflect-cross" "reflect" "librashader-reflect/cross") ("reflect-all" "reflect-cross" "reflect-dxil" "reflect-naga") ("reflect") ("presets") ("preprocess") ("internal") ("github-ci") ("full" "runtime-all" "reflect-all" "preprocess" "presets") ("docsrs" "librashader-cache/docsrs" "objc2/unstable-docsrs") ("default" "full"))))))

