(define-module (crates-io li br librqbit-core) #:use-module (crates-io))

(define-public crate-librqbit-core-2.2.1 (c (n "librqbit-core") (v "2.2.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "19cczrac2wbwf0q081cingvjm42gfqngmyxwm6lh8yxn9av82xkd") (f (quote (("sha1-system" "bencode/sha1-system") ("sha1-rust" "bencode/sha1-rust") ("sha1-openssl" "bencode/sha1-openssl") ("default" "sha1-system"))))))

(define-public crate-librqbit-core-2.2.2 (c (n "librqbit-core") (v "2.2.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0yrnyqz9lwjzvc3hnanxsi829w5z76hpkxpsdyickn9jr76gfw14") (f (quote (("sha1-system" "bencode/sha1-system") ("sha1-rust" "bencode/sha1-rust") ("sha1-openssl" "bencode/sha1-openssl") ("default" "sha1-system"))))))

(define-public crate-librqbit-core-3.0.0 (c (n "librqbit-core") (v "3.0.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0hig4md0g0ypk7q6669crba6nx734x56ia773qi4yhjjarp68r54") (f (quote (("sha1-system" "bencode/sha1-system") ("sha1-rust" "bencode/sha1-rust") ("sha1-openssl" "bencode/sha1-openssl") ("default" "sha1-system"))))))

(define-public crate-librqbit-core-3.1.0 (c (n "librqbit-core") (v "3.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0yw30c1vzk96z0kah4vqg5x3gwc5rxhkjqxr4cbv2as0d6cznwxl") (f (quote (("sha1-system" "bencode/sha1-system") ("sha1-rust" "bencode/sha1-rust") ("sha1-openssl" "bencode/sha1-openssl") ("default" "sha1-system"))))))

(define-public crate-librqbit-core-3.2.1 (c (n "librqbit-core") (v "3.2.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "18cwz4qazs9ipp8mvh8hwbrr4kz7ysfg7rb0rpw7z0nmfpvfbl9h") (f (quote (("sha1-system" "bencode/sha1-system") ("sha1-rust" "bencode/sha1-rust") ("sha1-openssl" "bencode/sha1-openssl") ("default" "sha1-system"))))))

(define-public crate-librqbit-core-3.3.0 (c (n "librqbit-core") (v "3.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "13c9pqnxmisg65w1z7lfrvxn8vpxhy9j6sb673awxikvnnn58i97") (f (quote (("sha1-system" "bencode/sha1-system") ("sha1-rust" "bencode/sha1-rust") ("sha1-openssl" "bencode/sha1-openssl") ("default" "sha1-system"))))))

(define-public crate-librqbit-core-3.4.0 (c (n "librqbit-core") (v "3.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "16lmj24gpwmy4gnaqpkmi20wfkiczac81bljd7wfylbwd3igdc69") (f (quote (("sha1-system" "bencode/sha1-system") ("sha1-rust" "bencode/sha1-rust") ("sha1-openssl" "bencode/sha1-openssl") ("default" "sha1-system"))))))

(define-public crate-librqbit-core-3.5.0 (c (n "librqbit-core") (v "3.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0rba4wa2ics0ahkly8xz0m1q6av8jmab9k7y51vlnb86rp1ylmfh") (f (quote (("sha1-system" "bencode/sha1-system") ("sha1-rust" "bencode/sha1-rust") ("sha1-openssl" "bencode/sha1-openssl") ("default" "sha1-system"))))))

(define-public crate-librqbit-core-3.6.0 (c (n "librqbit-core") (v "3.6.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1xpzl3z5n2sxwk4z92wfijmyvfmj4i5smwli7phlmp8cq2kayr4h") (f (quote (("sha1-system" "bencode/sha1-system") ("sha1-rust" "bencode/sha1-rust") ("sha1-openssl" "bencode/sha1-openssl") ("default" "sha1-system"))))))

(define-public crate-librqbit-core-3.6.1 (c (n "librqbit-core") (v "3.6.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencode") (r "^2.2.1") (k 0) (p "librqbit-bencode")) (d (n "buffers") (r "^2.2.1") (d #t) (k 0) (p "librqbit-buffers")) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "19qd1ynq6iyd671x89dp1pcbysdaykxvw08n3mrg4pgsrdlgih89") (f (quote (("sha1-system" "bencode/sha1-system") ("sha1-rust" "bencode/sha1-rust") ("sha1-openssl" "bencode/sha1-openssl") ("default" "sha1-system"))))))

(define-public crate-librqbit-core-3.6.2 (c (n "librqbit-core") (v "3.6.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencode") (r "^2.2.2") (k 0) (p "librqbit-bencode")) (d (n "buffers") (r "^3.0.0") (d #t) (k 0) (p "librqbit-buffers")) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "072l1bxiib1kamjasn9wnsi1fjm9s6aw4jq48ijwjpsjlls2v3qj")))

(define-public crate-librqbit-core-3.7.0 (c (n "librqbit-core") (v "3.7.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencode") (r "^2.2.2") (k 0) (p "librqbit-bencode")) (d (n "buffers") (r "^3.0.0") (d #t) (k 0) (p "librqbit-buffers")) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "199fxqc0lpmn5kzfknlgsnyzh30ddl96z3d1j83337sq0kzs4c4x")))

(define-public crate-librqbit-core-3.8.0 (c (n "librqbit-core") (v "3.8.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencode") (r "^2.2.2") (k 0) (p "librqbit-bencode")) (d (n "buffers") (r "^3.0.0") (d #t) (k 0) (p "librqbit-buffers")) (d (n "clone_to_owned") (r "^2.2.1") (d #t) (k 0) (p "librqbit-clone-to-owned")) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0vfrp8cng9zlr8fxphxl29jglmscrjm6ci8djrga1ajv5bp1fj93")))

