(define-module (crates-io li br librollenspielsache) #:use-module (crates-io))

(define-public crate-librollenspielsache-0.0.1 (c (n "librollenspielsache") (v "0.0.1") (d (list (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "r2d2_redis") (r "^0.13") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "redis") (r "^0.15") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1fy6403n7kianlwccp8m2cz7mzrc8j7gcczc2yr2n2fmzyw1in4d")))

(define-public crate-librollenspielsache-0.1.0 (c (n "librollenspielsache") (v "0.1.0") (d (list (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "r2d2_redis") (r "^0.13") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "redis") (r "^0.15") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0j5fqn49v4r0da4h8pmp7bi8gc1b2khcsbpcdgs2rqmrahmra1fb")))

(define-public crate-librollenspielsache-0.1.1 (c (n "librollenspielsache") (v "0.1.1") (d (list (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "r2d2_redis") (r "^0.13") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "redis") (r "^0.15") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "058ji2r8hgb3cnlq15n282an5kp0wi5hcjl3y81vy9ky27z4wdd6")))

(define-public crate-librollenspielsache-0.1.2 (c (n "librollenspielsache") (v "0.1.2") (d (list (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "r2d2_redis") (r "^0.13") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "redis") (r "^0.15") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0fxpy8fr0ip4ngbik4pmg139fbf54jb1jgnwlqzjfs8c3fjw03i3")))

