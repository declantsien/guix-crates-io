(define-module (crates-io li pl lipl-gatt-bluer) #:use-module (crates-io))

(define-public crate-lipl-gatt-bluer-0.1.16 (c (n "lipl-gatt-bluer") (v "0.1.16") (d (list (d (n "bluer") (r "^0.16") (f (quote ("bluetoothd"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lipl-display-common") (r "^0.2") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "0c6q23h5a6g39z3kmnn9v6pfnj2kzl8g868jqmgqdngain39mpxi")))

(define-public crate-lipl-gatt-bluer-0.1.17 (c (n "lipl-gatt-bluer") (v "0.1.17") (d (list (d (n "bluer") (r "^0.16") (f (quote ("bluetoothd"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lipl-display-common") (r "^0.2") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "130qpy9q5x03vqvldvq5qymzp3qx6lgbid9mlrzy570d37y03rv3")))

(define-public crate-lipl-gatt-bluer-0.1.18 (c (n "lipl-gatt-bluer") (v "0.1.18") (d (list (d (n "bluer") (r "^0.16") (f (quote ("bluetoothd"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lipl-display-common") (r "^0.2") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "08h0mzk3rxfbkavh3dmkah98491gj2s4dw0rfbll84y12gvckb52")))

(define-public crate-lipl-gatt-bluer-0.1.19 (c (n "lipl-gatt-bluer") (v "0.1.19") (d (list (d (n "bluer") (r "^0.16") (f (quote ("bluetoothd"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lipl-display-common") (r "^0.2") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "10gdkc4kgsyrspgd7wdr11sr75ghf9f2qza0bf2ym2a3y9a55cjb")))

(define-public crate-lipl-gatt-bluer-0.1.20 (c (n "lipl-gatt-bluer") (v "0.1.20") (d (list (d (n "bluer") (r "^0.16") (f (quote ("bluetoothd"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lipl-display-common") (r "^0.2.8") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "147xm2d3bqqyvpj2rwi6ky1gqa5b9vkvsvg80drnvsbg8cxxqxi7")))

(define-public crate-lipl-gatt-bluer-0.3.0 (c (n "lipl-gatt-bluer") (v "0.3.0") (d (list (d (n "bluer") (r "^0.16") (f (quote ("bluetoothd"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lipl-display-common") (r "^0.3.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "0gilgd2065vd38xv03hkahsz6xpn06idfmq4c84ggpr3dvf16s6i")))

(define-public crate-lipl-gatt-bluer-0.4.0 (c (n "lipl-gatt-bluer") (v "0.4.0") (d (list (d (n "bluer") (r "^0.16") (f (quote ("bluetoothd"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lipl-display-common") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "0p9br46svj1vp5nx0sc0mn5csh5fzsy7gkqg68drqfp8g80lg7b6")))

(define-public crate-lipl-gatt-bluer-0.4.4 (c (n "lipl-gatt-bluer") (v "0.4.4") (d (list (d (n "bluer") (r "^0.17") (f (quote ("bluetoothd"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lipl-display-common") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "14pkyyn4a4764qvkp0zv34r4qdch6q87wia846cfwzk4d1zxnxw9")))

