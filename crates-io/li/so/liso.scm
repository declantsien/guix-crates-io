(define-module (crates-io li so liso) #:use-module (crates-io))

(define-public crate-liso-0.7.0 (c (n "liso") (v "0.7.0") (d (list (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "crossterm") (r "^0.23") (d #t) (k 0)) (d (n "nix") (r "^0.25") (f (quote ("signal"))) (t "cfg(unix)") (k 0)) (d (n "textwrap") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("rt" "sync" "time"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "1gwi1x9mk8bqk187113sx2icfny8bh43ypc33zmvjsqh2lmgl5a2") (f (quote (("wrap" "textwrap") ("default" "wrap"))))))

(define-public crate-liso-0.7.1 (c (n "liso") (v "0.7.1") (d (list (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "crossterm") (r "^0.23") (d #t) (k 0)) (d (n "nix") (r "^0.25") (f (quote ("signal"))) (t "cfg(unix)") (k 0)) (d (n "textwrap") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("rt" "sync" "time"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "0j98n7fwjms4binqw2lp4s6nsk3gwcrajyip329msxcsprvrfc3z") (f (quote (("wrap" "textwrap") ("default" "wrap"))))))

(define-public crate-liso-0.8.0 (c (n "liso") (v "0.8.0") (d (list (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "crossterm") (r "^0.23") (d #t) (k 0)) (d (n "nix") (r "^0.25") (f (quote ("signal"))) (t "cfg(unix)") (k 0)) (d (n "textwrap") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("rt" "sync" "time"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "0pd92lbm9khh8ld79ycq2y1zl9w3cxa71wis3627qijhzjjh5asg") (f (quote (("wrap" "textwrap") ("history") ("default" "wrap" "history"))))))

(define-public crate-liso-1.0.0 (c (n "liso") (v "1.0.0") (d (list (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "crossterm") (r "^0.23") (d #t) (k 0)) (d (n "nix") (r "^0.25") (f (quote ("signal"))) (t "cfg(unix)") (k 0)) (d (n "textwrap") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("rt" "sync" "time"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "0mpd19wvx8767sarqgnnhkr0k8wldllz62hkvqbvdrrr6srb0glg") (f (quote (("wrap" "textwrap") ("history") ("default" "wrap" "history" "completion") ("completion"))))))

(define-public crate-liso-1.0.1 (c (n "liso") (v "1.0.1") (d (list (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "crossterm") (r "^0.23") (d #t) (k 0)) (d (n "nix") (r "^0.25") (f (quote ("signal"))) (t "cfg(unix)") (k 0)) (d (n "textwrap") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("rt" "sync" "time"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "033qcns4kyywbny3xn8h12x1l5klhcqkj5989zzgc5xsrgnxdsx3") (f (quote (("wrap" "textwrap") ("history") ("default" "wrap" "history" "completion") ("completion")))) (y #t)))

(define-public crate-liso-1.0.2 (c (n "liso") (v "1.0.2") (d (list (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "crossterm") (r "^0.23") (d #t) (k 0)) (d (n "nix") (r "^0.25") (f (quote ("signal"))) (t "cfg(unix)") (k 0)) (d (n "textwrap") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("rt" "sync" "time"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "167gix0k66036w2j8p6qqqm4k8hszrypbv2p2wdp6rwfh9qs7agm") (f (quote (("wrap" "textwrap") ("history") ("default" "wrap" "history" "completion") ("completion"))))))

(define-public crate-liso-1.0.3 (c (n "liso") (v "1.0.3") (d (list (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "crossterm") (r "^0.23") (d #t) (k 0)) (d (n "nix") (r "^0.25") (f (quote ("signal"))) (t "cfg(unix)") (k 0)) (d (n "textwrap") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("rt" "sync" "time"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "0pvqdky79vv4n0gsy84b59jsjj6p44vp0pn6sk9q80wzmwkhg0gh") (f (quote (("wrap" "textwrap") ("history") ("default" "wrap" "history" "completion") ("completion"))))))

(define-public crate-liso-1.1.0 (c (n "liso") (v "1.1.0") (d (list (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "crossterm") (r "^0.23") (d #t) (k 0)) (d (n "errno") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.25") (f (quote ("signal" "fs"))) (t "cfg(unix)") (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("rt" "sync" "time"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "07kswi7in83qxkbsxl8fjca72z7q167fpk579ln0mg8ayxbraki6") (f (quote (("wrap" "textwrap") ("history") ("global" "parking_lot") ("default" "wrap" "history" "completion" "global") ("completion") ("capture-stderr" "libc" "errno"))))))

(define-public crate-liso-1.1.1 (c (n "liso") (v "1.1.1") (d (list (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "crossterm") (r "^0.23") (d #t) (k 0)) (d (n "errno") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (d #t) (t "cfg(unix)") (k 0)) (d (n "libc") (r "^0.2.144") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("rt" "sync" "time"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "1fq62248q33z2jfb8j30z8fskv2fmk5rh4kds90x5qjmwhvmqji5") (f (quote (("wrap" "textwrap") ("history") ("global" "parking_lot") ("default" "wrap" "history" "completion" "global") ("completion") ("capture-stderr" "libc" "errno" "parking_lot"))))))

(define-public crate-liso-1.2.0 (c (n "liso") (v "1.2.0") (d (list (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (d #t) (k 0)) (d (n "errno") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (d #t) (t "cfg(unix)") (k 0)) (d (n "libc") (r "^0.2.144") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "textwrap") (r "^0.16.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt" "sync" "time"))) (k 0)) (d (n "unicode-width") (r "^0.1.12") (d #t) (k 0)))) (h "0mggvd1nnw6cmsnpyyp3bps5c80wlv6c2i018758b9cimdfsr58j") (f (quote (("wrap" "textwrap") ("history") ("global" "parking_lot") ("default" "wrap" "history" "completion" "global") ("completion") ("capture-stderr" "libc" "errno" "parking_lot"))))))

(define-public crate-liso-1.2.1 (c (n "liso") (v "1.2.1") (d (list (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (d #t) (k 0)) (d (n "errno") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (d #t) (t "cfg(unix)") (k 0)) (d (n "libc") (r "^0.2.144") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "textwrap") (r "^0.16.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt" "sync" "time"))) (k 0)) (d (n "unicode-width") (r "^0.1.12") (d #t) (k 0)))) (h "0rvsvji92kwd15h0c9aqw990jq2yn7mx76ff91ws406gs39hxmbm") (f (quote (("history") ("default" "wrap" "history" "completion" "global") ("completion")))) (s 2) (e (quote (("wrap" "dep:textwrap") ("serde" "dep:serde" "bitflags/serde") ("global" "dep:parking_lot") ("capture-stderr" "dep:libc" "dep:errno" "dep:parking_lot"))))))

