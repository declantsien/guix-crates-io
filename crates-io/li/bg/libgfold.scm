(define-module (crates-io li bg libgfold) #:use-module (crates-io))

(define-public crate-libgfold-0.1.0 (c (n "libgfold") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (f (quote ("humantime"))) (k 2)) (d (n "git2") (r "^0.17") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "08bv15rh2cv8il16r7ya8qfsk5sa1n8i5c1ryn57icf0pnnybzhw")))

(define-public crate-libgfold-0.1.1 (c (n "libgfold") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (f (quote ("humantime"))) (k 2)) (d (n "git2") (r "^0.17") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0g654l9ndx4p88xqy4mf4n7ixvgqlsvn1ns6rqvmac7j5vm27wi8")))

(define-public crate-libgfold-0.1.2 (c (n "libgfold") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (f (quote ("humantime"))) (k 2)) (d (n "git2") (r "^0.18") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "02dkjdh141kci4bhqzsb5m9nac8s5f7ghpvgkp37rsgmiaa3c5lb")))

(define-public crate-libgfold-0.1.3 (c (n "libgfold") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (f (quote ("humantime"))) (k 2)) (d (n "git2") (r "^0.18") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rayon") (r "^1.10") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "08aq5rhvxbg7jiysqnlhwi44a942n6hyargg8a4yn7jk9asg0dll")))

