(define-module (crates-io li bm libmhash) #:use-module (crates-io))

(define-public crate-libmhash-0.1.0 (c (n "libmhash") (v "0.1.0") (d (list (d (n "ambassador") (r "^0.3.5") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "threadpool") (r "^1.8.1") (d #t) (k 0)))) (h "12qpwdl8l29hb2hdp4mp5z8qhzgs8rf0aabi90xn2m2y1c68vbdz") (y #t)))

(define-public crate-libmhash-0.1.1 (c (n "libmhash") (v "0.1.1") (d (list (d (n "ambassador") (r "^0.3.5") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "threadpool") (r "^1.8.1") (d #t) (k 0)))) (h "1majwivwc2dqg6d5ssqsyzf7gafa0s7r5m351kbsmws4p0avypv5") (y #t)))

(define-public crate-libmhash-0.2.0 (c (n "libmhash") (v "0.2.0") (d (list (d (n "ambassador") (r "^0.3.5") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "crc32c") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "sha1") (r "^0.10.5") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "threadpool") (r "^1.8.1") (d #t) (k 0)))) (h "0rhsms0jzaqw8gqyyj8vhcwqvk87zpv23b6l9s5md5jdyjmkfg4a") (y #t) (s 2) (e (quote (("alter-impl" "dep:crc32c" "dep:crc32fast" "dep:sha1" "dep:sha2"))))))

(define-public crate-libmhash-0.2.1 (c (n "libmhash") (v "0.2.1") (d (list (d (n "ambassador") (r "^0.3.5") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "crc32c") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "sha1") (r "^0.10.5") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "threadpool") (r "^1.8.1") (d #t) (k 0)))) (h "0jygrnr9wyxymqafcqy0dv7iib4nifim13fd9z886cr0xzhvlmbc") (s 2) (e (quote (("alter-impl" "dep:crc32c" "dep:crc32fast" "dep:sha1" "dep:sha2"))))))

