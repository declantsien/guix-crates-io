(define-module (crates-io li bm libmedusa-zip) #:use-module (crates-io))

(define-public crate-libmedusa-zip-0.0.1 (c (n "libmedusa-zip") (v "0.0.1") (d (list (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "static_init") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("fs" "io-util" "rt" "sync"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "09l7vgczr05v20amqbkimmygw8galsi4mhzzrf9hzjn32yvjmbcf") (r "1.70")))

(define-public crate-libmedusa-zip-0.0.2 (c (n "libmedusa-zip") (v "0.0.2") (d (list (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "static_init") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("fs" "io-util" "rt" "sync"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "02arqk2xx3528gilgdis2qrf6p0irazryrknvi65jl8p563qkays") (r "1.70")))

(define-public crate-libmedusa-zip-0.0.3 (c (n "libmedusa-zip") (v "0.0.3") (d (list (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "static_init") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("fs" "io-util" "rt" "sync"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "1y70ilgnlmskq6vk6b3ssjph7rb206hgs49qj5hnj69b6fscps1h") (r "1.70")))

(define-public crate-libmedusa-zip-0.0.4 (c (n "libmedusa-zip") (v "0.0.4") (d (list (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "static_init") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("fs" "io-util" "rt" "sync"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "04nbf4l1gq38s52a82rc3zjg8870nw3nd2afp375mydg9z3h8m2r") (r "1.70")))

(define-public crate-libmedusa-zip-0.0.5 (c (n "libmedusa-zip") (v "0.0.5") (d (list (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "static_init") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("fs" "io-util" "rt" "sync"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "0xgyc9mpxvhc4vfpp3xysb1c4n4005bg4aijjyia73f9fszhlhyd") (r "1.70")))

(define-public crate-libmedusa-zip-0.0.6 (c (n "libmedusa-zip") (v "0.0.6") (d (list (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "static_init") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("fs" "io-util" "rt" "sync"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "1813dqq240nx4nwvxmw7xx8p7ny86s4n42sp9wsmcv63qx7i0iih") (r "1.70")))

(define-public crate-libmedusa-zip-0.0.7 (c (n "libmedusa-zip") (v "0.0.7") (d (list (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "static_init") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("fs" "io-util" "rt" "sync"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "16w40kgk4s404510awdsch667waq3j4yzddqjvsbxr0nmlqrs4i7") (r "1.70")))

(define-public crate-libmedusa-zip-0.0.8 (c (n "libmedusa-zip") (v "0.0.8") (d (list (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "static_init") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("fs" "io-util" "rt" "sync"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "1h5pfrqwqdbfklgj298c65q3lx1bdapcrjr0s5ljlllrkj0jrrj6") (r "1.70")))

(define-public crate-libmedusa-zip-0.0.9 (c (n "libmedusa-zip") (v "0.0.9") (d (list (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "static_init") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("fs" "io-util" "rt" "sync"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "1i65zwbxsdqha0jwysfwj28ldfm6pggr2idy7r44gc93dfvg864s") (r "1.70")))

