(define-module (crates-io li bm libmdbx) #:use-module (crates-io))

(define-public crate-libmdbx-0.1.0 (c (n "libmdbx") (v "0.1.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "^0.11.1") (d #t) (k 0) (p "mdbx-sys")) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "09b9nh4k343h51apsn024g5357ajnm6rq5m8s06h1h4jg0q7kakm") (f (quote (("cmake" "ffi/cmake-build")))) (y #t)))

(define-public crate-libmdbx-0.1.1 (c (n "libmdbx") (v "0.1.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "^0.11.4-git.20210105") (d #t) (k 0) (p "mdbx-sys")) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1imh0p99kaa66yj5z2b22pxqy79x0r2vcmm4yaiwmi8j7ira7a69") (f (quote (("cmake" "ffi/cmake-build")))) (y #t)))

(define-public crate-libmdbx-0.1.2 (c (n "libmdbx") (v "0.1.2") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "^0.11.5") (d #t) (k 0) (p "mdbx-sys")) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "133slgrfm754zll4psww95amr0nkyrkm6iqq73qvg3h63lx91bbs") (f (quote (("cmake" "ffi/cmake-build")))) (y #t)))

(define-public crate-libmdbx-0.1.3 (c (n "libmdbx") (v "0.1.3") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "^0.11.6") (d #t) (k 0) (p "mdbx-sys")) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1n6dw967736sbyhd9xp4d4qnzwh9b65ji8wnhpcvpgvqwgwz0r9j") (f (quote (("cmake" "ffi/cmake-build")))) (y #t)))

(define-public crate-libmdbx-0.1.4 (c (n "libmdbx") (v "0.1.4") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=0.11.6-4") (d #t) (k 0) (p "mdbx-sys")) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1q3c01mhd11ihch0hqc2isx3vymhg6i6nnqn0clj43bpxj87hb80") (f (quote (("cmake" "ffi/cmake-build")))) (y #t)))

(define-public crate-libmdbx-0.1.5 (c (n "libmdbx") (v "0.1.5") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=0.11.7-6") (d #t) (k 0) (p "mdbx-sys")) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0xbzafbx99cix1y0bb0yi1iwgc6c2asak6mq17c540dwy29vqyw9") (f (quote (("cmake" "ffi/cmake-build")))) (y #t)))

(define-public crate-libmdbx-0.1.6 (c (n "libmdbx") (v "0.1.6") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=0.11.8-0") (d #t) (k 0) (p "mdbx-sys")) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1p9gl1kpx5d16aa4nbz6k2kpgqj87kncfxs7a1q3jb3b0rlgn3lp") (y #t)))

(define-public crate-libmdbx-0.1.7 (c (n "libmdbx") (v "0.1.7") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=0.11.9-0") (d #t) (k 0) (p "mdbx-sys")) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "03l9xh76jqpbrrhi68n0i2m08smqmpjx99nqcwm8zlwa9zclaxnc")))

(define-public crate-libmdbx-0.1.8 (c (n "libmdbx") (v "0.1.8") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=0.12.1-0") (d #t) (k 0) (p "mdbx-sys")) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1cff5m67369frwvp0mvxmc8g19y8xbv74xh815x0d5hax5d5776c")))

(define-public crate-libmdbx-0.1.9 (c (n "libmdbx") (v "0.1.9") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=0.12.1-1") (d #t) (k 0) (p "mdbx-sys")) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1ysj29ilyhs3a1mw47505gfgvx6jhandzxkqmmhzj8ywz4pq0x3i")))

(define-public crate-libmdbx-0.1.10 (c (n "libmdbx") (v "0.1.10") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=0.12.1-2") (d #t) (k 0) (p "mdbx-sys")) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0fmh60187fv2bq04pjqqapzw4xp6ackzmfr327sdgmy6wcnd1fck")))

(define-public crate-libmdbx-0.1.11 (c (n "libmdbx") (v "0.1.11") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=0.12.2-2") (d #t) (k 0) (p "mdbx-sys")) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0hvpaxz077x2vz2iz857fif9jy239ws9s6xix5w47w8v68y7zxr2")))

(define-public crate-libmdbx-0.1.12 (c (n "libmdbx") (v "0.1.12") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=0.12.3-0") (d #t) (k 0) (p "mdbx-sys")) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1qin41n5lhg9f01678nyj29bkpnbdr7jm1s9s4sng04wijlxrnpl")))

(define-public crate-libmdbx-0.2.0 (c (n "libmdbx") (v "0.2.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=0.12.3-0") (d #t) (k 0) (p "mdbx-sys")) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1hd7r4kkkjbg7y43y6v9gfznfmv42yyqkzsp4jq0b69ddw3gdm4p")))

(define-public crate-libmdbx-0.2.1 (c (n "libmdbx") (v "0.2.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=0.12.3-16") (d #t) (k 0) (p "mdbx-sys")) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "17n4y83kfbyh6l4rbbx730hcwgb22dda5c4wpcl2fs2mr8bkzna5")))

(define-public crate-libmdbx-0.2.2 (c (n "libmdbx") (v "0.2.2") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "arrayref") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=0.12.3-16-1") (d #t) (k 0) (p "mdbx-sys")) (d (n "impls") (r "^1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1hkd49z09f58ccjcr5zqi828lk3i1cnnc3jhja6r49pwdn40fz6r") (f (quote (("orm" "anyhow" "arrayref" "arrayvec" "impls" "tempfile") ("cbor" "ciborium"))))))

(define-public crate-libmdbx-0.2.3 (c (n "libmdbx") (v "0.2.3") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "arrayref") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=0.12.3-16-1") (d #t) (k 0) (p "mdbx-sys")) (d (n "impls") (r "^1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1lv44rg0k7b54v4fwk4fxs2d9icm57lprgchpkwrw0kr3af47znb") (f (quote (("orm" "anyhow" "arrayref" "arrayvec" "impls" "tempfile") ("cbor" "ciborium"))))))

(define-public crate-libmdbx-0.2.4 (c (n "libmdbx") (v "0.2.4") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "arrayref") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=0.12.4-0") (d #t) (k 0) (p "mdbx-sys")) (d (n "impls") (r "^1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1c4abc9mbbhjp5cw4x7x5y06ar2zqwarscq5y0xx9ln4grx122vd") (f (quote (("orm" "anyhow" "arrayref" "arrayvec" "impls" "tempfile") ("cbor" "ciborium"))))))

(define-public crate-libmdbx-0.2.5 (c (n "libmdbx") (v "0.2.5") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "arrayref") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=0.12.4-0") (d #t) (k 0) (p "mdbx-sys")) (d (n "impls") (r "^1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1avac02k8xzyfxx0nrp7pq73ihkz29xnrgqmv4rvrnaxpj6z6cqb") (f (quote (("orm" "anyhow" "arrayref" "arrayvec" "impls" "tempfile") ("cbor" "ciborium"))))))

(define-public crate-libmdbx-0.3.0 (c (n "libmdbx") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "arrayref") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=0.12.4-0") (d #t) (k 0) (p "mdbx-sys")) (d (n "impls") (r "^1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0y76z2ckgp0zrmbzj1c5dgr6yrvkg1xz7ad3n99vp3y7gngahva2") (f (quote (("orm" "anyhow" "arrayref" "arrayvec" "impls" "tempfile") ("cbor" "ciborium"))))))

(define-public crate-libmdbx-0.3.1 (c (n "libmdbx") (v "0.3.1") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "arrayref") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=0.12.4-0") (d #t) (k 0) (p "mdbx-sys")) (d (n "impls") (r "^1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1qfjrh98cnijd2mblmhcfgpnjyydvyi4jil29mx8c67aqwxc4bck") (f (quote (("orm" "anyhow" "arrayref" "arrayvec" "impls" "tempfile") ("cbor" "ciborium"))))))

(define-public crate-libmdbx-0.3.2 (c (n "libmdbx") (v "0.3.2") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "arrayref") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=0.12.4") (d #t) (k 0) (p "mdbx-sys")) (d (n "impls") (r "^1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0chgqghqgyg0jxjj81wyrnwqd4mcvcvmm9qq7snkvmfhcb4867d9") (f (quote (("orm" "anyhow" "arrayref" "arrayvec" "impls" "tempfile") ("cbor" "ciborium"))))))

(define-public crate-libmdbx-0.3.3 (c (n "libmdbx") (v "0.3.3") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "arrayref") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=0.12.6") (d #t) (k 0) (p "mdbx-sys")) (d (n "impls") (r "^1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0n2lm4ms9brn5kqiw9srmap1g5zr0w651yyn1kcb17fxhlinc72q") (f (quote (("orm" "anyhow" "arrayref" "arrayvec" "impls" "tempfile") ("cbor" "ciborium"))))))

(define-public crate-libmdbx-0.3.4 (c (n "libmdbx") (v "0.3.4") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "arrayref") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=0.12.6") (d #t) (k 0) (p "mdbx-sys")) (d (n "impls") (r "^1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "01p689izk660ax5fn95d3jhb4z430ffaw6djin0k714g3hy6r4cp") (f (quote (("orm" "anyhow" "arrayref" "arrayvec" "impls" "tempfile") ("cbor" "ciborium"))))))

(define-public crate-libmdbx-0.3.5 (c (n "libmdbx") (v "0.3.5") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "arrayref") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=0.12.7") (d #t) (k 0) (p "mdbx-sys")) (d (n "impls") (r "^1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1gy75d0ck62zk91hq2jkjvf4yk1dvk0zykykgcz019y9glwyw2rz") (f (quote (("orm" "anyhow" "arrayref" "arrayvec" "impls" "tempfile") ("cbor" "ciborium"))))))

(define-public crate-libmdbx-0.4.0 (c (n "libmdbx") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "arrayref") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=12.7.0") (d #t) (k 0) (p "mdbx-sys")) (d (n "impls") (r "^1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "sealed") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0fgx091ybbl976vkm5fqw72kh63x1ykf47pf8xsvhfg56qvjjjqx") (f (quote (("orm" "anyhow" "arrayref" "arrayvec" "impls" "tempfile") ("cbor" "ciborium"))))))

(define-public crate-libmdbx-0.4.1 (c (n "libmdbx") (v "0.4.1") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "arrayref") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=12.8.0") (d #t) (k 0) (p "mdbx-sys")) (d (n "impls") (r "^1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "sealed") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0r82b9v7yivzpnzisz8xm7vd0n2hkiswcyb7pik9h52l9ynsvnv1") (f (quote (("orm" "anyhow" "arrayref" "arrayvec" "impls" "tempfile") ("cbor" "ciborium"))))))

(define-public crate-libmdbx-0.4.2 (c (n "libmdbx") (v "0.4.2") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "arrayref") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=12.9.0") (d #t) (k 0) (p "mdbx-sys")) (d (n "impls") (r "^1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "sealed") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0jnk9l31y0b7rp643ghzsvyzb7l27xl9y1ayahgpvbbd0skkiihy") (f (quote (("orm" "anyhow" "arrayref" "arrayvec" "impls" "tempfile") ("cbor" "ciborium"))))))

(define-public crate-libmdbx-0.5.0 (c (n "libmdbx") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "arrayref") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ffi") (r "=12.10.0") (d #t) (k 0) (p "mdbx-sys")) (d (n "impls") (r "^1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lifetimed-bytes") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "sealed") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "09x9jzji3r6x4x0nm3bv3yk4lsqgbbj2r98hq5m2xj94dqg574s6") (f (quote (("orm" "anyhow" "arrayref" "arrayvec" "impls" "tempfile") ("cbor" "ciborium"))))))

