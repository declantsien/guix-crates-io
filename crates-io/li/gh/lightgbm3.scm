(define-module (crates-io li gh lightgbm3) #:use-module (crates-io))

(define-public crate-lightgbm3-1.0.0 (c (n "lightgbm3") (v "1.0.0") (d (list (d (n "csv") (r "^1.2") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lightgbm3-sys") (r "^1.0.0") (d #t) (k 0)) (d (n "polars") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "04ws6x64rjsjnczd7fa8s4wkhc4pbklzrzgprnxl6xmyr3z0yivv") (f (quote (("openmp" "lightgbm3-sys/openmp") ("gpu" "lightgbm3-sys/gpu") ("default") ("cuda" "lightgbm3-sys/cuda")))) (s 2) (e (quote (("polars" "dep:polars"))))))

(define-public crate-lightgbm3-1.0.1 (c (n "lightgbm3") (v "1.0.1") (d (list (d (n "csv") (r "^1.2") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lightgbm3-sys") (r "^1.0.0") (d #t) (k 0)) (d (n "polars") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0yjy6yszfif7sbncd6i2hyyscgf9x5rnh3ch9z85l3sd3m1v3y2s") (f (quote (("openmp" "lightgbm3-sys/openmp") ("gpu" "lightgbm3-sys/gpu") ("default") ("cuda" "lightgbm3-sys/cuda")))) (s 2) (e (quote (("polars" "dep:polars"))))))

(define-public crate-lightgbm3-1.0.2 (c (n "lightgbm3") (v "1.0.2") (d (list (d (n "csv") (r "^1.2") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lightgbm3-sys") (r "^1.0.2") (d #t) (k 0)) (d (n "polars") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1lr0qi23h8yxh0pngpsr121prm0vdh3mmaqc0abwqcmrmlvk9jwp") (f (quote (("openmp" "lightgbm3-sys/openmp") ("gpu" "lightgbm3-sys/gpu") ("default") ("cuda" "lightgbm3-sys/cuda")))) (s 2) (e (quote (("polars" "dep:polars"))))))

