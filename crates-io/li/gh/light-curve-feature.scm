(define-module (crates-io li gh light-curve-feature) #:use-module (crates-io))

(define-public crate-light-curve-feature-0.1.0 (c (n "light-curve-feature") (v "0.1.0") (d (list (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "02fppdpx69b9vd5nibk3m9ycjcv88h95v1bd11zpplvbirlh5wiv")))

(define-public crate-light-curve-feature-0.1.1 (c (n "light-curve-feature") (v "0.1.1") (d (list (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "095lh4hlg3gpgy4c979k1jkbsx10b99cgg9ld4br7zgslrf6gkm6")))

(define-public crate-light-curve-feature-0.1.2 (c (n "light-curve-feature") (v "0.1.2") (d (list (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "1szbgivdg1lrcrn5mazyjwswl1akns2sx7lmfrbakvf5733fqmz9")))

(define-public crate-light-curve-feature-0.1.3 (c (n "light-curve-feature") (v "0.1.3") (d (list (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "09mid4k5y09sqiv29700jhxz6f5xl3n93h0hy4isif77hh4bizpf")))

(define-public crate-light-curve-feature-0.1.4 (c (n "light-curve-feature") (v "0.1.4") (d (list (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "1n34bh7nv6i50bw1pwdhmg9jrs5nighg6x75fnd03b036x344nr6")))

(define-public crate-light-curve-feature-0.1.5 (c (n "light-curve-feature") (v "0.1.5") (d (list (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "11bkqw5xgdr8kyi703dasacmv6q3li0i8gn7k02bv8icc38nq7r0")))

(define-public crate-light-curve-feature-0.1.6 (c (n "light-curve-feature") (v "0.1.6") (d (list (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "1p6lk8py79xvl49pgqq0bvs8f1cl5ay41p93fla86p7hs9rvyw9n")))

(define-public crate-light-curve-feature-0.1.7 (c (n "light-curve-feature") (v "0.1.7") (d (list (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "1c9rn09bhxjv6f14rlnk34887p6573j9j4g7mzm7zvay9ccvbw71")))

(define-public crate-light-curve-feature-0.1.8-beta.0 (c (n "light-curve-feature") (v "0.1.8-beta.0") (d (list (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "1brv1wzp49p90ca2js11zcrmkc9cprhgmnvaa3cxib2140j09h5h")))

(define-public crate-light-curve-feature-0.1.8-beta.1 (c (n "light-curve-feature") (v "0.1.8-beta.1") (d (list (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "1wmf7nfi9w20z5s1l8dylzld8dwqgzsix8y6f234frkczvlvw5bi")))

(define-public crate-light-curve-feature-0.1.8 (c (n "light-curve-feature") (v "0.1.8") (d (list (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "1dp3b02svamz458kbhyn9g0h38jd9qf4msrn6f39yyjrw955b9zy")))

(define-public crate-light-curve-feature-0.1.9 (c (n "light-curve-feature") (v "0.1.9") (d (list (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "0x7rfsi5as7jr6gjycga06j733v6jkpkvh4zvvr1s2m4y7ivdk1f")))

(define-public crate-light-curve-feature-0.1.10-beta.0 (c (n "light-curve-feature") (v "0.1.10-beta.0") (d (list (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "1qjld2la76jcqz1gcn90nzxnl099p1idr0vzc1mykqh2gxpf09dg")))

(define-public crate-light-curve-feature-0.1.10-beta.1 (c (n "light-curve-feature") (v "0.1.10-beta.1") (d (list (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "09qw6l90p3gyvq2bqbn4yyy6h23g1l63dyzpsh846fsbiiwxxfb5")))

(define-public crate-light-curve-feature-0.1.10 (c (n "light-curve-feature") (v "0.1.10") (d (list (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)))) (h "0mwc6dlx3kyndaph68q7rfm8q5r4b05f9x6y3jlr202lfv7w4dw9")))

(define-public crate-light-curve-feature-0.1.11 (c (n "light-curve-feature") (v "0.1.11") (d (list (d (n "chfft") (r "~0.3") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "fftw") (r "~0.5") (f (quote ("system"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fftw") (r "~0.6") (d #t) (t "cfg(not(target_os = \"macos\"))") (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)))) (h "1h59b1d0f76p1vk93xbx4plfpj2n17pl30y545x0a1qzc6rqfbgm")))

(define-public crate-light-curve-feature-0.1.12-beta.0 (c (n "light-curve-feature") (v "0.1.12-beta.0") (d (list (d (n "chfft") (r "~0.3") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "fftw") (r "~0.6") (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)))) (h "04p6v6hznybaia6fg4gsp64880y6ihcqam3vjm3mbq6wmrw81s7p") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.1.12-beta.1 (c (n "light-curve-feature") (v "0.1.12-beta.1") (d (list (d (n "chfft") (r "~0.3") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "fftw") (r "~0.6") (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)))) (h "1a338dwmsi78hny2d75d1amb2j5djsfjr7xxnwkh9vci44fy2y0i") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-system"))))))

(define-public crate-light-curve-feature-0.1.12-beta.2 (c (n "light-curve-feature") (v "0.1.12-beta.2") (d (list (d (n "chfft") (r "~0.3") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "fftw") (r "~0.6") (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)))) (h "11rw561j3mkd6vxcki7131520i5n4w1pjci0k4by29cb676xw0pd") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.1.12-beta.3 (c (n "light-curve-feature") (v "0.1.12-beta.3") (d (list (d (n "chfft") (r "~0.3") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "fftw") (r "~0.6") (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)))) (h "13qa7kfyp9601lb8ay3jaivn2ppz0y5lm24zdynzk1j5rdlc7bbn") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.1.12 (c (n "light-curve-feature") (v "0.1.12") (d (list (d (n "chfft") (r "~0.3") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "fftw") (r "~0.6") (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)))) (h "0bqx7vzapncrxsph7bl4v3z44wvdnvmq6h0jzi2gfxgwg5mj2lld") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.1.13 (c (n "light-curve-feature") (v "0.1.13") (d (list (d (n "chfft") (r "~0.3") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "fftw") (r "~0.6") (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)))) (h "0rcla9xh73bgb1j2z5gk42y670d0ip73fw5cgns0gm3b0k4fcdki") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.1.14 (c (n "light-curve-feature") (v "0.1.14") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)))) (h "0nrwv8lz8xg3cldfl5na3pha2ma0vl3nbf6ymd7j9jvmd3iw5xvj") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.1.15-beta.0 (c (n "light-curve-feature") (v "0.1.15-beta.0") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)))) (h "1ff5ndqsgx22rnbw235g1rpjnxig2qbixf14mfyhpf96vmzl28wz") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.1.15 (c (n "light-curve-feature") (v "0.1.15") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)))) (h "0am8cr1vxy369vp4gfg5vymn1n0aapg5587v7vbc4g95vd64j66b") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.1.16 (c (n "light-curve-feature") (v "0.1.16") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)))) (h "0h5hsj8z79prl5hb68rpvv0jv27527wfky5wykpb47rmkimhzhd7") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.1.17 (c (n "light-curve-feature") (v "0.1.17") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)))) (h "0nqa8x1abzxqqdp9w7lh0hw1azs4mq8cq8jgkcpxk2nqlk51hph5") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.1.18 (c (n "light-curve-feature") (v "0.1.18") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)))) (h "1rhwjnkrrwd69x1s6f9zd6h2hah7qxvf44nxl1ri79sprbjw1l89") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.1.19 (c (n "light-curve-feature") (v "0.1.19") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)))) (h "1s9bxf998jr3i3kf86ffvss1lhljg40x7jg3xpcrpgawcbi9h63s") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.1.20 (c (n "light-curve-feature") (v "0.1.20") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "fs_extra") (r "~1.1.0") (d #t) (k 1)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)))) (h "17hh5vjd0gzjy4ylwmcbk53didjd715v0zxz1n0bwal2lpw6wyqi") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.1.21 (c (n "light-curve-feature") (v "0.1.21") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "fs_extra") (r "~1.1.0") (d #t) (k 1)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)))) (h "1xsqbf034nw130rb8k8jmykf9cfifqs7zxbxqxw9k9hslr6ky987") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.1.22 (c (n "light-curve-feature") (v "0.1.22") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "fs_extra") (r "~1.1.0") (d #t) (k 1)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)))) (h "1ra52vx1ydnnabzjdhdyc3rrv77s78ib53hyvhrlcrqh6zfsdgsv") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.1.23 (c (n "light-curve-feature") (v "0.1.23") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "fs_extra") (r "~1.1.0") (d #t) (k 1)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)))) (h "0gjw38gmh8jc4j7dcnbkmhhf274ircnwf305hdd2ck6f51fr6ssr") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.1.24 (c (n "light-curve-feature") (v "0.1.24") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "fs_extra") (r "~1.1.0") (d #t) (k 1)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)))) (h "0n7w8x91g8wn5mwjfpvbc54rc5wi8m26nbhlg4j0cmy6irf2pvg6") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.1.25-beta.0 (c (n "light-curve-feature") (v "0.1.25-beta.0") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "fs_extra") (r "~1.1.0") (d #t) (k 1)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)))) (h "0ns07snik0pq145ri2ph6p23fkyxn1w408h9vcrxm1mc6h570cq7") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.1.25 (c (n "light-curve-feature") (v "0.1.25") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "fs_extra") (r "~1.1.0") (d #t) (k 1)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)))) (h "06rw4qrqakc2msr15r876qj1rs5vv30x38cidb1llihqla32r2xf") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.1.26 (c (n "light-curve-feature") (v "0.1.26") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "fs_extra") (r "~1.1.0") (d #t) (k 1)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)))) (h "1k1d4rx6yd2gyxy68q5q1fji1z438n1f5b1fccp23xrypimxhbbw") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.1.27-beta.0 (c (n "light-curve-feature") (v "0.1.27-beta.0") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "fs_extra") (r "~1.1.0") (d #t) (k 1)) (d (n "itertools") (r "~0.9.0") (d #t) (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "05xfjk249hs72ql392hc9n7wld9ncahjn7vfdcwyd6q6x5v9wn8c") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.1.27-beta.1 (c (n "light-curve-feature") (v "0.1.27-beta.1") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "fs_extra") (r "~1.1.0") (d #t) (k 1)) (d (n "itertools") (r "~0.9.0") (d #t) (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0pvlc4cbprni1kpvh0kf9qxrv5afymbapz33hqpwn6a19kav0pvi") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.1.27 (c (n "light-curve-feature") (v "0.1.27") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "itertools") (r "~0.9.0") (d #t) (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "1i3gs87pmqfg4mqpmj7gx9nnvgnjnam18jkaam9i765vnbyg3asn") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.1.28 (c (n "light-curve-feature") (v "0.1.28") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "itertools") (r "~0.9.0") (d #t) (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0g85520qmk8basbld2l84qry0x3mspk33c0kvjvig8ja46rrw66w") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.2.0-alpha.1 (c (n "light-curve-feature") (v "0.2.0-alpha.1") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "itertools") (r "~0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0w8bh4d245r87c5fphzczv82lqf7jcyjjz0grml78m4k77npr6w2") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.2.0-beta.0 (c (n "light-curve-feature") (v "0.2.0-beta.0") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "itertools") (r "~0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "11iccrp64a6ac70ypvlp5c1q6vc9f9xxy6pvjib11xak692qv7c0") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.2.0-beta.1 (c (n "light-curve-feature") (v "0.2.0-beta.1") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "itertools") (r "~0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0djrfq57n5a61l3mcrdlgz6p6jaqz6ggapgirz1r4qjdz7kszdr7") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.2.0-beta.2 (c (n "light-curve-feature") (v "0.2.0-beta.2") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "itertools") (r "~0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0jhl2v1d6idharp79xsdsvprg6wknd2q2j79idji5rzpcgw3ysn4") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.2.0-beta.4 (c (n "light-curve-feature") (v "0.2.0-beta.4") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "itertools") (r "~0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0hymm642k74vzm5z7a5lzzgjzm7w5hxdzrzlpq8rkg18z8igk8fh") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.2.0-beta.5 (c (n "light-curve-feature") (v "0.2.0-beta.5") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "itertools") (r "~0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0v73lwr4l5rwd94s1gjkzx5749b8dxmicccxz7nh79rmkphpdm2a") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.2.0-beta.6 (c (n "light-curve-feature") (v "0.2.0-beta.6") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "itertools") (r "~0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0ylhji7m5rnnz6kcgzanfahb82hk2dg01lxri039krg452jqdm9w") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.2.0-rc.0 (c (n "light-curve-feature") (v "0.2.0-rc.0") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "itertools") (r "~0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "18g4m7qd55k72f5gk7qxahxsf78w3plavm8hxx8dpff2w8b88w51") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.2.0-rc.1 (c (n "light-curve-feature") (v "0.2.0-rc.1") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "itertools") (r "~0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0da82kvz59cf3fygbdwflqjx58jrpa6pnbjapybx73dxc7vlcibv") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.2.0-rc.2 (c (n "light-curve-feature") (v "0.2.0-rc.2") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "itertools") (r "~0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "1wn5czldn4kl155nqvid88kswn1fy0xqxvi2xyzim5yypl31ii35") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.2.0-rc.3 (c (n "light-curve-feature") (v "0.2.0-rc.3") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "itertools") (r "~0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0x90x7cas5n9qqyinxivs0dhwwjx7jqx17difv5320zy9njvqyl1") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.2.0 (c (n "light-curve-feature") (v "0.2.0") (d (list (d (n "chfft") (r "~0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "~0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "~0.9.0") (d #t) (k 0)) (d (n "fftw") (r "~0.6.1") (k 0)) (d (n "itertools") (r "~0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "libm") (r "^0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 2)) (d (n "rand_distr") (r "~0.2") (d #t) (k 2)) (d (n "rustfft") (r "~3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "05jfzz15yx14n6qn67fzxcwb7ncbp5cffsfl516cjic66w3mrd8h") (f (quote (("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.2.1-beta.0 (c (n "light-curve-feature") (v "0.2.1-beta.0") (d (list (d (n "GSL") (r "~3.0.0") (o #t) (k 0)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "fftw") (r "^0.6.2") (k 0)) (d (n "hyperdual") (r "~0.3.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0qgz4ix05cfw0cz3xfrlx5kv0sz9bdq232ysy3hvrvak8ywvfbj2") (f (quote (("gsl" "GSL/v2_1" "hyperdual") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.2.1-beta.1 (c (n "light-curve-feature") (v "0.2.1-beta.1") (d (list (d (n "GSL") (r "~3.0.0") (o #t) (k 0)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "fftw") (r "^0.6.2") (k 0)) (d (n "hyperdual") (r "~0.3.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0n2mfb29988898qvn3ar7aaq7z30ymp5sda8ifzm8w2xpdqg4iwi") (f (quote (("gsl" "GSL/v2_1" "hyperdual") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.2.1 (c (n "light-curve-feature") (v "0.2.1") (d (list (d (n "GSL") (r "~3.0.0") (o #t) (k 0)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "~0.3.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0vqzl1wcazgjhjsqcnhzss1g6lx0rf3hm5435kz9w9188p9hxh66") (f (quote (("gsl" "GSL/v2_1" "hyperdual") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.2.2 (c (n "light-curve-feature") (v "0.2.2") (d (list (d (n "GSL") (r "~4.0.0") (o #t) (k 0)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "~0.3.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0ai41v5d5c07ka5gwzfri8k1c2n60yrg4h167vphz676ly720sh4") (f (quote (("gsl" "GSL/v2_1" "hyperdual") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.3.0-alpha.0 (c (n "light-curve-feature") (v "0.3.0-alpha.0") (d (list (d (n "GSL") (r "~4.0.0") (o #t) (k 0)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "~0.4.1") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "18psk54s6fimb3ffpzmkbdrbx73zczssn69cyy02d57kngd82q4j") (f (quote (("gsl" "GSL/v2_1" "hyperdual") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.3.0-alpha.1 (c (n "light-curve-feature") (v "0.3.0-alpha.1") (d (list (d (n "GSL") (r "~4.0.0") (o #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "^0.4.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "macro_const") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "~1.5.1") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "1zi60psy2nnz4ksp4y78a5b55lkkkfka43cad3i46lz3p09x87sz") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.3.0-alpha.2 (c (n "light-curve-feature") (v "0.3.0-alpha.2") (d (list (d (n "GSL") (r "~4.0.0") (o #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "^0.4.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "macro_const") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "~1.5.1") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0zr7gjywlkz4nll8wgbn10zaan1zafbv7dvrp9nj9p5smfjp0r4h") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.3.0-alpha.3 (c (n "light-curve-feature") (v "0.3.0-alpha.3") (d (list (d (n "GSL") (r "~4.0.0") (o #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "^0.4.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "macro_const") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "~1.5.1") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "1ygj62b444l81ll85ci53432ahvpdnisq4h7xpaxzif7hzzp5301") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.3.0-alpha.4 (c (n "light-curve-feature") (v "0.3.0-alpha.4") (d (list (d (n "GSL") (r "~4.0.0") (o #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "^0.4.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "macro_const") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "~1.5.1") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0czcg2p1dypiwn7cby6nzpsgby7772hl9il0vdfvzzlxyygj528j") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.3.0-beta.0 (c (n "light-curve-feature") (v "0.3.0-beta.0") (d (list (d (n "GSL") (r "~4.0.0") (o #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "^0.4.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "macro_const") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "~1.5.1") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "1q9dn348aavh0m3ck5s1cn4x6yd4w6iqk0d9s6rxr31960sz1fpl") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.3.0 (c (n "light-curve-feature") (v "0.3.0") (d (list (d (n "GSL") (r "~4.0.0") (o #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "^0.4.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "macro_const") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "~1.5.1") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "1qjapgzwkxqdd9fxv67k6m5ak9cl17c7q7sknbj7j1wc7miwl430") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.3.1 (c (n "light-curve-feature") (v "0.3.1") (d (list (d (n "GSL") (r "~4.0.0") (o #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "^0.4.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "macro_const") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "~1.5.1") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "08n79bsp0nljf6kmkp25pjg68ckv99jc6gvlg4yka85xb5qyaqbh") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.3.2 (c (n "light-curve-feature") (v "0.3.2") (d (list (d (n "GSL") (r "~4.0.0") (o #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "^0.4.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "macro_const") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "~1.5.1") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "1b1i9rv0plrjj767a7k9h593w6b51dh43gbsvv3w7myjcn9v8i74") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.3.3-beta.0 (c (n "light-curve-feature") (v "0.3.3-beta.0") (d (list (d (n "GSL") (r "~4.0.0") (o #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "^0.4.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "macro_const") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "~1.5.1") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0kjnq0g9l5pr8x0c9vf5mbfp5dklcwh8n9fi6js5szhqzqj62bmv") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.3.3 (c (n "light-curve-feature") (v "0.3.3") (d (list (d (n "GSL") (r "~4.0.0") (o #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "^0.4.2") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "macro_const") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "~1.5.1") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0wwmaaix5frn6fzk8x647nasqnfl33xxwqvygivq224dvcb4d4rf") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source"))))))

(define-public crate-light-curve-feature-0.4.0-beta.0 (c (n "light-curve-feature") (v "0.4.0-beta.0") (d (list (d (n "GSL") (r "~6.0.0") (o #t) (k 0)) (d (n "anyhow") (r "<1.0.49") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-rc.0") (f (quote ("std" "color" "suggestions" "derive" "wrap_help"))) (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "^0.5.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "macro_const") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "~1.5.1") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "1dw5fdbaclpayq7axaxhd8w2s2k0gh34mgf2qw21k3ar242l0kmj") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source")))) (r "1.56")))

(define-public crate-light-curve-feature-0.4.0 (c (n "light-curve-feature") (v "0.4.0") (d (list (d (n "GSL") (r "~6.0.0") (o #t) (k 0)) (d (n "anyhow") (r "<1.0.49") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-rc.0") (f (quote ("std" "color" "suggestions" "derive" "wrap_help"))) (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "^0.5.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "macro_const") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "~1.5.1") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0zdgl96j94ycxp3073rwxj9r3k0r26py6ia99n9h1b4rwds0ywfs") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source")))) (r "1.56")))

(define-public crate-light-curve-feature-0.4.1 (c (n "light-curve-feature") (v "0.4.1") (d (list (d (n "GSL") (r "~6.0.0") (o #t) (k 0)) (d (n "anyhow") (r "<1.0.49") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-rc.0") (f (quote ("std" "color" "suggestions" "derive" "wrap_help"))) (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "^0.5.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 0)) (d (n "macro_const") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "~1.5.1") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0mvgc9lj5ar2ww6khyxp43q2mwnysh40mc6al212lq8pypnm7cam") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source")))) (r "1.56")))

(define-public crate-light-curve-feature-0.4.2 (c (n "light-curve-feature") (v "0.4.2") (d (list (d (n "GSL") (r "~6.0.0") (o #t) (k 0)) (d (n "anyhow") (r "<1.0.49") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-rc.0") (f (quote ("std" "color" "suggestions" "derive" "wrap_help"))) (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "^0.5.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 2)) (d (n "macro_const") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "~1.5.1") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0dbbj0kzrqdjk6frpg4v7c55hsqxwvf409afh44f0fbibgvcxlva") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source")))) (r "1.56")))

(define-public crate-light-curve-feature-0.4.3 (c (n "light-curve-feature") (v "0.4.3") (d (list (d (n "GSL") (r "~6.0.0") (o #t) (k 0)) (d (n "anyhow") (r "<1.0.49") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-rc.0") (f (quote ("std" "color" "suggestions" "derive" "wrap_help"))) (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "^0.5.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 2)) (d (n "macro_const") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "~1.5.1") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0yx4fqr7jfrriyb4hi87n9r61xvmys46kh7l27vpp4c09h0zwxzq") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source")))) (r "1.56")))

(define-public crate-light-curve-feature-0.4.4 (c (n "light-curve-feature") (v "0.4.4") (d (list (d (n "GSL") (r "~6.0.0") (o #t) (k 0)) (d (n "anyhow") (r "<1.0.49") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-rc.0") (f (quote ("std" "color" "suggestions" "derive" "wrap_help"))) (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "^0.5.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 2)) (d (n "macro_const") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "~1.5.1") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "1k1fayjhs6ccs6l4gk6v03xlh2zlkyzify4amvsn8dqq04wihbaw") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source")))) (r "1.56")))

(define-public crate-light-curve-feature-0.4.5 (c (n "light-curve-feature") (v "0.4.5") (d (list (d (n "GSL") (r "~6.0.0") (o #t) (k 0)) (d (n "anyhow") (r "<1.0.49") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-rc.0") (f (quote ("std" "color" "suggestions" "derive" "wrap_help"))) (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "^0.5.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 2)) (d (n "macro_const") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "~1.5.1") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0w0dvwha47h8axfpa7an3y8n6byk165v2l6j38m8zp7nwrmjhk9z") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source")))) (r "1.56")))

(define-public crate-light-curve-feature-0.5.0 (c (n "light-curve-feature") (v "0.5.0") (d (list (d (n "GSL") (r "~6.0.0") (o #t) (k 0)) (d (n "anyhow") (r "<1.0.49") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-rc.0") (f (quote ("std" "color" "suggestions" "derive" "wrap_help"))) (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "^0.5.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 2)) (d (n "macro_const") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "~1.5.1") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "144dww19j19lj51f69nvi02mgp4acr3bi6m90hsw4wlc3i9vxp70") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source")))) (r "1.57")))

(define-public crate-light-curve-feature-0.4.6 (c (n "light-curve-feature") (v "0.4.6") (d (list (d (n "GSL") (r "~6.0.0") (o #t) (k 0)) (d (n "anyhow") (r "<1.0.49") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-rc.0") (f (quote ("std" "color" "suggestions" "derive" "wrap_help"))) (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "^0.5.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 2)) (d (n "macro_const") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "~1.5.1") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "05nb245d0kahpfszhin6x5z4zdhjyv638q52819fczg986w5nhhb") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source")))) (r "1.56")))

(define-public crate-light-curve-feature-0.5.1 (c (n "light-curve-feature") (v "0.5.1") (d (list (d (n "GSL") (r "~6.0.0") (o #t) (k 0)) (d (n "anyhow") (r "<1.0.49") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.2.6") (f (quote ("std" "color" "suggestions" "derive" "wrap_help" "unstable-v4"))) (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "^0.5.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 2)) (d (n "macro_const") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "~1.5.1") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "1agf6ynyv8jdl3ph9ki0l1zyjjf4l4w29538hqpfab4rc4sf9n6j") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source")))) (r "1.57")))

(define-public crate-light-curve-feature-0.5.2 (c (n "light-curve-feature") (v "0.5.2") (d (list (d (n "GSL") (r "~6.0.0") (o #t) (k 0)) (d (n "anyhow") (r "<1.0.49") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.2.6") (f (quote ("std" "color" "suggestions" "derive" "wrap_help" "unstable-v4"))) (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fftw") (r "^0.7.0") (k 0)) (d (n "hyperdual") (r "^0.5.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libm") (r "~0.2.1") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 2)) (d (n "macro_const") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "~1.5.1") (d #t) (k 2)) (d (n "realfft") (r "^1.1") (d #t) (k 2)) (d (n "rustfft") (r "^5.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1.0") (d #t) (k 0)))) (h "0kqx9rgi00dn43fzjp3lylzw3lr1b0qvz8dq3a7j9nn5ai700s0c") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source")))) (r "1.57")))

(define-public crate-light-curve-feature-0.5.3 (c (n "light-curve-feature") (v "0.5.3") (d (list (d (n "GSL") (r "^6") (o #t) (k 0)) (d (n "anyhow") (r "<1.0.49") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.2.6") (f (quote ("std" "color" "suggestions" "derive" "wrap_help" "unstable-v4"))) (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.9") (d #t) (k 0)) (d (n "fftw") (r "^0.7") (k 0)) (d (n "hyperdual") (r "^1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 2)) (d (n "macro_const") (r "^0.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 2)) (d (n "realfft") (r "^3.1") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thread_local") (r "^1.1, <1.1.7") (d #t) (k 0)) (d (n "unzip3") (r "^1") (d #t) (k 0)))) (h "1d550id9cx1igy7x48324wyp93f6akjl8i0s9c74mqcs1279j1h3") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source")))) (r "1.57")))

(define-public crate-light-curve-feature-0.5.4-beta.0 (c (n "light-curve-feature") (v "0.5.4-beta.0") (d (list (d (n "GSL") (r "^6") (o #t) (k 0)) (d (n "anyhow") (r "<1.0.49") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "ceres-solver") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.2.6") (f (quote ("std" "color" "suggestions" "derive" "wrap_help" "unstable-v4"))) (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.9") (d #t) (k 0)) (d (n "fftw") (r "^0.7") (k 0)) (d (n "hyperdual") (r "^1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 2)) (d (n "macro_const") (r "^0.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 2)) (d (n "realfft") (r "^3.1") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thread_local") (r "^1.1, <1.1.7") (d #t) (k 0)) (d (n "unzip3") (r "^1") (d #t) (k 0)))) (h "04hb9iizccmdh2xfdaa3wvpja6v242n6pzid20pjbblzj1wsaip2") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source") ("ceres-system" "ceres-solver/system") ("ceres-source" "ceres-solver/source")))) (r "1.57")))

(define-public crate-light-curve-feature-0.5.4 (c (n "light-curve-feature") (v "0.5.4") (d (list (d (n "GSL") (r "^6") (o #t) (k 0)) (d (n "anyhow") (r "<1.0.49") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "ceres-solver") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.2.6") (f (quote ("std" "color" "suggestions" "derive" "wrap_help" "unstable-v4"))) (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.9") (d #t) (k 0)) (d (n "fftw") (r "^0.7") (k 0)) (d (n "hyperdual") (r "^1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 2)) (d (n "macro_const") (r "^0.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 2)) (d (n "realfft") (r "^3.1") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thread_local") (r "^1.1, <1.1.7") (d #t) (k 0)) (d (n "unzip3") (r "^1") (d #t) (k 0)))) (h "0jjaa78piy5ndl3jydi1a5a8w29cwql1vi1wlnb1zd8l3r9d71k7") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source") ("ceres-system" "ceres-solver/system") ("ceres-source" "ceres-solver/source")))) (r "1.57")))

(define-public crate-light-curve-feature-0.5.5-beta.0 (c (n "light-curve-feature") (v "0.5.5-beta.0") (d (list (d (n "GSL") (r "^6") (o #t) (k 0)) (d (n "anyhow") (r "<1.0.49") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "ceres-solver") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.2.6") (f (quote ("std" "color" "suggestions" "derive" "wrap_help" "unstable-v4"))) (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.9") (d #t) (k 0)) (d (n "fftw") (r "^0.7") (k 0)) (d (n "hyperdual") (r "^1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 2)) (d (n "macro_const") (r "^0.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 2)) (d (n "realfft") (r "^3.1") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thread_local") (r "^1.1, <1.1.7") (d #t) (k 0)) (d (n "unzip3") (r "^1") (d #t) (k 0)))) (h "00bdhwgsp10jkj0k6a47fnb356qg0g7jnk09g05pj07ijys91g1m") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source") ("ceres-system" "ceres-solver/system") ("ceres-source" "ceres-solver/source")))) (r "1.57")))

(define-public crate-light-curve-feature-0.5.5 (c (n "light-curve-feature") (v "0.5.5") (d (list (d (n "GSL") (r "^6") (o #t) (k 0)) (d (n "anyhow") (r "<1.0.49") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "ceres-solver") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.2.6") (f (quote ("std" "color" "suggestions" "derive" "wrap_help" "unstable-v4"))) (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.9") (d #t) (k 0)) (d (n "fftw") (r "^0.7") (k 0)) (d (n "hyperdual") (r "^1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 2)) (d (n "macro_const") (r "^0.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 2)) (d (n "realfft") (r "^3.1") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thread_local") (r "^1.1, <1.1.7") (d #t) (k 0)) (d (n "unzip3") (r "^1") (d #t) (k 0)))) (h "0cq62ly5k6bz289wr4b67jrdy5d2yw5k4c8ldj3c706jbwrgpcaw") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source") ("ceres-system" "ceres-solver/system") ("ceres-source" "ceres-solver/source")))) (r "1.57")))

(define-public crate-light-curve-feature-0.6.0-beta.0 (c (n "light-curve-feature") (v "0.6.0-beta.0") (d (list (d (n "GSL") (r "^6") (o #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "ceres-solver") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.2.6") (f (quote ("std" "color" "suggestions" "derive" "wrap_help" "unstable-v4"))) (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.9") (d #t) (k 0)) (d (n "fftw") (r "^0.8") (k 0)) (d (n "hyperdual") (r "^1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 2)) (d (n "macro_const") (r "^0.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "plotters") (r "^0.3.5") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.3") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 2)) (d (n "realfft") (r "^3.1") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1") (d #t) (k 0)))) (h "1b0b06x75lk34wqf1g6zl6asnchmf1wpwjc2xy1jf81x0iy88389") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source") ("ceres-system" "ceres-solver/system") ("ceres-source" "ceres-solver/source")))) (r "1.67")))

(define-public crate-light-curve-feature-0.6.0-beta.1 (c (n "light-curve-feature") (v "0.6.0-beta.1") (d (list (d (n "GSL") (r "^6") (o #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "ceres-solver") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.2.6") (f (quote ("std" "color" "suggestions" "derive" "wrap_help" "unstable-v4"))) (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.9") (d #t) (k 0)) (d (n "fftw") (r "^0.8") (k 0)) (d (n "hyperdual") (r "^1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 2)) (d (n "macro_const") (r "^0.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "plotters") (r "^0.3.5") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.3") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 2)) (d (n "realfft") (r "^3.1") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1") (d #t) (k 0)))) (h "0ibfqqzjx4nxsgp9r7q7rzgcl2706xql5hv26lapvdpdxnhvw6h2") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source") ("ceres-system" "ceres-solver/system") ("ceres-source" "ceres-solver/source")))) (r "1.67")))

(define-public crate-light-curve-feature-0.6.0 (c (n "light-curve-feature") (v "0.6.0") (d (list (d (n "GSL") (r "^6") (o #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "ceres-solver") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.2.6") (f (quote ("std" "color" "suggestions" "derive" "wrap_help" "unstable-v4"))) (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.9") (d #t) (k 0)) (d (n "fftw") (r "^0.8") (k 0)) (d (n "hyperdual") (r "^1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 2)) (d (n "macro_const") (r "^0.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "plotters") (r "^0.3.5") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.3") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 2)) (d (n "realfft") (r "^3.1") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1") (d #t) (k 0)))) (h "11j6ls4v1ym6czmjwhw938mg84nrcbkgb0h1w03l3zi6q0bgv9fr") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source") ("ceres-system" "ceres-solver/system") ("ceres-source" "ceres-solver/source")))) (r "1.67")))

(define-public crate-light-curve-feature-0.7.0 (c (n "light-curve-feature") (v "0.7.0") (d (list (d (n "GSL") (r "^6") (o #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "ceres-solver") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.2.6") (f (quote ("std" "color" "suggestions" "derive" "wrap_help" "unstable-v4"))) (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.9") (d #t) (k 0)) (d (n "fftw") (r "^0.8") (k 0)) (d (n "hyperdual") (r "^1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 2)) (d (n "macro_const") (r "^0.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "plotters") (r "^0.3.5") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 2)) (d (n "realfft") (r "^3.1") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1") (d #t) (k 0)))) (h "1a4hwqq77rc1kppi9hwf57qnwfzb3hqvqjswq09kjyzj4pchyrzx") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source") ("ceres-system" "ceres-solver/system") ("ceres-source" "ceres-solver/source")))) (r "1.67")))

(define-public crate-light-curve-feature-0.7.1 (c (n "light-curve-feature") (v "0.7.1") (d (list (d (n "GSL") (r "^6") (o #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "ceres-solver") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "chfft") (r "^0.3.4") (d #t) (k 2)) (d (n "clap") (r "^3.2.6") (f (quote ("std" "color" "suggestions" "derive" "wrap_help" "unstable-v4"))) (d #t) (k 2)) (d (n "conv") (r "^0.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "emcee") (r "^0.3.0") (d #t) (k 0)) (d (n "emcee_rand") (r "^0.3.15") (d #t) (k 0) (p "rand")) (d (n "enum_dispatch") (r "^0.3.9") (d #t) (k 0)) (d (n "fftw") (r "^0.8") (k 0)) (d (n "hyperdual") (r "^1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "light-curve-common") (r "^0.1.0") (d #t) (k 2)) (d (n "macro_const") (r "^0.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "plotters") (r "^0.3.5") (f (quote ("errorbar" "line_series" "ttf"))) (k 2)) (d (n "plotters-bitmap") (r "^0.3.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 2)) (d (n "realfft") (r "^3.1") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "serde_type_name") (r "^0.2") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thread_local") (r "^1.1") (d #t) (k 0)) (d (n "unzip3") (r "^1") (d #t) (k 0)))) (h "1sdmisq3xy8pdhkp2x9bmay567vq410yy963ik05zmjzfv0rbk1h") (f (quote (("gsl" "GSL/v2_1") ("fftw-system" "fftw/system") ("fftw-source" "fftw/source") ("fftw-mkl" "fftw/intel-mkl") ("default" "fftw-source") ("ceres-system" "ceres-solver/system") ("ceres-source" "ceres-solver/source")))) (r "1.67")))

