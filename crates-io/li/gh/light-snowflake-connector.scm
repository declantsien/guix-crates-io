(define-module (crates-io li gh light-snowflake-connector) #:use-module (crates-io))

(define-public crate-light-snowflake-connector-0.1.0 (c (n "light-snowflake-connector") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "jwt-simple") (r "^0.12.6") (f (quote ("pure-rust"))) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "gzip"))) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^1.2.2") (f (quote ("v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)))) (h "0f6kgamv3bzzrw91vgkb76587zl6dqnpm6rsqam4qg4393bs3kig") (f (quote (("live-tests"))))))

(define-public crate-light-snowflake-connector-0.1.1 (c (n "light-snowflake-connector") (v "0.1.1") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "jwt-simple") (r "^0.12") (f (quote ("pure-rust"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json" "rustls-tls" "gzip"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.37") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^1.8") (f (quote ("v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)))) (h "1hklgcrhwxjfyhc2aqvf0wxrgc16xlk22jpwbmfp3bpcazvid6ph") (f (quote (("live-tests"))))))

