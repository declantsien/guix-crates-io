(define-module (crates-io li gh lightyear) #:use-module (crates-io))

(define-public crate-lightyear-0.1.0 (c (n "lightyear") (v "0.1.0") (h "1qawl5dxmaarhnjgd4pxvjxgai6il45nzkkfn79z5vy24cppjcpg")))

(define-public crate-lightyear-0.2.0 (c (n "lightyear") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (o #t) (d #t) (k 0)) (d (n "bevy") (r "^0.12") (k 0)) (d (n "bitcode") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0) (p "bitcode_lightyear_patch")) (d (n "bitvec") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("add" "mul"))) (d #t) (k 2)) (d (n "enum_delegate") (r "^0.2") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "lightyear_macros") (r "^0.1.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.12.1") (f (quote ("http-listener"))) (o #t) (k 0)) (d (n "metrics-tracing-context") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "metrics-util") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rcgen") (r "^0.11.3") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.17.6") (o #t) (d #t) (k 0)) (d (n "ringbuffer") (r "^0.15") (d #t) (k 0)) (d (n "self_cell") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.34") (f (quote ("rt" "net" "time"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("registry" "env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "wtransport") (r "^0.1.10") (o #t) (d #t) (k 0) (p "wtransport_lightyear_patch")))) (h "0ym8yj67nz3awma70ymi1yvqbh0pgr26n1hg5113vfcl4f1cjhn8") (f (quote (("debug")))) (s 2) (e (quote (("webtransport" "dep:wtransport" "tokio/sync" "wtransport/dangerous-configuration" "dep:ring" "dep:base64" "dep:rcgen" "dep:time") ("mock_time" "dep:mock_instant") ("metrics" "dep:metrics" "metrics-util" "metrics-tracing-context" "metrics-exporter-prometheus" "tokio")))) (r "1.65")))

(define-public crate-lightyear-0.3.0 (c (n "lightyear") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bevy") (r "^0.12") (k 0)) (d (n "bitcode") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0) (p "bitcode_lightyear_patch")) (d (n "bitvec") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("add" "mul"))) (d #t) (k 2)) (d (n "enum_delegate") (r "^0.2") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "lightyear_macros") (r "^0.2.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.12.1") (f (quote ("http-listener"))) (o #t) (k 0)) (d (n "metrics-tracing-context") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "metrics-util") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.15") (d #t) (k 0)) (d (n "self_cell") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34") (f (quote ("rt" "rt-multi-thread" "net" "time"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("registry" "env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "wtransport") (r "^0.1.9") (o #t) (d #t) (k 0)))) (h "050pv93xxh79ri1b5a0d1ai63wy8jnz0v9zhkgfng1qmq77z0dd1") (f (quote (("render" "bevy/bevy_render") ("debug")))) (s 2) (e (quote (("webtransport" "dep:wtransport" "tokio/sync" "wtransport/dangerous-configuration") ("mock_time" "dep:mock_instant") ("metrics" "dep:metrics" "metrics-util" "metrics-tracing-context" "metrics-exporter-prometheus" "tokio")))) (r "1.65")))

(define-public crate-lightyear-0.4.0 (c (n "lightyear") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bevy") (r "^0.12") (k 0)) (d (n "bitcode") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0) (p "bitcode_lightyear_patch")) (d (n "bitvec") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("add" "mul"))) (d #t) (k 2)) (d (n "enum_delegate") (r "^0.2") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "lightyear_macros") (r "^0.3.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.12.1") (f (quote ("http-listener"))) (o #t) (k 0)) (d (n "metrics-tracing-context") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "metrics-util") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.15") (d #t) (k 0)) (d (n "self_cell") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34") (f (quote ("rt" "rt-multi-thread" "net" "time"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("registry" "env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "wtransport") (r "^0.1.9") (o #t) (d #t) (k 0)))) (h "0g2vr3185wsmdn9v93hldxdz08vhi1bmjpcwdzpa3c790nyndjxq") (f (quote (("render" "bevy/bevy_render")))) (s 2) (e (quote (("webtransport" "dep:wtransport" "tokio/sync" "wtransport/dangerous-configuration") ("mock_time" "dep:mock_instant") ("metrics" "dep:metrics" "metrics-util" "metrics-tracing-context" "metrics-exporter-prometheus" "tokio")))) (r "1.65")))

(define-public crate-lightyear-0.5.0 (c (n "lightyear") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bevy") (r "^0.12") (k 0)) (d (n "bitcode") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0) (p "bitcode_lightyear_patch")) (d (n "bitvec") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("add" "mul"))) (d #t) (k 2)) (d (n "enum_delegate") (r "^0.2") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "lightyear_macros") (r "^0.4.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.12.1") (f (quote ("http-listener"))) (o #t) (k 0)) (d (n "metrics-tracing-context") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "metrics-util") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.15") (d #t) (k 0)) (d (n "self_cell") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34") (f (quote ("rt" "rt-multi-thread" "net" "time"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("registry" "env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "wtransport") (r "^0.1.9") (o #t) (d #t) (k 0)))) (h "1mcdh958i3cdr4h4mkdshnvd6qqsa11zsr0fmzaiavkd556xv3dl") (f (quote (("render" "bevy/bevy_render")))) (s 2) (e (quote (("webtransport" "dep:wtransport" "tokio/sync" "wtransport/dangerous-configuration") ("mock_time" "dep:mock_instant") ("metrics" "dep:metrics" "metrics-util" "metrics-tracing-context" "metrics-exporter-prometheus" "tokio")))) (r "1.65")))

(define-public crate-lightyear-0.5.1 (c (n "lightyear") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bevy") (r "^0.12") (k 0)) (d (n "bitcode") (r "^0.4.1") (f (quote ("serde"))) (d #t) (k 0) (p "bitcode_lightyear_patch")) (d (n "bitvec") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("add" "mul"))) (d #t) (k 2)) (d (n "enum_delegate") (r "^0.2") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "lightyear_macros") (r "^0.4.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.12.1") (f (quote ("http-listener"))) (o #t) (k 0)) (d (n "metrics-tracing-context") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "metrics-util") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.15") (d #t) (k 0)) (d (n "self_cell") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34") (f (quote ("rt" "rt-multi-thread" "net" "time"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("registry" "env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "wtransport") (r "^0.1.9") (o #t) (d #t) (k 0)))) (h "13ln3favns0aww285hwsmp300ijnqbx4nzp1irhy3bk9kcgyfzag") (f (quote (("render" "bevy/bevy_render")))) (s 2) (e (quote (("webtransport" "dep:wtransport" "tokio/sync" "wtransport/dangerous-configuration") ("mock_time" "dep:mock_instant") ("metrics" "dep:metrics" "metrics-util" "metrics-tracing-context" "metrics-exporter-prometheus" "tokio")))) (r "1.65")))

(define-public crate-lightyear-0.6.0 (c (n "lightyear") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bevy") (r "^0.12") (k 0)) (d (n "bevy_xpbd_2d") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "bitcode") (r "^0.4.1") (f (quote ("serde"))) (d #t) (k 0) (p "bitcode_lightyear_patch")) (d (n "bitvec") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("add" "mul"))) (d #t) (k 2)) (d (n "enum_delegate") (r "^0.2") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "leafwing-input-manager") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "lightyear_macros") (r "^0.5.0") (d #t) (k 0)) (d (n "metrics") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.13.0") (f (quote ("http-listener"))) (o #t) (k 0)) (d (n "metrics-tracing-context") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "metrics-util") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.15") (d #t) (k 0)) (d (n "self_cell") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34") (f (quote ("rt" "rt-multi-thread" "net" "time"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("registry" "env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "wtransport") (r "^0.1.9") (o #t) (d #t) (k 0)))) (h "0c3ll7n2dg9pqj6cqpdf2rgqd3w0xp24w1zi74prmlp9n56m92yh") (f (quote (("render" "bevy/bevy_render")))) (s 2) (e (quote (("xpbd_2d" "dep:bevy_xpbd_2d") ("webtransport" "dep:wtransport" "tokio/sync" "wtransport/dangerous-configuration") ("mock_time" "dep:mock_instant") ("metrics" "dep:metrics" "metrics-util" "metrics-tracing-context" "metrics-exporter-prometheus" "tokio") ("leafwing" "dep:leafwing-input-manager" "lightyear_macros/leafwing")))) (r "1.65")))

(define-public crate-lightyear-0.6.1 (c (n "lightyear") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bevy") (r "^0.12") (k 0)) (d (n "bevy_xpbd_2d") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "bitcode") (r "^0.4.1") (f (quote ("serde"))) (d #t) (k 0) (p "bitcode_lightyear_patch")) (d (n "bitvec") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("add" "mul"))) (d #t) (k 2)) (d (n "enum_delegate") (r "^0.2") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "leafwing-input-manager") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "lightyear_macros") (r "^0.5.0") (d #t) (k 0)) (d (n "metrics") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.13.0") (f (quote ("http-listener"))) (o #t) (k 0)) (d (n "metrics-tracing-context") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "metrics-util") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.15") (d #t) (k 0)) (d (n "self_cell") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34") (f (quote ("rt" "rt-multi-thread" "net" "time"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("registry" "env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "wtransport") (r "^0.1.9") (o #t) (d #t) (k 0)))) (h "0cnyvj9c3fzz70khpvmlpsr8wslpp84n2f2sn0cskrlkxx39vnq6") (f (quote (("render" "bevy/bevy_render")))) (s 2) (e (quote (("xpbd_2d" "dep:bevy_xpbd_2d") ("webtransport" "dep:wtransport" "tokio/sync" "wtransport/dangerous-configuration") ("mock_time" "dep:mock_instant") ("metrics" "dep:metrics" "metrics-util" "metrics-tracing-context" "metrics-exporter-prometheus" "tokio") ("leafwing" "dep:leafwing-input-manager" "lightyear_macros/leafwing")))) (r "1.65")))

(define-public crate-lightyear-0.7.0 (c (n "lightyear") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bevy") (r "^0.12") (k 0)) (d (n "bevy_xpbd_2d") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "bitcode") (r "^0.4.1") (f (quote ("serde"))) (d #t) (k 0) (p "bitcode_lightyear_patch")) (d (n "bitvec") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("add" "mul"))) (d #t) (k 2)) (d (n "enum_delegate") (r "^0.2") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "leafwing-input-manager") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "lightyear_macros") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.13.0") (f (quote ("http-listener"))) (o #t) (k 0)) (d (n "metrics-tracing-context") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "metrics-util") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.15") (d #t) (k 0)) (d (n "self_cell") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34") (f (quote ("rt" "rt-multi-thread" "net" "time"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("registry" "env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "wtransport") (r "^0.1.9") (o #t) (d #t) (k 0)))) (h "0rhg9xccra9kisalps0k76v23hk7s87knan1pryg3xj1n4zlxiid") (f (quote (("render" "bevy/bevy_render")))) (s 2) (e (quote (("xpbd_2d" "dep:bevy_xpbd_2d") ("webtransport" "dep:wtransport" "tokio/sync" "wtransport/dangerous-configuration") ("mock_time" "dep:mock_instant") ("metrics" "dep:metrics" "metrics-util" "metrics-tracing-context" "metrics-exporter-prometheus" "tokio") ("leafwing" "dep:leafwing-input-manager" "lightyear_macros/leafwing")))) (r "1.65")))

(define-public crate-lightyear-0.8.0 (c (n "lightyear") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bevy") (r "^0.12") (k 0)) (d (n "bevy_xpbd_2d") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "bitcode") (r "^0.4.1") (f (quote ("serde"))) (d #t) (k 0) (p "bitcode_lightyear_patch")) (d (n "bitvec") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("add" "mul"))) (d #t) (k 2)) (d (n "enum_delegate") (r "^0.2") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "getrandom") (r "^0.2.11") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "leafwing-input-manager") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "lightyear_macros") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.13.0") (f (quote ("http-listener"))) (o #t) (k 0)) (d (n "metrics-tracing-context") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "metrics-util") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "ringbuffer") (r "^0.15") (d #t) (k 0)) (d (n "seahash") (r "^4.1.0") (d #t) (k 0)) (d (n "self_cell") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34") (f (quote ("macros" "rt" "rt-multi-thread" "sync" "time"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1.34") (f (quote ("macros" "rt" "sync" "time"))) (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("registry" "env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.39") (d #t) (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("WebTransport" "WebTransportHash" "WebTransportOptions" "WebTransportBidirectionalStream" "WebTransportSendStream" "WebTransportReceiveStream" "ReadableStreamDefaultReader" "WritableStreamDefaultWriter" "WebTransportDatagramDuplexStream"))) (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wtransport") (r "^0.1.10") (f (quote ("self-signed" "dangerous-configuration"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "xwt-core") (r "^0.2") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "xwt-web-sys") (r "^0.3.1") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "0bw5wj6ivra2bf97fmd1w5c1djlpnr8pwywgvzrw71953jxk3w10") (f (quote (("render" "bevy/bevy_render")))) (s 2) (e (quote (("xpbd_2d" "dep:bevy_xpbd_2d") ("webtransport" "dep:wtransport" "dep:xwt-core" "dep:xwt-web-sys" "dep:web-sys" "dep:tokio" "dep:ring") ("mock_time" "dep:mock_instant") ("metrics" "dep:metrics" "metrics-util" "metrics-tracing-context" "metrics-exporter-prometheus" "dep:tokio") ("leafwing" "dep:leafwing-input-manager" "lightyear_macros/leafwing")))) (r "1.65")))

(define-public crate-lightyear-0.8.1 (c (n "lightyear") (v "0.8.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bevy") (r "^0.12") (k 0)) (d (n "bevy_xpbd_2d") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "bitcode") (r "^0.4.1") (f (quote ("serde"))) (d #t) (k 0) (p "bitcode_lightyear_patch")) (d (n "bitvec") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("add" "mul"))) (d #t) (k 2)) (d (n "enum_delegate") (r "^0.2") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "getrandom") (r "^0.2.11") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "leafwing-input-manager") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "lightyear_macros") (r "^0.8.1") (d #t) (k 0)) (d (n "metrics") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.13.0") (f (quote ("http-listener"))) (o #t) (k 0)) (d (n "metrics-tracing-context") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "metrics-util") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "ringbuffer") (r "^0.15") (d #t) (k 0)) (d (n "seahash") (r "^4.1.0") (d #t) (k 0)) (d (n "self_cell") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34") (f (quote ("macros" "rt" "rt-multi-thread" "sync" "time"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1.34") (f (quote ("macros" "rt" "sync" "time"))) (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("registry" "env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3.39") (d #t) (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("WebTransport" "WebTransportHash" "WebTransportOptions" "WebTransportBidirectionalStream" "WebTransportSendStream" "WebTransportReceiveStream" "ReadableStreamDefaultReader" "WritableStreamDefaultWriter" "WebTransportDatagramDuplexStream"))) (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wtransport") (r "^0.1.10") (f (quote ("self-signed" "dangerous-configuration"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "xwt-core") (r "^0.2") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "xwt-web-sys") (r "^0.3.1") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "0d6306irb8673hli0cdf4z4m25yjv1za7vqxia4hlsgf6yx8c17j") (f (quote (("render" "bevy/bevy_render")))) (s 2) (e (quote (("xpbd_2d" "dep:bevy_xpbd_2d") ("webtransport" "dep:wtransport" "dep:xwt-core" "dep:xwt-web-sys" "dep:web-sys" "dep:tokio" "dep:ring") ("mock_time" "dep:mock_instant") ("metrics" "dep:metrics" "metrics-util" "metrics-tracing-context" "metrics-exporter-prometheus" "dep:tokio") ("leafwing" "dep:leafwing-input-manager" "lightyear_macros/leafwing")))) (r "1.65")))

(define-public crate-lightyear-0.9.0 (c (n "lightyear") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.3") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bevy") (r "^0.12") (f (quote ("multi-threaded"))) (k 0)) (d (n "bevy_xpbd_2d") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "bitcode") (r "^0.4.1") (f (quote ("serde"))) (d #t) (k 0) (p "bitcode_lightyear_patch")) (d (n "bitvec") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("add" "mul"))) (d #t) (k 2)) (d (n "enum_delegate") (r "^0.2") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3.30") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.11") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "governor") (r "^0.6.0") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "leafwing-input-manager") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "lightyear_macros") (r "^0.8.1") (d #t) (k 0)) (d (n "metrics") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.13.0") (f (quote ("http-listener"))) (o #t) (k 0)) (d (n "metrics-tracing-context") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "metrics-util") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (d #t) (k 2)) (d (n "nonzero_ext") (r "^0.3.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "ringbuffer") (r "^0.15") (d #t) (k 0)) (d (n "seahash") (r "^4.1.0") (d #t) (k 0)) (d (n "self_cell") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("sync"))) (o #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("connect" "handshake"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("registry" "env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.90") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.39") (d #t) (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("WebTransport" "WebTransportHash" "WebTransportOptions" "WebTransportBidirectionalStream" "WebTransportSendStream" "WebTransportReceiveStream" "ReadableStreamDefaultReader" "WritableStreamDefaultWriter" "WebTransportDatagramDuplexStream" "WebSocket" "CloseEvent" "ErrorEvent" "MessageEvent" "BinaryType"))) (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wtransport") (r "^0.1.10") (f (quote ("self-signed" "dangerous-configuration"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "xwt-core") (r "^0.2") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "xwt-web-sys") (r "^0.4.7") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "1pfg3arvvmryw120xvzlnsif7ns9vg2zb8k06iy2axcdknlhlfn8") (f (quote (("render" "bevy/bevy_render")))) (s 2) (e (quote (("xpbd_2d" "dep:bevy_xpbd_2d") ("webtransport" "dep:wtransport" "dep:xwt-core" "dep:xwt-web-sys" "dep:web-sys" "dep:tokio" "dep:ring") ("websocket" "dep:tokio" "dep:tokio-tungstenite" "dep:futures-util" "dep:web-sys" "dep:wasm-bindgen") ("mock_time" "dep:mock_instant") ("metrics" "dep:metrics" "metrics-util" "metrics-tracing-context" "metrics-exporter-prometheus" "dep:tokio") ("leafwing" "dep:leafwing-input-manager" "lightyear_macros/leafwing")))) (r "1.65")))

(define-public crate-lightyear-0.9.1 (c (n "lightyear") (v "0.9.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.3") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bevy") (r "^0.12") (f (quote ("multi-threaded"))) (k 0)) (d (n "bevy_xpbd_2d") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "bitcode") (r "^0.4.1") (f (quote ("serde"))) (d #t) (k 0) (p "bitcode_lightyear_patch")) (d (n "bitvec") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("add" "mul"))) (d #t) (k 2)) (d (n "enum_delegate") (r "^0.2") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3.30") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.11") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "governor") (r "^0.6.0") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "leafwing-input-manager") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "lightyear_macros") (r "^0.9.1") (d #t) (k 0)) (d (n "metrics") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.13.0") (f (quote ("http-listener"))) (o #t) (k 0)) (d (n "metrics-tracing-context") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "metrics-util") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (d #t) (k 2)) (d (n "nonzero_ext") (r "^0.3.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "ringbuffer") (r "^0.15") (d #t) (k 0)) (d (n "seahash") (r "^4.1.0") (d #t) (k 0)) (d (n "self_cell") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("sync"))) (o #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("connect" "handshake"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("registry" "env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.90") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.39") (d #t) (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("WebTransport" "WebTransportHash" "WebTransportOptions" "WebTransportBidirectionalStream" "WebTransportSendStream" "WebTransportReceiveStream" "ReadableStreamDefaultReader" "WritableStreamDefaultWriter" "WebTransportDatagramDuplexStream" "WebSocket" "CloseEvent" "ErrorEvent" "MessageEvent" "BinaryType"))) (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wtransport") (r "^0.1.10") (f (quote ("self-signed" "dangerous-configuration"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "xwt-core") (r "^0.2") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "xwt-web-sys") (r "^0.4.7") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "1whgnndkc75q01nv8idvcipsd5ib7n3s24pj8ik12wah0b7rsrlh") (f (quote (("render" "bevy/bevy_render")))) (s 2) (e (quote (("xpbd_2d" "dep:bevy_xpbd_2d") ("webtransport" "dep:wtransport" "dep:xwt-core" "dep:xwt-web-sys" "dep:web-sys" "dep:tokio" "dep:ring") ("websocket" "dep:tokio" "dep:tokio-tungstenite" "dep:futures-util" "dep:web-sys" "dep:wasm-bindgen") ("mock_time" "dep:mock_instant") ("metrics" "dep:metrics" "metrics-util" "metrics-tracing-context" "metrics-exporter-prometheus" "dep:tokio") ("leafwing" "dep:leafwing-input-manager" "lightyear_macros/leafwing")))) (r "1.65")))

(define-public crate-lightyear-0.10.0 (c (n "lightyear") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "async-compat") (r "^0.2.3") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bevy") (r "^0.13") (f (quote ("multi-threaded"))) (k 0)) (d (n "bevy_xpbd_2d") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "bitcode") (r "^0.4.1") (f (quote ("serde"))) (d #t) (k 0) (p "bitcode_lightyear_patch")) (d (n "bitvec") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("add" "mul"))) (d #t) (k 2)) (d (n "enum_delegate") (r "^0.2") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3.30") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.11") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "governor") (r "^0.6.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "leafwing-input-manager") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "lightyear_macros") (r "^0.10.0") (d #t) (k 0)) (d (n "metrics") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.13.0") (f (quote ("http-listener"))) (o #t) (k 0)) (d (n "metrics-tracing-context") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "metrics-util") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (d #t) (k 2)) (d (n "nonzero_ext") (r "^0.3.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "ringbuffer") (r "^0.15") (d #t) (k 0)) (d (n "seahash") (r "^4.1.0") (d #t) (k 0)) (d (n "self_cell") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("sync"))) (o #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("connect" "handshake"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("registry" "env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.90") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.39") (d #t) (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("WebTransport" "WebTransportHash" "WebTransportOptions" "WebTransportBidirectionalStream" "WebTransportSendStream" "WebTransportReceiveStream" "ReadableStreamDefaultReader" "WritableStreamDefaultWriter" "WebTransportDatagramDuplexStream" "WebSocket" "CloseEvent" "ErrorEvent" "MessageEvent" "BinaryType"))) (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wtransport") (r "^0.1.10") (f (quote ("self-signed" "dangerous-configuration"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "xwt-core") (r "^0.2") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "xwt-web-sys") (r "^0.4.7") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "1s05r9zr6f5ywm9j2jxy7vq52zkdr386k3l7cpylygj1l5kph9wv") (f (quote (("render" "bevy/bevy_render")))) (s 2) (e (quote (("xpbd_2d" "dep:bevy_xpbd_2d") ("webtransport" "dep:wtransport" "dep:xwt-core" "dep:xwt-web-sys" "dep:web-sys" "dep:tokio" "dep:ring") ("websocket" "dep:tokio" "dep:tokio-tungstenite" "dep:futures-util" "dep:web-sys" "dep:wasm-bindgen") ("mock_time" "dep:mock_instant") ("metrics" "dep:metrics" "metrics-util" "metrics-tracing-context" "metrics-exporter-prometheus" "dep:tokio") ("leafwing" "dep:leafwing-input-manager" "lightyear_macros/leafwing")))) (r "1.65")))

(define-public crate-lightyear-0.11.0 (c (n "lightyear") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "async-compat") (r "^0.2.3") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bevy") (r "^0.13") (f (quote ("multi-threaded"))) (k 0)) (d (n "bevy_xpbd_2d") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "bitcode") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0) (p "bitcode_lightyear_patch")) (d (n "bitvec") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("add" "mul"))) (d #t) (k 2)) (d (n "enum_delegate") (r "^0.2") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3.30") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.11") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "governor") (r "^0.6.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "leafwing-input-manager") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "lightyear_macros") (r "^0.11.0") (d #t) (k 0)) (d (n "metrics") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.13.0") (f (quote ("http-listener"))) (o #t) (k 0)) (d (n "metrics-tracing-context") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "metrics-util") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (d #t) (k 2)) (d (n "nonzero_ext") (r "^0.3.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "ringbuffer") (r "^0.15") (d #t) (k 0)) (d (n "seahash") (r "^4.1.0") (d #t) (k 0)) (d (n "self_cell") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("sync"))) (o #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("connect" "handshake"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("registry" "env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.90") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.39") (d #t) (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("WebTransport" "WebTransportHash" "WebTransportOptions" "WebTransportBidirectionalStream" "WebTransportSendStream" "WebTransportReceiveStream" "ReadableStreamDefaultReader" "WritableStreamDefaultWriter" "WebTransportDatagramDuplexStream" "WebSocket" "CloseEvent" "ErrorEvent" "MessageEvent" "BinaryType"))) (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wtransport") (r "^0.1.10") (f (quote ("self-signed" "dangerous-configuration"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "xwt-core") (r "^0.2") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "xwt-web-sys") (r "^0.6") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "17aqnjgfcnx08dzlhs8qp9rifx2qlg567wzya419xw0n0zrw6sf1") (f (quote (("render" "bevy/bevy_render")))) (s 2) (e (quote (("xpbd_2d" "dep:bevy_xpbd_2d") ("webtransport" "dep:wtransport" "dep:xwt-core" "dep:xwt-web-sys" "dep:web-sys" "dep:tokio" "dep:ring") ("websocket" "dep:tokio" "dep:tokio-tungstenite" "dep:futures-util" "dep:web-sys" "dep:wasm-bindgen") ("mock_time" "dep:mock_instant") ("metrics" "dep:metrics" "metrics-util" "metrics-tracing-context" "metrics-exporter-prometheus" "dep:tokio") ("leafwing" "dep:leafwing-input-manager" "lightyear_macros/leafwing")))) (r "1.65")))

(define-public crate-lightyear-0.12.0 (c (n "lightyear") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "async-compat") (r "^0.2.3") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bevy") (r "^0.13") (f (quote ("multi-threaded"))) (k 0)) (d (n "bevy_xpbd_2d") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "bitcode") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0) (p "bitcode_lightyear_patch")) (d (n "bitvec") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("add" "mul"))) (d #t) (k 2)) (d (n "enum_delegate") (r "^0.2") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3.30") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.11") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "governor") (r "^0.6.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "leafwing-input-manager") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "lightyear_macros") (r "^0.12.0") (d #t) (k 0)) (d (n "metrics") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.13.0") (f (quote ("http-listener"))) (o #t) (k 0)) (d (n "metrics-tracing-context") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "metrics-util") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (d #t) (k 2)) (d (n "nonzero_ext") (r "^0.3.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "ringbuffer") (r "^0.15") (d #t) (k 0)) (d (n "seahash") (r "^4.1.0") (d #t) (k 0)) (d (n "self_cell") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("sync"))) (o #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("connect" "handshake"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("registry" "env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.90") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.39") (d #t) (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("WebTransport" "WebTransportHash" "WebTransportOptions" "WebTransportBidirectionalStream" "WebTransportSendStream" "WebTransportReceiveStream" "ReadableStreamDefaultReader" "WritableStreamDefaultWriter" "WebTransportDatagramDuplexStream" "WebSocket" "CloseEvent" "ErrorEvent" "MessageEvent" "BinaryType"))) (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wtransport") (r "^0.1.10") (f (quote ("self-signed" "dangerous-configuration"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "xwt-core") (r "^0.2") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "xwt-web-sys") (r "^0.6") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "1fj9waw1hnzccgzj666ffvi5kllkz3pqpgpzb7kyw49s2vz4a2a1") (f (quote (("render" "bevy/bevy_render")))) (s 2) (e (quote (("xpbd_2d" "dep:bevy_xpbd_2d") ("webtransport" "dep:wtransport" "dep:xwt-core" "dep:xwt-web-sys" "dep:web-sys" "dep:tokio" "dep:ring") ("websocket" "dep:tokio" "dep:tokio-tungstenite" "dep:futures-util" "dep:web-sys" "dep:wasm-bindgen") ("mock_time" "dep:mock_instant") ("metrics" "dep:metrics" "metrics-util" "metrics-tracing-context" "metrics-exporter-prometheus" "dep:tokio") ("leafwing" "dep:leafwing-input-manager" "lightyear_macros/leafwing")))) (r "1.65")))

(define-public crate-lightyear-0.13.0 (c (n "lightyear") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "async-compat") (r "^0.2.3") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bevy") (r "^0.13") (f (quote ("multi-threaded"))) (k 0)) (d (n "bevy_xpbd_2d") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "bitcode") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0) (p "bitcode_lightyear_patch")) (d (n "bitvec") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "=0.4.34") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("add" "mul"))) (d #t) (k 2)) (d (n "enum_delegate") (r "^0.2") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3.30") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.11") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "governor") (r "^0.6.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "leafwing-input-manager") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "lightyear_macros") (r "^0.13.0") (d #t) (k 0)) (d (n "metrics") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.13.0") (f (quote ("http-listener"))) (o #t) (k 0)) (d (n "metrics-tracing-context") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "metrics-util") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.3.1") (d #t) (k 2)) (d (n "nonzero_ext") (r "^0.3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "ringbuffer") (r "^0.15") (d #t) (k 0)) (d (n "seahash") (r "^4.1.0") (d #t) (k 0)) (d (n "self_cell") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "steamworks") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("sync"))) (o #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("connect" "handshake"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("registry" "env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.90") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.39") (d #t) (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("WebTransport" "WebTransportHash" "WebTransportOptions" "WebTransportBidirectionalStream" "WebTransportSendStream" "WebTransportReceiveStream" "ReadableStreamDefaultReader" "WritableStreamDefaultWriter" "WebTransportDatagramDuplexStream" "WebSocket" "CloseEvent" "ErrorEvent" "MessageEvent" "BinaryType"))) (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wtransport") (r "=0.1.11") (f (quote ("self-signed" "dangerous-configuration"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "xwt-core") (r "^0.2") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "xwt-web-sys") (r "^0.6") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "0939z0832xwyxik75p8y3nmfdnipzj27npci6n62hhkc7bv5lpsr") (f (quote (("render" "bevy/bevy_render")))) (s 2) (e (quote (("xpbd_2d" "dep:bevy_xpbd_2d") ("webtransport" "dep:wtransport" "dep:xwt-core" "dep:xwt-web-sys" "dep:web-sys" "dep:tokio" "dep:ring") ("websocket" "dep:tokio" "dep:tokio-tungstenite" "dep:futures-util" "dep:web-sys" "dep:wasm-bindgen") ("steam" "dep:steamworks") ("mock_time" "dep:mock_instant") ("metrics" "dep:metrics" "metrics-util" "metrics-tracing-context" "metrics-exporter-prometheus" "dep:tokio") ("leafwing" "dep:leafwing-input-manager" "lightyear_macros/leafwing")))) (r "1.65")))

(define-public crate-lightyear-0.14.0 (c (n "lightyear") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "async-channel") (r "^2.2.0") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.3") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bevy") (r "^0.13") (f (quote ("multi-threaded"))) (k 0)) (d (n "bevy_xpbd_2d") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "bitcode") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0) (p "bitcode_lightyear_patch")) (d (n "bitvec") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "=0.4.34") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("add" "mul"))) (d #t) (k 2)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3.30") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.11") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "governor") (r "^0.6.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "leafwing-input-manager") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "lightyear_macros") (r "^0.14.0") (d #t) (k 0)) (d (n "metrics") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.13.0") (f (quote ("http-listener"))) (o #t) (k 0)) (d (n "metrics-tracing-context") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "metrics-util") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.4.0") (d #t) (k 2)) (d (n "nonzero_ext") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ring") (r "^0.17.8") (o #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "ringbuffer") (r "^0.15") (d #t) (k 0)) (d (n "seahash") (r "^4.1.0") (d #t) (k 0)) (d (n "self_cell") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "steamworks") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("sync" "macros"))) (o #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("connect" "handshake"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("registry" "env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.90") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.39") (d #t) (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("WebTransport" "WebTransportHash" "WebTransportOptions" "WebTransportBidirectionalStream" "WebTransportSendStream" "WebTransportReceiveStream" "ReadableStreamDefaultReader" "WritableStreamDefaultWriter" "WebTransportDatagramDuplexStream" "WebSocket" "CloseEvent" "ErrorEvent" "MessageEvent" "BinaryType"))) (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wtransport") (r "=0.1.11") (f (quote ("self-signed" "dangerous-configuration"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "xwt-core") (r "^0.4") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "xwt-web-sys") (r "^0.11") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "1f91y20z85adn1qp4x5gx8xy99pl5zcwy7mmlwqn6hwq8xnm3rri") (f (quote (("render" "bevy/bevy_render")))) (s 2) (e (quote (("xpbd_2d" "dep:bevy_xpbd_2d") ("webtransport" "dep:wtransport" "dep:xwt-core" "dep:xwt-web-sys" "dep:web-sys" "dep:tokio" "dep:ring" "dep:wasm-bindgen-futures") ("websocket" "dep:tokio" "dep:tokio-tungstenite" "dep:futures-util" "dep:web-sys" "dep:wasm-bindgen") ("steam" "dep:steamworks") ("mock_time" "dep:mock_instant") ("metrics" "dep:metrics" "metrics-util" "metrics-tracing-context" "metrics-exporter-prometheus" "dep:tokio") ("leafwing" "dep:leafwing-input-manager")))) (r "1.65")))

(define-public crate-lightyear-0.14.1 (c (n "lightyear") (v "0.14.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "async-channel") (r "^2.2.0") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.3") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bevy") (r "^0.13") (f (quote ("multi-threaded"))) (k 0)) (d (n "bevy_xpbd_2d") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "bitcode") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0) (p "bitcode_lightyear_patch")) (d (n "bitvec") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "=0.4.34") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("add" "mul"))) (d #t) (k 2)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3.30") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.11") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "governor") (r "^0.6.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "leafwing-input-manager") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "lightyear_macros") (r "^0.14.1") (d #t) (k 0)) (d (n "metrics") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.13.0") (f (quote ("http-listener"))) (o #t) (k 0)) (d (n "metrics-tracing-context") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "metrics-util") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.4.0") (d #t) (k 2)) (d (n "nonzero_ext") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ring") (r "^0.17.8") (o #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "ringbuffer") (r "^0.15") (d #t) (k 0)) (d (n "seahash") (r "^4.1.0") (d #t) (k 0)) (d (n "self_cell") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "steamworks") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("sync" "macros"))) (o #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("connect" "handshake"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("registry" "env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.90") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.39") (d #t) (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("WebTransport" "WebTransportHash" "WebTransportOptions" "WebTransportBidirectionalStream" "WebTransportSendStream" "WebTransportReceiveStream" "ReadableStreamDefaultReader" "WritableStreamDefaultWriter" "WebTransportDatagramDuplexStream" "WebSocket" "CloseEvent" "ErrorEvent" "MessageEvent" "BinaryType"))) (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wtransport") (r "=0.1.11") (f (quote ("self-signed" "dangerous-configuration"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "xwt-core") (r "^0.4") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "xwt-web-sys") (r "^0.11") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "0fs58zzr91iwhcg7l4amjhg44f5grhay4k5xq0kwq5vfr243p3ak") (f (quote (("render" "bevy/bevy_render")))) (s 2) (e (quote (("xpbd_2d" "dep:bevy_xpbd_2d") ("webtransport" "dep:wtransport" "dep:xwt-core" "dep:xwt-web-sys" "dep:web-sys" "dep:tokio" "dep:ring" "dep:wasm-bindgen-futures") ("websocket" "dep:tokio" "dep:tokio-tungstenite" "dep:futures-util" "dep:web-sys" "dep:wasm-bindgen") ("steam" "dep:steamworks") ("mock_time" "dep:mock_instant") ("metrics" "dep:metrics" "metrics-util" "metrics-tracing-context" "metrics-exporter-prometheus" "dep:tokio") ("leafwing" "dep:leafwing-input-manager")))) (r "1.65")))

(define-public crate-lightyear-0.15.0 (c (n "lightyear") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "async-channel") (r "^2.2.0") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.3") (d #t) (k 0)) (d (n "base64") (r "^0.22.1") (d #t) (k 0)) (d (n "bevy") (r "^0.13") (f (quote ("multi-threaded"))) (k 0)) (d (n "bevy_xpbd_2d") (r "^0.4") (o #t) (k 0)) (d (n "bitcode") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0) (p "bitcode_lightyear_patch")) (d (n "bitvec") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "=0.4.34") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("add" "mul"))) (d #t) (k 2)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3.30") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.11") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "governor") (r "^0.6.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "leafwing-input-manager") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "lightyear_macros") (r "^0.14.1") (d #t) (k 0)) (d (n "metrics") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.13.0") (f (quote ("http-listener"))) (o #t) (k 0)) (d (n "metrics-tracing-context") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "metrics-util") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.4.0") (d #t) (k 2)) (d (n "nonzero_ext") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ring") (r "^0.17.8") (o #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "ringbuffer") (r "^0.15") (d #t) (k 0)) (d (n "seahash") (r "^4.1.0") (d #t) (k 0)) (d (n "self_cell") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "steamworks") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("sync" "macros"))) (k 0)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("connect" "handshake"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("registry" "env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.90") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.39") (d #t) (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("WebTransport" "WebTransportHash" "WebTransportOptions" "WebTransportBidirectionalStream" "WebTransportSendStream" "WebTransportReceiveStream" "ReadableStreamDefaultReader" "WritableStreamDefaultWriter" "WebTransportDatagramDuplexStream" "WebSocket" "CloseEvent" "ErrorEvent" "MessageEvent" "BinaryType"))) (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wtransport") (r "=0.1.13") (f (quote ("self-signed" "dangerous-configuration"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "xwt-core") (r "^0.4") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "xwt-web-sys") (r "^0.11") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "zstd") (r "^0.13.1") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "zstd") (r "^0.13.1") (f (quote ("wasm"))) (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "123jfq3mlq0yd38685784n3hz5pkgxkapgdci9bllls2n1vm0xi2") (s 2) (e (quote (("zstd" "dep:zstd") ("xpbd_2d" "dep:bevy_xpbd_2d") ("webtransport" "dep:wtransport" "dep:xwt-core" "dep:xwt-web-sys" "dep:web-sys" "dep:ring" "dep:wasm-bindgen-futures") ("websocket" "dep:tokio-tungstenite" "dep:futures-util" "dep:web-sys" "dep:wasm-bindgen") ("steam" "dep:steamworks") ("mock_time" "dep:mock_instant") ("metrics" "dep:metrics" "metrics-util" "metrics-tracing-context" "metrics-exporter-prometheus") ("leafwing" "dep:leafwing-input-manager")))) (r "1.76")))

(define-public crate-lightyear-0.15.1 (c (n "lightyear") (v "0.15.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "async-channel") (r "^2.2.0") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.3") (d #t) (k 0)) (d (n "base64") (r "^0.22.1") (d #t) (k 0)) (d (n "bevy") (r "^0.13") (f (quote ("multi-threaded"))) (k 0)) (d (n "bevy_xpbd_2d") (r "^0.4") (o #t) (k 0)) (d (n "bitcode") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0) (p "bitcode_lightyear_patch")) (d (n "bitvec") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "=0.4.34") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("add" "mul"))) (d #t) (k 2)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "futures-util") (r "^0.3.30") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.11") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "governor") (r "^0.6.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "leafwing-input-manager") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "lightyear_macros") (r "^0.15.1") (d #t) (k 0)) (d (n "metrics") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.13.0") (f (quote ("http-listener"))) (o #t) (k 0)) (d (n "metrics-tracing-context") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "metrics-util") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.4.0") (d #t) (k 2)) (d (n "nonzero_ext") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ring") (r "^0.17.8") (o #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "ringbuffer") (r "^0.15") (d #t) (k 0)) (d (n "seahash") (r "^4.1.0") (d #t) (k 0)) (d (n "self_cell") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "steamworks") (r "^0.11") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("sync" "macros"))) (k 0)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("connect" "handshake"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("registry" "env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.90") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.39") (d #t) (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("WebTransport" "WebTransportHash" "WebTransportOptions" "WebTransportBidirectionalStream" "WebTransportSendStream" "WebTransportReceiveStream" "ReadableStreamDefaultReader" "WritableStreamDefaultWriter" "WebTransportDatagramDuplexStream" "WebSocket" "CloseEvent" "ErrorEvent" "MessageEvent" "BinaryType"))) (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wtransport") (r "=0.1.13") (f (quote ("self-signed" "dangerous-configuration"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "xwt-core") (r "^0.4") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "xwt-web-sys") (r "^0.11") (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "zstd") (r "^0.13.1") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "zstd") (r "^0.13.1") (f (quote ("wasm"))) (o #t) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "07l6izscwkms5y68y9kxf3778sfk9ywdhipz9zpzx5354wqzgln6") (s 2) (e (quote (("zstd" "dep:zstd") ("xpbd_2d" "dep:bevy_xpbd_2d") ("webtransport" "dep:wtransport" "dep:xwt-core" "dep:xwt-web-sys" "dep:web-sys" "dep:ring" "dep:wasm-bindgen-futures") ("websocket" "dep:tokio-tungstenite" "dep:futures-util" "dep:web-sys" "dep:wasm-bindgen") ("steam" "dep:steamworks") ("mock_time" "dep:mock_instant") ("metrics" "dep:metrics" "metrics-util" "metrics-tracing-context" "metrics-exporter-prometheus") ("leafwing" "dep:leafwing-input-manager")))) (r "1.76")))

