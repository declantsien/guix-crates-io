(define-module (crates-io li gh lightning-invoice) #:use-module (crates-io))

(define-public crate-lightning-invoice-0.1.0 (c (n "lightning-invoice") (v "0.1.0") (d (list (d (n "bech32") (r "^0.5.0") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "secp256k1") (r "^0.11") (d #t) (k 0)))) (h "0zkgj7yjn79m91p0ayznvfv1padvfv4g9pk7x977ghc1hvhfv0cx")))

(define-public crate-lightning-invoice-0.2.0 (c (n "lightning-invoice") (v "0.2.0") (d (list (d (n "bech32") (r "^0.6.0") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "secp256k1") (r "^0.12") (d #t) (k 0)))) (h "1z2b5ys8j5p2xa5x77d4ai0ha1gh13m1syswwz8v26g6x5s0hp97")))

(define-public crate-lightning-invoice-0.3.0 (c (n "lightning-invoice") (v "0.3.0") (d (list (d (n "bech32") (r "^0.7") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.7") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "secp256k1") (r "^0.17") (f (quote ("recovery"))) (d #t) (k 0)))) (h "10lylll1n2myq9rjaimjyzsghy8phcmwrlp6a22zh6yb7lzqw2if")))

(define-public crate-lightning-invoice-0.4.0 (c (n "lightning-invoice") (v "0.4.0") (d (list (d (n "bech32") (r "^0.7") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.9.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)))) (h "1l0bzhgm9978nk09g0n8cl2j6rwnrrbgaqcngc32yd1f8fcqr0kj")))

(define-public crate-lightning-invoice-0.5.0 (c (n "lightning-invoice") (v "0.5.0") (d (list (d (n "bech32") (r "^0.7") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.9.4") (d #t) (k 0)) (d (n "lightning") (r "^0.0.14") (d #t) (k 0)) (d (n "lightning") (r "^0.0.14") (f (quote ("_test_utils"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)))) (h "0s4jm9xnnkdflh47s7kcwr75x0srmly5gnjadir02dbaq50qywy0")))

(define-public crate-lightning-invoice-0.6.0 (c (n "lightning-invoice") (v "0.6.0") (d (list (d (n "bech32") (r "^0.7") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.9.4") (d #t) (k 0)) (d (n "lightning") (r "^0.0.98") (d #t) (k 0)) (d (n "lightning") (r "^0.0.98") (f (quote ("_test_utils"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)))) (h "1j98hpflmwi2lr1vb5lqwkr7v5qr7zn94nsxc5jmgdazazfvx9nj")))

(define-public crate-lightning-invoice-0.7.0 (c (n "lightning-invoice") (v "0.7.0") (d (list (d (n "bech32") (r "^0.7") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.9.4") (d #t) (k 0)) (d (n "lightning") (r "^0.0.99") (d #t) (k 0)) (d (n "lightning") (r "^0.0.99") (f (quote ("_test_utils"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)))) (h "007pwaxaf6n9nm40g30r946plmwcnhmhlhk4damzkwhyma3i7i05")))

(define-public crate-lightning-invoice-0.8.0 (c (n "lightning-invoice") (v "0.8.0") (d (list (d (n "bech32") (r "^0.8") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (d #t) (k 0)) (d (n "lightning") (r "^0.0.100") (d #t) (k 0)) (d (n "lightning") (r "^0.0.100") (f (quote ("_test_utils"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)))) (h "1vwqzmmdmsmwa4530vncbyi2jz0rc3vv4rygylpw3lw9irxmwv7f")))

(define-public crate-lightning-invoice-0.9.0 (c (n "lightning-invoice") (v "0.9.0") (d (list (d (n "bech32") (r "^0.8") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lightning") (r "^0.0.101") (d #t) (k 0)) (d (n "lightning") (r "^0.0.101") (f (quote ("_test_utils"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)))) (h "14m4zq9xfxsys0244jpmdwx4nrpkij3ha2psxlh7yrsqn8sljff0")))

(define-public crate-lightning-invoice-0.10.0 (c (n "lightning-invoice") (v "0.10.0") (d (list (d (n "bech32") (r "^0.8") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lightning") (r "^0.0.102") (d #t) (k 0)) (d (n "lightning") (r "^0.0.102") (f (quote ("_test_utils"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)))) (h "10mcbafmndsh1a793yzy7y1zi6vj2473xswp9yxqha973n3bwq5h")))

(define-public crate-lightning-invoice-0.11.0 (c (n "lightning-invoice") (v "0.11.0") (d (list (d (n "bech32") (r "^0.8") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lightning") (r "^0.0.103") (d #t) (k 0)) (d (n "lightning") (r "^0.0.103") (f (quote ("_test_utils"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)))) (h "1g125wnq6wl9r057zp8qwhmavxrmqlx7jjmnn1sf0d7na1bc4z4g")))

(define-public crate-lightning-invoice-0.12.0 (c (n "lightning-invoice") (v "0.12.0") (d (list (d (n "bech32") (r "^0.8") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lightning") (r "^0.0.104") (d #t) (k 0)) (d (n "lightning") (r "^0.0.104") (f (quote ("_test_utils"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)))) (h "181q7achpxvf73y0a3gf4gzx4qirz6cz8gycrfd2p1xk324f6c95")))

(define-public crate-lightning-invoice-0.13.0 (c (n "lightning-invoice") (v "0.13.0") (d (list (d (n "bech32") (r "^0.8") (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (k 0)) (d (n "core2") (r "^0.3.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lightning") (r "^0.0.105") (k 0)) (d (n "lightning") (r "^0.0.105") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery" "alloc"))) (k 0)))) (h "1h065vlvg1zvsws2idwid91p2k1bbl4n9qh62n6jaarc33bilrnf") (f (quote (("std" "bitcoin_hashes/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std" "core2/alloc") ("default" "std"))))))

(define-public crate-lightning-invoice-0.14.0 (c (n "lightning-invoice") (v "0.14.0") (d (list (d (n "bech32") (r "^0.8") (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (k 0)) (d (n "core2") (r "^0.3.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lightning") (r "^0.0.106") (k 0)) (d (n "lightning") (r "^0.0.106") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery" "alloc"))) (k 0)))) (h "1h6mxl9yr3ri4hcpzd62baydina0k9yxq53xjw3rsqyp8vmvcsgh") (f (quote (("std" "bitcoin_hashes/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std" "core2/alloc") ("default" "std"))))))

(define-public crate-lightning-invoice-0.15.0 (c (n "lightning-invoice") (v "0.15.0") (d (list (d (n "bech32") (r "^0.8") (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (k 0)) (d (n "core2") (r "^0.3.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lightning") (r "^0.0.107") (k 0)) (d (n "lightning") (r "^0.0.107") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.22") (f (quote ("recovery" "alloc"))) (k 0)))) (h "0c0nnw74c4yaalvhfzlkvfvdqsmjk4nnssrr7h2vrl36l4ak70a0") (f (quote (("std" "bitcoin_hashes/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std" "core2/alloc") ("default" "std"))))))

(define-public crate-lightning-invoice-0.16.0 (c (n "lightning-invoice") (v "0.16.0") (d (list (d (n "bech32") (r "^0.8") (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (k 0)) (d (n "core2") (r "^0.3.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lightning") (r "^0.0.108") (k 0)) (d (n "lightning") (r "^0.0.108") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.22") (f (quote ("recovery" "alloc"))) (k 0)))) (h "1fmpllx0m8nq5i2zh52p62w58m89wsgsw2p6awm8vsprpb7c3bza") (f (quote (("std" "bitcoin_hashes/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std" "core2/alloc") ("default" "std"))))))

(define-public crate-lightning-invoice-0.17.0 (c (n "lightning-invoice") (v "0.17.0") (d (list (d (n "bech32") (r "^0.8") (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (k 0)) (d (n "core2") (r "^0.3.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lightning") (r "^0.0.109") (k 0)) (d (n "lightning") (r "^0.0.109") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.22") (f (quote ("recovery" "alloc"))) (k 0)) (d (n "serde") (r "^1.0.118") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1i9w3zf965wj2gl5d2nvlj7g3ia8kad2fds840pkwnl69h34fz68") (f (quote (("std" "bitcoin_hashes/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std" "core2/alloc") ("default" "std"))))))

(define-public crate-lightning-invoice-0.18.0 (c (n "lightning-invoice") (v "0.18.0") (d (list (d (n "bech32") (r "^0.8") (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (k 0)) (d (n "core2") (r "^0.3.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lightning") (r "^0.0.110") (k 0)) (d (n "lightning") (r "^0.0.110") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.22") (f (quote ("recovery" "alloc"))) (k 0)) (d (n "serde") (r "^1.0.118") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0wjdsdw9r7my5b22pga17gidaqmi6a99v3fanr05xn8bznvh5aij") (f (quote (("std" "bitcoin_hashes/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std" "core2/alloc") ("default" "std"))))))

(define-public crate-lightning-invoice-0.19.0 (c (n "lightning-invoice") (v "0.19.0") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (k 0)) (d (n "core2") (r "^0.3.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lightning") (r "^0.0.111") (k 0)) (d (n "lightning") (r "^0.0.111") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("recovery" "alloc"))) (k 0)) (d (n "serde") (r "^1.0.118") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "04gf3ff3z9wv6nk7nz7rgspam5isa3xnwlkpp20k5qci67c5ng82") (f (quote (("std" "bitcoin_hashes/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std" "core2/alloc") ("default" "std"))))))

(define-public crate-lightning-invoice-0.20.0 (c (n "lightning-invoice") (v "0.20.0") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lightning") (r "^0.0.112") (k 0)) (d (n "lightning") (r "^0.0.112") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("recovery" "alloc"))) (k 0)) (d (n "serde") (r "^1.0.118") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "12c2b3gn2c1c3dkdk7xfs3f3hq8sh9cf4p2xp3hxrkap0abfrihg") (f (quote (("std" "bitcoin_hashes/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std") ("default" "std"))))))

(define-public crate-lightning-invoice-0.21.0 (c (n "lightning-invoice") (v "0.21.0") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lightning") (r "^0.0.113") (k 0)) (d (n "lightning") (r "^0.0.113") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("recovery" "alloc"))) (k 0)) (d (n "serde") (r "^1.0.118") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1r212xngc4j15yidz7q23szz45gj052v0ckxik7jjd8cb5bhhs79") (f (quote (("std" "bitcoin_hashes/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std") ("default" "std"))))))

(define-public crate-lightning-invoice-0.22.0-beta (c (n "lightning-invoice") (v "0.22.0-beta") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lightning") (r "^0.0.114-beta") (k 0)) (d (n "lightning") (r "^0.0.114-beta") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("recovery" "alloc"))) (k 0)) (d (n "serde") (r "^1.0.118") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "034ik3nwancs6blrwai5lhyma8glx5xi65kwa56jkf7bc59g3qi2") (f (quote (("std" "bitcoin_hashes/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std") ("default" "std"))))))

(define-public crate-lightning-invoice-0.22.0 (c (n "lightning-invoice") (v "0.22.0") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lightning") (r "^0.0.114") (k 0)) (d (n "lightning") (r "^0.0.114") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("recovery" "alloc"))) (k 0)) (d (n "serde") (r "^1.0.118") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0cnfmrxf0dhgfhdj1yqgxld20jyp2xy2miqgwgn0l4rys735kyxd") (f (quote (("std" "bitcoin_hashes/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std") ("default" "std"))))))

(define-public crate-lightning-invoice-0.23.0 (c (n "lightning-invoice") (v "0.23.0") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin") (r "^0.29.0") (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lightning") (r "^0.0.115") (k 0)) (d (n "lightning") (r "^0.0.115") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("recovery" "alloc"))) (k 0)) (d (n "serde") (r "^1.0.118") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "02lz3rmfn0hxdmhb32r4nfcscrzyzlwj6z8kf0a83j125074pr64") (f (quote (("std" "bitcoin_hashes/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std") ("default" "std"))))))

(define-public crate-lightning-invoice-0.24.0-alpha1 (c (n "lightning-invoice") (v "0.24.0-alpha1") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin") (r "^0.29.0") (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lightning") (r "^0.0.116-alpha1") (k 0)) (d (n "lightning") (r "^0.0.116-alpha1") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("recovery" "alloc"))) (k 0)) (d (n "serde") (r "^1.0.118") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "00lds65jn542115plkg5v4z70fv49phz90ffwh6md9l7xwgajvwv") (f (quote (("std" "bitcoin_hashes/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std") ("default" "std"))))))

(define-public crate-lightning-invoice-0.24.0-rc1 (c (n "lightning-invoice") (v "0.24.0-rc1") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin") (r "^0.29.0") (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lightning") (r "^0.0.116-rc1") (k 0)) (d (n "lightning") (r "^0.0.116-rc1") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("recovery" "alloc"))) (k 0)) (d (n "serde") (r "^1.0.118") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1dhvirjza1b761ig08hl0fyididyykm0p3afa5d8myv35047r94g") (f (quote (("std" "bitcoin_hashes/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std") ("default" "std"))))))

(define-public crate-lightning-invoice-0.24.0 (c (n "lightning-invoice") (v "0.24.0") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin") (r "^0.29.0") (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lightning") (r "^0.0.116") (k 0)) (d (n "lightning") (r "^0.0.116") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("recovery" "alloc"))) (k 0)) (d (n "serde") (r "^1.0.118") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "08qdg5xw0hj9914qgpvbcpf8z9bfx88jjg040ajjgv16hlaw120p") (f (quote (("std" "bitcoin_hashes/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std") ("default" "std"))))))

(define-public crate-lightning-invoice-0.25.0-alpha1 (c (n "lightning-invoice") (v "0.25.0-alpha1") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin") (r "^0.29.0") (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lightning") (r "^0.0.117-alpha1") (k 0)) (d (n "lightning") (r "^0.0.117-alpha1") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("recovery" "alloc"))) (k 0)) (d (n "serde") (r "^1.0.118") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0r0q09hs3qbag2crrpk4wwi5k6c7rb36rmvjdjv9vh2zi0kjz5sc") (f (quote (("std" "bitcoin_hashes/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std") ("default" "std"))))))

(define-public crate-lightning-invoice-0.25.0-alpha2 (c (n "lightning-invoice") (v "0.25.0-alpha2") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin") (r "^0.29.0") (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lightning") (r "^0.0.117-alpha2") (k 0)) (d (n "lightning") (r "^0.0.117-alpha2") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("recovery" "alloc"))) (k 0)) (d (n "serde") (r "^1.0.118") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0cd1nzzi98l5p2yk8aia9cp88f2cbv1a8gjc97cf5isxzfvgcnhp") (f (quote (("std" "bitcoin_hashes/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std") ("default" "std"))))))

(define-public crate-lightning-invoice-0.25.0-rc1 (c (n "lightning-invoice") (v "0.25.0-rc1") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin") (r "^0.29.0") (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lightning") (r "^0.0.117-rc1") (k 0)) (d (n "lightning") (r "^0.0.117-rc1") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("recovery" "alloc"))) (k 0)) (d (n "serde") (r "^1.0.118") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "19ggcfm3g3xb05hllzyy1cpdw00wzpwn2xc42pdgc4ay2zmhxaa5") (f (quote (("std" "bitcoin_hashes/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std") ("default" "std"))))))

(define-public crate-lightning-invoice-0.25.0 (c (n "lightning-invoice") (v "0.25.0") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin") (r "^0.29.0") (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lightning") (r "^0.0.117") (k 0)) (d (n "lightning") (r "^0.0.117") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("recovery" "alloc"))) (k 0)) (d (n "serde") (r "^1.0.118") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1bmiq2ws3av49gblfmh73la0vr458v6r5s8bbxy4cg37ag8808vd") (f (quote (("std" "bitcoin_hashes/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std") ("default" "std"))))))

(define-public crate-lightning-invoice-0.26.0 (c (n "lightning-invoice") (v "0.26.0") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin") (r "^0.29.0") (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lightning") (r "^0.0.118") (k 0)) (d (n "lightning") (r "^0.0.118") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("recovery" "alloc"))) (k 0)) (d (n "serde") (r "^1.0.118") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0p5jlcz65d0a7sbcqa93h1kkhl6ik9nqhv4p43q7bvzln1w4iciy") (f (quote (("std" "bitcoin_hashes/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std") ("default" "std"))))))

(define-public crate-lightning-invoice-0.27.0 (c (n "lightning-invoice") (v "0.27.0") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin") (r "^0.30.2") (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.1.1") (k 2) (p "hex-conservative")) (d (n "lightning") (r "^0.0.119") (k 0)) (d (n "lightning") (r "^0.0.119") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("recovery" "alloc"))) (k 0)) (d (n "serde") (r "^1.0.118") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0rd4794j47adz2s1h1l8i871mw88agyg6s2g25ipgizazb622d7x") (f (quote (("std" "bitcoin/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std") ("default" "std"))))))

(define-public crate-lightning-invoice-0.28.0 (c (n "lightning-invoice") (v "0.28.0") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin") (r "^0.30.2") (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.1.1") (k 2) (p "hex-conservative")) (d (n "lightning") (r "^0.0.120") (k 0)) (d (n "lightning") (r "^0.0.120") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("recovery" "alloc"))) (k 0)) (d (n "serde") (r "^1.0.118") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0crxpw2phmnpgl39xnw1hbhiph82kam3d5xhxwgylc8k8kq4qqs8") (f (quote (("std" "bitcoin/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std") ("default" "std"))))))

(define-public crate-lightning-invoice-0.29.0 (c (n "lightning-invoice") (v "0.29.0") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin") (r "^0.30.2") (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.1.1") (k 2) (p "hex-conservative")) (d (n "lightning") (r "^0.0.121") (k 0)) (d (n "lightning") (r "^0.0.121") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("recovery" "alloc"))) (k 0)) (d (n "serde") (r "^1.0.118") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "011agn7ypnxr7fb350fxvvaypfc7w8mr4yarp2rlspb09b56l62v") (f (quote (("std" "bitcoin/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std") ("default" "std"))))))

(define-public crate-lightning-invoice-0.30.0 (c (n "lightning-invoice") (v "0.30.0") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin") (r "^0.30.2") (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.1.1") (k 2) (p "hex-conservative")) (d (n "lightning") (r "^0.0.122") (k 0)) (d (n "lightning") (r "^0.0.122") (f (quote ("_test_utils"))) (k 2)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("recovery" "alloc"))) (k 0)) (d (n "serde") (r "^1.0.118") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "08csn4whqxqafxz41xxhix4ay9dlcjjz0nzlh1s6kpv9gs4xnvqh") (f (quote (("std" "bitcoin/std" "num-traits/std" "lightning/std" "bech32/std") ("no-std" "hashbrown" "lightning/no-std") ("default" "std"))))))

(define-public crate-lightning-invoice-0.31.0-beta (c (n "lightning-invoice") (v "0.31.0-beta") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin") (r "^0.30.2") (k 0)) (d (n "hashbrown") (r "^0.13") (k 2)) (d (n "hex") (r "^0.1.1") (k 2) (p "hex-conservative")) (d (n "lightning") (r "^0.0.123-beta") (k 0)) (d (n "lightning") (r "^0.0.123-beta") (f (quote ("_test_utils"))) (k 2)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("recovery" "alloc"))) (k 0)) (d (n "serde") (r "^1.0.118") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "07n1cnv9spp3drzjn41cphin42an8mg9b9fb6c4scl9wvhi8vkhi") (f (quote (("std" "bitcoin/std" "lightning/std" "bech32/std") ("no-std" "lightning/no-std") ("default" "std"))))))

(define-public crate-lightning-invoice-0.31.0-rc1 (c (n "lightning-invoice") (v "0.31.0-rc1") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin") (r "^0.30.2") (k 0)) (d (n "hashbrown") (r "^0.13") (k 2)) (d (n "hex") (r "^0.1.1") (k 2) (p "hex-conservative")) (d (n "lightning") (r "^0.0.123-rc1") (k 0)) (d (n "lightning") (r "^0.0.123-rc1") (f (quote ("_test_utils"))) (k 2)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("recovery" "alloc"))) (k 0)) (d (n "serde") (r "^1.0.118") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1v0722pkbpv4qax586g7x108wf8cbz1i2q5j5wag36a08i55ibpb") (f (quote (("std" "bitcoin/std" "lightning/std" "bech32/std") ("no-std" "lightning/no-std") ("default" "std"))))))

(define-public crate-lightning-invoice-0.31.0 (c (n "lightning-invoice") (v "0.31.0") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin") (r "^0.30.2") (k 0)) (d (n "hashbrown") (r "^0.13") (k 2)) (d (n "hex") (r "^0.1.1") (k 2) (p "hex-conservative")) (d (n "lightning") (r "^0.0.123") (k 0)) (d (n "lightning") (r "^0.0.123") (f (quote ("_test_utils"))) (k 2)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("recovery" "alloc"))) (k 0)) (d (n "serde") (r "^1.0.118") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0h4xgrdlgad3av19dy3dmid963d79b4pv6wj9ccg4yqrrw0pvl16") (f (quote (("std" "bitcoin/std" "lightning/std" "bech32/std") ("no-std" "lightning/no-std") ("default" "std"))))))

