(define-module (crates-io li bw libwayshot) #:use-module (crates-io))

(define-public crate-libwayshot-0.1.2 (c (n "libwayshot") (v "0.1.2") (d (list (d (n "image") (r "^0.24") (f (quote ("jpeg" "png" "pnm" "qoi"))) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (d #t) (k 0)) (d (n "wayland-client") (r "^0.30.2") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30.0") (f (quote ("client" "unstable"))) (d #t) (k 0)) (d (n "wayland-protocols-wlr") (r "^0.1.0") (f (quote ("client"))) (d #t) (k 0)))) (h "05zknw4yc4cm6v7xfqafdqrcdjclvwnnzhpk9ccj1kp3hb5ccxb7")))

(define-public crate-libwayshot-0.2.0 (c (n "libwayshot") (v "0.2.0") (d (list (d (n "image") (r "^0.24") (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wayland-client") (r "^0.30.2") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30.0") (f (quote ("client" "unstable"))) (d #t) (k 0)) (d (n "wayland-protocols-wlr") (r "^0.1.0") (f (quote ("client"))) (d #t) (k 0)))) (h "1smadiwinkz5hq3pcf9c6mw20jc691n6m0rlh0cgbdsq85chwvc9")))

(define-public crate-libwayshot-0.3.0 (c (n "libwayshot") (v "0.3.0") (d (list (d (n "image") (r "^0.24") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (d #t) (k 0)) (d (n "nix") (r "^0.27.1") (f (quote ("fs" "mman"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wayland-client") (r "^0.31.1") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.31.0") (f (quote ("client" "unstable"))) (d #t) (k 0)) (d (n "wayland-protocols-wlr") (r "^0.2.0") (f (quote ("client"))) (d #t) (k 0)))) (h "0sad8jcdrvcqz39fkjn9h6008nxkg571zwi7vgkv28fhrwga1vx2")))

