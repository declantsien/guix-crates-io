(define-module (crates-io li bw libwebrtc) #:use-module (crates-io))

(define-public crate-libwebrtc-0.2.0 (c (n "libwebrtc") (v "0.2.0") (d (list (d (n "cxx") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "livekit-protocol") (r "^0.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("MessageEvent" "RtcPeerConnection" "RtcSignalingState" "RtcSdpType" "RtcSessionDescriptionInit" "RtcPeerConnectionIceEvent" "RtcIceCandidate" "RtcDataChannel" "RtcDataChannelEvent" "RtcDataChannelState" "EventTarget" "WebGlRenderingContext" "WebGlTexture"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webrtc-sys") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1hxjb5slvlnafg8ybqbs1q5j6jgapvah8f580vfnswi3hc37lllj")))

(define-public crate-libwebrtc-0.3.0 (c (n "libwebrtc") (v "0.3.0") (d (list (d (n "cxx") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "livekit-protocol") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("MessageEvent" "RtcPeerConnection" "RtcSignalingState" "RtcSdpType" "RtcSessionDescriptionInit" "RtcPeerConnectionIceEvent" "RtcIceCandidate" "RtcDataChannel" "RtcDataChannelEvent" "RtcDataChannelState" "EventTarget" "WebGlRenderingContext" "WebGlTexture"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webrtc-sys") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0233h06ljdra8i184vn8zday5mbsn0ynk9p86jzgpbixv9z0fa5f")))

(define-public crate-libwebrtc-0.3.1 (c (n "libwebrtc") (v "0.3.1") (d (list (d (n "cxx") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "livekit-protocol") (r "^0.3.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("MessageEvent" "RtcPeerConnection" "RtcSignalingState" "RtcSdpType" "RtcSessionDescriptionInit" "RtcPeerConnectionIceEvent" "RtcIceCandidate" "RtcDataChannel" "RtcDataChannelEvent" "RtcDataChannelState" "EventTarget" "WebGlRenderingContext" "WebGlTexture"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webrtc-sys") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0y0ccybdxyfnksis7fn1pgcai7dv6sy3hgr5pd008zddpc571nyb")))

(define-public crate-libwebrtc-0.3.2 (c (n "libwebrtc") (v "0.3.2") (d (list (d (n "cxx") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "livekit-protocol") (r "^0.3.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("MessageEvent" "RtcPeerConnection" "RtcSignalingState" "RtcSdpType" "RtcSessionDescriptionInit" "RtcPeerConnectionIceEvent" "RtcIceCandidate" "RtcDataChannel" "RtcDataChannelEvent" "RtcDataChannelState" "EventTarget" "WebGlRenderingContext" "WebGlTexture"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webrtc-sys") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0kdf8qrj2yk3v0y5sv7q88lrvj5r1l3agf9w8nkq5amrybfmiw7x")))

