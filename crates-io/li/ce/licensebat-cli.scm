(define-module (crates-io li ce licensebat-cli) #:use-module (crates-io))

(define-public crate-licensebat-cli-0.0.2 (c (n "licensebat-cli") (v "0.0.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "askalono") (r "^0.4.3") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "licensebat-core") (r "^0.0.2") (f (quote ("licrc-from-file"))) (d #t) (k 0)) (d (n "licensebat-dart") (r "^0.0.2") (d #t) (k 0)) (d (n "licensebat-js") (r "^0.0.2") (d #t) (k 0)) (d (n "licensebat-rust") (r "^0.0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "time"))) (d #t) (k 0)))) (h "1bg8sbyvdc0ii6f2m110cn9kqdw4dqackrmjnx4jqcx7c7vpc047")))

(define-public crate-licensebat-cli-0.0.3 (c (n "licensebat-cli") (v "0.0.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "askalono") (r "^0.4.3") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "licensebat-core") (r "^0.0.2") (f (quote ("licrc-from-file"))) (d #t) (k 0)) (d (n "licensebat-dart") (r "^0.0.3") (d #t) (k 0)) (d (n "licensebat-js") (r "^0.0.2") (d #t) (k 0)) (d (n "licensebat-rust") (r "^0.0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "time"))) (d #t) (k 0)))) (h "0id33djsdainmssdjvx5yy8q9f4p2db4cawdic3pfaff01hm5m71")))

(define-public crate-licensebat-cli-0.0.4 (c (n "licensebat-cli") (v "0.0.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "askalono") (r "^0.4.3") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "licensebat-core") (r "^0.0.2") (f (quote ("licrc-from-file"))) (d #t) (k 0)) (d (n "licensebat-dart") (r "^0.0.3") (d #t) (k 0)) (d (n "licensebat-js") (r "^0.0.2") (d #t) (k 0)) (d (n "licensebat-rust") (r "^0.0.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "time"))) (d #t) (k 0)))) (h "0p198dwy721n95c7diskyv8r2msxg7j1znf56kaasb1v37649gzx")))

(define-public crate-licensebat-cli-0.0.5 (c (n "licensebat-cli") (v "0.0.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "askalono") (r "^0.4.3") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "licensebat-core") (r "^0.0.3") (f (quote ("licrc-from-file"))) (d #t) (k 0)) (d (n "licensebat-dart") (r "^0.0.4") (d #t) (k 0)) (d (n "licensebat-js") (r "^0.0.3") (d #t) (k 0)) (d (n "licensebat-rust") (r "^0.0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "time"))) (d #t) (k 0)))) (h "0rb00s8gwld055f2zyyq97i02ak0d9q5hlrfvd6gbff1yfz6bqh0")))

(define-public crate-licensebat-cli-0.0.6 (c (n "licensebat-cli") (v "0.0.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "askalono") (r "^0.4.3") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "licensebat-core") (r "^0.0.5") (f (quote ("licrc-from-file"))) (d #t) (k 0)) (d (n "licensebat-dart") (r "^0.0.5") (d #t) (k 0)) (d (n "licensebat-js") (r "^0.0.4") (d #t) (k 0)) (d (n "licensebat-rust") (r "^0.0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "time"))) (d #t) (k 0)))) (h "0pj2mgpvfzpzhivlc1ls64zhbhfq2nrxwn0k73gcwh2k3g69ahxp")))

(define-public crate-licensebat-cli-0.0.7 (c (n "licensebat-cli") (v "0.0.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "askalono") (r "^0.4.3") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "licensebat-core") (r "^0.0.5") (f (quote ("licrc-from-file"))) (d #t) (k 0)) (d (n "licensebat-dart") (r "^0.0.5") (d #t) (k 0)) (d (n "licensebat-js") (r "^0.0.4") (d #t) (k 0)) (d (n "licensebat-rust") (r "^0.0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "time"))) (d #t) (k 0)))) (h "0sc5l32x2vj5sazls85zls61jwrwwg0040vh1575kqyqmr8wgp91")))

(define-public crate-licensebat-cli-0.0.8 (c (n "licensebat-cli") (v "0.0.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "askalono") (r "^0.4.3") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "licensebat-core") (r "^0.0.6") (f (quote ("licrc-from-file"))) (d #t) (k 0)) (d (n "licensebat-dart") (r "^0.0.6") (d #t) (k 0)) (d (n "licensebat-js") (r "^0.0.6") (d #t) (k 0)) (d (n "licensebat-rust") (r "^0.0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "time"))) (d #t) (k 0)))) (h "041mgk708ipg1rjw9f1hdgpbj9qph5icxax8xn8yx0ljy1zqqww1")))

(define-public crate-licensebat-cli-0.0.9 (c (n "licensebat-cli") (v "0.0.9") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "askalono") (r "^0.4.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "licensebat-core") (r "^0.0.6") (f (quote ("licrc-from-file"))) (d #t) (k 0)) (d (n "licensebat-dart") (r "^0.0.7") (d #t) (k 0)) (d (n "licensebat-js") (r "^0.0.6") (d #t) (k 0)) (d (n "licensebat-rust") (r "^0.0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "time"))) (d #t) (k 0)))) (h "01ialbycipsd0z6a8lrgzqhcnjcl1abzqyc1ymqq3h1zfyvkmm0b")))

(define-public crate-licensebat-cli-0.0.10 (c (n "licensebat-cli") (v "0.0.10") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "askalono") (r "^0.4.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "licensebat-core") (r "^0.0.7") (f (quote ("licrc-from-file"))) (d #t) (k 0)) (d (n "licensebat-dart") (r "^0.0.8") (d #t) (k 0)) (d (n "licensebat-js") (r "^0.0.7") (d #t) (k 0)) (d (n "licensebat-rust") (r "^0.0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "time"))) (d #t) (k 0)))) (h "1zprn1h4fkyagb1dsm6h7pcvp6wr8js9xyhbkh8mdlbcf2kndm93")))

(define-public crate-licensebat-cli-0.0.11 (c (n "licensebat-cli") (v "0.0.11") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "askalono") (r "^0.4.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "licensebat-core") (r "^0.0.9") (f (quote ("licrc-from-file"))) (d #t) (k 0)) (d (n "licensebat-dart") (r "^0.0.9") (d #t) (k 0)) (d (n "licensebat-js") (r "^0.0.9") (d #t) (k 0)) (d (n "licensebat-rust") (r "^0.0.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "time"))) (d #t) (k 0)))) (h "03556ww9n66m238n9y5028zfmvnggk5632bflygkkzdg1wg3w6pw")))

(define-public crate-licensebat-cli-0.0.13 (c (n "licensebat-cli") (v "0.0.13") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "askalono") (r "^0.4.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "licensebat-core") (r "^0.0.10") (f (quote ("licrc-from-file"))) (d #t) (k 0)) (d (n "licensebat-dart") (r "^0.0.10") (d #t) (k 0)) (d (n "licensebat-js") (r "^0.0.10") (d #t) (k 0)) (d (n "licensebat-rust") (r "^0.0.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "time"))) (d #t) (k 0)))) (h "0scciir6qarwhhhyv9y0kpxcdfjaxhh36dp4b81swx57k0ibc99f")))

(define-public crate-licensebat-cli-0.13.0 (c (n "licensebat-cli") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "askalono") (r "^0.4.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "licensebat-core") (r "^0.0.11") (f (quote ("licrc-from-file"))) (d #t) (k 0)) (d (n "licensebat-dart") (r "^0.0.11") (d #t) (k 0)) (d (n "licensebat-js") (r "^0.0.11") (d #t) (k 0)) (d (n "licensebat-rust") (r "^0.0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "time"))) (d #t) (k 0)))) (h "0axvh9czkhpbs8zyj3p4b6jx2fdw0hhzl51dy2pj28qh3apxbdr6")))

(define-public crate-licensebat-cli-0.14.0 (c (n "licensebat-cli") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "askalono") (r "^0.4.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "licensebat-core") (r "^0.0.14") (f (quote ("licrc-from-file"))) (d #t) (k 0)) (d (n "licensebat-dart") (r "^0.0.14") (d #t) (k 0)) (d (n "licensebat-js") (r "^0.0.14") (d #t) (k 0)) (d (n "licensebat-rust") (r "^0.0.14") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "time"))) (d #t) (k 0)))) (h "1nmww34a2rxfg4zb6m8w6kh1s45k2b6pzawbl6fm1m645msi41ml")))

(define-public crate-licensebat-cli-0.15.0 (c (n "licensebat-cli") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "askalono") (r "^0.4.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "licensebat-core") (r "^0.0.15") (f (quote ("licrc-from-file"))) (d #t) (k 0)) (d (n "licensebat-dart") (r "^0.0.15") (d #t) (k 0)) (d (n "licensebat-js") (r "^0.0.15") (d #t) (k 0)) (d (n "licensebat-rust") (r "^0.0.15") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "time"))) (d #t) (k 0)))) (h "13qj9rxsh0xiz6saj7l57kb66k7hsrn5wsnrglpb4k27nqchqala")))

(define-public crate-licensebat-cli-0.16.0 (c (n "licensebat-cli") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "askalono") (r "^0.4.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "licensebat-core") (r "^0.0.16") (f (quote ("licrc-from-file"))) (d #t) (k 0)) (d (n "licensebat-dart") (r "^0.0.16") (d #t) (k 0)) (d (n "licensebat-js") (r "^0.0.16") (d #t) (k 0)) (d (n "licensebat-rust") (r "^0.0.16") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "time"))) (d #t) (k 0)))) (h "0z9qkcxynz3crs1pi5sncgd736wg5mhxwmxzzpdxbhzj9mbhp5sz")))

(define-public crate-licensebat-cli-0.17.0 (c (n "licensebat-cli") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "askalono") (r "^0.4.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "licensebat-core") (r "^0.0.16") (f (quote ("licrc-from-file"))) (d #t) (k 0)) (d (n "licensebat-dart") (r "^0.0.16") (d #t) (k 0)) (d (n "licensebat-js") (r "^0.0.17") (d #t) (k 0)) (d (n "licensebat-rust") (r "^0.0.17") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "time"))) (d #t) (k 0)))) (h "1kqrgv5k4qilr6zz2p2x3r5n7n65snir6cxw1wminyvfmj0pmd68")))

(define-public crate-licensebat-cli-0.18.0 (c (n "licensebat-cli") (v "0.18.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "askalono") (r "^0.4.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "licensebat-core") (r "^0.0.17") (f (quote ("licrc-from-file"))) (d #t) (k 0)) (d (n "licensebat-dart") (r "^0.0.17") (d #t) (k 0)) (d (n "licensebat-js") (r "^0.0.18") (d #t) (k 0)) (d (n "licensebat-rust") (r "^0.0.18") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "time"))) (d #t) (k 0)))) (h "1jzca9a8fjx7yzvjl87bm22bgw8nrh2ykcibbcgd81zqgaycp6ir")))

(define-public crate-licensebat-cli-0.19.0 (c (n "licensebat-cli") (v "0.19.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "askalono") (r "^0.4.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "licensebat-core") (r "^0.0.18") (f (quote ("licrc-from-file"))) (d #t) (k 0)) (d (n "licensebat-dart") (r "^0.0.18") (d #t) (k 0)) (d (n "licensebat-js") (r "^0.0.19") (d #t) (k 0)) (d (n "licensebat-rust") (r "^0.0.19") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "time"))) (d #t) (k 0)))) (h "03ikc88fxq2i9snn9jqggygasjzfa11inxjg0ysfinp4a1zhx28f")))

(define-public crate-licensebat-cli-0.20.0 (c (n "licensebat-cli") (v "0.20.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "askalono") (r "^0.4.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "licensebat-core") (r "^0.0.20") (f (quote ("licrc-from-file"))) (d #t) (k 0)) (d (n "licensebat-dart") (r "^0.0.20") (d #t) (k 0)) (d (n "licensebat-js") (r "^0.0.20") (d #t) (k 0)) (d (n "licensebat-rust") (r "^0.0.20") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "time"))) (d #t) (k 0)))) (h "1i5z05x2jvvhnzy0isjcy0y0r64az4zmg806bb6ig5bm3p02lj53")))

(define-public crate-licensebat-cli-0.21.0 (c (n "licensebat-cli") (v "0.21.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "askalono") (r "^0.4.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "licensebat-core") (r "^0.0.21") (f (quote ("licrc-from-file"))) (d #t) (k 0)) (d (n "licensebat-dart") (r "^0.0.21") (d #t) (k 0)) (d (n "licensebat-js") (r "^0.0.21") (d #t) (k 0)) (d (n "licensebat-rust") (r "^0.0.21") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "time"))) (d #t) (k 0)))) (h "0bjlqvjb4w54ghkag9wwgajhw8iaz112g1phqvrx0mi2nys3qx7x")))

(define-public crate-licensebat-cli-0.22.0 (c (n "licensebat-cli") (v "0.22.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "askalono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "licensebat-core") (r "^0.22.0") (f (quote ("licrc-from-file"))) (d #t) (k 0)) (d (n "licensebat-dart") (r "^0.22.0") (d #t) (k 0)) (d (n "licensebat-js") (r "^0.22.0") (d #t) (k 0)) (d (n "licensebat-rust") (r "^0.22.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "time"))) (d #t) (k 0)))) (h "1iwnhmi218bwz8dq50aga4h2bxja9ndyyyxcvcrgydxznp6q2xnd")))

