(define-module (crates-io li bs libset) #:use-module (crates-io))

(define-public crate-libset-0.1.1 (c (n "libset") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)))) (h "1pwfiymr9k5fwr07dcavc13da08qcnxn76p8y87vq35a34a9g4dm")))

(define-public crate-libset-0.1.2 (c (n "libset") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.6") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)))) (h "143yc6q067ghma734501cxjz43sw543na5p42si3yij5h8a0jnsf")))

(define-public crate-libset-0.1.3 (c (n "libset") (v "0.1.3") (d (list (d (n "atomicwrites") (r "^0.4.3") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "known-folders") (r "^1.1.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "ron") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "xdg") (r "^2.5.2") (d #t) (t "cfg(unix)") (k 0)))) (h "063gdglrjyglb47k2f89bd8piv86z8mrjjnxpnrsg43ps2j801cn") (f (quote (("default" "json")))) (s 2) (e (quote (("toml" "dep:toml") ("ron" "dep:ron") ("json" "dep:serde_json"))))))

(define-public crate-libset-0.1.4 (c (n "libset") (v "0.1.4") (d (list (d (n "atomicwrites") (r "^0.4.3") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "known-folders") (r "^1.1.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "ron") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "xdg") (r "^2.5.2") (d #t) (t "cfg(unix)") (k 0)))) (h "0kb1xyjjixz9nsm05bk0qy007wz08rdqm18f8d1wapcp6sgp9nv5") (f (quote (("default" "json")))) (s 2) (e (quote (("toml" "dep:toml") ("ron" "dep:ron") ("json" "dep:serde_json"))))))

(define-public crate-libset-0.1.5 (c (n "libset") (v "0.1.5") (d (list (d (n "atomicwrites") (r "^0.4.3") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "known-folders") (r "^1.1.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "ron") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "xdg") (r "^2.5.2") (d #t) (t "cfg(unix)") (k 0)))) (h "0ybg2snrvwhynl9sdv0m03q9942k94vkyx8nxl2flspwfqs4kv8w") (f (quote (("default" "json")))) (s 2) (e (quote (("toml" "dep:toml") ("ron" "dep:ron") ("json" "dep:serde_json"))))))

(define-public crate-libset-0.1.6 (c (n "libset") (v "0.1.6") (d (list (d (n "atomicwrites") (r "^0.4.3") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "known-folders") (r "^1.1.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "ron") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "xdg") (r "^2.5.2") (d #t) (t "cfg(unix)") (k 0)))) (h "13g2rs23xkv910gqmhlvzc4bh99al8ckvwdhjggapaha4p56jkya") (f (quote (("default" "json")))) (s 2) (e (quote (("toml" "dep:toml") ("ron" "dep:ron") ("json" "dep:serde_json"))))))

