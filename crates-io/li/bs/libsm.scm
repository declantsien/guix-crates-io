(define-module (crates-io li bs libsm) #:use-module (crates-io))

(define-public crate-libsm-0.1.0 (c (n "libsm") (v "0.1.0") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "yasna") (r "^0.1.3") (d #t) (k 0)))) (h "0lg65andk8l3sz2gm1gaxs6d51nx5ks46mh13y0gralrhw2n8pvk") (y #t)))

(define-public crate-libsm-0.1.1 (c (n "libsm") (v "0.1.1") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "yasna") (r "^0.1.3") (d #t) (k 0)))) (h "08w7mc87hchw819l9wvzwn7008vkcxgg5c0jfdndm8a0081iw02f") (y #t)))

(define-public crate-libsm-0.2.0 (c (n "libsm") (v "0.2.0") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "yasna") (r "^0.1.3") (d #t) (k 0)))) (h "1fiqqryvyh62zica14nkrg75x76cvawr3kc1bzmmhc9sa9za84wa") (y #t)))

(define-public crate-libsm-0.2.1 (c (n "libsm") (v "0.2.1") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "yasna") (r "^0.1.3") (d #t) (k 0)))) (h "1242yhij13yaw104fyyr9ys64xh0ivgd58dmbsj7xz79hfz4cg6j") (y #t)))

(define-public crate-libsm-0.3.0 (c (n "libsm") (v "0.3.0") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "yasna") (r "^0.1.3") (d #t) (k 0)))) (h "1wnqh6af5w44jfyvx49f9md79h9w5q7am4hbp9b58p0v1mvz0f2m") (y #t)))

(define-public crate-libsm-0.4.0 (c (n "libsm") (v "0.4.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "yasna") (r "^0.3.2") (f (quote ("num-bigint"))) (d #t) (k 0)))) (h "155wamrdmz46l5bhvkzp9rvfbymc0nnb1nzhpirgy4yg3r7j49p8") (f (quote (("internal_benches"))))))

(define-public crate-libsm-0.4.1 (c (n "libsm") (v "0.4.1") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "yasna") (r "^0.4.0") (f (quote ("num-bigint"))) (d #t) (k 0)))) (h "0jjchvahbgyafvxfyvfak7dd69xy5rlvqx3bx9wfvmy4k31zmbj7") (f (quote (("internal_benches"))))))

(define-public crate-libsm-0.5.0 (c (n "libsm") (v "0.5.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "yasna") (r "^0.4.0") (f (quote ("num-bigint"))) (d #t) (k 0)))) (h "097kwdx5f2q6m6ihbq1dvpa2wlvi3sm7js53xhxylg9g04cxkd2w") (f (quote (("internal_benches"))))))

(define-public crate-libsm-0.5.1 (c (n "libsm") (v "0.5.1") (d (list (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "yasna") (r "^0.5") (f (quote ("num-bigint"))) (d #t) (k 0)))) (h "0xni3f03kiix1ihvc6xkpigs1bdvdvbnvplp1ykg8yfl52xklf95") (f (quote (("internal_benches"))))))

(define-public crate-libsm-0.6.0 (c (n "libsm") (v "0.6.0") (d (list (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "yasna") (r "^0.5") (f (quote ("num-bigint"))) (d #t) (k 0)))) (h "0jv0z2d7s7m7z1p05y48jk5zhnzcdqis8mcxi0y6ca40v77v4l3a") (f (quote (("internal_benches"))))))

