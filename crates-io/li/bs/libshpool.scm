(define-module (crates-io li bs libshpool) #:use-module (crates-io))

(define-public crate-libshpool-0.5.0 (c (n "libshpool") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("poll" "ioctl"))) (d #t) (k 0)) (d (n "ntest") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "shell-words") (r "^1") (d #t) (k 0)) (d (n "shpool_pty") (r "^0.3.0") (d #t) (k 0)) (d (n "shpool_vt100") (r "^0.1.2") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "tracing-log" "smallvec"))) (k 0)))) (h "1nns67xkrk0cmdlch1ygc7whywy4yixbz6iz60ik8h6nmni9fc0p") (f (quote (("test_hooks"))))))

(define-public crate-libshpool-0.6.0 (c (n "libshpool") (v "0.6.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "motd") (r "^0.2.0") (d #t) (k 0)) (d (n "nix") (r "^0.28") (f (quote ("poll" "ioctl" "socket" "user" "process" "signal" "term" "fs"))) (d #t) (k 0)) (d (n "ntest") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "shell-words") (r "^1") (d #t) (k 0)) (d (n "shpool_pty") (r "^0.3.1") (d #t) (k 0)) (d (n "shpool_vt100") (r "^0.1.2") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "termini") (r "^1.0.0") (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "tracing-log" "smallvec"))) (k 0)))) (h "0dn96nb2mmf5lds9bll7b7lhg1mw1zi6mlknyr6d5f84aq7q4zz5") (f (quote (("test_hooks")))) (r "1.74")))

(define-public crate-libshpool-0.6.1 (c (n "libshpool") (v "0.6.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "motd") (r "^0.2.1") (k 0)) (d (n "nix") (r "^0.28") (f (quote ("poll" "ioctl" "socket" "user" "process" "signal" "term" "fs"))) (d #t) (k 0)) (d (n "notify") (r "^6") (d #t) (k 0)) (d (n "ntest") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "shell-words") (r "^1") (d #t) (k 0)) (d (n "shpool_pty") (r "^0.3.1") (d #t) (k 0)) (d (n "shpool_vt100") (r "^0.1.2") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "termini") (r "^1.0.0") (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "tracing-log" "smallvec"))) (k 0)))) (h "04jlnxrjyy4w8phm2a4il7yc4mq3labh7w0cac8kag4vv5lay89x") (f (quote (("test_hooks")))) (r "1.74")))

