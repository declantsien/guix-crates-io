(define-module (crates-io li bs libsfasta) #:use-module (crates-io))

(define-public crate-libsfasta-0.3.3 (c (n "libsfasta") (v "0.3.3") (d (list (d (n "bincode") (r "^2.0.0-rc.2") (d #t) (k 0)) (d (n "bitpacking") (r "^0.8.4") (f (quote ("bitpacker8x"))) (d #t) (k 0)) (d (n "bitvec") (r "^1.0.1") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "bumpalo") (r "^3.11.0") (d #t) (k 0)) (d (n "bytelines") (r "^2.4.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (f (quote ("rust_backend"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "flate2") (r "^1.0.24") (f (quote ("zlib-ng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "generic-array") (r "^0.14.5") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.7") (f (quote ("js"))) (d #t) (k 0)) (d (n "humansize") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "numeric-array") (r "^0.5.2") (d #t) (k 2)) (d (n "pulp") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "ruzstd") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "simdutf8") (r "^0.1.4") (f (quote ("aarch64_neon"))) (d #t) (k 0)) (d (n "snap") (r "^1.0.5") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "syncmers") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "twox-hash") (r "^1.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "xz") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "zstd") (r "^0.11.2") (f (quote ("arrays" "zdict_builder" "experimental"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "04x30l645anprmhc2gcgddxqgr8aiy0592j3k6w4cq7f0rksn87b")))

(define-public crate-libsfasta-0.3.4 (c (n "libsfasta") (v "0.3.4") (d (list (d (n "bincode") (r "^2.0.0-rc.2") (d #t) (k 0)) (d (n "bitpacking") (r "^0.8.4") (f (quote ("bitpacker8x"))) (d #t) (k 0)) (d (n "bitvec") (r "^1.0.1") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "bumpalo") (r "^3.11.0") (d #t) (k 0)) (d (n "bytelines") (r "^2.4.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (f (quote ("rust_backend"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "flate2") (r "^1.0.24") (f (quote ("zlib-ng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "generic-array") (r "^0.14.5") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.7") (f (quote ("js"))) (d #t) (k 0)) (d (n "humansize") (r "^2.0.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "numeric-array") (r "^0.5.2") (d #t) (k 2)) (d (n "pulp") (r "^0.10.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "ruzstd") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "simdutf8") (r "^0.1.4") (f (quote ("aarch64_neon"))) (d #t) (k 0)) (d (n "snap") (r "^1.0.5") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "syncmers") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "twox-hash") (r "^1.6.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "xz") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "zstd") (r "^0.12.1") (f (quote ("arrays" "zdict_builder" "experimental"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "079z6fc1jkcf103n68phvfbjgx7fd9mrbphbfclndyypdsb9py0y")))

