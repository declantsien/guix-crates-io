(define-module (crates-io li bs libsignal-protocol) #:use-module (crates-io))

(define-public crate-libsignal-protocol-0.1.0 (c (n "libsignal-protocol") (v "0.1.0") (d (list (d (n "aes") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "aes-ctr") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "block-modes") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.9") (d #t) (k 2)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 2)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "libsignal-protocol-sys") (r "^0.1.0") (d #t) (k 0)) (d (n "lock_api") (r "^0.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.8.0") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rental") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (o #t) (d #t) (k 0)))) (h "0li60h9lwlghpz3j7r465qahk3sqrxgv6sg8dlv3xl28a2pj3lp4") (f (quote (("default" "crypto-native") ("crypto-openssl" "openssl" "rental") ("crypto-native" "sha2" "hmac" "aes" "block-modes" "aes-ctr"))))))

