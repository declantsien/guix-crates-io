(define-module (crates-io li bs libsecp256k1) #:use-module (crates-io))

(define-public crate-libsecp256k1-0.1.0 (c (n "libsecp256k1") (v "0.1.0") (h "0j1c7ck3i2vwv7krnr2ygplnfm2cjf7pvynla97h1p6prx490h9r")))

(define-public crate-libsecp256k1-0.1.2 (c (n "libsecp256k1") (v "0.1.2") (d (list (d (n "etcommon-hexutil") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "secp256k1-test") (r "^0.7") (d #t) (k 2)))) (h "02dzzmd4fjzy7j96213favn86jy3mqrfmx1hqjjvz5d0fm5s0ylj")))

(define-public crate-libsecp256k1-0.1.3 (c (n "libsecp256k1") (v "0.1.3") (d (list (d (n "etcommon-hexutil") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "secp256k1-test") (r "^0.7") (d #t) (k 2)))) (h "0lz5c12qyxiwbk552zr3a214rljwy5fzkk48z3a9bl6l6vhj1zw9")))

(define-public crate-libsecp256k1-0.1.4 (c (n "libsecp256k1") (v "0.1.4") (d (list (d (n "etcommon-hexutil") (r "^0.2") (d #t) (k 2)) (d (n "hmac-drbg") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "secp256k1-test") (r "^0.7") (d #t) (k 2)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "typenum") (r "^1.9") (d #t) (k 0)))) (h "0hxrnj1a26g0mp3b63y72zzb99z7qi2gllb6hb42k8gkfx6y2493")))

(define-public crate-libsecp256k1-0.1.5 (c (n "libsecp256k1") (v "0.1.5") (d (list (d (n "etcommon-hexutil") (r "^0.2") (d #t) (k 2)) (d (n "hmac-drbg") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "secp256k1-test") (r "^0.7") (d #t) (k 2)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "typenum") (r "^1.9") (d #t) (k 0)))) (h "1v93yzm3sn92hahzfl2pq0wxqmnzml708h1p83bjnls8yqabmcix")))

(define-public crate-libsecp256k1-0.1.6 (c (n "libsecp256k1") (v "0.1.6") (d (list (d (n "etcommon-hexutil") (r "^0.2") (d #t) (k 2)) (d (n "hmac-drbg") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "secp256k1-test") (r "^0.7") (d #t) (k 2)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "typenum") (r "^1.9") (d #t) (k 0)))) (h "06w5cfrssh9rbj4h0zka2v0y2fkmmgp7lpw2gh0hyhr2jza7d3dw")))

(define-public crate-libsecp256k1-0.1.7 (c (n "libsecp256k1") (v "0.1.7") (d (list (d (n "etcommon-hexutil") (r "^0.2") (d #t) (k 2)) (d (n "hmac-drbg") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "secp256k1-test") (r "^0.7") (d #t) (k 2)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "typenum") (r "^1.9") (d #t) (k 0)))) (h "09b26gfmikssvvcq1smvl3906644iw6g6p4l65qcbrin20l0s9mv")))

(define-public crate-libsecp256k1-0.1.8 (c (n "libsecp256k1") (v "0.1.8") (d (list (d (n "etcommon-hexutil") (r "^0.2") (d #t) (k 2)) (d (n "hmac-drbg") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "secp256k1-test") (r "^0.7") (d #t) (k 2)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "typenum") (r "^1.9") (d #t) (k 0)))) (h "1i7ckjh4nhzlnjdr2mgy9zc4dsliw0i8bisppgf8hiqll00rmfdq")))

(define-public crate-libsecp256k1-0.1.9 (c (n "libsecp256k1") (v "0.1.9") (d (list (d (n "etcommon-hexutil") (r "^0.2") (d #t) (k 2)) (d (n "hmac-drbg") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "secp256k1-test") (r "^0.7") (d #t) (k 2)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "typenum") (r "^1.9") (d #t) (k 0)))) (h "0hyvzp8q3v1f47q4flp8lv57xhw59qb45pk6sav154b4w0v4hknn")))

(define-public crate-libsecp256k1-0.1.10 (c (n "libsecp256k1") (v "0.1.10") (d (list (d (n "etcommon-hexutil") (r "^0.2") (d #t) (k 2)) (d (n "hmac-drbg") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "secp256k1-test") (r "^0.7") (d #t) (k 2)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "typenum") (r "^1.9") (d #t) (k 0)))) (h "0prsyw9pyppx0q9r632fayq5py4lhg4w4fzh2bv6alhwss8lidx1")))

(define-public crate-libsecp256k1-0.1.11 (c (n "libsecp256k1") (v "0.1.11") (d (list (d (n "etcommon-hexutil") (r "^0.2") (d #t) (k 2)) (d (n "hmac-drbg") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "secp256k1-test") (r "^0.7") (d #t) (k 2)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "typenum") (r "^1.9") (d #t) (k 0)))) (h "16khfsijq33z19v4y43dp6rlkx1r6qlsrd81nbp673fa4r540sgl")))

(define-public crate-libsecp256k1-0.1.12 (c (n "libsecp256k1") (v "0.1.12") (d (list (d (n "etcommon-hexutil") (r "^0.2") (d #t) (k 2)) (d (n "hmac-drbg") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "secp256k1-test") (r "^0.7") (d #t) (k 2)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "typenum") (r "^1.9") (d #t) (k 0)))) (h "09pf0ija3jmwwbd3rdncc3k037mwq7bnkcw00idphv2kxkvgwsdp")))

(define-public crate-libsecp256k1-0.1.13 (c (n "libsecp256k1") (v "0.1.13") (d (list (d (n "digest") (r "^0.6") (d #t) (k 0)) (d (n "etcommon-hexutil") (r "^0.2") (d #t) (k 2)) (d (n "hmac-drbg") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "secp256k1-test") (r "^0.7") (d #t) (k 2)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "typenum") (r "^1.9") (d #t) (k 0)))) (h "0b6pbpzgg445ql1smb1sl9rvva8yncslxqx9fbsfhv02cq6wbs71")))

(define-public crate-libsecp256k1-0.1.14 (c (n "libsecp256k1") (v "0.1.14") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "digest") (r "^0.6") (d #t) (k 0)) (d (n "etcommon-hexutil") (r "^0.2") (d #t) (k 2)) (d (n "hmac-drbg") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "secp256k1-test") (r "^0.7") (d #t) (k 2)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "typenum") (r "^1.9") (d #t) (k 0)))) (h "04a2nh4n2nfgdia0ncgbcf4m8yjwzvcyjn63d6jc2j7k2jmgcy9y")))

(define-public crate-libsecp256k1-0.1.15 (c (n "libsecp256k1") (v "0.1.15") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "digest") (r "^0.6") (d #t) (k 0)) (d (n "hmac-drbg") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "secp256k1-test") (r "^0.7") (d #t) (k 2)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "typenum") (r "^1.9") (d #t) (k 0)))) (h "0cykdhawgpiqqbdgz5hxlf4pwa8zyayr15bvacf9c1n5a3i46pcp")))

(define-public crate-libsecp256k1-0.2.0 (c (n "libsecp256k1") (v "0.2.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2.3") (d #t) (k 2)) (d (n "digest") (r "^0.6") (d #t) (k 0)) (d (n "hmac-drbg") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "secp256k1-test") (r "^0.7") (d #t) (k 2)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "typenum") (r "^1.9") (d #t) (k 0)))) (h "1a56176zzxx1nv12p6snwb5zzjay5mrm1fiwx5dd5hdppqxl32la")))

(define-public crate-libsecp256k1-0.2.1 (c (n "libsecp256k1") (v "0.2.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2.3") (d #t) (k 2)) (d (n "digest") (r "^0.6") (d #t) (k 0)) (d (n "hmac-drbg") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "secp256k1-test") (r "^0.7") (d #t) (k 2)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "typenum") (r "^1.9") (d #t) (k 0)))) (h "13jwiiv47sr35bi0329gc41wk4b43bywalii1m7c4kcqxzb4ars6")))

(define-public crate-libsecp256k1-0.2.2 (c (n "libsecp256k1") (v "0.2.2") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2.3") (d #t) (k 2)) (d (n "digest") (r "^0.6") (d #t) (k 0)) (d (n "hmac-drbg") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "secp256k1-test") (r "^0.7") (d #t) (k 2)) (d (n "sha2") (r "^0.6") (d #t) (k 0)) (d (n "typenum") (r "^1.9") (d #t) (k 0)))) (h "12j2qdgvfcs2jp6cry0ixasg1swxdfr0207a6ln7qmlmwijqv3k8")))

(define-public crate-libsecp256k1-0.3.0 (c (n "libsecp256k1") (v "0.3.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 2)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "hmac-drbg") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (k 0)) (d (n "rand-test") (r "^0.4") (d #t) (k 2) (p "rand")) (d (n "secp256k1-test") (r "^0.7") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "typenum") (r "^1.11") (d #t) (k 0)))) (h "15prvnnn7bc59dp44d4h0ppnb66r6m9v7mb5kcmvf63v7q8s9w6w") (y #t)))

(define-public crate-libsecp256k1-0.3.1 (c (n "libsecp256k1") (v "0.3.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 2)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "hmac-drbg") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (k 0)) (d (n "rand-test") (r "^0.4") (d #t) (k 2) (p "rand")) (d (n "secp256k1-test") (r "^0.7") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "subtle") (r "^2.2") (k 0)) (d (n "typenum") (r "^1.11") (d #t) (k 0)))) (h "1x981kia4vfckln4sa0jgblmb66q98bpnd42b645bk7hkfs0kk33") (f (quote (("std" "subtle/std" "rand/std") ("default" "std")))) (y #t)))

(define-public crate-libsecp256k1-0.3.2 (c (n "libsecp256k1") (v "0.3.2") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 2)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "hmac-drbg") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (k 0)) (d (n "rand-test") (r "^0.4") (d #t) (k 2) (p "rand")) (d (n "secp256k1-test") (r "^0.7") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "subtle") (r "^2.2") (k 0)) (d (n "typenum") (r "^1.11") (d #t) (k 0)))) (h "1ajic1ab0zham9s1284lghs6c8h25yb9qsbbac8fg1wldk0sgn9b") (f (quote (("std" "subtle/std" "rand/std" "sha2/std") ("default" "std"))))))

(define-public crate-libsecp256k1-0.3.3 (c (n "libsecp256k1") (v "0.3.3") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 2)) (d (n "crunchy") (r "^0.2") (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "hmac-drbg") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 0)) (d (n "rand-test") (r "^0.4") (d #t) (k 2) (p "rand")) (d (n "secp256k1-test") (r "^0.7") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "subtle") (r "^2.2") (k 0)) (d (n "typenum") (r "^1.11") (d #t) (k 0)))) (h "1hlwg4xl95ira0y4sw4al4jlkbvx1f50jgavyvxxl307p3smz25h") (f (quote (("std" "subtle/std" "rand/std" "sha2/std") ("default" "std"))))))

(define-public crate-libsecp256k1-0.3.4 (c (n "libsecp256k1") (v "0.3.4") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 2)) (d (n "crunchy") (r "^0.2") (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "hmac-drbg") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 0)) (d (n "rand-test") (r "^0.4") (d #t) (k 2) (p "rand")) (d (n "secp256k1-test") (r "^0.7") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "subtle") (r "^2.2") (k 0)) (d (n "typenum") (r "^1.11") (d #t) (k 0)))) (h "0l4swi43hag6mvgiig163ln938zdx8j97crj774x3ak2zn2dyvnz") (f (quote (("std" "subtle/std" "rand/std" "sha2/std") ("default" "std"))))))

(define-public crate-libsecp256k1-0.3.5 (c (n "libsecp256k1") (v "0.3.5") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 2)) (d (n "crunchy") (r "^0.2") (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2.1") (d #t) (k 2)) (d (n "hmac-drbg") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 0)) (d (n "rand-test") (r "^0.4") (d #t) (k 2) (p "rand")) (d (n "secp256k1-test") (r "^0.7") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (o #t) (k 0)) (d (n "subtle") (r "^2.2") (k 0)) (d (n "typenum") (r "^1.11") (o #t) (d #t) (k 0)))) (h "0qkrmqj55zginqyvhs6ciwy6lcylzm94f1x2dpf666j8134f5h8z") (f (quote (("std" "subtle/std" "rand/std" "sha2/std") ("hmac" "hmac-drbg" "sha2" "typenum") ("default" "std" "hmac"))))))

(define-public crate-libsecp256k1-0.5.0 (c (n "libsecp256k1") (v "0.5.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.12") (k 0)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 2)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2.1") (d #t) (k 2)) (d (n "hmac-drbg") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libsecp256k1-core") (r "^0.2.0") (k 0)) (d (n "libsecp256k1-gen-ecmult") (r "^0.2.0") (d #t) (k 1)) (d (n "libsecp256k1-gen-genmult") (r "^0.2.0") (d #t) (k 1)) (d (n "rand") (r "^0.7") (k 0)) (d (n "secp256k1-test") (r "^0.17") (f (quote ("rand-std" "recovery"))) (d #t) (k 2) (p "secp256k1")) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "typenum") (r "^1.12") (o #t) (d #t) (k 0)))) (h "1mzwq5bc6b7inwnwkk221b270ply4hl8ma1pjsm42fxkk8ikf4dx") (f (quote (("std" "libsecp256k1-core/std" "sha2/std" "rand/std" "serde/std" "base64/std") ("static-context") ("hmac" "hmac-drbg" "sha2" "typenum") ("default" "std" "hmac" "static-context"))))))

(define-public crate-libsecp256k1-0.6.0 (c (n "libsecp256k1") (v "0.6.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.12") (k 0)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 2)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2.1") (d #t) (k 2)) (d (n "hmac-drbg") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "libsecp256k1-core") (r "^0.2.2") (k 0)) (d (n "libsecp256k1-gen-ecmult") (r "^0.2.1") (d #t) (k 1)) (d (n "libsecp256k1-gen-genmult") (r "^0.2.1") (d #t) (k 1)) (d (n "rand") (r "^0.7") (k 0)) (d (n "secp256k1-test") (r "^0.17") (f (quote ("rand-std" "recovery"))) (d #t) (k 2) (p "secp256k1")) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "typenum") (r "^1.12") (o #t) (d #t) (k 0)))) (h "0wvwg7r0qgggmvvp2sf9hb7vhxkny8k3v35p3hisr8pd3yy21ln9") (f (quote (("std" "libsecp256k1-core/std" "sha2/std" "rand/std" "serde/std" "base64/std") ("static-context") ("lazy-static-context" "lazy_static" "std") ("hmac" "hmac-drbg" "sha2" "typenum") ("default" "std" "hmac" "static-context"))))))

(define-public crate-libsecp256k1-0.7.0 (c (n "libsecp256k1") (v "0.7.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (k 0)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 2)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "hmac-drbg") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "libsecp256k1-core") (r "^0.3.0") (k 0)) (d (n "libsecp256k1-gen-ecmult") (r "^0.3.0") (d #t) (k 1)) (d (n "libsecp256k1-gen-genmult") (r "^0.3.0") (d #t) (k 1)) (d (n "rand") (r "^0.8") (k 0)) (d (n "secp256k1-test") (r "^0.20.3") (f (quote ("rand-std" "recovery"))) (d #t) (k 2) (p "secp256k1")) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "typenum") (r "^1.12") (o #t) (d #t) (k 0)))) (h "0dvzx6xrk1rml5vifb3ynficw87ajhprn3iq54j280mbifn2lidh") (f (quote (("std" "libsecp256k1-core/std" "sha2/std" "rand/std" "serde/std" "base64/std") ("static-context") ("lazy-static-context" "static-context" "lazy_static" "std") ("hmac" "hmac-drbg" "sha2" "typenum") ("default" "std" "hmac" "static-context"))))))

(define-public crate-libsecp256k1-0.7.1 (c (n "libsecp256k1") (v "0.7.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 2)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "hmac-drbg") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "libsecp256k1-core") (r "^0.3.0") (k 0)) (d (n "libsecp256k1-gen-ecmult") (r "^0.3.0") (d #t) (k 1)) (d (n "libsecp256k1-gen-genmult") (r "^0.3.0") (d #t) (k 1)) (d (n "rand") (r "^0.8") (k 0)) (d (n "secp256k1-test") (r "^0.20.3") (f (quote ("rand-std" "recovery"))) (d #t) (k 2) (p "secp256k1")) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)) (d (n "typenum") (r "^1.12") (o #t) (d #t) (k 0)))) (h "18g2ap7ny8h6r59rrqn734clhypwj6kd7kkpp0rkpv9m3gzrxc4m") (f (quote (("std" "libsecp256k1-core/std" "sha2/std" "rand/std" "serde/std" "base64/std") ("static-context") ("lazy-static-context" "static-context" "lazy_static" "std") ("hmac" "hmac-drbg" "sha2" "typenum") ("default" "std" "hmac" "static-context"))))))

