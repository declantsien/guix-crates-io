(define-module (crates-io pw bo pwbox) #:use-module (crates-io))

(define-public crate-pwbox-0.1.0 (c (n "pwbox") (v "0.1.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "clear_on_drop") (r "= 0.2.3") (d #t) (k 0)) (d (n "constant_time_eq") (r "= 0.1.3") (d #t) (k 0)) (d (n "exonum_sodiumoxide") (r "= 0.0.20") (o #t) (d #t) (k 0)) (d (n "failure") (r "= 0.1.3") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (d #t) (k 2)) (d (n "hex-buffer-serde") (r "= 0.1.1") (d #t) (k 0)) (d (n "rand") (r "= 0.6.1") (d #t) (k 2)) (d (n "rand_core") (r "= 0.3.0") (d #t) (k 0)) (d (n "rust-crypto") (r "= 0.2.36") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.7") (d #t) (k 2)) (d (n "smallvec") (r "= 0.6.6") (d #t) (k 0)) (d (n "toml") (r "= 0.4.9") (d #t) (k 2)))) (h "1ip7mdczmrkk0nh2lx41v28s8xhg2bm0i6m6ql31rxmwaxrflkdm") (f (quote (("default" "exonum_sodiumoxide"))))))

(define-public crate-pwbox-0.1.1 (c (n "pwbox") (v "0.1.1") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "clear_on_drop") (r "= 0.2.3") (d #t) (k 0)) (d (n "constant_time_eq") (r "= 0.1.3") (d #t) (k 0)) (d (n "exonum_sodiumoxide") (r "= 0.0.20") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (d #t) (k 2)) (d (n "hex-buffer-serde") (r "= 0.1.1") (d #t) (k 0)) (d (n "rand") (r "= 0.6.1") (d #t) (k 2)) (d (n "rand_core") (r "= 0.3.0") (d #t) (k 0)) (d (n "rust-crypto") (r "= 0.2.36") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.7") (d #t) (k 2)) (d (n "smallvec") (r "= 0.6.6") (d #t) (k 0)) (d (n "toml") (r "= 0.4.9") (d #t) (k 2)))) (h "194lq4p7ilx15flcydccwrbf755z4my3vgq1njv1ff1s1yfw9szw") (f (quote (("default" "exonum_sodiumoxide"))))))

(define-public crate-pwbox-0.1.2 (c (n "pwbox") (v "0.1.2") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2.3") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (d #t) (k 0)) (d (n "exonum_sodiumoxide") (r "^0.0.20") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 2)) (d (n "hex-buffer-serde") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rand_core") (r "^0.4.0") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.7") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.6") (d #t) (k 0)) (d (n "toml") (r "^0.4.9") (d #t) (k 2)))) (h "1s8s6j13vnyyrg7b1girxr7zzwfxrqcgir022w1clxnn2zkpzqyf") (f (quote (("default" "exonum_sodiumoxide"))))))

(define-public crate-pwbox-0.1.3 (c (n "pwbox") (v "0.1.3") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2.3") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (d #t) (k 0)) (d (n "exonum_sodiumoxide") (r "^0.0.21") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 2)) (d (n "hex-buffer-serde") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rand_core") (r "^0.4.0") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.7") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.6") (d #t) (k 0)) (d (n "toml") (r "^0.4.9") (d #t) (k 2)))) (h "1d86rhgc1nxgpjlc33vb229fh7kirp7icxz25wipbwymn85g79jw") (f (quote (("default" "exonum_sodiumoxide"))))))

(define-public crate-pwbox-0.1.4 (c (n "pwbox") (v "0.1.4") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2.3") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (d #t) (k 0)) (d (n "exonum_sodiumoxide") (r "^0.0.22") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 2)) (d (n "hex-buffer-serde") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rand_core") (r "^0.4.0") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.9.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.7") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.6") (d #t) (k 0)) (d (n "toml") (r "^0.4.9") (d #t) (k 2)))) (h "0b6lwb4mdzdh06q6v5b120b3184h6i41x38rxs2h4ffqizbl3y3d") (f (quote (("default" "exonum_sodiumoxide"))))))

(define-public crate-pwbox-0.2.0 (c (n "pwbox") (v "0.2.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2.3") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (d #t) (k 0)) (d (n "exonum_sodiumoxide") (r ">= 0.0.21, <= 0.0.22") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 2)) (d (n "hex-buffer-serde") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.5.0") (d #t) (k 0)) (d (n "rpassword") (r "^3.0.2") (d #t) (k 2)) (d (n "rust-crypto") (r "^0.2.36") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.10.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.9") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.10") (d #t) (k 0)) (d (n "structopt") (r "^0.2.18") (d #t) (k 2)) (d (n "toml") (r "^0.5.1") (d #t) (k 2)))) (h "082kqdfjvmgyslwkbbnydkpr52k0bn19gwf7hxm08cdzpiyy4pll") (f (quote (("default" "exonum_sodiumoxide"))))))

(define-public crate-pwbox-0.2.1 (c (n "pwbox") (v "0.2.1") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2.3") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (d #t) (k 0)) (d (n "exonum_sodiumoxide") (r ">= 0.0.21, <= 0.0.23") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 2)) (d (n "hex-buffer-serde") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.5.0") (d #t) (k 0)) (d (n "rpassword") (r "^3.0.2") (d #t) (k 2)) (d (n "rust-crypto") (r "^0.2.36") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.10.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.9") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.10") (d #t) (k 0)) (d (n "structopt") (r "^0.2.18") (d #t) (k 2)) (d (n "toml") (r "^0.5.1") (d #t) (k 2)))) (h "0l5ypw1amgqav399yaz3zzcvff3lh10p4cc7cn91sr2k240irc4b") (f (quote (("default" "exonum_sodiumoxide"))))))

(define-public crate-pwbox-0.3.0 (c (n "pwbox") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.26") (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "chacha20poly1305") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2.3") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (d #t) (k 0)) (d (n "exonum_sodiumoxide") (r ">= 0.0.21, <= 0.0.23") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 2)) (d (n "hex-buffer-serde") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.5.0") (d #t) (k 0)) (d (n "rpassword") (r "^3.0.2") (d #t) (k 2)) (d (n "rust-crypto") (r "^0.2.36") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.2.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.10.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.9") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.10") (d #t) (k 0)) (d (n "structopt") (r "^0.2.18") (d #t) (k 2)) (d (n "toml") (r "^0.5.1") (d #t) (k 2)))) (h "0vipavpkyzhprb1rxnfq94qhbk069g9hnp9bcd3hda7053pd0wk5") (f (quote (("std" "anyhow/std") ("pure" "chacha20poly1305" "scrypt" "clear_on_drop/no_cc") ("default" "std" "exonum_sodiumoxide"))))))

(define-public crate-pwbox-0.4.0 (c (n "pwbox") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.26") (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "chacha20poly1305") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (d #t) (k 0)) (d (n "exonum_sodiumoxide") (r ">=0.0.21, <=0.0.23") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "hex-buffer-serde") (r "^0.2.2") (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.0") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.0") (d #t) (k 2)) (d (n "rust-crypto") (r "^0.2.36") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.5.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.0") (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)) (d (n "zeroize") (r "^1.2.0") (f (quote ("alloc"))) (k 0)))) (h "0gg96q22hkr8dyw6pa1kwqmxazzvwgxqvr1p0f34qnkgc4bfdq32") (f (quote (("std" "anyhow/std" "scrypt/std") ("pure" "chacha20poly1305" "scrypt") ("default" "std" "exonum_sodiumoxide"))))))

(define-public crate-pwbox-0.5.0 (c (n "pwbox") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "chacha20poly1305") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (d #t) (k 0)) (d (n "exonum_sodiumoxide") (r ">=0.0.21, <=0.0.24") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "hex-buffer-serde") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.0") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.0") (d #t) (k 2)) (d (n "rust-crypto") (r "^0.2.36") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.8") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "serde_yaml") (r "^0.8.14") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.0") (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "version-sync") (r "^0.9.2") (d #t) (k 2)) (d (n "zeroize") (r "^1.4") (f (quote ("alloc"))) (k 0)))) (h "0sicvydkyhjc2apavf759mlpzii1zcyrg7zrgkjdxbpfdzr63wq5") (f (quote (("std" "anyhow/std" "scrypt/std") ("pure" "chacha20poly1305" "scrypt") ("default" "std" "exonum_sodiumoxide"))))))

