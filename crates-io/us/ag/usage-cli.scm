(define-module (crates-io us ag usage-cli) #:use-module (crates-io))

(define-public crate-usage-cli-0.1.0 (c (n "usage-cli") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tera") (r "^1") (k 0)))) (h "1035s1lx6jb5vy3pqkk6v70a07sln5v2jdwr0ns0slb8nrjm723g")))

(define-public crate-usage-cli-0.1.1 (c (n "usage-cli") (v "0.1.1") (d (list (d (n "assert_cmd") (r "^2") (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "exec") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kdl") (r "^4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tera") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "usage-lib") (r "^0.1") (f (quote ("clap"))) (d #t) (k 0)) (d (n "xx") (r "^0.2") (d #t) (k 0)))) (h "1j99bb1rjz5z7nzk7j90d8ps3kmc0w9vbw0fp1m5vj27x8brq0ks")))

(define-public crate-usage-cli-0.1.3 (c (n "usage-cli") (v "0.1.3") (d (list (d (n "assert_cmd") (r "^2") (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "exec") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kdl") (r "^4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tera") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "usage-lib") (r "^0.1") (f (quote ("clap"))) (d #t) (k 0)) (d (n "xx") (r "^0.2") (d #t) (k 0)))) (h "0drajd33vdawcjqkbpwzv41jgfpfnl35lg8i5n0kpnlnnbgqwrk6")))

(define-public crate-usage-cli-0.1.4 (c (n "usage-cli") (v "0.1.4") (d (list (d (n "assert_cmd") (r "^2") (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "exec") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kdl") (r "^4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tera") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "usage-lib") (r "^0.1") (f (quote ("clap"))) (d #t) (k 0)) (d (n "xx") (r "^0.2") (d #t) (k 0)))) (h "1d9md8ljzlm6j1fgjcvgkhszqqx6fsi1waslinh3h9k169pkfj8g")))

(define-public crate-usage-cli-0.1.5-beta.1 (c (n "usage-cli") (v "0.1.5-beta.1") (d (list (d (n "assert_cmd") (r "^2") (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "exec") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kdl") (r "^4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tera") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "usage-lib") (r "^0.1") (f (quote ("clap"))) (d #t) (k 0)) (d (n "xx") (r "^0.2") (d #t) (k 0)))) (h "1jxv7gs748h60ns87mzbfx0w0vanw37kkbk6gwnvaqbd48r6vacz")))

(define-public crate-usage-cli-0.1.5-beta.2 (c (n "usage-cli") (v "0.1.5-beta.2") (d (list (d (n "assert_cmd") (r "^2") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "exec") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kdl") (r "^4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tera") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "usage-lib") (r "^0.1.5-beta.2") (f (quote ("clap"))) (d #t) (k 0)) (d (n "xx") (r "^0.2") (d #t) (k 0)))) (h "1p0g9f6q7n8z07ir1pz85gglbg7j12saibxxfl9xr9abnvyhlhmv")))

(define-public crate-usage-cli-0.1.5 (c (n "usage-cli") (v "0.1.5") (d (list (d (n "assert_cmd") (r "^2") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "exec") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kdl") (r "^4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tera") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "usage-lib") (r "^0.1.5") (f (quote ("clap"))) (d #t) (k 0)) (d (n "xx") (r "^0.2") (d #t) (k 0)))) (h "0kfy7dpzk23bcrzq2wihp2p891s730js1w5wrk39nmi89pndhg36")))

(define-public crate-usage-cli-0.1.6 (c (n "usage-cli") (v "0.1.6") (d (list (d (n "assert_cmd") (r "^2") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "exec") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kdl") (r "^4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tera") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "usage-lib") (r "^0.1.6") (f (quote ("clap"))) (d #t) (k 0)) (d (n "xx") (r "^0.2") (d #t) (k 0)))) (h "0wbxpizzx98kkhgl3ww9d924xjpxfhm76679zq9hkaqy6az0fq18")))

(define-public crate-usage-cli-0.1.7 (c (n "usage-cli") (v "0.1.7") (d (list (d (n "assert_cmd") (r "^2") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "exec") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kdl") (r "^4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tera") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "usage-lib") (r "^0.1.7") (f (quote ("clap"))) (d #t) (k 0)) (d (n "xx") (r "^0.2") (d #t) (k 0)))) (h "0nnygzd48ayxq3a4pbbifprc3rw5a5cy5hlxn765im3dcljrrl4h")))

(define-public crate-usage-cli-0.1.8 (c (n "usage-cli") (v "0.1.8") (d (list (d (n "assert_cmd") (r "^2") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "exec") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kdl") (r "^4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tera") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "usage-lib") (r "^0.1.8") (f (quote ("clap"))) (d #t) (k 0)) (d (n "xx") (r "^0.2") (d #t) (k 0)))) (h "0cyw1lbfal87l8rwmck2n6gp6dy982gxcf5nqdi0hm9pd731dqgw")))

(define-public crate-usage-cli-0.1.9 (c (n "usage-cli") (v "0.1.9") (d (list (d (n "assert_cmd") (r "^2") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "exec") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kdl") (r "^4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tera") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "usage-lib") (r "^0.1.9") (f (quote ("clap"))) (d #t) (k 0)) (d (n "xx") (r "^0.2") (d #t) (k 0)))) (h "1i54707x5mnrqy92mw38ky8ds43xn541dcb944cfmqmxj6g3915k")))

(define-public crate-usage-cli-0.1.12 (c (n "usage-cli") (v "0.1.12") (d (list (d (n "assert_cmd") (r "^2") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "exec") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kdl") (r "^4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tera") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "usage-lib") (r "^0.1.12") (f (quote ("clap" "clap"))) (d #t) (k 0)) (d (n "xx") (r "^0.2") (d #t) (k 0)))) (h "038kigfh2ngd6qxvbgxw9fkz9yfpmmqdzmhfq3qrif07lgx4qxjn")))

(define-public crate-usage-cli-0.1.13 (c (n "usage-cli") (v "0.1.13") (d (list (d (n "assert_cmd") (r "^2") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "exec") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kdl") (r "^4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tera") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "usage-lib") (r "^0.1.13") (f (quote ("clap" "clap"))) (d #t) (k 0)) (d (n "xx") (r "^0.2") (d #t) (k 0)))) (h "0rwh4ajag3ckk3n1zkrazz5ijnl09q9abkmpid117hjdav03x4dm")))

(define-public crate-usage-cli-0.1.14 (c (n "usage-cli") (v "0.1.14") (d (list (d (n "assert_cmd") (r "^2") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "exec") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kdl") (r "^4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tera") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "usage-lib") (r "^0.1.14") (f (quote ("clap" "clap"))) (d #t) (k 0)) (d (n "xx") (r "^0.2") (d #t) (k 0)))) (h "0i3dl0xsq206jxl3niq155niyxpc7na7nv4kr62zy47sgi26vvdy")))

(define-public crate-usage-cli-0.1.15 (c (n "usage-cli") (v "0.1.15") (d (list (d (n "assert_cmd") (r "^2") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "exec") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kdl") (r "^4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tera") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "usage-lib") (r "^0.1.15") (f (quote ("clap" "clap"))) (d #t) (k 0)) (d (n "xx") (r "^0.2") (d #t) (k 0)))) (h "1s77d4qczmp1krplhq3jp8wax3bf4zrvcii85szg2c041sjsd1h5")))

(define-public crate-usage-cli-0.1.16 (c (n "usage-cli") (v "0.1.16") (d (list (d (n "assert_cmd") (r "^2") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "exec") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kdl") (r "^4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tera") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "usage-lib") (r "^0.1.16") (f (quote ("clap" "clap"))) (d #t) (k 0)) (d (n "xx") (r "^0.2") (d #t) (k 0)))) (h "0aiv8949qvdd9qj1v0vkkaw61ja6qgkvxxfgj6ac4y36anryr1br")))

(define-public crate-usage-cli-0.1.17 (c (n "usage-cli") (v "0.1.17") (d (list (d (n "assert_cmd") (r "^2") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "exec") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kdl") (r "^4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tera") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "usage-lib") (r "^0.1.17") (f (quote ("clap" "clap"))) (d #t) (k 0)) (d (n "xx") (r "^0.2") (d #t) (k 0)))) (h "00x3hahdkwsmg06finwhzsggyrqvpzf1ij0hf0jibl7290lb83i9")))

(define-public crate-usage-cli-0.1.18 (c (n "usage-cli") (v "0.1.18") (d (list (d (n "assert_cmd") (r "^2") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "exec") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kdl") (r "^4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tera") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "usage-lib") (r "^0.1.18") (f (quote ("clap" "clap"))) (d #t) (k 0)) (d (n "xx") (r "^0.2") (d #t) (k 0)))) (h "15k26nnnsd99g1mjgwhj8yi8xvfsxr0q5l0irfaqk060gyqq93r2")))

(define-public crate-usage-cli-0.2.0 (c (n "usage-cli") (v "0.2.0") (d (list (d (n "assert_cmd") (r "^2") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "exec") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kdl") (r "^4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tera") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "usage-lib") (r "^0.2.0") (f (quote ("clap" "clap"))) (d #t) (k 0)) (d (n "xx") (r "^0.5") (d #t) (k 0)))) (h "0cngwwm01a9faqg08bk44m8fhc09gbsbz5qczvgvpak794yff5r9")))

(define-public crate-usage-cli-0.2.1 (c (n "usage-cli") (v "0.2.1") (d (list (d (n "assert_cmd") (r "^2") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "exec") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.13") (d #t) (k 0)) (d (n "kdl") (r "^4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tera") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "usage-lib") (r "^0.2.1") (f (quote ("clap" "clap"))) (d #t) (k 0)) (d (n "xx") (r "^1") (d #t) (k 0)))) (h "16z6xs0s4wi77fv10ibw3vq58n6k38qfrgk5imagibz02hrdll7y")))

(define-public crate-usage-cli-0.3.0 (c (n "usage-cli") (v "0.3.0") (d (list (d (n "assert_cmd") (r "^2") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "clap") (r "^4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "exec") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.13") (d #t) (k 0)) (d (n "kdl") (r "^4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "predicates") (r "^3") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tera") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "usage-lib") (r "^0.3.0") (f (quote ("clap" "clap"))) (d #t) (k 0)) (d (n "xx") (r "^1") (d #t) (k 0)))) (h "1xp9b55bv1xbk50rxk78caa9mnkmzn3xvnyr5rcvhsh3f6q4pkl4")))

