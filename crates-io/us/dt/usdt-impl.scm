(define-module (crates-io us dt usdt-impl) #:use-module (crates-io))

(define-public crate-usdt-impl-0.1.5 (c (n "usdt-impl") (v "0.1.5") (d (list (d (n "byteorder") (r "^1.4.2") (d #t) (k 0)) (d (n "dof") (r "^0.1.4") (d #t) (k 0)) (d (n "dtrace-parser") (r "^0.1.8") (d #t) (k 0)) (d (n "goblin") (r "^0.3.4") (f (quote ("elf32" "elf64"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.88") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.60") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "0knhlhpjf93h5fcqhwpg54y2and3p63hzbdzg9d3wp4ckk7jm6g6") (f (quote (("asm" "syn"))))))

(define-public crate-usdt-impl-0.1.7 (c (n "usdt-impl") (v "0.1.7") (d (list (d (n "byteorder") (r "^1.4.2") (d #t) (k 0)) (d (n "dof") (r "^0.1.5") (d #t) (k 0)) (d (n "dtrace-parser") (r "^0.1.9") (d #t) (k 0)) (d (n "goblin") (r "^0.3.4") (f (quote ("elf32" "elf64"))) (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.88") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.60") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "080by5wr4qc412gaxivccj2f0ycszsyxx3m69x9xzyf9hg13qpzs") (f (quote (("no-linker" "asm") ("des" "goblin" "dof/des") ("asm"))))))

(define-public crate-usdt-impl-0.1.8 (c (n "usdt-impl") (v "0.1.8") (d (list (d (n "byteorder") (r "^1.4.2") (d #t) (k 0)) (d (n "dof") (r "^0.1.5") (d #t) (k 0)) (d (n "dtrace-parser") (r "^0.1.9") (d #t) (k 0)) (d (n "goblin") (r "^0.3.4") (f (quote ("elf32" "elf64"))) (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.88") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.60") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "157jhkxgz9r01yb9yggip85g08kljrsp5f4zlpcaxzwd1ab4798q") (f (quote (("no-linker" "asm") ("des" "goblin" "dof/des") ("asm"))))))

(define-public crate-usdt-impl-0.1.9 (c (n "usdt-impl") (v "0.1.9") (d (list (d (n "byteorder") (r "^1.4.2") (d #t) (k 0)) (d (n "dof") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "dtrace-parser") (r "^0.1.10") (d #t) (k 0)) (d (n "goblin") (r "^0.3.4") (f (quote ("elf32" "elf64"))) (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.88") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.60") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "1i1yhwhp5lihrrhcyj3d1arsafb2l59a9qnf6w73y9zrrxs4x49x") (f (quote (("no-linker" "asm" "dof") ("des" "goblin" "dof/des") ("asm")))) (y #t)))

(define-public crate-usdt-impl-0.1.10 (c (n "usdt-impl") (v "0.1.10") (d (list (d (n "byteorder") (r "^1.4.2") (d #t) (k 0)) (d (n "dof") (r "^0.1.5") (d #t) (t "cfg(not(target_os = \"macos\"))") (k 0)) (d (n "dof") (r "^0.1.5") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dtrace-parser") (r "^0.1.10") (d #t) (k 0)) (d (n "goblin") (r "^0.3.4") (f (quote ("elf32" "elf64"))) (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.88") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.60") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "1s7p0jw76z4d7l15zxww7vma3krwmqg8wdrk2b5b9s6s60la95dr") (f (quote (("no-linker" "asm" "dof") ("des" "goblin" "dof/des") ("asm"))))))

(define-public crate-usdt-impl-0.1.11 (c (n "usdt-impl") (v "0.1.11") (d (list (d (n "byteorder") (r "^1.4.2") (d #t) (k 0)) (d (n "dof") (r "^0.1.5") (t "cfg(not(target_os = \"macos\"))") (k 0)) (d (n "dof") (r "^0.1.5") (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dtrace-parser") (r "^0.1.11") (d #t) (k 0)) (d (n "goblin") (r "^0.3.4") (f (quote ("elf32" "elf64"))) (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.88") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.60") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "1ay82wnaqcwfzymnsaw9mzq3rybg35mwq6ayn83qh3d603makzpk") (f (quote (("des" "goblin" "dof" "dof/des") ("asm"))))))

(define-public crate-usdt-impl-0.1.12 (c (n "usdt-impl") (v "0.1.12") (d (list (d (n "byteorder") (r "^1.4.2") (d #t) (k 0)) (d (n "dof") (r "^0.1.5") (t "cfg(not(target_os = \"macos\"))") (k 0)) (d (n "dof") (r "^0.1.5") (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dtrace-parser") (r "^0.1.11") (d #t) (k 0)) (d (n "goblin") (r "^0.3.4") (f (quote ("elf32" "elf64"))) (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.88") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.60") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "0qkhcpqwfdkwbf1w73s8af0wyrfm9zr7hlwn4iq8s6nridwcr9zx") (f (quote (("des" "goblin" "dof" "dof/des") ("default" "asm") ("asm"))))))

(define-public crate-usdt-impl-0.1.13 (c (n "usdt-impl") (v "0.1.13") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "dof") (r "^0.1.5") (t "cfg(not(target_os = \"macos\"))") (k 0)) (d (n "dof") (r "^0.1.5") (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dtrace-parser") (r "^0.1.11") (d #t) (k 0)) (d (n "goblin") (r "^0.4") (f (quote ("elf32" "elf64"))) (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thread-id") (r "^4") (d #t) (k 0)))) (h "1w7iss7vaa1yi9admqmfjjdfnqg0n48rmhr86frya40s0dfkwai1") (f (quote (("des" "goblin" "dof" "dof/des") ("default" "asm") ("asm"))))))

(define-public crate-usdt-impl-0.1.14 (c (n "usdt-impl") (v "0.1.14") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "dof") (r "^0.1.5") (t "cfg(not(target_os = \"macos\"))") (k 0)) (d (n "dof") (r "^0.1.5") (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dtrace-parser") (r "^0.1.12") (d #t) (k 0)) (d (n "goblin") (r "^0.4") (f (quote ("elf32" "elf64"))) (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thread-id") (r "^4") (d #t) (k 0)))) (h "0skzan2ff17f1cnmcddsnm3nk1xxd2nyb8sfq3g3h829xvg8j6g7") (f (quote (("des" "goblin" "dof" "dof/des") ("default" "asm") ("asm"))))))

(define-public crate-usdt-impl-0.2.0 (c (n "usdt-impl") (v "0.2.0") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "dof") (r "^0.1.5") (t "cfg(not(target_os = \"macos\"))") (k 0)) (d (n "dof") (r "^0.1.5") (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dtrace-parser") (r "^0.1.12") (d #t) (k 0)) (d (n "goblin") (r "^0.4") (f (quote ("elf32" "elf64"))) (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thread-id") (r "^4") (d #t) (k 0)))) (h "023mk2wcy0b7sqhz2x1k8vfvliidrypnbd3smmvjkfydd9yirybh") (f (quote (("des" "goblin" "dof" "dof/des") ("default" "asm") ("asm"))))))

(define-public crate-usdt-impl-0.2.1 (c (n "usdt-impl") (v "0.2.1") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "dof") (r "^0.1.5") (t "cfg(not(target_os = \"macos\"))") (k 0)) (d (n "dof") (r "^0.1.5") (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dtrace-parser") (r "^0.1.12") (d #t) (k 0)) (d (n "goblin") (r "^0.4") (f (quote ("elf32" "elf64"))) (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thread-id") (r "^4") (d #t) (k 0)))) (h "054h40hj163qfnq7vva318ck36ijljgcaqjgwlcv63gq2gqmiqfn") (f (quote (("des" "goblin" "dof" "dof/des") ("default" "asm") ("asm"))))))

(define-public crate-usdt-impl-0.3.0 (c (n "usdt-impl") (v "0.3.0") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "dof") (r "^0.1.5") (t "cfg(not(target_os = \"macos\"))") (k 0)) (d (n "dof") (r "^0.1.5") (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dtrace-parser") (r "^0.1.12") (d #t) (k 0)) (d (n "goblin") (r "^0.4") (f (quote ("elf32" "elf64"))) (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thread-id") (r "^4") (d #t) (k 0)))) (h "188jzz5c5ci8cdk628hcjxc5j9n9fj1na8bsbzsz6dgjl254k8rv") (f (quote (("des" "goblin" "dof" "dof/des") ("default" "asm") ("asm"))))))

(define-public crate-usdt-impl-0.3.1 (c (n "usdt-impl") (v "0.3.1") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "dof") (r "^0.1.5") (t "cfg(not(target_os = \"macos\"))") (k 0)) (d (n "dof") (r "^0.1.5") (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dtrace-parser") (r "^0.1.12") (d #t) (k 0)) (d (n "goblin") (r "^0.4") (f (quote ("elf32" "elf64"))) (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thread-id") (r "^4") (d #t) (k 0)))) (h "1jwhgwdvvwyf3d3ik7i10ycaqb9w3sflw9idfny2wigim48r7njd") (f (quote (("des" "goblin" "dof" "dof/des") ("default" "asm") ("asm"))))))

(define-public crate-usdt-impl-0.3.2 (c (n "usdt-impl") (v "0.3.2") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "dof") (r "^0.1.5") (t "cfg(not(target_os = \"macos\"))") (k 0)) (d (n "dof") (r "^0.1.5") (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dtrace-parser") (r "^0.1.12") (d #t) (k 0)) (d (n "goblin") (r "^0.4") (f (quote ("elf32" "elf64"))) (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thread-id") (r "^4") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0scx9q6p4hzksjcqzd87x2wcmdky38p61m72jc6skkiz32a6651w") (f (quote (("des" "goblin" "dof" "dof/des") ("default" "asm") ("asm"))))))

(define-public crate-usdt-impl-0.3.3 (c (n "usdt-impl") (v "0.3.3") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "dof") (r "^0.1") (t "cfg(not(target_os = \"macos\"))") (k 0)) (d (n "dof") (r "^0.1") (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dtrace-parser") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thread-id") (r "^4") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1wgfwqri2za2i24gj76ykfxskbn64g1ls3w0kqw19r9kqxgfrn1s") (f (quote (("des" "dof" "dof/des") ("default" "asm") ("asm")))) (y #t)))

(define-public crate-usdt-impl-0.3.4 (c (n "usdt-impl") (v "0.3.4") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "dof") (r "=0.1.5") (t "cfg(not(target_os = \"macos\"))") (k 0)) (d (n "dof") (r "=0.1.5") (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dtrace-parser") (r "=0.1.14") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thread-id") (r "^4") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1pnibzzw1jvfszmm2vp5n2k1dcm5a4ji9fzibijpv6dpn5cv9j7p") (f (quote (("des" "dof" "dof/des") ("default" "asm") ("asm"))))))

(define-public crate-usdt-impl-0.3.5 (c (n "usdt-impl") (v "0.3.5") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "dof") (r "=0.1.5") (t "cfg(not(target_os = \"macos\"))") (k 0)) (d (n "dof") (r "=0.1.5") (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dtrace-parser") (r "=0.1.14") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thread-id") (r "^4") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1cac8wc2vl3f1c0zhyl3514lb22gvj5bjc3vqinldbisnfh4qfzm") (f (quote (("des" "dof" "dof/des") ("default" "asm") ("asm"))))))

(define-public crate-usdt-impl-0.4.0 (c (n "usdt-impl") (v "0.4.0") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "dof") (r "=0.2.0") (t "cfg(not(target_os = \"macos\"))") (k 0)) (d (n "dof") (r "=0.2.0") (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dtrace-parser") (r "=0.1.14") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thread-id") (r "^4") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1r818mnca5ka2b2ndi4vp1xnxb5l26l4i1xs7acznh199md7q1d4") (f (quote (("des" "dof" "dof/des") ("default" "asm") ("asm")))) (y #t)))

(define-public crate-usdt-impl-0.4.1 (c (n "usdt-impl") (v "0.4.1") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "dof") (r "=0.2.0") (t "cfg(not(target_os = \"macos\"))") (k 0)) (d (n "dof") (r "=0.2.0") (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dtrace-parser") (r "=0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thread-id") (r "^4") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "12v695g7b5rf1gxcwvnclwk1gg5sriqyv9xz8am8g9m1aawrqqgx") (f (quote (("des" "dof" "dof/des") ("default" "asm") ("asm"))))))

(define-public crate-usdt-impl-0.5.0 (c (n "usdt-impl") (v "0.5.0") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "dof") (r "=0.3.0") (t "cfg(not(target_os = \"macos\"))") (k 0)) (d (n "dof") (r "=0.3.0") (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dtrace-parser") (r "=0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thread-id") (r "^4") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1cgpymp6qfd21wgv27kl7y83fpk6z31z9z6ry9xbiss2b57829gr") (f (quote (("des" "dof" "dof/des") ("default" "asm") ("asm"))))))

