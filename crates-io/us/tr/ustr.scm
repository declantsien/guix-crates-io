(define-module (crates-io us tr ustr) #:use-module (crates-io))

(define-public crate-ustr-0.1.0 (c (n "ustr") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.6.6") (d #t) (k 2)) (d (n "fasthash") (r "^0.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 2)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "string-interner") (r "^0.7.1") (d #t) (k 2)) (d (n "string_cache") (r "^0.7.3") (d #t) (k 2)))) (h "1cxnimxrwpl99sfij72wjyc684d9h2rpclacspim0vib7k2rckrs")))

(define-public crate-ustr-0.2.0 (c (n "ustr") (v "0.2.0") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.6.6") (d #t) (k 2)) (d (n "fasthash") (r "^0.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 2)) (d (n "serde") (r "^1.0.102") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "string-interner") (r "^0.7.1") (d #t) (k 2)) (d (n "string_cache") (r "^0.7.3") (d #t) (k 2)))) (h "1s640p2jw0c0bmfj3p3vrjfbwsiwdf93ijaa9j0n2c3s3sm7n7pv") (f (quote (("serialization" "serde"))))))

(define-public crate-ustr-0.2.1 (c (n "ustr") (v "0.2.1") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.6.6") (d #t) (k 2)) (d (n "fasthash") (r "^0.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "string-interner") (r "^0.7.1") (d #t) (k 2)) (d (n "string_cache") (r "^0.7.3") (d #t) (k 2)))) (h "14dp5zi1wwzd73ag839gll807dc5xzb60dlcdz27zm5j0ap5jva7") (f (quote (("serialization" "serde"))))))

(define-public crate-ustr-0.3.0 (c (n "ustr") (v "0.3.0") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.6.6") (d #t) (k 2)) (d (n "fasthash") (r "^0.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "spin") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "string-interner") (r "^0.7.1") (d #t) (k 2)) (d (n "string_cache") (r "^0.7.3") (d #t) (k 2)))) (h "098bwhn1bf9n30pfnnii90hvfdgsr4kn8rkh7vzzcymf52j42d3q") (f (quote (("spinlock" "spin") ("serialization" "serde") ("parkinglot" "parking_lot") ("default" "parkinglot"))))))

(define-public crate-ustr-0.3.1 (c (n "ustr") (v "0.3.1") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.6.6") (d #t) (k 2)) (d (n "fasthash") (r "^0.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "spin") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "string-interner") (r "^0.7.1") (d #t) (k 2)) (d (n "string_cache") (r "^0.7.3") (d #t) (k 2)))) (h "19w0ciy1yz92dhjj3ncx55q0nyb097czxch15xd284b51alqk1dg") (f (quote (("spinlock" "spin") ("serialization" "serde") ("parkinglot" "parking_lot") ("default" "parkinglot"))))))

(define-public crate-ustr-0.4.0 (c (n "ustr") (v "0.4.0") (d (list (d (n "ahash") (r "^0.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.6.6") (d #t) (k 2)) (d (n "fasthash") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "spin") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "string-interner") (r "^0.7.1") (d #t) (k 2)) (d (n "string_cache") (r "^0.7.3") (d #t) (k 2)))) (h "1wzp826lkvpxiwak237mhy3f08awnsfsid9r46bkapr1nsphwgsy") (f (quote (("spinlock" "spin") ("serialization" "serde") ("parkinglot" "parking_lot") ("hashcity" "fasthash") ("default" "parkinglot"))))))

(define-public crate-ustr-0.5.0 (c (n "ustr") (v "0.5.0") (d (list (d (n "ahash") (r "^0.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.6.6") (d #t) (k 2)) (d (n "fasthash") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "spin") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "string-interner") (r "^0.7.1") (d #t) (k 2)) (d (n "string_cache") (r "^0.7.3") (d #t) (k 2)))) (h "0dcdx90pivqi3f37gh7an44qh9m7m8ky4i31pj71frj9mvjxj21l") (f (quote (("spinlock" "spin") ("serialization" "serde") ("parkinglot" "parking_lot") ("hashcity" "fasthash") ("default" "parkinglot"))))))

(define-public crate-ustr-0.6.0 (c (n "ustr") (v "0.6.0") (d (list (d (n "ahash") (r "^0.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.6.6") (d #t) (k 2)) (d (n "fasthash") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "spin") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "string-interner") (r "^0.7.1") (d #t) (k 2)) (d (n "string_cache") (r "^0.7.3") (d #t) (k 2)))) (h "194mswr2b37w0r3nn5i2ckgc27m1wf1hwmfdqpv03bphd1p4sdyh") (f (quote (("spinlock" "spin") ("serialization" "serde") ("parkinglot" "parking_lot") ("hashcity" "fasthash") ("default" "parkinglot"))))))

(define-public crate-ustr-0.7.0 (c (n "ustr") (v "0.7.0") (d (list (d (n "ahash") (r "^0.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.6.6") (d #t) (k 2)) (d (n "fasthash") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "spin") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "string-interner") (r "^0.7.1") (d #t) (k 2)) (d (n "string_cache") (r "^0.7.3") (d #t) (k 2)))) (h "0lvw2jdaahqw2wck7ghfri0rxd2ckvp589wzmf9m7km33680jj05") (f (quote (("spinlock" "spin") ("serialization" "serde") ("parkinglot" "parking_lot") ("hashcity" "fasthash") ("default" "parkinglot"))))))

(define-public crate-ustr-0.8.0 (c (n "ustr") (v "0.8.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.1") (d #t) (k 2)) (d (n "fasthash") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "spin") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "string-interner") (r "^0.12.2") (d #t) (k 2)) (d (n "string_cache") (r "^0.8.1") (d #t) (k 2)))) (h "147726hdsjap70an2zcp3kpb4wfksh067gn5krwji4giv8ymv5zv") (f (quote (("spinlock" "spin") ("serialization" "serde") ("parkinglot" "parking_lot") ("hashcity" "fasthash") ("default" "parkinglot"))))))

(define-public crate-ustr-0.8.1 (c (n "ustr") (v "0.8.1") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.1") (d #t) (k 2)) (d (n "fasthash") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "spin") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "string-interner") (r "^0.12.2") (d #t) (k 2)) (d (n "string_cache") (r "^0.8.1") (d #t) (k 2)))) (h "1ncxzb9sw6h0pc36ydkbjigzin7qm3k3cpgi0jfrn8iyjzc3kmfb") (f (quote (("spinlock" "spin") ("serialization" "serde") ("parkinglot" "parking_lot") ("hashcity" "fasthash") ("default" "parkinglot"))))))

(define-public crate-ustr-0.9.0 (c (n "ustr") (v "0.9.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.1") (d #t) (k 2)) (d (n "fasthash") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "spin") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "string-interner") (r "^0.12.2") (d #t) (k 2)) (d (n "string_cache") (r "^0.8.1") (d #t) (k 2)))) (h "177sfj2gcxcxbyw756k4r7dbpsnkjrb62nrqvibdx019kw4kc51p") (f (quote (("spinlock" "spin") ("serialization" "serde") ("parkinglot" "parking_lot") ("hashcity" "fasthash") ("default" "parkinglot"))))))

(define-public crate-ustr-0.10.0 (c (n "ustr") (v "0.10.0") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "string-interner") (r "^0.13.0") (d #t) (k 2)) (d (n "string_cache") (r "^0.8.1") (d #t) (k 2)))) (h "11zbxa2b5aqf6p4ni5zlja9b8v37qxdsff427c20nj9k34yb2l5h")))

(define-public crate-ustr-1.0.0 (c (n "ustr") (v "1.0.0") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "string-interner") (r "^0.13.0") (d #t) (k 2)) (d (n "string_cache") (r "^0.8.1") (d #t) (k 2)))) (h "1l53hl0f7ylbmy1bqdf3a339q0kiw85v4ns2aqinv8x4g4i4m43y")))

