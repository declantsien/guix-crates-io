(define-module (crates-io ux -d ux-dx) #:use-module (crates-io))

(define-public crate-ux-dx-0.1.0 (c (n "ux-dx") (v "0.1.0") (d (list (d (n "euclid") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "intmap") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmath") (r "^0.2.1") (d #t) (k 2)) (d (n "lyon_geom") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "lyon_path") (r "^0.17") (o #t) (d #t) (k 0)))) (h "1sbh5lnlm34cqwsp4cahkfc1j5pn81p2cz5kcdnfa2pm5lja5xc4") (f (quote (("geom" "euclid" "lyon_geom" "lyon_path") ("color_quantization") ("color_from_css") ("canvas" "euclid" "lyon_geom" "lyon_path")))) (y #t)))

(define-public crate-ux-dx-0.1.1 (c (n "ux-dx") (v "0.1.1") (d (list (d (n "bitflags") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ffi") (r "^0.1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cogl-sys-rs")) (d (n "glib") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glib-sys") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gobject-sys") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0csmh8my1c0my28cpgml4k0yhz3z9sjl421lpvm88a5zmxh363g6") (f (quote (("dox" "ffi/dox" "glib/dox" "glib-sys/dox" "gobject-sys/dox"))))))

(define-public crate-ux-dx-0.2.0 (c (n "ux-dx") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cgmath") (r "^0.18") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "ddsfile") (r "^0.4") (d #t) (k 0)) (d (n "egl") (r "^4.1") (f (quote ("dynamic"))) (d #t) (k 0) (p "khronos-egl")) (d (n "fbxcel-dom") (r "^0") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "fontdue") (r "^0.5") (d #t) (k 0)) (d (n "fs_extra") (r "^1.2") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "generational-arena") (r "^0.2") (d #t) (k 0)) (d (n "genmesh") (r "^0.6") (d #t) (k 2)) (d (n "gilrs") (r "^0.8") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "glyph_brush") (r "^0.7") (d #t) (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "image") (r "^0.23") (f (quote ("jpeg" "png"))) (k 2)) (d (n "imgref") (r "^1.6") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("now"))) (d #t) (k 2)) (d (n "intmap") (r "^0.7") (d #t) (k 0)) (d (n "khronos") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "owned_ttf_parser") (r "^0.12") (d #t) (k 0)) (d (n "png") (r "^0.16") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "rayon") (r "^1.4") (d #t) (k 1)) (d (n "resource") (r "^0.5") (d #t) (k 2)) (d (n "rgb") (r "^0.8") (d #t) (k 0)) (d (n "rustybuzz") (r "^0.4") (d #t) (k 0)) (d (n "shaderc") (r "^0.7") (d #t) (k 0)) (d (n "shaderc") (r "^0.7") (d #t) (k 1)) (d (n "spin_sleep") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "svg") (r "^0.10") (d #t) (k 2)) (d (n "twox-hash") (r "^1.6") (d #t) (k 0)) (d (n "unicode-bidi") (r "^0.3") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)) (d (n "usvg") (r "^0.15") (k 2)) (d (n "ux-primitives") (r "^0.2") (d #t) (k 0)) (d (n "warmy") (r "^0.13") (d #t) (k 0)) (d (n "wgpu-types") (r "^0.9") (d #t) (k 0)) (d (n "winit") (r "^0.25") (d #t) (k 0)) (d (n "winit") (r "^0.25") (k 2)) (d (n "xmlwriter") (r "^0.1") (d #t) (k 2)))) (h "049d4q08d20aly05nhkr3yh6n4b5jkngllpwsd347m6hkyxcvk09") (f (quote (("image-loading") ("dox") ("default" "image-loading"))))))

(define-public crate-ux-dx-0.2.1 (c (n "ux-dx") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cgmath") (r "^0.18") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "ddsfile") (r "^0.4") (d #t) (k 0)) (d (n "directories") (r "^4.0") (d #t) (k 0)) (d (n "egl") (r "^4.1") (f (quote ("dynamic"))) (d #t) (k 0) (p "khronos-egl")) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "fontdue") (r "^0.5") (d #t) (k 0)) (d (n "fs_extra") (r "^1.2") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "generational-arena") (r "^0.2") (d #t) (k 0)) (d (n "genmesh") (r "^0.6") (d #t) (k 2)) (d (n "gilrs") (r "^0.8") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "glyph_brush") (r "^0.7") (d #t) (k 0)) (d (n "iced_graphics") (r "^0.2") (f (quote ("font-fallback" "font-icons" "opengl"))) (d #t) (k 0)) (d (n "iced_native") (r "^0.4.0") (d #t) (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "image") (r "^0.23") (f (quote ("jpeg" "png"))) (k 2)) (d (n "imgref") (r "^1.6") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("now"))) (d #t) (k 2)) (d (n "intmap") (r "^0.7") (d #t) (k 0)) (d (n "khronos") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (k 0)) (d (n "nvg") (r "^0.5.11") (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "owned_ttf_parser") (r "^0.12") (d #t) (k 0)) (d (n "png") (r "^0.17") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "rayon") (r "^1.4") (d #t) (k 1)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "resource") (r "^0.5") (d #t) (k 2)) (d (n "rgb") (r "^0.8") (d #t) (k 0)) (d (n "ruex") (r "^0.1") (d #t) (k 0)) (d (n "rustybuzz") (r "^0.4") (d #t) (k 0)) (d (n "shaderc") (r "^0.7") (d #t) (k 0)) (d (n "shaderc") (r "^0.7") (d #t) (k 1)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "spin_sleep") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "svg") (r "^0.10") (d #t) (k 2)) (d (n "tokio") (r "^1.10.0") (d #t) (k 0)) (d (n "twox-hash") (r "^1.6") (d #t) (k 0)) (d (n "unicode-bidi") (r "^0.3") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)) (d (n "usvg") (r "^0.15") (k 2)) (d (n "ux-primitives") (r "^0.2") (d #t) (k 0)) (d (n "ux-vg") (r "^0.2") (d #t) (k 0)) (d (n "warmy") (r "^0.13") (d #t) (k 0)) (d (n "wgpu-types") (r "^0.10") (d #t) (k 0)) (d (n "window_clipboard") (r "^0.2.1") (d #t) (k 0)) (d (n "winit") (r "^0.25") (d #t) (k 0)) (d (n "winit") (r "^0.25") (k 2)) (d (n "xmlwriter") (r "^0.1") (d #t) (k 2)))) (h "1dn301y204rgqsnalwn1wb8h1jrky2gxyqlk8k14mf34j00cqyil") (f (quote (("terrain") ("stream") ("skin") ("probes") ("particles") ("image-loading") ("dox") ("deinterleaved") ("default" "image-loading" "decals" "audio" "skin" "batch" "stream" "probes" "terrain" "particles" "deinterleaved") ("decals") ("batch") ("audio"))))))

