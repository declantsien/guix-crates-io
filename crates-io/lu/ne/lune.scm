(define-module (crates-io lu ne lune) #:use-module (crates-io))

(define-public crate-lune-0.1.0 (c (n "lune") (v "0.1.0") (h "0j92cvhgwqb1hsy1phz140n0g55shim9xdaj16rjgkcqwwni3x17")))

(define-public crate-lune-0.1.2 (c (n "lune") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "clap") (r "^4.1.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "mlua") (r "^0.8.7") (f (quote ("luau" "async" "serialize"))) (d #t) (k 0)) (d (n "os_str_bytes") (r "^6.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "smol") (r "^1.3.0") (d #t) (k 0)) (d (n "ureq") (r "^2.6.2") (d #t) (k 0)))) (h "1sf21djhd93cnzyhsmrjpjaxb2mg65088077fv38kr40062gkqkc")))

(define-public crate-lune-0.1.3 (c (n "lune") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "clap") (r "^4.1.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "mlua") (r "^0.8.7") (f (quote ("luau" "async" "serialize"))) (d #t) (k 0)) (d (n "os_str_bytes") (r "^6.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "smol") (r "^1.3.0") (d #t) (k 0)) (d (n "ureq") (r "^2.6.2") (d #t) (k 0)))) (h "0x1j1i39i2zxzhqzn4pjf8wh9df3f3flh33000yfglzvvp8icn1l")))

(define-public crate-lune-0.2.0 (c (n "lune") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "clap") (r "^4.1.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "full_moon") (r "^0.17.0") (f (quote ("roblox"))) (d #t) (k 0)) (d (n "mlua") (r "^0.8.7") (f (quote ("luau" "async" "serialize"))) (d #t) (k 0)) (d (n "os_str_bytes") (r "^6.4.1") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "smol") (r "^1.3.0") (d #t) (k 0)) (d (n "ureq") (r "^2.6.2") (d #t) (k 0)))) (h "1bfd01368zcy2610vr51517ciqhn8gp4nnql4hmbdf5f5s19lwl6")))

(define-public crate-lune-0.2.1 (c (n "lune") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "clap") (r "^4.1.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "full_moon") (r "^0.17.0") (f (quote ("roblox"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "mlua") (r "^0.8.7") (f (quote ("luau" "async" "serialize"))) (d #t) (k 0)) (d (n "os_str_bytes") (r "^6.4.1") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)))) (h "17pxrfwyc2j18sx7hzg5xym28r8lryzm6ify0ay19820a6pwc63a")))

(define-public crate-lune-0.2.2 (c (n "lune") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 2)) (d (n "hyper") (r "^0.14.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "mlua") (r "^0.8.7") (f (quote ("luau" "async" "serialize"))) (d #t) (k 0)) (d (n "os_str_bytes") (r "^6.4.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)))) (h "1jd6x5wh2rfj7jpl28k0l4z8zs8kqj73iambb0n30n4hnpyd5h0y")))

(define-public crate-lune-0.3.0 (c (n "lune") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 2)) (d (n "console") (r "^0.15.5") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mlua") (r "^0.8.7") (f (quote ("luau" "async" "serialize"))) (d #t) (k 0)) (d (n "os_str_bytes") (r "^6.4.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)))) (h "1vlh8ylxnb7rkhf5pfv8548y0lirlflwb82k1m9195ckm95nvgfq")))

(define-public crate-lune-0.4.0 (c (n "lune") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "console") (r "^0.15.5") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10.3") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mlua") (r "^0.8.7") (f (quote ("luau" "async" "serialize"))) (d #t) (k 0)) (d (n "os_str_bytes") (r "^6.4.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (d #t) (k 0)))) (h "0dvwv7nrq5jsf54j1d3h1sv4qkc71bykfrpmlwpavanqq5cg6ad1")))

(define-public crate-lune-0.5.0 (c (n "lune") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "blocking") (r "^1.3.0") (d #t) (k 0)) (d (n "console") (r "^0.15.5") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10.3") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "dunce") (r "^1.0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mlua") (r "^0.8.7") (f (quote ("luau" "serialize"))) (d #t) (k 0)) (d (n "os_str_bytes") (r "^6.4.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (d #t) (k 0)))) (h "03lyhm35p8zbqhcyn0wyndr49yycyidnrlq6jcqd8hxkl27rhw2f")))

(define-public crate-lune-0.5.1 (c (n "lune") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "blocking") (r "^1.3") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10") (d #t) (k 0)) (d (n "directories") (r "^4.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "mlua") (r "^0.8") (f (quote ("luau" "serialize"))) (d #t) (k 0)) (d (n "os_str_bytes") (r "^6.4") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18") (d #t) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0jsli6pjn0wz5d20a4r57f3w94r58972f6cs4n1zbl2rafhg7xqp")))

(define-public crate-lune-0.5.2 (c (n "lune") (v "0.5.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "blocking") (r "^1.3") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10") (d #t) (k 0)) (d (n "directories") (r "^4.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "mlua") (r "^0.8") (f (quote ("luau" "serialize"))) (d #t) (k 0)) (d (n "os_str_bytes") (r "^6.4") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18") (d #t) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1kchvs0pyf0mkay9mnaisirkhcpwvjz7pqaa06xgh4i8qlvi15m1")))

(define-public crate-lune-0.5.3 (c (n "lune") (v "0.5.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "blocking") (r "^1.3") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10") (d #t) (k 0)) (d (n "directories") (r "^4.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "mlua") (r "^0.8") (f (quote ("luau" "serialize"))) (d #t) (k 0)) (d (n "os_str_bytes") (r "^6.4") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18") (d #t) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1ccpa709791wk2maj3vra5c0500cayv2cqf7s3xwwfq1ydl5sncs")))

(define-public crate-lune-0.5.4 (c (n "lune") (v "0.5.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "blocking") (r "^1.3") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10") (d #t) (k 0)) (d (n "directories") (r "^4.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "mlua") (r "^0.8") (f (quote ("luau" "serialize"))) (d #t) (k 0)) (d (n "os_str_bytes") (r "^6.4") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18") (d #t) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "136ziz1pm1d9w502cvn5y6yk5jlp0mz3gkpbcqy62zswjkr0sx41")))

(define-public crate-lune-0.5.5 (c (n "lune") (v "0.5.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "blocking") (r "^1.3") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10") (d #t) (k 0)) (d (n "directories") (r "^4.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "mlua") (r "^0.8") (f (quote ("luau" "serialize"))) (d #t) (k 0)) (d (n "os_str_bytes") (r "^6.4") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18") (d #t) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "15wv9cnry8qm4rf3pai0icghd62rsw8ibm1hfybmagq3zak0p1dp")))

(define-public crate-lune-0.7.6 (c (n "lune") (v "0.7.6") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-compression") (r "^0.4") (f (quote ("tokio" "brotli" "deflate" "gzip" "zlib"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10") (d #t) (k 0)) (d (n "directories") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glam") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.11") (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (f (quote ("glob"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (d #t) (k 0)) (d (n "mlua") (r "^0.9.0-beta.3") (f (quote ("luau" "luau-jit" "serialize"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "os_str_bytes") (r "^6.4") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rbx_binary") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "rbx_cookie") (r "^0.1.3") (o #t) (k 0)) (d (n "rbx_dom_weak") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "rbx_reflection") (r "^4.3.0") (o #t) (d #t) (k 0)) (d (n "rbx_reflection_database") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "rbx_xml") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (f (quote ("std" "unicode-perl"))) (o #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1") (d #t) (k 0)))) (h "06i9wajp5qxriwhz42k49996qpbmk1zmcd3qlfmikyv6az3y29ka") (f (quote (("default" "cli" "roblox")))) (s 2) (e (quote (("roblox" "dep:glam" "dep:rand" "dep:rbx_cookie" "dep:rbx_binary" "dep:rbx_dom_weak" "dep:rbx_reflection" "dep:rbx_reflection_database" "dep:rbx_xml") ("cli" "dep:anyhow" "dep:env_logger" "dep:itertools" "dep:clap" "dep:include_dir" "dep:regex"))))))

(define-public crate-lune-0.7.7 (c (n "lune") (v "0.7.7") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-compression") (r "^0.4") (f (quote ("tokio" "brotli" "deflate" "gzip" "zlib"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10") (d #t) (k 0)) (d (n "directories") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glam") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.11") (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (f (quote ("glob"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (d #t) (k 0)) (d (n "mlua") (r "^0.9.0") (f (quote ("luau" "luau-jit" "serialize"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "os_str_bytes") (r "^6.4") (d #t) (k 0)) (d (n "path-clean") (r "^1.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rbx_binary") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "rbx_cookie") (r "^0.1.3") (o #t) (k 0)) (d (n "rbx_dom_weak") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "rbx_reflection") (r "^4.3.0") (o #t) (d #t) (k 0)) (d (n "rbx_reflection_database") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "rbx_xml") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (f (quote ("std" "unicode-perl"))) (o #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "rustyline") (r "^12.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1") (d #t) (k 0)))) (h "00955a7j0bplsv9i7hfw0z38nsqbxmb0gakcnfby6nvg6hxcsci8") (f (quote (("default" "cli" "roblox")))) (s 2) (e (quote (("roblox" "dep:glam" "dep:rand" "dep:rbx_cookie" "dep:rbx_binary" "dep:rbx_dom_weak" "dep:rbx_reflection" "dep:rbx_reflection_database" "dep:rbx_xml") ("cli" "dep:anyhow" "dep:env_logger" "dep:itertools" "dep:clap" "dep:include_dir" "dep:regex"))))))

(define-public crate-lune-0.7.8 (c (n "lune") (v "0.7.8") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-compression") (r "^0.4") (f (quote ("tokio" "brotli" "deflate" "gzip" "zlib"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono_lc") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "dialoguer") (r "^0.11") (d #t) (k 0)) (d (n "directories") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glam") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.11") (d #t) (k 0)) (d (n "include_dir") (r "^0.7") (f (quote ("glob"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (d #t) (k 0)) (d (n "mlua") (r "^0.9.1") (f (quote ("luau" "luau-jit" "serialize"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "os_str_bytes") (r "^6.4") (d #t) (k 0)) (d (n "path-clean") (r "^1.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rbx_binary") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rbx_cookie") (r "^0.1.3") (o #t) (k 0)) (d (n "rbx_dom_weak") (r "^2.6.0") (o #t) (d #t) (k 0)) (d (n "rbx_reflection") (r "^4.4.0") (o #t) (d #t) (k 0)) (d (n "rbx_reflection_database") (r "^0.2.9") (o #t) (d #t) (k 0)) (d (n "rbx_xml") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (f (quote ("std" "unicode-perl"))) (o #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "rustyline") (r "^12.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1") (d #t) (k 0)))) (h "15s1hxvzy460942pd8kd9g5z9b21z0pkwmd21nbcww99bsk00r5a") (f (quote (("default" "cli" "roblox")))) (s 2) (e (quote (("roblox" "dep:glam" "dep:rand" "dep:rbx_cookie" "dep:rbx_binary" "dep:rbx_dom_weak" "dep:rbx_reflection" "dep:rbx_reflection_database" "dep:rbx_xml") ("cli" "dep:anyhow" "dep:env_logger" "dep:itertools" "dep:clap" "dep:include_dir" "dep:regex" "dep:rustyline"))))))

(define-public crate-lune-0.7.9 (c (n "lune") (v "0.7.9") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-compression") (r "^0.4") (f (quote ("tokio" "brotli" "deflate" "gzip" "zlib"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono_lc") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "dialoguer") (r "^0.11") (d #t) (k 0)) (d (n "directories") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glam") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.11") (d #t) (k 0)) (d (n "include_dir") (r "^0.7") (f (quote ("glob"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (d #t) (k 0)) (d (n "mlua") (r "^0.9.1") (f (quote ("luau" "luau-jit" "serialize"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "os_str_bytes") (r "^6.4") (f (quote ("conversions"))) (d #t) (k 0)) (d (n "path-clean") (r "^1.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rbx_binary") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rbx_cookie") (r "^0.1.3") (o #t) (k 0)) (d (n "rbx_dom_weak") (r "^2.6.0") (o #t) (d #t) (k 0)) (d (n "rbx_reflection") (r "^4.4.0") (o #t) (d #t) (k 0)) (d (n "rbx_reflection_database") (r "^0.2.9") (o #t) (d #t) (k 0)) (d (n "rbx_xml") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (f (quote ("std" "unicode-perl"))) (o #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "rustyline") (r "^12.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1") (d #t) (k 0)))) (h "0vlyx3r6y9iw5q9sgnsnccc9v4a80m0s724wvkdm7f15bf9byw6v") (f (quote (("default" "cli" "roblox")))) (s 2) (e (quote (("roblox" "dep:glam" "dep:rand" "dep:rbx_cookie" "dep:rbx_binary" "dep:rbx_dom_weak" "dep:rbx_reflection" "dep:rbx_reflection_database" "dep:rbx_xml") ("cli" "dep:anyhow" "dep:env_logger" "dep:itertools" "dep:clap" "dep:include_dir" "dep:regex" "dep:rustyline"))))))

(define-public crate-lune-0.7.10 (c (n "lune") (v "0.7.10") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-compression") (r "^0.4") (f (quote ("tokio" "brotli" "deflate" "gzip" "zlib"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono_lc") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "dialoguer") (r "^0.11") (d #t) (k 0)) (d (n "directories") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glam") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.11") (d #t) (k 0)) (d (n "include_dir") (r "^0.7") (f (quote ("glob"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (d #t) (k 0)) (d (n "mlua") (r "^0.9.1") (f (quote ("luau" "luau-jit" "serialize"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "os_str_bytes") (r "^6.4") (f (quote ("conversions"))) (d #t) (k 0)) (d (n "path-clean") (r "^1.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rbx_binary") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rbx_cookie") (r "^0.1.3") (o #t) (k 0)) (d (n "rbx_dom_weak") (r "^2.6.0") (o #t) (d #t) (k 0)) (d (n "rbx_reflection") (r "^4.4.0") (o #t) (d #t) (k 0)) (d (n "rbx_reflection_database") (r "^0.2.9") (o #t) (d #t) (k 0)) (d (n "rbx_xml") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (f (quote ("std" "unicode-perl"))) (o #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "rustyline") (r "^12.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1") (d #t) (k 0)))) (h "1fmmyxn4zkhddqx89g5p3cd9ikmhm90dfkv046g4s511s4cs4msd") (f (quote (("default" "cli" "roblox")))) (s 2) (e (quote (("roblox" "dep:glam" "dep:rand" "dep:rbx_cookie" "dep:rbx_binary" "dep:rbx_dom_weak" "dep:rbx_reflection" "dep:rbx_reflection_database" "dep:rbx_xml") ("cli" "dep:anyhow" "dep:env_logger" "dep:itertools" "dep:clap" "dep:include_dir" "dep:regex" "dep:rustyline"))))))

(define-public crate-lune-0.7.11 (c (n "lune") (v "0.7.11") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-compression") (r "^0.4") (f (quote ("tokio" "brotli" "deflate" "gzip" "zlib"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono_lc") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "dialoguer") (r "^0.11") (d #t) (k 0)) (d (n "directories") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glam") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.11") (d #t) (k 0)) (d (n "include_dir") (r "^0.7") (f (quote ("glob"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (d #t) (k 0)) (d (n "mlua") (r "^0.9.1") (f (quote ("luau" "luau-jit" "serialize"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "os_str_bytes") (r "^6.4") (f (quote ("conversions"))) (d #t) (k 0)) (d (n "path-clean") (r "^1.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rbx_binary") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rbx_cookie") (r "^0.1.4") (o #t) (k 0)) (d (n "rbx_dom_weak") (r "^2.6.0") (o #t) (d #t) (k 0)) (d (n "rbx_reflection") (r "^4.4.0") (o #t) (d #t) (k 0)) (d (n "rbx_reflection_database") (r "^0.2.9") (o #t) (d #t) (k 0)) (d (n "rbx_xml") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (f (quote ("std" "unicode-perl"))) (o #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "rustyline") (r "^12.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1") (d #t) (k 0)))) (h "0hfl0b87mkmhmz1rinmav5myzwd4763wyjfbg7b9xf3qrsbczddx") (f (quote (("default" "cli" "roblox")))) (s 2) (e (quote (("roblox" "dep:glam" "dep:rand" "dep:rbx_cookie" "dep:rbx_binary" "dep:rbx_dom_weak" "dep:rbx_reflection" "dep:rbx_reflection_database" "dep:rbx_xml") ("cli" "dep:anyhow" "dep:env_logger" "dep:itertools" "dep:clap" "dep:include_dir" "dep:regex" "dep:rustyline"))))))

(define-public crate-lune-0.8.0 (c (n "lune") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-compression") (r "^0.4") (f (quote ("tokio" "brotli" "deflate" "gzip" "zlib"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono_lc") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "dialoguer") (r "^0.11") (d #t) (k 0)) (d (n "directories") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glam") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.11") (d #t) (k 0)) (d (n "include_dir") (r "^0.7") (f (quote ("glob"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (d #t) (k 0)) (d (n "mlua") (r "^0.9.1") (f (quote ("luau" "luau-jit" "serialize"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "os_str_bytes") (r "^6.4") (f (quote ("conversions"))) (d #t) (k 0)) (d (n "path-clean") (r "^1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rbx_binary") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rbx_cookie") (r "^0.1.4") (o #t) (k 0)) (d (n "rbx_dom_weak") (r "^2.6.0") (o #t) (d #t) (k 0)) (d (n "rbx_reflection") (r "^4.4.0") (o #t) (d #t) (k 0)) (d (n "rbx_reflection_database") (r "^0.2.9") (o #t) (d #t) (k 0)) (d (n "rbx_xml") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (f (quote ("std" "unicode-perl"))) (o #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "rustyline") (r "^13.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1") (d #t) (k 0)))) (h "0wx5kis079prqw7kgxk6wmdbhdlnhzzw0kkc3kia28xr7ydhgk2v") (f (quote (("default" "cli" "roblox")))) (s 2) (e (quote (("roblox" "dep:glam" "dep:rand" "dep:rbx_cookie" "dep:rbx_binary" "dep:rbx_dom_weak" "dep:rbx_reflection" "dep:rbx_reflection_database" "dep:rbx_xml") ("cli" "dep:anyhow" "dep:env_logger" "dep:itertools" "dep:clap" "dep:include_dir" "dep:regex" "dep:rustyline"))))))

(define-public crate-lune-0.8.1 (c (n "lune") (v "0.8.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-compression") (r "^0.4") (f (quote ("tokio" "brotli" "deflate" "gzip" "zlib"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "blocking") (r "^1.5") (d #t) (k 0)) (d (n "chrono") (r "=0.4.34") (d #t) (k 0)) (d (n "chrono_lc") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "dialoguer") (r "^0.11") (d #t) (k 0)) (d (n "directories") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glam") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "http") (r "^1.0") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^1.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.13") (d #t) (k 0)) (d (n "hyper-util") (r "^0.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7") (f (quote ("glob"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (d #t) (k 0)) (d (n "mlua") (r "^0.9.6") (f (quote ("luau" "luau-jit" "async" "serialize"))) (d #t) (k 0)) (d (n "mlua-luau-scheduler") (r "^0.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "os_str_bytes") (r "^7.0") (f (quote ("conversions"))) (d #t) (k 0)) (d (n "path-clean") (r "^1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rbx_binary") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rbx_cookie") (r "^0.1.4") (o #t) (k 0)) (d (n "rbx_dom_weak") (r "^2.6.0") (o #t) (d #t) (k 0)) (d (n "rbx_reflection") (r "^4.4.0") (o #t) (d #t) (k 0)) (d (n "rbx_reflection_database") (r "^0.2.9") (o #t) (d #t) (k 0)) (d (n "rbx_xml") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (f (quote ("std" "unicode-perl"))) (o #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "rustyline") (r "^14.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.21") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1") (d #t) (k 0)))) (h "1mqps2q329gncr1dk0flpqw64ymak4ybkc62pjaai6fsaxg21j1p") (f (quote (("default" "cli" "roblox")))) (s 2) (e (quote (("roblox" "dep:glam" "dep:rand" "dep:rbx_cookie" "dep:rbx_binary" "dep:rbx_dom_weak" "dep:rbx_reflection" "dep:rbx_reflection_database" "dep:rbx_xml") ("cli" "dep:anyhow" "dep:env_logger" "dep:itertools" "dep:clap" "dep:include_dir" "dep:regex" "dep:rustyline"))))))

(define-public crate-lune-0.8.2 (c (n "lune") (v "0.8.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-compression") (r "^0.4") (f (quote ("tokio" "brotli" "deflate" "gzip" "zlib"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "blocking") (r "^1.5") (d #t) (k 0)) (d (n "chrono") (r "=0.4.34") (d #t) (k 0)) (d (n "chrono_lc") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "dialoguer") (r "^0.11") (d #t) (k 0)) (d (n "directories") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glam") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "http") (r "^1.0") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^1.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.13") (d #t) (k 0)) (d (n "hyper-util") (r "^0.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7") (f (quote ("glob"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (d #t) (k 0)) (d (n "mlua") (r "^0.9.6") (f (quote ("luau" "luau-jit" "async" "serialize"))) (d #t) (k 0)) (d (n "mlua-luau-scheduler") (r "^0.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "os_str_bytes") (r "^7.0") (f (quote ("conversions"))) (d #t) (k 0)) (d (n "path-clean") (r "^1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rbx_binary") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rbx_cookie") (r "^0.1.4") (o #t) (k 0)) (d (n "rbx_dom_weak") (r "^2.6.0") (o #t) (d #t) (k 0)) (d (n "rbx_reflection") (r "^4.4.0") (o #t) (d #t) (k 0)) (d (n "rbx_reflection_database") (r "^0.2.9") (o #t) (d #t) (k 0)) (d (n "rbx_xml") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (f (quote ("std" "unicode-perl"))) (o #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "rustyline") (r "^14.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.21") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1") (d #t) (k 0)))) (h "1clqqb6sxljzq8l5phq08c75rq20f6xcqj9y1s06f728apwv8g8a") (f (quote (("default" "cli" "roblox")))) (s 2) (e (quote (("roblox" "dep:glam" "dep:rand" "dep:rbx_cookie" "dep:rbx_binary" "dep:rbx_dom_weak" "dep:rbx_reflection" "dep:rbx_reflection_database" "dep:rbx_xml") ("cli" "dep:anyhow" "dep:env_logger" "dep:itertools" "dep:clap" "dep:include_dir" "dep:regex" "dep:rustyline"))))))

(define-public crate-lune-0.8.3 (c (n "lune") (v "0.8.3") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-compression") (r "^0.4") (f (quote ("tokio" "brotli" "deflate" "gzip" "zlib"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "blocking") (r "^1.5") (d #t) (k 0)) (d (n "chrono") (r "=0.4.34") (d #t) (k 0)) (d (n "chrono_lc") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "dialoguer") (r "^0.11") (d #t) (k 0)) (d (n "directories") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glam") (r "^0.27") (o #t) (d #t) (k 0)) (d (n "http") (r "^1.0") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^1.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.13") (d #t) (k 0)) (d (n "hyper-util") (r "^0.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7") (f (quote ("glob"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (d #t) (k 0)) (d (n "mlua") (r "^0.9.6") (f (quote ("luau" "luau-jit" "async" "serialize"))) (d #t) (k 0)) (d (n "mlua-luau-scheduler") (r "^0.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "os_str_bytes") (r "^7.0") (f (quote ("conversions"))) (d #t) (k 0)) (d (n "path-clean") (r "^1.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rbx_binary") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rbx_cookie") (r "^0.1.4") (o #t) (k 0)) (d (n "rbx_dom_weak") (r "^2.6.0") (o #t) (d #t) (k 0)) (d (n "rbx_reflection") (r "^4.4.0") (o #t) (d #t) (k 0)) (d (n "rbx_reflection_database") (r "^0.2.9") (o #t) (d #t) (k 0)) (d (n "rbx_xml") (r "^0.13.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (f (quote ("std" "unicode-perl"))) (o #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "rustyline") (r "^14.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.21") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1") (d #t) (k 0)))) (h "0ladvfpzyncxrqqwglnyivwa9hma0mv17vzp5lw3zbq7spcr91x9") (f (quote (("default" "cli" "roblox")))) (s 2) (e (quote (("roblox" "dep:glam" "dep:rand" "dep:rbx_cookie" "dep:rbx_binary" "dep:rbx_dom_weak" "dep:rbx_reflection" "dep:rbx_reflection_database" "dep:rbx_xml") ("cli" "dep:anyhow" "dep:env_logger" "dep:clap" "dep:include_dir" "dep:regex" "dep:rustyline"))))))

(define-public crate-lune-0.8.4 (c (n "lune") (v "0.8.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "dialoguer") (r "^0.11") (d #t) (k 0)) (d (n "directories") (r "^5.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "include_dir") (r "^0.7") (f (quote ("glob"))) (o #t) (d #t) (k 0)) (d (n "lune-roblox") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lune-std") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "lune-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "mlua") (r "^0.9.7") (f (quote ("luau"))) (d #t) (k 0)) (d (n "mlua-luau-scheduler") (r "^0.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "rustyline") (r "^14.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "zip_next") (r "^1.1") (o #t) (d #t) (k 0)))) (h "0sfgxnvsrqz58hrw52m1z9n5wh88axdf958fj7y22n9j8d9skar7") (f (quote (("std" "std-datetime" "std-fs" "std-luau" "std-net" "std-process" "std-regex" "std-roblox" "std-serde" "std-stdio" "std-task") ("default" "std" "cli")))) (s 2) (e (quote (("std-task" "dep:lune-std" "lune-std/task") ("std-stdio" "dep:lune-std" "lune-std/stdio") ("std-serde" "dep:lune-std" "lune-std/serde") ("std-roblox" "dep:lune-std" "lune-std/roblox" "dep:lune-roblox") ("std-regex" "dep:lune-std" "lune-std/regex") ("std-process" "dep:lune-std" "lune-std/process") ("std-net" "dep:lune-std" "lune-std/net") ("std-luau" "dep:lune-std" "lune-std/luau") ("std-fs" "dep:lune-std" "lune-std/fs") ("std-datetime" "dep:lune-std" "lune-std/datetime") ("cli" "dep:clap" "dep:include_dir" "dep:rustyline" "dep:zip_next"))))))

