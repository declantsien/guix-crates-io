(define-module (crates-io lu mi lumina-node-wasm) #:use-module (crates-io))

(define-public crate-lumina-node-wasm-0.1.0 (c (n "lumina-node-wasm") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "celestia-types") (r "^0.1.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p") (r "^0.53.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lumina-node") (r "^0.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "time") (r "^0.3") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("time"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing-web") (r "^0.1.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.88") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0q6ykrinwmgpfhc6krbcvqfkw3l52zi9frq21rynb5w22cb9bm2x")))

(define-public crate-lumina-node-wasm-0.1.1 (c (n "lumina-node-wasm") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "celestia-types") (r "^0.2.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libp2p") (r "^0.53.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lumina-node") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "time") (r "^0.3") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("time"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing-web") (r "^0.1.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.88") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1v63y5awp2shl9pjycnwxskg2xq97yafgf4nxh29qighdxsi1z7p")))

