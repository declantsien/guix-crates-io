(define-module (crates-io lu rk lurk) #:use-module (crates-io))

(define-public crate-lurk-0.1.0 (c (n "lurk") (v "0.1.0") (h "06r507w900jjpc2i0gjkbsz7kff00ybdk2qchzskviyvh6qddnj3")))

(define-public crate-lurk-0.1.1 (c (n "lurk") (v "0.1.1") (d (list (d (n "ahash") (r "^0.7.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.45") (d #t) (k 0)) (d (n "bellperson") (r "^0.19.0") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "dashmap") (r "^5.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "neptune") (r "^6.0.0") (f (quote ("arity2" "arity4" "arity8" "arity16"))) (k 0)) (d (n "nova") (r "^0.4.1") (d #t) (k 0) (p "nova-snark")) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "pairing_lib") (r "^0.21") (d #t) (k 0) (p "pairing")) (d (n "pasta_curves") (r "^0.3.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rustyline") (r "^9.0.0") (d #t) (k 0)) (d (n "rustyline-derive") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "string-interner") (r "^0.14.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (k 2)))) (h "1w9ya4sgkn5fjx4akz2danjsg5z30vsvr48d0w7s4cmaqxgg40py") (f (quote (("gpu" "neptune/opencl") ("default" "gpu"))))))

(define-public crate-lurk-0.2.0 (c (n "lurk") (v "0.2.0") (d (list (d (n "ahash") (r "^0.7.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.8") (d #t) (k 2)) (d (n "bellperson") (r "^0.24") (d #t) (k 0)) (d (n "blstrs") (r "^0.6.1") (d #t) (k 0)) (d (n "cid") (r "^0.8.6") (f (quote ("alloc" "serde-codec"))) (k 0)) (d (n "clap") (r "^4.1.8") (d #t) (k 0)) (d (n "criterion") (r "^0.3.6") (d #t) (k 2)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "dirs") (r "^5.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ff") (r "^0.12.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "libipld") (r "^0.3.0") (f (quote ("dag-cbor" "dag-json" "serde-codec"))) (k 0) (p "lurk-ipld")) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memmap") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "memmap2")) (d (n "multihash") (r "^0.16.3") (f (quote ("alloc" "blake3"))) (k 0)) (d (n "neptune") (r "^8.1.1") (f (quote ("arity2" "arity4" "arity8" "arity16" "pasta" "bls"))) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nova") (r "^0.19.0") (k 0) (p "nova-snark")) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "pairing_lib") (r "^0.22") (d #t) (k 0) (p "pairing")) (d (n "pasta-msm") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "lurk-pasta-msm")) (d (n "pasta_curves") (r "^0.5.2") (f (quote ("repr-c" "serde"))) (d #t) (k 0) (p "fil_pasta_curves")) (d (n "peekmore") (r "^1.1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rustyline") (r "^11.0") (f (quote ("derive" "with-file-history"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustyline") (r "^11.0") (f (quote ("derive"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustyline-derive") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.10") (d #t) (k 0)) (d (n "string-interner") (r "^0.14.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (k 2)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 2)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "0f3sjpv4l3g7piwysz93sl4anb3j7aqfxvg5jyjw81247dj9nzk8") (f (quote (("gpu" "neptune/opencl") ("default"))))))

(define-public crate-lurk-0.3.0 (c (n "lurk") (v "0.3.0") (d (list (d (n "abomonation") (r "^0.7.3") (d #t) (k 0)) (d (n "abomonation_derive") (r "^0.1.0") (d #t) (k 0) (p "abomonation_derive_ng")) (d (n "ahash") (r "^0.8.6") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "anymap") (r "^1.0.0-beta.2") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "ascii_table") (r "^4.0.2") (d #t) (k 2)) (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "base-x") (r "^0.2.11") (d #t) (k 0)) (d (n "base32ct") (r "^0.2.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bellpepper") (r "^0.4.1") (d #t) (k 0)) (d (n "bellpepper-core") (r "^0.4.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytecount") (r "^0.6.7") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "camino") (r "^1.1.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "circom-scotia") (r "^0.2.0") (d #t) (k 0)) (d (n "clap") (r "^4.3.17") (f (quote ("derive"))) (d #t) (k 0)) (d (n "config") (r "^0.13.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (d #t) (k 0)) (d (n "elsa") (r "^0.1.0") (f (quote ("indexmap"))) (d #t) (k 0) (p "lurk-elsa")) (d (n "ff") (r "^0.13") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "halo2curves") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "lurk-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "lurk-metrics") (r "^0.2.0") (d #t) (k 0)) (d (n "memmap") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "memmap2")) (d (n "metrics") (r "^0.21.1") (d #t) (k 0)) (d (n "neptune") (r "^13.0.0") (f (quote ("abomonation" "arity2" "arity4" "arity8" "arity16" "pasta"))) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "nova") (r "^0.1.0") (d #t) (k 0) (p "arecibo")) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pairing") (r "^0.23") (d #t) (k 0)) (d (n "pasta-msm") (r "^0.1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pasta_curves") (r "^0.5.1") (f (quote ("repr-c" "serde"))) (d #t) (k 0)) (d (n "peekmore") (r "^1.3.0") (d #t) (k 0)) (d (n "pprof") (r "^0.13") (d #t) (k 2)) (d (n "proptest") (r "^1.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("stream" "blocking"))) (d #t) (k 0)) (d (n "rustyline") (r "^11.0") (f (quote ("derive" "with-file-history"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustyline") (r "^11.0") (f (quote ("derive"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustyline-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.14") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1.2.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (k 2)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 2)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.44") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2") (d #t) (k 2)) (d (n "tracing-texray") (r "^0.2.0") (d #t) (k 0)) (d (n "vergen") (r "^8") (f (quote ("build" "git" "gitcl"))) (d #t) (k 1)))) (h "1wckgnpm66pj78l41725bffsxysnn6cy6k1ch6m1yy2akbpwidp5") (f (quote (("portable" "pasta-msm/portable" "nova/portable") ("opencl" "neptune/opencl" "nova/opencl") ("flamegraph" "pprof/flamegraph" "pprof/criterion") ("default") ("cuda" "neptune/cuda" "nova/cuda")))) (r "1.71.1")))

(define-public crate-lurk-0.3.1 (c (n "lurk") (v "0.3.1") (d (list (d (n "abomonation") (r "^0.7.3") (d #t) (k 0)) (d (n "abomonation_derive") (r "^0.1.0") (d #t) (k 0) (p "abomonation_derive_ng")) (d (n "ahash") (r "^0.8.6") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "anymap") (r "^1.0.0-beta.2") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "ascii_table") (r "^4.0.2") (d #t) (k 2)) (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "base-x") (r "^0.2.11") (d #t) (k 0)) (d (n "base32ct") (r "^0.2.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bellpepper") (r "^0.4.1") (d #t) (k 0)) (d (n "bellpepper-core") (r "^0.4.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytecount") (r "^0.6.7") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "camino") (r "^1.1.6") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "circom-scotia") (r "^0.2.0") (d #t) (k 0)) (d (n "clap") (r "^4.3.17") (f (quote ("derive"))) (d #t) (k 0)) (d (n "config") (r "^0.13.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (d #t) (k 0)) (d (n "elsa") (r "^0.1.0") (f (quote ("indexmap"))) (d #t) (k 0) (p "lurk-elsa")) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "ff") (r "^0.13") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "halo2curves") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "lurk-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "lurk-metrics") (r "^0.2.0") (d #t) (k 0)) (d (n "memmap") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "memmap2")) (d (n "metrics") (r "^0.21.1") (d #t) (k 0)) (d (n "neptune") (r "^13.0.0") (f (quote ("abomonation" "arity2" "arity4" "arity8" "arity16" "pasta"))) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "nom_locate") (r "^4.1.0") (d #t) (k 0)) (d (n "nova") (r "^0.1.0") (d #t) (k 0) (p "arecibo")) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pairing") (r "^0.23") (d #t) (k 0)) (d (n "pasta-msm") (r "^0.1.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pasta_curves") (r "^0.5.1") (f (quote ("repr-c" "serde"))) (d #t) (k 0)) (d (n "pprof") (r "^0.13") (d #t) (k 2)) (d (n "proptest") (r "^1.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("stream" "blocking"))) (d #t) (k 0)) (d (n "rustyline") (r "^11.0") (f (quote ("derive" "with-file-history"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustyline") (r "^11.0") (f (quote ("derive"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustyline-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.14") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1.2.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (k 2)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 2)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.44") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2") (d #t) (k 2)) (d (n "tracing-texray") (r "^0.2.0") (d #t) (k 0)) (d (n "vergen") (r "^8") (f (quote ("build" "git" "gitcl"))) (d #t) (k 1)))) (h "1xihai1afrp92xk940xsj4wxzbdswgv4hw866n03ilk2dl1h8saj") (f (quote (("portable" "pasta-msm/portable" "nova/portable") ("opencl" "neptune/opencl" "nova/opencl") ("flamegraph" "pprof/flamegraph" "pprof/criterion") ("default") ("cuda" "neptune/cuda" "nova/cuda")))) (r "1.71.1")))

