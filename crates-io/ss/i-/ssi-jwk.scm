(define-module (crates-io ss i- ssi-jwk) #:use-module (crates-io))

(define-public crate-ssi-jwk-0.1.0 (c (n "ssi-jwk") (v "0.1.0") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "bs58") (r "^0.4") (f (quote ("check"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.11") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "p256") (r "^0.11") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "p384") (r "^0.11") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_old") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "ring") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rsa") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simple_asn1") (r "^0.5.2") (d #t) (k 0)) (d (n "snarkvm-algorithms") (r "^0.7.9") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.7.9") (o #t) (d #t) (k 0)) (d (n "snarkvm-dpc") (r "^0.7.9") (o #t) (d #t) (k 0)) (d (n "snarkvm-parameters") (r "^0.7.9") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "^0.7.9") (o #t) (d #t) (k 0)) (d (n "ssi-crypto") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0409valai56f2xykabgi9rf5j70ajaj4j32cwd7lbpp9vymh9apv") (f (quote (("tezos" "blake2b_simd" "secp256k1" "secp256r1" "bs58") ("secp384r1" "p384" "rand") ("secp256r1" "p256" "rand") ("secp256k1" "k256" "rand" "k256/keccak256" "ssi-crypto/secp256k1") ("ripemd-160" "ssi-crypto/ripemd-160" "secp256k1") ("eip" "ssi-crypto/keccak" "k256/keccak256" "secp256k1") ("ed25519" "ed25519-dalek" "rand_old" "getrandom") ("default" "secp256k1" "secp256r1" "ed25519" "rsa" "eip" "ripemd-160") ("aleo" "rand" "blake2" "snarkvm-dpc" "snarkvm-algorithms" "snarkvm-curves" "snarkvm-utilities" "snarkvm-parameters" "bs58")))) (s 2) (e (quote (("rsa" "dep:rsa") ("ring" "dep:ring"))))))

(define-public crate-ssi-jwk-0.1.1 (c (n "ssi-jwk") (v "0.1.1") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "bs58") (r "^0.4") (f (quote ("check"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.11") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "p256") (r "^0.11") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "p384") (r "^0.11") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_old") (r "^0.7") (o #t) (d #t) (k 0) (p "rand")) (d (n "ring") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rsa") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simple_asn1") (r "^0.5.2") (d #t) (k 0)) (d (n "snarkvm-algorithms") (r "^0.7.9") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.7.9") (o #t) (d #t) (k 0)) (d (n "snarkvm-dpc") (r "^0.7.9") (o #t) (d #t) (k 0)) (d (n "snarkvm-parameters") (r "^0.7.9") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "^0.7.9") (o #t) (d #t) (k 0)) (d (n "ssi-crypto") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "05fq88lfdg5wbxwcz17gif3b7whwj2g28ifyv3v221n0y1nkfg6z") (f (quote (("tezos" "blake2b_simd" "secp256k1" "secp256r1" "bs58") ("secp384r1" "p384" "rand") ("secp256r1" "p256" "rand") ("secp256k1" "k256" "rand" "k256/keccak256" "ssi-crypto/secp256k1") ("ripemd-160" "ssi-crypto/ripemd-160" "secp256k1") ("eip" "ssi-crypto/keccak" "k256/keccak256" "secp256k1") ("ed25519" "ed25519-dalek" "rand_old" "getrandom") ("default" "secp256k1" "secp256r1" "ed25519" "rsa" "eip" "ripemd-160") ("aleo" "rand" "blake2" "snarkvm-dpc" "snarkvm-algorithms" "snarkvm-curves" "snarkvm-utilities" "snarkvm-parameters" "bs58")))) (s 2) (e (quote (("rsa" "dep:rsa") ("ring" "dep:ring"))))))

(define-public crate-ssi-jwk-0.1.2 (c (n "ssi-jwk") (v "0.1.2") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "bs58") (r "^0.4") (f (quote ("check"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.13.1") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "p384") (r "^0.13.0") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rsa") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "simple_asn1") (r "^0.5.2") (d #t) (k 0)) (d (n "snarkvm-algorithms") (r "^0.7.9") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.7.9") (o #t) (d #t) (k 0)) (d (n "snarkvm-dpc") (r "^0.7.9") (o #t) (d #t) (k 0)) (d (n "snarkvm-parameters") (r "^0.7.9") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "^0.7.9") (o #t) (d #t) (k 0)) (d (n "ssi-crypto") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "115khdb62nxirihzdz6jbjv1p7q4sfxv1qmdbsa08glrasqb5mxj") (f (quote (("tezos" "blake2b_simd" "secp256k1" "secp256r1" "bs58") ("secp384r1" "p384" "rand") ("secp256r1" "p256" "rand") ("secp256k1" "k256" "rand" "ssi-crypto/secp256k1") ("ripemd-160" "ssi-crypto/ripemd-160" "secp256k1") ("eip" "ssi-crypto/keccak" "secp256k1") ("ed25519" "ed25519-dalek" "rand" "getrandom") ("default" "secp256k1" "secp256r1" "ed25519" "rsa" "eip" "ripemd-160") ("aleo" "rand" "blake2" "snarkvm-dpc" "snarkvm-algorithms" "snarkvm-curves" "snarkvm-utilities" "snarkvm-parameters" "bs58")))) (s 2) (e (quote (("rsa" "dep:rsa") ("ring" "dep:ring"))))))

