(define-module (crates-io ss bh ssbh_lib) #:use-module (crates-io))

(define-public crate-ssbh_lib-0.5.0 (c (n "ssbh_lib") (v "0.5.0") (d (list (d (n "binread") (r "^2.1.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.2") (d #t) (k 0)) (d (n "half") (r "^1.7.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "ssbh_write_derive") (r "^0.5") (d #t) (k 0)))) (h "04xn23s6x5ydg5yn3dcxzlz5g37nxjsc3vv564lnbyhpsdbmhfzy") (f (quote (("derive_serde" "serde") ("default" "derive_serde"))))))

(define-public crate-ssbh_lib-0.6.1 (c (n "ssbh_lib") (v "0.6.1") (d (list (d (n "binread") (r "^2.1.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.2") (d #t) (k 0)) (d (n "half") (r "^1.7.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "ssbh_write_derive") (r "^0.5") (d #t) (k 0)))) (h "1icdmsd2l715myxkisl0n7ykh8jf77xfwxja2m9zp9qb1m96x20s") (f (quote (("derive_serde" "serde") ("default" "derive_serde"))))))

(define-public crate-ssbh_lib-0.7.0 (c (n "ssbh_lib") (v "0.7.0") (d (list (d (n "binread") (r "^2.1.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.2") (d #t) (k 0)) (d (n "half") (r "^1.7.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "ssbh_write_derive") (r "^0.5") (d #t) (k 0)))) (h "15agr3qnf3hk2f59aczxvn29vrygxg04bxl85z74hdxqcviw717f") (f (quote (("derive_serde" "serde") ("default" "derive_serde"))))))

(define-public crate-ssbh_lib-0.8.0 (c (n "ssbh_lib") (v "0.8.0") (d (list (d (n "binread") (r "^2.1.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.2") (d #t) (k 0)) (d (n "half") (r "^1.7.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "ssbh_write_derive") (r "^0.6") (d #t) (k 0)))) (h "1xjrvjbhhcgniyrgfkml7f8hkv7yln3bldn8q3x9gn8c6i87jf6p") (f (quote (("hex_buffer" "derive_serde") ("derive_serde" "serde" "serde_bytes") ("default" "derive_serde"))))))

(define-public crate-ssbh_lib-0.8.1 (c (n "ssbh_lib") (v "0.8.1") (d (list (d (n "binread") (r "^2.1.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.2") (d #t) (k 0)) (d (n "half") (r "^1.7.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "ssbh_write_derive") (r "^0.6") (d #t) (k 0)))) (h "1dzqwhcn3i47hbmw29p7fpfr8cjvfm91766j0wyl340hks2carbh") (f (quote (("hex_buffer" "derive_serde") ("derive_serde" "serde" "serde_bytes") ("default" "derive_serde"))))))

(define-public crate-ssbh_lib-0.9.0 (c (n "ssbh_lib") (v "0.9.0") (d (list (d (n "binread") (r "^2.1.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.2") (d #t) (k 0)) (d (n "half") (r "^1.7.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "ssbh_write_derive") (r "^0.7") (d #t) (k 0)))) (h "1dwwd8mhyk7l282rkhn70iml937qysa6fv21jykqydmhq0y8r83y") (f (quote (("hex_buffer" "derive_serde") ("derive_serde" "serde" "serde_bytes") ("default" "derive_serde"))))))

(define-public crate-ssbh_lib-0.10.1 (c (n "ssbh_lib") (v "0.10.1") (d (list (d (n "binread") (r "^2.1.1") (d #t) (k 0)) (d (n "half") (r "^1.7.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "ssbh_write_derive") (r "^0.10") (d #t) (k 0)))) (h "1f5fhslm2l992j15l5viwl34k5lf02nqmdfbri36hynlk1pvafv6") (f (quote (("hex_buffer" "derive_serde") ("derive_serde" "serde" "serde_bytes") ("default" "derive_serde"))))))

(define-public crate-ssbh_lib-0.11.0 (c (n "ssbh_lib") (v "0.11.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "binread") (r "^2.1.1") (d #t) (k 0)) (d (n "half") (r "^1.7.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "ssbh_write") (r "^0.11") (d #t) (k 0)))) (h "1vl6qrrhjipplkc7p5a8ryqnni1848ib86bh56kj644ivlfmlfvf") (f (quote (("hex_buffer" "serde" "hex") ("default" "serde" "serde_bytes"))))))

(define-public crate-ssbh_lib-0.12.0 (c (n "ssbh_lib") (v "0.12.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "binread") (r "^2.1.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "hexlit") (r "^0.5.3") (d #t) (k 2)) (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "ssbh_write") (r "^0.12") (d #t) (k 0)))) (h "067ak7i6dda5gn4mbgxvvfcmqxa4cj8mw19csznp7wq5fy61879f") (f (quote (("hex_buffer" "serde" "hex") ("default" "serde" "serde_bytes"))))))

(define-public crate-ssbh_lib-0.13.0 (c (n "ssbh_lib") (v "0.13.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "hexlit") (r "^0.5.3") (d #t) (k 2)) (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "ssbh_write") (r "^0.13") (d #t) (k 0)) (d (n "strum") (r "^0.23") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "063ql7qvkm942zzd4icdqw3pb7xw0jpjsxsl322bnjw9g0sadskx") (f (quote (("hex_buffer" "serde" "hex") ("default" "serde" "serde_bytes"))))))

(define-public crate-ssbh_lib-0.14.0 (c (n "ssbh_lib") (v "0.14.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "hexlit") (r "^0.5.3") (d #t) (k 2)) (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "ssbh_write") (r "^0.14") (d #t) (k 0)) (d (n "strum") (r "^0.23") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)))) (h "0gch3krf1ka76riydzxdajx56nrjdyd4xpzimwy5hcjjkf7sfkia") (f (quote (("hex_buffer" "serde" "hex") ("default" "serde" "serde_bytes"))))))

(define-public crate-ssbh_lib-0.15.0 (c (n "ssbh_lib") (v "0.15.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "binrw") (r "^0.8.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "hexlit") (r "^0.5.3") (d #t) (k 2)) (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "ssbh_write") (r "^0.15") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)))) (h "0pkjp3n4yhnfvd4bcq3frl4s35nhz4sgil7rqs2nvk8954hsgwkp") (f (quote (("serde_hex" "serde" "hex")))) (s 2) (e (quote (("serde" "dep:serde" "serde_bytes"))))))

(define-public crate-ssbh_lib-0.16.0 (c (n "ssbh_lib") (v "0.16.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "binrw") (r "^0.8.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "hexlit") (r "^0.5.3") (d #t) (k 2)) (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "ssbh_write") (r "^0.16") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)))) (h "00y3j1njmgjwz28rrh1s9028ydmzw977p2nx0992m1cxx0wnvrqf") (f (quote (("serde_hex" "serde" "hex")))) (s 2) (e (quote (("serde" "dep:serde" "serde_bytes"))))))

(define-public crate-ssbh_lib-0.17.0 (c (n "ssbh_lib") (v "0.17.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "binrw") (r "^0.11.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "hexlit") (r "^0.5.3") (d #t) (k 2)) (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "ssbh_write") (r "^0.17") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)))) (h "0x7nchxv261i24kdxnqkqla03mf7x0js4p8lw3ny5bl2lxgi51p4") (f (quote (("serde_hex" "serde" "hex")))) (s 2) (e (quote (("serde" "dep:serde" "serde_bytes"))))))

(define-public crate-ssbh_lib-0.18.0 (c (n "ssbh_lib") (v "0.18.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "binrw") (r "^0.13.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "hexlit") (r "^0.5.3") (d #t) (k 2)) (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "ssbh_write") (r "^0.18") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1ybfrn3ix77nvgqx1015aby44fm7mpn7376yv87d38ci01glh13s") (f (quote (("serde_hex" "serde" "hex")))) (s 2) (e (quote (("serde" "dep:serde" "serde_bytes"))))))

