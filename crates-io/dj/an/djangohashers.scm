(define-module (crates-io dj an djangohashers) #:use-module (crates-io))

(define-public crate-djangohashers-0.1.0 (c (n "djangohashers") (v "0.1.0") (d (list (d (n "bcrypt") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)))) (h "00j2bf904nc3rxqcz5pgzrd2xq2zdg9xphsw1bp8by75zk2ph2d1")))

(define-public crate-djangohashers-0.2.0 (c (n "djangohashers") (v "0.2.0") (d (list (d (n "bcrypt") (r "^0.1") (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)))) (h "00nmffx6ybsrc62x4maw312ss7vx8x9drs1fxw1gh76xg9djkym7") (f (quote (("fpbkdf2" "fastpbkdf2") ("default"))))))

(define-public crate-djangohashers-0.2.1 (c (n "djangohashers") (v "0.2.1") (d (list (d (n "bcrypt") (r "^0.1") (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)))) (h "18g9vln4808fc24k5vhz4mwyyq5q6hhwv6kq0pw1w8pb0hdq1xqs") (f (quote (("fpbkdf2" "fastpbkdf2") ("default"))))))

(define-public crate-djangohashers-0.2.2 (c (n "djangohashers") (v "0.2.2") (d (list (d (n "bcrypt") (r "^0.1") (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)))) (h "07rhc9nk4a6wqffwzslr3np8l3l3kw58j0i08z05w9mgjk3xq9ym") (f (quote (("fpbkdf2" "fastpbkdf2") ("default"))))))

(define-public crate-djangohashers-0.2.5 (c (n "djangohashers") (v "0.2.5") (d (list (d (n "bcrypt") (r "^0.1") (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.1") (d #t) (k 0)) (d (n "pwhash") (r "^0.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)))) (h "1sxnczsr0jhxrhbl2hwz0m3f1mdmr16nh7zsf374hi36hqqq1dwk") (f (quote (("fuzzy_tests") ("fpbkdf2" "fastpbkdf2") ("default"))))))

(define-public crate-djangohashers-0.2.6 (c (n "djangohashers") (v "0.2.6") (d (list (d (n "bcrypt") (r "^0.1") (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "pwhash") (r "^0.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)))) (h "1py5rmm6hsl25jxim87i2nq6nwp2y665xzlrhlna4bdk24f3d593") (f (quote (("fuzzy_tests") ("fpbkdf2" "fastpbkdf2") ("default"))))))

(define-public crate-djangohashers-0.2.7 (c (n "djangohashers") (v "0.2.7") (d (list (d (n "bcrypt") (r "^0.1") (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "pwhash") (r "^0.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)))) (h "1hsrw3da0x3bp5djaf55rmiz2p00fx1a4z42wd9dbs0qb1fmxwv5") (f (quote (("fuzzy_tests") ("fpbkdf2" "fastpbkdf2") ("default"))))))

(define-public crate-djangohashers-0.2.8 (c (n "djangohashers") (v "0.2.8") (d (list (d (n "base64") (r "^0.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.1") (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "pwhash") (r "^0.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)))) (h "0ryfa1jqh6cy82r7ns2kv4h5ha7xkgmw82452n9gckila7cjmhp4") (f (quote (("fuzzy_tests") ("fpbkdf2" "fastpbkdf2") ("default"))))))

(define-public crate-djangohashers-0.2.9 (c (n "djangohashers") (v "0.2.9") (d (list (d (n "base64") (r "^0.6") (d #t) (k 0)) (d (n "bcrypt") (r "^0.1") (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "pwhash") (r "^0.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)))) (h "0slf4fdapf6rnv3hcgxpjsxph1w7xikmyafc7ir8pg75a6xdy9c8") (f (quote (("fuzzy_tests") ("fpbkdf2" "fastpbkdf2") ("default"))))))

(define-public crate-djangohashers-0.2.10 (c (n "djangohashers") (v "0.2.10") (d (list (d (n "base64") (r "^0.6") (d #t) (k 0)) (d (n "bcrypt") (r "^0.1") (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "pwhash") (r "^0.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)))) (h "1qx99vpm15if7y8balkwj4p7c5mhzkjvlvnlr5c669nbmsx421vm") (f (quote (("fuzzy_tests") ("fpbkdf2" "fastpbkdf2") ("default"))))))

(define-public crate-djangohashers-0.2.11 (c (n "djangohashers") (v "0.2.11") (d (list (d (n "base64") (r "^0.6") (d #t) (k 0)) (d (n "bcrypt") (r "^0.1") (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "pwhash") (r "^0.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)))) (h "0h71w2ynns4fb9b5dmf5sdvr898smfwz4wc3n0isbihxg9kwr6p4") (f (quote (("fuzzy_tests") ("fpbkdf2" "fastpbkdf2") ("default"))))))

(define-public crate-djangohashers-0.2.12 (c (n "djangohashers") (v "0.2.12") (d (list (d (n "base64") (r "^0.8") (d #t) (k 0)) (d (n "bcrypt") (r "^0.1") (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "pwhash") (r "^0.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.5") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)))) (h "18v7syi294nk4wfvz178w2gmymbsd9q270jni41a2rqv9j3h2yvr") (f (quote (("fuzzy_tests") ("fpbkdf2" "fastpbkdf2") ("default"))))))

(define-public crate-djangohashers-0.3.0 (c (n "djangohashers") (v "0.3.0") (d (list (d (n "base64") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "pwhash") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.5") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)))) (h "0q1p2j595z1wln45w6vbblmnls2k0w0qlxwpvcbr9hj2i3pjciz3") (f (quote (("with_pbkdf2" "base64" "constant_time_eq") ("with_legacy" "pwhash" "constant_time_eq") ("with_bcrypt" "bcrypt") ("with_argon2" "base64" "cargon" "constant_time_eq") ("fuzzy_tests") ("fpbkdf2" "with_pbkdf2" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-0.3.1 (c (n "djangohashers") (v "0.3.1") (d (list (d (n "base64") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "pwhash") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)))) (h "0sx4r7kkhxdxivvazhfbkr4ca821i29hk762174jrm1fp7dsyysf") (f (quote (("with_pbkdf2" "base64" "constant_time_eq") ("with_legacy" "pwhash" "constant_time_eq") ("with_bcrypt" "bcrypt") ("with_argon2" "base64" "cargon" "constant_time_eq") ("fuzzy_tests") ("fpbkdf2" "with_pbkdf2" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-0.3.2 (c (n "djangohashers") (v "0.3.2") (d (list (d (n "base64") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "pwhash") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)))) (h "0732m6n3l3q9gb83mm4wyq6x23sbskcycx6dqhgcfq3w9rfnkdh1") (f (quote (("with_pbkdf2" "base64" "constant_time_eq") ("with_legacy" "pwhash" "constant_time_eq") ("with_bcrypt" "bcrypt") ("with_argon2" "base64" "cargon" "constant_time_eq") ("fuzzy_tests") ("fpbkdf2" "with_pbkdf2" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.0.0 (c (n "djangohashers") (v "1.0.0") (d (list (d (n "base64") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (o #t) (d #t) (k 0)))) (h "0w294241q7w6vrb9ac501g7q1bc6q193y9vmgwcz5x9dmixiaj39") (f (quote (("with_pbkdf2" "base64" "constant_time_eq" "pbkdf2" "sha-1" "sha2" "hmac") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "cargon" "constant_time_eq") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.0.1 (c (n "djangohashers") (v "1.0.1") (d (list (d (n "base64") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (o #t) (k 0)) (d (n "pwhash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (o #t) (d #t) (k 0)))) (h "0qyzyvxkn943cfgwngh4a3prxbqzgrcsq97d34yqv5094w0hdw2n") (f (quote (("with_pbkdf2" "base64" "constant_time_eq" "pbkdf2" "sha-1" "sha2" "hmac") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "cargon" "constant_time_eq") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.1.0 (c (n "djangohashers") (v "1.1.0") (d (list (d (n "base64") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (o #t) (k 0)) (d (n "pwhash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (o #t) (d #t) (k 0)))) (h "1rv3gfhbrjdyc3zdi566jghz2h5wlbq23ch70lj5bg5x8qd7zykr") (f (quote (("with_pbkdf2" "base64" "constant_time_eq" "pbkdf2" "sha-1" "sha2" "hmac") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "cargon" "constant_time_eq") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.1.1 (c (n "djangohashers") (v "1.1.1") (d (list (d (n "base64") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (o #t) (k 0)) (d (n "pwhash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (o #t) (d #t) (k 0)))) (h "1rcgmvhcmpig15mnsa8b7mv7dd9lrcs6fcr23f9dm0vcz8i41m2v") (f (quote (("with_pbkdf2" "base64" "constant_time_eq" "pbkdf2" "sha-1" "sha2" "hmac") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "cargon" "constant_time_eq") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.2.0 (c (n "djangohashers") (v "1.2.0") (d (list (d (n "base64") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (o #t) (k 0)) (d (n "pwhash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (o #t) (d #t) (k 0)))) (h "0bla4x5dgrs7m3xibpfhv35ip685pnndbwpw18qn2g22nrcb5any") (f (quote (("with_pbkdf2" "base64" "constant_time_eq" "pbkdf2" "sha-1" "sha2" "hmac") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "cargon" "constant_time_eq") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.2.1 (c (n "djangohashers") (v "1.2.1") (d (list (d (n "base64") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "cargon") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (o #t) (k 0)) (d (n "pwhash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (o #t) (d #t) (k 0)))) (h "13ilfkyjc23r6mnfc784bnvkbg6h33dl506zm3zbmbdwh2k8i45p") (f (quote (("with_pbkdf2" "base64" "constant_time_eq" "pbkdf2" "sha-1" "sha2" "hmac") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "cargon" "constant_time_eq") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.3.0 (c (n "djangohashers") (v "1.3.0") (d (list (d (n "base64") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.4.0") (o #t) (k 0)) (d (n "pwhash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "rust-argon2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "0xh8c6gwfq0zw7cqar7zlfp7kp1n013hcif8p3xkvrvyfclcyb4x") (f (quote (("with_pbkdf2" "base64" "constant_time_eq" "pbkdf2" "sha-1" "sha2" "hmac") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.3.1 (c (n "djangohashers") (v "1.3.1") (d (list (d (n "base64") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.5.0") (o #t) (k 0)) (d (n "pwhash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "rust-argon2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "0mfzsiqwjkqvwcn9k6v4vmq7lmpwrad0683vkp4ysclmnpr623v1") (f (quote (("with_pbkdf2" "base64" "constant_time_eq" "pbkdf2" "sha-1" "sha2" "hmac") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.3.2 (c (n "djangohashers") (v "1.3.2") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.6.0") (o #t) (k 0)) (d (n "pwhash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "rust-argon2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "1cfgraw9vj6gwsk1gd6glcv3c1p331g4s0k01hjn9mwa8yxyvfwl") (f (quote (("with_pbkdf2" "base64" "constant_time_eq" "pbkdf2" "sha-1" "sha2" "hmac") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.4.0 (c (n "djangohashers") (v "1.4.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "09a3gdy71xannirvrdm31v0q22l19153v97i2ah3gcyanbsis40b") (f (quote (("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.4.1 (c (n "djangohashers") (v "1.4.1") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "0iknk3wmhxdj8db58ps1nmr42kdyhdsfsj6whlvi7wyg05ixx3q0") (f (quote (("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.4.2 (c (n "djangohashers") (v "1.4.2") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "1k6kcgc8xkz23f5vvhbcrghpar2fdbbz4rxn0hsv18cp9ll8mi0f") (f (quote (("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.4.3 (c (n "djangohashers") (v "1.4.3") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "0nihqdrbxjb0whcgkhck3gl5mcmhfayh76pbvl549arilcyx6cbi") (f (quote (("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.5.0 (c (n "djangohashers") (v "1.5.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (o #t) (d #t) (k 0)))) (h "0dinfnxm94786xpwslh6kdy3x14ix54d2pyqsspgaw5nkkipnz1d") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.5.1 (c (n "djangohashers") (v "1.5.1") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (o #t) (d #t) (k 0)))) (h "07pz6bkkkh6578d6dhnr1xgx19krv0964msfdry6h2gcx16wxpn7") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_scrypt" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.5.2 (c (n "djangohashers") (v "1.5.2") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (o #t) (d #t) (k 0)))) (h "0qdyhfw6imc29qj05s2cfic4iqi70raipd69qzhd5152y2ampwqp") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_scrypt" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.5.3 (c (n "djangohashers") (v "1.5.3") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (o #t) (d #t) (k 0)))) (h "1cq4fsj3nn3f7l93akp377p17rfs8rgznaxbdc6fa3hjkfsdaaz3") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_scrypt" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.5.4 (c (n "djangohashers") (v "1.5.4") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (o #t) (d #t) (k 0)))) (h "1i5n5k63rz4r4hlk0qnnd4j1202jpqml4z1gyshpjywprf5dgrgx") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_scrypt" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.5.5 (c (n "djangohashers") (v "1.5.5") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "1jfgciryhy66css156k6j3pb1wwgm1mx5xycqmc7kz2mcb53dx3i") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_scrypt" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.5.6 (c (n "djangohashers") (v "1.5.6") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "1pmliidp852m5h5y7ycnx8w8zk6wya3d1k9yqp44rsfnngn9v09h") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_scrypt" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.5.7 (c (n "djangohashers") (v "1.5.7") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "13536rd72dz6is5254xx6n6az66dabqqh6f007g5qsjj36z74fcd") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_scrypt" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.5.8 (c (n "djangohashers") (v "1.5.8") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "02k0hrf2k9l19b51fk5jp0k3f9gqdjgwjfyjgk5myz5rdicgb9r5") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_scrypt" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.5.9 (c (n "djangohashers") (v "1.5.9") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "0fi9p0y9b1lkkl0ni72f7cmr0b51qdafxx8705shgfhy7rsw3mgd") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_scrypt" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.5.10 (c (n "djangohashers") (v "1.5.10") (d (list (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "0c1467lnvj0zaqpwkj2hqpz1rln6m27rvr3hvm15435j651yzwqx") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_scrypt" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.6.0 (c (n "djangohashers") (v "1.6.0") (d (list (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "0g9n7nnz563gl436wv54cf3m6kssmnfcqy1ycy4090x7i3vg1lpa") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_scrypt" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.6.1 (c (n "djangohashers") (v "1.6.1") (d (list (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "0vggh096rvcx97zjwddai9a60arb75q42k9dym12lyyqjd7drsqd") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_scrypt" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.6.2 (c (n "djangohashers") (v "1.6.2") (d (list (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "0ll1gf3v5wsq9xbhfgq0mn86rrrk5baqhvinwb8ypg747hlszxas") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_scrypt" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.6.3 (c (n "djangohashers") (v "1.6.3") (d (list (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "15qx9qvmkih1jys4lp4ypjj6qkzpl8dgckkb6ncpifb283w1sq4s") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_scrypt" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.6.4 (c (n "djangohashers") (v "1.6.4") (d (list (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "1yr4l5sh5sl7j4c4vwj4xa3h0jzr22ygdw8f02cj53wwaqjpfp19") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_scrypt" "with_bcrypt" "with_legacy")))) (y #t)))

(define-public crate-djangohashers-1.6.5 (c (n "djangohashers") (v "1.6.5") (d (list (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "0222n9kqn4j9mry74zvhgk5q4zpniqx9nlnfyp7plz3bslxp7ps3") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_scrypt" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.6.6 (c (n "djangohashers") (v "1.6.6") (d (list (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "0b6mj2bsjb5h9p8kgxs0crhl1k5x0df9qyjc6njx110jwi1viz08") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_scrypt" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.6.7 (c (n "djangohashers") (v "1.6.7") (d (list (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "0fcyi7bx6dxiilqfvzlkk8m72babkln9hg776fjj6ksw2w4s4v0d") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_scrypt" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.6.8 (c (n "djangohashers") (v "1.6.8") (d (list (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "130xv2hq37kcwb8iagiy5gbmkriq7nwy08rajf0a4wqj1789rykg") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_scrypt" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.7.0 (c (n "djangohashers") (v "1.7.0") (d (list (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.16") (o #t) (k 0)) (d (n "rust-argon2") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "1fvg4dy32kkafivdv08rck52a7kffk3yzh38hw34ikcjdzw4kj3b") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_scrypt" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.7.1 (c (n "djangohashers") (v "1.7.1") (d (list (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.17") (o #t) (k 0)) (d (n "rust-argon2") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "1wcjrphixjfzv27dgp53vwlxblf6v7yj10pv8jc111a6kiyabiji") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_scrypt" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.7.2 (c (n "djangohashers") (v "1.7.2") (d (list (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.17") (o #t) (k 0)) (d (n "rust-argon2") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "1qgg8ialm96icn3hawb3wzhjvz0fzpyhdgc9c60l7fvg3jamj0sy") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_scrypt" "with_bcrypt" "with_legacy"))))))

(define-public crate-djangohashers-1.7.3 (c (n "djangohashers") (v "1.7.3") (d (list (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "bcrypt") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "fastpbkdf2") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "pwhash") (r "^1.0") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.17") (o #t) (k 0)) (d (n "rust-argon2") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "scrypt") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)))) (h "1cxhivv9yf5dgs6waqhm1pbk7dhvadyxbxc6kzab119d8cq8q248") (f (quote (("with_scrypt" "base64" "constant_time_eq" "scrypt") ("with_pbkdf2" "base64" "constant_time_eq" "ring") ("with_legacy" "pwhash" "constant_time_eq" "md-5" "sha-1" "hex_fmt") ("with_bcrypt" "bcrypt" "sha2") ("with_argon2" "base64" "constant_time_eq" "rust-argon2") ("fuzzy_tests") ("fpbkdf2" "base64" "constant_time_eq" "fastpbkdf2") ("default" "with_pbkdf2" "with_argon2" "with_scrypt" "with_bcrypt" "with_legacy"))))))

