(define-module (crates-io fu mo fumola) #:use-module (crates-io))

(define-public crate-fumola-0.0.28 (c (n "fumola") (v "0.0.28") (d (list (d (n "candid") (r "^0.8") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "dyn-clone") (r "^1.0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "im-rc") (r "^15.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.7") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.8") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "logos") (r "^0.12.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty") (r "^0.11.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "rustyline") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.143") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.26") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 0)))) (h "1vwf8z9k6mqrbii3fnv047s1b545yirncxirrgaiywgwc33ac3n4") (f (quote (("value-reflection") ("to-motoko") ("serde-paths" "serde_path_to_error") ("reflection" "value-reflection" "core-reflection") ("parser") ("exe" "rustyline") ("default" "parser" "to-motoko") ("core-reflection"))))))

(define-public crate-fumola-0.0.29 (c (n "fumola") (v "0.0.29") (d (list (d (n "candid") (r "^0.8") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "dyn-clone") (r "^1.0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "im-rc") (r "^15.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.7") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.8") (d #t) (k 0)) (d (n "line-col") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "logos") (r "^0.12.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty") (r "^0.11.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "rustyline") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.143") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.26") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 0)))) (h "1a5fx7sd6wa63ypzxk2gbn6lzx3w1274xb1xlw6dayzj4yinhklw") (f (quote (("value-reflection") ("to-motoko") ("serde-paths" "serde_path_to_error") ("reflection" "value-reflection" "core-reflection") ("parser") ("exe" "rustyline") ("default" "parser" "to-motoko") ("core-reflection"))))))

