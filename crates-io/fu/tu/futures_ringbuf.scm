(define-module (crates-io fu tu futures_ringbuf) #:use-module (crates-io))

(define-public crate-futures_ringbuf-0.1.0 (c (n "futures_ringbuf") (v "0.1.0") (d (list (d (n "futures-preview") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha") (f (quote ("async-await" "nightly"))) (d #t) (k 2)) (d (n "futures-test-preview") (r "^0.3.0-alpha") (d #t) (k 2)) (d (n "futures_codec") (r "^0.2") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "ringbuf") (r "^0.1") (d #t) (k 0)))) (h "02gv591lqkqanyiw6v83dq0r7d6phxlxml4bjnpw0j1a97dk8mvn") (f (quote (("external_doc"))))))

(define-public crate-futures_ringbuf-0.1.1 (c (n "futures_ringbuf") (v "0.1.1") (d (list (d (n "futures-preview") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha") (f (quote ("async-await" "nightly"))) (d #t) (k 2)) (d (n "futures-test-preview") (r "^0.3.0-alpha") (d #t) (k 2)) (d (n "futures_codec") (r "^0.2") (d #t) (k 2)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "naja_async_runtime") (r "^0.3") (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "ringbuf") (r "^0.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "05n53yksb5hbr4zjvbj2vdh7fy5qdvfmr6kq33j9wn6wfp7882iw") (f (quote (("external_doc"))))))

(define-public crate-futures_ringbuf-0.1.2 (c (n "futures_ringbuf") (v "0.1.2") (d (list (d (n "futures-preview") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha") (f (quote ("async-await" "nightly"))) (d #t) (k 2)) (d (n "futures-test-preview") (r "^0.3.0-alpha") (d #t) (k 2)) (d (n "futures_codec") (r "^0.2") (d #t) (k 2)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "naja_async_runtime") (r "^0.3") (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "ringbuf") (r "^0.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1s5b8r1y94kl322rlidapladmpq0ws9ij8r80hxxrsr8r1m00wgc") (f (quote (("external_doc"))))))

(define-public crate-futures_ringbuf-0.1.3 (c (n "futures_ringbuf") (v "0.1.3") (d (list (d (n "futures-preview") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha") (f (quote ("async-await"))) (d #t) (k 2)) (d (n "futures-test-preview") (r "^0.3.0-alpha") (d #t) (k 2)) (d (n "futures_codec") (r "^0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "ringbuf") (r "^0.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1pk113n6imklmch2a9iyrmal5an5l8lj1iscwwsh40dx38lgj3n8") (f (quote (("external_doc"))))))

(define-public crate-futures_ringbuf-0.1.4 (c (n "futures_ringbuf") (v "0.1.4") (d (list (d (n "futures-preview") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha") (f (quote ("async-await"))) (d #t) (k 2)) (d (n "futures-test-preview") (r "^0.3.0-alpha") (d #t) (k 2)) (d (n "futures_codec") (r "^0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "ringbuf") (r "^0.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "030w3sngaxvmdd9bm2j28grz3m5cj17hb446k1m3d3bf7mg8qaiy") (f (quote (("external_doc"))))))

(define-public crate-futures_ringbuf-0.1.5 (c (n "futures_ringbuf") (v "0.1.5") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "ergo-pin") (r "^0.1") (d #t) (k 2)) (d (n "futures-preview") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha") (f (quote ("async-await"))) (d #t) (k 2)) (d (n "futures-test-preview") (r "^0.3.0-alpha") (d #t) (k 2)) (d (n "futures_codec") (r "^0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "ringbuf") (r "^0.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0xp6w1qkfcvs0vqg4x0ya77rm6qmizhxnmggcz8zcjzdmf91vvbs") (f (quote (("external_doc"))))))

(define-public crate-futures_ringbuf-0.1.6 (c (n "futures_ringbuf") (v "0.1.6") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "ergo-pin") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "futures-test") (r "^0.3.0") (d #t) (k 2)) (d (n "futures_codec") (r "^0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "ringbuf") (r "^0.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "19n3cxq3k9bv5qgfp29hw10g4in1ng998a6xlycms2wbdn3sqyd2") (f (quote (("external_doc"))))))

(define-public crate-futures_ringbuf-0.1.7 (c (n "futures_ringbuf") (v "0.1.7") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "ergo-pin") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "futures-test") (r "^0.3.0") (d #t) (k 2)) (d (n "futures_codec") (r "^0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "ringbuf") (r "^0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1qgmgp2ywbdavyxwq56w56lw4lmgilsf59l6f3mwcgbsn390byh1") (f (quote (("external_doc"))))))

(define-public crate-futures_ringbuf-0.2.0 (c (n "futures_ringbuf") (v "0.2.0") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "ergo-pin") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3.0") (d #t) (k 2)) (d (n "futures_codec") (r "^0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "ringbuf") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio-util") (r "^0.2") (f (quote ("codec"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "12qkc9n1sfwkhwzl5jq2nq6xrc5kaz4x5ghlkqzhfar2war35mrh") (f (quote (("futures_io") ("external_doc") ("default" "futures_io"))))))

(define-public crate-futures_ringbuf-0.2.1 (c (n "futures_ringbuf") (v "0.2.1") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "ergo-pin") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3.0") (d #t) (k 2)) (d (n "futures_codec") (r "^0.4") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "ringbuf") (r "^0.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "tokio") (r "^0.2") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio-util") (r "^0.2") (f (quote ("codec"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0c7syimcwpxp566v5q69njh0slwp4zaksysk4s4i051dwly5gd0d") (f (quote (("futures_io") ("default" "futures_io"))))))

(define-public crate-futures_ringbuf-0.3.0 (c (n "futures_ringbuf") (v "0.3.0") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "ergo-pin") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3.0") (d #t) (k 2)) (d (n "futures_codec") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log-derive") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.3") (d #t) (k 1)) (d (n "tokio") (r "^0.3") (f (quote ("io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.5") (f (quote ("codec" "compat"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1zb06ixpb2jrgi1a1v7sjivrvsac8npml18vvgrk75jp32km941a") (f (quote (("sketchy" "rand" "rand_chacha") ("default"))))))

(define-public crate-futures_ringbuf-0.3.1 (c (n "futures_ringbuf") (v "0.3.1") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 2)) (d (n "ergo-pin") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log-derive") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec" "compat"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1p3x11iyp9nyskdzy0g27i3qmqxhk18n3x7rl6r67g8ran5hj1dr") (f (quote (("sketchy" "rand" "rand_chacha" "getrandom") ("default"))))))

(define-public crate-futures_ringbuf-0.4.0 (c (n "futures_ringbuf") (v "0.4.0") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 2)) (d (n "ergo-pin") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ringbuf") (r "^0.3") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec" "compat"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1iyykgwn7xpaqcw9ns7pa00qn59xqiq0dk90xgm4piqzxfvana36") (f (quote (("sketchy" "rand" "rand_chacha" "getrandom") ("default"))))))

