(define-module (crates-io fu tu futuresdr) #:use-module (crates-io))

(define-public crate-futuresdr-0.0.1-experimental (c (n "futuresdr") (v "0.0.1-experimental") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "config") (r "^0.11") (d #t) (k 0)) (d (n "dirs") (r "^3.0") (d #t) (k 0)) (d (n "flexbuffers") (r "^2.0") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_off"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "vec-arena") (r "^1.0") (d #t) (k 0)))) (h "11mgkdw9mngg9cl178zk2ygk2hrmxyn6rqgm9id26mm2qhc4l064")))

(define-public crate-futuresdr-0.0.2 (c (n "futuresdr") (v "0.0.2") (d (list (d (n "android_logger") (r "^0.10.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.14.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.11.0") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-pmt") (r "^0.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2.99") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_off"))) (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.63") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (f (quote ("json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustfft") (r "^6.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.0") (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), not(target_os = \"android\")))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.14.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.25.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.25.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-rs-async-executor") (r "^0.9.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("sysinfoapi" "winbase" "handleapi" "memoryapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "xilinx-dma") (r "^0.0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)))) (h "0j15msby36ihadqdaqvl52v4mchpd4a308858jmybmzkyk56gxby") (f (quote (("zynq" "xilinx-dma") ("vulkan" "vulkano" "vulkano-shaders") ("soapy" "soapysdr") ("default" "soapy" "vulkan"))))))

(define-public crate-futuresdr-0.0.3 (c (n "futuresdr") (v "0.0.3") (d (list (d (n "android_logger") (r "^0.10.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.14.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.11.0") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-pmt") (r "^0.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2.99") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_off"))) (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.63") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (f (quote ("json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustfft") (r "^6.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.0") (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), not(target_os = \"android\")))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.14.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.25.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.25.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-rs-async-executor") (r "^0.9.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("sysinfoapi" "winbase" "handleapi" "memoryapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "xilinx-dma") (r "^0.0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)))) (h "1szdl6n52snjzr1gs5023m20mlkk39zswphgx7mdfs6614vkgnac") (f (quote (("zynq" "xilinx-dma") ("vulkan" "vulkano" "vulkano-shaders") ("soapy" "soapysdr") ("default" "soapy" "vulkan"))))))

(define-public crate-futuresdr-0.0.4 (c (n "futuresdr") (v "0.0.4") (d (list (d (n "android_logger") (r "^0.10.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.14.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.11.0") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-pmt") (r "^0.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2.99") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_off"))) (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.63") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (f (quote ("json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustfft") (r "^6.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.0") (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), not(target_os = \"android\")))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.14.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.25.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.25.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-rs-async-executor") (r "^0.9.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("sysinfoapi" "winbase" "handleapi" "memoryapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "xilinx-dma") (r "^0.0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)))) (h "00cvhz65flrkqa6pcmpvxfma69n7c65919jpvw0sx8c10yl0al6z") (f (quote (("zynq" "xilinx-dma") ("vulkan" "vulkano" "vulkano-shaders") ("soapy" "soapysdr") ("default" "soapy" "vulkan"))))))

(define-public crate-futuresdr-0.0.5 (c (n "futuresdr") (v "0.0.5") (d (list (d (n "android_logger") (r "^0.10.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.14.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.11.0") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-pmt") (r "^0.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2.99") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_off"))) (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.63") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (f (quote ("json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rodio") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustfft") (r "^6.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.0") (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), not(target_os = \"android\")))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.14.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.25.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.25.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-rs-async-executor") (r "^0.9.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("sysinfoapi" "winbase" "handleapi" "memoryapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "xilinx-dma") (r "^0.0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "zmq") (r "^0.9") (o #t) (d #t) (k 0)))) (h "0b4n63yb2cj7q88gv7dnlj104d9gvsk0gxiq9cxqg56y3jrp0qqv") (f (quote (("zynq" "xilinx-dma") ("zeromq" "zmq") ("vulkan" "vulkano" "vulkano-shaders") ("soapy" "soapysdr") ("default") ("audio" "cpal" "rodio"))))))

(define-public crate-futuresdr-0.0.6 (c (n "futuresdr") (v "0.0.6") (d (list (d (n "android_logger") (r "^0.10.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.14.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.11.0") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-pmt") (r "^0.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2.99") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_off"))) (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.63") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (f (quote ("json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rodio") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustfft") (r "^6.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.0") (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), not(target_os = \"android\")))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.14.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.25.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.25.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-rs-async-executor") (r "^0.9.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("sysinfoapi" "winbase" "handleapi" "memoryapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "xilinx-dma") (r "^0.0.3") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "zmq") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1icklxqykcr9kil30075mn75mdg4g4px5zipwhlqxhqq4cq2vri7") (f (quote (("zynq" "xilinx-dma") ("zeromq" "zmq") ("vulkan" "vulkano" "vulkano-shaders") ("tpb_scheduler") ("soapy" "soapysdr") ("flow_scheduler") ("default") ("block_builder") ("audio" "cpal" "rodio"))))))

(define-public crate-futuresdr-0.0.7 (c (n "futuresdr") (v "0.0.7") (d (list (d (n "android_logger") (r "^0.10.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.14.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.11.0") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-pmt") (r "^0.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2.99") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_off"))) (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.63") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (f (quote ("json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rodio") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustfft") (r "^6.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.0") (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), not(target_os = \"android\")))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.14.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.25.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.25.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-rs-async-executor") (r "^0.9.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("sysinfoapi" "winbase" "handleapi" "memoryapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "xilinx-dma") (r "^0.0.3") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "zmq") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1sbmv6yj9ibl0wavxsxfw5k3b9m0qc6mzqa1s3c45iscsm0b6vyw") (f (quote (("zynq" "xilinx-dma") ("zeromq" "zmq") ("vulkan" "vulkano" "vulkano-shaders") ("tpb_scheduler") ("soapy" "soapysdr") ("flow_scheduler") ("default") ("block_builder") ("audio" "cpal" "rodio"))))))

(define-public crate-futuresdr-0.0.8 (c (n "futuresdr") (v "0.0.8") (d (list (d (n "android_logger") (r "^0.10.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.16.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^2.34") (d #t) (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.11.0") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-pmt") (r "^0.0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.109") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_off"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.71") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (f (quote ("json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rocket_cors") (r "^0.5.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rodio") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustfft") (r "^6.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.131") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.1") (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), not(target_os = \"android\")))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.16.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.27.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.27.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-rs-async-executor") (r "^0.9.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("sysinfoapi" "winbase" "handleapi" "memoryapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "xilinx-dma") (r "^0.0.6") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "zmq") (r "^0.9") (o #t) (d #t) (k 0)))) (h "0fl7725329hd11vqgsf8cpbmav1mk8iq9acb02w6q6m74kxfm65s") (f (quote (("zynq" "xilinx-dma") ("zeromq" "zmq") ("vulkan" "vulkano" "vulkano-shaders") ("tpb_scheduler") ("soapy" "soapysdr") ("lttng" "lttng-ust" "lttng-ust-generate") ("flow_scheduler") ("default") ("audio" "cpal" "rodio"))))))

(define-public crate-futuresdr-0.0.9 (c (n "futuresdr") (v "0.0.9") (d (list (d (n "android_logger") (r "^0.10.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.16.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^2.34") (d #t) (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.11.0") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-pmt") (r "^0.0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.109") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_off"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.71") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (f (quote ("json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rocket_cors") (r "^0.5.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rodio") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustfft") (r "^6.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.131") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.1") (o #t) (d #t) (t "cfg(all(not(target_arch = \"wasm32\"), not(target_os = \"android\")))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.16.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.27.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.27.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-rs-async-executor") (r "^0.9.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("sysinfoapi" "winbase" "handleapi" "memoryapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "xilinx-dma") (r "^0.0.6") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "zmq") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1agsks7rlbharw728n7yq4xkl1gpmfvgx935qa5f9ildil3n4mg3") (f (quote (("zynq" "xilinx-dma") ("zeromq" "zmq") ("vulkan" "vulkano" "vulkano-shaders") ("tpb_scheduler") ("soapy" "soapysdr") ("lttng" "lttng-ust" "lttng-ust-generate") ("flow_scheduler") ("default") ("audio" "cpal" "rodio"))))))

(define-public crate-futuresdr-0.0.10 (c (n "futuresdr") (v "0.0.10") (d (list (d (n "android_logger") (r "^0.10.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.16.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.4.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^3.0.10") (d #t) (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.11.0") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-frontend") (r "^0.0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futuresdr-pmt") (r "^0.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2.113") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_off"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.71") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.2.0") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.16.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.27.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.27.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("sysinfoapi" "winbase" "handleapi" "memoryapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "zmq") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1mwdjch94l9dyrsjmpkywzr7jx23ighi09yzm9hschqhnsahdysk") (f (quote (("zynq" "xilinx-dma") ("zeromq" "zmq") ("vulkan" "vulkano" "vulkano-shaders") ("tpb_scheduler") ("soapy" "soapysdr") ("lttng" "lttng-ust" "lttng-ust-generate") ("flow_scheduler") ("default") ("audio" "cpal" "rodio"))))))

(define-public crate-futuresdr-0.0.11 (c (n "futuresdr") (v "0.0.11") (d (list (d (n "android_logger") (r "^0.10.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.16.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.4.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^3.0.10") (d #t) (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.11.0") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-frontend") (r "^0.0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futuresdr-pmt") (r "^0.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2.113") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_off"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.71") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.2.0") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.16.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.27.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.27.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("sysinfoapi" "winbase" "handleapi" "memoryapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "zmq") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1ksvhgqjgjw20haib7y02i7scmsyj831cz0zi960qk55z2vg484s") (f (quote (("zynq" "xilinx-dma") ("zeromq" "zmq") ("vulkan" "vulkano" "vulkano-shaders") ("tpb_scheduler") ("soapy" "soapysdr") ("lttng" "lttng-ust" "lttng-ust-generate") ("flow_scheduler") ("default") ("audio" "cpal" "rodio"))))))

(define-public crate-futuresdr-0.0.12 (c (n "futuresdr") (v "0.0.12") (d (list (d (n "android_logger") (r "^0.10.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.16.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.4.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.11.0") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-frontend") (r "^0.0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futuresdr-pmt") (r "^0.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2.113") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_off"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.71") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.14.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.2.0") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tungstenite") (r "^0.16.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.27.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.27.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("sysinfoapi" "winbase" "handleapi" "memoryapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "zmq") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1x4wyw2h1wxfk6xvpskq4ywanckczrcjm7y3w7y8iwyiizf7801l") (f (quote (("zynq" "xilinx-dma") ("zeromq" "zmq") ("vulkan" "vulkano" "vulkano-shaders") ("tpb_scheduler") ("soapy" "soapysdr") ("lttng" "lttng-ust" "lttng-ust-generate") ("flow_scheduler") ("default") ("audio" "cpal" "rodio"))))))

(define-public crate-futuresdr-0.0.13 (c (n "futuresdr") (v "0.0.13") (d (list (d (n "android_logger") (r "^0.10.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.4.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.11.0") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-frontend") (r "^0.0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futuresdr-pmt") (r "^0.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2.113") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_off"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.71") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.2.0") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.28.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.28.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("sysinfoapi" "winbase" "handleapi" "memoryapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "zmq") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1yq51sfli3jb0vsvx88xlmlc8a0836vnf51xkpdisyfnm7rjzzfk") (f (quote (("zynq" "xilinx-dma") ("zeromq" "zmq") ("vulkan" "vulkano" "vulkano-shaders") ("tpb_scheduler") ("soapy" "soapysdr") ("lttng" "lttng-ust" "lttng-ust-generate") ("flow_scheduler") ("default") ("audio" "cpal" "rodio"))))))

(define-public crate-futuresdr-0.0.14 (c (n "futuresdr") (v "0.0.14") (d (list (d (n "android_logger") (r "^0.10.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.4.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.11.0") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-frontend") (r "^0.0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futuresdr-pmt") (r "^0.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2.113") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.71") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.2.0") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.28.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.28.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("sysinfoapi" "winbase" "handleapi" "memoryapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "zmq") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1nd727f7s0xcbq51qx8qgi2rrbbdz7qbxdggzq0s9r5zlnljpcpw") (f (quote (("zynq" "xilinx-dma") ("zeromq" "zmq") ("vulkan" "vulkano" "vulkano-shaders") ("tpb_scheduler") ("soapy" "soapysdr") ("lttng" "lttng-ust" "lttng-ust-generate") ("flow_scheduler") ("default") ("audio" "cpal" "rodio"))))))

(define-public crate-futuresdr-0.0.15 (c (n "futuresdr") (v "0.0.15") (d (list (d (n "android_logger") (r "^0.11.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-frontend") (r "^0.0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futuresdr-pmt") (r "^0.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hound") (r "^3.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.113") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.71") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.3.3") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vmcircbuffer") (r "^0.0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.29.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.29.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "zmq") (r "^0.9.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "10mmi20sphd0k03j7cgmxrn67s8pb4q3lgc4314x4x2cn8qaps0g") (f (quote (("zynq" "xilinx-dma") ("zeromq" "zmq/vendored") ("wav" "hound") ("vulkan" "vulkano" "vulkano-shaders") ("tpb_scheduler") ("soapy" "soapysdr") ("lttng" "lttng-ust" "lttng-ust-generate") ("flow_scheduler") ("default") ("audio" "cpal" "hound" "rodio"))))))

(define-public crate-futuresdr-0.0.16 (c (n "futuresdr") (v "0.0.16") (d (list (d (n "android_logger") (r "^0.11.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-frontend") (r "^0.0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futuresdr-pmt") (r "^0.0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hound") (r "^3.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.113") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.71") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.3.3") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vmcircbuffer") (r "^0.0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.29.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.29.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "zmq") (r "^0.9.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1dn5f7v728jx0c71m0ha3k29f39c9l5bk5f6kjhf274lg5hvd35v") (f (quote (("zynq" "xilinx-dma") ("zeromq" "zmq/vendored") ("wav" "hound") ("vulkan" "vulkano" "vulkano-shaders") ("tpb_scheduler") ("soapy" "soapysdr") ("lttng" "lttng-ust" "lttng-ust-generate") ("flow_scheduler") ("default") ("audio" "cpal" "hound" "rodio"))))))

(define-public crate-futuresdr-0.0.17 (c (n "futuresdr") (v "0.0.17") (d (list (d (n "android_logger") (r "^0.11.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-frontend") (r "^0.0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futuresdr-pmt") (r "^0.0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hound") (r "^3.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.3.3") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vmcircbuffer") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.29.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.29.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "zmq") (r "^0.9.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "044a0j1442winfwc5vavjwfmwpjs43gkgw3aifhnjlkiw3ff8a46") (f (quote (("zynq" "xilinx-dma") ("zeromq" "zmq/vendored") ("wav" "hound") ("vulkan" "vulkano" "vulkano-shaders") ("tpb_scheduler") ("soapy" "soapysdr") ("lttng" "lttng-ust" "lttng-ust-generate") ("flow_scheduler") ("default") ("audio" "cpal" "hound" "rodio"))))))

(define-public crate-futuresdr-0.0.18 (c (n "futuresdr") (v "0.0.18") (d (list (d (n "android_logger") (r "^0.11.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-frontend") (r "^0.0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futuresdr-pmt") (r "^0.0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hound") (r "^3.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.3.3") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vmcircbuffer") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.29.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.29.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "zmq") (r "^0.9.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0qayq0zjdz6919lvzmmzarf7qnnd97s92l0xsclp8jynlsfk2fgb") (f (quote (("zynq" "xilinx-dma") ("zeromq" "zmq/vendored") ("wav" "hound") ("vulkan" "vulkano" "vulkano-shaders") ("tpb_scheduler") ("soapy" "soapysdr") ("lttng" "lttng-ust" "lttng-ust-generate") ("flow_scheduler") ("default") ("audio" "cpal" "hound" "rodio"))))))

(define-public crate-futuresdr-0.0.19 (c (n "futuresdr") (v "0.0.19") (d (list (d (n "android_logger") (r "^0.11.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-frontend") (r "^0.0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futuresdr-pmt") (r "^0.0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hound") (r "^3.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.3.3") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vmcircbuffer") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.29.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.29.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "zmq") (r "^0.9.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0m49wrm2jxqzpagf5l040dk6311qzyyz24x4d7369jny3vv3hr4b") (f (quote (("zynq" "xilinx-dma") ("zeromq" "zmq/vendored") ("wav" "hound") ("vulkan" "vulkano" "vulkano-shaders") ("tpb_scheduler") ("soapy" "soapysdr") ("lttng" "lttng-ust" "lttng-ust-generate") ("flow_scheduler") ("default") ("audio" "cpal" "hound" "rodio"))))))

(define-public crate-futuresdr-0.0.20 (c (n "futuresdr") (v "0.0.20") (d (list (d (n "android_logger") (r "^0.11.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-frontend") (r "^0.0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futuresdr-pmt") (r "^0.0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hound") (r "^3.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.3.3") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vmcircbuffer") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.29.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.29.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "zmq") (r "^0.9.2") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1290b3n544c788zdklh9im69lbrmg5v1mvniln3zbk3n3j7wm35p") (f (quote (("tpb_scheduler") ("flow_scheduler") ("default")))) (s 2) (e (quote (("zynq" "dep:xilinx-dma") ("zeromq" "dep:zmq") ("wgpu" "dep:wgpu") ("vulkan" "dep:vulkano" "dep:vulkano-shaders") ("soapy" "dep:soapysdr") ("lttng" "dep:lttng-ust" "dep:lttng-ust-generate") ("audio" "dep:cpal" "dep:hound" "dep:rodio")))) (r "1.60")))

(define-public crate-futuresdr-0.0.21 (c (n "futuresdr") (v "0.0.21") (d (list (d (n "android_logger") (r "^0.11.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-pmt") (r "^0.0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hound") (r "^3.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.3.3") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vmcircbuffer") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.29.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.29.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "=0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "zmq") (r "^0.9.2") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "12z7q0rbx3dffxys5cxrcqnszh4zs7xrzsb9wn79p60kylg0yfy4") (f (quote (("tpb_scheduler") ("flow_scheduler") ("default")))) (s 2) (e (quote (("zynq" "dep:xilinx-dma") ("zeromq" "dep:zmq") ("wgpu" "dep:wgpu") ("vulkan" "dep:vulkano" "dep:vulkano-shaders") ("soapy" "dep:soapysdr") ("lttng" "dep:lttng-ust" "dep:lttng-ust-generate") ("audio" "dep:cpal" "dep:hound" "dep:rodio")))) (r "1.60")))

(define-public crate-futuresdr-0.0.22 (c (n "futuresdr") (v "0.0.22") (d (list (d (n "android_logger") (r "^0.11.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.9") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-pmt") (r "^0.0.5") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hound") (r "^3.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.3.3") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vmcircbuffer") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.30") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.30") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "=0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "zmq") (r "^0.9.2") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1vsla04vxq33y0igcwkcg90x2qr1wf1c7pgkmlj41n92ahni49lq") (f (quote (("tpb_scheduler") ("flow_scheduler") ("default")))) (s 2) (e (quote (("zynq" "dep:xilinx-dma") ("zeromq" "dep:zmq") ("wgpu" "dep:wgpu") ("vulkan" "dep:vulkano" "dep:vulkano-shaders") ("soapy" "dep:soapysdr") ("lttng" "dep:lttng-ust" "dep:lttng-ust-generate") ("audio" "dep:cpal" "dep:hound" "dep:rodio")))) (r "1.60")))

(define-public crate-futuresdr-0.0.23 (c (n "futuresdr") (v "0.0.23") (d (list (d (n "android_logger") (r "^0.11.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.9") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-pmt") (r "^0.0.5") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hound") (r "^3.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.3.3") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vmcircbuffer") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.30") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.30") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "=0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "zmq") (r "^0.9.2") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0m15bkkzqql53iqa3ps09g7wfsfpvb9i6k7d52izqhhlq9qzzykz") (f (quote (("tpb_scheduler") ("flow_scheduler") ("default")))) (s 2) (e (quote (("zynq" "dep:xilinx-dma") ("zeromq" "dep:zmq") ("wgpu" "dep:wgpu") ("vulkan" "dep:vulkano" "dep:vulkano-shaders") ("soapy" "dep:soapysdr") ("lttng" "dep:lttng-ust" "dep:lttng-ust-generate") ("audio" "dep:cpal" "dep:hound" "dep:rodio")))) (r "1.60")))

(define-public crate-futuresdr-0.0.24 (c (n "futuresdr") (v "0.0.24") (d (list (d (n "android_logger") (r "^0.11.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.9") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-pmt") (r "^0.0.6") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2.2") (f (quote ("websocket" "json"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hound") (r "^3.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.3.3") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vmcircbuffer") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.30") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.30") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "=0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "zmq") (r "^0.9.2") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0a20k8q6illir9qxkg347phcmd1jsrfjkmcbd61mg9y159c0dx0x") (f (quote (("tpb_scheduler") ("flow_scheduler") ("default")))) (s 2) (e (quote (("zynq" "dep:xilinx-dma") ("zeromq" "dep:zmq") ("wgpu" "dep:wgpu") ("vulkan" "dep:vulkano" "dep:vulkano-shaders") ("soapy" "dep:soapysdr") ("lttng" "dep:lttng-ust" "dep:lttng-ust-generate") ("audio" "dep:cpal" "dep:hound" "dep:rodio")))) (r "1.60")))

(define-public crate-futuresdr-0.0.25 (c (n "futuresdr") (v "0.0.25") (d (list (d (n "android_logger") (r "^0.11.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.9") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-pmt") (r "^0.0.6") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2.2") (f (quote ("websocket" "json"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hound") (r "^3.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.3.3") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vmcircbuffer") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.30") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.30") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "=0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "zmq") (r "^0.9.2") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1zyar6vx0l8hwdsbgm1d76rscx48hda9hwl62kla4i5v3iv7nqks") (f (quote (("tpb_scheduler") ("flow_scheduler") ("default")))) (s 2) (e (quote (("zynq" "dep:xilinx-dma") ("zeromq" "dep:zmq") ("wgpu" "dep:wgpu") ("vulkan" "dep:vulkano" "dep:vulkano-shaders") ("soapy" "dep:soapysdr") ("lttng" "dep:lttng-ust" "dep:lttng-ust-generate") ("audio" "dep:cpal" "dep:hound" "dep:rodio")))) (r "1.60")))

(define-public crate-futuresdr-0.0.26 (c (n "futuresdr") (v "0.0.26") (d (list (d (n "android_logger") (r "^0.11.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.9") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-macros") (r "^0.0.1") (d #t) (k 0)) (d (n "futuresdr-pmt") (r "^0.0.6") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2.2") (f (quote ("websocket" "json"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hound") (r "^3.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.3.3") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vmcircbuffer") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.30") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.30") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "=0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "zmq") (r "^0.9.2") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "14wbs5xc23aq8lvw5fcpc8h19w7plccz10vs2kh9461vkv02mvlv") (f (quote (("tpb_scheduler") ("flow_scheduler") ("default")))) (s 2) (e (quote (("zynq" "dep:xilinx-dma") ("zeromq" "dep:zmq") ("wgpu" "dep:wgpu") ("vulkan" "dep:vulkano" "dep:vulkano-shaders") ("soapy" "dep:soapysdr") ("lttng" "dep:lttng-ust" "dep:lttng-ust-generate") ("audio" "dep:cpal" "dep:hound" "dep:rodio")))) (r "1.60")))

(define-public crate-futuresdr-0.0.27 (c (n "futuresdr") (v "0.0.27") (d (list (d (n "android_logger") (r "^0.11.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^1.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.13.4") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.9") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-macros") (r "^0.0.2") (d #t) (k 0)) (d (n "futuresdr-pmt") (r "^0.0.6") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2.2") (f (quote ("websocket" "json"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hound") (r "^3.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.15.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "soapysdr") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.3.3") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vmcircbuffer") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.30") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.30") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "=0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "zmq") (r "^0.9.2") (f (quote ("vendored"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0irg6c59sxw7i1jf20smjl9yx0xpaxhxpx3c5j9fw3fm3pmx6ngq") (f (quote (("tpb_scheduler") ("flow_scheduler") ("default")))) (s 2) (e (quote (("zynq" "dep:xilinx-dma") ("zeromq" "dep:zmq") ("wgpu" "dep:wgpu") ("vulkan" "dep:vulkano" "dep:vulkano-shaders") ("soapy" "dep:soapysdr") ("lttng" "dep:lttng-ust" "dep:lttng-ust-generate") ("audio" "dep:cpal" "dep:hound" "dep:rodio")))) (r "1.60")))

(define-public crate-futuresdr-0.0.28 (c (n "futuresdr") (v "0.0.28") (d (list (d (n "android_logger") (r "^0.12.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-native-tls") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.19.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.7.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.14.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.14.1") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.9") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-macros") (r "^0.0.3") (d #t) (k 0)) (d (n "futuresdr-pmt") (r "^0.0.8") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2.2") (f (quote ("websocket" "json"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hound") (r "^3.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.16.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.16.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "seify") (r "^0.3.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.3.3") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vmcircbuffer") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.32") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.32") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "zmq") (r "^0.10.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "19hn4qdv8xwjxqj4pfknnzxy7j0l6h2md3k6xa81aaiqdxflr87k") (f (quote (("tpb_scheduler") ("soapy" "seify/soapy") ("rtlsdr" "seify/rtlsdr") ("flow_scheduler") ("default") ("aaronia_http" "seify/aaronia_http" "seify_http") ("aaronia" "seify/aaronia")))) (s 2) (e (quote (("zynq" "dep:xilinx-dma") ("zeromq" "dep:zmq") ("wgpu" "dep:wgpu") ("vulkan" "dep:vulkano" "dep:vulkano-shaders") ("seify_http" "seify/web" "dep:async-native-tls") ("seify" "dep:seify") ("lttng" "dep:lttng-ust" "dep:lttng-ust-generate") ("audio" "dep:cpal" "dep:hound" "dep:rodio")))) (r "1.60")))

(define-public crate-futuresdr-0.0.29 (c (n "futuresdr") (v "0.0.29") (d (list (d (n "android_logger") (r "^0.12.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-native-tls") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.19.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.7.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.14.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.14.1") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.9") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-macros") (r "^0.0.3") (d #t) (k 0)) (d (n "futuresdr-pmt") (r "^0.0.8") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2.2") (f (quote ("websocket" "json"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hound") (r "^3.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.16.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.16.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "seify") (r "^0.4.1") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.3.3") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vmcircbuffer") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.32") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.32") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "zmq") (r "^0.10.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "087ild1swp27dwjk47bciq5d0sv820v090yzsk55bm0pqd0h1x1z") (f (quote (("tpb_scheduler") ("soapy" "seify/soapy") ("rtlsdr" "seify/rtlsdr") ("flow_scheduler") ("default") ("aaronia_http" "seify/aaronia_http" "seify_http") ("aaronia" "seify/aaronia")))) (s 2) (e (quote (("zynq" "dep:xilinx-dma") ("zeromq" "dep:zmq") ("wgpu" "dep:wgpu") ("vulkan" "dep:vulkano" "dep:vulkano-shaders") ("seify_http" "seify/web" "dep:async-native-tls") ("seify" "dep:seify") ("lttng" "dep:lttng-ust" "dep:lttng-ust-generate") ("audio" "dep:cpal" "dep:hound" "dep:rodio")))) (r "1.60")))

(define-public crate-futuresdr-0.0.30 (c (n "futuresdr") (v "0.0.30") (d (list (d (n "android_logger") (r "^0.12.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-native-tls") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.19.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.7.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.14.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.14.1") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.9") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-macros") (r "^0.0.3") (d #t) (k 0)) (d (n "futuresdr-pmt") (r "^0.0.8") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2.2") (f (quote ("websocket" "json"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hound") (r "^3.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.16.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.16.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "seify") (r "^0.4.1") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.3.3") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vmcircbuffer") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.32") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.32") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.79") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "zmq") (r "^0.10.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0z9jsvj6jfxyfwmsrgqgbz75awphizb2mfs5rh2l95h4yrkrahl4") (f (quote (("tpb_scheduler") ("soapy" "seify/soapy") ("rtlsdr" "seify/rtlsdr") ("flow_scheduler") ("default") ("aaronia_http" "seify/aaronia_http" "seify_http") ("aaronia" "seify/aaronia")))) (s 2) (e (quote (("zynq" "dep:xilinx-dma") ("zeromq" "dep:zmq") ("wgpu" "dep:wgpu") ("vulkan" "dep:vulkano" "dep:vulkano-shaders") ("seify_http" "seify/web" "dep:async-native-tls") ("seify" "dep:seify") ("lttng" "dep:lttng-ust" "dep:lttng-ust-generate") ("audio" "dep:cpal" "dep:hound" "dep:rodio")))) (r "1.60")))

(define-public crate-futuresdr-0.0.31 (c (n "futuresdr") (v "0.0.31") (d (list (d (n "android_logger") (r "^0.12.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-native-tls") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.19.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.7.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.14.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.14.1") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.9") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-macros") (r "^0.0.4") (d #t) (k 0)) (d (n "futuresdr-pmt") (r "^0.0.8") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2.2") (f (quote ("websocket" "json"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hound") (r "^3.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.16.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.16.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "seify") (r "^0.4.1") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.3.3") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vmcircbuffer") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.32") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.32") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "zmq") (r "^0.10.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1jjchv6za6l7pss8iqlhhzmy0ywjpkaymxv65kj34s4xfd4b0ph3") (f (quote (("tpb_scheduler") ("soapy" "seify/soapy") ("rtlsdr" "seify/rtlsdr") ("flow_scheduler") ("default") ("aaronia_http" "seify/aaronia_http" "seify_http") ("aaronia" "seify/aaronia")))) (s 2) (e (quote (("zynq" "dep:xilinx-dma") ("zeromq" "dep:zmq") ("wgpu" "dep:wgpu") ("vulkan" "dep:vulkano" "dep:vulkano-shaders") ("seify_http" "seify/web" "dep:async-native-tls") ("seify" "dep:seify") ("lttng" "dep:lttng-ust" "dep:lttng-ust-generate") ("audio" "dep:cpal" "dep:hound" "dep:rodio")))) (r "1.60")))

(define-public crate-futuresdr-0.0.32 (c (n "futuresdr") (v "0.0.32") (d (list (d (n "android_logger") (r "^0.12.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 2)) (d (n "async-executor") (r "^1.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-executor") (r "^1.3.0") (d #t) (k 2)) (d (n "async-fs") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-native-tls") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.19.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.7.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.14.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.14.1") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.9") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.1.0") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.18") (d #t) (k 0)) (d (n "futures-lite") (r "^1.10.0") (d #t) (k 0)) (d (n "futuresdr-macros") (r "^0.0.4") (d #t) (k 0)) (d (n "futuresdr-types") (r "^0.0.9") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2.2") (f (quote ("websocket" "json"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hound") (r "^3.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 1)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.16.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.16.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "seify") (r "^0.4.1") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.4") (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.3.3") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vmcircbuffer") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.32") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.32") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "zmq") (r "^0.10.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1r287inzfjvya91nzbhy82wl6qiinr5qbnzihnkwis6m3xil55dy") (f (quote (("tpb_scheduler") ("soapy" "seify/soapy") ("rtlsdr" "seify/rtlsdr") ("flow_scheduler") ("default") ("aaronia_http" "seify/aaronia_http" "seify_http") ("aaronia" "seify/aaronia")))) (s 2) (e (quote (("zynq" "dep:xilinx-dma") ("zeromq" "dep:zmq") ("wgpu" "dep:wgpu") ("vulkan" "dep:vulkano" "dep:vulkano-shaders") ("seify_http" "seify/web" "dep:async-native-tls") ("seify" "dep:seify") ("lttng" "dep:lttng-ust" "dep:lttng-ust-generate") ("audio" "dep:cpal" "dep:hound" "dep:rodio")))) (r "1.60")))

(define-public crate-futuresdr-0.0.33 (c (n "futuresdr") (v "0.0.33") (d (list (d (n "android_logger") (r "^0.13.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 2)) (d (n "async-executor") (r "^1.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-fs") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-native-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.22.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.13.3") (d #t) (k 0)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.15.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.15.2") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.3.0") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-lite") (r "^1.13.0") (d #t) (k 0)) (d (n "futuresdr-macros") (r "^0.0.4") (d #t) (k 0)) (d (n "futuresdr-types") (r "^0.0.9") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.9") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2.6") (f (quote ("websocket" "json"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hound") (r "^3.5.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.142") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 1)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rodio") (r "^0.17.1") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.17.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.1") (d #t) (k 0)) (d (n "seify") (r "^0.6.1") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.0") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vmcircbuffer") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.32.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.32") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "zmq") (r "^0.10.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1m2nlrmxzyq8f27s9a0a6zilkfh2c89g0ddpdj518q761w8p8d90") (f (quote (("tpb_scheduler") ("soapy" "seify/soapy") ("rtlsdr" "seify/rtlsdr") ("flow_scheduler") ("default") ("aaronia_http" "seify/aaronia_http") ("aaronia" "seify/aaronia")))) (s 2) (e (quote (("zynq" "dep:xilinx-dma") ("zeromq" "dep:zmq") ("wgpu" "dep:wgpu") ("vulkan" "dep:vulkano" "dep:vulkano-shaders") ("seify" "dep:seify") ("lttng" "dep:lttng-ust" "dep:lttng-ust-generate") ("audio" "dep:cpal" "dep:hound" "dep:rodio")))) (r "1.60")))

(define-public crate-futuresdr-0.0.34 (c (n "futuresdr") (v "0.0.34") (d (list (d (n "android_logger") (r "^0.13.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 2)) (d (n "async-executor") (r "^1.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-fs") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-native-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.22.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.13.3") (d #t) (k 0)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.15.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.15.2") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.3.0") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-lite") (r "^1.13.0") (d #t) (k 0)) (d (n "futuresdr-macros") (r "^0.0.4") (d #t) (k 0)) (d (n "futuresdr-types") (r "^0.0.9") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.9") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2.6") (f (quote ("websocket" "json"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-timers") (r "^0.2.6") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hound") (r "^3.5.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.142") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 1)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rodio") (r "^0.17.1") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.17.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.1") (d #t) (k 0)) (d (n "seify") (r "^0.7.1") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.0") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vmcircbuffer") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.32.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.32") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "zmq") (r "^0.10.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1lr9ly3ksp2cv4x7fc7j2xs1dxikgwq91krsqcmyrg9ya8g3m2vk") (f (quote (("tpb_scheduler") ("soapy" "seify/soapy") ("rtlsdr" "seify/rtlsdr") ("flow_scheduler") ("default") ("aaronia_http" "seify/aaronia_http") ("aaronia" "seify/aaronia")))) (s 2) (e (quote (("zynq" "dep:xilinx-dma") ("zeromq" "dep:zmq") ("wgpu" "dep:wgpu") ("vulkan" "dep:vulkano" "dep:vulkano-shaders") ("seify" "dep:seify") ("lttng" "dep:lttng-ust" "dep:lttng-ust-generate") ("audio" "dep:cpal" "dep:hound" "dep:rodio")))) (r "1.60")))

(define-public crate-futuresdr-0.0.35 (c (n "futuresdr") (v "0.0.35") (d (list (d (n "android_logger") (r "^0.13.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 2)) (d (n "async-executor") (r "^1.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-fs") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-native-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.22.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.13.3") (d #t) (k 0)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.15.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.15.2") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.3.0") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-lite") (r "^1.13.0") (d #t) (k 0)) (d (n "futuresdr-macros") (r "^0.0.4") (d #t) (k 0)) (d (n "futuresdr-types") (r "^0.0.9") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.9") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2.6") (f (quote ("websocket" "json"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-timers") (r "^0.2.6") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hound") (r "^3.5.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libc") (r "^0.2.142") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 1)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rodio") (r "^0.17.1") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.17.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.1") (d #t) (k 0)) (d (n "seify") (r "^0.8.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.0") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vmcircbuffer") (r "^0.0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.32.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.32") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "xilinx-dma") (r "^0.0.7") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "zmq") (r "^0.10.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "02gdh1r2rl9pngi6az5vbmlk1nfraxvm8mp45s9bidsbp9ml57ax") (f (quote (("tpb_scheduler") ("soapy" "seify/soapy") ("rtlsdr" "seify/rtlsdr") ("flow_scheduler") ("default") ("aaronia_http" "seify/aaronia_http") ("aaronia" "seify/aaronia")))) (s 2) (e (quote (("zynq" "dep:xilinx-dma") ("zeromq" "dep:zmq") ("wgpu" "dep:wgpu") ("vulkan" "dep:vulkano" "dep:vulkano-shaders") ("seify" "dep:seify") ("lttng" "dep:lttng-ust" "dep:lttng-ust-generate") ("audio" "dep:cpal" "dep:hound" "dep:rodio")))) (r "1.60")))

(define-public crate-futuresdr-0.0.36 (c (n "futuresdr") (v "0.0.36") (d (list (d (n "android_logger") (r "^0.13.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 2)) (d (n "async-executor") (r "^1.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-fs") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-native-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.22.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.13.3") (d #t) (k 0)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.15.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.15.2") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.3.0") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-lite") (r "^1.13.0") (d #t) (k 0)) (d (n "futuresdr-macros") (r "^0.0.5") (d #t) (k 0)) (d (n "futuresdr-types") (r "^0.0.9") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.9") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2.6") (f (quote ("websocket" "json"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-timers") (r "^0.2.6") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hound") (r "^3.5.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2.142") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 1)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rodio") (r "^0.17.1") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.17.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.1") (d #t) (k 0)) (d (n "seify") (r "^0.9.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.0") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vmcircbuffer") (r "^0.0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.32.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.32") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.64") (f (quote ("Document" "Element" "HtmlElement" "Node" "Window" "Navigator" "Usb" "UsbDeviceRequestOptions" "UsbDevice" "UsbDeviceFilter" "UsbInTransferResult" "UsbConfiguration" "UsbControlTransferParameters" "UsbOutTransferResult" "UsbRecipient" "UsbRequestType"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "xilinx-dma") (r "^0.0.8") (f (quote ("async"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "zmq") (r "^0.10.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1ka2dv3kpahg26ni94k9b6kfiv02i0c1jxj3my3xsn2zmmnlx80p") (f (quote (("tpb_scheduler") ("soapy" "seify/soapy") ("rtlsdr" "seify/rtlsdr") ("flow_scheduler") ("default") ("aaronia_http" "seify/aaronia_http") ("aaronia" "seify/aaronia")))) (s 2) (e (quote (("zynq" "dep:xilinx-dma") ("zeromq" "dep:zmq") ("wgpu" "dep:wgpu") ("vulkan" "dep:vulkano" "dep:vulkano-shaders") ("seify" "dep:seify") ("lttng" "dep:lttng-ust" "dep:lttng-ust-generate") ("audio" "dep:cpal" "dep:hound" "dep:rodio")))) (r "1.60")))

(define-public crate-futuresdr-0.0.37 (c (n "futuresdr") (v "0.0.37") (d (list (d (n "android_logger") (r "^0.13.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 2)) (d (n "async-executor") (r "^1.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-fs") (r "^1.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-io") (r "^1.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-lock") (r "^2.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-native-tls") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-task") (r "^4.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.22.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "blocking") (r "^1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "concurrent-queue") (r "^2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "config") (r "^0.13.3") (d #t) (k 0)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "core_affinity") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.15.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cpal") (r "^0.15.2") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "easy-parallel") (r "^3.3.0") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 2)) (d (n "futuredsp") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-lite") (r "^1.13.0") (d #t) (k 0)) (d (n "futuresdr-macros") (r "^0.0.5") (d #t) (k 0)) (d (n "futuresdr-types") (r "^0.0.11") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.9") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2.6") (f (quote ("websocket" "json"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-timers") (r "^0.2.6") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hound") (r "^3.5.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2.142") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "lttng-ust") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "lttng-ust-generate") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 1)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rodio") (r "^0.17.1") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rodio") (r "^0.17.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "rustfft") (r "^6.1") (d #t) (k 0)) (d (n "seify") (r "^0.10.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.0") (f (quote ("add-extension" "cors" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vmcircbuffer") (r "^0.0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano") (r "^0.32.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vulkano-shaders") (r "^0.32") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "=0.3.64") (f (quote ("Document" "Element" "HtmlElement" "Node" "Window" "Navigator" "Usb" "UsbDeviceRequestOptions" "UsbDevice" "UsbDeviceFilter" "UsbInTransferResult" "UsbConfiguration" "UsbControlTransferParameters" "UsbOutTransferResult" "UsbRecipient" "UsbRequestType"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.16.3") (o #t) (d #t) (k 0)) (d (n "xilinx-dma") (r "^0.0.8") (f (quote ("async"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "zmq") (r "^0.10.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "01cqb5krda19n1rxr96air76jg8r910wibls8vxgayl1c2scl4am") (f (quote (("tpb_scheduler") ("soapy" "seify/soapy") ("rtlsdr" "seify/rtlsdr") ("flow_scheduler") ("default") ("aaronia_http" "seify/aaronia_http") ("aaronia" "seify/aaronia")))) (s 2) (e (quote (("zynq" "dep:xilinx-dma") ("zeromq" "dep:zmq") ("wgpu" "dep:wgpu") ("vulkan" "dep:vulkano" "dep:vulkano-shaders") ("seify" "dep:seify") ("lttng" "dep:lttng-ust" "dep:lttng-ust-generate") ("audio" "dep:cpal" "dep:hound" "dep:rodio")))) (r "1.60")))

