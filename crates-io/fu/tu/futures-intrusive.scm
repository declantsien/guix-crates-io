(define-module (crates-io fu tu futures-intrusive) #:use-module (crates-io))

(define-public crate-futures-intrusive-0.1.0 (c (n "futures-intrusive") (v "0.1.0") (d (list (d (n "criterion") (r "^0.2.7") (d #t) (k 2)) (d (n "futures-core-preview") (r "^0.3.0-alpha.16") (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha.16") (f (quote ("async-await" "nightly"))) (d #t) (k 2)) (d (n "futures-test-preview") (r "^0.3.0-alpha.16") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 2)) (d (n "lock_api") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.8") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)))) (h "1ag5k8ks18wg2fgq5npyy2jpi4m9yszdcwvrd92qc3spfnzkg25y") (f (quote (("std" "futures-core-preview/std") ("default" "std"))))))

(define-public crate-futures-intrusive-0.1.1 (c (n "futures-intrusive") (v "0.1.1") (d (list (d (n "criterion") (r "^0.2.7") (d #t) (k 2)) (d (n "futures-core-preview") (r "^0.3.0-alpha.16") (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha.16") (f (quote ("async-await" "nightly"))) (d #t) (k 2)) (d (n "futures-test-preview") (r "^0.3.0-alpha.16") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 2)) (d (n "lock_api") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)))) (h "0iyjiflqp58v7m66d890h92ix8fp8lzwl4lrfqzqdcz21s2nckb2") (f (quote (("std" "futures-core-preview/std" "parking_lot") ("default" "std"))))))

(define-public crate-futures-intrusive-0.2.0 (c (n "futures-intrusive") (v "0.2.0") (d (list (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "futures-core-preview") (r "^0.3.0-alpha.18") (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha.18") (f (quote ("async-await" "nightly"))) (d #t) (k 2)) (d (n "futures-test-preview") (r "^0.3.0-alpha.18") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "lock_api") (r "^0.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^0.2.0-alpha.4") (d #t) (k 2)))) (h "14ln192lcpk7gxa3bv5icv1ilnqqs39hdznn2j3gxizzz4gm7ns5") (f (quote (("std" "futures-core-preview/std" "parking_lot") ("default" "std"))))))

(define-public crate-futures-intrusive-0.2.1 (c (n "futures-intrusive") (v "0.2.1") (d (list (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.0") (f (quote ("async-await"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-test") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "lock_api") (r "^0.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^0.2.0-alpha.6") (d #t) (k 2)))) (h "1snfb0hil22ph0kw9z26dwj60zvb3jkpvi2di7667yr4ay37m0bj") (f (quote (("std" "futures-core/std" "parking_lot") ("default" "std"))))))

(define-public crate-futures-intrusive-0.2.2 (c (n "futures-intrusive") (v "0.2.2") (d (list (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.0") (f (quote ("async-await"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-test") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "lock_api") (r "^0.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "signal-hook") (r "^0.1.11") (d #t) (k 2)) (d (n "tokio") (r "^0.2.0-alpha.6") (d #t) (k 2)))) (h "1wf9ikz5sy1nk89cc32ixpvy7f437djxk32af8pyra8lpf4lphg2") (f (quote (("std" "futures-core/std" "parking_lot") ("default" "std"))))))

(define-public crate-futures-intrusive-0.3.0 (c (n "futures-intrusive") (v "0.3.0") (d (list (d (n "async-std") (r "^1.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.0") (f (quote ("async-await"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-test") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "lock_api") (r "^0.3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "signal-hook") (r "^0.1.11") (d #t) (k 2)) (d (n "tokio") (r "^0.2.11") (f (quote ("full"))) (d #t) (k 2)))) (h "12qi9p2zm1y8y8xvahibi0vapsjwrvpi9llixmld31565l12q679") (f (quote (("std" "futures-core/std" "parking_lot") ("default" "std"))))))

(define-public crate-futures-intrusive-0.3.1 (c (n "futures-intrusive") (v "0.3.1") (d (list (d (n "async-std") (r "^1.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.0") (f (quote ("async-await"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-test") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "lock_api") (r "^0.3.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "signal-hook") (r "^0.1.11") (d #t) (k 2)) (d (n "tokio") (r "^0.2.11") (f (quote ("full"))) (d #t) (k 2)))) (h "00qpir3q6j7blwpnpffj7ypf1z8wc87ldn62qr7sapymgg82j5dw") (f (quote (("std" "alloc") ("default" "std") ("alloc" "futures-core/alloc" "parking_lot"))))))

(define-public crate-futures-intrusive-0.4.0 (c (n "futures-intrusive") (v "0.4.0") (d (list (d (n "async-std") (r "^1.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.0") (f (quote ("async-await"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (k 0)) (d (n "futures-test") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "lock_api") (r "^0.4.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "pin-utils") (r "^0.1.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "signal-hook") (r "^0.1.11") (d #t) (k 2)) (d (n "tokio") (r "^0.2.11") (f (quote ("full"))) (d #t) (k 2)))) (h "0gmnn86ifc2ngmwf3mpiw00kmxm8m2wxxxqnchmpraj6mj97a032") (f (quote (("std" "alloc" "parking_lot") ("default" "std") ("alloc" "futures-core/alloc"))))))

(define-public crate-futures-intrusive-0.4.1 (c (n "futures-intrusive") (v "0.4.1") (d (list (d (n "async-std") (r "^1.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.0") (f (quote ("async-await"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (k 0)) (d (n "futures-test") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "lock_api") (r "^0.4.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pin-utils") (r "^0.1.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "signal-hook") (r "^0.1.11") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("full"))) (d #t) (k 2)))) (h "0av7ikss7zs7nc7i1zkds8akxkkkglndrncdxssjnax4qnwdnsqv") (f (quote (("std" "alloc" "parking_lot") ("default" "std") ("alloc" "futures-core/alloc")))) (y #t)))

(define-public crate-futures-intrusive-0.4.2 (c (n "futures-intrusive") (v "0.4.2") (d (list (d (n "async-std") (r "^1.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.0") (f (quote ("async-await"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (k 0)) (d (n "futures-test") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "lock_api") (r "^0.4.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "pin-utils") (r "^0.1.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "signal-hook") (r "^0.1.11") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("full"))) (d #t) (k 2)))) (h "1mdf2qb6ayfi19l7qbqi7zp62wyyibfgmc93flrh70dziykgf156") (f (quote (("std" "alloc" "parking_lot") ("default" "std") ("alloc" "futures-core/alloc"))))))

(define-public crate-futures-intrusive-0.5.0 (c (n "futures-intrusive") (v "0.5.0") (d (list (d (n "async-std") (r "^1.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.0") (f (quote ("async-await"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (k 0)) (d (n "futures-test") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "lock_api") (r "^0.4.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pin-utils") (r "^0.1.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "signal-hook") (r "^0.1.11") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("full"))) (d #t) (k 2)))) (h "0vwm08d1pli6bdaj0i7xhk3476qlx4pll6i0w03gzdnh7lh0r4qx") (f (quote (("std" "alloc" "parking_lot") ("default" "std") ("alloc" "futures-core/alloc"))))))

