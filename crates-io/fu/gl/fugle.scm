(define-module (crates-io fu gl fugle) #:use-module (crates-io))

(define-public crate-fugle-0.1.0 (c (n "fugle") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.4") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tungstenite") (r "^0.10.1") (f (quote ("tls"))) (d #t) (k 0)))) (h "01vypdjzbbrhk8kycdxlh6032g7pfrf8g6pwa7f0yf0fhww0112y")))

(define-public crate-fugle-0.1.1 (c (n "fugle") (v "0.1.1") (d (list (d (n "chrono") (r "^0.4.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.4") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tungstenite") (r "^0.10.1") (f (quote ("tls"))) (d #t) (k 0)))) (h "1irlp040dsgwz6xpphdnpki1xvirbvpcldvyz67lqfjichvwxfp9")))

(define-public crate-fugle-0.1.2 (c (n "fugle") (v "0.1.2") (d (list (d (n "chrono") (r "^0.4.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.4") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tungstenite") (r "^0.10.1") (f (quote ("tls"))) (d #t) (k 0)))) (h "0d0bsq45c9mmcrjaxm7x36v761kf2hgajwsyr8f880bp9pn57w29")))

(define-public crate-fugle-0.1.3 (c (n "fugle") (v "0.1.3") (d (list (d (n "chrono") (r "^0.4.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (f (quote ("blocking" "json" "native-tls-vendored"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tungstenite") (r "^0.10.1") (f (quote ("tls"))) (d #t) (k 0)))) (h "0xqidyw3i5q5707nfpzzvkwz1w4i7nmdh8p5nq9dwly4p32320r9")))

(define-public crate-fugle-0.1.4 (c (n "fugle") (v "0.1.4") (d (list (d (n "chrono") (r "^0.4.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (f (quote ("blocking" "json" "native-tls-vendored"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tungstenite") (r "^0.10.1") (f (quote ("tls"))) (d #t) (k 0)))) (h "17y1m7ss183sg79z5zacdm6wkwqa00zgwgxswlrz6a31xa2gcknn")))

(define-public crate-fugle-0.1.5 (c (n "fugle") (v "0.1.5") (d (list (d (n "chrono") (r "^0.4.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (f (quote ("blocking" "json" "native-tls-vendored"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tungstenite") (r "^0.10.1") (f (quote ("tls"))) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1blpjkw71yy7yahg77g739gyv73hli2wxwshvdp0d1bvys9dap8a")))

(define-public crate-fugle-0.1.6 (c (n "fugle") (v "0.1.6") (d (list (d (n "chrono") (r "^0.4.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (f (quote ("blocking" "json" "native-tls-vendored"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tungstenite") (r "^0.10.1") (f (quote ("tls"))) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0xf5v30x33jmbpsaxd5kglq84yajrrk7yqi1b27mkr32wyxq46xp")))

(define-public crate-fugle-0.2.0 (c (n "fugle") (v "0.2.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.13") (f (quote ("rustls-tls"))) (d #t) (k 0)) (d (n "ureq") (r "^2.1") (f (quote ("json"))) (d #t) (k 0)))) (h "15h1wsrm2mszj0v9xm28rpc50l4viqdaxa24ibh8vz7bv9d49k2v")))

(define-public crate-fugle-0.2.1 (c (n "fugle") (v "0.2.1") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.13") (f (quote ("rustls-tls"))) (o #t) (k 0)) (d (n "ureq") (r "^2.1") (f (quote ("json"))) (d #t) (k 0)))) (h "0fzkvmf7zmhlgpgfl55fw2xkkwczhbqlwan4swhjh5i9idpwa5gg") (f (quote (("websocket" "tungstenite" "log") ("default"))))))

(define-public crate-fugle-0.2.2 (c (n "fugle") (v "0.2.2") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.13") (f (quote ("rustls-tls"))) (o #t) (k 0)) (d (n "ureq") (r "^2.1") (f (quote ("json"))) (d #t) (k 0)))) (h "0i3yivgiwz1wplhvraxkf57c2w3mnd6g8kiw26sqzmmy1j7jcax1") (f (quote (("websocket" "tungstenite" "log") ("default"))))))

(define-public crate-fugle-0.3.0 (c (n "fugle") (v "0.3.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.15") (f (quote ("rustls-tls-native-roots"))) (o #t) (k 0)) (d (n "ureq") (r "^2.3") (f (quote ("json"))) (d #t) (k 0)))) (h "13l0gbwfi80mhdw4k6lqz4aa2d8bj590cvy1vfx5fxjd6vji0b5q") (f (quote (("websocket" "tungstenite" "log") ("default"))))))

(define-public crate-fugle-0.3.1 (c (n "fugle") (v "0.3.1") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.15") (f (quote ("rustls-tls-native-roots"))) (o #t) (k 0)) (d (n "ureq") (r "^2.3") (f (quote ("json"))) (d #t) (k 0)))) (h "1vrc8fhkjw9bg3pmz9q7ra89b4b6badfisa35a54fwf7gz6rnqr0") (f (quote (("websocket" "tungstenite" "log") ("default"))))))

(define-public crate-fugle-0.3.2 (c (n "fugle") (v "0.3.2") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.15") (f (quote ("rustls-tls-native-roots"))) (o #t) (k 0)) (d (n "ureq") (r "^2.3") (f (quote ("json"))) (d #t) (k 0)))) (h "0n4ds6q0wjbhgnshdcfsr88a3x3pzbw1dmd6h2mzgldkq289bpmd") (f (quote (("websocket" "tungstenite" "log") ("default"))))))

(define-public crate-fugle-0.3.3 (c (n "fugle") (v "0.3.3") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.15") (f (quote ("rustls-tls-native-roots"))) (o #t) (k 0)) (d (n "ureq") (r "^2.3") (f (quote ("json"))) (d #t) (k 0)))) (h "1kgyv18wb8zx0a7jg4kvwrmjc2jmpsmmg0ydd5cs7c2j51xadfng") (f (quote (("websocket" "tungstenite" "log") ("default"))))))

(define-public crate-fugle-0.3.4 (c (n "fugle") (v "0.3.4") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.16") (f (quote ("rustls-tls-native-roots"))) (o #t) (k 0)) (d (n "ureq") (r "^2.3") (f (quote ("json"))) (d #t) (k 0)))) (h "1pm8sinpvlxlqazh35hzf5a4hjmhkszy78ybwmqmyk90garwhaim") (f (quote (("websocket" "tungstenite" "log") ("default"))))))

(define-public crate-fugle-0.3.5 (c (n "fugle") (v "0.3.5") (d (list (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde" "parsing"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (o #t) (k 0)) (d (n "ureq") (r "^2.4") (f (quote ("json"))) (d #t) (k 0)))) (h "117z9gqpxzzial51sjmn3imig0qaj42ihrg5l9sa21qvzj51fimr") (f (quote (("websocket" "tungstenite" "log") ("default"))))))

(define-public crate-fugle-0.3.6 (c (n "fugle") (v "0.3.6") (d (list (d (n "futures-util") (r "^0.3") (o #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.6") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("serde" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "time" "sync"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (o #t) (d #t) (k 0)) (d (n "tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (o #t) (k 0)) (d (n "ureq") (r "^2.4") (f (quote ("json"))) (d #t) (k 0)))) (h "1jz0s4c0lmigqjmp3yh3b7m52khd97dgavqwdqx0y0y55kjs4pjc") (f (quote (("websocket" "tungstenite" "log") ("default") ("async-websocket" "tokio-tungstenite" "log" "tokio" "futures-util"))))))

(define-public crate-fugle-0.3.7 (c (n "fugle") (v "0.3.7") (d (list (d (n "futures-util") (r "^0.3") (o #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("serde" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "time" "sync"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (o #t) (d #t) (k 0)) (d (n "tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (o #t) (k 0)) (d (n "ureq") (r "^2.4") (f (quote ("json"))) (o #t) (d #t) (k 0)))) (h "0rvlc8cgl2j6b2nwilc8q47zad8jd0x94zy1cd2fxkbgwmb5n7hh") (f (quote (("websocket" "tungstenite" "log" "serde_json") ("query" "ureq") ("default" "query") ("async-websocket" "tungstenite" "tokio-tungstenite" "log" "tokio" "futures-util" "serde_json") ("async-query" "reqwest"))))))

(define-public crate-fugle-0.3.8 (c (n "fugle") (v "0.3.8") (d (list (d (n "futures-util") (r "^0.3") (o #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots"))) (o #t) (k 0)) (d (n "rust_decimal") (r "^1.26") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^0.9") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("serde" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "time" "sync"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (o #t) (d #t) (k 0)) (d (n "tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (o #t) (k 0)) (d (n "ureq") (r "^2.4") (f (quote ("json"))) (o #t) (d #t) (k 0)))) (h "0nv17i1wsmfr5vxl3hmh7bnwqh7hvl8v75fm2by8cw7yag7qaawz") (f (quote (("websocket" "tungstenite" "log" "serde_json") ("query" "ureq") ("default" "query") ("async-websocket" "tungstenite" "tokio-tungstenite" "log" "tokio" "futures-util" "serde_json") ("async-query" "reqwest"))))))

