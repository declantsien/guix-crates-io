(define-module (crates-io fu el fuel-core-chain-config) #:use-module (crates-io))

(define-public crate-fuel-core-chain-config-0.0.0 (c (n "fuel-core-chain-config") (v "0.0.0") (h "1fcdi09n18lkhdwc43v4s67gj1h7hy55zv173cwrsw9dskbidr48")))

(define-public crate-fuel-core-chain-config-0.16.1 (c (n "fuel-core-chain-config") (v "0.16.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.16.1") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.16.1") (f (quote ("serde" "random"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0hqjsjwwpd4gz46dr5ngi28254zkg6y3z1z0nm97shhxbx37g9qd")))

(define-public crate-fuel-core-chain-config-0.17.0 (c (n "fuel-core-chain-config") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.17.0") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.17.0") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1pjr4961lhjbjgwajx9lwbnslariskygyc7j0g0anbs7wczxzdf9")))

(define-public crate-fuel-core-chain-config-0.17.1 (c (n "fuel-core-chain-config") (v "0.17.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.17.1") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.17.1") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "167j0gfkkm755h008132bg7cr5nrlxvnfkg6lsz91l7r9d86zsy7")))

(define-public crate-fuel-core-chain-config-0.17.2 (c (n "fuel-core-chain-config") (v "0.17.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.17.2") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.17.2") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1mq9im9fk2a3r0658c5512w4y2kzarzx5d4k8rc09pcdgxfh39hw")))

(define-public crate-fuel-core-chain-config-0.17.3 (c (n "fuel-core-chain-config") (v "0.17.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.17.3") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.17.3") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0bywfiidk7a362i5b7sp5smvqcv1f9l1gylwl4k9dczvhqfwd8m2")))

(define-public crate-fuel-core-chain-config-0.17.4 (c (n "fuel-core-chain-config") (v "0.17.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.17.4") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.17.4") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1h20iq4wyzy0i9sqab6fn2vbicc2c9nngb4qqhvyqrgym0ay8h4b")))

(define-public crate-fuel-core-chain-config-0.17.5 (c (n "fuel-core-chain-config") (v "0.17.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.17.5") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.17.5") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1d119czsxqgxck3wxmrl6czc3cz2gsfrac1gq8kpxgdla3kl2yms")))

(define-public crate-fuel-core-chain-config-0.17.6 (c (n "fuel-core-chain-config") (v "0.17.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.17.6") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.17.6") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1w5qvajdnpk0b1ndf58g43fi9xya0ynghpgy5cm8gq70vv9r7l1c")))

(define-public crate-fuel-core-chain-config-0.17.7 (c (n "fuel-core-chain-config") (v "0.17.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.17.7") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.17.7") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "192zpzbb0rr6wnbi6cmrmqsqd2p1267w1v9fgaay3gzxjxv8nibg")))

(define-public crate-fuel-core-chain-config-0.17.8 (c (n "fuel-core-chain-config") (v "0.17.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.17.8") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.17.8") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0r8zhs7yqk6yyjrk6m895y9vpl8bz3mxxg9ls0hnsdwbb872m39c")))

(define-public crate-fuel-core-chain-config-0.17.9 (c (n "fuel-core-chain-config") (v "0.17.9") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.17.9") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.17.9") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1fggdigv3va20ky5sddyk696idwkcbz50mmwfwwngxcv7262pknq")))

(define-public crate-fuel-core-chain-config-0.17.10 (c (n "fuel-core-chain-config") (v "0.17.10") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.17.10") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.17.10") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "17rs6qbvf4qap8np6b15npds8ar977jxdb5khv8h580yvfmpdbah")))

(define-public crate-fuel-core-chain-config-0.17.11 (c (n "fuel-core-chain-config") (v "0.17.11") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.17.11") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.17.11") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "09x2vyzymrf2mzvzqp9awrh33gbm7fc7j1h6vk9a7wg19248z18w")))

(define-public crate-fuel-core-chain-config-0.18.0 (c (n "fuel-core-chain-config") (v "0.18.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.18.0") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.18.0") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0qlb8xqx083cx2lbv3rk5gys6q9cfqspbwjc1rh8nsvw31y6xm3b")))

(define-public crate-fuel-core-chain-config-0.18.1 (c (n "fuel-core-chain-config") (v "0.18.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.18.1") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.18.1") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0r5xvbw2n8ay0bnvix3kzy7878w44ypav3s0n2k3p0xsbv4f5axm")))

(define-public crate-fuel-core-chain-config-0.17.12 (c (n "fuel-core-chain-config") (v "0.17.12") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.17.12") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.17.12") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "10k56l7r4kx8wajp39xqdl53pya5rcmf3igqq50wwgxgnfw36s28")))

(define-public crate-fuel-core-chain-config-0.18.2 (c (n "fuel-core-chain-config") (v "0.18.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.18.2") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.18.2") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "00dwq1mwj2lwxvvahrm231q3ia8rdj11lv441xjbl2qm7dp1ll2v")))

(define-public crate-fuel-core-chain-config-0.18.3 (c (n "fuel-core-chain-config") (v "0.18.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.18.3") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.18.3") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "05rsxpxfy53sma19l4gp8d872cddzdyml84l8fgmg5mfhqgzlcz5")))

(define-public crate-fuel-core-chain-config-0.19.0 (c (n "fuel-core-chain-config") (v "0.19.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.19.0") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.19.0") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0vfggdwwlvg3j16fn2rsns2xb2nzzm3akmb2fxzj8afqz7f99x3s")))

(define-public crate-fuel-core-chain-config-0.19.1 (c (n "fuel-core-chain-config") (v "0.19.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.19.1") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.19.1") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "069356syf39bsfkhnir0ggalsfnjvrm7fnxi8qwx188n432mq0ym")))

(define-public crate-fuel-core-chain-config-0.17.13 (c (n "fuel-core-chain-config") (v "0.17.13") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.17.13") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.17.13") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1mlvhg63ix96xfgm4vwz5w2ls1i5qqi77jja4khm3gj92sf7gx6g")))

(define-public crate-fuel-core-chain-config-0.20.0 (c (n "fuel-core-chain-config") (v "0.20.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.20.0") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.20.0") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0fx9hlndm3px31wydmvi6k449fsjyy1y39fvkadf5xglfpjnkvgd")))

(define-public crate-fuel-core-chain-config-0.20.1 (c (n "fuel-core-chain-config") (v "0.20.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.20.1") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.20.1") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1asy2vdx1ykzcs4s7hz5zxlxsbrg2yaksl35kfkp89azlm63zks0")))

(define-public crate-fuel-core-chain-config-0.20.2 (c (n "fuel-core-chain-config") (v "0.20.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.20.2") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.20.2") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "171sf0hf3icb1c013fqv1iiiiybansn38j8qkabi3bnz3cf60jys")))

(define-public crate-fuel-core-chain-config-0.20.3 (c (n "fuel-core-chain-config") (v "0.20.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.20.3") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.20.3") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0zywp86ya6zmvlizz0phcnkg4j9s7sgbc5zdwcb62pc5yi3qysh2")))

(define-public crate-fuel-core-chain-config-0.20.4 (c (n "fuel-core-chain-config") (v "0.20.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.20.4") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.20.4") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1py2f7dqp727gvmn9ls9fpn93366l0d8bggyidm3g4z0j4hd4yk7")))

(define-public crate-fuel-core-chain-config-0.19.2 (c (n "fuel-core-chain-config") (v "0.19.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.19.2") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.19.2") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1y783zjpqf0idnnf5j81l526linq74ik4f7lv16ql865d0x7xsp4")))

(define-public crate-fuel-core-chain-config-0.20.5 (c (n "fuel-core-chain-config") (v "0.20.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.20.5") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.20.5") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0wvbsak56x8barbjfxkq1qmcy4b5nkfn4y48gnywn9jxm052px77")))

(define-public crate-fuel-core-chain-config-0.20.6 (c (n "fuel-core-chain-config") (v "0.20.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.20.6") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.20.6") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "18xs6vrg2zm5lpdr3jd3w5v5yy0llggzq36cndjhl9kqrq4jp1l6")))

(define-public crate-fuel-core-chain-config-0.20.7 (c (n "fuel-core-chain-config") (v "0.20.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.20.7") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.20.7") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "12mfgn0wcylg2a0gzr5a5mvb2fvmqrj1m3jyr9s2slw6088qqdln")))

(define-public crate-fuel-core-chain-config-0.20.8 (c (n "fuel-core-chain-config") (v "0.20.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.20.8") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.20.8") (f (quote ("serde" "random"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0g8502lnrv3xc2nqlh832vfjb5gk54chqsy20wic1bsdyihz7s46")))

(define-public crate-fuel-core-chain-config-0.21.0-rc.1 (c (n "fuel-core-chain-config") (v "0.21.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.21.0-rc.1") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.21.0-rc.1") (f (quote ("serde"))) (k 0)) (d (n "fuel-core-types") (r "^0.21.0-rc.1") (f (quote ("random" "serde"))) (k 2)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 2)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1plndc23rsyb9qf82ir37zfnm6b70iik4bxny5csih5jcgr64h7j") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "dep:serde_json" "fuel-core-types/std" "anyhow/std") ("random" "dep:rand" "fuel-core-types/random"))))))

(define-public crate-fuel-core-chain-config-0.21.0 (c (n "fuel-core-chain-config") (v "0.21.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.21.0") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.21.0") (f (quote ("serde"))) (k 0)) (d (n "fuel-core-types") (r "^0.21.0") (f (quote ("random" "serde"))) (k 2)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 2)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1gzrg4kk4l9inlxmqmdpjwvr52zl56ylmbf6707jnhivga79ncc4") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "dep:serde_json" "fuel-core-types/std" "anyhow/std") ("random" "dep:rand" "fuel-core-types/random"))))))

(define-public crate-fuel-core-chain-config-0.22.0 (c (n "fuel-core-chain-config") (v "0.22.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.22.0") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.22.0") (f (quote ("serde"))) (k 0)) (d (n "fuel-core-types") (r "^0.22.0") (f (quote ("random" "serde"))) (k 2)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 2)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1hz124dn9dmy3s5mlcnny2wc9zgdy6g9zi3x4v54x7v4fbzb3whi") (f (quote (("default" "std" "fuel-core-types/std")))) (s 2) (e (quote (("std" "dep:serde_json" "fuel-core-types/std" "anyhow/std") ("random" "dep:rand" "fuel-core-types/random"))))))

(define-public crate-fuel-core-chain-config-0.22.1 (c (n "fuel-core-chain-config") (v "0.22.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.22.1") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.22.1") (f (quote ("serde"))) (k 0)) (d (n "fuel-core-types") (r "^0.22.1") (f (quote ("random" "serde"))) (k 2)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 2)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "17vwh2c2gjiz6zfd5hxqvgc9dkl63jrlkn2gij35b1s33m304h4c") (f (quote (("default" "std" "fuel-core-types/std")))) (s 2) (e (quote (("std" "dep:serde_json" "fuel-core-types/std" "anyhow/std") ("random" "dep:rand" "fuel-core-types/random"))))))

(define-public crate-fuel-core-chain-config-0.23.0 (c (n "fuel-core-chain-config") (v "0.23.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.23.0") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.23.0") (f (quote ("serde"))) (k 0)) (d (n "fuel-core-types") (r "^0.23.0") (f (quote ("random" "serde"))) (k 2)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 2)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "01s9zgp4dhvxdpx2qkj890h5a6blvg3zg9hc9pjxfv5qhhhh7hiw") (f (quote (("default" "std" "fuel-core-types/std")))) (s 2) (e (quote (("std" "dep:serde_json" "fuel-core-types/std" "anyhow/std") ("random" "dep:rand" "fuel-core-types/random"))))))

(define-public crate-fuel-core-chain-config-0.22.2 (c (n "fuel-core-chain-config") (v "0.22.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.22.2") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.22.2") (f (quote ("serde"))) (k 0)) (d (n "fuel-core-types") (r "^0.22.2") (f (quote ("random" "serde"))) (k 2)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 2)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1sfs6qr4416dj40123c9xmcrfawllr1jkyh023zdqrijkj9zhxqx") (f (quote (("default" "std" "fuel-core-types/std")))) (s 2) (e (quote (("std" "dep:serde_json" "fuel-core-types/std" "anyhow/std") ("random" "dep:rand" "fuel-core-types/random"))))))

(define-public crate-fuel-core-chain-config-0.22.3 (c (n "fuel-core-chain-config") (v "0.22.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.22.3") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.22.3") (f (quote ("serde"))) (k 0)) (d (n "fuel-core-types") (r "^0.22.3") (f (quote ("random" "serde"))) (k 2)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 2)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "006mpnvs239ikkyvja2ayhx8yrx4x7371yrm3qvqwkz89k3bnyad") (f (quote (("default" "std" "fuel-core-types/std")))) (s 2) (e (quote (("std" "dep:serde_json" "fuel-core-types/std" "anyhow/std") ("random" "dep:rand" "fuel-core-types/random"))))))

(define-public crate-fuel-core-chain-config-0.22.4 (c (n "fuel-core-chain-config") (v "0.22.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.22.4") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.22.4") (f (quote ("serde"))) (k 0)) (d (n "fuel-core-types") (r "^0.22.4") (f (quote ("random" "serde"))) (k 2)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 2)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "01daz9vczj0gjz26g9gns98i2yaynv8si9ll1qw0qz68jgf97av2") (f (quote (("default" "std" "fuel-core-types/std")))) (s 2) (e (quote (("std" "dep:serde_json" "fuel-core-types/std" "anyhow/std") ("random" "dep:rand" "fuel-core-types/random"))))))

(define-public crate-fuel-core-chain-config-0.24.0 (c (n "fuel-core-chain-config") (v "0.24.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (o #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 2)) (d (n "fuel-core-storage") (r "^0.24.0") (k 0)) (d (n "fuel-core-types") (r "^0.24.0") (f (quote ("serde"))) (k 0)) (d (n "fuel-core-types") (r "^0.24.0") (f (quote ("random" "serde"))) (k 2)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.12") (f (quote ("use_alloc"))) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("zstd"))) (o #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 2)) (d (n "serde_with") (r "^3.4") (f (quote ("macros" "hex"))) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)))) (h "1ih82x63bb7xw0nbq4nf7a3hkh3zwgs24qdv916vpj4myydf4dpd") (f (quote (("default" "std")))) (s 2) (e (quote (("test-helpers" "dep:bech32" "dep:rand" "dep:tracing" "fuel-core-types/random" "fuel-core-types/test-helpers") ("std" "itertools/use_std" "serde_json/std" "fuel-core-types/std" "anyhow/std" "tracing?/std" "bech32?/std") ("random" "dep:rand" "fuel-core-types/random") ("parquet" "std" "dep:parquet" "postcard/use-std"))))))

(define-public crate-fuel-core-chain-config-0.24.1 (c (n "fuel-core-chain-config") (v "0.24.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (o #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 2)) (d (n "fuel-core-storage") (r "^0.24.1") (k 0)) (d (n "fuel-core-types") (r "^0.24.1") (f (quote ("serde"))) (k 0)) (d (n "fuel-core-types") (r "^0.24.1") (f (quote ("random" "serde"))) (k 2)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.12") (f (quote ("use_alloc"))) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("zstd"))) (o #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 2)) (d (n "serde_with") (r "^3.4") (f (quote ("macros" "hex"))) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)))) (h "15v8ij6s62ckgb5lfr6s98b9f046piyn4i7054dlplfbs33a6g97") (f (quote (("default" "std")))) (s 2) (e (quote (("test-helpers" "dep:bech32" "dep:rand" "dep:tracing" "fuel-core-types/random" "fuel-core-types/test-helpers") ("std" "itertools/use_std" "serde_json/std" "fuel-core-types/std" "anyhow/std" "tracing?/std" "bech32?/std") ("random" "dep:rand" "fuel-core-types/random") ("parquet" "std" "dep:parquet" "postcard/use-std"))))))

(define-public crate-fuel-core-chain-config-0.24.2 (c (n "fuel-core-chain-config") (v "0.24.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (o #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 2)) (d (n "fuel-core-storage") (r "^0.24.2") (k 0)) (d (n "fuel-core-types") (r "^0.24.2") (f (quote ("serde"))) (k 0)) (d (n "fuel-core-types") (r "^0.24.2") (f (quote ("random" "serde"))) (k 2)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.12") (f (quote ("use_alloc"))) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("zstd"))) (o #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 2)) (d (n "serde_with") (r "^3.4") (f (quote ("macros" "hex"))) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)))) (h "12ykav345m8jh5linqwsdhp3yv94dncazfgjnlcd20rfgz2yjm46") (f (quote (("default" "std")))) (s 2) (e (quote (("test-helpers" "dep:bech32" "dep:rand" "dep:tracing" "fuel-core-types/random" "fuel-core-types/test-helpers") ("std" "itertools/use_std" "serde_json/std" "fuel-core-types/std" "anyhow/std" "tracing?/std" "bech32?/std") ("random" "dep:rand" "fuel-core-types/random") ("parquet" "std" "dep:parquet" "postcard/use-std"))))))

(define-public crate-fuel-core-chain-config-0.25.0 (c (n "fuel-core-chain-config") (v "0.25.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (o #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.25.0") (k 0)) (d (n "fuel-core-types") (r "^0.25.0") (f (quote ("serde"))) (k 0)) (d (n "fuel-core-types") (r "^0.25.0") (f (quote ("random" "serde"))) (k 2)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.12") (f (quote ("use_alloc"))) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("zstd"))) (o #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 2)) (d (n "serde_with") (r "^3.4") (f (quote ("macros" "hex"))) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)))) (h "0p9iz7h5mkdl3xjsd3a134alyqjpa5imyi9vwcf6r90a2ml3frb8") (f (quote (("default" "std")))) (s 2) (e (quote (("test-helpers" "dep:bech32" "dep:rand" "dep:tracing" "fuel-core-types/random" "fuel-core-types/test-helpers") ("std" "itertools/use_std" "serde_json/std" "fuel-core-types/std" "anyhow/std" "tracing?/std" "bech32?/std") ("random" "dep:rand" "fuel-core-types/random") ("parquet" "std" "dep:parquet" "postcard/use-std"))))))

(define-public crate-fuel-core-chain-config-0.25.1 (c (n "fuel-core-chain-config") (v "0.25.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (o #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.25.1") (k 0)) (d (n "fuel-core-types") (r "^0.25.1") (f (quote ("serde"))) (k 0)) (d (n "fuel-core-types") (r "^0.25.1") (f (quote ("random" "serde"))) (k 2)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.12") (f (quote ("use_alloc"))) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("zstd"))) (o #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 2)) (d (n "serde_with") (r "^3.4") (f (quote ("macros" "hex"))) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)))) (h "1cl64bj50cj9077b4f44sacmysljpdgxv9iv6awbcirbzxlznsza") (f (quote (("default" "std")))) (s 2) (e (quote (("test-helpers" "dep:bech32" "dep:rand" "dep:tracing" "fuel-core-types/random" "fuel-core-types/test-helpers") ("std" "itertools/use_std" "serde_json/std" "fuel-core-types/std" "anyhow/std" "tracing?/std" "bech32?/std") ("random" "dep:rand" "fuel-core-types/random") ("parquet" "std" "dep:parquet" "postcard/use-std"))))))

(define-public crate-fuel-core-chain-config-0.25.2 (c (n "fuel-core-chain-config") (v "0.25.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (o #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.25.2") (k 0)) (d (n "fuel-core-types") (r "^0.25.2") (f (quote ("serde"))) (k 0)) (d (n "fuel-core-types") (r "^0.25.2") (f (quote ("random" "serde"))) (k 2)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.12") (f (quote ("use_alloc"))) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("zstd"))) (o #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 2)) (d (n "serde_with") (r "^3.4") (f (quote ("macros" "hex"))) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)))) (h "1kgsp7jydzxq6r996as7rnhqknxqiafn7rjx4hz1syjfz78lhpgm") (f (quote (("default" "std")))) (s 2) (e (quote (("test-helpers" "dep:bech32" "dep:rand" "dep:tracing" "fuel-core-types/random" "fuel-core-types/test-helpers") ("std" "itertools/use_std" "serde_json/std" "fuel-core-types/std" "anyhow/std" "tracing?/std" "bech32?/std") ("random" "dep:rand" "fuel-core-types/random") ("parquet" "std" "dep:parquet" "postcard/use-std"))))))

(define-public crate-fuel-core-chain-config-0.24.3 (c (n "fuel-core-chain-config") (v "0.24.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (o #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 2)) (d (n "fuel-core-storage") (r "^0.24.3") (k 0)) (d (n "fuel-core-types") (r "^0.24.3") (f (quote ("serde"))) (k 0)) (d (n "fuel-core-types") (r "^0.24.3") (f (quote ("random" "serde"))) (k 2)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.12") (f (quote ("use_alloc"))) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("zstd"))) (o #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 2)) (d (n "serde_with") (r "^3.4") (f (quote ("macros" "hex"))) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)))) (h "1xc48k0j93y6asnikfl76m6dyacy7nich67d84wld6i7ivyrm4i3") (f (quote (("default" "std")))) (s 2) (e (quote (("test-helpers" "dep:bech32" "dep:rand" "dep:tracing" "fuel-core-types/random" "fuel-core-types/test-helpers") ("std" "itertools/use_std" "serde_json/std" "fuel-core-types/std" "anyhow/std" "tracing?/std" "bech32?/std") ("random" "dep:rand" "fuel-core-types/random") ("parquet" "std" "dep:parquet" "postcard/use-std"))))))

(define-public crate-fuel-core-chain-config-0.25.3 (c (n "fuel-core-chain-config") (v "0.25.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (o #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.25.3") (k 0)) (d (n "fuel-core-types") (r "^0.25.3") (f (quote ("serde"))) (k 0)) (d (n "fuel-core-types") (r "^0.25.3") (f (quote ("random" "serde"))) (k 2)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.12") (f (quote ("use_alloc"))) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("zstd"))) (o #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 2)) (d (n "serde_with") (r "^3.4") (f (quote ("macros" "hex"))) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)))) (h "1jj7yay0ag8n10csi0w9swln1xhfbr81dqgskhcp94rv74sxi3a5") (f (quote (("default" "std")))) (s 2) (e (quote (("test-helpers" "dep:bech32" "dep:rand" "dep:tracing" "fuel-core-types/random" "fuel-core-types/test-helpers") ("std" "itertools/use_std" "serde_json/std" "fuel-core-types/std" "anyhow/std" "tracing?/std" "bech32?/std") ("random" "dep:rand" "fuel-core-types/random") ("parquet" "std" "dep:parquet" "postcard/use-std"))))))

(define-public crate-fuel-core-chain-config-0.26.0 (c (n "fuel-core-chain-config") (v "0.26.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (o #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.26.0") (k 0)) (d (n "fuel-core-types") (r "^0.26.0") (f (quote ("serde"))) (k 0)) (d (n "fuel-core-types") (r "^0.26.0") (f (quote ("random" "serde"))) (k 2)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.12") (f (quote ("use_alloc"))) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("zstd"))) (o #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 2)) (d (n "serde_with") (r "^3.4") (f (quote ("macros" "hex"))) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)))) (h "1603d6yh54cppd840b4mkp86zmv9wic6l850qnyq525rzqfzw0nj") (f (quote (("default" "std")))) (s 2) (e (quote (("test-helpers" "dep:bech32" "dep:rand" "dep:tracing" "fuel-core-types/random" "fuel-core-types/test-helpers") ("std" "itertools/use_std" "serde_json/std" "fuel-core-types/std" "anyhow/std" "tracing?/std" "bech32?/std") ("random" "dep:rand" "fuel-core-types/random") ("parquet" "std" "dep:parquet" "postcard/use-std"))))))

(define-public crate-fuel-core-chain-config-0.27.0 (c (n "fuel-core-chain-config") (v "0.27.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (o #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "fuel-core-storage") (r "^0.27.0") (k 0)) (d (n "fuel-core-types") (r "^0.27.0") (f (quote ("serde"))) (k 0)) (d (n "fuel-core-types") (r "^0.27.0") (f (quote ("random" "serde"))) (k 2)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "itertools") (r "^0.12") (f (quote ("use_alloc"))) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("zstd"))) (o #t) (k 0)) (d (n "postcard") (r "^1.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 2)) (d (n "serde_with") (r "^3.4") (f (quote ("macros" "hex"))) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)))) (h "0zs7bzisj1bvjmzp4pgrapvcfsm7yglvx00m288qpmd5qii3fchn") (f (quote (("default" "std")))) (s 2) (e (quote (("test-helpers" "dep:bech32" "dep:rand" "dep:tracing" "fuel-core-types/random" "fuel-core-types/test-helpers") ("std" "itertools/use_std" "serde_json/std" "fuel-core-types/std" "anyhow/std" "tracing?/std" "bech32?/std") ("random" "dep:rand" "fuel-core-types/random") ("parquet" "std" "dep:parquet" "postcard/use-std"))))))

