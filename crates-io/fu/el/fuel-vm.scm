(define-module (crates-io fu el fuel-vm) #:use-module (crates-io))

(define-public crate-fuel-vm-0.1.1 (c (n "fuel-vm") (v "0.1.1") (d (list (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.1") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.1") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.1") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.1") (d #t) (k 0)) (d (n "fuel-types") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "16cz41amsn91fi6qn10lfr8i0xx28brnjrl757vki3bsd06k3ngy") (f (quote (("serde-types" "fuel-asm/serde-types" "fuel-types/serde-types" "fuel-tx/serde-types" "serde") ("random" "fuel-types/random" "fuel-tx/random") ("profile-gas" "profile-any") ("profile-any" "dyn-clone") ("debug"))))))

(define-public crate-fuel-vm-0.2.0 (c (n "fuel-vm") (v "0.2.0") (d (list (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.1") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.1") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.1") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.2") (d #t) (k 0)) (d (n "fuel-types") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0ki2i9z20ks39b4kp6p3s9khp874l86ydzlrj3qln2i3yj21b9g6") (f (quote (("serde-types" "fuel-asm/serde-types" "fuel-types/serde-types" "fuel-tx/serde-types" "serde") ("random" "fuel-types/random" "fuel-tx/random") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug"))))))

(define-public crate-fuel-vm-0.3.0 (c (n "fuel-vm") (v "0.3.0") (d (list (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.1") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.1") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.1") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.3") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.3") (f (quote ("random"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1wk4p545l3y0n1grnsdygdz2y9xxjhqfqvp5f5ycs73frb4354aj") (f (quote (("test-helpers" "random") ("serde-types" "fuel-asm/serde-types" "fuel-types/serde-types" "fuel-tx/serde-types" "serde") ("random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug"))))))

(define-public crate-fuel-vm-0.4.0 (c (n "fuel-vm") (v "0.4.0") (d (list (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.1") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.1") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.1") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.5") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.5") (f (quote ("random"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "05z57jnkjm28dds77faf63j2l7sh6fi7ndhi2zv15vzwzbw2p129") (f (quote (("test-helpers" "random") ("serde-types" "fuel-asm/serde-types" "fuel-types/serde-types" "fuel-tx/serde-types" "serde") ("random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug"))))))

(define-public crate-fuel-vm-0.4.1 (c (n "fuel-vm") (v "0.4.1") (d (list (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.1") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.1") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.1") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.5") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.5") (f (quote ("random"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "04by5adm2xzacvi0nc6ys6fckwdqghdpg6lk1kilmnmxwl5qs4c8") (f (quote (("test-helpers" "random") ("serde-types" "fuel-asm/serde-types" "fuel-types/serde-types" "fuel-tx/serde-types" "serde") ("random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug"))))))

(define-public crate-fuel-vm-0.5.0 (c (n "fuel-vm") (v "0.5.0") (d (list (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.2") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.3") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.1") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.1") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.6") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.6") (f (quote ("random"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "18rilyl00rl8kbs2dlchmlrmqar54cbr78zwpinlg3l46pwmzicf") (f (quote (("test-helpers" "random") ("serde-types" "fuel-asm/serde-types" "fuel-types/serde-types" "fuel-tx/serde-types" "serde") ("random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug"))))))

(define-public crate-fuel-vm-0.5.1 (c (n "fuel-vm") (v "0.5.1") (d (list (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.2") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.3") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.1") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.1") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.6") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.6") (f (quote ("random"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1nbhrsqnyd2bfp925jpl4dj27qpwz2hmg5myxkfsxc4nvck869an") (f (quote (("test-helpers" "random") ("serde-types" "fuel-asm/serde-types" "fuel-types/serde-types" "fuel-tx/serde-types" "serde") ("random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug"))))))

(define-public crate-fuel-vm-0.6.0 (c (n "fuel-vm") (v "0.6.0") (d (list (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.3") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.3") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.1") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.1") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.7") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.7") (f (quote ("random"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "05z8znxjkxkgacdjsmcn8r6ijz5aspgjqgmpqhdgkx99zgcbyj2c") (f (quote (("test-helpers" "random") ("serde-types" "fuel-asm/serde-types" "fuel-types/serde-types" "fuel-tx/serde-types" "serde") ("random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug"))))))

(define-public crate-fuel-vm-0.7.0 (c (n "fuel-vm") (v "0.7.0") (d (list (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.3") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.4") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.1") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.1") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.8") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.8") (f (quote ("random"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0fda1wqv74nl2lzq0axj99rgv5l4y9w8nikf2y2rmsckn5mfwvpp") (f (quote (("test-helpers" "random") ("serde-types" "fuel-asm/serde-types" "fuel-types/serde-types" "fuel-tx/serde-types" "serde") ("random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug"))))))

(define-public crate-fuel-vm-0.8.0 (c (n "fuel-vm") (v "0.8.0") (d (list (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.4") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.4") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.1") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.1") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.9") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.9") (f (quote ("random"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "05i3642v346zynmivn2fxc318n195zhppac17s66n132z1q87z39") (f (quote (("test-helpers" "random") ("serde-types" "fuel-asm/serde-types" "fuel-types/serde-types" "fuel-tx/serde-types" "serde") ("random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug"))))))

(define-public crate-fuel-vm-0.9.0 (c (n "fuel-vm") (v "0.9.0") (d (list (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.5") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.5") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.1") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.1") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.10") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.10") (f (quote ("random"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0r3bm9pzkwkvn7fyddzrcrdx7345839qri5280l7lhmghjna9gv2") (f (quote (("test-helpers" "random") ("random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug")))) (s 2) (e (quote (("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.9.1 (c (n "fuel-vm") (v "0.9.1") (d (list (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.5") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.5") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.1") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.1") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.10") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.10") (f (quote ("random"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1jxx1gk47fzyvr9h91rnbi1wg3k8sazfdvriaa0kv7vssx9xrhl0") (f (quote (("test-helpers" "random") ("random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug")))) (s 2) (e (quote (("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.10.0 (c (n "fuel-vm") (v "0.10.0") (d (list (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.5") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.5") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.1") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.1") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.11") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.11") (f (quote ("random"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1a2hzfdda21dydrjfbb77s3dvx4d4fzyri5lcccqwnnbqqwvaaz4") (f (quote (("test-helpers" "random") ("random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug")))) (s 2) (e (quote (("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.11.0 (c (n "fuel-vm") (v "0.11.0") (d (list (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.5") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.5") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.1") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.1") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.12") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.12") (f (quote ("random"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0ibykzl6qbb7xhf7wi2068sizp8fmyzqx6k5l8ka15xkhy1appyl") (f (quote (("test-helpers" "random") ("random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug")))) (s 2) (e (quote (("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.11.1 (c (n "fuel-vm") (v "0.11.1") (d (list (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.5") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.5") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.1") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.1") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.12") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.12") (f (quote ("random"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1lsi5imsq6cq2sf118sgi07rhhj7mwkfn0njv7wq3szsx7zhv9vn") (f (quote (("test-helpers" "random") ("random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug")))) (s 2) (e (quote (("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.12.0 (c (n "fuel-vm") (v "0.12.0") (d (list (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.5") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.5") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.1") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.1") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.13") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.13") (f (quote ("random"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0qhqs9pdbf47hh8vnsp59nvsymxxlfh4y0binsikjq9cgi2hww75") (f (quote (("test-helpers" "random") ("random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug")))) (s 2) (e (quote (("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.12.1 (c (n "fuel-vm") (v "0.12.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.5") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.5") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.5") (f (quote ("random"))) (d #t) (k 2)) (d (n "fuel-merkle") (r "^0.1") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.1") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.13") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.13") (f (quote ("random" "internals" "builder"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1iklzk8y6m7rj7h4f6261bbwimmc7d37lzlw40yjw1hp4g0ik069") (f (quote (("random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug")))) (s 2) (e (quote (("test-helpers" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.12.2 (c (n "fuel-vm") (v "0.12.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.5") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.5") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.5") (f (quote ("random"))) (d #t) (k 2)) (d (n "fuel-merkle") (r "^0.1") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.1") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.13") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.13") (f (quote ("random" "internals" "builder"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "086ciagqi7k8migl4msp2wqdp1843syldnfdxv33pwg46xf87mvj") (f (quote (("random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug")))) (s 2) (e (quote (("test-helpers" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.12.3 (c (n "fuel-vm") (v "0.12.3") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.5") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.5") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.5") (f (quote ("random"))) (d #t) (k 2)) (d (n "fuel-merkle") (r "^0.1") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.1") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.13") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.13") (f (quote ("random" "internals" "builder"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1yymzvx50da9k1m50wipy5yvgcvvf7p42qfh5rs0ixkhl38yy3vz") (f (quote (("random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug")))) (s 2) (e (quote (("test-helpers" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.13.0 (c (n "fuel-vm") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.6") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.5") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.3") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.1") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.16") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.16") (f (quote ("builder" "internals"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1d3vby9sis0z4m8z2lwl4gsi41n0a7s2f3g3c2gcc35a5zv0n9d6") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.14.0 (c (n "fuel-vm") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.7") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.5") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.3") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.1") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.17") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.17") (f (quote ("builder" "internals"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0zwk5jvfay29b0fn76y52h7l6cwxmg549cmrimbxzp5ipl6szv6w") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.15.0 (c (n "fuel-vm") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.8") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.6") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.3") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.2") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.18") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.18") (f (quote ("builder" "internals"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "secp256k1") (r "^0.24") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1li9mjx03qparay571ygdsviayv866yzrpzng6nw0w25a3y60vai") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.16.0 (c (n "fuel-vm") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.9") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.6") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.3") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.2") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.19") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.19") (f (quote ("builder" "internals"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "secp256k1") (r "^0.24") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0qzn78lg9c837zrvnkq3s2vf7i0xh82d8j5j4gaxg933115vrga4") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.17.0 (c (n "fuel-vm") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.9") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.6") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.4") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.3") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.19") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.19") (f (quote ("builder" "internals"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "secp256k1") (r "^0.24") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0q8kv2aasjmbrmgkxnkl9rmdlc4q9qq6xvb18m34s4fb0wkz6n36") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.18.0 (c (n "fuel-vm") (v "0.18.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.9") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.6") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.4") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.3") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.20") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.20") (f (quote ("builder" "internals"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "secp256k1") (r "^0.24") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "04k0p4nn4309j3cj33g00h8gar7c5hxg82i3kvr1i1agny257svc") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.18.1 (c (n "fuel-vm") (v "0.18.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.9") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.6") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.4") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.3") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.20") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.20") (f (quote ("builder" "internals"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "secp256k1") (r "^0.24") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "03n50lp5jd4cqjqdqmr7wxjxcdj24innqf6kn3d057cxcz5jqhxh") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.18.2 (c (n "fuel-vm") (v "0.18.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.9") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.6") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.4") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.3") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.20") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.20") (f (quote ("builder" "internals"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "secp256k1") (r "^0.24") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0iwxc1624w2537lxkb4fp5bhqpl2jx6r7gzpfqj99a3m11k65g0j") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default" "optimized") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.19.0 (c (n "fuel-vm") (v "0.19.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.9") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.6") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.4") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.3") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.21") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.21") (f (quote ("builder" "internals"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0zfybiwaps4zi1n6w1fysr24ffna38162372fwiib2sy34msfr6p") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default" "optimized") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.20.0 (c (n "fuel-vm") (v "0.20.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.9") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.6") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.4") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.3") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.22") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.22") (f (quote ("builder"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0377ym6kkgmldg7kzv1y8ps332k6rvwx0594zaxzgx1a7cyc26fd") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default" "optimized") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.21.0 (c (n "fuel-vm") (v "0.21.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.10") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.6") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.4") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.3") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.23") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.23") (f (quote ("builder"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "184xg4qlfwizb97jyrc2k5k3fqzbhf07j24d4jsj9rmifwm5w80l") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default" "optimized") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.22.0 (c (n "fuel-vm") (v "0.22.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.10") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.6") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.4") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.3") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.23") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.23") (f (quote ("builder"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "09b6wcm4m0q1l54ncf6xx7i3al6waxfcy6jjynh829gx58z9h7yl") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default" "optimized") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.22.1 (c (n "fuel-vm") (v "0.22.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.10") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.6") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.4") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.3") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.23") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.23") (f (quote ("builder"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0x0mp4vrcnvia94mgs9jdaaj1klff3c4qv9nxsh2da2rq4rp23g1") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default" "optimized") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.22.2 (c (n "fuel-vm") (v "0.22.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.10") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.6") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.4") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.3") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.23") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.23") (f (quote ("builder"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "074v1vrwrrn4rz1g0j2jpbgmnd33m0ncd21sisq21ba4g9pq389h") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default" "optimized") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.22.3 (c (n "fuel-vm") (v "0.22.3") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.10") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.6") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.4") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.3") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.23") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.23") (f (quote ("builder"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1yf8kp0a7awmqcrdshpdjxf862jp2kznkpjlpdqd959iyzkqbrlq") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default" "optimized") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.22.4 (c (n "fuel-vm") (v "0.22.4") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.10") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.6") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.4") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.3") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.23") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.23") (f (quote ("builder"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "02i07s9d1bs657qggzh4lhs3wmw9svmzxmfb9mn4d48hqxyf7khd") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default" "optimized") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.22.5 (c (n "fuel-vm") (v "0.22.5") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.10") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.6") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.4") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.3") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.23") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.23") (f (quote ("builder"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0fzrvbnf6mpzd6hlnlx25gpv9044ii8fk2xy19x7x4vx9pfwpm7q") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default" "optimized") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.22.6 (c (n "fuel-vm") (v "0.22.6") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.10") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.6") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.4") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.3") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.23") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.23") (f (quote ("builder"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0q05acgp76ylmqyzq295pzllmxvbyjk5qy7354xi679fyknaj88m") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default" "optimized") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.22.7 (c (n "fuel-vm") (v "0.22.7") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.10") (d #t) (k 0)) (d (n "fuel-crypto") (r "^0.6") (d #t) (k 0)) (d (n "fuel-merkle") (r "^0.4") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.3") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.23") (d #t) (k 0)) (d (n "fuel-tx") (r "^0.23") (f (quote ("builder"))) (d #t) (k 2)) (d (n "fuel-types") (r "^0.5") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1nkzjfsg2a5l3ccxpaijax76ra2nlh7gmmjgnh27g4kzf4mcch35") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default" "optimized") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.24.0 (c (n "fuel-vm") (v "0.24.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.24.0") (k 0)) (d (n "fuel-crypto") (r "^0.24.0") (k 0)) (d (n "fuel-merkle") (r "^0.4") (d #t) (k 0)) (d (n "fuel-storage") (r "^0.24.0") (k 0)) (d (n "fuel-tx") (r "^0.24.0") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.24.0") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.24.0") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tuples") (r "^1") (d #t) (k 0)))) (h "1mpkmbvakj3dcm66iljz1izigyfprlmpgckxiqjqxn3xlrbwqvcq") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default" "optimized") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.25.0 (c (n "fuel-vm") (v "0.25.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.25.0") (k 0)) (d (n "fuel-crypto") (r "^0.25.0") (k 0)) (d (n "fuel-merkle") (r "^0.25.0") (k 0)) (d (n "fuel-storage") (r "^0.25.0") (k 0)) (d (n "fuel-tx") (r "^0.25.0") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.25.0") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.25.0") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0cgjb6jr7vyxwyz4mcxaabpmh0zpy8v4xg6g62cj77yz7kdizk6n") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default" "optimized") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.25.1 (c (n "fuel-vm") (v "0.25.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.25.1") (k 0)) (d (n "fuel-crypto") (r "^0.25.1") (k 0)) (d (n "fuel-merkle") (r "^0.25.1") (k 0)) (d (n "fuel-storage") (r "^0.25.1") (k 0)) (d (n "fuel-tx") (r "^0.25.1") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.25.1") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.25.1") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1dpal3zyy628b3qmg0iwki749zwnpbvcyaw79a7vnls96nwgmxsj") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default" "optimized") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.25.2 (c (n "fuel-vm") (v "0.25.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.25.2") (k 0)) (d (n "fuel-crypto") (r "^0.25.2") (k 0)) (d (n "fuel-merkle") (r "^0.25.2") (k 0)) (d (n "fuel-storage") (r "^0.25.2") (k 0)) (d (n "fuel-tx") (r "^0.25.2") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.25.2") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.25.2") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "14ib5rhz5m45vhapsb4dnpbdwixwmx79ivlxjbqgf7b9cwmggq0b") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default" "optimized") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.25.3 (c (n "fuel-vm") (v "0.25.3") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.25.3") (k 0)) (d (n "fuel-crypto") (r "^0.25.3") (k 0)) (d (n "fuel-merkle") (r "^0.25.3") (k 0)) (d (n "fuel-storage") (r "^0.25.3") (k 0)) (d (n "fuel-tx") (r "^0.25.3") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.25.3") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.25.3") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0crwi3v901kh0x2jd7hrj8qi0x2vji16zysp8q8jsra15rnbhm7g") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default" "optimized") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.26.0 (c (n "fuel-vm") (v "0.26.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.26.0") (k 0)) (d (n "fuel-crypto") (r "^0.26.0") (k 0)) (d (n "fuel-merkle") (r "^0.26.0") (k 0)) (d (n "fuel-storage") (r "^0.26.0") (k 0)) (d (n "fuel-tx") (r "^0.26.0") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.26.0") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.26.0") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "11f1gcnp3hzdkim5pbmd8da6c5jl8xkdb9i4mks40p8v4bc2dg6z") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default" "optimized") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.26.1 (c (n "fuel-vm") (v "0.26.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.26.1") (k 0)) (d (n "fuel-crypto") (r "^0.26.1") (k 0)) (d (n "fuel-merkle") (r "^0.26.1") (k 0)) (d (n "fuel-storage") (r "^0.26.1") (k 0)) (d (n "fuel-tx") (r "^0.26.1") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.26.1") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.26.1") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0dhnyvilc5a5w986qpvjijnzq67gs8x6wzi3rgal74mywdqbznw7") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default" "optimized") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.27.0 (c (n "fuel-vm") (v "0.27.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.27.0") (k 0)) (d (n "fuel-crypto") (r "^0.27.0") (k 0)) (d (n "fuel-merkle") (r "^0.27.0") (k 0)) (d (n "fuel-storage") (r "^0.27.0") (k 0)) (d (n "fuel-tx") (r "^0.27.0") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.27.0") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.27.0") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "rstest") (r "^0.16") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0wcci996mhyhmhz1hynxx9r49q56iry8kg127azqpnmjmr9rzf6l") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default" "optimized") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.28.1 (c (n "fuel-vm") (v "0.28.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.28.1") (k 0)) (d (n "fuel-crypto") (r "^0.28.1") (k 0)) (d (n "fuel-merkle") (r "^0.28.1") (k 0)) (d (n "fuel-storage") (r "^0.28.1") (k 0)) (d (n "fuel-tx") (r "^0.28.1") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.28.1") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.28.1") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "rstest") (r "^0.16") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "15rh9aj3lgvc5zw9jfzr07cpi5ff8f0zixjr3c0g830yr4qvlp42") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.29.0 (c (n "fuel-vm") (v "0.29.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.29.0") (k 0)) (d (n "fuel-crypto") (r "^0.29.0") (k 0)) (d (n "fuel-merkle") (r "^0.29.0") (k 0)) (d (n "fuel-storage") (r "^0.29.0") (k 0)) (d (n "fuel-tx") (r "^0.29.0") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.29.0") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.29.0") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "rstest") (r "^0.16") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0a6vaw94gbx7pfiy1bvxs9c97yg083bwwwlysnwv92dqajv6vpg6") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.30.0 (c (n "fuel-vm") (v "0.30.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.30.0") (k 0)) (d (n "fuel-crypto") (r "^0.30.0") (k 0)) (d (n "fuel-merkle") (r "^0.30.0") (k 0)) (d (n "fuel-storage") (r "^0.30.0") (k 0)) (d (n "fuel-tx") (r "^0.30.0") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.30.0") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.30.0") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "rstest") (r "^0.16") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "141my2acvcdhhb7hv1xcrcsa2n7phzkq8w7f8cpk72wi7js525wl") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.26.2 (c (n "fuel-vm") (v "0.26.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.26.2") (k 0)) (d (n "fuel-crypto") (r "^0.26.2") (k 0)) (d (n "fuel-merkle") (r "^0.26.2") (k 0)) (d (n "fuel-storage") (r "^0.26.2") (k 0)) (d (n "fuel-tx") (r "^0.26.2") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.26.2") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.26.2") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0wc0yzz01zcb4n932lckyzlnlrjpmz6asji0snm2xz7b8mnw1afj") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default" "optimized") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.26.3 (c (n "fuel-vm") (v "0.26.3") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.26.3") (k 0)) (d (n "fuel-crypto") (r "^0.26.3") (k 0)) (d (n "fuel-merkle") (r "^0.26.3") (k 0)) (d (n "fuel-storage") (r "^0.26.3") (k 0)) (d (n "fuel-tx") (r "^0.26.3") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.26.3") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.26.3") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0f3vbd7hhvrp3i4laxq61jps2dhx5q8pdnk509i4rf99fxraqsmk") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default" "optimized") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.31.0 (c (n "fuel-vm") (v "0.31.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.31.0") (k 0)) (d (n "fuel-crypto") (r "^0.31.0") (k 0)) (d (n "fuel-merkle") (r "^0.31.0") (k 0)) (d (n "fuel-storage") (r "^0.31.0") (k 0)) (d (n "fuel-tx") (r "^0.31.0") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.31.0") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.31.0") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.16") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0q143v6wnsgkcjg0m76jwvn7i7pj38gzfm0g9i7hk4m2qbx02kmw") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.31.1 (c (n "fuel-vm") (v "0.31.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.31.1") (k 0)) (d (n "fuel-crypto") (r "^0.31.1") (k 0)) (d (n "fuel-merkle") (r "^0.31.1") (k 0)) (d (n "fuel-storage") (r "^0.31.1") (k 0)) (d (n "fuel-tx") (r "^0.31.1") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.31.1") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.31.1") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.16") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0lb070x82svz43jicxa2q8n95fcvhxb2jjgx3j4p7m1rnpkga15x") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.32.0 (c (n "fuel-vm") (v "0.32.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.32.0") (k 0)) (d (n "fuel-crypto") (r "^0.32.0") (k 0)) (d (n "fuel-merkle") (r "^0.32.0") (k 0)) (d (n "fuel-storage") (r "^0.32.0") (k 0)) (d (n "fuel-tx") (r "^0.32.0") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.32.0") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.32.0") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "12brf6ya9x0npb1xw5ig59fk1006ikqcx5d2dj4x8wsnkcq05k3j") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.33.0 (c (n "fuel-vm") (v "0.33.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.33.0") (k 0)) (d (n "fuel-crypto") (r "^0.33.0") (k 0)) (d (n "fuel-merkle") (r "^0.33.0") (k 0)) (d (n "fuel-storage") (r "^0.33.0") (k 0)) (d (n "fuel-tx") (r "^0.33.0") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.33.0") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.33.0") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0yr5qmyfla03gjdfr8xnf7k5mijspbrfb2mvprn1cn7rqlphgqm7") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.31.2 (c (n "fuel-vm") (v "0.31.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fuel-asm") (r "^0.31.2") (k 0)) (d (n "fuel-crypto") (r "^0.31.2") (k 0)) (d (n "fuel-merkle") (r "^0.31.2") (k 0)) (d (n "fuel-storage") (r "^0.31.2") (k 0)) (d (n "fuel-tx") (r "^0.31.2") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.31.2") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.31.2") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.16") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0rbxxpb72ma39cnz56rninv17bnfnvprc3whwjykp4cywsgyjhlx") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.34.0 (c (n "fuel-vm") (v "0.34.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.34.0") (k 0)) (d (n "fuel-crypto") (r "^0.34.0") (k 0)) (d (n "fuel-merkle") (r "^0.34.0") (k 0)) (d (n "fuel-storage") (r "^0.34.0") (k 0)) (d (n "fuel-tx") (r "^0.34.0") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.34.0") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.34.0") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1wz2nxz50v2qjixr39m55zzf1jm60c8niqvs5skcgwl5xcnb28ww") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.34.1 (c (n "fuel-vm") (v "0.34.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.34.1") (k 0)) (d (n "fuel-crypto") (r "^0.34.1") (k 0)) (d (n "fuel-merkle") (r "^0.34.1") (k 0)) (d (n "fuel-storage") (r "^0.34.1") (k 0)) (d (n "fuel-tx") (r "^0.34.1") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.34.1") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.34.1") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0iva63bj097fvlh215smhnzq1kb11fglnpyabglbxz1li9q3386k") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.35.0 (c (n "fuel-vm") (v "0.35.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0") (d #t) (k 2)) (d (n "ed25519-dalek_old_rand") (r "^0.7.3") (d #t) (k 2) (p "rand")) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.35.0") (k 0)) (d (n "fuel-crypto") (r "^0.35.0") (k 0)) (d (n "fuel-crypto") (r "^0.35.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.35.0") (k 0)) (d (n "fuel-storage") (r "^0.35.0") (k 0)) (d (n "fuel-tx") (r "^0.35.0") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.35.0") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.35.0") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "1c3rgama978d2mgcypw2rrg88yc9zaiflh8cq5lvgmwlgkpp0qgn") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.35.1 (c (n "fuel-vm") (v "0.35.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0") (d #t) (k 2)) (d (n "ed25519-dalek_old_rand") (r "^0.7.3") (d #t) (k 2) (p "rand")) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.35.1") (k 0)) (d (n "fuel-crypto") (r "^0.35.1") (k 0)) (d (n "fuel-crypto") (r "^0.35.1") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.35.1") (k 0)) (d (n "fuel-storage") (r "^0.35.1") (k 0)) (d (n "fuel-tx") (r "^0.35.1") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.35.1") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.35.1") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "0fpnhd2iw554q828abkasj68lq7m4q75fs8cdrfsylqb8ll3ib0x") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.35.2 (c (n "fuel-vm") (v "0.35.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0") (d #t) (k 2)) (d (n "ed25519-dalek_old_rand") (r "^0.7.3") (d #t) (k 2) (p "rand")) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.35.2") (k 0)) (d (n "fuel-crypto") (r "^0.35.2") (k 0)) (d (n "fuel-crypto") (r "^0.35.2") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.35.2") (k 0)) (d (n "fuel-storage") (r "^0.35.2") (k 0)) (d (n "fuel-tx") (r "^0.35.2") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.35.2") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.35.2") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "053irs9psn0kx3ygs58prlh38kxh1iy9wyrkma8xxy95q5mlx4ra") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.35.3 (c (n "fuel-vm") (v "0.35.3") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0") (d #t) (k 2)) (d (n "ed25519-dalek_old_rand") (r "^0.7.3") (d #t) (k 2) (p "rand")) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.35.3") (k 0)) (d (n "fuel-crypto") (r "^0.35.3") (k 0)) (d (n "fuel-crypto") (r "^0.35.3") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.35.3") (k 0)) (d (n "fuel-storage") (r "^0.35.3") (k 0)) (d (n "fuel-tx") (r "^0.35.3") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.35.3") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.35.3") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "0119djc8cmazz3mssi2x01ww5nc9drv8jh0p5hclff26hnbd35gk") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.36.0 (c (n "fuel-vm") (v "0.36.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0") (d #t) (k 2)) (d (n "ed25519-dalek_old_rand") (r "^0.7.3") (d #t) (k 2) (p "rand")) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.36.0") (k 0)) (d (n "fuel-crypto") (r "^0.36.0") (k 0)) (d (n "fuel-crypto") (r "^0.36.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.36.0") (k 0)) (d (n "fuel-storage") (r "^0.36.0") (k 0)) (d (n "fuel-tx") (r "^0.36.0") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.36.0") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.36.0") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "0zsmm40gyv4a4yr9bx3gp99amj1lyz7k8g03ir4fwhjzhab40qk0") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.36.1 (c (n "fuel-vm") (v "0.36.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.36.1") (k 0)) (d (n "fuel-crypto") (r "^0.36.1") (k 0)) (d (n "fuel-crypto") (r "^0.36.1") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.36.1") (k 0)) (d (n "fuel-storage") (r "^0.36.1") (k 0)) (d (n "fuel-tx") (r "^0.36.1") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.36.1") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.36.1") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "1s6xjg0ji37shqnkjxz51zhm1pa6af39bknqjrkfkri6diwma4bv") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.35.4 (c (n "fuel-vm") (v "0.35.4") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.35.4") (k 0)) (d (n "fuel-crypto") (r "^0.35.4") (k 0)) (d (n "fuel-crypto") (r "^0.35.4") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.35.4") (k 0)) (d (n "fuel-storage") (r "^0.35.4") (k 0)) (d (n "fuel-tx") (r "^0.35.4") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.35.4") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.35.4") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "12rpkpiapf1ydc6n2dzfvfw5cidw2pnaxgva2fdc6pqlbfrma4kq") (f (quote (("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default") ("debug") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.37.0 (c (n "fuel-vm") (v "0.37.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.37.0") (k 0)) (d (n "fuel-crypto") (r "^0.37.0") (k 0)) (d (n "fuel-crypto") (r "^0.37.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.37.0") (k 0)) (d (n "fuel-storage") (r "^0.37.0") (k 0)) (d (n "fuel-tx") (r "^0.37.0") (f (quote ("builder" "std"))) (k 0)) (d (n "fuel-tx") (r "^0.37.0") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.37.0") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tai64") (r "^4.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "0r3j6qkcpvv5bxy391xnj7xdgbhcizh50c6mjkgfz0c31w68rm6m") (f (quote (("std") ("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("optimized") ("default" "std") ("arbitrary" "fuel-asm/arbitrary")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.38.0 (c (n "fuel-vm") (v "0.38.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.38.0") (k 0)) (d (n "fuel-crypto") (r "^0.38.0") (k 0)) (d (n "fuel-crypto") (r "^0.38.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.38.0") (k 0)) (d (n "fuel-storage") (r "^0.38.0") (k 0)) (d (n "fuel-tx") (r "^0.38.0") (k 0)) (d (n "fuel-tx") (r "^0.38.0") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.38.0") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libm") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (f (quote ("alloc"))) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (k 0)) (d (n "tai64") (r "^4.0") (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "06zz6mcijvqvbl7zzpxsdhlpdrlk0p0gcxyp1cdg9f0n1q2n8mxn") (f (quote (("std" "alloc" "fuel-crypto/std" "fuel-types/std" "fuel-asm/std" "fuel-tx/std" "itertools/use_std") ("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("default" "std") ("arbitrary" "fuel-asm/arbitrary") ("alloc" "fuel-asm/alloc" "fuel-tx/alloc" "fuel-tx/builder")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "alloc" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "hashbrown/serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde"))))))

(define-public crate-fuel-vm-0.39.0 (c (n "fuel-vm") (v "0.39.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.39.0") (k 0)) (d (n "fuel-crypto") (r "^0.39.0") (k 0)) (d (n "fuel-crypto") (r "^0.39.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.39.0") (k 0)) (d (n "fuel-storage") (r "^0.39.0") (k 0)) (d (n "fuel-tx") (r "^0.39.0") (k 0)) (d (n "fuel-tx") (r "^0.39.0") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.39.0") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libm") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (f (quote ("alloc"))) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (k 0)) (d (n "tai64") (r "^4.0") (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "0r0mqw8af9qr03isr9pd4mky0vjbr55n9v96bjqknm8k54xmsfvc") (f (quote (("std" "alloc" "fuel-crypto/std" "fuel-types/std" "fuel-asm/std" "fuel-tx/std" "itertools/use_std") ("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("default" "std") ("arbitrary" "fuel-asm/arbitrary") ("alloc" "fuel-asm/alloc" "fuel-tx/alloc" "fuel-tx/builder")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "alloc" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "hashbrown/serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde" "fuel-merkle/serde"))))))

(define-public crate-fuel-vm-0.40.0 (c (n "fuel-vm") (v "0.40.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.40.0") (k 0)) (d (n "fuel-crypto") (r "^0.40.0") (k 0)) (d (n "fuel-crypto") (r "^0.40.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.40.0") (k 0)) (d (n "fuel-storage") (r "^0.40.0") (k 0)) (d (n "fuel-tx") (r "^0.40.0") (k 0)) (d (n "fuel-tx") (r "^0.40.0") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.40.0") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libm") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (f (quote ("alloc"))) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (k 0)) (d (n "tai64") (r "^4.0") (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "03w9rfd8vyzlzwpxhkixvf1rg5y1q0pcv2qrb3hkniydxrdpnhqk") (f (quote (("std" "alloc" "fuel-crypto/std" "fuel-types/std" "fuel-asm/std" "fuel-tx/std" "itertools/use_std") ("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("default" "std") ("arbitrary" "fuel-asm/arbitrary") ("alloc" "fuel-asm/alloc" "fuel-tx/alloc" "fuel-tx/builder")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "alloc" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "hashbrown/serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde" "fuel-merkle/serde"))))))

(define-public crate-fuel-vm-0.41.0 (c (n "fuel-vm") (v "0.41.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.41.0") (k 0)) (d (n "fuel-crypto") (r "^0.41.0") (k 0)) (d (n "fuel-crypto") (r "^0.41.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.41.0") (k 0)) (d (n "fuel-storage") (r "^0.41.0") (k 0)) (d (n "fuel-tx") (r "^0.41.0") (k 0)) (d (n "fuel-tx") (r "^0.41.0") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.41.0") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libm") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (f (quote ("alloc"))) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (k 0)) (d (n "tai64") (r "^4.0") (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "1jhsa879bpqmy3f8224grmh6h6iq0byjsxg2cxhficwwk9ahq56v") (f (quote (("std" "alloc" "fuel-crypto/std" "fuel-types/std" "fuel-asm/std" "fuel-tx/std" "itertools/use_std") ("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("default" "std") ("arbitrary" "fuel-asm/arbitrary") ("alloc" "fuel-asm/alloc" "fuel-tx/alloc" "fuel-tx/builder")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "alloc" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "hashbrown/serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde" "fuel-merkle/serde"))))))

(define-public crate-fuel-vm-0.42.0 (c (n "fuel-vm") (v "0.42.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.42.0") (k 0)) (d (n "fuel-crypto") (r "^0.42.0") (k 0)) (d (n "fuel-crypto") (r "^0.42.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.42.0") (k 0)) (d (n "fuel-storage") (r "^0.42.0") (k 0)) (d (n "fuel-tx") (r "^0.42.0") (k 0)) (d (n "fuel-tx") (r "^0.42.0") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.42.0") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libm") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (f (quote ("alloc"))) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (k 0)) (d (n "tai64") (r "^4.0") (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "0fslhihd2xx9lqsxw5qsm7wd2iwf7lphklwld1jkqa0imrcjz8cq") (f (quote (("std" "alloc" "fuel-crypto/std" "fuel-types/std" "fuel-asm/std" "fuel-tx/std" "itertools/use_std") ("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("default" "std") ("arbitrary" "fuel-asm/arbitrary") ("alloc" "fuel-asm/alloc" "fuel-tx/alloc" "fuel-tx/builder")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "alloc" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "hashbrown/serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde" "fuel-merkle/serde" "backtrace?/serde"))))))

(define-public crate-fuel-vm-0.42.1 (c (n "fuel-vm") (v "0.42.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.42.1") (k 0)) (d (n "fuel-crypto") (r "^0.42.1") (k 0)) (d (n "fuel-crypto") (r "^0.42.1") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.42.1") (k 0)) (d (n "fuel-storage") (r "^0.42.1") (k 0)) (d (n "fuel-tx") (r "^0.42.1") (k 0)) (d (n "fuel-tx") (r "^0.42.1") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.42.1") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libm") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (f (quote ("alloc"))) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (k 0)) (d (n "tai64") (r "^4.0") (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "1lykykf62qgrmgi1vyq8h4mrn6xqxxfcpk9hvx5nn2qz91s81pgp") (f (quote (("std" "alloc" "fuel-crypto/std" "fuel-types/std" "fuel-asm/std" "fuel-tx/std" "itertools/use_std") ("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("default" "std") ("arbitrary" "fuel-asm/arbitrary") ("alloc" "fuel-asm/alloc" "fuel-tx/alloc" "fuel-tx/builder")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "alloc" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "hashbrown/serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde" "fuel-merkle/serde" "backtrace?/serde"))))))

(define-public crate-fuel-vm-0.42.2 (c (n "fuel-vm") (v "0.42.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.42.2") (k 0)) (d (n "fuel-crypto") (r "^0.42.2") (k 0)) (d (n "fuel-crypto") (r "^0.42.2") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.42.2") (k 0)) (d (n "fuel-storage") (r "^0.42.2") (k 0)) (d (n "fuel-tx") (r "^0.42.2") (k 0)) (d (n "fuel-tx") (r "^0.42.2") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.42.2") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libm") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (f (quote ("alloc"))) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (k 0)) (d (n "tai64") (r "^4.0") (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "04p0wym1qb2x7rivbmm8lasf6czndp1vwfcrsqxiknxdy9nizd38") (f (quote (("std" "alloc" "fuel-crypto/std" "fuel-types/std" "fuel-asm/std" "fuel-tx/std" "itertools/use_std") ("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("default" "std") ("arbitrary" "fuel-asm/arbitrary") ("alloc" "fuel-asm/alloc" "fuel-tx/alloc" "fuel-tx/builder")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "alloc" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "hashbrown/serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde" "fuel-merkle/serde" "backtrace?/serde"))))))

(define-public crate-fuel-vm-0.42.3 (c (n "fuel-vm") (v "0.42.3") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.42.3") (k 0)) (d (n "fuel-crypto") (r "^0.42.3") (k 0)) (d (n "fuel-crypto") (r "^0.42.3") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.42.3") (k 0)) (d (n "fuel-storage") (r "^0.42.3") (k 0)) (d (n "fuel-tx") (r "^0.42.3") (k 0)) (d (n "fuel-tx") (r "^0.42.3") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.42.3") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libm") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (f (quote ("alloc"))) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (k 0)) (d (n "tai64") (r "^4.0") (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "1lwzwi1rl463ij6kb5v7ax8556wavcbn2hiqz8hxwx4jyzkyza56") (f (quote (("std" "alloc" "fuel-crypto/std" "fuel-types/std" "fuel-asm/std" "fuel-tx/std" "itertools/use_std") ("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("default" "std") ("arbitrary" "fuel-asm/arbitrary") ("alloc" "fuel-asm/alloc" "fuel-tx/alloc" "fuel-tx/builder")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "alloc" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "hashbrown/serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde" "fuel-merkle/serde" "backtrace?/serde"))))))

(define-public crate-fuel-vm-0.43.0 (c (n "fuel-vm") (v "0.43.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.43.0") (k 0)) (d (n "fuel-crypto") (r "^0.43.0") (k 0)) (d (n "fuel-crypto") (r "^0.43.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.43.0") (k 0)) (d (n "fuel-storage") (r "^0.43.0") (k 0)) (d (n "fuel-tx") (r "^0.43.0") (k 0)) (d (n "fuel-tx") (r "^0.43.0") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.43.0") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libm") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (f (quote ("alloc"))) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (k 0)) (d (n "tai64") (r "^4.0") (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "1mhg3r3hmaj4c3ghj8i2wi4alqvhyiqfybh1vn983h2qiq7lxqn3") (f (quote (("std" "alloc" "fuel-crypto/std" "fuel-types/std" "fuel-asm/std" "fuel-tx/std" "itertools/use_std") ("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("default" "std") ("arbitrary" "fuel-asm/arbitrary") ("alloc" "fuel-asm/alloc" "fuel-tx/alloc" "fuel-tx/builder")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "alloc" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "hashbrown/serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde" "fuel-merkle/serde" "backtrace?/serde"))))))

(define-public crate-fuel-vm-0.43.1 (c (n "fuel-vm") (v "0.43.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.43.1") (k 0)) (d (n "fuel-crypto") (r "^0.43.1") (k 0)) (d (n "fuel-crypto") (r "^0.43.1") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.43.1") (k 0)) (d (n "fuel-storage") (r "^0.43.1") (k 0)) (d (n "fuel-tx") (r "^0.43.1") (k 0)) (d (n "fuel-tx") (r "^0.43.1") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.43.1") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libm") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (f (quote ("alloc"))) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (k 0)) (d (n "tai64") (r "^4.0") (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "0ilmjn3hxxk2w8a0f0db2chkpj7hm18r648rb0rynzvhzvzsvwzy") (f (quote (("std" "alloc" "fuel-crypto/std" "fuel-types/std" "fuel-asm/std" "fuel-tx/std" "itertools/use_std") ("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("default" "std") ("arbitrary" "fuel-asm/arbitrary") ("alloc" "fuel-asm/alloc" "fuel-tx/alloc" "fuel-tx/builder")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "alloc" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "hashbrown/serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde" "fuel-merkle/serde" "backtrace?/serde"))))))

(define-public crate-fuel-vm-0.43.2 (c (n "fuel-vm") (v "0.43.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.43.2") (k 0)) (d (n "fuel-crypto") (r "^0.43.2") (k 0)) (d (n "fuel-crypto") (r "^0.43.2") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.43.2") (k 0)) (d (n "fuel-storage") (r "^0.43.2") (k 0)) (d (n "fuel-tx") (r "^0.43.2") (k 0)) (d (n "fuel-tx") (r "^0.43.2") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.43.2") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libm") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (f (quote ("alloc"))) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (k 0)) (d (n "tai64") (r "^4.0") (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "1fj7fg6qgrkkr5kwhbm7s1gxrczlc8zb7jcdfk6ickwhvq6bmmdf") (f (quote (("std" "alloc" "fuel-crypto/std" "fuel-types/std" "fuel-asm/std" "fuel-tx/std" "itertools/use_std") ("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("default" "std") ("arbitrary" "fuel-asm/arbitrary") ("alloc" "fuel-asm/alloc" "fuel-tx/alloc" "fuel-tx/builder")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "alloc" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "hashbrown/serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde" "fuel-merkle/serde" "backtrace?/serde"))))))

(define-public crate-fuel-vm-0.44.0 (c (n "fuel-vm") (v "0.44.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.44.0") (k 0)) (d (n "fuel-crypto") (r "^0.44.0") (k 0)) (d (n "fuel-crypto") (r "^0.44.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.44.0") (k 0)) (d (n "fuel-storage") (r "^0.44.0") (k 0)) (d (n "fuel-tx") (r "^0.44.0") (k 0)) (d (n "fuel-tx") (r "^0.44.0") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.44.0") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libm") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (f (quote ("alloc"))) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (k 0)) (d (n "tai64") (r "^4.0") (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "16ga2c04iv06sb8n5zrsgb8hcmrygzx5clr3grz9b590ay1mwqf0") (f (quote (("std" "alloc" "fuel-crypto/std" "fuel-types/std" "fuel-asm/std" "fuel-tx/std" "itertools/use_std") ("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("default" "std") ("arbitrary" "fuel-asm/arbitrary") ("alloc" "fuel-asm/alloc" "fuel-tx/alloc" "fuel-tx/builder")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "alloc" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "hashbrown/serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde" "fuel-merkle/serde" "backtrace?/serde"))))))

(define-public crate-fuel-vm-0.45.0 (c (n "fuel-vm") (v "0.45.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.45.0") (k 0)) (d (n "fuel-crypto") (r "^0.45.0") (k 0)) (d (n "fuel-crypto") (r "^0.45.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.45.0") (k 0)) (d (n "fuel-storage") (r "^0.45.0") (k 0)) (d (n "fuel-tx") (r "^0.45.0") (k 0)) (d (n "fuel-tx") (r "^0.45.0") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.45.0") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libm") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (f (quote ("alloc"))) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (k 0)) (d (n "tai64") (r "^4.0") (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "1ds5b42zmg0zgbh9a38l45cp5qga5js14jmd1xbsk3f0i8451d35") (f (quote (("std" "alloc" "fuel-crypto/std" "fuel-types/std" "fuel-asm/std" "fuel-tx/std" "itertools/use_std") ("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("default" "std") ("arbitrary" "fuel-asm/arbitrary") ("alloc" "fuel-asm/alloc" "fuel-tx/alloc" "fuel-tx/builder")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "alloc" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "hashbrown/serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde" "fuel-merkle/serde" "backtrace?/serde"))))))

(define-public crate-fuel-vm-0.46.0 (c (n "fuel-vm") (v "0.46.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.46.0") (k 0)) (d (n "fuel-crypto") (r "^0.46.0") (k 0)) (d (n "fuel-crypto") (r "^0.46.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.46.0") (k 0)) (d (n "fuel-storage") (r "^0.46.0") (k 0)) (d (n "fuel-tx") (r "^0.46.0") (k 0)) (d (n "fuel-tx") (r "^0.46.0") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.46.0") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libm") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (f (quote ("alloc"))) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (k 0)) (d (n "tai64") (r "^4.0") (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "02drx2g1hvw595m41g312wnyrnpn51y8q8r39mq9g7kjjsm53d68") (f (quote (("std" "alloc" "fuel-crypto/std" "fuel-types/std" "fuel-asm/std" "fuel-tx/std" "itertools/use_std") ("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("default" "std") ("arbitrary" "fuel-asm/arbitrary") ("alloc" "fuel-asm/alloc" "fuel-tx/alloc" "fuel-tx/builder")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "alloc" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "hashbrown/serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde" "fuel-merkle/serde" "backtrace?/serde"))))))

(define-public crate-fuel-vm-0.47.0 (c (n "fuel-vm") (v "0.47.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.47.0") (k 0)) (d (n "fuel-crypto") (r "^0.47.0") (k 0)) (d (n "fuel-crypto") (r "^0.47.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.47.0") (k 0)) (d (n "fuel-storage") (r "^0.47.0") (k 0)) (d (n "fuel-tx") (r "^0.47.0") (k 0)) (d (n "fuel-tx") (r "^0.47.0") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.47.0") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libm") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (f (quote ("alloc"))) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (k 0)) (d (n "tai64") (r "^4.0") (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "08f07l8jbmv5kw0jlrmbp2fgabkhkzf392rxhwz00l0v6n033j67") (f (quote (("std" "alloc" "fuel-crypto/std" "fuel-types/std" "fuel-asm/std" "fuel-tx/std" "itertools/use_std") ("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("default" "std") ("arbitrary" "fuel-asm/arbitrary") ("alloc" "fuel-asm/alloc" "fuel-tx/alloc" "fuel-tx/builder")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "alloc" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "hashbrown/serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde" "fuel-merkle/serde" "backtrace?/serde"))))))

(define-public crate-fuel-vm-0.47.1 (c (n "fuel-vm") (v "0.47.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.47.1") (k 0)) (d (n "fuel-crypto") (r "^0.47.1") (k 0)) (d (n "fuel-crypto") (r "^0.47.1") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.47.1") (k 0)) (d (n "fuel-storage") (r "^0.47.1") (k 0)) (d (n "fuel-tx") (r "^0.47.1") (k 0)) (d (n "fuel-tx") (r "^0.47.1") (f (quote ("builder"))) (k 2)) (d (n "fuel-types") (r "^0.47.1") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libm") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (f (quote ("alloc"))) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (k 0)) (d (n "tai64") (r "^4.0") (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "1hnkvrkqvqd8wxadfzxwxaqf4fcnzcymyamr0rcwbwyv7qrw4aay") (f (quote (("std" "alloc" "fuel-crypto/std" "fuel-types/std" "fuel-asm/std" "fuel-tx/std" "itertools/use_std") ("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("default" "std") ("arbitrary" "fuel-asm/arbitrary") ("alloc" "fuel-asm/alloc" "fuel-tx/alloc" "fuel-tx/builder")))) (s 2) (e (quote (("test-helpers" "fuel-tx/builder" "alloc" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "hashbrown/serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde" "fuel-merkle/serde" "backtrace?/serde"))))))

(define-public crate-fuel-vm-0.48.0 (c (n "fuel-vm") (v "0.48.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.48.0") (k 0)) (d (n "fuel-crypto") (r "^0.48.0") (k 0)) (d (n "fuel-crypto") (r "^0.48.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.48.0") (k 0)) (d (n "fuel-storage") (r "^0.48.0") (k 0)) (d (n "fuel-tx") (r "^0.48.0") (k 0)) (d (n "fuel-tx") (r "^0.48.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-types") (r "^0.48.0") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libm") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (f (quote ("alloc"))) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^3.7") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (k 0)) (d (n "tai64") (r "^4.0") (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "0539kmanklrgqhpcnv4bkddd7w7pz8say4j4wf4pcddzdvl04vxh") (f (quote (("std" "alloc" "fuel-crypto/std" "fuel-types/std" "fuel-asm/std" "fuel-tx/std" "itertools/use_std") ("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("default" "std") ("arbitrary" "fuel-asm/arbitrary") ("alloc" "fuel-asm/alloc" "fuel-tx/alloc" "fuel-tx/alloc")))) (s 2) (e (quote (("test-helpers" "fuel-tx/test-helpers" "alloc" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "dep:serde_with" "hashbrown/serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde" "fuel-merkle/serde" "backtrace?/serde"))))))

(define-public crate-fuel-vm-0.49.0 (c (n "fuel-vm") (v "0.49.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.49.0") (k 0)) (d (n "fuel-crypto") (r "^0.49.0") (k 0)) (d (n "fuel-crypto") (r "^0.49.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.49.0") (k 0)) (d (n "fuel-storage") (r "^0.49.0") (k 0)) (d (n "fuel-tx") (r "^0.49.0") (k 0)) (d (n "fuel-tx") (r "^0.49.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-types") (r "^0.49.0") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libm") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (f (quote ("alloc"))) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^3.7") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (k 0)) (d (n "tai64") (r "^4.0") (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "0rc96zf5mapix77yyyaqwlxy4knz8x0690fgip31rrlcvd4zj4c8") (f (quote (("std" "alloc" "fuel-crypto/std" "fuel-types/std" "fuel-asm/std" "fuel-tx/std" "itertools/use_std") ("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("default" "std") ("arbitrary" "fuel-asm/arbitrary") ("alloc" "fuel-asm/alloc" "fuel-tx/alloc" "fuel-tx/alloc")))) (s 2) (e (quote (("test-helpers" "fuel-tx/test-helpers" "alloc" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "dep:serde_with" "hashbrown/serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde" "fuel-merkle/serde" "backtrace?/serde"))))))

(define-public crate-fuel-vm-0.50.0 (c (n "fuel-vm") (v "0.50.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.50.0") (k 0)) (d (n "fuel-crypto") (r "^0.50.0") (k 0)) (d (n "fuel-crypto") (r "^0.50.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.50.0") (k 0)) (d (n "fuel-storage") (r "^0.50.0") (k 0)) (d (n "fuel-tx") (r "^0.50.0") (k 0)) (d (n "fuel-tx") (r "^0.50.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-types") (r "^0.50.0") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libm") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (f (quote ("alloc"))) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^3.7") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (k 0)) (d (n "tai64") (r "^4.0") (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "1rm4x4farpcv5q013k9cfckl70b5cgr8hj46qyxzwdsjvsg1mpvi") (f (quote (("std" "alloc" "fuel-crypto/std" "fuel-types/std" "fuel-asm/std" "fuel-tx/std" "itertools/use_std") ("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("default" "std") ("arbitrary" "fuel-asm/arbitrary") ("alloc" "fuel-asm/alloc" "fuel-tx/alloc" "fuel-tx/alloc")))) (s 2) (e (quote (("test-helpers" "fuel-tx/test-helpers" "alloc" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "dep:serde_with" "hashbrown/serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde" "fuel-merkle/serde" "backtrace?/serde"))))))

(define-public crate-fuel-vm-0.51.0 (c (n "fuel-vm") (v "0.51.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.51.0") (k 0)) (d (n "fuel-crypto") (r "^0.51.0") (k 0)) (d (n "fuel-crypto") (r "^0.51.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.51.0") (k 0)) (d (n "fuel-storage") (r "^0.51.0") (k 0)) (d (n "fuel-tx") (r "^0.51.0") (k 0)) (d (n "fuel-tx") (r "^0.51.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-types") (r "^0.51.0") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libm") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (f (quote ("alloc"))) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^3.7") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (k 0)) (d (n "tai64") (r "^4.0") (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "095d2aqs3swxcpsycwx6ssxsfy9ljipnjfdg2vz3512j6bhk1kki") (f (quote (("std" "alloc" "fuel-crypto/std" "fuel-types/std" "fuel-asm/std" "fuel-tx/std" "itertools/use_std") ("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("default" "std") ("arbitrary" "fuel-asm/arbitrary") ("alloc" "fuel-asm/alloc" "fuel-tx/alloc" "fuel-tx/alloc")))) (s 2) (e (quote (("test-helpers" "fuel-tx/test-helpers" "alloc" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "dep:serde_with" "hashbrown/serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde" "fuel-merkle/serde" "backtrace?/serde"))))))

(define-public crate-fuel-vm-0.52.0 (c (n "fuel-vm") (v "0.52.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "ethnum") (r "^1.3") (d #t) (k 0)) (d (n "fuel-asm") (r "^0.52.0") (k 0)) (d (n "fuel-crypto") (r "^0.52.0") (k 0)) (d (n "fuel-crypto") (r "^0.52.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-merkle") (r "^0.52.0") (k 0)) (d (n "fuel-storage") (r "^0.52.0") (k 0)) (d (n "fuel-tx") (r "^0.52.0") (k 0)) (d (n "fuel-tx") (r "^0.52.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-types") (r "^0.52.0") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libm") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 2)) (d (n "p256") (r "^0.13") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (f (quote ("alloc"))) (k 0)) (d (n "primitive-types") (r "^0.12") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_with") (r "^3.7") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (k 0)) (d (n "tai64") (r "^4.0") (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-rayon") (r "^2.1.0") (d #t) (k 2)))) (h "1zb9v428kj5kzhn6wgbi814q0vpr9yl8dxy9cq872na8cslbkvxi") (f (quote (("std" "alloc" "fuel-crypto/std" "fuel-types/std" "fuel-asm/std" "fuel-tx/std" "itertools/use_std") ("random" "fuel-crypto/random" "fuel-types/random" "fuel-tx/random" "rand") ("profile-gas" "profile-any") ("profile-coverage" "profile-any") ("profile-any" "dyn-clone") ("default" "std") ("arbitrary" "fuel-asm/arbitrary") ("alloc" "fuel-asm/alloc" "fuel-tx/alloc" "fuel-tx/alloc")))) (s 2) (e (quote (("test-helpers" "fuel-tx/test-helpers" "alloc" "random" "dep:anyhow" "fuel-crypto/test-helpers") ("serde" "dep:serde" "dep:serde_with" "hashbrown/serde" "fuel-asm/serde" "fuel-types/serde" "fuel-tx/serde" "fuel-merkle/serde" "backtrace?/serde"))))))

