(define-module (crates-io fu el fuel-core-bin) #:use-module (crates-io))

(define-public crate-fuel-core-bin-0.17.0 (c (n "fuel-core-bin") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.17.0") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0fg9czcfky29xj889pp3z18sik2lgckxf3h9jgaiaq3ih034sq2i") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.17.1 (c (n "fuel-core-bin") (v "0.17.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.17.1") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1lypnx8ph1z9sm6n7nx8b5f880cqajagbfxpgdxh8670r9q8086k") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.17.2 (c (n "fuel-core-bin") (v "0.17.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.17.2") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1n9267v0fzfflkcxkqzciz54chkg4zazgbz1qn8r1rp6grh50ihb") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.17.3 (c (n "fuel-core-bin") (v "0.17.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.17.3") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "08jn4jxnnpkdflxqj69kbdy6rvwm9m0m2q1pp2fcml5bhs2h29lp") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.17.4 (c (n "fuel-core-bin") (v "0.17.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.17.4") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "101xh89g0ly8h2a9lwzirqz54jw549h3df312nb34m28a2blqjwv") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.17.5 (c (n "fuel-core-bin") (v "0.17.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.17.5") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1yfm9l4k50kl8yw9icpij8fb8mf92ncmk2bwnpqyskfbpcsp8fb8") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.17.6 (c (n "fuel-core-bin") (v "0.17.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.17.6") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1f2h3ymdjpavljig1fpyqca18gabj2v9pcymvcm0qsxcmxxviij3") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.17.7 (c (n "fuel-core-bin") (v "0.17.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.17.7") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.4") (f (quote ("use_parking_lot"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1yhvclmng93qykcwjs6xa83ywwjyhhcprcc08khhsarfaad7h161") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.17.8 (c (n "fuel-core-bin") (v "0.17.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.17.8") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.4") (f (quote ("use_parking_lot"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0klkqhzy4pl0s6p32iaqbnl2bzmk4qg0sqrl09m37fc3pm1iw4h7") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.17.9 (c (n "fuel-core-bin") (v "0.17.9") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.17.9") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.4") (f (quote ("use_parking_lot"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0a62gvgykhc1jz7lkaysq7x0q4klddvkns3b5i3k5wrgwwkj55rh") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.17.10 (c (n "fuel-core-bin") (v "0.17.10") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.17.10") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.4") (f (quote ("use_parking_lot"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1q7g1ayvijhkh186dp6m3qpsp6srxl6l78hld24vhr1i44mlmady") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.17.11 (c (n "fuel-core-bin") (v "0.17.11") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.17.11") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.4") (f (quote ("use_parking_lot"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0nc5vs10lqdarydkvrc65py5rzhbw8si576bm8zvzbkvppky71bd") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.18.0 (c (n "fuel-core-bin") (v "0.18.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.18.0") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "17ahmvgnx8szkb1b9sdwi55nr24kmy0ysnh2mx882yfzzisqw7sd") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p" "const_format") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.18.1 (c (n "fuel-core-bin") (v "0.18.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.18.1") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0wcsz9wj0n941b7v69ayg8x5p7hm5jqrr0nn1qszyxb6ayswv848") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p" "const_format") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.17.12 (c (n "fuel-core-bin") (v "0.17.12") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.17.12") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.4") (f (quote ("use_parking_lot"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0l2xx0zywrxhxab7sckr4xcf837rm7iq636fjadi0rq31pm761ha") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.18.2 (c (n "fuel-core-bin") (v "0.18.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.18.2") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1fclvbzy6rr9yff5qb7qyz1zfxmvi8vn1lh841zkdz32jl0g3aly") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p" "const_format") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.18.3 (c (n "fuel-core-bin") (v "0.18.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.18.3") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0p6jh3br8gzd939fy9wxl7j349v4z67lkm85ad120an5shfgglaj") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p" "const_format") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.19.0 (c (n "fuel-core-bin") (v "0.19.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.19.0") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1ihkanv7b0rblp198zjsv94fkf2p67vri18viqpc220v7cz97yv0") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p" "const_format") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.19.1 (c (n "fuel-core-bin") (v "0.19.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.19.1") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0zrwrmdzwgpma02f41qvkpn7k7rq7nmr0i33mhzj16pw6qdsvyj3") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p" "const_format") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.17.13 (c (n "fuel-core-bin") (v "0.17.13") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.17.13") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.4") (f (quote ("use_parking_lot"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1bp9qmjnq80908qlghi6y3hqmgqfsc5sifl17l0w94mljymr9aaf") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.20.1 (c (n "fuel-core-bin") (v "0.20.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.20.1") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1aj18plnkqcqcv97ajmfh8zpm3apczbd4widjp9zmy2clzm83x19") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p" "const_format") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.20.2 (c (n "fuel-core-bin") (v "0.20.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.20.2") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1ghb1qgxyc4c69v6z9bnij4zm6m6jj3jclgdhb69rw2c320ssh0d") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p" "const_format") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.20.3 (c (n "fuel-core-bin") (v "0.20.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.20.3") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "03h69vrajyayxk2vcm19m4jly37licziykjr4y5q6i08jiw5wl3x") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p" "const_format") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.20.4 (c (n "fuel-core-bin") (v "0.20.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.20.4") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1sh3xdkrwvymycvv8kw1zwmzbpxgkyhjlp9jxcgz74mwjj995ylj") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p" "const_format") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.19.2 (c (n "fuel-core-bin") (v "0.19.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.19.2") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0c8vqhkyk5is39917d2lb4c5b3j2677b9yak3a8w405jgxrmlhxm") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p" "const_format") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.20.5 (c (n "fuel-core-bin") (v "0.20.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.20.5") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0iyyhyjgz85xij6dc2q03ajmklwrp53wwbfcmzqhs2hk46kr9jlw") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "metrics" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p" "const_format") ("metrics" "fuel-core/metrics") ("default" "debug" "metrics" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.20.6 (c (n "fuel-core-bin") (v "0.20.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.20.6") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0r8hvczmvjhjdfprhjh34d6b1camq6zcajhjpls8dlmkii9bhv0a") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p" "const_format") ("default" "debug" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.20.7 (c (n "fuel-core-bin") (v "0.20.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.20.7") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0vjlfxmg2hs218x61hmwaczx3wk8a930kn3ac69nikn7wwy09frv") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p" "const_format") ("default" "debug" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.20.8 (c (n "fuel-core-bin") (v "0.20.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "fuel-core") (r "^0.20.8") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0fb7vq4lizfjca57nhwsdy5bz9x1f50wz6wg8cvb53yj1km51ian") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p" "const_format") ("default" "debug" "relayer" "rocksdb") ("debug" "fuel-core/debug")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json"))))))

(define-public crate-fuel-core-bin-0.21.0-rc.1 (c (n "fuel-core-bin") (v "0.21.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "fuel-core") (r "^0.21.0-rc.1") (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "pyroscope") (r "^0.5") (d #t) (k 0)) (d (n "pyroscope_pprofrs") (r "^0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1sy23mpzb2kgshrgsnfk1rrqln4yyavklsg6qb2b8gxsjx0b2i2r") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "env" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p" "const_format") ("default" "env" "relayer" "rocksdb")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json") ("env" "dep:dotenvy"))))))

(define-public crate-fuel-core-bin-0.21.0 (c (n "fuel-core-bin") (v "0.21.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "fuel-core") (r "^0.21.0") (k 0)) (d (n "fuel-core-chain-config") (r "^0.21.0") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.21.0") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "pyroscope") (r "^0.5") (d #t) (k 0)) (d (n "pyroscope_pprofrs") (r "^0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "03d4mh39xdnlrdrx185mqpxb3f1wnlvbv8ppbn3d6bndfsj2rg7x") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "env" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p" "const_format") ("default" "env" "relayer" "rocksdb")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json") ("env" "dep:dotenvy"))))))

(define-public crate-fuel-core-bin-0.22.0 (c (n "fuel-core-bin") (v "0.22.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "fuel-core") (r "^0.22.0") (k 0)) (d (n "fuel-core-chain-config") (r "^0.22.0") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.22.0") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "pyroscope") (r "^0.5") (d #t) (k 0)) (d (n "pyroscope_pprofrs") (r "^0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0jg1c5swfrf76shk10ighmd9nwwwd6j3xzrwqr3kvxlr269rm7hm") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "env" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p" "const_format") ("default" "env" "relayer" "rocksdb")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json") ("env" "dep:dotenvy"))))))

(define-public crate-fuel-core-bin-0.22.1 (c (n "fuel-core-bin") (v "0.22.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "fuel-core") (r "^0.22.1") (k 0)) (d (n "fuel-core-chain-config") (r "^0.22.1") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.22.1") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "pyroscope") (r "^0.5") (d #t) (k 0)) (d (n "pyroscope_pprofrs") (r "^0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0ljkgvym29n8m2az6sq9si04c33pa1h1jm87lmx2z4j4zllmxfqf") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "env" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p" "const_format") ("default" "env" "relayer" "rocksdb")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json") ("env" "dep:dotenvy"))))))

(define-public crate-fuel-core-bin-0.23.0 (c (n "fuel-core-bin") (v "0.23.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "fuel-core") (r "^0.23.0") (k 0)) (d (n "fuel-core-chain-config") (r "^0.23.0") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.23.0") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "pyroscope") (r "^0.5") (d #t) (k 0)) (d (n "pyroscope_pprofrs") (r "^0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0shqd57m8g6cmlhcpisqw3ihclgqnirjnqmhp8gz1j2ywkkpc66a") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "env" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p" "const_format") ("default" "env" "relayer" "rocksdb")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json") ("env" "dep:dotenvy"))))))

(define-public crate-fuel-core-bin-0.22.2 (c (n "fuel-core-bin") (v "0.22.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "fuel-core") (r "^0.22.2") (k 0)) (d (n "fuel-core-chain-config") (r "^0.22.2") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.22.2") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "pyroscope") (r "^0.5") (d #t) (k 0)) (d (n "pyroscope_pprofrs") (r "^0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0s5yws0gpflll85fxz1anwpzn1d9iv74baqkfql0cz70rn8xpp3w") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "env" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p" "const_format") ("default" "env" "relayer" "rocksdb")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json") ("env" "dep:dotenvy"))))))

(define-public crate-fuel-core-bin-0.22.3 (c (n "fuel-core-bin") (v "0.22.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "fuel-core") (r "^0.22.3") (k 0)) (d (n "fuel-core-chain-config") (r "^0.22.3") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.22.3") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "pyroscope") (r "^0.5") (d #t) (k 0)) (d (n "pyroscope_pprofrs") (r "^0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0r086inhiad9akpzdrdw4mf5ajqv58y0ki0jakxmv77nyq1qkz04") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "env" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p" "const_format") ("default" "env" "relayer" "rocksdb")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json") ("env" "dep:dotenvy"))))))

(define-public crate-fuel-core-bin-0.22.4 (c (n "fuel-core-bin") (v "0.22.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "fuel-core") (r "^0.22.4") (k 0)) (d (n "fuel-core-chain-config") (r "^0.22.4") (d #t) (k 0)) (d (n "fuel-core-types") (r "^0.22.4") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "pyroscope") (r "^0.5") (d #t) (k 0)) (d (n "pyroscope_pprofrs") (r "^0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0yvmf0yrwhg40a8k5hfib2sr5khfc85j8ghlmd9l9vb0z4039c3n") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "env" "relayer" "rocksdb-production" "p2p") ("p2p" "fuel-core/p2p" "const_format") ("default" "env" "relayer" "rocksdb")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url" "dep:serde_json") ("env" "dep:dotenvy"))))))

(define-public crate-fuel-core-bin-0.24.1 (c (n "fuel-core-bin") (v "0.24.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "fuel-core") (r "^0.24.1") (k 0)) (d (n "fuel-core") (r "^0.24.1") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-core-chain-config") (r "^0.24.1") (k 0)) (d (n "fuel-core-storage") (r "^0.24.1") (o #t) (k 0)) (d (n "fuel-core-types") (r "^0.24.1") (k 0)) (d (n "fuel-core-types") (r "^0.24.1") (f (quote ("test-helpers"))) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (o #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "pyroscope") (r "^0.5") (d #t) (k 0)) (d (n "pyroscope_pprofrs") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1dxsmx4q49mj7m6zh665xmkmd7s534fab8zak4izjkwnnj8075sr") (f (quote (("production" "env" "relayer" "rocksdb-production" "p2p" "parquet") ("parquet" "fuel-core-chain-config/parquet" "fuel-core-types/serde") ("p2p" "fuel-core/p2p" "const_format") ("default" "env" "relayer" "rocksdb")))) (s 2) (e (quote (("rocksdb-production" "fuel-core/rocksdb-production" "dep:fuel-core-storage" "dep:itertools") ("rocksdb" "fuel-core/rocksdb" "dep:fuel-core-storage" "dep:itertools") ("relayer" "fuel-core/relayer" "dep:url") ("env" "dep:dotenvy"))))))

(define-public crate-fuel-core-bin-0.24.2 (c (n "fuel-core-bin") (v "0.24.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "fuel-core") (r "^0.24.2") (k 0)) (d (n "fuel-core") (r "^0.24.2") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-core-chain-config") (r "^0.24.2") (k 0)) (d (n "fuel-core-storage") (r "^0.24.2") (o #t) (k 0)) (d (n "fuel-core-types") (r "^0.24.2") (k 0)) (d (n "fuel-core-types") (r "^0.24.2") (f (quote ("test-helpers"))) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (o #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "pyroscope") (r "^0.5") (d #t) (k 0)) (d (n "pyroscope_pprofrs") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "00kkq3ak0rvapdqw5s5a2dm57rcg7444195hxs80cxhsa44ixxhh") (f (quote (("production" "env" "relayer" "rocksdb-production" "p2p" "parquet") ("parquet" "fuel-core-chain-config/parquet" "fuel-core-types/serde") ("p2p" "fuel-core/p2p" "const_format") ("default" "env" "relayer" "rocksdb")))) (s 2) (e (quote (("rocksdb-production" "fuel-core/rocksdb-production" "dep:fuel-core-storage" "dep:itertools") ("rocksdb" "fuel-core/rocksdb" "dep:fuel-core-storage" "dep:itertools") ("relayer" "fuel-core/relayer" "dep:url") ("env" "dep:dotenvy"))))))

(define-public crate-fuel-core-bin-0.25.2 (c (n "fuel-core-bin") (v "0.25.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "fuel-core") (r "^0.25.2") (f (quote ("wasm-executor"))) (k 0)) (d (n "fuel-core") (r "^0.25.2") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-core-chain-config") (r "^0.25.2") (k 0)) (d (n "fuel-core-storage") (r "^0.25.2") (k 2)) (d (n "fuel-core-types") (r "^0.25.2") (k 0)) (d (n "fuel-core-types") (r "^0.25.2") (f (quote ("test-helpers"))) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "pyroscope") (r "^0.5") (d #t) (k 0)) (d (n "pyroscope_pprofrs") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "08cf4gvm5q13f82n1sjx0i3cby50xdpaxhisgxcb9m5n06qma5bh") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "env" "relayer" "rocksdb-production" "p2p" "parquet") ("parquet" "fuel-core-chain-config/parquet" "fuel-core-types/serde") ("p2p" "fuel-core/p2p" "const_format") ("default" "env" "relayer" "rocksdb")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url") ("env" "dep:dotenvy"))))))

(define-public crate-fuel-core-bin-0.24.3 (c (n "fuel-core-bin") (v "0.24.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "fuel-core") (r "^0.24.3") (k 0)) (d (n "fuel-core") (r "^0.24.3") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-core-chain-config") (r "^0.24.3") (k 0)) (d (n "fuel-core-storage") (r "^0.24.3") (o #t) (k 0)) (d (n "fuel-core-types") (r "^0.24.3") (k 0)) (d (n "fuel-core-types") (r "^0.24.3") (f (quote ("test-helpers"))) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (o #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "pyroscope") (r "^0.5") (d #t) (k 0)) (d (n "pyroscope_pprofrs") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1dp9iql8ahybjiz7l4yn9jwqrh20alih88nqpayz5sfg44z77rlk") (f (quote (("production" "env" "relayer" "rocksdb-production" "p2p" "parquet") ("parquet" "fuel-core-chain-config/parquet" "fuel-core-types/serde") ("p2p" "fuel-core/p2p" "const_format") ("default" "env" "relayer" "rocksdb")))) (s 2) (e (quote (("rocksdb-production" "fuel-core/rocksdb-production" "dep:fuel-core-storage" "dep:itertools") ("rocksdb" "fuel-core/rocksdb" "dep:fuel-core-storage" "dep:itertools") ("relayer" "fuel-core/relayer" "dep:url") ("env" "dep:dotenvy"))))))

(define-public crate-fuel-core-bin-0.25.3 (c (n "fuel-core-bin") (v "0.25.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "fuel-core") (r "^0.25.3") (f (quote ("wasm-executor"))) (k 0)) (d (n "fuel-core") (r "^0.25.3") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-core-chain-config") (r "^0.25.3") (k 0)) (d (n "fuel-core-storage") (r "^0.25.3") (k 2)) (d (n "fuel-core-types") (r "^0.25.3") (k 0)) (d (n "fuel-core-types") (r "^0.25.3") (f (quote ("test-helpers"))) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "pyroscope") (r "^0.5") (d #t) (k 0)) (d (n "pyroscope_pprofrs") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1wkar54zvpzcwfvpmx26jlv5dxqa7fsm9hmxrb22bnsny2l6ywk6") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "env" "relayer" "rocksdb-production" "p2p" "parquet") ("parquet" "fuel-core-chain-config/parquet" "fuel-core-types/serde") ("p2p" "fuel-core/p2p" "const_format") ("default" "env" "relayer" "rocksdb")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url") ("env" "dep:dotenvy"))))))

(define-public crate-fuel-core-bin-0.26.0 (c (n "fuel-core-bin") (v "0.26.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "fuel-core") (r "^0.26.0") (f (quote ("wasm-executor"))) (k 0)) (d (n "fuel-core") (r "^0.26.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-core-chain-config") (r "^0.26.0") (k 0)) (d (n "fuel-core-storage") (r "^0.26.0") (k 2)) (d (n "fuel-core-types") (r "^0.26.0") (k 0)) (d (n "fuel-core-types") (r "^0.26.0") (f (quote ("test-helpers"))) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "pyroscope") (r "^0.5") (d #t) (k 0)) (d (n "pyroscope_pprofrs") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tokio-util") (r "^0.7") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1fw9bp5vgwmyqr8xga30gdc8sbcn6vj2zciqydwixc9nrsvg4psg") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "env" "relayer" "rocksdb-production" "p2p" "parquet") ("parquet" "fuel-core-chain-config/parquet" "fuel-core-types/serde") ("p2p" "fuel-core/p2p" "const_format") ("default" "env" "relayer" "rocksdb")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url") ("env" "dep:dotenvy"))))))

(define-public crate-fuel-core-bin-0.27.0 (c (n "fuel-core-bin") (v "0.27.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "fuel-core") (r "^0.27.0") (f (quote ("wasm-executor"))) (k 0)) (d (n "fuel-core") (r "^0.27.0") (f (quote ("test-helpers"))) (k 2)) (d (n "fuel-core-chain-config") (r "^0.27.0") (k 0)) (d (n "fuel-core-storage") (r "^0.27.0") (k 2)) (d (n "fuel-core-types") (r "^0.27.0") (k 0)) (d (n "fuel-core-types") (r "^0.27.0") (f (quote ("test-helpers"))) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "pyroscope") (r "^0.5") (d #t) (k 0)) (d (n "pyroscope_pprofrs") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("macros" "rt-multi-thread"))) (k 0)) (d (n "tokio-util") (r "^0.7") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "json"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "03bzcpjyraicrv4xq2mm28djjg8n4j39r1rz1dld13f0wsx068zr") (f (quote (("rocksdb-production" "fuel-core/rocksdb-production") ("rocksdb" "fuel-core/rocksdb") ("production" "env" "relayer" "rocksdb-production" "p2p" "parquet") ("parquet" "fuel-core-chain-config/parquet" "fuel-core-types/serde") ("p2p" "fuel-core/p2p" "const_format") ("default" "env" "relayer" "rocksdb")))) (s 2) (e (quote (("relayer" "fuel-core/relayer" "dep:url") ("env" "dep:dotenvy"))))))

