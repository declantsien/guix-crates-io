(define-module (crates-io fu zz fuzzr) #:use-module (crates-io))

(define-public crate-fuzzr-0.0.2 (c (n "fuzzr") (v "0.0.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8") (d #t) (k 0)) (d (n "directories-next") (r "^2.0") (d #t) (k 0)) (d (n "iced") (r "^0.2") (f (quote ("wgpu" "default_system_font" "image" "async-std"))) (d #t) (k 0)) (d (n "iced_futures") (r "^0.2") (d #t) (k 0)) (d (n "iced_native") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "infer") (r "^0.3") (d #t) (k 0)) (d (n "ipfs-embed") (r "^0.10") (d #t) (k 0)) (d (n "libipld") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)))) (h "07cvkw1fpwfs236qg41fn0sh6xl36wfckpr3iwzz0kmc5k97m4zr")))

(define-public crate-fuzzr-0.0.3 (c (n "fuzzr") (v "0.0.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8") (d #t) (k 0)) (d (n "directories-next") (r "^2.0") (d #t) (k 0)) (d (n "iced") (r "^0.2") (f (quote ("wgpu" "default_system_font" "image" "async-std"))) (d #t) (k 0)) (d (n "iced_futures") (r "^0.2") (d #t) (k 0)) (d (n "iced_native") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "infer") (r "^0.3") (d #t) (k 0)) (d (n "ipfs-embed") (r "^0.10") (d #t) (k 0)) (d (n "libipld") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)))) (h "0ya8lfkar56fzc9vjngcrb6j2ha2sckfbvwvdiaqca4sncpzmiid")))

(define-public crate-fuzzr-0.0.6 (c (n "fuzzr") (v "0.0.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.4") (d #t) (k 0)) (d (n "directories-next") (r "^2.0.0") (d #t) (k 0)) (d (n "iced") (r "^0.3.0") (f (quote ("wgpu" "default_system_font" "image" "async-std"))) (d #t) (k 0)) (d (n "iced_futures") (r "^0.3.0") (d #t) (k 0)) (d (n "iced_native") (r "^0.4.0") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "infer") (r "^0.6.0") (d #t) (k 0)) (d (n "ipfs-embed") (r "^0.22.4") (d #t) (k 0)) (d (n "libipld") (r "=0.12.0") (d #t) (k 0)) (d (n "lockfree") (r "^0.5.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "par-stream") (r "^0.10") (f (quote ("runtime-async-std"))) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "1x3w5qda9xcpl0lcxy9shfr41749s5gvmw14p4rlwjl8rxxhhqgy")))

