(define-module (crates-io fu zz fuzzy_rocks) #:use-module (crates-io))

(define-public crate-fuzzy_rocks-0.1.0 (c (n "fuzzy_rocks") (v "0.1.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "csv") (r "^1.1.6") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rocksdb") (r "^0.16.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)))) (h "1y7b1j8yy31fjr3b351s8l6nwqxs2vh3g3rqplvjghii62r49caf") (y #t)))

(define-public crate-fuzzy_rocks-0.1.1 (c (n "fuzzy_rocks") (v "0.1.1") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "csv") (r "^1.1.6") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rocksdb") (r "^0.16.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)))) (h "02hjjw31n5jwkszrxz1ms35n17nllky9ffmhv8xamimi1b6anjxm")))

(define-public crate-fuzzy_rocks-0.2.0 (c (n "fuzzy_rocks") (v "0.2.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1.6") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.1") (d #t) (k 2)) (d (n "rocksdb") (r "^0.16.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)))) (h "1p60m6kdnsbxx9hwcsgaz05ywhs62q7y8ajqf4yac1rn0k37rhpy") (f (quote (("perf_counters")))) (y #t)))

(define-public crate-fuzzy_rocks-0.2.1 (c (n "fuzzy_rocks") (v "0.2.1") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1.6") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.1") (d #t) (k 2)) (d (n "rocksdb") (r "^0.16.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)))) (h "0skkfi00pinyvz0n72f88n5aj5ilpr0qpxcxfh4m8zmbgh8yrxzz") (f (quote (("perf_counters"))))))

(define-public crate-fuzzy_rocks-0.2.2 (c (n "fuzzy_rocks") (v "0.2.2") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1.6") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.1") (d #t) (k 2)) (d (n "rocksdb") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)))) (h "0n3w90z16haq65xys2jznzyg1wz2xyyyddh45mmchcaga92rqvfd") (f (quote (("perf_counters"))))))

(define-public crate-fuzzy_rocks-0.2.3 (c (n "fuzzy_rocks") (v "0.2.3") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1.6") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.1") (d #t) (k 2)) (d (n "rocksdb") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)))) (h "01nsj4l1dskvypz1f9qj7i9x901cywm0hyx4s1g5k6zgk5nffmlb") (f (quote (("perf_counters"))))))

(define-public crate-fuzzy_rocks-0.3.0 (c (n "fuzzy_rocks") (v "0.3.0") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1.6") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.1") (d #t) (k 2)) (d (n "rmp") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "rocksdb") (r ">=0.18.0, <=0.21.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)))) (h "078hgfwl7jazm1x5p4maaaiwf7n1hnyjca5nfdblhm6vlsw2zvh2") (f (quote (("perf_counters") ("default" "bincode")))) (s 2) (e (quote (("msgpack" "dep:rmp-serde" "dep:rmp") ("bincode" "dep:bincode"))))))

(define-public crate-fuzzy_rocks-0.4.0 (c (n "fuzzy_rocks") (v "0.4.0") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "bitcode") (r "=0.6.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1.6") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.1") (d #t) (k 2)) (d (n "rmp") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "rocksdb") (r ">=0.18.0, <=0.21.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.23") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)))) (h "0dswlyz33wy6ji9nsn41ccb4hwzg6qiwr9a8aiv8w28hydwd6mlk") (f (quote (("perf_counters") ("default" "bitcode")))) (s 2) (e (quote (("msgpack" "dep:rmp-serde" "dep:rmp") ("bitcode" "dep:bitcode") ("bincode" "dep:bincode"))))))

