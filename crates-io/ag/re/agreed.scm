(define-module (crates-io ag re agreed) #:use-module (crates-io))

(define-public crate-agreed-1.0.0 (c (n "agreed") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.13") (f (quote ("from"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1gvakyn0z7s1ycfd9n3546lmwq958gc0pv6fdrpa3dfjwgr093jr") (f (quote (("docinclude"))))))

(define-public crate-agreed-1.1.0 (c (n "agreed") (v "1.1.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.13") (f (quote ("from"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0d9p9hsqkyawfcgp2ypdxcryizmys1fjcgm1z8jy5x4mhaxc712s") (f (quote (("docinclude"))))))

