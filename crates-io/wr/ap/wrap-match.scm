(define-module (crates-io wr ap wrap-match) #:use-module (crates-io))

(define-public crate-wrap-match-1.0.0 (c (n "wrap-match") (v "1.0.0") (d (list (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("full" "parsing" "printing" "fold" "clone-impls" "proc-macro"))) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)))) (h "1p4fn26kyff3cs54m3f99qybr96jk4pvwy1ffc60fnvnhf924cis") (y #t)))

(define-public crate-wrap-match-1.0.1 (c (n "wrap-match") (v "1.0.1") (d (list (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("full" "parsing" "printing" "fold" "clone-impls" "proc-macro"))) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)))) (h "17s8w6bys3i8xy2j2ahgrrma0nm8h8bgvv6fp5ppy8fwsni5mbnk") (y #t)))

(define-public crate-wrap-match-1.0.2 (c (n "wrap-match") (v "1.0.2") (d (list (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("full" "parsing" "printing" "fold" "clone-impls" "proc-macro"))) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)))) (h "1w4gd9f3l4058c8v0al43a1s5w4w3lsv4ns2aliaw0bn7r9pj2aa")))

(define-public crate-wrap-match-1.0.3 (c (n "wrap-match") (v "1.0.3") (d (list (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "wrap-match-impl") (r "=1.0.3") (d #t) (k 0)))) (h "1lml7ikg5zf3mwf225gli2vcdscify0nxlixgb2qafywd68sjbp9")))

(define-public crate-wrap-match-1.0.4 (c (n "wrap-match") (v "1.0.4") (d (list (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pollster") (r "^0.3.0") (d #t) (k 2)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "wrap-match-impl") (r "=1.0.4") (d #t) (k 0)))) (h "1jxpr6j10wy9xzkgbdp6bj2ir3pcffdnnymxx27jykw3f5vfzmn3")))

(define-public crate-wrap-match-1.0.5 (c (n "wrap-match") (v "1.0.5") (d (list (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pollster") (r "^0.3.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "wrap-match-impl") (r "=1.0.5") (d #t) (k 0)))) (h "173nr4qn2nc5syliby5q8krlaxb9xipzp0psm138qw8bix6ylrcw") (f (quote (("tracing" "wrap-match-impl/tracing") ("default"))))))

(define-public crate-wrap-match-1.0.6 (c (n "wrap-match") (v "1.0.6") (d (list (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pollster") (r "^0.3.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "wrap-match-impl") (r "=1.0.6") (d #t) (k 0)))) (h "19j9qwmkyyibhs3qwgk793x7baphz8z5snqbvzcm7w8g6fxnh4mk") (f (quote (("tracing" "wrap-match-impl/tracing") ("default"))))))

(define-public crate-wrap-match-1.0.7 (c (n "wrap-match") (v "1.0.7") (d (list (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pollster") (r "^0.3.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "wrap-match-impl") (r "=1.0.7") (d #t) (k 0)))) (h "1w40rr22xl9vk6wc8qq5iil5zw9p7qc7n91jj3zyhvm1c3xnqlrm") (f (quote (("tracing" "wrap-match-impl/tracing") ("default"))))))

