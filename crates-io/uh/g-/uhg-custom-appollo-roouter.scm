(define-module (crates-io uh g- uhg-custom-appollo-roouter) #:use-module (crates-io))

(define-public crate-uhg-custom-appollo-roouter-1.0.0 (c (n "uhg-custom-appollo-roouter") (v "1.0.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.8.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.67") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.6") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.0.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.0.0-beta.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.27") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "linkme") (r "^0.3.9") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "=0.2.1") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "18l9jnvi7qk20sn8dx7j5q0x9013yfpqv007sy2hnjy13p1bfg5a") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-uhg-custom-appollo-roouter-1.0.1 (c (n "uhg-custom-appollo-roouter") (v "1.0.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.8.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.67") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.6") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.0.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.0.0-beta.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.27") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "linkme") (r "^0.3.9") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "=0.2.1") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "1a82rdca1fc9if3x98vsgldfixcnzca3vfpvifhsb5fyla7v6d38") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-uhg-custom-appollo-roouter-1.0.2 (c (n "uhg-custom-appollo-roouter") (v "1.0.2") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.8.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.67") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.6") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.0.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.0.0-beta.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.27") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "linkme") (r "^0.3.9") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "=0.2.1") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "1wngcfpm24dvy0fmv3s7r8q6phq57hwx9vj7j8in4wqlqvqzr5fs") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-uhg-custom-appollo-roouter-1.0.3 (c (n "uhg-custom-appollo-roouter") (v "1.0.3") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.8.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.67") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.6") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.0.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.0.0-beta.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.27") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "linkme") (r "^0.3.9") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "=0.2.1") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "15nazf1vvsrww9wfp5qciz5ia6inxd5crdqq9r9da4jxcyk7vnfd") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-uhg-custom-appollo-roouter-1.0.4 (c (n "uhg-custom-appollo-roouter") (v "1.0.4") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.8.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.67") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.6") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.0.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.0.0-beta.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.27") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "linkme") (r "^0.3.9") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "=0.2.1") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "06dphaybxw49iwr30nwhy58vvr7fr82jciwsxsv4xygavqi4n8s8") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-uhg-custom-appollo-roouter-1.0.5 (c (n "uhg-custom-appollo-roouter") (v "1.0.5") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.8.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.5.1") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.67") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.6.6") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.67") (d #t) (k 0)) (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.10") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "fred") (r "^6.0.0") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.0.0-beta.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.27") (d #t) (k 2)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.26.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.2.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.1") (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "linkme") (r "^0.3.9") (d #t) (k 0)) (d (n "lru") (r "^0.8.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.13") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "multer") (r "^2.0.4") (d #t) (k 0)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_kqueue"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.6.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.8") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.12.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "=0.2.1") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.4.2") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.4") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.17") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "06d4ds7h0i0dfdm26w5cr63a2vqp2dfjc46s1sv9j97g0v4r77zh") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default") ("console" "tokio/tracing" "console-subscriber")))) (r "1.67.0")))

(define-public crate-uhg-custom-appollo-roouter-1.31.0 (c (n "uhg-custom-appollo-roouter") (v "1.31.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.11.2") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.7.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.6.2") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.1") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.0") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.11") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.27") (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.1") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.32.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.1") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.15") (d #t) (k 0)) (d (n "lru") (r "^0.11.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.6.3") (d #t) (k 0)) (d (n "memchr") (r "^2.6.3") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.0") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-aws") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.19.0") (d #t) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.19") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.19") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.5") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.6") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha1") (r "^0.10.5") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.2") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "10if8pffja77f721wjx878zw0x517frlqvbfjhr99p825kkhvhfa") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-uhg-custom-appollo-roouter-1.31.1 (c (n "uhg-custom-appollo-roouter") (v "1.31.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "apollo-compiler") (r "^0.11.2") (d #t) (k 0)) (d (n "apollo-encoder") (r "^0.7.0") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.6.2") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.1") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.56.0") (d #t) (k 0)) (d (n "aws-types") (r "^0.56.0") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bloomfilter") (r "^1.0.12") (d #t) (k 0)) (d (n "brotli") (r "^3.3.4") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ci_info") (r "^0.14.11") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.4.4") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console-subscriber") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.15.1") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.27") (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 0)) (d (n "fred") (r "^6.3.2") (f (quote ("enable-rustls" "no-client-setname"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.28") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.1") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.32.0") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.1") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^8.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "linkme") (r "^0.3.15") (d #t) (k 0)) (d (n "lru") (r "^0.11.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.15") (d #t) (k 0)) (d (n "memchr") (r "^2.6.3") (d #t) (k 0)) (d (n "memchr") (r "^2.6.3") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.0") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-aws") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.7.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12.0") (f (quote ("grpc-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.19.0") (d #t) (k 0)) (d (n "p256") (r "^0.12.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.11.9") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "redis") (r "^0.21.7") (f (quote ("tokio-comp"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.19") (f (quote ("rustls-tls" "rustls-native-certs" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.19") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.16.2") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.5") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^6.8.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.6") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha1") (r "^0.10.5") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.2") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tonic") (r "^0.8.3") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.4.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.19") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)) (d (n "zstd-safe") (r "^6.0.6") (d #t) (k 0)))) (h "1m26qcfzrh0vw02qc14zn0nimy4ky8d9may4px8v46grga42rgzx") (f (quote (("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.1")))

(define-public crate-uhg-custom-appollo-roouter-1.46.0 (c (n "uhg-custom-appollo-roouter") (v "1.46.0") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.16") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.11") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (t "cfg(unix)") (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client" "server"))) (t "cfg(unix)") (k 2)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (f (quote ("metrics" "trace" "gen-tonic-messages" "with-serde"))) (d #t) (k 2)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.20.0") (f (quote ("trace"))) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "=1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.21") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.11") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "0mc0c4hvw9fcacpjpw2amhfq7p9r8s7dwl2gn7a1ikb7g9y3qmmh") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

(define-public crate-uhg-custom-appollo-roouter-1.46.1 (c (n "uhg-custom-appollo-roouter") (v "1.46.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "apollo-compiler") (r "=1.0.0-beta.16") (d #t) (k 0)) (d (n "apollo-federation") (r "=0.0.11") (d #t) (k 0)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "askama") (r "^0.12.1") (d #t) (k 0)) (d (n "async-channel") (r "^1.9.0") (d #t) (k 0)) (d (n "async-compression") (r "^0.4.6") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-sigv4") (r "^1.1.6") (d #t) (k 0)) (d (n "aws-smithy-runtime-api") (r "^1.1.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "aws-types") (r "^1.1.6") (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("headers" "json" "original-uri" "ws"))) (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "basic-toml") (r "^0.1") (d #t) (k 1)) (d (n "basic-toml") (r "^0.1") (d #t) (k 2)) (d (n "bloomfilter") (r "^1.0.13") (d #t) (k 0)) (d (n "brotli") (r "^3.4.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.4") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "bytesize") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ci_info") (r "^0.14.14") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("env" "derive" "std" "help"))) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "dhat") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.9") (f (quote ("signing" "pem" "pkcs8"))) (d #t) (k 2)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls"))) (d #t) (k 0)) (d (n "fred") (r "^7.1.2") (f (quote ("enable-rustls" "mocks"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.3") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("server" "client" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (t "cfg(unix)") (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client" "server"))) (t "cfg(unix)") (k 2)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("json" "redactions" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jsonpath-rust") (r "^0.3.5") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (k 0)) (d (n "jsonwebtoken") (r "^9.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "linkme") (r "^0.3.23") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.18") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (d #t) (k 0)) (d (n "memchr") (r "^2.7.1") (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "multer") (r "^2.1.0") (d #t) (k 0)) (d (n "multimap") (r "^0.9.1") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (f (quote ("macos_kqueue"))) (k 0)) (d (n "nu-ansi-term") (r "^0.49") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "opentelemetry-aws") (r "^0.8.0") (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.8.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13.0") (f (quote ("grpc-tonic" "gzip-tonic" "tonic" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (f (quote ("metrics" "trace" "gen-tonic-messages" "with-serde"))) (d #t) (k 2)) (d (n "opentelemetry-semantic-conventions") (r "^0.12.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry-zipkin") (r "^0.18.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.20.0") (f (quote ("trace"))) (k 0)) (d (n "p256") (r "^0.13.2") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "proteus") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "rustls-native-certs" "gzip" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "multipart" "stream"))) (k 2)) (d (n "rhai") (r "=1.17.1") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "rhai") (r "^1.17.1") (f (quote ("sync" "serde" "internals" "testing-environ"))) (d #t) (k 2)) (d (n "router-bridge") (r "=0.5.21") (d #t) (k 0)) (d (n "rstack") (r "^0.3.3") (f (quote ("dw"))) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "rust-embed") (r "^8.2.0") (d #t) (k 0)) (d (n "rustls") (r "^0.21.11") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("url"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive_default") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order" "float_roundtrip"))) (d #t) (k 1)) (d (n "serde_json_bytes") (r "^0.2.2") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "shellexpand") (r "^3.1.0") (d #t) (k 0)) (d (n "similar") (r "^2.4.0") (f (quote ("inline"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.1") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("rustls-tls-native-roots"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("net" "codec" "time"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (f (quote ("transport" "tls" "tls-roots" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("add-extension" "trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.23.2") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 2)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "wsl") (r "^0.1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (d #t) (k 0)))) (h "0183hfdz83gj7hxkgnwjklaijwlpab1m74ahiwvqamayiy50z0ns") (f (quote (("telemetry_next") ("global-allocator") ("failfast") ("docs_rs" "router-bridge/docs_rs") ("dhat-heap" "dhat") ("dhat-ad-hoc" "dhat") ("default" "global-allocator") ("console" "tokio/tracing" "console-subscriber")))) (r "1.72.0")))

