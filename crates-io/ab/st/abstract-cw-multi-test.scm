(define-module (crates-io ab st abstract-cw-multi-test) #:use-module (crates-io))

(define-public crate-abstract-cw-multi-test-0.16.5 (c (n "abstract-cw-multi-test") (v "0.16.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cosmwasm-schema") (r "^1.3.3") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.3") (f (quote ("staking" "stargate"))) (d #t) (k 0)) (d (n "cw-storage-plus") (r "^1.1") (d #t) (k 0)) (d (n "cw-utils") (r "^1.0") (d #t) (k 0)) (d (n "cw20-ics20") (r "^1.1.0") (d #t) (k 0)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "polytone") (r "^1.0.0") (d #t) (k 0)) (d (n "polytone-note") (r "^1.0.0") (d #t) (k 0)) (d (n "polytone-proxy") (r "^1.0.0") (d #t) (k 0)) (d (n "polytone-voice") (r "^1.0.0") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha256") (r "^1.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0c3znrgpsp6d1pv5k0jdrp6jiwccvsjnhrkxhjx1vmrs80dfkdrs") (f (quote (("stargate" "cosmwasm-std/stargate") ("staking" "cosmwasm-std/staking") ("multitest_api_1_0") ("iterator" "cosmwasm-std/iterator") ("default" "iterator" "staking" "cosmwasm_1_2") ("cosmwasm_1_3" "cosmwasm_1_2" "cosmwasm-std/cosmwasm_1_3") ("cosmwasm_1_2" "cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_2") ("cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_1" "cosmwasm-std/ibc3") ("backtrace" "anyhow/backtrace")))) (y #t)))

(define-public crate-abstract-cw-multi-test-0.16.6 (c (n "abstract-cw-multi-test") (v "0.16.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cosmwasm-schema") (r "^1.3.3") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.3") (f (quote ("staking" "stargate"))) (d #t) (k 0)) (d (n "cw-storage-plus") (r "^1.1") (d #t) (k 0)) (d (n "cw-utils") (r "^1.0") (d #t) (k 0)) (d (n "cw20-ics20") (r "^1.1.0") (d #t) (k 0)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "polytone") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-note") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-proxy") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-voice") (r "^1.0.0") (d #t) (k 2)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha256") (r "^1.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0b49d9vhgs830mwam60j9m2ymkkq8qb1165cvrzk1b4qbxw6f0r2") (f (quote (("stargate" "cosmwasm-std/stargate") ("staking" "cosmwasm-std/staking") ("multitest_api_1_0") ("iterator" "cosmwasm-std/iterator") ("default" "iterator" "staking" "cosmwasm_1_2") ("cosmwasm_1_3" "cosmwasm_1_2" "cosmwasm-std/cosmwasm_1_3") ("cosmwasm_1_2" "cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_2") ("cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_1" "cosmwasm-std/ibc3") ("backtrace" "anyhow/backtrace"))))))

(define-public crate-abstract-cw-multi-test-0.17.0 (c (n "abstract-cw-multi-test") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "bech32") (r "^0.9.1") (d #t) (k 0)) (d (n "bech32") (r "^0.9.1") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.3.3") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.5.0") (f (quote ("staking" "stargate"))) (d #t) (k 0)) (d (n "cw-storage-plus") (r "^1.1.0") (d #t) (k 0)) (d (n "cw-utils") (r "^1.0.2") (d #t) (k 0)) (d (n "cw20-ics20") (r "^1.1.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.8") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "polytone") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-note") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-proxy") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-voice") (r "^1.0.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha256") (r "^1.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "1ji9nrls2ck6wj19ig075751nw30mcbplwcggh8kng6bc1fjnd9s") (f (quote (("stargate" "cosmwasm-std/stargate") ("staking" "cosmwasm-std/staking") ("iterator" "cosmwasm-std/iterator") ("default" "iterator" "staking" "cosmwasm_1_2") ("cosmwasm_1_4" "cosmwasm_1_3" "cosmwasm-std/cosmwasm_1_4") ("cosmwasm_1_3" "cosmwasm_1_2" "cosmwasm-std/cosmwasm_1_3") ("cosmwasm_1_2" "cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_2") ("cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_1" "cosmwasm-std/ibc3") ("backtrace" "anyhow/backtrace"))))))

(define-public crate-abstract-cw-multi-test-0.16.7 (c (n "abstract-cw-multi-test") (v "0.16.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cosmwasm-schema") (r "^1.3.3") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.3") (f (quote ("staking" "stargate"))) (d #t) (k 0)) (d (n "cw-storage-plus") (r "^1.1") (d #t) (k 0)) (d (n "cw-utils") (r "^1.0") (d #t) (k 0)) (d (n "cw20-ics20") (r "^1.1.0") (d #t) (k 0)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "polytone") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-note") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-proxy") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-voice") (r "^1.0.0") (d #t) (k 2)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha256") (r "^1.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0a7igml22v40skvk2mvscnp7xk6z9ps9c61wz64r6lnnq94fl6zz") (f (quote (("stargate" "cosmwasm-std/stargate") ("staking" "cosmwasm-std/staking") ("multitest_api_1_0") ("iterator" "cosmwasm-std/iterator") ("default" "iterator" "staking" "cosmwasm_1_2") ("cosmwasm_1_3" "cosmwasm_1_2" "cosmwasm-std/cosmwasm_1_3") ("cosmwasm_1_2" "cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_2") ("cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_1" "cosmwasm-std/ibc3") ("backtrace" "anyhow/backtrace"))))))

(define-public crate-abstract-cw-multi-test-0.20.0 (c (n "abstract-cw-multi-test") (v "0.20.0") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "bech32") (r "^0.9.1") (d #t) (k 0)) (d (n "cosmwasm-schema") (r "^1.3.3") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.5.0") (f (quote ("iterator" "staking" "stargate"))) (d #t) (k 0)) (d (n "cw-storage-plus") (r "^1.2.0") (d #t) (k 0)) (d (n "cw-utils") (r "^1.0.3") (d #t) (k 0)) (d (n "cw1-whitelist") (r "^1.1.2") (d #t) (k 2)) (d (n "cw20-ics20") (r "^1.1.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "polytone") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-note") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-proxy") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-voice") (r "^1.0.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha256") (r "^1.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)))) (h "024ln91xwbwh15qdlqj07hygl16253z7l6v4hrj8121mcv48x4fl") (f (quote (("default" "cosmwasm_1_3") ("cosmwasm_1_4" "cosmwasm_1_3" "cosmwasm-std/cosmwasm_1_4") ("cosmwasm_1_3" "cosmwasm_1_2" "cosmwasm-std/cosmwasm_1_3") ("cosmwasm_1_2" "cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_2") ("cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_1" "cosmwasm-std/ibc3") ("backtrace" "anyhow/backtrace"))))))

(define-public crate-abstract-cw-multi-test-0.20.1 (c (n "abstract-cw-multi-test") (v "0.20.1") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "bech32") (r "^0.9.1") (d #t) (k 0)) (d (n "cosmwasm-schema") (r "^1.3.3") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.5.0") (f (quote ("iterator" "staking" "stargate"))) (d #t) (k 0)) (d (n "cw-storage-plus") (r "^1.2.0") (d #t) (k 0)) (d (n "cw-utils") (r "^1.0.3") (d #t) (k 0)) (d (n "cw1-whitelist") (r "^1.1.2") (d #t) (k 2)) (d (n "cw20-ics20") (r "^1.1.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "polytone") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-note") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-proxy") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-voice") (r "^1.0.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha256") (r "^1.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)))) (h "0clm141x6y4dg11rs7vvrailb4898g2z1d951ndgybicgq67f6r9") (f (quote (("default" "cosmwasm_1_3") ("cosmwasm_1_4" "cosmwasm_1_3" "cosmwasm-std/cosmwasm_1_4") ("cosmwasm_1_3" "cosmwasm_1_2" "cosmwasm-std/cosmwasm_1_3") ("cosmwasm_1_2" "cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_2") ("cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_1" "cosmwasm-std/ibc3") ("backtrace" "anyhow/backtrace"))))))

(define-public crate-abstract-cw-multi-test-0.20.2 (c (n "abstract-cw-multi-test") (v "0.20.2") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "bech32") (r "^0.9.1") (d #t) (k 0)) (d (n "cosmwasm-schema") (r "^1.3.3") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.5.0") (f (quote ("iterator" "staking" "stargate"))) (d #t) (k 0)) (d (n "cw-storage-plus") (r "^1.2.0") (d #t) (k 0)) (d (n "cw-utils") (r "^1.0.3") (d #t) (k 0)) (d (n "cw1-whitelist") (r "^1.1.2") (d #t) (k 2)) (d (n "cw20-ics20") (r "^1.1.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "polytone") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-note") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-proxy") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-voice") (r "^1.0.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sha256") (r "^1.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)))) (h "1dsa64m3y0yahkzy3p3s8mi40mdrzn3f21nmnn1s2ysvadr4f5ly") (f (quote (("default" "cosmwasm_1_3") ("cosmwasm_1_4" "cosmwasm_1_3" "cosmwasm-std/cosmwasm_1_4") ("cosmwasm_1_3" "cosmwasm_1_2" "cosmwasm-std/cosmwasm_1_3") ("cosmwasm_1_2" "cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_2") ("cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_1" "cosmwasm-std/ibc3") ("backtrace" "anyhow/backtrace"))))))

(define-public crate-abstract-cw-multi-test-0.21.0 (c (n "abstract-cw-multi-test") (v "0.21.0") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "bech32") (r "^0.9.1") (d #t) (k 0)) (d (n "cosmwasm-schema") (r "^1.3.3") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.5.0") (f (quote ("iterator" "staking" "stargate"))) (d #t) (k 0)) (d (n "cw-storage-plus") (r "^1.2.0") (d #t) (k 0)) (d (n "cw-utils") (r "^1.0.3") (d #t) (k 0)) (d (n "cw1-whitelist") (r "^1.1.2") (d #t) (k 2)) (d (n "cw20-ics20") (r "^1.1.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "polytone") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-note") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-proxy") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-voice") (r "^1.0.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)))) (h "0x457jkin0y0x0gcnsvjz2d6hj1m0akqamnkkiml0aazbslpi2nq") (f (quote (("default" "cosmwasm_1_3") ("cosmwasm_1_4" "cosmwasm_1_3" "cosmwasm-std/cosmwasm_1_4") ("cosmwasm_1_3" "cosmwasm_1_2" "cosmwasm-std/cosmwasm_1_3") ("cosmwasm_1_2" "cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_2") ("cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_1" "cosmwasm-std/ibc3") ("backtrace" "anyhow/backtrace"))))))

(define-public crate-abstract-cw-multi-test-1.0.0 (c (n "abstract-cw-multi-test") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 0)) (d (n "bech32") (r "^0.11.0") (d #t) (k 0)) (d (n "cosmwasm-schema") (r "^1.3.3") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.5.3") (f (quote ("iterator" "staking" "stargate"))) (d #t) (k 0)) (d (n "cw-storage-plus") (r "^1.2.0") (d #t) (k 0)) (d (n "cw-utils") (r "^1.0.3") (d #t) (k 0)) (d (n "cw20-ics20") (r "^1.1.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "polytone") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-note") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-proxy") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-voice") (r "^1.0.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)))) (h "0wlhmjgl12p596a6h80i020bsqq34sc9547l0g1if0papmyagn1k") (f (quote (("default" "cosmwasm_1_3") ("cosmwasm_1_4" "cosmwasm_1_3" "cosmwasm-std/cosmwasm_1_4") ("cosmwasm_1_3" "cosmwasm_1_2" "cosmwasm-std/cosmwasm_1_3") ("cosmwasm_1_2" "cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_2") ("cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_1" "cosmwasm-std/ibc3") ("backtrace" "anyhow/backtrace"))))))

(define-public crate-abstract-cw-multi-test-2.0.1 (c (n "abstract-cw-multi-test") (v "2.0.1") (d (list (d (n "anyhow") (r "^1.0.82") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.82") (d #t) (k 2)) (d (n "bech32") (r "^0.11.0") (d #t) (k 0)) (d (n "bech32") (r "^0.11.0") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^2.0.3") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^2.0.2") (f (quote ("iterator" "staking" "stargate"))) (d #t) (k 0)) (d (n "cw-storage-plus") (r "^2.0.0") (d #t) (k 0)) (d (n "cw-utils") (r "^2.0.0") (d #t) (k 0)) (d (n "cw20-ics20") (r "^2.0.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "polytone") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-note") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-proxy") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-voice") (r "^1.0.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.199") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.59") (d #t) (k 0)))) (h "1732g65zrsaqp6z62jr14gcl5bvr7p3xzvy6zfbsvy89gai686yj") (f (quote (("default" "cosmwasm_2_0") ("cosmwasm_2_0" "cosmwasm-std/cosmwasm_2_0") ("backtrace" "anyhow/backtrace"))))))

(define-public crate-abstract-cw-multi-test-1.0.1 (c (n "abstract-cw-multi-test") (v "1.0.1") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 0)) (d (n "bech32") (r "^0.11.0") (d #t) (k 0)) (d (n "cosmwasm-schema") (r "^1.3.3") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.5.3") (f (quote ("iterator" "staking" "stargate"))) (d #t) (k 0)) (d (n "cw-storage-plus") (r "^1.2.0") (d #t) (k 0)) (d (n "cw-utils") (r "^1.0.3") (d #t) (k 0)) (d (n "cw20-ics20") (r "^1.1.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "polytone") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-note") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-proxy") (r "^1.0.0") (d #t) (k 2)) (d (n "polytone-voice") (r "^1.0.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)))) (h "1sqghg9nqpamcp5yijmnh8k78pnkn8y99s7wqkxp93y0pbaghxqc") (f (quote (("default" "cosmwasm_1_3") ("cosmwasm_1_4" "cosmwasm_1_3" "cosmwasm-std/cosmwasm_1_4") ("cosmwasm_1_3" "cosmwasm_1_2" "cosmwasm-std/cosmwasm_1_3") ("cosmwasm_1_2" "cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_2") ("cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_1" "cosmwasm-std/ibc3") ("backtrace" "anyhow/backtrace"))))))

