(define-module (crates-io ab el abel-core) #:use-module (crates-io))

(define-public crate-abel-core-0.1.0 (c (n "abel-core") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.63") (d #t) (k 0)) (d (n "bstr") (r "^0.2.17") (d #t) (k 0)) (d (n "clru") (r "^0.5.0") (d #t) (k 0)) (d (n "dashmap") (r "^5.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "hyper") (r "^0.14.16") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.16") (f (quote ("full"))) (d #t) (k 2)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mlua") (r "^0.8.2") (f (quote ("lua54" "async" "serialize"))) (d #t) (k 0)) (d (n "nonzero_ext") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "replace_with") (r "^0.1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.73") (d #t) (k 0)) (d (n "serde_qs") (r "^0.10.1") (d #t) (k 0)) (d (n "smallstr") (r "^0.3.0") (f (quote ("std" "serde" "union"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "test-case") (r "^2.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.14.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.3") (f (quote ("io"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0n9mfbsh9b7vakcak6z0kpk3h4y3wx6f6gvfhw52y3nmdr13237d") (f (quote (("tls-vendored" "hyper-tls/vendored") ("mlua-vendored" "mlua/vendored"))))))

(define-public crate-abel-core-0.1.1 (c (n "abel-core") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.63") (d #t) (k 0)) (d (n "bstr") (r "^0.2.17") (d #t) (k 0)) (d (n "clru") (r "^0.5.0") (d #t) (k 0)) (d (n "dashmap") (r "^5.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "hyper") (r "^0.14.16") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.16") (f (quote ("full"))) (d #t) (k 2)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mlua") (r "^0.8.2") (f (quote ("lua54" "async" "serialize"))) (d #t) (k 0)) (d (n "nonzero_ext") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "replace_with") (r "^0.1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.73") (d #t) (k 0)) (d (n "serde_qs") (r "^0.10.1") (d #t) (k 0)) (d (n "smallstr") (r "^0.3.0") (f (quote ("std" "serde" "union"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "test-case") (r "^2.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.14.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.3") (f (quote ("io"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1aykr3xnf0cbj6grxqkz3djybxkxsfms10a22hann80dg2z83jy9") (f (quote (("tls-vendored" "hyper-tls/vendored") ("mlua-vendored" "mlua/vendored"))))))

