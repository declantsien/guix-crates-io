(define-module (crates-io od ra odra-casper-backend) #:use-module (crates-io))

(define-public crate-odra-casper-backend-0.0.1 (c (n "odra-casper-backend") (v "0.0.1") (d (list (d (n "casper-contract") (r "^1.4.4") (f (quote ("std"))) (k 0)) (d (n "casper-types") (r "^1.5.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.5.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "odra") (r "^0.0.1") (f (quote ("wasm"))) (k 0)) (d (n "odra-casper-shared") (r "^0.0.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.39") (d #t) (k 0)) (d (n "quote") (r "^1.0.18") (d #t) (k 0)) (d (n "syn") (r "^1.0.96") (d #t) (k 0)))) (h "0ny2m81w6gd6vb9hrn7z4gblg0gimrypmvayv7m86rn68k3xlp3n")))

(define-public crate-odra-casper-backend-0.1.0 (c (n "odra-casper-backend") (v "0.1.0") (d (list (d (n "casper-contract") (r "^1.4.4") (f (quote ("std"))) (k 0)) (d (n "casper-types") (r "^1.5.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.5.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "odra") (r "^0.1.0") (f (quote ("wasm"))) (k 0)) (d (n "odra-casper-shared") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.39") (d #t) (k 0)) (d (n "quote") (r "^1.0.18") (d #t) (k 0)) (d (n "syn") (r "^1.0.96") (d #t) (k 0)))) (h "0hd824cji7kkhk12dmjq45qcw5idj9h53ldyrcmmq602bclwir9k")))

(define-public crate-odra-casper-backend-0.2.0 (c (n "odra-casper-backend") (v "0.2.0") (d (list (d (n "casper-contract") (r "^1.4.4") (f (quote ("std" "test-support"))) (k 0)) (d (n "casper-types") (r "^1.5.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "odra-casper-shared") (r "^0.2.0") (d #t) (k 0)) (d (n "odra-casper-types") (r "^0.2.0") (d #t) (k 0)) (d (n "odra-types") (r "^0.2.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.96") (d #t) (k 0)))) (h "062ararz979k2qd65ardy16lbq3d919i8yhj895v3hjd9a4hm1y5")))

(define-public crate-odra-casper-backend-0.3.0 (c (n "odra-casper-backend") (v "0.3.0") (d (list (d (n "casper-contract") (r "^2.0.0") (f (quote ("std" "test-support"))) (k 0)) (d (n "casper-event-standard") (r "^0.3.0") (d #t) (k 0)) (d (n "casper-types") (r "^2.0.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "odra-casper-shared") (r "^0.3.0") (d #t) (k 0)) (d (n "odra-casper-types") (r "^0.3.0") (d #t) (k 0)) (d (n "odra-types") (r "^0.3.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.96") (d #t) (k 0)))) (h "0pyrxsklfsrldx77zkhs3262iqmpjk2d6l8vladi8dkw416n5lmi")))

(define-public crate-odra-casper-backend-0.3.1 (c (n "odra-casper-backend") (v "0.3.1") (d (list (d (n "casper-contract") (r "^2.0.0") (f (quote ("std" "test-support"))) (k 0)) (d (n "casper-event-standard") (r "^0.3.0") (d #t) (k 0)) (d (n "casper-types") (r "^2.0.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "odra-casper-shared") (r "^0.3.1") (d #t) (k 0)) (d (n "odra-casper-types") (r "^0.3.1") (d #t) (k 0)) (d (n "odra-types") (r "^0.3.1") (d #t) (k 0)) (d (n "syn") (r "^1.0.96") (d #t) (k 0)))) (h "1mdwglqaxj9m440a0kig1jgmrb0izk4q668hpcmmyp7rk6f695c5")))

(define-public crate-odra-casper-backend-0.4.0 (c (n "odra-casper-backend") (v "0.4.0") (d (list (d (n "casper-contract") (r "^3.0.0") (f (quote ("std" "test-support"))) (k 0)) (d (n "casper-event-standard") (r "^0.4.0") (d #t) (k 0)) (d (n "casper-types") (r "^3.0.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "odra-casper-shared") (r "^0.4.0") (d #t) (k 0)) (d (n "odra-casper-types") (r "^0.4.0") (d #t) (k 0)) (d (n "odra-types") (r "^0.4.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.96") (d #t) (k 0)))) (h "0c8nb6jsm1r0c72y4f75qmwaj02ljap8yrja18cw68cliwqaqhm6")))

(define-public crate-odra-casper-backend-0.5.0 (c (n "odra-casper-backend") (v "0.5.0") (d (list (d (n "casper-contract") (r "^3.0.0") (f (quote ("std" "test-support"))) (k 0)) (d (n "casper-event-standard") (r "^0.4.0") (d #t) (k 0)) (d (n "casper-types") (r "^3.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "odra-casper-shared") (r "^0.5.0") (d #t) (k 0)) (d (n "odra-casper-types") (r "^0.5.0") (d #t) (k 0)) (d (n "odra-types") (r "^0.5.0") (d #t) (k 0)))) (h "1g31gvrk3rrd5s8hgxknz768fp3ck8gg6p62x1qmy7r75gslnw68")))

(define-public crate-odra-casper-backend-0.6.0 (c (n "odra-casper-backend") (v "0.6.0") (d (list (d (n "casper-contract") (r "^3.0.0") (f (quote ("test-support"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "casper-contract") (r "^3.0.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "casper-event-standard") (r "^0.4.0") (d #t) (k 0)) (d (n "casper-types") (r "^3.0.0") (d #t) (k 0)) (d (n "ink_allocator") (r "^4.2.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "odra-casper-shared") (r "^0.6.0") (d #t) (k 0)) (d (n "odra-casper-types") (r "^0.6.0") (d #t) (k 0)) (d (n "odra-types") (r "^0.6.0") (d #t) (k 0)))) (h "066npmhrdd2b512aphvnv616dywlhscv47lid801bbamp0lss3mg")))

(define-public crate-odra-casper-backend-0.7.0 (c (n "odra-casper-backend") (v "0.7.0") (d (list (d (n "casper-contract") (r "^3.0.0") (f (quote ("test-support"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "casper-contract") (r "^3.0.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "casper-event-standard") (r "^0.4.0") (d #t) (k 0)) (d (n "ink_allocator") (r "^4.2.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "odra-casper-shared") (r "^0.7.0") (d #t) (k 0)) (d (n "odra-types") (r "^0.7.0") (d #t) (k 0)))) (h "0g0zrih2plrxiy8n47ip2dcgkbkjnj1bbdxmg0dzy2knfqx4wshj")))

(define-public crate-odra-casper-backend-0.7.1 (c (n "odra-casper-backend") (v "0.7.1") (d (list (d (n "casper-contract") (r "^3.0.0") (f (quote ("test-support"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "casper-contract") (r "^3.0.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "casper-event-standard") (r "^0.4.0") (d #t) (k 0)) (d (n "ink_allocator") (r "^4.2.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "odra-casper-shared") (r "^0.7.1") (d #t) (k 0)) (d (n "odra-types") (r "^0.7.1") (d #t) (k 0)))) (h "08f16ar9r7rcash8q09sp4f8r45arcv7rmv2sfb20k9a7z122zkf")))

(define-public crate-odra-casper-backend-0.6.1 (c (n "odra-casper-backend") (v "0.6.1") (d (list (d (n "casper-contract") (r "^3.0.0") (f (quote ("test-support"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "casper-contract") (r "^3.0.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "casper-event-standard") (r "^0.4.0") (d #t) (k 0)) (d (n "casper-types") (r "^3.0.0") (d #t) (k 0)) (d (n "ink_allocator") (r "^4.2.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "odra-casper-shared") (r "^0.6.1") (d #t) (k 0)) (d (n "odra-casper-types") (r "^0.6.1") (d #t) (k 0)) (d (n "odra-types") (r "^0.6.1") (d #t) (k 0)))) (h "1x13flqzxlk9h598xx9mywp15c2kw679xcp62d1kscprcqlkcx4x")))

(define-public crate-odra-casper-backend-0.6.2 (c (n "odra-casper-backend") (v "0.6.2") (d (list (d (n "casper-contract") (r "^4.0.0") (f (quote ("test-support"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "casper-contract") (r "^4.0.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "casper-event-standard") (r "^0.5.0") (d #t) (k 0)) (d (n "casper-types") (r "^4.0.1") (d #t) (k 0)) (d (n "ink_allocator") (r "^4.2.1") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "odra-casper-shared") (r "^0.6.2") (d #t) (k 0)) (d (n "odra-casper-types") (r "^0.6.2") (d #t) (k 0)) (d (n "odra-types") (r "^0.6.2") (d #t) (k 0)))) (h "0h946q99md452n0ns4137681xh0k27x15gshr3i9lda8ykdmmg0p")))

