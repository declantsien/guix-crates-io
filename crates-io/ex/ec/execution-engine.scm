(define-module (crates-io ex ec execution-engine) #:use-module (crates-io))

(define-public crate-execution-engine-0.1.0 (c (n "execution-engine") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "eval") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "nats") (r "^0.18.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (f (quote ("std_rng"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.26") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "130jlznig28knms1whv67qk64msnnihylksn7gq097r4v4bvwm9v")))

(define-public crate-execution-engine-0.1.1 (c (n "execution-engine") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "eval") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "nats") (r "^0.18.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (f (quote ("std_rng"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.26") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1wl0sr0480n6790fysmp32sdj91bcmb0vzcr3cf453vr8zxpb53f")))

(define-public crate-execution-engine-0.1.2 (c (n "execution-engine") (v "0.1.2") (d (list (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "eval") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "nats") (r "^0.18.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (f (quote ("std_rng"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.26") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1hyjfg29cxk29nzsl3vyd4xkxwg1gh5q80r8iv3jr54167r1v86d")))

(define-public crate-execution-engine-0.1.3 (c (n "execution-engine") (v "0.1.3") (d (list (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "eval") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "nats") (r "^0.18.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (f (quote ("std_rng"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.26") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0md3hpz06rgpngv3sl005h35r4xikp9gmfb2cs5d7sqw0bx017pj")))

(define-public crate-execution-engine-0.1.4 (c (n "execution-engine") (v "0.1.4") (d (list (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "eval") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "nats") (r "^0.18.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (f (quote ("std_rng"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.26") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "02hnbhy0rqn10y4rqqcsn9mpvarpljldqgn7drw53wi9lf23y8ki")))

