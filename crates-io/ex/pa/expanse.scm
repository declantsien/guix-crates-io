(define-module (crates-io ex pa expanse) #:use-module (crates-io))

(define-public crate-expanse-0.3.3 (c (n "expanse") (v "0.3.3") (d (list (d (n "arrayvec") (r "^0.5.1") (k 0)) (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "hash32") (r "^0.1.1") (d #t) (k 0)) (d (n "hash32-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.6.3") (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.5.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "serde") (r "^1.0.102") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.11.2") (d #t) (k 0)))) (h "1lplpd542f2wsbvjnr1hdjs7m0y73gi9zbvkbcgpqyn71dzr413y") (f (quote (("std" "num-traits/std") ("serde_kebab_case" "serde") ("serde_camel_case" "serde") ("default" "std") ("alloc" "hashbrown"))))))

(define-public crate-expanse-0.3.4 (c (n "expanse") (v "0.3.4") (d (list (d (n "arrayvec") (r "^0.5.1") (k 0)) (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "hash32") (r "^0.1.1") (d #t) (k 0)) (d (n "hash32-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.6.3") (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.5.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "serde") (r "^1.0.102") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.11.2") (d #t) (k 0)))) (h "0gcy6flc9xwvlmz191lpqw2ah0hryd6cx2pwnl5nwjajjh1sj7ij") (f (quote (("std" "num-traits/std") ("serde_kebab_case" "serde") ("serde_camel_case" "serde") ("default" "std") ("alloc" "hashbrown"))))))

