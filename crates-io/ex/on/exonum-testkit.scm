(define-module (crates-io ex on exonum-testkit) #:use-module (crates-io))

(define-public crate-exonum-testkit-0.1.0 (c (n "exonum-testkit") (v "0.1.0") (d (list (d (n "bodyparser") (r "^0.8.0") (d #t) (k 2)) (d (n "exonum") (r "^0.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.1.14") (d #t) (k 0)) (d (n "iron") (r "^0.6.0") (d #t) (k 0)) (d (n "iron-test") (r "^0.6.0") (d #t) (k 0)) (d (n "mount") (r "^0.4.0") (d #t) (k 0)) (d (n "router") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)))) (h "0ljil9k1f05kpnpqpmlc05fjh8zrb9iq9pnvbkfql9xmvdqcylrg")))

(define-public crate-exonum-testkit-0.1.1 (c (n "exonum-testkit") (v "0.1.1") (d (list (d (n "bodyparser") (r "^0.8.0") (d #t) (k 2)) (d (n "exonum") (r "^0.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.1.14") (d #t) (k 0)) (d (n "iron") (r "^0.6.0") (d #t) (k 0)) (d (n "iron-test") (r "^0.6.0") (d #t) (k 0)) (d (n "mount") (r "^0.4.0") (d #t) (k 0)) (d (n "router") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)))) (h "0d7y753kqk62cjqdirh0jyrrblmqd612i8zpj0j3psjbl2rjmkjf")))

(define-public crate-exonum-testkit-0.5.0 (c (n "exonum-testkit") (v "0.5.0") (d (list (d (n "bodyparser") (r "^0.8.0") (d #t) (k 2)) (d (n "exonum") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.1.14") (d #t) (k 0)) (d (n "iron") (r "^0.6.0") (d #t) (k 0)) (d (n "iron-test") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "router") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)))) (h "1a7bwp7kqspvda44hf7bws816ljc96620bci67qnwclff3n3612d")))

(define-public crate-exonum-testkit-0.6.0 (c (n "exonum-testkit") (v "0.6.0") (d (list (d (n "bodyparser") (r "^0.8.0") (d #t) (k 2)) (d (n "exonum") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.1.14") (d #t) (k 0)) (d (n "iron") (r "^0.6.0") (d #t) (k 0)) (d (n "iron-test") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.0") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "router") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)))) (h "0rpy428h6p72faxmymgg98hj03qcdi9kr50045ddxdk0qjj1040f")))

(define-public crate-exonum-testkit-0.7.0 (c (n "exonum-testkit") (v "0.7.0") (d (list (d (n "assert_matches") (r "^1.2.0") (d #t) (k 2)) (d (n "bodyparser") (r "^0.8.0") (d #t) (k 0)) (d (n "bodyparser") (r "^0.8.0") (d #t) (k 2)) (d (n "exonum") (r "^0.7.0") (d #t) (k 0)) (d (n "futures") (r "^0.1.14") (d #t) (k 0)) (d (n "iron") (r "^0.6.0") (d #t) (k 0)) (d (n "iron-test") (r "^0.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.0") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "router") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)) (d (n "thread_local") (r "^0.3.5") (d #t) (k 2)))) (h "1i85l8pbg4nrg3ibyxp0nym2ghxkpj5hwd9fd0srvicqgy2ndyf8")))

(define-public crate-exonum-testkit-0.8.0 (c (n "exonum-testkit") (v "0.8.0") (d (list (d (n "assert_matches") (r "^1.2.0") (d #t) (k 2)) (d (n "bodyparser") (r "= 0.8.0") (d #t) (k 0)) (d (n "exonum") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "= 0.1.21") (d #t) (k 0)) (d (n "iron") (r "= 0.6.0") (d #t) (k 0)) (d (n "iron-test") (r "= 0.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 2)) (d (n "log") (r "= 0.4.1") (d #t) (k 0)) (d (n "mount") (r "= 0.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "= 0.5.1") (d #t) (k 2)) (d (n "rand") (r "= 0.4.2") (d #t) (k 2)) (d (n "router") (r "= 0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 0)) (d (n "thread_local") (r "= 0.3.5") (d #t) (k 2)) (d (n "tokio-core") (r "= 0.1.17") (d #t) (k 0)))) (h "12wwgfbm29cnn1292n2slsvfr6zpsixk0yx01cnsfvdy78rcfzns")))

(define-public crate-exonum-testkit-0.9.0 (c (n "exonum-testkit") (v "0.9.0") (d (list (d (n "actix-web") (r "= 0.6.15") (d #t) (k 0)) (d (n "assert_matches") (r "^1.2.0") (d #t) (k 2)) (d (n "exonum") (r "^0.9.0") (d #t) (k 0)) (d (n "failure") (r "= 0.1.1") (d #t) (k 0)) (d (n "futures") (r "= 0.1.23") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 2)) (d (n "log") (r "= 0.4.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "= 0.5.1") (d #t) (k 2)) (d (n "rand") (r "= 0.4.2") (d #t) (k 2)) (d (n "reqwest") (r "= 0.8.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_urlencoded") (r "= 0.5.2") (d #t) (k 0)) (d (n "thread_local") (r "= 0.3.5") (d #t) (k 2)) (d (n "tokio-core") (r "= 0.1.17") (d #t) (k 0)))) (h "1z77p70jlggff43pw29w8dgv0xw61dgl6ay2hl772kd7f0swz7y2")))

(define-public crate-exonum-testkit-0.9.1 (c (n "exonum-testkit") (v "0.9.1") (d (list (d (n "actix-web") (r "= 0.6.15") (d #t) (k 0)) (d (n "assert_matches") (r "^1.2.0") (d #t) (k 2)) (d (n "exonum") (r "^0.9.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "futures") (r "= 0.1.23") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 2)) (d (n "log") (r "= 0.4.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "= 0.5.1") (d #t) (k 2)) (d (n "rand") (r "= 0.4.2") (d #t) (k 2)) (d (n "reqwest") (r "= 0.8.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_urlencoded") (r "= 0.5.2") (d #t) (k 0)) (d (n "thread_local") (r "= 0.3.5") (d #t) (k 2)) (d (n "tokio-core") (r "= 0.1.17") (d #t) (k 0)))) (h "0sviavj6ly3idz55l5j4ysf6rz5g52sn4nlidh5y9y83ba3hqzny")))

(define-public crate-exonum-testkit-0.9.2 (c (n "exonum-testkit") (v "0.9.2") (d (list (d (n "actix-web") (r "= 0.6.15") (d #t) (k 0)) (d (n "assert_matches") (r "^1.2.0") (d #t) (k 2)) (d (n "exonum") (r "^0.9.2") (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "futures") (r "= 0.1.23") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 2)) (d (n "log") (r "= 0.4.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "= 0.5.1") (d #t) (k 2)) (d (n "rand") (r "= 0.4.2") (d #t) (k 2)) (d (n "reqwest") (r "= 0.8.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_urlencoded") (r "= 0.5.2") (d #t) (k 0)) (d (n "thread_local") (r "= 0.3.5") (d #t) (k 2)) (d (n "tokio-core") (r "= 0.1.17") (d #t) (k 0)))) (h "1yzha8y8n4ginkjayfbygqrncgk4ymlwkmv5wb2d5vsibzal3l9j")))

(define-public crate-exonum-testkit-0.10.0 (c (n "exonum-testkit") (v "0.10.0") (d (list (d (n "actix-web") (r "= 0.7.16") (d #t) (k 0)) (d (n "assert_matches") (r "^1.2.0") (d #t) (k 2)) (d (n "exonum") (r "^0.10.0") (d #t) (k 0)) (d (n "exonum-build") (r "^0.10.0") (d #t) (k 1)) (d (n "exonum-derive") (r "^0.10.0") (d #t) (k 2)) (d (n "failure") (r "= 0.1.3") (d #t) (k 0)) (d (n "futures") (r "= 0.1.25") (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 2)) (d (n "log") (r "= 0.4.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "= 0.5.1") (d #t) (k 2)) (d (n "protobuf") (r "^2.2.0") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "rand") (r "= 0.6.1") (d #t) (k 2)) (d (n "reqwest") (r "= 0.9.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_urlencoded") (r "= 0.5.4") (d #t) (k 0)) (d (n "thread_local") (r "= 0.3.6") (d #t) (k 2)) (d (n "tokio-core") (r "= 0.1.17") (d #t) (k 0)))) (h "1z1267ccxj2ijydnsdikqzsairxpmnhgsl2iik4dca5ia2hi5z2k")))

(define-public crate-exonum-testkit-0.10.1 (c (n "exonum-testkit") (v "0.10.1") (d (list (d (n "actix-web") (r "= 0.7.17") (d #t) (k 0)) (d (n "assert_matches") (r "^1.2.0") (d #t) (k 2)) (d (n "exonum") (r "^0.10.1") (d #t) (k 0)) (d (n "exonum-build") (r "^0.10.0") (d #t) (k 1)) (d (n "exonum-derive") (r "^0.10.0") (d #t) (k 2)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "futures") (r "= 0.1.25") (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 2)) (d (n "log") (r "= 0.4.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "= 0.5.1") (d #t) (k 2)) (d (n "protobuf") (r "^2.2.0") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "rand") (r "= 0.6.3") (d #t) (k 2)) (d (n "reqwest") (r "= 0.9.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_urlencoded") (r "= 0.5.4") (d #t) (k 0)) (d (n "thread_local") (r "= 0.3.6") (d #t) (k 2)) (d (n "tokio-core") (r "= 0.1.17") (d #t) (k 0)))) (h "0rlkr6yjl5d0s6216j4dx9vbx33pqr976w3k270x19anqk5r7a6g")))

(define-public crate-exonum-testkit-0.9.3 (c (n "exonum-testkit") (v "0.9.3") (d (list (d (n "actix-web") (r "= 0.6.15") (k 0)) (d (n "assert_matches") (r "^1.2.0") (d #t) (k 2)) (d (n "exonum") (r "^0.9.5") (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "futures") (r "= 0.1.23") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 2)) (d (n "log") (r "= 0.4.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "= 0.5.1") (d #t) (k 2)) (d (n "rand") (r "= 0.4.2") (d #t) (k 2)) (d (n "reqwest") (r "= 0.8.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_urlencoded") (r "= 0.5.2") (d #t) (k 0)) (d (n "thread_local") (r "= 0.3.5") (d #t) (k 2)) (d (n "tokio-core") (r "= 0.1.17") (d #t) (k 0)))) (h "1if70k0ff0sndncgkdpdisl90fg34jcisn8gai57jwq164ym7h09")))

(define-public crate-exonum-testkit-0.10.2 (c (n "exonum-testkit") (v "0.10.2") (d (list (d (n "actix-web") (r "^0.7.18") (k 0)) (d (n "assert_matches") (r "^1.2.0") (d #t) (k 2)) (d (n "exonum") (r "^0.10.3") (d #t) (k 0)) (d (n "exonum-build") (r "^0.10.0") (d #t) (k 1)) (d (n "exonum-derive") (r "^0.10.0") (d #t) (k 2)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "futures") (r "^0.1.25") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.1") (d #t) (k 2)) (d (n "protobuf") (r "^2.2.0") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.6.4") (d #t) (k 2)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5.4") (d #t) (k 0)) (d (n "thread_local") (r "^0.3.6") (d #t) (k 2)) (d (n "tokio-core") (r "^0.1.17") (d #t) (k 0)))) (h "0aq0apzjjya15853gi0v7zcl7gwx4hg7dxvf2gdv8j8vckiwshdi")))

(define-public crate-exonum-testkit-0.9.4 (c (n "exonum-testkit") (v "0.9.4") (d (list (d (n "actix-web") (r "^0.6.15") (k 0)) (d (n "assert_matches") (r "^1.2.0") (d #t) (k 2)) (d (n "exonum") (r "^0.9.7") (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "futures") (r "^0.1.23") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.1") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "reqwest") (r "^0.8.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5.2") (d #t) (k 0)) (d (n "thread_local") (r "^0.3.5") (d #t) (k 2)) (d (n "tokio-core") (r "^0.1.17") (d #t) (k 0)))) (h "1iw64rp1s76xzgn0j02ps30l7s7hcsr7qgc41dn8vwb0hx5dnyv6")))

(define-public crate-exonum-testkit-0.11.0 (c (n "exonum-testkit") (v "0.11.0") (d (list (d (n "actix-web") (r "^0.7.18") (k 0)) (d (n "assert_matches") (r "^1.2.0") (d #t) (k 2)) (d (n "exonum") (r "^0.11.0") (d #t) (k 0)) (d (n "exonum-build") (r "^0.11.0") (d #t) (k 1)) (d (n "exonum-derive") (r "^0.11.0") (d #t) (k 2)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "futures") (r "^0.1.25") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "protobuf") (r "^2.4.0") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.6.4") (d #t) (k 2)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.5.4") (d #t) (k 0)) (d (n "thread_local") (r "^0.3.6") (d #t) (k 2)) (d (n "tokio-core") (r "^0.1.17") (d #t) (k 0)))) (h "1g4ibb95pw95f0zrw9hv4kfndpzivaa2a7nn8x7blhw2zp3283xx")))

(define-public crate-exonum-testkit-0.12.0 (c (n "exonum-testkit") (v "0.12.0") (d (list (d (n "actix-web") (r "^0.7.18") (k 0)) (d (n "assert_matches") (r "^1.2.0") (d #t) (k 2)) (d (n "exonum") (r "^0.12.0") (d #t) (k 0)) (d (n "exonum-build") (r "^0.12.0") (d #t) (k 1)) (d (n "exonum-derive") (r "^0.12.0") (d #t) (k 2)) (d (n "exonum-merkledb") (r "^0.12.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "futures") (r "^0.1.25") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "protobuf") (r "^2.8.0") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.0") (d #t) (k 0)) (d (n "thread_local") (r "^0.3.6") (d #t) (k 2)) (d (n "tokio-core") (r "^0.1.17") (d #t) (k 0)))) (h "1mryjlxrrs5qslp9xhflbvnszad63njjamarvy15kjhivrv6g6x1")))

(define-public crate-exonum-testkit-0.13.0-rc.1 (c (n "exonum-testkit") (v "0.13.0-rc.1") (d (list (d (n "actix") (r "^0.7.9") (d #t) (k 0)) (d (n "actix-web") (r "^0.7.18") (k 0)) (d (n "assert_matches") (r "^1.2.0") (d #t) (k 2)) (d (n "exonum") (r "^0.13.0-rc.1") (d #t) (k 0)) (d (n "exonum-build") (r "^0.13.0-rc.1") (d #t) (k 1)) (d (n "exonum-crypto") (r "^0.13.0-rc.1") (d #t) (k 0)) (d (n "exonum-derive") (r "^0.13.0-rc.1") (d #t) (k 0)) (d (n "exonum-merkledb") (r "^0.13.0-rc.1") (d #t) (k 0)) (d (n "exonum-proto") (r "^0.13.0-rc.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "futures") (r "^0.1.25") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "protobuf") (r "^2.8.1") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.0.0") (d #t) (k 2)) (d (n "tokio-core") (r "^0.1.17") (d #t) (k 0)))) (h "06vclfzggyz4pv2fvkh04zfk6adrdbbw2gl020ibw0zaykcdijjr") (y #t)))

(define-public crate-exonum-testkit-0.13.0-rc.2 (c (n "exonum-testkit") (v "0.13.0-rc.2") (d (list (d (n "actix") (r "^0.7.9") (d #t) (k 0)) (d (n "actix-web") (r "^0.7.18") (k 0)) (d (n "assert_matches") (r "^1.2.0") (d #t) (k 2)) (d (n "exonum") (r "^0.13.0-rc.2") (d #t) (k 0)) (d (n "exonum-build") (r "^0.13.0-rc.2") (d #t) (k 1)) (d (n "exonum-crypto") (r "^0.13.0-rc.2") (d #t) (k 0)) (d (n "exonum-derive") (r "^0.13.0-rc.2") (d #t) (k 0)) (d (n "exonum-merkledb") (r "^0.13.0-rc.2") (d #t) (k 0)) (d (n "exonum-proto") (r "^0.13.0-rc.2") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "futures") (r "^0.1.25") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "protobuf") (r "^2.8.1") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.0.0") (d #t) (k 2)) (d (n "tokio-core") (r "^0.1.17") (d #t) (k 0)))) (h "06914k6dvysiq0vqnk1jpvqqh4ybk1lg2500p3cnc388l6n4sd2r")))

(define-public crate-exonum-testkit-1.0.0-rc.1 (c (n "exonum-testkit") (v "1.0.0-rc.1") (d (list (d (n "actix") (r "^0.7.9") (d #t) (k 0)) (d (n "actix-net") (r "^0.2.6") (d #t) (k 0)) (d (n "actix-web") (r "^0.7.18") (k 0)) (d (n "assert_matches") (r "^1.2.0") (d #t) (k 2)) (d (n "bincode") (r "^1.2.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "exonum") (r "^1.0.0-rc.1") (d #t) (k 0)) (d (n "exonum-api") (r "^1.0.0-rc.1") (d #t) (k 0)) (d (n "exonum-derive") (r "^1.0.0-rc.1") (d #t) (k 0)) (d (n "exonum-explorer") (r "^1.0.0-rc.1") (d #t) (k 0)) (d (n "exonum-merkledb") (r "^1.0.0-rc.1") (d #t) (k 0)) (d (n "exonum-node") (r "^1.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "exonum-rust-runtime") (r "^1.0.0-rc.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "futures") (r "^0.1.25") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.0") (d #t) (k 0)) (d (n "thread_local") (r "^1.0.0") (d #t) (k 2)) (d (n "tokio-core") (r "^0.1.17") (d #t) (k 0)))) (h "05b0d792v6ip6km65k9shb0qsx421cv42cfj4f2rinqq92viwbaf")))

(define-public crate-exonum-testkit-1.0.0-rc.2 (c (n "exonum-testkit") (v "1.0.0-rc.2") (d (list (d (n "actix") (r "^0.9.0") (k 0)) (d (n "actix-web") (r "^2.0.0") (k 0)) (d (n "assert_matches") (r "^1.2.0") (d #t) (k 2)) (d (n "bincode") (r "^1.2.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "exonum") (r "^1.0.0-rc.2") (d #t) (k 0)) (d (n "exonum-api") (r "^1.0.0-rc.2") (d #t) (k 0)) (d (n "exonum-derive") (r "^1.0.0-rc.2") (d #t) (k 0)) (d (n "exonum-explorer") (r "^1.0.0-rc.2") (d #t) (k 0)) (d (n "exonum-merkledb") (r "^1.0.0-rc.2") (d #t) (k 0)) (d (n "exonum-node") (r "^1.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "exonum-rust-runtime") (r "^1.0.0-rc.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "reqwest") (r "^0.10.2") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.13") (f (quote ("blocking" "dns" "io-util" "macros" "rt-threaded" "tcp" "time"))) (d #t) (k 0)))) (h "0h7kmxcyrplcwdl8kqv4lfqmgf9ihqnlf3mrnbfhd1c7iij566af")))

(define-public crate-exonum-testkit-1.0.0-rc.3 (c (n "exonum-testkit") (v "1.0.0-rc.3") (d (list (d (n "actix") (r "^0.9.0") (k 0)) (d (n "actix-web") (r "^2.0.0") (k 0)) (d (n "assert_matches") (r "^1.2.0") (d #t) (k 2)) (d (n "bincode") (r "^1.2.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "exonum") (r "^1.0.0-rc.3") (d #t) (k 0)) (d (n "exonum-api") (r "^1.0.0-rc.3") (d #t) (k 0)) (d (n "exonum-derive") (r "^1.0.0-rc.3") (d #t) (k 0)) (d (n "exonum-explorer") (r "^1.0.0-rc.3") (d #t) (k 0)) (d (n "exonum-merkledb") (r "^1.0.0-rc.3") (d #t) (k 0)) (d (n "exonum-node") (r "^1.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "exonum-proto") (r "^1.0.0-rc.3") (d #t) (k 0)) (d (n "exonum-rust-runtime") (r "^1.0.0-rc.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "protobuf") (r "^2.11.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "reqwest") (r "^0.10.2") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.13") (f (quote ("blocking" "dns" "io-util" "macros" "rt-threaded" "tcp" "time"))) (d #t) (k 0)))) (h "0y48l99h74574g5w5yham09jslmi0j62mvgsnyal9pk88y5qh18c")))

(define-public crate-exonum-testkit-1.0.0 (c (n "exonum-testkit") (v "1.0.0") (d (list (d (n "actix") (r "^0.9.0") (k 0)) (d (n "actix-web") (r "^2.0.0") (k 0)) (d (n "assert_matches") (r "^1.2.0") (d #t) (k 2)) (d (n "bincode") (r "^1.2.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "exonum") (r "^1.0.0") (d #t) (k 0)) (d (n "exonum-api") (r "^1.0.0") (d #t) (k 0)) (d (n "exonum-derive") (r "^1.0.0") (d #t) (k 0)) (d (n "exonum-explorer") (r "^1.0.0") (d #t) (k 0)) (d (n "exonum-merkledb") (r "^1.0.0") (d #t) (k 0)) (d (n "exonum-node") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "exonum-proto") (r "^1.0.0") (d #t) (k 0)) (d (n "exonum-rust-runtime") (r "^1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "protobuf") (r "^2.11.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "reqwest") (r "^0.10.2") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.13") (f (quote ("blocking" "dns" "io-util" "macros" "rt-threaded" "tcp" "time"))) (d #t) (k 0)))) (h "0kafc5sgqlkzx9in5vvhz2zb6a52p4jprkkdpk645aaw54s57izy")))

