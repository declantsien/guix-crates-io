(define-module (crates-io ex on exonum-merkledb) #:use-module (crates-io))

(define-public crate-exonum-merkledb-0.12.0 (c (n "exonum-merkledb") (v "0.12.0") (d (list (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "enum-primitive-derive") (r "^0.1") (d #t) (k 0)) (d (n "exonum-crypto") (r "^0.12.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "modifier") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "protobuf") (r "^2.8.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rocksdb") (r "^0.12.3") (k 0)) (d (n "rust_decimal") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 0)) (d (n "url") (r "^2.0.0") (d #t) (k 2)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 0)))) (h "0ymfbk16b5h1b00g37npdxmjly3zgzc9rwfcvg5cfvz2i8hxvszh") (f (quote (("rocksdb_zstd" "rocksdb/zstd") ("rocksdb_zlib" "rocksdb/zlib") ("rocksdb_snappy" "rocksdb/snappy") ("rocksdb_lz4" "rocksdb/lz4") ("rocksdb_bzip2" "rocksdb/bzip2") ("long_benchmarks") ("default" "rocksdb_snappy"))))))

(define-public crate-exonum-merkledb-0.13.0-rc.1 (c (n "exonum-merkledb") (v "0.13.0-rc.1") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "enum-primitive-derive") (r "^0.1") (d #t) (k 0)) (d (n "exonum-build") (r "^0.13.0-rc.1") (d #t) (k 1)) (d (n "exonum-crypto") (r "^0.13.0-rc.1") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "exonum-derive") (r "^0.13.0-rc.1") (d #t) (k 2)) (d (n "exonum-proto") (r "^0.13.0-rc.1") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "modifier") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "protobuf") (r "^2.8.1") (f (quote ("with-serde"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rocksdb") (r "^0.12.3") (k 0)) (d (n "rust_decimal") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 0)) (d (n "url") (r "^2.0.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0wdxm431mnvylac8yq3s4ynssvcgpwjdnjk6zdhw363v2j02kmri") (f (quote (("with-protobuf" "protobuf" "exonum-proto") ("rocksdb_zstd" "rocksdb/zstd") ("rocksdb_zlib" "rocksdb/zlib") ("rocksdb_snappy" "rocksdb/snappy") ("rocksdb_lz4" "rocksdb/lz4") ("rocksdb_bzip2" "rocksdb/bzip2") ("long_benchmarks") ("default" "rocksdb_snappy" "with-protobuf")))) (l "exonum_protobuf_merkledb")))

(define-public crate-exonum-merkledb-0.13.0-rc.2 (c (n "exonum-merkledb") (v "0.13.0-rc.2") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "enum-primitive-derive") (r "^0.1") (d #t) (k 0)) (d (n "exonum-build") (r "^0.13.0-rc.2") (d #t) (k 1)) (d (n "exonum-crypto") (r "^0.13.0-rc.2") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "exonum-derive") (r "^0.13.0-rc.2") (d #t) (k 2)) (d (n "exonum-proto") (r "^0.13.0-rc.2") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "modifier") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "protobuf") (r "^2.8.1") (f (quote ("with-serde"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rocksdb") (r "^0.12.3") (k 0)) (d (n "rust_decimal") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 0)) (d (n "url") (r "^2.0.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1j44p9rqvdpq7yznj3m809rdk84pn66byv5zhpyk34pbggz3bvzc") (f (quote (("with-protobuf" "protobuf" "exonum-proto") ("rocksdb_zstd" "rocksdb/zstd") ("rocksdb_zlib" "rocksdb/zlib") ("rocksdb_snappy" "rocksdb/snappy") ("rocksdb_lz4" "rocksdb/lz4") ("rocksdb_bzip2" "rocksdb/bzip2") ("long_benchmarks") ("default" "rocksdb_snappy" "with-protobuf")))) (l "exonum_protobuf_merkledb")))

(define-public crate-exonum-merkledb-1.0.0-rc.1 (c (n "exonum-merkledb") (v "1.0.0-rc.1") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.1") (d #t) (k 0)) (d (n "exonum-build") (r "^1.0.0-rc.1") (d #t) (k 1)) (d (n "exonum-crypto") (r "^1.0.0-rc.1") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "exonum-derive") (r "^1.0.0-rc.1") (d #t) (k 2)) (d (n "exonum-proto") (r "^1.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "modifier") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "protobuf") (r "^2.8.1") (f (quote ("with-serde"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rocksdb") (r "^0.13") (k 0)) (d (n "rust_decimal") (r "^1.0, < 1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 0)) (d (n "url") (r "^2.0.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1sbiigagyjpkyhiawk65q444q4nzxpdpsnmcvrmnnycchf2zw6y8") (f (quote (("yolo") ("with-serde") ("with-protobuf" "with-serde" "protobuf" "exonum-proto") ("rocksdb_zstd" "rocksdb/zstd") ("rocksdb_zlib" "rocksdb/zlib") ("rocksdb_snappy" "rocksdb/snappy") ("rocksdb_lz4" "rocksdb/lz4") ("rocksdb_bzip2" "rocksdb/bzip2") ("long_benchmarks") ("default" "rocksdb_snappy" "with-protobuf")))) (l "exonum_protobuf_merkledb")))

(define-public crate-exonum-merkledb-1.0.0-rc.2 (c (n "exonum-merkledb") (v "1.0.0-rc.2") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.1") (d #t) (k 0)) (d (n "exonum-build") (r "^1.0.0-rc.2") (d #t) (k 1)) (d (n "exonum-crypto") (r "^1.0.0-rc.2") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "exonum-derive") (r "^1.0.0-rc.2") (d #t) (k 2)) (d (n "exonum-proto") (r "^1.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 2)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "modifier") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "protobuf") (r "^2.8.1") (f (quote ("with-serde"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rocksdb") (r "^0.13") (k 0)) (d (n "rust_decimal") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.0.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1z5ps73jrwihaaxdh6g1805imdjvnq67iszqi5dwc4wffwhzwhch") (f (quote (("yolo") ("with-serde") ("with-protobuf" "with-serde" "protobuf" "exonum-proto") ("rocksdb_zstd" "rocksdb/zstd") ("rocksdb_zlib" "rocksdb/zlib") ("rocksdb_snappy" "rocksdb/snappy") ("rocksdb_lz4" "rocksdb/lz4") ("rocksdb_bzip2" "rocksdb/bzip2") ("long_benchmarks") ("default" "rocksdb_snappy" "with-protobuf")))) (l "exonum_protobuf_merkledb")))

(define-public crate-exonum-merkledb-1.0.0-rc.3 (c (n "exonum-merkledb") (v "1.0.0-rc.3") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "ctor") (r "^0.1.13") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.1") (d #t) (k 0)) (d (n "exonum-build") (r "^1.0.0-rc.3") (d #t) (k 1)) (d (n "exonum-crypto") (r "^1.0.0-rc.3") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "exonum-derive") (r "^1.0.0-rc.3") (d #t) (k 2)) (d (n "exonum-proto") (r "^1.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 2)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "modifier") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "protobuf") (r "^2.8.1") (f (quote ("with-serde"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rocksdb") (r "^0.13") (k 0)) (d (n "rust_decimal") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.0.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "10z54q6h2q9dk4kr3dqf6g02kqjkgsjsm0ga7pyydkqgd80fkxbp") (f (quote (("yolo") ("with-serde") ("with-protobuf" "with-serde" "protobuf" "exonum-proto") ("rocksdb_zstd" "rocksdb/zstd") ("rocksdb_zlib" "rocksdb/zlib") ("rocksdb_snappy" "rocksdb/snappy") ("rocksdb_lz4" "rocksdb/lz4") ("rocksdb_bzip2" "rocksdb/bzip2") ("long_benchmarks") ("default" "rocksdb_snappy" "with-protobuf")))) (l "exonum_protobuf_merkledb")))

(define-public crate-exonum-merkledb-1.0.0 (c (n "exonum-merkledb") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 0)) (d (n "ctor") (r "^0.1.13") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.1") (d #t) (k 0)) (d (n "exonum-build") (r "^1.0.0") (d #t) (k 1)) (d (n "exonum-crypto") (r "^1.0.0") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "exonum-derive") (r "^1.0.0") (d #t) (k 2)) (d (n "exonum-proto") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 2)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "modifier") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "protobuf") (r "^2.8.1") (f (quote ("with-serde"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.2.0") (d #t) (k 2)) (d (n "rocksdb") (r "^0.13") (k 0)) (d (n "rust_decimal") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.0.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0p0p01aii0i1czghpzdy5zggh5y4vcmq5icgg76930qk1ply7l23") (f (quote (("yolo") ("with-serde") ("with-protobuf" "with-serde" "protobuf" "exonum-proto") ("rocksdb_zstd" "rocksdb/zstd") ("rocksdb_zlib" "rocksdb/zlib") ("rocksdb_snappy" "rocksdb/snappy") ("rocksdb_lz4" "rocksdb/lz4") ("rocksdb_bzip2" "rocksdb/bzip2") ("long_benchmarks") ("default" "rocksdb_snappy" "with-protobuf")))) (l "exonum_protobuf_merkledb")))

