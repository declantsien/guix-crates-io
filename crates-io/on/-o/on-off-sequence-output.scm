(define-module (crates-io on -o on-off-sequence-output) #:use-module (crates-io))

(define-public crate-on-off-sequence-output-0.1.0 (c (n "on-off-sequence-output") (v "0.1.0") (d (list (d (n "cortex-m") (r "^0.6.0") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.7") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (f (quote ("derive"))) (k 2)) (d (n "panic-semihosting") (r "^0.5.1") (d #t) (k 2)) (d (n "stm32f4xx-hal") (r "^0.7.0") (f (quote ("rt" "stm32f401"))) (k 2)))) (h "0znc4rj6n8132kvbnjhpwivlbxbsly8rlf8wchmdb5izpbxyiifl")))

(define-public crate-on-off-sequence-output-0.1.1 (c (n "on-off-sequence-output") (v "0.1.1") (d (list (d (n "cortex-m") (r "^0.6.0") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.7") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (f (quote ("derive"))) (k 2)) (d (n "panic-semihosting") (r "^0.5.1") (d #t) (k 2)) (d (n "stm32f4xx-hal") (r "^0.7.0") (f (quote ("rt" "stm32f401"))) (k 2)))) (h "1i6v7ga5x8a8qmnw5iqggi0gnkdbijik4frnidmhmpmq9i69cfpn")))

(define-public crate-on-off-sequence-output-0.2.0 (c (n "on-off-sequence-output") (v "0.2.0") (d (list (d (n "cortex-m") (r "^0.6.0") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.7") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (f (quote ("derive"))) (k 2)) (d (n "panic-semihosting") (r "^0.5.1") (d #t) (k 2)) (d (n "stm32f4xx-hal") (r "^0.7.0") (f (quote ("rt" "stm32f401"))) (k 2)))) (h "0nm1dna8mpza8yr0jd99nx4fgc4pz898slabkz2mjkw8k13sj9i6")))

