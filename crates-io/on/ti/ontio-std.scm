(define-module (crates-io on ti ontio-std) #:use-module (crates-io))

(define-public crate-ontio-std-0.1.0 (c (n "ontio-std") (v "0.1.0") (d (list (d (n "byteorder") (r "^1") (f (quote ("i128"))) (k 0)) (d (n "cfg-if") (r "^0.1") (k 0)) (d (n "fixed-hash") (r "^0.4") (k 0)) (d (n "ontio-bump-alloc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ontio-codegen") (r "^0.1") (d #t) (k 0)) (d (n "ontio-derive-codec") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4") (d #t) (k 0)))) (h "12jdryjz78i56h2cxkmk1sy5j1qmlgsxh9rx5j14fa2h5a487amg") (f (quote (("std") ("mock" "std" "fixed-hash/default" "sha2") ("bump-alloc" "ontio-bump-alloc"))))))

(define-public crate-ontio-std-0.2.0 (c (n "ontio-std") (v "0.2.0") (d (list (d (n "byteorder") (r "^1") (f (quote ("i128"))) (k 0)) (d (n "cfg-if") (r "^0.1") (k 0)) (d (n "fixed-hash") (r "^0.4") (k 0)) (d (n "ontio-bump-alloc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ontio-codegen") (r "^0.2") (d #t) (k 0)) (d (n "ontio-derive-codec") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4") (d #t) (k 0)))) (h "1hi0di34pwnwj66fhlbknjy90cm892yamdngcs43cfq4swfw7bsa") (f (quote (("std") ("mock" "std" "fixed-hash/default" "sha2") ("bump-alloc" "ontio-bump-alloc"))))))

(define-public crate-ontio-std-0.3.0 (c (n "ontio-std") (v "0.3.0") (d (list (d (n "byteorder") (r "^1") (f (quote ("i128"))) (k 0)) (d (n "cfg-if") (r "^0.1") (k 0)) (d (n "fixed-hash") (r "^0.4") (k 0)) (d (n "ontio-bump-alloc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ontio-codegen") (r "^0.2.1") (d #t) (k 0)) (d (n "ontio-derive-codec") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4") (d #t) (k 0)))) (h "0jiz9127khrrhvid0zblirj8zi9cybj0cp1sphidmfyp2hs3slac") (f (quote (("std") ("mock" "std" "fixed-hash/default" "sha2") ("bump-alloc" "ontio-bump-alloc"))))))

(define-public crate-ontio-std-0.4.0 (c (n "ontio-std") (v "0.4.0") (d (list (d (n "byteorder") (r "^1") (f (quote ("i128"))) (k 0)) (d (n "cfg-if") (r "^0.1") (k 0)) (d (n "fixed-hash") (r "^0.4") (k 0)) (d (n "ontio-bump-alloc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ontio-codegen") (r "^0.2.1") (d #t) (k 0)) (d (n "ontio-derive-codec") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4") (d #t) (k 0)))) (h "1jw7xr6y5wjjrp3r4j770wh5gc6kwlwksn69mig4llxg3v51zqdz") (f (quote (("std") ("mock" "std" "fixed-hash/default" "sha2") ("bump-alloc" "ontio-bump-alloc"))))))

(define-public crate-ontio-std-0.5.0 (c (n "ontio-std") (v "0.5.0") (d (list (d (n "byteorder") (r "^1") (f (quote ("i128"))) (k 0)) (d (n "cfg-if") (r "^0.1") (k 0)) (d (n "fixed-hash") (r "^0.4") (k 0)) (d (n "ontio-bump-alloc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ontio-codegen") (r "^0.2.1") (d #t) (k 0)) (d (n "ontio-derive-codec") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (k 0)) (d (n "wee_alloc") (r "^0.4") (d #t) (k 0)))) (h "0kayfz5q4hj7r87g6hjsdfji7s2dkzfa0x2p7ig6k5lqz1qbs95k") (f (quote (("std") ("mock" "std" "fixed-hash/default" "sha2") ("bump-alloc" "ontio-bump-alloc"))))))

