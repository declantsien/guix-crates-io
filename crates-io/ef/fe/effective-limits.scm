(define-module (crates-io ef fe effective-limits) #:use-module (crates-io))

(define-public crate-effective-limits-0.1.0 (c (n "effective-limits") (v "0.1.0") (d (list (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (t "cfg(unix)") (k 0)) (d (n "sys-info") (r "= 0.5.8") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("combaseapi" "errhandlingapi" "fileapi" "handleapi" "impl-default" "ioapiset" "jobapi" "jobapi2" "minwindef" "processthreadsapi" "psapi" "shlobj" "shtypes" "synchapi" "sysinfoapi" "tlhelp32" "userenv" "winbase" "winerror" "winioctl" "winnt" "winuser"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0j6b6pnwcnfayppdjfb5ayhglmlp0jww8dj4vcbj06bpjy4r2gw1")))

(define-public crate-effective-limits-0.2.0 (c (n "effective-limits") (v "0.2.0") (d (list (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (t "cfg(unix)") (k 0)) (d (n "sys-info") (r "= 0.5.8") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("combaseapi" "errhandlingapi" "fileapi" "handleapi" "impl-default" "ioapiset" "jobapi" "jobapi2" "minwindef" "processthreadsapi" "psapi" "shlobj" "shtypes" "synchapi" "sysinfoapi" "tlhelp32" "userenv" "winbase" "winerror" "winioctl" "winnt" "winuser"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0bh439faaq78mslri8ha11xjl66rfgxya16yqj562a8rk6w7c0xd")))

(define-public crate-effective-limits-0.3.0 (c (n "effective-limits") (v "0.3.0") (d (list (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (t "cfg(unix)") (k 0)) (d (n "sys-info") (r "= 0.5.8") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("combaseapi" "errhandlingapi" "fileapi" "handleapi" "impl-default" "ioapiset" "jobapi" "jobapi2" "minwindef" "processthreadsapi" "psapi" "shlobj" "shtypes" "synchapi" "sysinfoapi" "tlhelp32" "userenv" "winbase" "winerror" "winioctl" "winnt" "winuser"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1mrwy1lmqh5kna2rjbbsg7p85aq94v124dy1m4cpdaadwzsq77qa")))

(define-public crate-effective-limits-0.4.0 (c (n "effective-limits") (v "0.4.0") (d (list (d (n "libc") (r "^0.2.66") (d #t) (t "cfg(unix)") (k 0)) (d (n "sys-info") (r "= 0.5.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("combaseapi" "errhandlingapi" "fileapi" "handleapi" "impl-default" "ioapiset" "jobapi" "jobapi2" "minwindef" "processthreadsapi" "psapi" "shlobj" "shtypes" "synchapi" "sysinfoapi" "tlhelp32" "userenv" "winbase" "winerror" "winioctl" "winnt" "winuser"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1cd9xxhf11rr4vg19bvyxavplg61in8h3frin7mzkr6qnxlzys31")))

(define-public crate-effective-limits-0.5.0 (c (n "effective-limits") (v "0.5.0") (d (list (d (n "libc") (r "^0.2.70") (d #t) (t "cfg(unix)") (k 0)) (d (n "sys-info") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("combaseapi" "errhandlingapi" "fileapi" "handleapi" "impl-default" "ioapiset" "jobapi" "jobapi2" "minwindef" "processthreadsapi" "psapi" "shlobj" "shtypes" "synchapi" "sysinfoapi" "tlhelp32" "userenv" "winbase" "winerror" "winioctl" "winnt" "winuser"))) (d #t) (t "cfg(windows)") (k 0)))) (h "07m43lbb84zigydmmw8nm7s75sk3yf4bhys8c32hfnl9r0r829bz")))

(define-public crate-effective-limits-0.5.1 (c (n "effective-limits") (v "0.5.1") (d (list (d (n "libc") (r "^0.2.70") (d #t) (t "cfg(unix)") (k 0)) (d (n "sys-info") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("combaseapi" "errhandlingapi" "fileapi" "handleapi" "impl-default" "ioapiset" "jobapi" "jobapi2" "minwindef" "processthreadsapi" "psapi" "shlobj" "shtypes" "synchapi" "sysinfoapi" "tlhelp32" "userenv" "winbase" "winerror" "winioctl" "winnt" "winuser"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1cjidipanqfj52g3vg7zbhk2hbjnns7dr0xsgij3qyhcr2hbnj2f")))

(define-public crate-effective-limits-0.5.2 (c (n "effective-limits") (v "0.5.2") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.2.78") (d #t) (t "cfg(unix)") (k 0)) (d (n "sys-info") (r "^0.6.1") (d #t) (t "cfg(any(windows, target_os = \"macos\", target_os = \"linux\"))") (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("combaseapi" "errhandlingapi" "fileapi" "handleapi" "impl-default" "ioapiset" "jobapi" "jobapi2" "minwindef" "processthreadsapi" "psapi" "shlobj" "shtypes" "synchapi" "sysinfoapi" "tlhelp32" "userenv" "winbase" "winerror" "winioctl" "winnt" "winuser"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0pw2v12ybxdwsfsclzms2i5a60wgmlb6xpk6hf8j0i5amsify4ai")))

(define-public crate-effective-limits-0.5.3 (c (n "effective-limits") (v "0.5.3") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.2.78") (d #t) (t "cfg(unix)") (k 0)) (d (n "sys-info") (r "^0.9.0") (d #t) (t "cfg(any(windows, target_os = \"macos\", target_os = \"linux\", target_os = \"freebsd\", target_os = \"illumos\", target_os = \"solaris\"))") (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("combaseapi" "errhandlingapi" "fileapi" "handleapi" "impl-default" "ioapiset" "jobapi" "jobapi2" "minwindef" "processthreadsapi" "psapi" "shlobj" "shtypes" "synchapi" "sysinfoapi" "tlhelp32" "userenv" "winbase" "winerror" "winioctl" "winnt" "winuser"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0fy5swvwlg84zcfhpnyk2ml537274zlw8kysbh7gr7n4rl79qkji")))

(define-public crate-effective-limits-0.5.4 (c (n "effective-limits") (v "0.5.4") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.2.78") (d #t) (t "cfg(unix)") (k 0)) (d (n "sys-info") (r "^0.9.0") (d #t) (t "cfg(any(windows, target_os = \"macos\", target_os = \"linux\", target_os = \"freebsd\", target_os = \"illumos\", target_os = \"solaris\"))") (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("combaseapi" "errhandlingapi" "fileapi" "handleapi" "impl-default" "ioapiset" "jobapi" "jobapi2" "minwindef" "processthreadsapi" "psapi" "shlobj" "shtypes" "synchapi" "sysinfoapi" "tlhelp32" "userenv" "winbase" "winerror" "winioctl" "winnt" "winuser"))) (d #t) (t "cfg(windows)") (k 0)))) (h "06m7nc1h6c1ycdfrxb371fs9gyrfxx4hgzqzcx371sqx35pnnnfr")))

(define-public crate-effective-limits-0.5.5 (c (n "effective-limits") (v "0.5.5") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.2.78") (d #t) (t "cfg(unix)") (k 0)) (d (n "sys-info") (r "^0.9.0") (d #t) (t "cfg(any(windows, target_os = \"macos\", target_os = \"linux\", target_os = \"freebsd\", target_os = \"illumos\", target_os = \"solaris\", target_os = \"netbsd\"))") (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("combaseapi" "errhandlingapi" "fileapi" "handleapi" "impl-default" "ioapiset" "jobapi" "jobapi2" "minwindef" "processthreadsapi" "psapi" "shlobj" "shtypes" "synchapi" "sysinfoapi" "tlhelp32" "userenv" "winbase" "winerror" "winioctl" "winnt" "winuser"))) (d #t) (t "cfg(windows)") (k 0)))) (h "01wswblavql8gyc9dkibcfab56wjc4mmng53kg4jnjs6lw0my69p")))

