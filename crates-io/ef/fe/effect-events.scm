(define-module (crates-io ef fe effect-events) #:use-module (crates-io))

(define-public crate-effect-events-0.2.2-alpha (c (n "effect-events") (v "0.2.2-alpha") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "ash") (r "^0.37") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14") (f (quote ("derive"))) (d #t) (k 0)) (d (n "glam") (r "^0.25") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.6.0") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.17") (d #t) (k 0)) (d (n "wgpu") (r "^0.19") (d #t) (k 0)) (d (n "winit") (r "^0.29") (f (quote ("rwh_05"))) (d #t) (k 0)))) (h "1cfmarajp5lwbkk62psygld4j8hg75x2wnlch7hqi8d5p7651a23")))

(define-public crate-effect-events-0.2.6-alpha (c (n "effect-events") (v "0.2.6-alpha") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "ash") (r "^0.37") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14") (f (quote ("derive"))) (d #t) (k 0)) (d (n "glam") (r "^0.25") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.6.0") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "rodio") (r "^0.17") (d #t) (k 0)) (d (n "wgpu") (r "^0.19") (d #t) (k 0)) (d (n "winit") (r "^0.29") (f (quote ("rwh_05"))) (d #t) (k 0)))) (h "0gpwwwxd245792dlih61bv8ji9izx1ygc3qfbgmfmj28pp8yigl8")))

