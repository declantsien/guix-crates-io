(define-module (crates-io ef ra eframe) #:use-module (crates-io))

(define-public crate-eframe-0.7.0 (c (n "eframe") (v "0.7.0") (d (list (d (n "egui") (r "^0.7.0") (d #t) (k 0)) (d (n "egui_glium") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_web") (r "^0.7.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "epi") (r "^0.7.0") (d #t) (k 0)))) (h "1vr1y60s7r24v856bvfgq4kmznms8pri1li901w91c7zywj5pm79") (f (quote (("time" "egui_glium/time") ("persistence" "epi/persistence" "egui_glium/persistence" "egui_web/persistence") ("http" "egui_glium/http" "egui_web/http") ("default"))))))

(define-public crate-eframe-0.8.0 (c (n "eframe") (v "0.8.0") (d (list (d (n "egui") (r "^0.8.0") (d #t) (k 0)) (d (n "egui_glium") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_web") (r "^0.8.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "epi") (r "^0.8.0") (d #t) (k 0)))) (h "1nc1vcv96ry0b89b7cxv1dcnrr8s8fa23vhfd80ibk1zm2891rrz") (f (quote (("time" "egui_glium/time") ("persistence" "epi/persistence" "egui_glium/persistence" "egui_web/persistence") ("http" "egui_glium/http" "egui_web/http") ("default"))))))

(define-public crate-eframe-0.9.0 (c (n "eframe") (v "0.9.0") (d (list (d (n "egui") (r "^0.9.0") (d #t) (k 0)) (d (n "egui_glium") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_web") (r "^0.9.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "epi") (r "^0.9.0") (d #t) (k 0)))) (h "1x53k7zn6mb8s641rcg2sw2kdpnryk462zd88245syyc7bf2xpnc") (f (quote (("time" "egui_glium/time") ("persistence" "epi/persistence" "egui_glium/persistence" "egui_web/persistence") ("http" "egui_glium/http" "egui_web/http") ("default"))))))

(define-public crate-eframe-0.10.0 (c (n "eframe") (v "0.10.0") (d (list (d (n "egui") (r "^0.10.0") (d #t) (k 0)) (d (n "egui_glium") (r "^0.10.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_web") (r "^0.10.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "epi") (r "^0.10.0") (d #t) (k 0)))) (h "038w8fxx6d552dci03rp8g6jg985993wj9p0vnc90lcds93485z8") (f (quote (("time" "egui_glium/time") ("persistence" "epi/persistence" "egui_glium/persistence" "egui_web/persistence") ("http" "egui_glium/http" "egui_web/http") ("default"))))))

(define-public crate-eframe-0.11.0 (c (n "eframe") (v "0.11.0") (d (list (d (n "egui") (r "^0.11.0") (d #t) (k 0)) (d (n "egui_glium") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_web") (r "^0.11.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "epi") (r "^0.11.0") (d #t) (k 0)))) (h "0mm9wj1vs4l4r6jrs27plymiakb1f6ml3xh5hlfkl23apxr1khlw") (f (quote (("time" "egui_glium/time") ("screen_reader" "egui_glium/screen_reader" "egui_web/screen_reader") ("persistence" "epi/persistence" "egui_glium/persistence" "egui_web/persistence") ("http" "egui_glium/http" "egui_web/http") ("default"))))))

(define-public crate-eframe-0.12.0 (c (n "eframe") (v "0.12.0") (d (list (d (n "egui") (r "^0.12.0") (k 0)) (d (n "egui_glium") (r "^0.12.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_web") (r "^0.12.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "epi") (r "^0.12.0") (d #t) (k 0)))) (h "0jf1zccv6r04m42rk1bmwbnmsh9pckpkr3ij8j12dwqk3yvnbmx7") (f (quote (("time" "egui_glium/time") ("screen_reader" "egui_glium/screen_reader" "egui_web/screen_reader") ("persistence" "epi/persistence" "egui_glium/persistence" "egui_web/persistence") ("http" "egui_glium/http" "egui_web/http") ("default_fonts" "egui/default_fonts") ("default" "default_fonts"))))))

(define-public crate-eframe-0.13.0 (c (n "eframe") (v "0.13.0") (d (list (d (n "egui") (r "^0.13.0") (k 0)) (d (n "egui_glium") (r "^0.13.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_web") (r "^0.13.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "epi") (r "^0.13.0") (d #t) (k 0)))) (h "0qf1qphayb5br98nkrn9rsbj7jm63k7x2j3xlx7139kn31kq4isr") (f (quote (("time" "egui_glium/time") ("screen_reader" "egui_glium/screen_reader" "egui_web/screen_reader") ("persistence" "epi/persistence" "egui_glium/persistence" "egui_web/persistence") ("http" "egui_glium/http" "egui_web/http") ("default_fonts" "egui/default_fonts") ("default" "default_fonts"))))))

(define-public crate-eframe-0.13.1 (c (n "eframe") (v "0.13.1") (d (list (d (n "egui") (r "^0.13.0") (k 0)) (d (n "egui_glium") (r "^0.13.1") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_web") (r "^0.13.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "epi") (r "^0.13.0") (d #t) (k 0)))) (h "0yp9fhjly767jcgfcpif1f84vf7lxphslnlc0ysr401ngsr7qryk") (f (quote (("time" "egui_glium/time") ("screen_reader" "egui_glium/screen_reader" "egui_web/screen_reader") ("persistence" "epi/persistence" "egui_glium/persistence" "egui_web/persistence") ("http" "egui_glium/http" "egui_web/http") ("default_fonts" "egui/default_fonts") ("default" "default_fonts"))))))

(define-public crate-eframe-0.14.0 (c (n "eframe") (v "0.14.0") (d (list (d (n "egui") (r "^0.14.0") (k 0)) (d (n "egui_glium") (r "^0.14.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_web") (r "^0.14.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "epi") (r "^0.14.0") (d #t) (k 0)))) (h "1rklcn47yikknc81c1mzlilsqylasng82hmyc5v778pi6vaypvjs") (f (quote (("time" "egui_glium/time") ("screen_reader" "egui_glium/screen_reader" "egui_web/screen_reader") ("persistence" "epi/persistence" "egui_glium/persistence" "egui_web/persistence") ("http" "egui_glium/http" "egui_web/http") ("default_fonts" "egui/default_fonts") ("default" "default_fonts"))))))

(define-public crate-eframe-0.15.0 (c (n "eframe") (v "0.15.0") (d (list (d (n "egui") (r "^0.15.0") (k 0)) (d (n "egui-winit") (r "^0.15.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glium") (r "^0.15.0") (f (quote ("clipboard" "epi" "links"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.15.0") (f (quote ("clipboard" "epi" "links"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_web") (r "^0.15.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "epi") (r "^0.15.0") (d #t) (k 0)) (d (n "image") (r "^0.23") (f (quote ("png"))) (k 2)) (d (n "rfd") (r "^0.5.0") (d #t) (k 2)))) (h "0907ksmla3szpcgzk17n2br0vv9d7and5qvfzgaj78hap684621s") (f (quote (("screen_reader" "egui-winit/screen_reader" "egui_web/screen_reader") ("persistence" "egui-winit/persistence" "egui/persistence" "epi/file_storage" "epi/persistence") ("default_fonts" "egui/default_fonts") ("default" "default_fonts" "egui_glium"))))))

(define-public crate-eframe-0.16.0 (c (n "eframe") (v "0.16.0") (d (list (d (n "egui") (r "^0.16.0") (k 0)) (d (n "egui-winit") (r "^0.16.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glium") (r "^0.16.0") (f (quote ("clipboard" "epi" "links"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.16.0") (f (quote ("clipboard" "epi" "links" "winit"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_web") (r "^0.16.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "epi") (r "^0.16.0") (d #t) (k 0)) (d (n "image") (r "^0.23") (f (quote ("png"))) (k 2)) (d (n "rfd") (r "^0.6") (d #t) (k 2)))) (h "06gvv2k0wiql8lyc3h0ahyjy6gr450zazkzcqasbl1f888nm1zd8") (f (quote (("screen_reader" "egui-winit/screen_reader" "egui_web/screen_reader") ("persistence" "egui-winit/persistence" "egui/persistence" "epi/file_storage" "epi/persistence") ("default_fonts" "egui/default_fonts") ("default" "default_fonts" "egui_glium")))) (r "1.56")))

(define-public crate-eframe-0.17.0 (c (n "eframe") (v "0.17.0") (d (list (d (n "egui") (r "^0.17.0") (k 0)) (d (n "egui-winit") (r "^0.17.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glium") (r "^0.17.0") (f (quote ("clipboard" "epi" "links"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.17.0") (f (quote ("clipboard" "epi" "links" "winit"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_web") (r "^0.17.0") (f (quote ("glow"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ehttp") (r "^0.2") (d #t) (k 2)) (d (n "epi") (r "^0.17.0") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("jpeg" "png"))) (k 2)) (d (n "poll-promise") (r "^0.1") (d #t) (k 2)) (d (n "rfd") (r "^0.8") (d #t) (k 2)))) (h "1wnn7i0snn71fm4nmfqsf9mplyb7clk0kdh8ijdq0xj0hj2hkzn9") (f (quote (("screen_reader" "egui-winit/screen_reader" "egui_web/screen_reader") ("persistence" "egui-winit/persistence" "egui/persistence" "epi/file_storage" "epi/persistence") ("default_fonts" "egui/default_fonts") ("default" "default_fonts" "egui_glow")))) (r "1.56")))

(define-public crate-eframe-0.18.0 (c (n "eframe") (v "0.18.0") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "dark-light") (r "^0.2.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories-next") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui") (r "^0.18.0") (f (quote ("bytemuck" "tracing"))) (k 0)) (d (n "egui-winit") (r "^0.18.0") (f (quote ("clipboard" "links"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.18.0") (k 0)) (d (n "glow") (r "^0.11") (d #t) (k 0)) (d (n "glutin") (r "^0.28.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "puffin") (r "^0.13") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ron") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tts") (r "^0.20") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.52") (f (quote ("BinaryType" "Blob" "Clipboard" "ClipboardEvent" "CompositionEvent" "console" "CssStyleDeclaration" "DataTransfer" "DataTransferItem" "DataTransferItemList" "Document" "DomRect" "DragEvent" "Element" "Event" "EventListener" "EventTarget" "ExtSRgb" "File" "FileList" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "HtmlInputElement" "InputEvent" "KeyboardEvent" "Location" "MediaQueryList" "MouseEvent" "Navigator" "Performance" "Storage" "Touch" "TouchEvent" "TouchList" "WebGl2RenderingContext" "WebglDebugRendererInfo" "WebGlRenderingContext" "WheelEvent" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.26.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1khxp1hq3qsghcmlcyvpc1xzd69mnbdjbrk2l4g2cdlc32l9gyjk") (f (quote (("screen_reader" "egui-winit/screen_reader" "tts") ("persistence" "directories-next" "egui-winit/serde" "egui/persistence" "ron" "serde") ("default_fonts" "egui/default_fonts") ("default" "default_fonts")))) (s 2) (e (quote (("puffin" "dep:puffin" "egui_glow/puffin") ("dark-light" "dep:dark-light")))) (r "1.60")))

(define-public crate-eframe-0.19.0 (c (n "eframe") (v "0.19.0") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "dark-light") (r "^0.2.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories-next") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "egui") (r "^0.19.0") (f (quote ("bytemuck" "tracing"))) (k 0)) (d (n "egui-wgpu") (r "^0.19.0") (f (quote ("winit"))) (o #t) (d #t) (k 0)) (d (n "egui-winit") (r "^0.19.0") (f (quote ("clipboard" "links"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.19.0") (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glow") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.29.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "puffin") (r "^0.13") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ron") (r "^0.8") (f (quote ("integer128"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "tts") (r "^0.20") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.52") (f (quote ("BinaryType" "Blob" "Clipboard" "ClipboardEvent" "CompositionEvent" "console" "CssStyleDeclaration" "DataTransfer" "DataTransferItem" "DataTransferItemList" "Document" "DomRect" "DragEvent" "Element" "Event" "EventListener" "EventTarget" "ExtSRgb" "File" "FileList" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "HtmlInputElement" "InputEvent" "KeyboardEvent" "Location" "MediaQueryList" "MouseEvent" "Navigator" "Performance" "Storage" "Touch" "TouchEvent" "TouchList" "WebGl2RenderingContext" "WebglDebugRendererInfo" "WebGlRenderingContext" "WheelEvent" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.27.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0bihhblmna8179pqnfyq23zvqyxzp0nx5467n0l6fap7qck99m5h") (f (quote (("screen_reader" "egui-winit/screen_reader" "tts") ("persistence" "directories-next" "egui-winit/serde" "egui/persistence" "ron" "serde") ("default_fonts" "egui/default_fonts") ("default" "default_fonts" "glow")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "egui-wgpu") ("puffin" "dep:puffin" "egui_glow?/puffin") ("glow" "dep:glow" "egui_glow") ("dark-light" "dep:dark-light")))) (r "1.61")))

(define-public crate-eframe-0.20.0 (c (n "eframe") (v "0.20.0") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "dark-light") (r "^0.2.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories-next") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "egui") (r "^0.20.0") (f (quote ("bytemuck" "tracing"))) (k 0)) (d (n "egui-wgpu") (r "^0.20.0") (f (quote ("winit"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui-wgpu") (r "^0.20.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.20.0") (f (quote ("clipboard" "links"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.20.0") (o #t) (k 0)) (d (n "glow") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.30.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "puffin") (r "^0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ron") (r "^0.8") (f (quote ("integer128"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "tts") (r "^0.24") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.58") (f (quote ("BinaryType" "Blob" "Clipboard" "ClipboardEvent" "CompositionEvent" "console" "CssStyleDeclaration" "DataTransfer" "DataTransferItem" "DataTransferItemList" "Document" "DomRect" "DragEvent" "Element" "Event" "EventListener" "EventTarget" "ExtSRgb" "File" "FileList" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "HtmlInputElement" "InputEvent" "KeyboardEvent" "Location" "MediaQueryList" "MouseEvent" "Navigator" "Performance" "Storage" "Touch" "TouchEvent" "TouchList" "WebGl2RenderingContext" "WebglDebugRendererInfo" "WebGlRenderingContext" "WheelEvent" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.14") (f (quote ("webgl"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.27.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1wd9k6hd94szlxghgbg2zd42r7gbn953ac3kj591bksyg25q4a41") (f (quote (("screen_reader" "egui-winit/screen_reader" "tts") ("persistence" "directories-next" "egui-winit/serde" "egui/persistence" "ron" "serde") ("default_fonts" "egui/default_fonts") ("default" "accesskit" "default_fonts" "glow") ("accesskit" "egui/accesskit" "egui-winit/accesskit")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "dep:egui-wgpu") ("puffin" "dep:puffin" "egui_glow?/puffin" "egui-wgpu?/puffin") ("glow" "dep:glow" "dep:egui_glow" "dep:glutin") ("dark-light" "dep:dark-light") ("__screenshot" "dep:image")))) (r "1.65")))

(define-public crate-eframe-0.20.1 (c (n "eframe") (v "0.20.1") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "dark-light") (r "^0.2.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories-next") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "egui") (r "^0.20.0") (f (quote ("bytemuck" "tracing"))) (k 0)) (d (n "egui-wgpu") (r "^0.20.0") (f (quote ("winit"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui-wgpu") (r "^0.20.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.20.0") (f (quote ("clipboard" "links"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.20.0") (o #t) (k 0)) (d (n "glow") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.30.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "puffin") (r "^0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ron") (r "^0.8") (f (quote ("integer128"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "tts") (r "^0.24") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.58") (f (quote ("BinaryType" "Blob" "Clipboard" "ClipboardEvent" "CompositionEvent" "console" "CssStyleDeclaration" "DataTransfer" "DataTransferItem" "DataTransferItemList" "Document" "DomRect" "DragEvent" "Element" "Event" "EventListener" "EventTarget" "ExtSRgb" "File" "FileList" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "HtmlInputElement" "InputEvent" "KeyboardEvent" "Location" "MediaQueryList" "MouseEvent" "Navigator" "Performance" "Storage" "Touch" "TouchEvent" "TouchList" "WebGl2RenderingContext" "WebglDebugRendererInfo" "WebGlRenderingContext" "WheelEvent" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.14") (f (quote ("webgl"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.27.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0ckvbd705fq5hg5c7zlw0dsik4nf0d8fbc4bf9rz7zhrb3n2kaay") (f (quote (("screen_reader" "egui-winit/screen_reader" "tts") ("persistence" "directories-next" "egui-winit/serde" "egui/persistence" "ron" "serde") ("default_fonts" "egui/default_fonts") ("default" "accesskit" "default_fonts" "glow") ("accesskit" "egui/accesskit" "egui-winit/accesskit")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "dep:egui-wgpu") ("puffin" "dep:puffin" "egui_glow?/puffin" "egui-wgpu?/puffin") ("glow" "dep:glow" "dep:egui_glow" "dep:glutin") ("dark-light" "dep:dark-light") ("__screenshot" "dep:image")))) (r "1.65")))

(define-public crate-eframe-0.21.0 (c (n "eframe") (v "0.21.0") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "dark-light") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories-next") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "egui") (r "^0.21.0") (f (quote ("bytemuck" "tracing"))) (k 0)) (d (n "egui-wgpu") (r "^0.21.0") (f (quote ("winit"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui-wgpu") (r "^0.21.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.21.0") (f (quote ("clipboard" "links"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.21.0") (o #t) (k 0)) (d (n "glow") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.30") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glutin-winit") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pollster") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "puffin") (r "^0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ron") (r "^0.8") (f (quote ("integer128"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "tts") (r "^0.25") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "=0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.58") (f (quote ("BinaryType" "Blob" "Clipboard" "ClipboardEvent" "CompositionEvent" "console" "CssStyleDeclaration" "DataTransfer" "DataTransferItem" "DataTransferItemList" "Document" "DomRect" "DragEvent" "Element" "Event" "EventListener" "EventTarget" "ExtSRgb" "File" "FileList" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "HtmlInputElement" "InputEvent" "KeyboardEvent" "Location" "MediaQueryList" "MouseEvent" "Navigator" "Performance" "Storage" "Touch" "TouchEvent" "TouchList" "WebGl2RenderingContext" "WebglDebugRendererInfo" "WebGlRenderingContext" "WheelEvent" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.15.0") (f (quote ("webgl"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "013plpskn5mkbvg77r2yh1si6q4mial6lvn7c79f2sdsspcmjznh") (f (quote (("web_screen_reader" "tts") ("persistence" "directories-next" "egui-winit/serde" "egui/persistence" "ron" "serde") ("default_fonts" "egui/default_fonts") ("default" "accesskit" "default_fonts" "glow") ("accesskit" "egui/accesskit" "egui-winit/accesskit")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "dep:egui-wgpu" "dep:pollster") ("puffin" "dep:puffin" "egui_glow?/puffin" "egui-wgpu?/puffin") ("glow" "dep:glow" "dep:egui_glow" "dep:glutin" "dep:glutin-winit") ("dark-light" "dep:dark-light") ("__screenshot" "dep:image")))) (r "1.65")))

(define-public crate-eframe-0.21.1 (c (n "eframe") (v "0.21.1") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "dark-light") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories-next") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "egui") (r "^0.21.0") (f (quote ("bytemuck" "tracing"))) (k 0)) (d (n "egui-wgpu") (r "^0.21.0") (f (quote ("winit"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui-wgpu") (r "^0.21.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.21.1") (f (quote ("clipboard" "links"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.21.0") (o #t) (k 0)) (d (n "glow") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.30") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glutin-winit") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pollster") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "puffin") (r "^0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ron") (r "^0.8") (f (quote ("integer128"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "tts") (r "^0.25") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "=0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.58") (f (quote ("BinaryType" "Blob" "Clipboard" "ClipboardEvent" "CompositionEvent" "console" "CssStyleDeclaration" "DataTransfer" "DataTransferItem" "DataTransferItemList" "Document" "DomRect" "DragEvent" "Element" "Event" "EventListener" "EventTarget" "ExtSRgb" "File" "FileList" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "HtmlInputElement" "InputEvent" "KeyboardEvent" "Location" "MediaQueryList" "MouseEvent" "Navigator" "Performance" "Storage" "Touch" "TouchEvent" "TouchList" "WebGl2RenderingContext" "WebglDebugRendererInfo" "WebGlRenderingContext" "WheelEvent" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.15.0") (f (quote ("webgl"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0qbq52symkyx1wxqs4k3a4qgp2ka9zd51ksm0yy2gl9z477dc2s3") (f (quote (("web_screen_reader" "tts") ("persistence" "directories-next" "egui-winit/serde" "egui/persistence" "ron" "serde") ("default_fonts" "egui/default_fonts") ("default" "accesskit" "default_fonts" "glow") ("accesskit" "egui/accesskit" "egui-winit/accesskit")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "dep:egui-wgpu" "dep:pollster") ("puffin" "dep:puffin" "egui_glow?/puffin" "egui-wgpu?/puffin") ("glow" "dep:glow" "dep:egui_glow" "dep:glutin" "dep:glutin-winit") ("dark-light" "dep:dark-light") ("__screenshot" "dep:image")))) (r "1.65")))

(define-public crate-eframe-0.21.2 (c (n "eframe") (v "0.21.2") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "dark-light") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories-next") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "egui") (r "^0.21.0") (f (quote ("bytemuck" "tracing"))) (k 0)) (d (n "egui-wgpu") (r "^0.21.0") (f (quote ("winit"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui-wgpu") (r "^0.21.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.21.1") (f (quote ("clipboard" "links"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.21.0") (o #t) (k 0)) (d (n "glow") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.30") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glutin-winit") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pollster") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "puffin") (r "^0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ron") (r "^0.8") (f (quote ("integer128"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "tts") (r "^0.25") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "=0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.58") (f (quote ("BinaryType" "Blob" "Clipboard" "ClipboardEvent" "CompositionEvent" "console" "CssStyleDeclaration" "DataTransfer" "DataTransferItem" "DataTransferItemList" "Document" "DomRect" "DragEvent" "Element" "Event" "EventListener" "EventTarget" "ExtSRgb" "File" "FileList" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "HtmlInputElement" "InputEvent" "KeyboardEvent" "Location" "MediaQueryList" "MouseEvent" "Navigator" "Performance" "Storage" "Touch" "TouchEvent" "TouchList" "WebGl2RenderingContext" "WebglDebugRendererInfo" "WebGlRenderingContext" "WheelEvent" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.15.0") (f (quote ("webgl"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1n4mhq9zwr59svpv361wfhpv66p9s9qrhh7hx25mzx92ikji0wkj") (f (quote (("web_screen_reader" "tts") ("persistence" "directories-next" "egui-winit/serde" "egui/persistence" "ron" "serde") ("default_fonts" "egui/default_fonts") ("default" "accesskit" "default_fonts" "glow") ("accesskit" "egui/accesskit" "egui-winit/accesskit")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "dep:egui-wgpu" "dep:pollster") ("puffin" "dep:puffin" "egui_glow?/puffin" "egui-wgpu?/puffin") ("glow" "dep:glow" "dep:egui_glow" "dep:glutin" "dep:glutin-winit") ("dark-light" "dep:dark-light") ("__screenshot" "dep:image")))) (r "1.65")))

(define-public crate-eframe-0.21.3 (c (n "eframe") (v "0.21.3") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "dark-light") (r "^1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories-next") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "egui") (r "^0.21.0") (f (quote ("bytemuck" "tracing"))) (k 0)) (d (n "egui-wgpu") (r "^0.21.0") (f (quote ("winit"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui-wgpu") (r "^0.21.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.21.1") (f (quote ("clipboard" "links"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.21.0") (o #t) (k 0)) (d (n "glow") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.30") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glutin-winit") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pollster") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "puffin") (r "^0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ron") (r "^0.8") (f (quote ("integer128"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "tts") (r "^0.25") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "=0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.58") (f (quote ("BinaryType" "Blob" "Clipboard" "ClipboardEvent" "CompositionEvent" "console" "CssStyleDeclaration" "DataTransfer" "DataTransferItem" "DataTransferItemList" "Document" "DomRect" "DragEvent" "Element" "Event" "EventListener" "EventTarget" "ExtSRgb" "File" "FileList" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "HtmlInputElement" "InputEvent" "KeyboardEvent" "Location" "MediaQueryList" "MouseEvent" "Navigator" "Performance" "Storage" "Touch" "TouchEvent" "TouchList" "WebGl2RenderingContext" "WebglDebugRendererInfo" "WebGlRenderingContext" "WheelEvent" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.15.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.15.0") (f (quote ("webgl"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1k77bv8rri92bh66pk08ad6m621r50d4sj5lpa1jspqyjdhcxwrx") (f (quote (("web_screen_reader" "tts") ("persistence" "directories-next" "egui-winit/serde" "egui/persistence" "ron" "serde") ("default_fonts" "egui/default_fonts") ("default" "accesskit" "default_fonts" "glow") ("accesskit" "egui/accesskit" "egui-winit/accesskit")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "dep:egui-wgpu" "dep:pollster") ("puffin" "dep:puffin" "egui_glow?/puffin" "egui-wgpu?/puffin") ("glow" "dep:glow" "dep:egui_glow" "dep:glutin" "dep:glutin-winit") ("dark-light" "dep:dark-light") ("__screenshot" "dep:image")))) (r "1.65")))

(define-public crate-eframe-0.22.0 (c (n "eframe") (v "0.22.0") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "cocoa") (r "^0.24.1") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "directories-next") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "egui") (r "^0.22.0") (f (quote ("bytemuck" "log"))) (k 0)) (d (n "egui-wgpu") (r "^0.22.0") (f (quote ("winit"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui-wgpu") (r "^0.22.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.22.0") (f (quote ("clipboard" "links"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.22.0") (o #t) (k 0)) (d (n "glow") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.30") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glutin-winit") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pollster") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "puffin") (r "^0.15") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5.2") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ron") (r "^0.8") (f (quote ("integer128"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tts") (r "^0.25") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.86") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.58") (f (quote ("BinaryType" "Blob" "Clipboard" "ClipboardEvent" "CompositionEvent" "console" "CssStyleDeclaration" "DataTransfer" "DataTransferItem" "DataTransferItemList" "Document" "DomRect" "DragEvent" "Element" "Event" "EventListener" "EventTarget" "ExtSRgb" "File" "FileList" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "HtmlInputElement" "InputEvent" "KeyboardEvent" "Location" "MediaQueryList" "MediaQueryListEvent" "MouseEvent" "Navigator" "Performance" "Storage" "Touch" "TouchEvent" "TouchList" "WebGl2RenderingContext" "WebglDebugRendererInfo" "WebGlRenderingContext" "WheelEvent" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.16.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.16.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "winit") (r "^0.28.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0bsvnr64843i27b6kjy7p6f4y349fj7p9apynrahqs1c79c9cidz") (f (quote (("web_screen_reader" "tts") ("wayland" "egui-winit/wayland") ("persistence" "directories-next" "egui-winit/serde" "egui/persistence" "ron" "serde") ("default_fonts" "egui/default_fonts") ("default" "accesskit" "default_fonts" "glow") ("android-native-activity" "egui-winit/android-native-activity") ("android-game-activity" "egui-winit/android-game-activity") ("accesskit" "egui/accesskit" "egui-winit/accesskit") ("__screenshot")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "dep:egui-wgpu" "dep:pollster" "dep:raw-window-handle") ("puffin" "dep:puffin" "egui_glow?/puffin" "egui-wgpu?/puffin") ("glow" "dep:glow" "dep:egui_glow" "dep:glutin" "dep:glutin-winit")))) (r "1.65")))

(define-public crate-eframe-0.23.0 (c (n "eframe") (v "0.23.0") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "cocoa") (r "^0.24.1") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "directories-next") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "egui") (r "^0.23.0") (f (quote ("bytemuck" "log"))) (k 0)) (d (n "egui-wgpu") (r "^0.23.0") (f (quote ("winit"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui-wgpu") (r "^0.23.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.23.0") (f (quote ("clipboard" "links"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.23.0") (o #t) (k 0)) (d (n "glow") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.30") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glutin-winit") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pollster") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "puffin") (r "^0.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5.2") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ron") (r "^0.8") (f (quote ("integer128"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tts") (r "^0.25") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.58") (f (quote ("BinaryType" "Blob" "Clipboard" "ClipboardEvent" "CompositionEvent" "console" "CssStyleDeclaration" "DataTransfer" "DataTransferItem" "DataTransferItemList" "Document" "DomRect" "DragEvent" "Element" "Event" "EventListener" "EventTarget" "ExtSRgb" "File" "FileList" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "HtmlInputElement" "InputEvent" "KeyboardEvent" "Location" "MediaQueryList" "MediaQueryListEvent" "MouseEvent" "Navigator" "Performance" "Storage" "Touch" "TouchEvent" "TouchList" "WebGl2RenderingContext" "WebglDebugRendererInfo" "WebGlRenderingContext" "WheelEvent" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.17.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.17.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "winit") (r "^0.28.1") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1xgk1bj0yn040cyjbq6apc8l1nnl0sjwjphsqlzmv468wvnyzn96") (f (quote (("x11" "egui-winit/x11") ("web_screen_reader" "tts") ("wayland" "egui-winit/wayland") ("persistence" "directories-next" "egui-winit/serde" "egui/persistence" "ron" "serde") ("default_fonts" "egui/default_fonts") ("default" "accesskit" "default_fonts" "glow" "wayland" "winit/default" "x11") ("android-native-activity" "egui-winit/android-native-activity") ("android-game-activity" "egui-winit/android-game-activity") ("accesskit" "egui/accesskit" "egui-winit/accesskit") ("__screenshot")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "dep:egui-wgpu" "dep:pollster" "dep:raw-window-handle") ("puffin" "dep:puffin" "egui/puffin" "egui_glow?/puffin" "egui-wgpu?/puffin") ("glow" "dep:glow" "dep:egui_glow" "dep:glutin" "dep:glutin-winit")))) (r "1.70")))

(define-public crate-eframe-0.24.0 (c (n "eframe") (v "0.24.0") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "cocoa") (r "^0.24.1") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "directories-next") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "egui") (r "^0.24.0") (f (quote ("bytemuck" "log"))) (k 0)) (d (n "egui-wgpu") (r "^0.24.0") (f (quote ("winit"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui-wgpu") (r "^0.24.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.24.0") (f (quote ("clipboard" "links"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.24.0") (o #t) (k 0)) (d (n "glow") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.30") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glutin-winit") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pollster") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "puffin") (r "^0.18") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ron") (r "^0.8") (f (quote ("integer128"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tts") (r "^0.25") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.58") (f (quote ("BinaryType" "Blob" "Clipboard" "ClipboardEvent" "CompositionEvent" "console" "CssStyleDeclaration" "DataTransfer" "DataTransferItem" "DataTransferItemList" "Document" "DomRect" "DragEvent" "Element" "Event" "EventListener" "EventTarget" "ExtSRgb" "File" "FileList" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "HtmlInputElement" "InputEvent" "KeyboardEvent" "Location" "MediaQueryList" "MediaQueryListEvent" "MouseEvent" "Navigator" "Performance" "Storage" "Touch" "TouchEvent" "TouchList" "WebGl2RenderingContext" "WebglDebugRendererInfo" "WebGlRenderingContext" "WheelEvent" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "winit") (r "^0.28.1") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0rcy53z5cs4pmkv39kizz9jprwqjj273r5401zhl2lg7510h8rp4") (f (quote (("x11" "egui-winit/x11") ("web_screen_reader" "tts") ("wayland" "egui-winit/wayland") ("persistence" "directories-next" "egui-winit/serde" "egui/persistence" "ron" "serde") ("default_fonts" "egui/default_fonts") ("default" "accesskit" "default_fonts" "glow" "wayland" "winit/default" "x11") ("android-native-activity" "egui-winit/android-native-activity") ("android-game-activity" "egui-winit/android-game-activity") ("accesskit" "egui/accesskit" "egui-winit/accesskit") ("__screenshot")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "dep:egui-wgpu" "dep:pollster" "dep:raw-window-handle") ("puffin" "dep:puffin" "egui/puffin" "egui_glow?/puffin" "egui-wgpu?/puffin" "egui-winit/puffin") ("glow" "dep:glow" "dep:egui_glow" "dep:glutin" "dep:glutin-winit")))) (r "1.72")))

(define-public crate-eframe-0.24.1 (c (n "eframe") (v "0.24.1") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "cocoa") (r "^0.24.1") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "directories-next") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "egui") (r "^0.24.1") (f (quote ("bytemuck" "log"))) (k 0)) (d (n "egui-wgpu") (r "^0.24.1") (f (quote ("winit"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui-wgpu") (r "^0.24.1") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.24.1") (f (quote ("clipboard" "links"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.24.1") (o #t) (k 0)) (d (n "glow") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.30") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glutin-winit") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pollster") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "puffin") (r "^0.18") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ron") (r "^0.8") (f (quote ("integer128"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.58") (f (quote ("BinaryType" "Blob" "Clipboard" "ClipboardEvent" "CompositionEvent" "console" "CssStyleDeclaration" "DataTransfer" "DataTransferItem" "DataTransferItemList" "Document" "DomRect" "DragEvent" "Element" "Event" "EventListener" "EventTarget" "ExtSRgb" "File" "FileList" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "HtmlInputElement" "InputEvent" "KeyboardEvent" "Location" "MediaQueryList" "MediaQueryListEvent" "MouseEvent" "Navigator" "Performance" "Storage" "Touch" "TouchEvent" "TouchList" "WebGl2RenderingContext" "WebglDebugRendererInfo" "WebGlRenderingContext" "WheelEvent" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "winit") (r "^0.28.1") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1ynw7nq1gj91ynaysy4ib3ybzx1xjzm8hwadzdz5mhr8m0c3kmyd") (f (quote (("x11" "egui-winit/x11") ("web_screen_reader" "web-sys/SpeechSynthesis" "web-sys/SpeechSynthesisUtterance") ("wayland" "egui-winit/wayland") ("persistence" "directories-next" "egui-winit/serde" "egui/persistence" "ron" "serde") ("default_fonts" "egui/default_fonts") ("default" "accesskit" "default_fonts" "glow" "wayland" "web_screen_reader" "winit/default" "x11") ("android-native-activity" "egui-winit/android-native-activity") ("android-game-activity" "egui-winit/android-game-activity") ("accesskit" "egui/accesskit" "egui-winit/accesskit") ("__screenshot")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "dep:egui-wgpu" "dep:pollster" "dep:raw-window-handle") ("puffin" "dep:puffin" "egui/puffin" "egui_glow?/puffin" "egui-wgpu?/puffin" "egui-winit/puffin") ("glow" "dep:glow" "dep:egui_glow" "dep:glutin" "dep:glutin-winit")))) (r "1.72")))

(define-public crate-eframe-0.25.0 (c (n "eframe") (v "0.25.0") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "directories-next") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "egui") (r "^0.25.0") (f (quote ("bytemuck" "log"))) (k 0)) (d (n "egui-wgpu") (r "^0.25.0") (f (quote ("winit"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui-wgpu") (r "^0.25.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.25.0") (f (quote ("clipboard" "links"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.25.0") (o #t) (k 0)) (d (n "glow") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.31") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glutin-winit") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pollster") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "puffin") (r "^0.18") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ron") (r "^0.8") (f (quote ("integer128"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.58") (f (quote ("BinaryType" "Blob" "Clipboard" "ClipboardEvent" "CompositionEvent" "console" "CssStyleDeclaration" "DataTransfer" "DataTransferItem" "DataTransferItemList" "Document" "DomRect" "DragEvent" "Element" "Event" "EventListener" "EventTarget" "ExtSRgb" "File" "FileList" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "HtmlInputElement" "InputEvent" "KeyboardEvent" "Location" "MediaQueryList" "MediaQueryListEvent" "MouseEvent" "Navigator" "Performance" "Storage" "Touch" "TouchEvent" "TouchList" "WebGl2RenderingContext" "WebglDebugRendererInfo" "WebGlRenderingContext" "WheelEvent" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "winit") (r "^0.29.4") (f (quote ("rwh_05"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "13pfhxm414rbzc85a4rssk1mvrybk6hwjd02awkwyr6ml51h3h3r") (f (quote (("x11" "egui-winit/x11") ("web_screen_reader" "web-sys/SpeechSynthesis" "web-sys/SpeechSynthesisUtterance") ("wayland" "egui-winit/wayland") ("persistence" "directories-next" "egui-winit/serde" "egui/persistence" "ron" "serde") ("default_fonts" "egui/default_fonts") ("default" "accesskit" "default_fonts" "glow" "wayland" "web_screen_reader" "winit/default" "x11") ("android-native-activity" "egui-winit/android-native-activity") ("android-game-activity" "egui-winit/android-game-activity") ("accesskit" "egui/accesskit" "egui-winit/accesskit") ("__screenshot")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "dep:egui-wgpu" "dep:pollster" "dep:raw-window-handle") ("puffin" "dep:puffin" "egui/puffin" "egui_glow?/puffin" "egui-wgpu?/puffin" "egui-winit/puffin") ("glow" "dep:glow" "dep:egui_glow" "dep:glutin" "dep:glutin-winit")))) (r "1.72")))

(define-public crate-eframe-0.26.0-alpha.1 (c (n "eframe") (v "0.26.0-alpha.1") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "directories-next") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "egui") (r "^0.26.0-alpha.1") (f (quote ("bytemuck" "log"))) (k 0)) (d (n "egui-wgpu") (r "^0.26.0-alpha.1") (f (quote ("winit"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui-wgpu") (r "^0.26.0-alpha.1") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.26.0-alpha.1") (f (quote ("clipboard" "links"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.26.0-alpha.1") (o #t) (k 0)) (d (n "glow") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.31") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glutin-winit") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pollster") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.6.0") (d #t) (k 0)) (d (n "ron") (r "^0.8") (f (quote ("integer128"))) (o #t) (d #t) (k 0)) (d (n "rwh_05") (r "^0.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.58") (f (quote ("BinaryType" "Blob" "Clipboard" "ClipboardEvent" "CompositionEvent" "console" "CssStyleDeclaration" "DataTransfer" "DataTransferItem" "DataTransferItemList" "Document" "DomRect" "DragEvent" "Element" "Event" "EventListener" "EventTarget" "ExtSRgb" "File" "FileList" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "HtmlInputElement" "InputEvent" "KeyboardEvent" "Location" "MediaQueryList" "MediaQueryListEvent" "MouseEvent" "Navigator" "Performance" "Storage" "Touch" "TouchEvent" "TouchList" "WebGl2RenderingContext" "WebglDebugRendererInfo" "WebGlRenderingContext" "WheelEvent" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-time") (r "^0.2") (d #t) (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("fragile-send-sync-non-atomic-wasm" "metal" "webgpu"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "winit") (r "^0.29.4") (f (quote ("rwh_06"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1rp3caw9yy5b0nmzi43axv10r3zn9qmkjrbrzkiwah72i04jjf0q") (f (quote (("web_screen_reader" "web-sys/SpeechSynthesis" "web-sys/SpeechSynthesisUtterance") ("persistence" "directories-next" "egui-winit/serde" "egui/persistence" "ron" "serde") ("default_fonts" "egui/default_fonts") ("default" "accesskit" "default_fonts" "glow" "wayland" "web_screen_reader" "winit/default" "x11") ("android-native-activity" "egui-winit/android-native-activity") ("android-game-activity" "egui-winit/android-game-activity") ("accesskit" "egui/accesskit" "egui-winit/accesskit") ("__screenshot")))) (s 2) (e (quote (("x11" "egui-winit/x11" "egui-wgpu?/x11" "egui_glow?/x11") ("wgpu" "dep:wgpu" "dep:egui-wgpu" "dep:pollster") ("wayland" "egui-winit/wayland" "egui-wgpu?/wayland" "egui_glow?/wayland") ("puffin" "dep:puffin" "egui/puffin" "egui_glow?/puffin" "egui-wgpu?/puffin" "egui-winit/puffin") ("glow" "dep:egui_glow" "dep:glow" "dep:glutin-winit" "dep:glutin" "dep:rwh_05" "winit/rwh_05")))) (r "1.72")))

(define-public crate-eframe-0.26.0-alpha.2 (c (n "eframe") (v "0.26.0-alpha.2") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "directories-next") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "egui") (r "^0.26.0-alpha.2") (f (quote ("bytemuck" "log"))) (k 0)) (d (n "egui-wgpu") (r "^0.26.0-alpha.2") (f (quote ("winit"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui-wgpu") (r "^0.26.0-alpha.2") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.26.0-alpha.2") (f (quote ("clipboard" "links"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.26.0-alpha.2") (o #t) (k 0)) (d (n "glow") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.31") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glutin-winit") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pollster") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.6.0") (d #t) (k 0)) (d (n "ron") (r "^0.8") (f (quote ("integer128"))) (o #t) (d #t) (k 0)) (d (n "rwh_05") (r "^0.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.58") (f (quote ("BinaryType" "Blob" "Clipboard" "ClipboardEvent" "CompositionEvent" "console" "CssStyleDeclaration" "DataTransfer" "DataTransferItem" "DataTransferItemList" "Document" "DomRect" "DragEvent" "Element" "Event" "EventListener" "EventTarget" "ExtSRgb" "File" "FileList" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "HtmlInputElement" "InputEvent" "KeyboardEvent" "Location" "MediaQueryList" "MediaQueryListEvent" "MouseEvent" "Navigator" "Performance" "Storage" "Touch" "TouchEvent" "TouchList" "WebGl2RenderingContext" "WebglDebugRendererInfo" "WebGlRenderingContext" "WheelEvent" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-time") (r "^0.2") (d #t) (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("fragile-send-sync-non-atomic-wasm" "metal" "webgpu"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "winit") (r "^0.29.4") (f (quote ("rwh_06"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1n0d0mfv6wnc371lcrrhhsmwm5yjdgb5z6vwwh84pm26n898x6rj") (f (quote (("web_screen_reader" "web-sys/SpeechSynthesis" "web-sys/SpeechSynthesisUtterance") ("persistence" "directories-next" "egui-winit/serde" "egui/persistence" "ron" "serde") ("default_fonts" "egui/default_fonts") ("default" "accesskit" "default_fonts" "glow" "wayland" "web_screen_reader" "winit/default" "x11") ("android-native-activity" "egui-winit/android-native-activity") ("android-game-activity" "egui-winit/android-game-activity") ("accesskit" "egui/accesskit" "egui-winit/accesskit") ("__screenshot")))) (s 2) (e (quote (("x11" "egui-winit/x11" "egui-wgpu?/x11" "egui_glow?/x11") ("wgpu" "dep:wgpu" "dep:egui-wgpu" "dep:pollster") ("wayland" "egui-winit/wayland" "egui-wgpu?/wayland" "egui_glow?/wayland") ("puffin" "dep:puffin" "egui/puffin" "egui_glow?/puffin" "egui-wgpu?/puffin" "egui-winit/puffin") ("glow" "dep:egui_glow" "dep:glow" "dep:glutin-winit" "dep:glutin" "dep:rwh_05" "winit/rwh_05")))) (r "1.72")))

(define-public crate-eframe-0.26.0 (c (n "eframe") (v "0.26.0") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "directories-next") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2") (d #t) (k 0)) (d (n "egui") (r "^0.26.0") (f (quote ("bytemuck" "log"))) (k 0)) (d (n "egui-wgpu") (r "^0.26.0") (f (quote ("winit"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui-wgpu") (r "^0.26.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.26.0") (f (quote ("clipboard" "links"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.26.0") (o #t) (k 0)) (d (n "glow") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.31") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glutin-winit") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pollster") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.6.0") (d #t) (k 0)) (d (n "ron") (r "^0.8") (f (quote ("integer128"))) (o #t) (d #t) (k 0)) (d (n "rwh_05") (r "^0.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.58") (f (quote ("BinaryType" "Blob" "Clipboard" "ClipboardEvent" "CompositionEvent" "console" "CssStyleDeclaration" "DataTransfer" "DataTransferItem" "DataTransferItemList" "Document" "DomRect" "DragEvent" "Element" "Event" "EventListener" "EventTarget" "ExtSRgb" "File" "FileList" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "HtmlInputElement" "InputEvent" "KeyboardEvent" "Location" "MediaQueryList" "MediaQueryListEvent" "MouseEvent" "Navigator" "Performance" "Storage" "Touch" "TouchEvent" "TouchList" "WebGl2RenderingContext" "WebglDebugRendererInfo" "WebGlRenderingContext" "WheelEvent" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-time") (r "^0.2") (d #t) (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("fragile-send-sync-non-atomic-wasm" "metal" "webgpu"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "winit") (r "^0.29.4") (f (quote ("rwh_06"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0cc78y071r8j3sb4aiiim4wgka4i7s9xbfk1jhr4qb74gry56c12") (f (quote (("web_screen_reader" "web-sys/SpeechSynthesis" "web-sys/SpeechSynthesisUtterance") ("persistence" "directories-next" "egui-winit/serde" "egui/persistence" "ron" "serde") ("default_fonts" "egui/default_fonts") ("default" "accesskit" "default_fonts" "glow" "wayland" "web_screen_reader" "winit/default" "x11") ("android-native-activity" "egui-winit/android-native-activity") ("android-game-activity" "egui-winit/android-game-activity") ("accesskit" "egui/accesskit" "egui-winit/accesskit") ("__screenshot")))) (s 2) (e (quote (("x11" "egui-winit/x11" "egui-wgpu?/x11" "egui_glow?/x11") ("wgpu" "dep:wgpu" "dep:egui-wgpu" "dep:pollster") ("wayland" "egui-winit/wayland" "egui-wgpu?/wayland" "egui_glow?/wayland") ("puffin" "dep:puffin" "egui/puffin" "egui_glow?/puffin" "egui-wgpu?/puffin" "egui-winit/puffin") ("glow" "dep:egui_glow" "dep:glow" "dep:glutin-winit" "dep:glutin" "dep:rwh_05" "winit/rwh_05")))) (r "1.72")))

(define-public crate-eframe-0.26.1 (c (n "eframe") (v "0.26.1") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "directories-next") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "egui") (r "^0.26.1") (f (quote ("bytemuck" "log"))) (k 0)) (d (n "egui-wgpu") (r "^0.26.1") (f (quote ("winit"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui-wgpu") (r "^0.26.1") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.26.1") (f (quote ("clipboard" "links"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.26.1") (o #t) (k 0)) (d (n "glow") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.31") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glutin-winit") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pollster") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.6.0") (d #t) (k 0)) (d (n "ron") (r "^0.8") (f (quote ("integer128"))) (o #t) (d #t) (k 0)) (d (n "rwh_05") (r "^0.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.58") (f (quote ("BinaryType" "Blob" "Clipboard" "ClipboardEvent" "CompositionEvent" "console" "CssStyleDeclaration" "DataTransfer" "DataTransferItem" "DataTransferItemList" "Document" "DomRect" "DragEvent" "Element" "Event" "EventListener" "EventTarget" "ExtSRgb" "File" "FileList" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "HtmlInputElement" "InputEvent" "KeyboardEvent" "Location" "MediaQueryList" "MediaQueryListEvent" "MouseEvent" "Navigator" "Performance" "Storage" "Touch" "TouchEvent" "TouchList" "WebGl2RenderingContext" "WebglDebugRendererInfo" "WebGlRenderingContext" "WheelEvent" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-time") (r "^0.2") (d #t) (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("fragile-send-sync-non-atomic-wasm" "metal" "webgpu"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "winit") (r "^0.29.4") (f (quote ("rwh_06"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "10a4x2vhfppgv98gqs406pjch2yf9jldr706f09sm7a2xawgf7zk") (f (quote (("web_screen_reader" "web-sys/SpeechSynthesis" "web-sys/SpeechSynthesisUtterance") ("persistence" "directories-next" "egui-winit/serde" "egui/persistence" "ron" "serde") ("default_fonts" "egui/default_fonts") ("default" "accesskit" "default_fonts" "glow" "wayland" "web_screen_reader" "winit/default" "x11") ("android-native-activity" "egui-winit/android-native-activity") ("android-game-activity" "egui-winit/android-game-activity") ("accesskit" "egui/accesskit" "egui-winit/accesskit") ("__screenshot")))) (s 2) (e (quote (("x11" "egui-winit/x11" "egui-wgpu?/x11" "egui_glow?/x11") ("wgpu" "dep:wgpu" "dep:egui-wgpu" "dep:pollster") ("wayland" "egui-winit/wayland" "egui-wgpu?/wayland" "egui_glow?/wayland") ("puffin" "dep:puffin" "egui/puffin" "egui_glow?/puffin" "egui-wgpu?/puffin" "egui-winit/puffin") ("glow" "dep:egui_glow" "dep:glow" "dep:glutin-winit" "dep:glutin" "dep:rwh_05" "winit/rwh_05")))) (r "1.72")))

(define-public crate-eframe-0.26.2 (c (n "eframe") (v "0.26.2") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "directories-next") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "egui") (r "^0.26.2") (f (quote ("bytemuck" "log"))) (k 0)) (d (n "egui-wgpu") (r "^0.26.2") (f (quote ("winit"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui-wgpu") (r "^0.26.2") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.26.2") (f (quote ("clipboard" "links"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.26.2") (o #t) (k 0)) (d (n "glow") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.31") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glutin-winit") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pollster") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.6.0") (d #t) (k 0)) (d (n "ron") (r "^0.8") (f (quote ("integer128"))) (o #t) (d #t) (k 0)) (d (n "rwh_05") (r "^0.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.58") (f (quote ("BinaryType" "Blob" "Clipboard" "ClipboardEvent" "CompositionEvent" "console" "CssStyleDeclaration" "DataTransfer" "DataTransferItem" "DataTransferItemList" "Document" "DomRect" "DragEvent" "Element" "Event" "EventListener" "EventTarget" "ExtSRgb" "File" "FileList" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "HtmlInputElement" "InputEvent" "KeyboardEvent" "Location" "MediaQueryList" "MediaQueryListEvent" "MouseEvent" "Navigator" "Performance" "Storage" "Touch" "TouchEvent" "TouchList" "WebGl2RenderingContext" "WebglDebugRendererInfo" "WebGlRenderingContext" "WheelEvent" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-time") (r "^0.2") (d #t) (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("fragile-send-sync-non-atomic-wasm" "metal" "webgpu"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("fragile-send-sync-non-atomic-wasm"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("winuser"))) (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "winit") (r "^0.29.4") (f (quote ("rwh_06"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0vzjpm6kmqnnyhsvm4gq7yi7033m7mq88x15h2vnigqkdnxw2mn4") (f (quote (("web_screen_reader" "web-sys/SpeechSynthesis" "web-sys/SpeechSynthesisUtterance") ("persistence" "directories-next" "egui-winit/serde" "egui/persistence" "ron" "serde") ("default_fonts" "egui/default_fonts") ("default" "accesskit" "default_fonts" "glow" "wayland" "web_screen_reader" "winit/default" "x11") ("android-native-activity" "egui-winit/android-native-activity") ("android-game-activity" "egui-winit/android-game-activity") ("accesskit" "egui/accesskit" "egui-winit/accesskit") ("__screenshot")))) (s 2) (e (quote (("x11" "egui-winit/x11" "egui-wgpu?/x11" "egui_glow?/x11") ("wgpu" "dep:wgpu" "dep:egui-wgpu" "dep:pollster") ("wayland" "egui-winit/wayland" "egui-wgpu?/wayland" "egui_glow?/wayland") ("puffin" "dep:puffin" "egui/puffin" "egui_glow?/puffin" "egui-wgpu?/puffin" "egui-winit/puffin") ("glow" "dep:egui_glow" "dep:glow" "dep:glutin-winit" "dep:glutin" "dep:rwh_05" "winit/rwh_05")))) (r "1.72")))

(define-public crate-eframe-0.27.0 (c (n "eframe") (v "0.27.0") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "directories-next") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "egui") (r "^0.27.0") (f (quote ("bytemuck" "log"))) (k 0)) (d (n "egui-wgpu") (r "^0.27.0") (f (quote ("winit"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui-wgpu") (r "^0.27.0") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.27.0") (f (quote ("clipboard" "links"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.27.0") (o #t) (k 0)) (d (n "glow") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.31") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glutin-winit") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pollster") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.6.0") (d #t) (k 0)) (d (n "ron") (r "^0.8") (f (quote ("integer128"))) (o #t) (d #t) (k 0)) (d (n "rwh_05") (r "^0.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.58") (f (quote ("BinaryType" "Blob" "Clipboard" "ClipboardEvent" "CompositionEvent" "console" "CssStyleDeclaration" "DataTransfer" "DataTransferItem" "DataTransferItemList" "Document" "DomRect" "DragEvent" "Element" "Event" "EventListener" "EventTarget" "ExtSRgb" "File" "FileList" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "HtmlInputElement" "InputEvent" "KeyboardEvent" "Location" "MediaQueryList" "MediaQueryListEvent" "MouseEvent" "Navigator" "Performance" "Storage" "Touch" "TouchEvent" "TouchList" "WebGl2RenderingContext" "WebglDebugRendererInfo" "WebGlRenderingContext" "WheelEvent" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-time") (r "^0.2") (d #t) (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("fragile-send-sync-non-atomic-wasm" "metal" "webgpu"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("fragile-send-sync-non-atomic-wasm" "webgpu"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("winuser"))) (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "winit") (r "^0.29.4") (f (quote ("rwh_06"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1b2sx9312x56vvr5sy291w8hf13qvrwfw83hcdrzlz44vwh1p0c6") (f (quote (("web_screen_reader" "web-sys/SpeechSynthesis" "web-sys/SpeechSynthesisUtterance") ("persistence" "directories-next" "egui-winit/serde" "egui/persistence" "ron" "serde") ("default_fonts" "egui/default_fonts") ("default" "accesskit" "default_fonts" "glow" "wayland" "web_screen_reader" "winit/default" "x11") ("android-native-activity" "egui-winit/android-native-activity") ("android-game-activity" "egui-winit/android-game-activity") ("accesskit" "egui/accesskit" "egui-winit/accesskit") ("__screenshot")))) (s 2) (e (quote (("x11" "egui-winit/x11" "egui-wgpu?/x11" "egui_glow?/x11") ("wgpu" "dep:wgpu" "dep:egui-wgpu" "dep:pollster") ("wayland" "egui-winit/wayland" "egui-wgpu?/wayland" "egui_glow?/wayland") ("puffin" "dep:puffin" "egui/puffin" "egui_glow?/puffin" "egui-wgpu?/puffin" "egui-winit/puffin") ("glow" "dep:egui_glow" "dep:glow" "dep:glutin-winit" "dep:glutin" "dep:rwh_05" "winit/rwh_05")))) (r "1.72")))

(define-public crate-eframe-0.27.1 (c (n "eframe") (v "0.27.1") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "directories-next") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "egui") (r "^0.27.1") (f (quote ("bytemuck" "log"))) (k 0)) (d (n "egui-wgpu") (r "^0.27.1") (f (quote ("winit"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui-wgpu") (r "^0.27.1") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.27.1") (f (quote ("clipboard" "links"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.27.1") (o #t) (k 0)) (d (n "glow") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.31") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glutin-winit") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pollster") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.6.0") (d #t) (k 0)) (d (n "ron") (r "^0.8") (f (quote ("integer128"))) (o #t) (d #t) (k 0)) (d (n "rwh_05") (r "^0.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.58") (f (quote ("BinaryType" "Blob" "Clipboard" "ClipboardEvent" "CompositionEvent" "console" "CssStyleDeclaration" "DataTransfer" "DataTransferItem" "DataTransferItemList" "Document" "DomRect" "DragEvent" "Element" "Event" "EventListener" "EventTarget" "ExtSRgb" "File" "FileList" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "HtmlInputElement" "InputEvent" "KeyboardEvent" "Location" "MediaQueryList" "MediaQueryListEvent" "MouseEvent" "Navigator" "Performance" "Storage" "Touch" "TouchEvent" "TouchList" "WebGl2RenderingContext" "WebglDebugRendererInfo" "WebGlRenderingContext" "WheelEvent" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-time") (r "^0.2") (d #t) (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("fragile-send-sync-non-atomic-wasm" "metal" "webgpu"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("fragile-send-sync-non-atomic-wasm" "webgpu"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("winuser"))) (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "winit") (r "^0.29.4") (f (quote ("rwh_06"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "065931vby52kw1hmbzm4vllgrzzxhmzgyirjkbq6q2kgvw38xk1v") (f (quote (("web_screen_reader" "web-sys/SpeechSynthesis" "web-sys/SpeechSynthesisUtterance") ("persistence" "directories-next" "egui-winit/serde" "egui/persistence" "ron" "serde") ("default_fonts" "egui/default_fonts") ("default" "accesskit" "default_fonts" "glow" "wayland" "web_screen_reader" "winit/default" "x11") ("android-native-activity" "egui-winit/android-native-activity") ("android-game-activity" "egui-winit/android-game-activity") ("accesskit" "egui/accesskit" "egui-winit/accesskit") ("__screenshot")))) (s 2) (e (quote (("x11" "egui-winit/x11" "egui-wgpu?/x11" "egui_glow?/x11") ("wgpu" "dep:wgpu" "dep:egui-wgpu" "dep:pollster") ("wayland" "egui-winit/wayland" "egui-wgpu?/wayland" "egui_glow?/wayland") ("puffin" "dep:puffin" "egui/puffin" "egui_glow?/puffin" "egui-wgpu?/puffin" "egui-winit/puffin") ("glow" "dep:egui_glow" "dep:glow" "dep:glutin-winit" "dep:glutin" "dep:rwh_05" "winit/rwh_05")))) (r "1.72")))

(define-public crate-eframe-0.27.2 (c (n "eframe") (v "0.27.2") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "directories-next") (r "^2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "egui") (r "^0.27.2") (f (quote ("bytemuck" "log"))) (k 0)) (d (n "egui-wgpu") (r "^0.27.2") (f (quote ("winit"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui-wgpu") (r "^0.27.2") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "egui-winit") (r "^0.27.2") (f (quote ("clipboard" "links"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "egui_glow") (r "^0.27.2") (o #t) (k 0)) (d (n "glow") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "glutin") (r "^0.31") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glutin-winit") (r "^0.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("png"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\"))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pollster") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "raw-window-handle") (r "^0.6.0") (d #t) (k 0)) (d (n "ron") (r "^0.8") (f (quote ("integer128"))) (o #t) (d #t) (k 0)) (d (n "rwh_05") (r "^0.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.58") (f (quote ("BinaryType" "Blob" "Clipboard" "ClipboardEvent" "CompositionEvent" "console" "CssStyleDeclaration" "DataTransfer" "DataTransferItem" "DataTransferItemList" "Document" "DomRect" "DragEvent" "Element" "Event" "EventListener" "EventTarget" "ExtSRgb" "File" "FileList" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "HtmlInputElement" "InputEvent" "KeyboardEvent" "Location" "MediaQueryList" "MediaQueryListEvent" "MouseEvent" "Navigator" "Performance" "Storage" "Touch" "TouchEvent" "TouchList" "WebGl2RenderingContext" "WebglDebugRendererInfo" "WebGlRenderingContext" "WheelEvent" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-time") (r "^0.2") (d #t) (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("fragile-send-sync-non-atomic-wasm" "metal" "webgpu"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wgpu") (r "^0.19.1") (f (quote ("fragile-send-sync-non-atomic-wasm" "webgpu"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("winuser"))) (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "winit") (r "^0.29.4") (f (quote ("rwh_06"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1cmsj5y31zd8dmsga9v70z1nz155cknpwbslphfwgkmvyv72q3h2") (f (quote (("web_screen_reader" "web-sys/SpeechSynthesis" "web-sys/SpeechSynthesisUtterance") ("persistence" "directories-next" "egui-winit/serde" "egui/persistence" "ron" "serde") ("default_fonts" "egui/default_fonts") ("default" "accesskit" "default_fonts" "glow" "wayland" "web_screen_reader" "winit/default" "x11") ("android-native-activity" "egui-winit/android-native-activity") ("android-game-activity" "egui-winit/android-game-activity") ("accesskit" "egui/accesskit" "egui-winit/accesskit") ("__screenshot")))) (s 2) (e (quote (("x11" "egui-winit/x11" "egui-wgpu?/x11" "egui_glow?/x11") ("wgpu" "dep:wgpu" "dep:egui-wgpu" "dep:pollster") ("wayland" "egui-winit/wayland" "egui-wgpu?/wayland" "egui_glow?/wayland") ("puffin" "dep:puffin" "egui/puffin" "egui_glow?/puffin" "egui-wgpu?/puffin" "egui-winit/puffin") ("glow" "dep:egui_glow" "dep:glow" "dep:glutin-winit" "dep:glutin" "dep:rwh_05" "winit/rwh_05")))) (r "1.72")))

