(define-module (crates-io ef mt efmt) #:use-module (crates-io))

(define-public crate-efmt-0.0.1 (c (n "efmt") (v "0.0.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "efmt_derive") (r "^0.0.1") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1iyljb0l3kqfiy0xigcb81kqzlcyvmbgaypjpbnf1cc9461br4xa")))

(define-public crate-efmt-0.0.2 (c (n "efmt") (v "0.0.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "efmt_derive") (r "^0.0.1") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0pcphabysfdbc8mfczd2d0wpmp06wji425gdrc1935mwh732qfqs")))

(define-public crate-efmt-0.0.3 (c (n "efmt") (v "0.0.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "efmt_derive") (r "^0.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0nrhjzgfbmc8k5xs07gv22332mhvnrxp1yhp6yaa89k00fk98vq5")))

(define-public crate-efmt-0.0.4 (c (n "efmt") (v "0.0.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "efmt_derive") (r "^0.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0sd9j66z8npxa20jf1xva071s0r8dxjj0vjli86w6xipzwg2ski5")))

(define-public crate-efmt-0.0.5 (c (n "efmt") (v "0.0.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "efmt_derive") (r "^0.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pprof") (r "^0.4") (f (quote ("flamegraph"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1zivjn7r1sm4caxkw773a64516afgimlzvc2w716yxvzmaf2lj70")))

(define-public crate-efmt-0.0.6 (c (n "efmt") (v "0.0.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "efmt_derive") (r "^0.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pprof") (r "^0.4") (f (quote ("flamegraph"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "11irdqygidv96dhvnlj6nysqw1sqcn2ad4va8x33visqg6hrpwvr")))

(define-public crate-efmt-0.0.7 (c (n "efmt") (v "0.0.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "efmt_derive") (r "^0.0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.4") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pprof") (r "^0.6") (f (quote ("flamegraph"))) (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha256") (r "^1") (d #t) (k 0)) (d (n "similar") (r "^2") (f (quote ("inline"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1y80f57j5xa5scdgpdybm4zbg4xq8snfvf5yvyv5kda4n05hqwzs")))

(define-public crate-efmt-0.0.8 (c (n "efmt") (v "0.0.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "efmt_derive") (r "^0.0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.4") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pprof") (r "^0.6") (f (quote ("flamegraph"))) (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha256") (r "^1") (d #t) (k 0)) (d (n "similar") (r "^2") (f (quote ("inline"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0nnfbb47mg7qwp2zvn1l840x0vx851n621p6i2rmm15lkfwp3xwg")))

(define-public crate-efmt-0.0.9 (c (n "efmt") (v "0.0.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "efmt_derive") (r "^0.0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pprof") (r "^0.6") (f (quote ("flamegraph"))) (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha256") (r "^1") (d #t) (k 0)) (d (n "similar") (r "^2") (f (quote ("inline"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "07vh48arv442jk0hl0vpa9jq9z9ap09q8ahx6b97hz7q3pj9806r")))

(define-public crate-efmt-0.1.0 (c (n "efmt") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "efmt_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pprof") (r "^0.6") (f (quote ("flamegraph"))) (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha256") (r "^1") (d #t) (k 0)) (d (n "similar") (r "^2") (f (quote ("inline"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0af2xb76h1lypn6av59na1hi6mpqfv114ggmx79grdk9shpnz8wj")))

(define-public crate-efmt-0.1.1 (c (n "efmt") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "efmt_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pprof") (r "^0.6") (f (quote ("flamegraph"))) (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha256") (r "^1") (d #t) (k 0)) (d (n "similar") (r "^2") (f (quote ("inline"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "19yx4q5bnfd2ggr1yj1iv24zm15fids9dd5cb4c2z2q7d1hkzyk1")))

(define-public crate-efmt-0.2.0 (c (n "efmt") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "efmt_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.5") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pprof") (r "^0.7") (f (quote ("flamegraph"))) (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha256") (r "^1") (d #t) (k 0)) (d (n "similar") (r "^2") (f (quote ("inline"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1kvrr1dh4mpn5n8n2sq75z47rgxmrdgamsdzzk6r3khzhcg9rf6f")))

(define-public crate-efmt-0.3.0 (c (n "efmt") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "efmt_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.5") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pprof") (r "^0.8") (f (quote ("flamegraph"))) (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha256") (r "^1") (d #t) (k 0)) (d (n "similar") (r "^2") (f (quote ("inline"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "057x54ksq1hsq571rijs29lx5njjkpdphmy8jjsizyq6kl8cmjkf")))

(define-public crate-efmt-0.4.0 (c (n "efmt") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "efmt_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.5") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pprof") (r "^0.8") (f (quote ("flamegraph"))) (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha256") (r "^1") (d #t) (k 0)) (d (n "similar") (r "^2") (f (quote ("inline"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1qmv4856nhsjfiwq0zx89x53jpgp2c4xkm2ziyl5hsl6spr8s6kf")))

(define-public crate-efmt-0.5.0 (c (n "efmt") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "efmt_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.5") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha256") (r "^1") (d #t) (k 0)) (d (n "similar") (r "^2") (f (quote ("inline"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1mhhqkpjqll5kg4gabkhagqnyxhkbw6zwv26k6lzlbbhmm5l2r57")))

(define-public crate-efmt-0.6.0 (c (n "efmt") (v "0.6.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "efmt_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.5") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha256") (r "^1") (d #t) (k 0)) (d (n "similar") (r "^2") (f (quote ("inline"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1472yyiirhyzb5ig9cvz1ylwl8chdbfkp8i5mcwd3hkx8s4h57zh")))

(define-public crate-efmt-0.7.0 (c (n "efmt") (v "0.7.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "efmt_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.5") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha256") (r "^1") (d #t) (k 0)) (d (n "similar") (r "^2") (f (quote ("inline"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0asqlcqlrwjl16r2f2p5awx9541gc9vcfjx1qdpw068qc4x9424a")))

(define-public crate-efmt-0.8.0 (c (n "efmt") (v "0.8.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "efmt_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.5") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha256") (r "^1") (d #t) (k 0)) (d (n "similar") (r "^2") (f (quote ("inline"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1kf94sx6fj8d2nb1bmc7mb8mp2zj5dn7z8pxfkslpm7c8qlp72hd")))

(define-public crate-efmt-0.9.0 (c (n "efmt") (v "0.9.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "efmt_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.5") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha256") (r "^1") (d #t) (k 0)) (d (n "similar") (r "^2") (f (quote ("inline"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1miss8i1i1xc0qvcds7075q4anb5r107ixkvq9abxbw7bq3z8wdp")))

(define-public crate-efmt-0.10.0 (c (n "efmt") (v "0.10.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "efmt_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.5") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha256") (r "^1") (d #t) (k 0)) (d (n "similar") (r "^2") (f (quote ("inline"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1hs1rnj1npfvrsr9cl4l2lggijrh484hgza22xddshl03k0qv7mw")))

(define-public crate-efmt-0.11.0 (c (n "efmt") (v "0.11.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "efmt_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.5") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha256") (r "^1") (d #t) (k 0)) (d (n "similar") (r "^2") (f (quote ("inline"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1ncydv7cp81mpda6c143qssdk9lbc8zvqh9ig7fvdbz8splp1fv8")))

(define-public crate-efmt-0.11.1 (c (n "efmt") (v "0.11.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "efmt_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.5") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha256") (r "^1") (d #t) (k 0)) (d (n "similar") (r "^2") (f (quote ("inline"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1z4dv32byn4y17rlpna9i03rmijr98zgp0hggqq45nkcs7iivksj")))

(define-public crate-efmt-0.12.0 (c (n "efmt") (v "0.12.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "efmt_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.5") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha256") (r "^1") (d #t) (k 0)) (d (n "similar") (r "^2") (f (quote ("inline"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "082nkx2js7v9gs08grgscy7f5vc2c63mjiykbf8m8z87z3bwm5dj")))

(define-public crate-efmt-0.12.1 (c (n "efmt") (v "0.12.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "efmt_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.5") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha256") (r "^1") (d #t) (k 0)) (d (n "similar") (r "^2") (f (quote ("inline"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0p93l45ysmha6gspd4r00q11h9dwwqyqnmcxz2hnfs3iljh4rykz")))

(define-public crate-efmt-0.13.0 (c (n "efmt") (v "0.13.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "efmt_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.5") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha256") (r "^1") (d #t) (k 0)) (d (n "similar") (r "^2") (f (quote ("inline"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0m4n4jvc34abh64vjipv0sb0kwi1s7h677sncp24fanpf4ly8z2z")))

(define-public crate-efmt-0.14.0 (c (n "efmt") (v "0.14.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "efmt_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.5") (d #t) (k 0)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "similar") (r "^2") (f (quote ("inline"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1nzsv0nrn57agvdckv3d7wzjrabysi55bj7nyr5b3cwkdnbgbb22")))

(define-public crate-efmt-0.14.1 (c (n "efmt") (v "0.14.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "efmt_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.5") (d #t) (k 0)) (d (n "indoc") (r "^2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "similar") (r "^2") (f (quote ("inline"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0gdjmnamapkyvdrvcb5gb7qip67za646mp596sb572rk5nhc0yij")))

(define-public crate-efmt-0.15.0 (c (n "efmt") (v "0.15.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "efmt_core") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "erl_tokenize") (r "^0.6") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "similar") (r "^2") (f (quote ("inline"))) (d #t) (k 0)) (d (n "similar-asserts") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 0)))) (h "1slsh8rbzmih8v3xqn9azn53r9yxfzblmixjk06qq7k8305yhdkl")))

