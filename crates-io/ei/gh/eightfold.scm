(define-module (crates-io ei gh eightfold) #:use-module (crates-io))

(define-public crate-eightfold-0.1.0 (c (n "eightfold") (v "0.1.0") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "nalgebra") (r "^0.31") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "parry3d") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "local-offset" "macros"))) (d #t) (k 2)) (d (n "tobj") (r "^3.2") (f (quote ("merging" "reordering"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("time" "env-filter" "parking_lot" "local-time" "json"))) (d #t) (k 2)) (d (n "wgpu") (r "^0.14") (d #t) (k 2)))) (h "00gl6c3gjg92svbv27qxi2zx5kjmh4r4v9zpx4n807r9hl6r55jc") (f (quote (("render" "mesh") ("mesh" "spatial") ("default")))) (s 2) (e (quote (("tracing" "dep:tracing") ("spatial" "dep:parry3d"))))))

