(define-module (crates-io fl ue fluence-fork-libp2p-mplex) #:use-module (crates-io))

(define-public crate-fluence-fork-libp2p-mplex-0.20.0 (c (n "fluence-fork-libp2p-mplex") (v "0.20.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures_codec") (r "^0.4") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.20.0") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.4") (f (quote ("futures-codec"))) (d #t) (k 0)))) (h "026b89n33rgf5d0g7vksqyydnc6g8x4sa0rjvvnd79qkax6b9hfd")))

(define-public crate-fluence-fork-libp2p-mplex-0.26.0 (c (n "fluence-fork-libp2p-mplex") (v "0.26.0") (d (list (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures_codec") (r "^0.4.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.26.0") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.5") (f (quote ("futures-codec"))) (d #t) (k 0)))) (h "1k92z37ga5b5gbg6mgyl9bda5bg00a34la81s5aax1p93s5zxhq3")))

(define-public crate-fluence-fork-libp2p-mplex-0.20.1 (c (n "fluence-fork-libp2p-mplex") (v "0.20.1") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures_codec") (r "^0.4") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.20.2") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.4") (f (quote ("futures-codec"))) (d #t) (k 0)))) (h "1f1pq2xdp14rw4cd54m77zql37n7fiin8i6hlr3kpwd34fqxg8hl")))

(define-public crate-fluence-fork-libp2p-mplex-0.26.1 (c (n "fluence-fork-libp2p-mplex") (v "0.26.1") (d (list (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures_codec") (r "^0.4.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.26.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.5") (f (quote ("futures-codec"))) (d #t) (k 0)))) (h "0rw44148fhlbn892rxhmkdp2rillpg275i4akw7rq9vagh0s7npc")))

(define-public crate-fluence-fork-libp2p-mplex-0.27.1 (c (n "fluence-fork-libp2p-mplex") (v "0.27.1") (d (list (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.27.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)))) (h "00zj5hfhxxdffv2l34vz46c8piljxmrp03qsi5l7bmg59w619rgm")))

(define-public crate-fluence-fork-libp2p-mplex-0.27.2 (c (n "fluence-fork-libp2p-mplex") (v "0.27.2") (d (list (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libp2p-core") (r "^0.27.2") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)))) (h "1b5gyg31ywgcb9pv38kr8hk4vp4vcbpi38h79qs5w3d821nzyn3m")))

