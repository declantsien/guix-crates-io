(define-module (crates-io fl ue fluence-fork-libp2p) #:use-module (crates-io))

(define-public crate-fluence-fork-libp2p-0.22.0 (c (n "fluence-fork-libp2p") (v "0.22.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "atomic") (r "^0.4.6") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.20.0") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "libp2p-core-derive") (r "^0.20.0") (d #t) (k 0) (p "fluence-fork-libp2p-core-derive")) (d (n "libp2p-deflate") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-deflate")) (d (n "libp2p-dns") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-dns")) (d (n "libp2p-floodsub") (r "^0.20.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-floodsub")) (d (n "libp2p-gossipsub") (r "^0.20.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-gossipsub")) (d (n "libp2p-identify") (r "^0.20.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-identify")) (d (n "libp2p-kad") (r "^0.21.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-kad")) (d (n "libp2p-mdns") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-mdns")) (d (n "libp2p-mplex") (r "^0.20.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-mplex")) (d (n "libp2p-noise") (r "^0.21.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-noise")) (d (n "libp2p-ping") (r "^0.20.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-ping")) (d (n "libp2p-plaintext") (r "^0.20.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-plaintext")) (d (n "libp2p-pnet") (r "^0.19.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-pnet")) (d (n "libp2p-request-response") (r "^0.1.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-request-response")) (d (n "libp2p-secio") (r "^0.20.0") (o #t) (k 0) (p "fluence-fork-libp2p-secio")) (d (n "libp2p-swarm") (r "^0.20.0") (d #t) (k 0) (p "fluence-fork-libp2p-swarm")) (d (n "libp2p-tcp") (r "^0.20.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-tcp")) (d (n "libp2p-uds") (r "^0.20.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-uds")) (d (n "libp2p-wasm-ext") (r "^0.20.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-wasm-ext")) (d (n "libp2p-websocket") (r "^0.21.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-websocket")) (d (n "libp2p-yamux") (r "^0.20.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-yamux")) (d (n "multiaddr") (r "^0.9.1") (d #t) (k 0) (p "fluence-fork-parity-multiaddr")) (d (n "multihash") (r "^0.11.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.17") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "trust-graph") (r "^0.1.0") (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0vxslyjmzjnskpqzl353zqa7xz3r2d56sk8viwd6g3p3yklb4cjj") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1" "libp2p-secio/secp256k1") ("secio" "libp2p-secio") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secio" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-fluence-fork-libp2p-0.34.0 (c (n "fluence-fork-libp2p") (v "0.34.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.26.0") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "libp2p-core-derive") (r "^0.21.0") (d #t) (k 0) (p "fluence-fork-libp2p-core-derive")) (d (n "libp2p-deflate") (r "^0.26.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-deflate")) (d (n "libp2p-dns") (r "^0.26.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-dns")) (d (n "libp2p-floodsub") (r "^0.26.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-floodsub")) (d (n "libp2p-gossipsub") (r "^0.26.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-gossipsub")) (d (n "libp2p-identify") (r "^0.26.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-identify")) (d (n "libp2p-kad") (r "^0.27.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-kad")) (d (n "libp2p-mdns") (r "^0.27.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-mdns")) (d (n "libp2p-mplex") (r "^0.26.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-mplex")) (d (n "libp2p-noise") (r "^0.28.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-noise")) (d (n "libp2p-ping") (r "^0.26.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-ping")) (d (n "libp2p-plaintext") (r "^0.26.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-plaintext")) (d (n "libp2p-pnet") (r "^0.20.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-pnet")) (d (n "libp2p-request-response") (r "^0.9.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-request-response")) (d (n "libp2p-swarm") (r "^0.26.0") (d #t) (k 0) (p "fluence-fork-libp2p-swarm")) (d (n "libp2p-tcp") (r "^0.26.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-tcp")) (d (n "libp2p-uds") (r "^0.26.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-uds")) (d (n "libp2p-wasm-ext") (r "^0.26.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-wasm-ext")) (d (n "libp2p-websocket") (r "^0.27.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-websocket")) (d (n "libp2p-yamux") (r "^0.29.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-yamux")) (d (n "multiaddr") (r "^0.10.0") (d #t) (k 0) (p "fluence-fork-parity-multiaddr")) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.3") (f (quote ("io-util" "io-std" "stream" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "trust-graph") (r "^0.2.0") (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "110bran29xzmiqzc1z49n459nbrv202kgi3h501f7g06w1khhvf6") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-fluence-fork-libp2p-0.34.1 (c (n "fluence-fork-libp2p") (v "0.34.1") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.26.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "libp2p-core-derive") (r "^0.21.1") (d #t) (k 0) (p "fluence-fork-libp2p-core-derive")) (d (n "libp2p-deflate") (r "^0.26.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-deflate")) (d (n "libp2p-dns") (r "^0.26.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-dns")) (d (n "libp2p-floodsub") (r "^0.26.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-floodsub")) (d (n "libp2p-gossipsub") (r "^0.26.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-gossipsub")) (d (n "libp2p-identify") (r "^0.26.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-identify")) (d (n "libp2p-kad") (r "^0.27.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-kad")) (d (n "libp2p-mdns") (r "^0.27.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-mdns")) (d (n "libp2p-mplex") (r "^0.26.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-mplex")) (d (n "libp2p-noise") (r "^0.28.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-noise")) (d (n "libp2p-ping") (r "^0.26.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-ping")) (d (n "libp2p-plaintext") (r "^0.26.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-plaintext")) (d (n "libp2p-pnet") (r "^0.20.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-pnet")) (d (n "libp2p-request-response") (r "^0.9.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-request-response")) (d (n "libp2p-swarm") (r "^0.26.1") (d #t) (k 0) (p "fluence-fork-libp2p-swarm")) (d (n "libp2p-tcp") (r "^0.26.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-tcp")) (d (n "libp2p-uds") (r "^0.26.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-uds")) (d (n "libp2p-wasm-ext") (r "^0.26.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-wasm-ext")) (d (n "libp2p-websocket") (r "^0.27.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-websocket")) (d (n "libp2p-yamux") (r "^0.29.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-yamux")) (d (n "multiaddr") (r "^0.10.1") (d #t) (k 0) (p "fluence-fork-parity-multiaddr")) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.3") (f (quote ("io-util" "io-std" "stream" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "trust-graph") (r "^0.2.0") (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0h2gh383iwnj3rpmrdml6mzlay96gam28l2kpna7qffgcgvgzqvi") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-fluence-fork-libp2p-0.34.2 (c (n "fluence-fork-libp2p") (v "0.34.2") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.26.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "libp2p-core-derive") (r "^0.21.1") (d #t) (k 0) (p "fluence-fork-libp2p-core-derive")) (d (n "libp2p-deflate") (r "^0.26.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-deflate")) (d (n "libp2p-dns") (r "^0.26.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-dns")) (d (n "libp2p-floodsub") (r "^0.26.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-floodsub")) (d (n "libp2p-gossipsub") (r "^0.26.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-gossipsub")) (d (n "libp2p-identify") (r "^0.26.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-identify")) (d (n "libp2p-kad") (r "^0.27.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-kad")) (d (n "libp2p-mdns") (r "^0.27.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-mdns")) (d (n "libp2p-mplex") (r "^0.26.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-mplex")) (d (n "libp2p-noise") (r "^0.28.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-noise")) (d (n "libp2p-ping") (r "^0.26.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-ping")) (d (n "libp2p-plaintext") (r "^0.26.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-plaintext")) (d (n "libp2p-pnet") (r "^0.20.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-pnet")) (d (n "libp2p-request-response") (r "^0.9.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-request-response")) (d (n "libp2p-swarm") (r "^0.26.1") (d #t) (k 0) (p "fluence-fork-libp2p-swarm")) (d (n "libp2p-tcp") (r "^0.26.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-tcp")) (d (n "libp2p-uds") (r "^0.26.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-uds")) (d (n "libp2p-wasm-ext") (r "^0.26.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-wasm-ext")) (d (n "libp2p-websocket") (r "^0.27.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-websocket")) (d (n "libp2p-yamux") (r "^0.29.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-yamux")) (d (n "multiaddr") (r "^0.10.1") (d #t) (k 0) (p "fluence-fork-parity-multiaddr")) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.3") (f (quote ("io-util" "io-std" "stream" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "trust-graph") (r "^0.2.0") (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "1k6mg3jri8kh5jvj9va73q7800n3i99rl20n0xx4m6sgd7rbwzzi") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-std" "libp2p-tcp" "libp2p-tcp/async-std") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-std" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-fluence-fork-libp2p-0.36.0 (c (n "fluence-fork-libp2p") (v "0.36.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.1") (k 0) (p "fluence-fork-libp2p-core")) (d (n "libp2p-deflate") (r "^0.27.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-deflate")) (d (n "libp2p-dns") (r "^0.27.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-dns")) (d (n "libp2p-floodsub") (r "^0.28.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-floodsub")) (d (n "libp2p-gossipsub") (r "^0.29.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-gossipsub")) (d (n "libp2p-identify") (r "^0.28.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-identify")) (d (n "libp2p-kad") (r "^0.29.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-kad")) (d (n "libp2p-mdns") (r "^0.29.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-mdns")) (d (n "libp2p-mplex") (r "^0.27.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-mplex")) (d (n "libp2p-noise") (r "^0.29.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-noise")) (d (n "libp2p-ping") (r "^0.28.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-ping")) (d (n "libp2p-plaintext") (r "^0.27.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-plaintext")) (d (n "libp2p-pnet") (r "^0.20.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-pnet")) (d (n "libp2p-request-response") (r "^0.10.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-request-response")) (d (n "libp2p-swarm") (r "^0.28.0") (d #t) (k 0) (p "fluence-fork-libp2p-swarm")) (d (n "libp2p-swarm-derive") (r "^0.22.0") (d #t) (k 0) (p "fluence-fork-libp2p-swarm-derive")) (d (n "libp2p-tcp") (r "^0.27.1") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-tcp")) (d (n "libp2p-uds") (r "^0.27.0") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-uds")) (d (n "libp2p-wasm-ext") (r "^0.27.0") (o #t) (k 0) (p "fluence-fork-libp2p-wasm-ext")) (d (n "libp2p-websocket") (r "^0.28.0") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-websocket")) (d (n "libp2p-yamux") (r "^0.30.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-yamux")) (d (n "multiaddr") (r "^0.11.1") (d #t) (k 0) (p "fluence-fork-parity-multiaddr")) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "trust-graph") (r "^0.2.5") (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "0y3ljf1pwha9wv7bzclvrzvxa4hpplfxv4ck4jzyix45mnp2mryk") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-fluence-fork-libp2p-0.36.1 (c (n "fluence-fork-libp2p") (v "0.36.1") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.2") (k 0) (p "fluence-fork-libp2p-core")) (d (n "libp2p-deflate") (r "^0.27.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-deflate")) (d (n "libp2p-dns") (r "^0.27.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-dns")) (d (n "libp2p-floodsub") (r "^0.28.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-floodsub")) (d (n "libp2p-gossipsub") (r "^0.29.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-gossipsub")) (d (n "libp2p-identify") (r "^0.28.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-identify")) (d (n "libp2p-kad") (r "^0.29.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-kad")) (d (n "libp2p-mdns") (r "^0.29.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-mdns")) (d (n "libp2p-mplex") (r "^0.27.2") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-mplex")) (d (n "libp2p-noise") (r "^0.29.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-noise")) (d (n "libp2p-ping") (r "^0.28.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-ping")) (d (n "libp2p-plaintext") (r "^0.27.2") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-plaintext")) (d (n "libp2p-pnet") (r "^0.20.2") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-pnet")) (d (n "libp2p-request-response") (r "^0.10.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-request-response")) (d (n "libp2p-swarm") (r "^0.28.1") (d #t) (k 0) (p "fluence-fork-libp2p-swarm")) (d (n "libp2p-swarm-derive") (r "^0.22.1") (d #t) (k 0) (p "fluence-fork-libp2p-swarm-derive")) (d (n "libp2p-tcp") (r "^0.27.3") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-tcp")) (d (n "libp2p-uds") (r "^0.27.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-uds")) (d (n "libp2p-wasm-ext") (r "^0.27.1") (o #t) (k 0) (p "fluence-fork-libp2p-wasm-ext")) (d (n "libp2p-websocket") (r "^0.28.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-websocket")) (d (n "libp2p-yamux") (r "^0.30.2") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-yamux")) (d (n "multiaddr") (r "^0.11.2") (d #t) (k 0) (p "fluence-fork-parity-multiaddr")) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "trust-graph") (r "^0.2.7") (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "1vn5vg2rj86vcnj42vpqsaa498s8bhzvapzvlsgz6gwqgqg8wskp") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux"))))))

(define-public crate-fluence-fork-libp2p-0.36.2 (c (n "fluence-fork-libp2p") (v "0.36.2") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "atomic") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.2") (k 0) (p "fluence-fork-libp2p-core")) (d (n "libp2p-deflate") (r "^0.27.2") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-deflate")) (d (n "libp2p-dns") (r "^0.27.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-dns")) (d (n "libp2p-floodsub") (r "^0.28.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-floodsub")) (d (n "libp2p-gossipsub") (r "^0.29.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-gossipsub")) (d (n "libp2p-identify") (r "^0.28.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-identify")) (d (n "libp2p-kad") (r "^0.29.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-kad")) (d (n "libp2p-mdns") (r "^0.29.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-mdns")) (d (n "libp2p-mplex") (r "^0.27.2") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-mplex")) (d (n "libp2p-noise") (r "^0.29.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-noise")) (d (n "libp2p-ping") (r "^0.28.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-ping")) (d (n "libp2p-plaintext") (r "^0.27.2") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-plaintext")) (d (n "libp2p-pnet") (r "^0.20.2") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-pnet")) (d (n "libp2p-request-response") (r "^0.10.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-request-response")) (d (n "libp2p-swarm") (r "^0.28.1") (d #t) (k 0) (p "fluence-fork-libp2p-swarm")) (d (n "libp2p-swarm-derive") (r "^0.22.1") (d #t) (k 0) (p "fluence-fork-libp2p-swarm-derive")) (d (n "libp2p-tcp") (r "^0.27.3") (o #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-tcp")) (d (n "libp2p-uds") (r "^0.27.1") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-uds")) (d (n "libp2p-wasm-ext") (r "^0.27.1") (o #t) (k 0) (p "fluence-fork-libp2p-wasm-ext")) (d (n "libp2p-websocket") (r "^0.28.1") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"unknown\")))") (k 0) (p "fluence-fork-libp2p-websocket")) (d (n "libp2p-yamux") (r "^0.30.2") (o #t) (d #t) (k 0) (p "fluence-fork-libp2p-yamux")) (d (n "multiaddr") (r "^0.11.2") (d #t) (k 0) (p "fluence-fork-parity-multiaddr")) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0.1") (f (quote ("io-util" "io-std" "macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "trust-graph") (r "^0.2.7") (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "1jjq4s1y24p8q68y3lyc19l73yn25ygrvjjqn03cgjcsv331vj3c") (f (quote (("yamux" "libp2p-yamux") ("websocket" "libp2p-websocket") ("wasm-ext-websocket" "wasm-ext" "libp2p-wasm-ext/websocket") ("wasm-ext" "libp2p-wasm-ext") ("uds" "libp2p-uds") ("tcp-tokio" "libp2p-tcp" "libp2p-tcp/tokio") ("tcp-async-io" "libp2p-tcp" "libp2p-tcp/async-io") ("secp256k1" "libp2p-core/secp256k1") ("request-response" "libp2p-request-response") ("pnet" "libp2p-pnet") ("plaintext" "libp2p-plaintext") ("ping" "libp2p-ping") ("noise" "libp2p-noise") ("mplex" "libp2p-mplex") ("mdns" "libp2p-mdns") ("kad" "libp2p-kad") ("identify" "libp2p-identify") ("gossipsub" "libp2p-gossipsub") ("floodsub" "libp2p-floodsub") ("dns" "libp2p-dns") ("deflate" "libp2p-deflate") ("default" "deflate" "dns" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "request-response" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux"))))))

