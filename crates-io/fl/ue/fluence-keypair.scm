(define-module (crates-io fl ue fluence-keypair) #:use-module (crates-io))

(define-public crate-fluence-keypair-0.4.0 (c (n "fluence-keypair") (v "0.4.0") (d (list (d (n "asn1_der") (r "^0.6.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "ed25519") (r "^1.0.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.2") (f (quote ("secp256k1"))) (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "libsecp256k1") (r "^0.3.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "=1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "signature") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1nnkca9clb5g96ac6f4rjm7yk6z1h3zdcl453r619wngzsibsdw3")))

(define-public crate-fluence-keypair-0.6.0 (c (n "fluence-keypair") (v "0.6.0") (d (list (d (n "asn1_der") (r "^0.6.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "ed25519") (r "^1.0.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.31") (f (quote ("secp256k1"))) (k 0)) (d (n "libsecp256k1") (r "^0.3.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "signature") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1ly29y3qpdvwmxwl9p3payx24zcmxrrlx83f7iybhqxcmwldma89")))

(define-public crate-fluence-keypair-0.7.0 (c (n "fluence-keypair") (v "0.7.0") (d (list (d (n "asn1_der") (r "^0.6.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "ed25519") (r "^1.0.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.32") (f (quote ("secp256k1"))) (k 0)) (d (n "libsecp256k1") (r "^0.3.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "signature") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0hq4n8685fdbmyikiyxdd9c495lfl7gbapi8bsw8g47c0g4gfd31")))

(define-public crate-fluence-keypair-0.8.0 (c (n "fluence-keypair") (v "0.8.0") (d (list (d (n "asn1_der") (r "^0.6.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "ed25519") (r "^1.0.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.33.0") (f (quote ("secp256k1"))) (k 0)) (d (n "libsecp256k1") (r "^0.3.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "signature") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0rgzkmgi13f4ccly070z8wci78w8pjm3dhjwgsfr3xi4361f2mmc")))

(define-public crate-fluence-keypair-0.8.1 (c (n "fluence-keypair") (v "0.8.1") (d (list (d (n "asn1_der") (r "^0.6.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "ed25519") (r "^1.0.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.36") (f (quote ("secp256k1" "rsa"))) (k 0)) (d (n "libsecp256k1") (r "^0.7.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "signature") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "05qvdgzclxxmk9hg7rkm4v7g18b81zx68zsn88dy1kfbf3v89far")))

(define-public crate-fluence-keypair-0.9.0 (c (n "fluence-keypair") (v "0.9.0") (d (list (d (n "asn1_der") (r "^0.6.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "ed25519") (r "^1.0.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.38") (f (quote ("secp256k1" "rsa"))) (k 0)) (d (n "libsecp256k1") (r "^0.7.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "signature") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0whw9c12kil3rsz7cciwhnfhi4pf08mgwvl2g3mjps8wdy87bk2z")))

(define-public crate-fluence-keypair-0.10.0 (c (n "fluence-keypair") (v "0.10.0") (d (list (d (n "asn1_der") (r "^0.6.1") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.1.0") (f (quote ("peerid" "rsa" "ed25519" "secp256k1" "multihash" "peerid" "rsa" "ed25519" "secp256k1" "multihash"))) (k 0)) (d (n "libsecp256k1") (r "^0.7.1") (d #t) (k 0)) (d (n "multihash") (r "^0.18.0") (f (quote ("identity"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "14sqpmvrnmqazcm6fy4b7pmfr92s2lchqz9m22k1xmm4jzb2l194")))

(define-public crate-fluence-keypair-0.10.1 (c (n "fluence-keypair") (v "0.10.1") (d (list (d (n "asn1_der") (r "^0.6.1") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.1.0") (f (quote ("peerid" "rsa" "ed25519" "secp256k1" "multihash" "peerid" "rsa" "ed25519" "secp256k1" "multihash"))) (k 0)) (d (n "libsecp256k1") (r "^0.7.1") (d #t) (k 0)) (d (n "multihash") (r "^0.18.0") (f (quote ("identity"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0av6jn8sxlaffwfb4f56wk2qlfk16lpbbzaj0ix32sca7fmx0pmb")))

(define-public crate-fluence-keypair-0.10.2 (c (n "fluence-keypair") (v "0.10.2") (d (list (d (n "asn1_der") (r "^0.6.1") (d #t) (k 0)) (d (n "bs58") (r "^0.5.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.1") (f (quote ("peerid" "rsa" "ed25519" "secp256k1"))) (k 0)) (d (n "libsecp256k1") (r "^0.7.1") (d #t) (k 0)) (d (n "multihash") (r "^0.18.0") (f (quote ("identity"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1zj7jd9zyk3p5xbs6hqr9p8aj3jpmxhk2kr15akrzk4i3qaix8c8")))

(define-public crate-fluence-keypair-0.10.3 (c (n "fluence-keypair") (v "0.10.3") (d (list (d (n "asn1_der") (r "^0.6.1") (d #t) (k 0)) (d (n "bs58") (r "^0.5.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.1") (f (quote ("peerid" "rsa" "ed25519" "secp256k1"))) (k 0)) (d (n "libsecp256k1") (r "^0.7.1") (d #t) (k 0)) (d (n "multihash") (r "^0.18.0") (f (quote ("identity"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0iixqdz37yp7qc48pgl8nsahf460cazi45fslas148j61kqmlqqb")))

(define-public crate-fluence-keypair-0.10.4 (c (n "fluence-keypair") (v "0.10.4") (d (list (d (n "asn1_der") (r "^0.6.1") (d #t) (k 0)) (d (n "bs58") (r "^0.5.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("serde" "std" "rand_core"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.1") (f (quote ("peerid" "rsa" "ed25519" "secp256k1"))) (k 0)) (d (n "libsecp256k1") (r "^0.7.1") (d #t) (k 0)) (d (n "multihash") (r "^0.18.0") (f (quote ("identity"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "18ychjzphyvaznj1gg5fi3xdw9vgcfn5c7xnsbllczvmnvlcngi7")))

