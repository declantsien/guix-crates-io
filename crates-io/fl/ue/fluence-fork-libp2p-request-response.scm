(define-module (crates-io fl ue fluence-fork-libp2p-request-response) #:use-module (crates-io))

(define-public crate-fluence-fork-libp2p-request-response-0.1.1 (c (n "fluence-fork-libp2p-request-response") (v "0.1.1") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.20.0") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "libp2p-swarm") (r "^0.20.0") (d #t) (k 0) (p "fluence-fork-libp2p-swarm")) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "1pll41afadk97d99v706k99xswm8bj2z8dp6dbnqija78cqkrmm9")))

(define-public crate-fluence-fork-libp2p-request-response-0.9.0 (c (n "fluence-fork-libp2p-request-response") (v "0.9.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.26.0") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "libp2p-swarm") (r "^0.26.0") (d #t) (k 0) (p "fluence-fork-libp2p-swarm")) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "lru") (r "^0.6") (d #t) (k 0)) (d (n "minicbor") (r "^0.7") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.5") (f (quote ("std" "futures"))) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "1i7bgjsr5yran1w8w30rbmybnz7isncw9x0k22v75hriaswx401w")))

(define-public crate-fluence-fork-libp2p-request-response-0.9.1 (c (n "fluence-fork-libp2p-request-response") (v "0.9.1") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.26.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "libp2p-swarm") (r "^0.26.1") (d #t) (k 0) (p "fluence-fork-libp2p-swarm")) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "lru") (r "^0.6") (d #t) (k 0)) (d (n "minicbor") (r "^0.7") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.5") (f (quote ("std" "futures"))) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "0a01ik9pizzq5nlcfb09i8hfj4pkzbxifm975ws73hhch6zqcicr")))

(define-public crate-fluence-fork-libp2p-request-response-0.10.0 (c (n "fluence-fork-libp2p-request-response") (v "0.10.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "libp2p-swarm") (r "^0.28.0") (d #t) (k 0) (p "fluence-fork-libp2p-swarm")) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "lru") (r "^0.6") (d #t) (k 0)) (d (n "minicbor") (r "^0.7") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("std" "futures"))) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "0mzbpb0jd3csz2jb2902bwx6zzpf0wajdwlsi7bv4vsxx2dlnnaw")))

(define-public crate-fluence-fork-libp2p-request-response-0.10.1 (c (n "fluence-fork-libp2p-request-response") (v "0.10.1") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.2") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "libp2p-swarm") (r "^0.28.1") (d #t) (k 0) (p "fluence-fork-libp2p-swarm")) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "lru") (r "^0.6") (d #t) (k 0)) (d (n "minicbor") (r "^0.7") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("std" "futures"))) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)))) (h "0gyqcrmm39wz302lzkcrcmgyz4m7a15r9by62pb44l184w2h7z3p")))

