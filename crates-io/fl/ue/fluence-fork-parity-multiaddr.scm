(define-module (crates-io fl ue fluence-fork-parity-multiaddr) #:use-module (crates-io))

(define-public crate-fluence-fork-parity-multiaddr-0.9.1 (c (n "fluence-fork-parity-multiaddr") (v "0.9.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "multihash") (r "^0.11.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.4") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (k 0)))) (h "1bq3ylahm7mg4c1gqgqi2ahzf1dxn8v9y8rbgm5yq0i1zsx1gm06")))

(define-public crate-fluence-fork-parity-multiaddr-0.10.0 (c (n "fluence-fork-parity-multiaddr") (v "0.10.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "multihash") (r "^0.13") (f (quote ("std" "multihash-impl" "identity"))) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "0fn2zc9wl8547rjhf20h83qgr6n3sncwjwwvlg2gn5dlzjniw07f") (f (quote (("default" "url"))))))

(define-public crate-fluence-fork-parity-multiaddr-0.9.2 (c (n "fluence-fork-parity-multiaddr") (v "0.9.2") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "multihash") (r "^0.11.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.4") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (k 0)))) (h "0blx6xna5fsavgqi53kwqjxgpc9mvkrv99bj491r1p0z3d0lm3s8")))

(define-public crate-fluence-fork-parity-multiaddr-0.10.1 (c (n "fluence-fork-parity-multiaddr") (v "0.10.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "multihash") (r "^0.13") (f (quote ("std" "multihash-impl" "identity"))) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "05s4y1x73fhwbpcc7a7hmsxkxdy56dbmff72x5jxdy3cm5b31s1l") (f (quote (("default" "url"))))))

(define-public crate-fluence-fork-parity-multiaddr-0.11.1 (c (n "fluence-fork-parity-multiaddr") (v "0.11.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "multihash") (r "^0.13") (f (quote ("std" "multihash-impl" "identity"))) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "1h8rhj7mi0y0vdlqm3vcpc3z5maf020a9wa7r68hxdg7s6i12bg4") (f (quote (("default" "url"))))))

(define-public crate-fluence-fork-parity-multiaddr-0.11.2 (c (n "fluence-fork-parity-multiaddr") (v "0.11.2") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "multihash") (r "^0.13") (f (quote ("std" "multihash-impl" "identity"))) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "19qx3498zrwqch40v4sqjva02b01ayc7f5bgh14yyagizfm8s8h6") (f (quote (("default" "url"))))))

