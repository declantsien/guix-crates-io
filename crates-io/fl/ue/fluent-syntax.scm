(define-module (crates-io fl ue fluent-syntax) #:use-module (crates-io))

(define-public crate-fluent-syntax-0.1.0 (c (n "fluent-syntax") (v "0.1.0") (d (list (d (n "annotate-snippets") (r "^0.1") (f (quote ("color"))) (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)))) (h "1zd8q4nlvfdx0c1ajc32lwdyjm59ja2v4dnmlla08yr0gxp37pph")))

(define-public crate-fluent-syntax-0.1.1 (c (n "fluent-syntax") (v "0.1.1") (d (list (d (n "annotate-snippets") (r "^0.1") (f (quote ("color"))) (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)))) (h "1x65ag6ma09s5vzbls906j66sng2wm4rwq17mfziy3dssp8m44xl")))

(define-public crate-fluent-syntax-0.8.0 (c (n "fluent-syntax") (v "0.8.0") (d (list (d (n "assert-json-diff") (r "^0.2.1") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "glob") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "01nrqd20mpblslhg3v3vnc8khzrlyvnzy9fdafr0h3vfjiz9y9qq")))

(define-public crate-fluent-syntax-0.9.0 (c (n "fluent-syntax") (v "0.9.0") (d (list (d (n "assert-json-diff") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "05s6mm234ncqf38if9dh8g4a9f3m89830g0qsvvfkyj187ng0cyd")))

(define-public crate-fluent-syntax-0.9.1 (c (n "fluent-syntax") (v "0.9.1") (d (list (d (n "assert-json-diff") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0p681m3mklskp1ipnrmfw0p0rdsblyqx0z1vkyswfnyrcirl5rvv")))

(define-public crate-fluent-syntax-0.9.2 (c (n "fluent-syntax") (v "0.9.2") (d (list (d (n "assert-json-diff") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0fcbjj6pbczb2amzf8y83kinrl2x1mps05awy22z1l44szdkgscz")))

(define-public crate-fluent-syntax-0.9.3 (c (n "fluent-syntax") (v "0.9.3") (d (list (d (n "assert-json-diff") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1fli3p9ynwnx14y5922sv3q1m2f5r8fqin35w4kbzk2cs61pw3xc") (f (quote (("json" "serde" "serde_json") ("default"))))))

(define-public crate-fluent-syntax-0.10.0 (c (n "fluent-syntax") (v "0.10.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1ss9ipqg90mxvl23nxs4kx3frjhz39hk7494k9yz6f4fhm7kb2ck") (f (quote (("json" "serde" "serde_json") ("default"))))))

(define-public crate-fluent-syntax-0.10.1 (c (n "fluent-syntax") (v "0.10.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0lksa60k43ar9nbyrmhncd7j16ijzwpl864j17h60030iip03cgd") (f (quote (("json" "serde" "serde_json") ("default"))))))

(define-public crate-fluent-syntax-0.10.2 (c (n "fluent-syntax") (v "0.10.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "13hi1bvpzrs9pdi3gqhwdkc7flb659m472d2jq5x0cfj0l0wd0v3") (f (quote (("json" "serde" "serde_json") ("default"))))))

(define-public crate-fluent-syntax-0.10.3 (c (n "fluent-syntax") (v "0.10.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0svi3mhqgl37jz14f9qi8s6n0ydz6lzv8rvy59qqz2gafc1nckvq") (f (quote (("json" "serde" "serde_json") ("default"))))))

(define-public crate-fluent-syntax-0.11.0 (c (n "fluent-syntax") (v "0.11.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0y6ac7z7sbv51nsa6km5z8rkjj4nvqk91vlghq1ck5c3cjbyvay0") (f (quote (("json" "serde" "serde_json") ("default") ("all-benchmarks"))))))

(define-public crate-fluent-syntax-0.11.1 (c (n "fluent-syntax") (v "0.11.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0gd3cdvsx9ymbb8hijcsc9wyf8h1pbcbpsafg4ldba56ji30qlra") (f (quote (("json" "serde" "serde_json") ("default") ("all-benchmarks"))))))

