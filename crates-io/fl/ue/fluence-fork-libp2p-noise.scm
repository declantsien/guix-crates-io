(define-module (crates-io fl ue fluence-fork-libp2p-noise) #:use-module (crates-io))

(define-public crate-fluence-fork-libp2p-noise-0.21.0 (c (n "fluence-fork-libp2p-noise") (v "0.21.0") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.20.0") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.6.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0kgd0v0ki7h04zai892k3lqmjabjsv6q66is2br7wr39gwihj1k6")))

(define-public crate-fluence-fork-libp2p-noise-0.28.0 (c (n "fluence-fork-libp2p-noise") (v "0.28.0") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.26.0") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0xjwcbgywgplaa95x5jm2rbn5ipw1da8szgh0rjywmzx4sj9mv5j")))

(define-public crate-fluence-fork-libp2p-noise-0.21.1 (c (n "fluence-fork-libp2p-noise") (v "0.21.1") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.20.2") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.6.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0vlcvv07cj0zzpj5wnh6p0g5dfan88ki9a7f8xwnxf3qqnpraslp")))

(define-public crate-fluence-fork-libp2p-noise-0.28.1 (c (n "fluence-fork-libp2p-noise") (v "0.28.1") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.26.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "16jb9kfghjx27afvqzrk2vy0v11nb0v05y0nm4mdmnxhy7imlw0p")))

(define-public crate-fluence-fork-libp2p-noise-0.29.0 (c (n "fluence-fork-libp2p-noise") (v "0.29.0") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-build") (r "^0.7") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "16af1v15igrjvhxlar59pc5vnqq39bhb4kvxsdrsaj82d1v1pxca")))

(define-public crate-fluence-fork-libp2p-noise-0.29.1 (c (n "fluence-fork-libp2p-noise") (v "0.29.1") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.2") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-build") (r "^0.7") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("default-resolver"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "snow") (r "^0.7.1") (f (quote ("ring-resolver"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0ha9ia2940r71lf7l79zsk8w1h52g4qyb1dhlxnxw71fhh9scg9j")))

