(define-module (crates-io fl ue fluence-fork-libp2p-floodsub) #:use-module (crates-io))

(define-public crate-fluence-fork-libp2p-floodsub-0.20.0 (c (n "fluence-fork-libp2p-floodsub") (v "0.20.0") (d (list (d (n "cuckoofilter") (r "^0.3.2") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.20.0") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "libp2p-swarm") (r "^0.20.0") (d #t) (k 0) (p "fluence-fork-libp2p-swarm")) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6") (d #t) (k 1)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)))) (h "1swv6wksq67zkk07hcndysnah4gyhsr9721rk1zlmv0rszswbc3w")))

(define-public crate-fluence-fork-libp2p-floodsub-0.26.0 (c (n "fluence-fork-libp2p-floodsub") (v "0.26.0") (d (list (d (n "cuckoofilter") (r "^0.5.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.26.0") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "libp2p-swarm") (r "^0.26.0") (d #t) (k 0) (p "fluence-fork-libp2p-swarm")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6") (d #t) (k 1)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)))) (h "0m64i00ykfibby00k8mxbcliibaayj4r8axrk5l7cdz27p3ax5s6")))

(define-public crate-fluence-fork-libp2p-floodsub-0.20.1 (c (n "fluence-fork-libp2p-floodsub") (v "0.20.1") (d (list (d (n "cuckoofilter") (r "^0.3.2") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.20.2") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "libp2p-swarm") (r "^0.20.2") (d #t) (k 0) (p "fluence-fork-libp2p-swarm")) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6") (d #t) (k 1)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)))) (h "0hzh7znw6fx6afbxr0h0zh06dx49164w49w2mnbp6x12c5yxyznk")))

(define-public crate-fluence-fork-libp2p-floodsub-0.26.1 (c (n "fluence-fork-libp2p-floodsub") (v "0.26.1") (d (list (d (n "cuckoofilter") (r "^0.5.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.26.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "libp2p-swarm") (r "^0.26.1") (d #t) (k 0) (p "fluence-fork-libp2p-swarm")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6") (d #t) (k 1)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)))) (h "0a7fmy7rsppv4hf4a2yzyrvixsahrvrn737cvaampiycfqwwkmka")))

(define-public crate-fluence-fork-libp2p-floodsub-0.28.0 (c (n "fluence-fork-libp2p-floodsub") (v "0.28.0") (d (list (d (n "cuckoofilter") (r "^0.5.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "libp2p-swarm") (r "^0.28.0") (d #t) (k 0) (p "fluence-fork-libp2p-swarm")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-build") (r "^0.7") (d #t) (k 1)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)))) (h "1z6056vs30afpcgffa6s7q4by0hhjhfr0xzlsvczg5v9bw4zpq6j")))

(define-public crate-fluence-fork-libp2p-floodsub-0.28.1 (c (n "fluence-fork-libp2p-floodsub") (v "0.28.1") (d (list (d (n "cuckoofilter") (r "^0.5.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.2") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "libp2p-swarm") (r "^0.28.1") (d #t) (k 0) (p "fluence-fork-libp2p-swarm")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-build") (r "^0.7") (d #t) (k 1)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)))) (h "12s7y8sc2x7z95mjniapfnvcxyfvhhyngn9g30k9nd7j4nrs2hv4")))

