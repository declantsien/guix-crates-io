(define-module (crates-io fl ue fluence-identity) #:use-module (crates-io))

(define-public crate-fluence-identity-0.2.1 (c (n "fluence-identity") (v "0.2.1") (d (list (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "ed25519") (r "^1.0.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (d #t) (k 0)) (d (n "signature") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "1365k7bfgp100hwfh7yzygz9gyy6sbh81xnkxq4k4bslr2kjg59m")))

(define-public crate-fluence-identity-0.2.2 (c (n "fluence-identity") (v "0.2.2") (d (list (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "ed25519") (r "^1.0.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (d #t) (k 0)) (d (n "signature") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "1nxl6a0a09g6fvp6nf0cl9zq7wn5vjnsq8x5vcp4pqki9903wjfx")))

(define-public crate-fluence-identity-0.2.3 (c (n "fluence-identity") (v "0.2.3") (d (list (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "ed25519") (r "^1.0.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (d #t) (k 0)) (d (n "signature") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "1ff045phwwavvx0wxm9pms6lscrbvs28jc2zww3gg09zbjzid6il")))

(define-public crate-fluence-identity-0.2.4 (c (n "fluence-identity") (v "0.2.4") (d (list (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "ed25519") (r "^1.0.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (d #t) (k 0)) (d (n "signature") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "1q8lnmfcbqh1cg4vzlparwgbdzcsfmjrwmnnxhz5icizm9kx112f")))

(define-public crate-fluence-identity-0.2.5 (c (n "fluence-identity") (v "0.2.5") (d (list (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "ed25519") (r "^1.0.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (d #t) (k 0)) (d (n "signature") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "1cjvrzdw3rhl70kn6q1fxb7hjsnjh9kxqqxpwbz62wr48j68n3w7")))

(define-public crate-fluence-identity-0.2.6 (c (n "fluence-identity") (v "0.2.6") (d (list (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "ed25519") (r "^1.0.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (d #t) (k 0)) (d (n "signature") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "1xsfm5zsim4xzrwcvx0vdsshi8f3f42pkd6swdjiywx17xm9xcpw")))

(define-public crate-fluence-identity-0.2.7 (c (n "fluence-identity") (v "0.2.7") (d (list (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "ed25519") (r "^1.0.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (d #t) (k 0)) (d (n "signature") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "0a7ngh11a47mr2jsr514shg1qnl1fcy9d0bniv65pv2cwc9axgw2")))

(define-public crate-fluence-identity-0.3.0 (c (n "fluence-identity") (v "0.3.0") (d (list (d (n "asn1_der") (r "^0.6.1") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "ed25519") (r "^1.0.3") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "libsecp256k1") (r "^0.3.5") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "ring") (r "^0.16.9") (f (quote ("alloc" "std"))) (k 0)) (d (n "serde") (r "=1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "signature") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0hr5vfs7jyhqx17bnizvfgfb5d0qxz58qc4znaaklg3sjhg5kz0x")))

