(define-module (crates-io fl ue fluence-fork-libp2p-uds) #:use-module (crates-io))

(define-public crate-fluence-fork-libp2p-uds-0.20.0 (c (n "fluence-fork-libp2p-uds") (v "0.20.0") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0)) (d (n "libp2p-core") (r "^0.20.0") (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4.1") (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("uds"))) (o #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0)))) (h "0cdk5czlpns59148wv4fskdl0aq3pvah64l8ax684dh8zh0mysvj") (f (quote (("default" "async-std"))))))

(define-public crate-fluence-fork-libp2p-uds-0.26.0 (c (n "fluence-fork-libp2p-uds") (v "0.26.0") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0)) (d (n "libp2p-core") (r "^0.26.0") (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4.1") (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 2)) (d (n "tokio") (r "^0.3") (f (quote ("net"))) (o #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0)))) (h "0p4lshfzhmmxxb1468981744ipxc87km1159sfxxq5lr03w11b4k") (f (quote (("default" "async-std"))))))

(define-public crate-fluence-fork-libp2p-uds-0.26.1 (c (n "fluence-fork-libp2p-uds") (v "0.26.1") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0)) (d (n "libp2p-core") (r "^0.26.1") (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4.1") (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 2)) (d (n "tokio") (r "^0.3") (f (quote ("net"))) (o #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0)))) (h "1rf6m3zq3y5pc1g0gwal6qvg0ncfzdnl6cx5a3ikics063k6xjlc") (f (quote (("default" "async-std"))))))

(define-public crate-fluence-fork-libp2p-uds-0.27.0 (c (n "fluence-fork-libp2p-uds") (v "0.27.0") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0)) (d (n "libp2p-core") (r "^0.27.1") (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4.1") (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 2)) (d (n "tokio") (r "^1.0.1") (f (quote ("net"))) (o #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0)))) (h "1gjp31lim7wpzbzwhs3h6pwnjmjzmkhg038xfq1fqvvvfvlxyin5") (f (quote (("default" "async-std"))))))

(define-public crate-fluence-fork-libp2p-uds-0.27.1 (c (n "fluence-fork-libp2p-uds") (v "0.27.1") (d (list (d (n "async-std") (r "^1.6.2") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0)) (d (n "libp2p-core") (r "^0.27.1") (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4.1") (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 2)) (d (n "tokio") (r "^1.0.1") (f (quote ("net"))) (o #t) (t "cfg(all(unix, not(target_os = \"emscripten\")))") (k 0)))) (h "0aa93anrpcbxvarcx158d0a3prplhkqx5b1y1k9kj0al93nj4mz0") (f (quote (("default" "async-std"))))))

