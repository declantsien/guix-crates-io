(define-module (crates-io fl ue fluence-fork-libp2p-mdns) #:use-module (crates-io))

(define-public crate-fluence-fork-libp2p-mdns-0.20.0 (c (n "fluence-fork-libp2p-mdns") (v "0.20.0") (d (list (d (n "async-std") (r "^1.6.2") (d #t) (k 0)) (d (n "data-encoding") (r "^2.0") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.20.0") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "libp2p-swarm") (r "^0.20.0") (d #t) (k 0) (p "fluence-fork-libp2p-swarm")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.4") (d #t) (k 0)))) (h "05n2aqx27ylw5rg9dcqmhd19fhf92y545wq500fwjsyvgw8cgrkf")))

(define-public crate-fluence-fork-libp2p-mdns-0.27.0 (c (n "fluence-fork-libp2p-mdns") (v "0.27.0") (d (list (d (n "async-io") (r "^1.3.0") (d #t) (k 0)) (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.1") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (k 2)) (d (n "if-watch") (r "^0.1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.26.0") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "libp2p-swarm") (r "^0.26.0") (d #t) (k 0) (p "fluence-fork-libp2p-swarm")) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.5.0") (d #t) (k 0)) (d (n "socket2") (r "^0.3.17") (f (quote ("reuseport"))) (d #t) (k 0)) (d (n "tokio") (r "^0.3.4") (f (quote ("rt" "rt-multi-thread"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "11xin7jk91gx6h249j37d4na9kjskd1g48x94d1vr2x3sppmvzjm")))

(define-public crate-fluence-fork-libp2p-mdns-0.27.1 (c (n "fluence-fork-libp2p-mdns") (v "0.27.1") (d (list (d (n "async-io") (r "^1.3.0") (d #t) (k 0)) (d (n "async-std") (r "^1.7.0") (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.1") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (k 2)) (d (n "if-watch") (r "^0.1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.26.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "libp2p-swarm") (r "^0.26.1") (d #t) (k 0) (p "fluence-fork-libp2p-swarm")) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.5.0") (d #t) (k 0)) (d (n "socket2") (r "^0.3.17") (f (quote ("reuseport"))) (d #t) (k 0)) (d (n "tokio") (r "^0.3.4") (f (quote ("rt" "rt-multi-thread"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "0apxvhddqpr798n8zhkl93l5v36v4w9vkjigrkz2fsgb0mphcsgp")))

(define-public crate-fluence-fork-libp2p-mdns-0.29.0 (c (n "fluence-fork-libp2p-mdns") (v "0.29.0") (d (list (d (n "async-io") (r "^1.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (k 2)) (d (n "if-watch") (r "^0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "libp2p-swarm") (r "^0.28.0") (d #t) (k 0) (p "fluence-fork-libp2p-swarm")) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "socket2") (r "^0.3.19") (f (quote ("reuseport"))) (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("rt" "rt-multi-thread"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "0518lyjcjpr6d0nnshwp1r3acm8mgzzvfw6jgs2mxpwpz4swki1y")))

(define-public crate-fluence-fork-libp2p-mdns-0.29.1 (c (n "fluence-fork-libp2p-mdns") (v "0.29.1") (d (list (d (n "async-io") (r "^1.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "dns-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (k 2)) (d (n "if-watch") (r "^0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.2") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "libp2p-swarm") (r "^0.28.1") (d #t) (k 0) (p "fluence-fork-libp2p-swarm")) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "socket2") (r "^0.3.19") (f (quote ("reuseport"))) (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("rt" "rt-multi-thread"))) (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 0)))) (h "0j9bpd2fynxbh964wkg1sl2mxgsryf0k7ykbl657mg8dkjcwxh71")))

