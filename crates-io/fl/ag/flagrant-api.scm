(define-module (crates-io fl ag flagrant-api) #:use-module (crates-io))

(define-public crate-flagrant-api-0.0.2 (c (n "flagrant-api") (v "0.0.2") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "axum") (r "^0.7") (d #t) (k 0)) (d (n "axum-extra") (r "^0.9.2") (f (quote ("typed-header"))) (d #t) (k 0)) (d (n "flagrant") (r "^0.0.2") (d #t) (k 0)) (d (n "flagrant-types") (r "^0.0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.4") (f (quote ("sqlite" "macros" "runtime-tokio-rustls"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (f (quote ("util" "timeout" "load-shed" "limit"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.5.2") (f (quote ("add-extension" "compression-full" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.15") (f (quote ("registry" "env-filter"))) (d #t) (k 0)))) (h "1za3xyi9bqkw06xzbbv8y4lb0xj2p7s6i3v96xvfld3rkx04h877")))

