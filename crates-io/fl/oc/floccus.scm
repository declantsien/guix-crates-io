(define-module (crates-io fl oc floccus) #:use-module (crates-io))

(define-public crate-floccus-0.1.0 (c (n "floccus") (v "0.1.0") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.28") (d #t) (k 0)))) (h "1hl8vshaivlxyv5rymdnc03cxqc0facq4nc8q44aqg4gmqwa3cpz")))

(define-public crate-floccus-0.2.1 (c (n "floccus") (v "0.2.1") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.28") (d #t) (k 0)))) (h "0i3wczav035mazblrgdwlj6frq6x7haki9ki0c0swzsc9mijzvwr") (f (quote (("double_precision"))))))

(define-public crate-floccus-0.2.2 (c (n "floccus") (v "0.2.2") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.28") (d #t) (k 0)))) (h "0b6az4m4i4z3fxnc44ggqvdidq1a1zdnz7xgvgzwq7pfpicjb617") (f (quote (("double_precision"))))))

(define-public crate-floccus-0.2.3 (c (n "floccus") (v "0.2.3") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "04x90kp77qp0zhk3fga9a4km2jqp31rd0571dc4nm79qbivmdjcx") (f (quote (("double_precision"))))))

(define-public crate-floccus-0.2.4 (c (n "floccus") (v "0.2.4") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0w6n02lyw9dqnp76lc14hg1b5pl3wqjsas4byb1kz3c9rn78hkc4") (f (quote (("double_precision"))))))

(define-public crate-floccus-0.3.5 (c (n "floccus") (v "0.3.5") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 0)) (d (n "floccus-proc") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "07gljkp3650xvd0dx0bjq71650c98xk6z89vircc3sirhjzz8f7n") (f (quote (("double_precision") ("debug" "floccus-proc"))))))

(define-public crate-floccus-0.3.6 (c (n "floccus") (v "0.3.6") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 0)) (d (n "floccus-proc") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0q1aybdc3vkidfw1mwjiqg6rwj76igskg0ak0hhmhf64ld0byj0g") (f (quote (("double_precision") ("debug" "floccus-proc"))))))

(define-public crate-floccus-0.3.7 (c (n "floccus") (v "0.3.7") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 0)) (d (n "floccus-proc") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "181a9jlsjhyhllw1r0kfrdkfs9iklbrjz6nilldlwjby1icjb4gz") (f (quote (("double_precision") ("debug" "floccus-proc"))))))

(define-public crate-floccus-0.4.0-alpha.1 (c (n "floccus") (v "0.4.0-alpha.1") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9") (d #t) (k 0)) (d (n "floccus-proc") (r "^0.3.0") (d #t) (k 0)) (d (n "itertools") (r "^0") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uom") (r "^0") (f (quote ("si" "std" "autoconvert" "f32" "f64"))) (k 0)))) (h "14sfka0rqr6nqc23xywm5j2i36y7l1dmp47vi9pcn6dnmym8b3g1") (f (quote (("parallel" "array" "ndarray/rayon" "rayon") ("double_precision") ("default") ("debug" "log") ("array" "ndarray"))))))

(define-public crate-floccus-0.4.0-alpha.2 (c (n "floccus") (v "0.4.0-alpha.2") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9") (d #t) (k 0)) (d (n "floccus-proc") (r "^0.3.0") (d #t) (k 0)) (d (n "itertools") (r "^0") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uom") (r "^0") (f (quote ("si" "std" "autoconvert" "f32" "f64"))) (k 0)))) (h "1qcdilvyjnbi3zbk80s0gd5sadmiagy9xyd7lbvdy5gvifkcjsnk") (f (quote (("parallel" "array" "ndarray/rayon" "rayon") ("double_precision") ("default") ("debug" "log") ("array" "ndarray"))))))

(define-public crate-floccus-0.4.0-alpha.3 (c (n "floccus") (v "0.4.0-alpha.3") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9") (d #t) (k 0)) (d (n "floccus-proc") (r "^0.3.0") (d #t) (k 0)) (d (n "itertools") (r "^0") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uom") (r "^0") (f (quote ("si" "std" "autoconvert" "f32" "f64"))) (k 0)))) (h "14q96l7jmwz67lxyvj1f25mvrsaf3g62vbsbax2d6li6nlynavii") (f (quote (("double_precision") ("default")))) (s 2) (e (quote (("parallel" "array" "ndarray/rayon" "dep:rayon") ("debug" "dep:log") ("array" "dep:ndarray"))))))

