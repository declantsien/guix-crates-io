(define-module (crates-io fl ne flnet-libc) #:use-module (crates-io))

(define-public crate-flnet-libc-0.5.0 (c (n "flnet-libc") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flnet") (r "^0.5") (d #t) (k 0)) (d (n "flutils") (r "^0.5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.17") (f (quote ("native-tls"))) (d #t) (k 0)) (d (n "webrtc") (r "^0.4") (d #t) (k 0)))) (h "0cnjxr6rnfwfjfsyj1iw93l56ks41nb0zpcnrknbikwr2509jh51")))

(define-public crate-flnet-libc-0.6.0 (c (n "flnet-libc") (v "0.6.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flarch") (r "^0.6") (d #t) (k 0)) (d (n "flmodules") (r "^0.6") (d #t) (k 0)) (d (n "flnet") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.17") (f (quote ("native-tls"))) (d #t) (k 0)) (d (n "webrtc") (r "^0.4") (d #t) (k 0)))) (h "0blxqig8lwcy8cvrpbd9zrximdkrxvy06v3js2j2yyynvmj86cmh")))

