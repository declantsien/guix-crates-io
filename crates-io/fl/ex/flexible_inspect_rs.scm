(define-module (crates-io fl ex flexible_inspect_rs) #:use-module (crates-io))

(define-public crate-flexible_inspect_rs-2.0.0 (c (n "flexible_inspect_rs") (v "2.0.0") (d (list (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.72") (d #t) (k 0)) (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.180") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 2)) (d (n "time") (r "^0.3.25") (f (quote ("local-offset" "formatting"))) (d #t) (k 0)))) (h "10wc8q3ny75zb6l8xk7a7zpg9yv9n5nyj84jc0lc9fwrw7as8a2r") (f (quote (("log_rust") ("export_to_other_languages") ("default" "log_rust")))) (s 2) (e (quote (("serde" "dep:serde" "indexmap/serde"))))))

