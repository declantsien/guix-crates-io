(define-module (crates-io fl ex flexgen) #:use-module (crates-io))

(define-public crate-flexgen-0.1.0 (c (n "flexgen") (v "0.1.0") (d (list (d (n "flexstr") (r "^0.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (d #t) (k 0)))) (h "07cn94y7gwyfqc5f6fr7k642d642pb5w1iqqwz75srd04in03p27")))

(define-public crate-flexgen-0.2.0 (c (n "flexgen") (v "0.2.0") (d (list (d (n "flexstr") (r "^0.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "quote-doctest") (r "^0.3.2") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rust-format") (r "^0.3.4") (f (quote ("post_process" "pretty_please" "token_stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("clone-impls" "extra-traits" "full" "parsing" "printing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "use-builder") (r "^0.1") (d #t) (k 0)))) (h "037aachxg9r0sk2v2glj3q6arpw5d29cw9v4jqqmgp3lnq51wdbp")))

(define-public crate-flexgen-0.2.1 (c (n "flexgen") (v "0.2.1") (d (list (d (n "flexstr") (r "^0.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "quote-doctest") (r "^0.3.2") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rust-format") (r "^0.3.4") (f (quote ("post_process" "pretty_please" "token_stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("clone-impls" "extra-traits" "full" "parsing" "printing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "use-builder") (r "^0.1") (d #t) (k 0)))) (h "18cfqbhgxcpz6cd56v4zsbvqmyrfhqavgryfz1b5vgpyk1miszlm")))

(define-public crate-flexgen-0.3.0 (c (n "flexgen") (v "0.3.0") (d (list (d (n "flexstr") (r "^0.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "quote-doctest") (r "^0.3.2") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rust-format") (r "^0.3.4") (f (quote ("post_process" "pretty_please" "token_stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("clone-impls" "extra-traits" "full" "parsing" "printing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "use-builder") (r "^0.1") (d #t) (k 0)))) (h "02flwb8kndh21raaiijiyj436mak7z333gdz4h1z1iyk7n3p7mdy")))

(define-public crate-flexgen-0.4.0 (c (n "flexgen") (v "0.4.0") (d (list (d (n "flexstr") (r "^0.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "quote-doctest") (r "^0.3.2") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rust-format") (r "^0.3.4") (f (quote ("post_process" "pretty_please" "token_stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("clone-impls" "extra-traits" "full" "parsing" "printing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "use-builder") (r "^0.1") (d #t) (k 0)))) (h "0wv3d98yjw0jwj7b1x488pfa58bv876h4spdl8kv1x4xlv4c8x95")))

(define-public crate-flexgen-0.4.1 (c (n "flexgen") (v "0.4.1") (d (list (d (n "flexstr") (r "^0.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "quote-doctest") (r "^0.3.2") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rust-format") (r "^0.3.4") (f (quote ("post_process" "pretty_please" "token_stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("clone-impls" "extra-traits" "full" "parsing" "printing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "use-builder") (r "^0.1") (d #t) (k 0)))) (h "17sr1r85fgqj7fhikl2afal8x6ympwaz2gsfa306azyp41b8rnrr")))

(define-public crate-flexgen-0.4.2 (c (n "flexgen") (v "0.4.2") (d (list (d (n "flexstr") (r "^0.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "quote-doctest") (r "^0.3.2") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rust-format") (r "^0.3.4") (f (quote ("post_process" "pretty_please" "token_stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("clone-impls" "extra-traits" "full" "parsing" "printing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "use-builder") (r "^0.1") (d #t) (k 0)))) (h "14pfiy8f5c7zbg3nbdgsypsbb3ravbvpgfaq7dlc3fwrs4x2ln98")))

(define-public crate-flexgen-0.4.3 (c (n "flexgen") (v "0.4.3") (d (list (d (n "flexstr") (r "^0.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "quote-doctest") (r "^0.3.2") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rust-format") (r "^0.3.4") (f (quote ("post_process" "pretty_please" "token_stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("clone-impls" "extra-traits" "full" "parsing" "printing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "use-builder") (r "^0.1") (d #t) (k 0)))) (h "1mvnnywcvrlaar05vrwizmyp0dy4a5llwpfb6qxh1f5gg6qvqiba")))

(define-public crate-flexgen-0.4.4 (c (n "flexgen") (v "0.4.4") (d (list (d (n "flexstr") (r "^0.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "quote-doctest") (r "^0.3.2") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rust-format") (r "^0.3.4") (f (quote ("post_process" "pretty_please" "token_stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("clone-impls" "extra-traits" "full" "parsing" "printing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "use-builder") (r "^0.1") (d #t) (k 0)))) (h "073c7hhkxcz3ksydfhrh4xg88ibl04lap65kqqrslffqh0mgvzfy")))

(define-public crate-flexgen-0.4.5 (c (n "flexgen") (v "0.4.5") (d (list (d (n "flexstr") (r "^0.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "quote-doctest") (r "^0.3.2") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rust-format") (r "^0.3.4") (f (quote ("post_process" "pretty_please" "token_stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("clone-impls" "extra-traits" "full" "parsing" "printing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "use-builder") (r "^0.1") (d #t) (k 0)))) (h "12iblvy4kwhq5f01fqzm91swlyjh6q2dzmxr1avsddygsjb2cajv")))

