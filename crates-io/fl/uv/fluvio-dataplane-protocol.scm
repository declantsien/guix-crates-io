(define-module (crates-io fl uv fluvio-dataplane-protocol) #:use-module (crates-io))

(define-public crate-fluvio-dataplane-protocol-0.1.0 (c (n "fluvio-dataplane-protocol") (v "0.1.0") (d (list (d (n "bytes") (r "^0.5.3") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.5") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.1.0") (d #t) (k 0)) (d (n "fluvio-protocol") (r "^0.2.0") (f (quote ("derive" "api" "store"))) (d #t) (k 0)) (d (n "fluvio-socket") (r "^0.1.0") (d #t) (k 2)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)))) (h "1394nxs4i7586rw23zmg5c1rxrs0xvr5ydmpf5fvmi608v4q03w2")))

(define-public crate-fluvio-dataplane-protocol-0.1.1 (c (n "fluvio-dataplane-protocol") (v "0.1.1") (d (list (d (n "bytes") (r "^0.5.3") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.5") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.1.0") (d #t) (k 0)) (d (n "fluvio-protocol") (r "^0.2.0") (f (quote ("derive" "api" "store"))) (d #t) (k 0)) (d (n "fluvio-socket") (r "^0.3.0") (d #t) (k 2)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)))) (h "0c2ldfav8gji43lcc5ri9vampcgj6xbszs99ya56jg1d0ikcxcny")))

(define-public crate-fluvio-dataplane-protocol-0.1.2 (c (n "fluvio-dataplane-protocol") (v "0.1.2") (d (list (d (n "bytes") (r "^0.5.3") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.5") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.1.0") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.1.0") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.2.0") (f (quote ("derive" "api" "store"))) (d #t) (k 0)) (d (n "fluvio-socket") (r "^0.4.0") (d #t) (k 2)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)))) (h "1xb9jgdk6i6xkvndw80bj13biqap96as7m1dg0k0jq19647c9c6m")))

(define-public crate-fluvio-dataplane-protocol-0.1.3 (c (n "fluvio-dataplane-protocol") (v "0.1.3") (d (list (d (n "bytes") (r "^0.5.3") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.5") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.1.0") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.1.0") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.2.0") (f (quote ("derive" "api" "store"))) (d #t) (k 0)) (d (n "fluvio-socket") (r "^0.4.0") (d #t) (k 2)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)))) (h "1pwa65ibf9vf647snc1wa2ibxfvb2rfk15w5pq33w7fb1ib7g7jg")))

(define-public crate-fluvio-dataplane-protocol-0.1.4 (c (n "fluvio-dataplane-protocol") (v "0.1.4") (d (list (d (n "bytes") (r "^0.5.3") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.5") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.1.0") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.1.0") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.2.0") (f (quote ("derive" "api" "store"))) (d #t) (k 0)) (d (n "fluvio-socket") (r "^0.4.0") (d #t) (k 2)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)))) (h "1s7rnznn9dk3n789xs0x5f2p2jbyvanmr9d841vjr3csx4gprsv4")))

(define-public crate-fluvio-dataplane-protocol-0.1.5 (c (n "fluvio-dataplane-protocol") (v "0.1.5") (d (list (d (n "bytes") (r "^0.5.3") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.5") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.1.0") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.1.0") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.2.0") (f (quote ("derive" "api" "store"))) (d #t) (k 0)) (d (n "fluvio-socket") (r "^0.4.0") (d #t) (k 2)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)))) (h "0yyjl9llrn6iq9x3gain016dgf4mswxyx8j5szflnz573krwpanj")))

(define-public crate-fluvio-dataplane-protocol-0.2.0 (c (n "fluvio-dataplane-protocol") (v "0.2.0") (d (list (d (n "bytes") (r "^0.5.3") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.5") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.1.0") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.1.0") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.3.0") (f (quote ("derive" "api" "store"))) (d #t) (k 0)) (d (n "fluvio-socket") (r "^0.5.0") (d #t) (k 2)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)))) (h "0q5rmp2kvnhsgg7iv8a17lhrsd55yrzvg2yhl1imih02zy5yx47l")))

(define-public crate-fluvio-dataplane-protocol-0.3.0 (c (n "fluvio-dataplane-protocol") (v "0.3.0") (d (list (d (n "bytes") (r "^0.5.3") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.5") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.1.0") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.1.0") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.3.0") (f (quote ("derive" "api" "store"))) (d #t) (k 0)) (d (n "fluvio-socket") (r "^0.6.0") (d #t) (k 2)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)))) (h "13xb49jfb3zy39w7bb7d72vrn6ljr6dsgpmkb9ic29hxvj5mrnb7")))

(define-public crate-fluvio-dataplane-protocol-0.4.0 (c (n "fluvio-dataplane-protocol") (v "0.4.0") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.5") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.2.0") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.2.0") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.4.0") (f (quote ("derive" "api" "store"))) (d #t) (k 0)) (d (n "fluvio-socket") (r "^0.7.0") (d #t) (k 2)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)))) (h "18fm2vqpcygy91l39pzwnsd8x6lldr9w64g48a6xi0mc7sz0knmx")))

(define-public crate-fluvio-dataplane-protocol-0.4.1 (c (n "fluvio-dataplane-protocol") (v "0.4.1") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.5") (d #t) (k 0)) (d (n "derive_builder") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "fluvio-future") (r "^0.2.0") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.2.0") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.4.0") (f (quote ("derive" "api"))) (d #t) (k 0)) (d (n "fluvio-socket") (r "^0.7.0") (d #t) (k 2)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "0s4x6fx68qm2cgd75pgqag1jbxi37xvhqc8h5g7x2mkvgdragfin") (f (quote (("fixture" "derive_builder") ("file" "fluvio-protocol/store") ("default" "file"))))))

(define-public crate-fluvio-dataplane-protocol-0.5.0 (c (n "fluvio-dataplane-protocol") (v "0.5.0") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.5") (d #t) (k 0)) (d (n "derive_builder") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.0") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.0") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.5.0") (f (quote ("derive" "api"))) (d #t) (k 0)) (d (n "fluvio-socket") (r "^0.8.0") (d #t) (k 2)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "0gkq1bzd98dyf2ykrvgf70dlnq2lai8j5zasj3b6zc4d69pppn9r") (f (quote (("fixture" "derive_builder") ("file" "fluvio-protocol/store") ("default" "file"))))))

(define-public crate-fluvio-dataplane-protocol-0.5.1 (c (n "fluvio-dataplane-protocol") (v "0.5.1") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.5") (d #t) (k 0)) (d (n "derive_builder") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.1") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.1") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.5.1") (f (quote ("derive" "api"))) (d #t) (k 0)) (d (n "fluvio-socket") (r "^0.8.1") (d #t) (k 2)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "1jr8cqh9ij0d1h27api82zxqa7vjkp60ibqlm0zhg59b3if56yd5") (f (quote (("fixture" "derive_builder") ("file" "fluvio-protocol/store"))))))

(define-public crate-fluvio-dataplane-protocol-0.6.0 (c (n "fluvio-dataplane-protocol") (v "0.6.0") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.5") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (k 0)) (d (n "fluvio-future") (r "^0.3.1") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.1") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.6") (f (quote ("derive" "api"))) (d #t) (k 0)) (d (n "fluvio-socket") (r "^0.9") (d #t) (k 2)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "198n9q9n6h5km9vaya515361hv82l40bgr2xs745dp7w3hakgd7i") (f (quote (("fixture" "derive_builder") ("file" "fluvio-protocol/store"))))))

(define-public crate-fluvio-dataplane-protocol-0.6.1 (c (n "fluvio-dataplane-protocol") (v "0.6.1") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.5") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (k 0)) (d (n "fluvio-future") (r "^0.3.1") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.1") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.6") (f (quote ("derive" "api"))) (d #t) (k 0)) (d (n "fluvio-socket") (r "^0.9") (d #t) (k 2)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "1kxy31793x6q4bj83kpwdwiq78kj4mcdcnpvgs64xaqk789jffri") (f (quote (("fixture" "derive_builder") ("file" "fluvio-protocol/store"))))))

(define-public crate-fluvio-dataplane-protocol-0.6.2 (c (n "fluvio-dataplane-protocol") (v "0.6.2") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.5") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (k 0)) (d (n "fluvio-future") (r "^0.3.1") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.1") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.6") (f (quote ("derive" "api"))) (d #t) (k 0)) (d (n "fluvio-socket") (r "^0.10.0") (d #t) (k 2)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "0vvn4wwr4n5hpdkdyxhfsjvd8fj9nxxgs6nz66zwn6fv4azargs4") (f (quote (("fixture" "derive_builder") ("file" "fluvio-protocol/store"))))))

(define-public crate-fluvio-dataplane-protocol-0.7.0 (c (n "fluvio-dataplane-protocol") (v "0.7.0") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.5") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (k 0)) (d (n "fluvio-future") (r "^0.3.1") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.1") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.6") (f (quote ("derive" "api"))) (d #t) (k 0)) (d (n "fluvio-socket") (r "^0.10.0") (d #t) (k 2)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "0gdq7py19iw8cyq01ivjikv4w1qfw1fqpjq1ganwi2ycg90b5xhi") (f (quote (("fixture" "derive_builder") ("file" "fluvio-protocol/store"))))))

(define-public crate-fluvio-dataplane-protocol-0.7.1 (c (n "fluvio-dataplane-protocol") (v "0.7.1") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.5") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (k 0)) (d (n "fluvio-future") (r "^0.3.1") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.1") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.6") (f (quote ("derive" "api"))) (d #t) (k 0)) (d (n "fluvio-socket") (r "^0.10.0") (d #t) (k 2)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "0fjhvshfxklc81b6gcanbw2gcix7gzwrdz9ncl92ynfcl31br35v") (f (quote (("fixture" "derive_builder") ("file" "fluvio-protocol/store"))))))

(define-public crate-fluvio-dataplane-protocol-0.7.2 (c (n "fluvio-dataplane-protocol") (v "0.7.2") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (k 0)) (d (n "fluvio-future") (r "^0.3.1") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.1") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.6") (f (quote ("derive" "api"))) (d #t) (k 0)) (d (n "fluvio-socket") (r "^0.10.0") (d #t) (k 2)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "18zssw80mnjnigqmk7qb27hlacb4ypzyn1gfsldxs3lgk26sc2ac") (f (quote (("fixture" "derive_builder") ("file" "fluvio-protocol/store"))))))

(define-public crate-fluvio-dataplane-protocol-0.7.4 (c (n "fluvio-dataplane-protocol") (v "0.7.4") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (k 0)) (d (n "fluvio-future") (r "^0.3.1") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.1") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.6") (f (quote ("derive" "api"))) (d #t) (k 0)) (d (n "fluvio-socket") (r "^0.10.0") (d #t) (k 2)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "03i8akxn5yv5lqvx4bbhr7g006psqcb2dz9z6c0i0qlfv5l7rwkd") (f (quote (("fixture" "derive_builder") ("file" "fluvio-protocol/store"))))))

(define-public crate-fluvio-dataplane-protocol-0.7.5 (c (n "fluvio-dataplane-protocol") (v "0.7.5") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (k 0)) (d (n "fluvio-future") (r "^0.3.1") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.1") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.6") (f (quote ("derive" "api"))) (d #t) (k 0)) (d (n "fluvio-socket") (r "^0.10.0") (d #t) (k 2)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "0x5l3lvyf7aqprdmbg5ql3db5jjjh9azwll3m8vsaxdgl1njg3yp") (f (quote (("fixture" "derive_builder") ("file" "fluvio-protocol/store"))))))

(define-public crate-fluvio-dataplane-protocol-0.8.0 (c (n "fluvio-dataplane-protocol") (v "0.8.0") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (k 0)) (d (n "fluvio-future") (r "^0.3.1") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.1") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.6") (f (quote ("derive" "api"))) (d #t) (k 0)) (d (n "fluvio-socket") (r "^0.10.0") (d #t) (k 2)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "1nzc407l3f054jn1nl6hjfcwrfs09xa0c2qhx66q9mhvamwwjpaj") (f (quote (("fixture" "derive_builder") ("file" "fluvio-protocol/store"))))))

(define-public crate-fluvio-dataplane-protocol-0.9.0 (c (n "fluvio-dataplane-protocol") (v "0.9.0") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (k 0)) (d (n "fluvio-future") (r "^0.3.1") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.1") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.7") (f (quote ("derive" "api"))) (d #t) (k 0)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "0rn57c9x2izsn3kh1iggfgfyg0jmv9n7aqknfr61m14j6ii49j97") (f (quote (("fixture" "derive_builder") ("file" "fluvio-protocol/store"))))))

(define-public crate-fluvio-dataplane-protocol-0.9.1 (c (n "fluvio-dataplane-protocol") (v "0.9.1") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (k 0)) (d (n "fluvio-future") (r "^0.3.1") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.1") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.7") (f (quote ("derive" "api"))) (d #t) (k 0)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "1kq9v535qksrrvryp1hlvsjh0bacdr6mlzbi6q0wgssaiwinfh2h") (f (quote (("fixture" "derive_builder") ("file" "fluvio-protocol/store"))))))

(define-public crate-fluvio-dataplane-protocol-0.9.2 (c (n "fluvio-dataplane-protocol") (v "0.9.2") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (k 0)) (d (n "fluvio-future") (r "^0.3.1") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.1") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.7") (f (quote ("derive" "api"))) (d #t) (k 0)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "1d1f1796gf36y7zb72dy1xsj4zs823cqw9kz9yglrcia7sbvwill") (f (quote (("fixture" "derive_builder") ("file" "fluvio-protocol/store"))))))

(define-public crate-fluvio-dataplane-protocol-0.10.0 (c (n "fluvio-dataplane-protocol") (v "0.10.0") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (k 0)) (d (n "fluvio-compression") (r "^0.1.0") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.1") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.1") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.7") (f (quote ("derive" "api"))) (d #t) (k 0)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "1nkgi62h5jgglihgabrgk0qn3ni0bccbw7lq2pzjhgbc9a7qwq2v") (f (quote (("fixture" "derive_builder") ("file" "fluvio-protocol/store"))))))

(define-public crate-fluvio-dataplane-protocol-0.10.1 (c (n "fluvio-dataplane-protocol") (v "0.10.1") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (k 0)) (d (n "fluvio-compression") (r "^0.1.0") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.1") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.1") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.7") (f (quote ("derive" "api"))) (d #t) (k 0)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "0maxifbqvd239505x66sg2x3z0qvwd6j47bgbbdrwblinlras3kq") (f (quote (("fixture" "derive_builder") ("file" "fluvio-protocol/store"))))))

(define-public crate-fluvio-dataplane-protocol-0.11.0 (c (n "fluvio-dataplane-protocol") (v "0.11.0") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("wasmbind" "clock"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (k 0)) (d (n "fluvio-compression") (r "^0.1.0") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.1") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.1") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.7") (f (quote ("derive" "api"))) (d #t) (k 0)) (d (n "fluvio-types") (r "^0.3.5") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "1w32llcmgh9s2zmgxkccf605kwdqqi04kj1nlmfm7piahq3ysi1l") (f (quote (("memory_batch" "chrono") ("fixture" "derive_builder") ("file" "fluvio-protocol/store") ("default"))))))

(define-public crate-fluvio-dataplane-protocol-0.11.1 (c (n "fluvio-dataplane-protocol") (v "0.11.1") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("wasmbind" "clock"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (k 0)) (d (n "fluvio-compression") (r "^0.1.0") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.1") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.3.1") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.7") (f (quote ("derive" "api"))) (d #t) (k 0)) (d (n "fluvio-types") (r "^0.3.5") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "03zg389hxa6a6mpfaz8nd5x904vhiiw8cflh0jaj0kgi8ydsighz") (f (quote (("memory_batch" "chrono") ("fixture" "derive_builder") ("file" "fluvio-protocol/store") ("default"))))))

(define-public crate-fluvio-dataplane-protocol-0.11.4 (c (n "fluvio-dataplane-protocol") (v "0.11.4") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("wasmbind" "clock"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (k 0)) (d (n "fluvio-compression") (r "^0.1.0") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.4.0") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.4.0") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.7") (f (quote ("derive" "api"))) (d #t) (k 0)) (d (n "fluvio-types") (r "^0.3.5") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "0x8k4717wlrwmh4ys64gynqr5sk9ky54v245dd640ydjw2fap75i") (f (quote (("memory_batch" "chrono") ("fixture" "derive_builder") ("file" "fluvio-protocol/store") ("default"))))))

(define-public crate-fluvio-dataplane-protocol-0.11.5 (c (n "fluvio-dataplane-protocol") (v "0.11.5") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("wasmbind" "clock"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (k 0)) (d (n "fluvio-compression") (r "^0.2") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.4.0") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.4.0") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.7") (f (quote ("derive" "api"))) (d #t) (k 0)) (d (n "fluvio-types") (r "^0.3.5") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "154hh127l59ks9v6vkgznk4dahyjs3y101y9m6g6r6vllz4f70sk") (f (quote (("memory_batch" "chrono") ("fixture" "derive_builder") ("file" "fluvio-protocol/store") ("default"))))))

(define-public crate-fluvio-dataplane-protocol-0.11.6 (c (n "fluvio-dataplane-protocol") (v "0.11.6") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("wasmbind" "clock"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "content_inspector") (r "^0.2.4") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (k 0)) (d (n "fluvio-compression") (r "^0.2") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.4.0") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.4.0") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.7") (f (quote ("derive" "api"))) (d #t) (k 0)) (d (n "fluvio-types") (r "^0.3.5") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "0nm3mw45jwxdpfgf1i003j4qv2875im6zi0x368148d84m8pb4d6") (f (quote (("memory_batch" "chrono") ("fixture" "derive_builder") ("file" "fluvio-protocol/store") ("default"))))))

