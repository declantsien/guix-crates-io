(define-module (crates-io fl uv fluvio-spu-schema) #:use-module (crates-io))

(define-public crate-fluvio-spu-schema-0.1.0 (c (n "fluvio-spu-schema") (v "0.1.0") (d (list (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "dataplane") (r "^0.1.0") (d #t) (k 0) (p "fluvio-dataplane-protocol")) (d (n "fluvio-protocol") (r "^0.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "1aqgb39xazqqar88l49w0xv5dzjfird8q4nbm5sp9b1zpkr0r4g4")))

(define-public crate-fluvio-spu-schema-0.2.0 (c (n "fluvio-spu-schema") (v "0.2.0") (d (list (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "dataplane") (r "^0.1.2") (d #t) (k 0) (p "fluvio-dataplane-protocol")) (d (n "fluvio-protocol") (r "^0.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "0x1j8mb9vcz35aw27pnrhnddkwkqcfng9rjkzwil6kdwmv118lbj")))

(define-public crate-fluvio-spu-schema-0.3.0 (c (n "fluvio-spu-schema") (v "0.3.0") (d (list (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "dataplane") (r "^0.2.0") (d #t) (k 0) (p "fluvio-dataplane-protocol")) (d (n "fluvio-protocol") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "1j84jjvxvplbhvridcdgaaj595gqrb2iyk5jl7qg1n80hlmga2vw")))

(define-public crate-fluvio-spu-schema-0.4.0 (c (n "fluvio-spu-schema") (v "0.4.0") (d (list (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "dataplane") (r "^0.3.0") (d #t) (k 0) (p "fluvio-dataplane-protocol")) (d (n "fluvio-protocol") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "0g8vqxp0rbhqddgg7byjg42apsr4b7rwjz10711147v289316vhg")))

(define-public crate-fluvio-spu-schema-0.5.0 (c (n "fluvio-spu-schema") (v "0.5.0") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "dataplane") (r "^0.4.0") (d #t) (k 0) (p "fluvio-dataplane-protocol")) (d (n "fluvio-protocol") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "18i8vjpvmgdvs9srkwvld37zhfssxchwmqndd1zhv233khdqgqik")))

(define-public crate-fluvio-spu-schema-0.5.1 (c (n "fluvio-spu-schema") (v "0.5.1") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "dataplane") (r "^0.4.0") (d #t) (k 0) (p "fluvio-dataplane-protocol")) (d (n "fluvio-protocol") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "0225px92xlycr683pg3bxhm9h5q7harx0shwzvpavh51qnsmfi1v")))

(define-public crate-fluvio-spu-schema-0.6.0 (c (n "fluvio-spu-schema") (v "0.6.0") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "dataplane") (r "^0.5.0") (d #t) (k 0) (p "fluvio-dataplane-protocol")) (d (n "fluvio-protocol") (r "^0.5.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "1xspahxhc17z0kpw4lkqh77wppi5xwlgdwpw521qwqflyygb7gkl")))

(define-public crate-fluvio-spu-schema-0.6.1 (c (n "fluvio-spu-schema") (v "0.6.1") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "dataplane") (r "^0.5.1") (d #t) (k 0) (p "fluvio-dataplane-protocol")) (d (n "fluvio-protocol") (r "^0.5.1") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "02fs4979w8krpbb0dyfx9ckiw41pm449cqxschh44kv6k80lv6bb") (f (quote (("file" "dataplane/file"))))))

(define-public crate-fluvio-spu-schema-0.7.0 (c (n "fluvio-spu-schema") (v "0.7.0") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "dataplane") (r "^0.6") (d #t) (k 0) (p "fluvio-dataplane-protocol")) (d (n "fluvio-protocol") (r "^0.6") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "19p013s47m982dn2567vn15w2zv782ajv5d453a1mhvhq3b67bz5") (f (quote (("file" "dataplane/file"))))))

(define-public crate-fluvio-spu-schema-0.8.0 (c (n "fluvio-spu-schema") (v "0.8.0") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "dataplane") (r "^0.6") (d #t) (k 0) (p "fluvio-dataplane-protocol")) (d (n "fluvio-protocol") (r "^0.6") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "1bpqvabwl0i58h8llkmicyjb6hbn9azyarhlrmq2awz1ikx6msll") (f (quote (("file" "dataplane/file"))))))

(define-public crate-fluvio-spu-schema-0.8.1 (c (n "fluvio-spu-schema") (v "0.8.1") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "dataplane") (r "^0.6") (d #t) (k 0) (p "fluvio-dataplane-protocol")) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "fluvio-protocol") (r "^0.6") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "04lwk6pfhk43s27ps7xrb6hh7lqkz0xdhblgk037rpazx4f0clkf") (f (quote (("file" "dataplane/file"))))))

(define-public crate-fluvio-spu-schema-0.8.2 (c (n "fluvio-spu-schema") (v "0.8.2") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "dataplane") (r "^0.6") (d #t) (k 0) (p "fluvio-dataplane-protocol")) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "fluvio-protocol") (r "^0.6") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "178dqna0c12gc201cpiwl91p3wghd6h3fz1rxbrgwj4g1c457znz") (f (quote (("file" "dataplane/file"))))))

(define-public crate-fluvio-spu-schema-0.8.3 (c (n "fluvio-spu-schema") (v "0.8.3") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "dataplane") (r "^0.6") (d #t) (k 0) (p "fluvio-dataplane-protocol")) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "fluvio-protocol") (r "^0.6") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "0p5zw9nvc0fbxf7adzflm6pj673apm1s3h3537lkpqyad3zwvyxf") (f (quote (("file" "dataplane/file"))))))

(define-public crate-fluvio-spu-schema-0.8.4 (c (n "fluvio-spu-schema") (v "0.8.4") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "dataplane") (r "^0.7") (d #t) (k 0) (p "fluvio-dataplane-protocol")) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "fluvio-protocol") (r "^0.6") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "0vf87y6dysvnvkzaly9gijfpd8m412768sjkz2p72fvszl5lgqlq") (f (quote (("file" "dataplane/file"))))))

(define-public crate-fluvio-spu-schema-0.8.5 (c (n "fluvio-spu-schema") (v "0.8.5") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "dataplane") (r "^0.7") (d #t) (k 0) (p "fluvio-dataplane-protocol")) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "fluvio-protocol") (r "^0.6") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "06rr2ff8h3vsbv03727m96653y3wrigvckj8m6r74c0pxw93zawr") (f (quote (("file" "dataplane/file"))))))

(define-public crate-fluvio-spu-schema-0.8.6 (c (n "fluvio-spu-schema") (v "0.8.6") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "dataplane") (r "^0.8") (d #t) (k 0) (p "fluvio-dataplane-protocol")) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "fluvio-protocol") (r "^0.6") (d #t) (k 0)) (d (n "fluvio-types") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "1aaa0hjwg11hbhm32wlg7npa6k66yk4d6gihm5bkvsh6471cdiha") (f (quote (("file" "dataplane/file"))))))

(define-public crate-fluvio-spu-schema-0.9.0 (c (n "fluvio-spu-schema") (v "0.9.0") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "dataplane") (r "^0.9") (d #t) (k 0) (p "fluvio-dataplane-protocol")) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "fluvio-protocol") (r "^0.7") (d #t) (k 0)) (d (n "fluvio-types") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "1b592ry44smqlxw8x2b79z2p48x6v1cxr5n5cdry1z2vjrgq39k5") (f (quote (("file" "dataplane/file"))))))

(define-public crate-fluvio-spu-schema-0.9.1 (c (n "fluvio-spu-schema") (v "0.9.1") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "dataplane") (r "^0.9") (d #t) (k 0) (p "fluvio-dataplane-protocol")) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "fluvio-protocol") (r "^0.7") (d #t) (k 0)) (d (n "fluvio-types") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "1symg7hlm2nblp6h3f1wji1pvvp0spi6snwlg5bz5a0dvxwc16z2") (f (quote (("file" "dataplane/file"))))))

(define-public crate-fluvio-spu-schema-0.9.2 (c (n "fluvio-spu-schema") (v "0.9.2") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "dataplane") (r "^0.9") (d #t) (k 0) (p "fluvio-dataplane-protocol")) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "fluvio-protocol") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "1n4f05qxmwakp0m2xn59ql3jhsqcg4v18fchah3p827rzagnbfkf") (f (quote (("file" "dataplane/file"))))))

(define-public crate-fluvio-spu-schema-0.9.3 (c (n "fluvio-spu-schema") (v "0.9.3") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "dataplane") (r "^0.10") (d #t) (k 0) (p "fluvio-dataplane-protocol")) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "fluvio-protocol") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "10bcpkrbgkkxqkrm31pry5vv5mqdqwprb9v5dg3h1hqxjhcvnwnj") (f (quote (("file" "dataplane/file"))))))

(define-public crate-fluvio-spu-schema-0.9.4 (c (n "fluvio-spu-schema") (v "0.9.4") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "dataplane") (r "^0.11") (d #t) (k 0) (p "fluvio-dataplane-protocol")) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "fluvio-protocol") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "0k2xjys6aydsxh6m9ma8dgvf5ypwc704cc0xnw8na0bj6vhsj053") (f (quote (("file" "dataplane/file"))))))

(define-public crate-fluvio-spu-schema-0.10.0 (c (n "fluvio-spu-schema") (v "0.10.0") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "dataplane") (r "^0.11") (d #t) (k 0) (p "fluvio-dataplane-protocol")) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "fluvio-protocol") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "00svkip1dm5j62vdiy72z28w0gp12s0m3mdpx32pwzsc4nclp474") (f (quote (("file" "dataplane/file"))))))

(define-public crate-fluvio-spu-schema-0.10.1 (c (n "fluvio-spu-schema") (v "0.10.1") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "educe") (r "^0.4.19") (f (quote ("Debug"))) (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "fluvio-future") (r "^0.4.0") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.8.0") (f (quote ("api" "record"))) (d #t) (k 0)) (d (n "fluvio-smartmodule") (r "^0.3.0") (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "1irz055yh0v498hgy4ii60lkp66di0p7clyc164vdj1vvimg5pvh") (f (quote (("file" "fluvio-future" "fluvio-protocol/store"))))))

(define-public crate-fluvio-spu-schema-0.11.0 (c (n "fluvio-spu-schema") (v "0.11.0") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "educe") (r "^0.4.19") (f (quote ("Debug"))) (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "fluvio-future") (r "^0.4.0") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.8.0") (f (quote ("api" "record"))) (d #t) (k 0)) (d (n "fluvio-smartmodule") (r "^0.3.0") (k 0)) (d (n "fluvio-types") (r "^0.4.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "1q5r9iv6smafzsgay89gvhmcq54b8pwjm2s31naai9ri9ygdyshb") (f (quote (("file" "fluvio-future" "fluvio-protocol/store"))))))

(define-public crate-fluvio-spu-schema-0.11.1 (c (n "fluvio-spu-schema") (v "0.11.1") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "educe") (r "^0.4.19") (f (quote ("Debug"))) (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "fluvio-future") (r "^0.4.0") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.8.0") (f (quote ("api" "record"))) (d #t) (k 0)) (d (n "fluvio-smartmodule") (r "^0.3.0") (k 0)) (d (n "fluvio-types") (r "^0.4.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "18xcv42xaxvflqn5s9f4389cxxr7hw8p158lkcpn25917lfv2md4") (f (quote (("file" "fluvio-future" "fluvio-protocol/store"))))))

(define-public crate-fluvio-spu-schema-0.12.0 (c (n "fluvio-spu-schema") (v "0.12.0") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "educe") (r "^0.4.19") (f (quote ("Debug"))) (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "fluvio-future") (r "^0.4.0") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.8.0") (f (quote ("api" "record"))) (d #t) (k 0)) (d (n "fluvio-smartmodule") (r "^0.4.0") (k 0)) (d (n "fluvio-types") (r "^0.4.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "08g404v09vwhrzx3v7my5sljhzbibmx2xwy36z0b4yc2qs5qmip8") (f (quote (("file" "fluvio-future" "fluvio-protocol/store"))))))

(define-public crate-fluvio-spu-schema-0.13.0 (c (n "fluvio-spu-schema") (v "0.13.0") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "educe") (r "^0.4.19") (f (quote ("Debug"))) (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "fluvio-future") (r "^0.4.0") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.9.0") (f (quote ("api" "record"))) (d #t) (k 0)) (d (n "fluvio-smartmodule") (r "^0.5.0") (k 0)) (d (n "fluvio-types") (r "^0.4.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "151v9qh3xrng0pzm5gx1mp16zb7kc8598n8r0jqcipx6viji8ha3") (f (quote (("file" "fluvio-future" "fluvio-protocol/store"))))))

(define-public crate-fluvio-spu-schema-0.13.1 (c (n "fluvio-spu-schema") (v "0.13.1") (d (list (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "educe") (r "^0.4.19") (f (quote ("Debug"))) (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "fluvio-future") (r "^0.4.0") (f (quote ("fixture" "fs"))) (d #t) (k 2)) (d (n "fluvio-protocol") (r "^0.9.0") (f (quote ("api" "record"))) (d #t) (k 0)) (d (n "fluvio-smartmodule") (r "^0.5.0") (k 0)) (d (n "fluvio-types") (r "^0.4.0") (d #t) (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "0h6hkca83gbcinwbg77sn23rkrpcjfcw5j4dq7rwpx8k88vgpawc") (f (quote (("file" "fluvio-future" "fluvio-protocol/store"))))))

(define-public crate-fluvio-spu-schema-0.13.2 (c (n "fluvio-spu-schema") (v "0.13.2") (d (list (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.4.19") (f (quote ("Debug"))) (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.5.1") (o #t) (k 0)) (d (n "fluvio-future") (r "^0.5.1") (f (quote ("fixture" "fs"))) (k 2)) (d (n "fluvio-protocol") (r "^0.9.0") (f (quote ("api" "record"))) (d #t) (k 0)) (d (n "fluvio-smartmodule") (r "^0.5.0") (k 0)) (d (n "fluvio-socket") (r "^0.14.0") (f (quote ("file"))) (k 2)) (d (n "fluvio-types") (r "^0.4.0") (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (k 2)) (d (n "futures-util") (r "^0.3.6") (k 2)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "1jc7q1mb4i9505g9flzhhg8ggbxpsb89kxj6qprqk48p3kcild7y") (f (quote (("file" "fluvio-future" "fluvio-protocol/store"))))))

(define-public crate-fluvio-spu-schema-0.14.0 (c (n "fluvio-spu-schema") (v "0.14.0") (d (list (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "educe") (r "^0.4.19") (f (quote ("Debug"))) (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.5.1") (o #t) (k 0)) (d (n "fluvio-future") (r "^0.5.1") (f (quote ("fixture" "fs"))) (k 2)) (d (n "fluvio-protocol") (r "^0.9.3") (f (quote ("api" "record"))) (d #t) (k 0)) (d (n "fluvio-smartmodule") (r "^0.5.0") (k 0)) (d (n "fluvio-socket") (r "^0.14.2") (f (quote ("file"))) (k 2)) (d (n "fluvio-types") (r "^0.4.0") (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (k 2)) (d (n "futures-util") (r "^0.3.6") (k 2)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "1ck39hw8lgiy2kpb36j35fs805ssia2wmylxkzsjyd26ag8yjd96") (f (quote (("file" "fluvio-future" "fluvio-protocol/store"))))))

(define-public crate-fluvio-spu-schema-0.14.1 (c (n "fluvio-spu-schema") (v "0.14.1") (d (list (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "educe") (r "^0.4.19") (f (quote ("Debug"))) (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.5.1") (o #t) (k 0)) (d (n "fluvio-future") (r "^0.5.1") (f (quote ("fixture" "fs"))) (k 2)) (d (n "fluvio-protocol") (r "^0.10.0") (f (quote ("api" "record" "link"))) (d #t) (k 0)) (d (n "fluvio-smartmodule") (r "^0.6.0") (k 0)) (d (n "fluvio-socket") (r "^0.14.3") (f (quote ("file"))) (k 2)) (d (n "fluvio-types") (r "^0.4.0") (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (k 2)) (d (n "futures-util") (r "^0.3.6") (k 2)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "09csssn74zsfnp4g6z44fjvjgfx65mrdpgp637gz7xgb5ag3r6x9") (f (quote (("file" "fluvio-future" "fluvio-protocol/store"))))))

(define-public crate-fluvio-spu-schema-0.14.2 (c (n "fluvio-spu-schema") (v "0.14.2") (d (list (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "educe") (r "^0.4.19") (f (quote ("Debug"))) (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.5.1") (o #t) (k 0)) (d (n "fluvio-future") (r "^0.5.1") (f (quote ("fixture" "fs"))) (k 2)) (d (n "fluvio-protocol") (r "^0.10.1") (f (quote ("api" "record" "link"))) (d #t) (k 0)) (d (n "fluvio-protocol") (r "^0.10.1") (f (quote ("compress"))) (d #t) (k 2)) (d (n "fluvio-smartmodule") (r "^0.7.0") (k 0)) (d (n "fluvio-socket") (r "^0.14.3") (f (quote ("file"))) (k 2)) (d (n "fluvio-types") (r "^0.4.0") (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (k 2)) (d (n "futures-util") (r "^0.3.6") (k 2)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "05kl682glbpf2qjzp5a4h2aj6f4zs5fqis2g23bdar3qid79j46d") (f (quote (("file" "fluvio-future" "fluvio-protocol/store"))))))

(define-public crate-fluvio-spu-schema-0.14.3 (c (n "fluvio-spu-schema") (v "0.14.3") (d (list (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "educe") (r "^0.4.19") (f (quote ("Debug"))) (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.5.1") (o #t) (k 0)) (d (n "fluvio-future") (r "^0.5.1") (f (quote ("fixture" "fs"))) (k 2)) (d (n "fluvio-protocol") (r "^0.10.4") (f (quote ("api" "record" "link"))) (d #t) (k 0)) (d (n "fluvio-protocol") (r "^0.10.4") (f (quote ("compress"))) (d #t) (k 2)) (d (n "fluvio-smartmodule") (r "^0.7.0") (k 0)) (d (n "fluvio-socket") (r "^0.14.3") (f (quote ("file"))) (k 2)) (d (n "fluvio-types") (r "^0.4.0") (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (k 2)) (d (n "futures-util") (r "^0.3.6") (k 2)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "01938r93s8rakhqbpaz81wmhmhf122ijn5zd77lqhja45r47k0yz") (f (quote (("file" "fluvio-future" "fluvio-protocol/store"))))))

(define-public crate-fluvio-spu-schema-0.14.4 (c (n "fluvio-spu-schema") (v "0.14.4") (d (list (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "educe") (r "^0.4.19") (f (quote ("Debug"))) (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.5.1") (o #t) (k 0)) (d (n "fluvio-future") (r "^0.5.1") (f (quote ("fixture" "fs"))) (k 2)) (d (n "fluvio-protocol") (r "^0.10.4") (f (quote ("api" "record" "link"))) (d #t) (k 0)) (d (n "fluvio-protocol") (r "^0.10.4") (f (quote ("compress"))) (d #t) (k 2)) (d (n "fluvio-smartmodule") (r "^0.7.0") (k 0)) (d (n "fluvio-socket") (r "^0.14.3") (f (quote ("file"))) (k 2)) (d (n "fluvio-types") (r "^0.4.0") (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (k 2)) (d (n "futures-util") (r "^0.3.6") (k 2)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "1vxvmrqdbs4hw01dz0xx80kfy633wj3f36sn1yd4lz29rszcz4f5") (f (quote (("file" "fluvio-future" "fluvio-protocol/store"))))))

(define-public crate-fluvio-spu-schema-0.14.5 (c (n "fluvio-spu-schema") (v "0.14.5") (d (list (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "educe") (r "^0.4.19") (f (quote ("Debug"))) (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.6.0") (o #t) (k 0)) (d (n "fluvio-future") (r "^0.6.0") (f (quote ("fixture" "fs"))) (k 2)) (d (n "fluvio-protocol") (r "^0.10.6") (f (quote ("api" "record" "link"))) (d #t) (k 0)) (d (n "fluvio-protocol") (r "^0.10.6") (f (quote ("compress"))) (d #t) (k 2)) (d (n "fluvio-smartmodule") (r "^0.7.0") (k 0)) (d (n "fluvio-socket") (r "^0.14.3") (f (quote ("file"))) (k 2)) (d (n "fluvio-types") (r "^0.4.4") (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (k 2)) (d (n "futures-util") (r "^0.3.6") (k 2)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "0qv949pgkm6j64w3nysc7kdyms1y6jhfgy4279klwzfzw9mgyvsn") (f (quote (("file" "fluvio-future" "fluvio-protocol/store"))))))

(define-public crate-fluvio-spu-schema-0.14.6 (c (n "fluvio-spu-schema") (v "0.14.6") (d (list (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "educe") (r "^0.4.19") (f (quote ("Debug"))) (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.6.2") (o #t) (k 0)) (d (n "fluvio-future") (r "^0.6.2") (f (quote ("fixture" "fs"))) (k 2)) (d (n "fluvio-protocol") (r "^0.10.12") (f (quote ("api" "record" "link"))) (d #t) (k 0)) (d (n "fluvio-protocol") (r "^0.10.12") (f (quote ("compress"))) (d #t) (k 2)) (d (n "fluvio-smartmodule") (r "^0.7.0") (k 0)) (d (n "fluvio-socket") (r "^0.14.3") (f (quote ("file"))) (k 2)) (d (n "fluvio-types") (r "^0.4.4") (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (k 2)) (d (n "futures-util") (r "^0.3.6") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "050m54simmgj4a5wj4z6kf4j4mvkhcfvq429cgi1c4q9nnpgds0c") (f (quote (("file" "fluvio-future" "fluvio-protocol/store"))))))

(define-public crate-fluvio-spu-schema-0.14.7 (c (n "fluvio-spu-schema") (v "0.14.7") (d (list (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "educe") (r "^0.4.19") (f (quote ("Debug"))) (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (d #t) (k 0)) (d (n "fluvio-future") (r "^0.6.2") (o #t) (k 0)) (d (n "fluvio-future") (r "^0.6.2") (f (quote ("fixture" "fs"))) (k 2)) (d (n "fluvio-protocol") (r "^0.10.13") (f (quote ("api" "record" "link"))) (d #t) (k 0)) (d (n "fluvio-protocol") (r "^0.10.13") (f (quote ("compress"))) (d #t) (k 2)) (d (n "fluvio-smartmodule") (r "^0.7.3") (k 0)) (d (n "fluvio-socket") (r "^0.14.8") (f (quote ("file"))) (k 2)) (d (n "fluvio-types") (r "^0.4.6") (k 0)) (d (n "flv-util") (r "^0.5.2") (f (quote ("fixture"))) (k 2)) (d (n "futures-util") (r "^0.3.6") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (d #t) (k 0)))) (h "1z1qwc02sjdvr3dkrvnza18k7gsxqz5167mb7fzvq69vdfil3bib") (f (quote (("file" "fluvio-future" "fluvio-protocol/store"))))))

