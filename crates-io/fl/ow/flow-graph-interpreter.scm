(define-module (crates-io fl ow flow-graph-interpreter) #:use-module (crates-io))

(define-public crate-flow-graph-interpreter-0.20.0 (c (n "flow-graph-interpreter") (v "0.20.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "flow-component") (r "^0.5.0") (d #t) (k 0)) (d (n "flow-expression-parser") (r "^0.5.0") (d #t) (k 0)) (d (n "flow-graph") (r "^0.21.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "performance-mark") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "seeded-random") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-logger") (r "^0.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "wasmrs") (r "^0.9") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.9") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.9") (d #t) (k 0)) (d (n "wick-config") (r "^0.26.0") (d #t) (k 0)) (d (n "wick-interface-types") (r "^0.15.0") (d #t) (k 0)) (d (n "wick-logger") (r "^0.2.0") (d #t) (k 2)) (d (n "wick-packet") (r "^0.15.0") (f (quote ("invocation"))) (d #t) (k 0)))) (h "1vb3flvv9ka7bjbgwdnr1qdk3xp6lq9flxrbq25wp7ri8d3h98ik")))

(define-public crate-flow-graph-interpreter-0.21.0 (c (n "flow-graph-interpreter") (v "0.21.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "flow-component") (r "^0.6.0") (f (quote ("invocation"))) (k 0)) (d (n "flow-expression-parser") (r "^0.6.0") (f (quote ("std"))) (k 0)) (d (n "flow-graph") (r "^0.22.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "parking_lot") (r "^0.12") (k 0)) (d (n "performance-mark") (r "^0.2.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (f (quote ("std"))) (k 2)) (d (n "seeded-random") (r "^0.5.0") (f (quote ("uuid" "rng" "std"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "serde_json") (r "^1.0") (k 2)) (d (n "test-logger") (r "^0.2.0") (d #t) (k 2) (p "wick-test-logger")) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync" "macros"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std" "std-future"))) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4"))) (k 0)) (d (n "wasmrs") (r "^0.15.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.15.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.15.0") (d #t) (k 0)) (d (n "wick-config") (r "^0.27.0") (f (quote ("config"))) (k 0)) (d (n "wick-interface-types") (r "^0.16.0") (d #t) (k 0)) (d (n "wick-logger") (r "^0.3.0") (d #t) (k 2)) (d (n "wick-packet") (r "^0.16.0") (f (quote ("invocation" "rt-tokio"))) (k 0)) (d (n "wick-packet") (r "^0.16.0") (f (quote ("test"))) (k 2)))) (h "1g5g787qh49hlsp7jbwpgm6h7kkidmcrzn1dxk0ixcib7w2711fw")))

(define-public crate-flow-graph-interpreter-0.22.0 (c (n "flow-graph-interpreter") (v "0.22.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "chrono") (r "^0.4.31") (k 2)) (d (n "flow-component") (r "^0.7.0") (f (quote ("invocation"))) (k 0)) (d (n "flow-expression-parser") (r "^0.7.0") (f (quote ("std"))) (k 0)) (d (n "flow-graph") (r "^0.23.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "parking_lot") (r "^0.12") (k 0)) (d (n "performance-mark") (r "^0.3.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (f (quote ("std"))) (k 2)) (d (n "seeded-random") (r "^0.6.0") (f (quote ("uuid" "rng" "std"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "serde_json") (r "^1.0") (k 2)) (d (n "test-logger") (r "^0.2.0") (d #t) (k 2) (p "wick-test-logger")) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1.33") (f (quote ("rt-multi-thread" "sync" "macros"))) (k 0)) (d (n "tokio") (r "^1.33") (f (quote ("macros" "rt-multi-thread"))) (k 2)) (d (n "tokio-stream") (r "^0.1") (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std" "std-future"))) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4"))) (k 0)) (d (n "wasmrs") (r "^0.17.0") (d #t) (k 0)) (d (n "wasmrs-codec") (r "^0.17.0") (d #t) (k 0)) (d (n "wasmrs-rx") (r "^0.17.0") (d #t) (k 0)) (d (n "wick-config") (r "^0.28.0") (f (quote ("config"))) (k 0)) (d (n "wick-interface-types") (r "^0.17.0") (d #t) (k 0)) (d (n "wick-logger") (r "^0.4.0") (d #t) (k 2)) (d (n "wick-packet") (r "^0.17.0") (f (quote ("invocation" "rt-tokio"))) (k 0)) (d (n "wick-packet") (r "^0.17.0") (f (quote ("test"))) (k 2)))) (h "0mh966cz7kkdqpinwvxjp3wwx0blwi0ivzdxp1hvrxya29xacvav")))

