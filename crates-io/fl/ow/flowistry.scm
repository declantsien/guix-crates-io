(define-module (crates-io fl ow flowistry) #:use-module (crates-io))

(define-public crate-flowistry-0.1.0 (c (n "flowistry") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fluid-let") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "take_mut") (r "^0.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (d #t) (k 2)))) (h "03kiyk5977a7gha9h98bhw3bza2dcma1jn1xssyzy9938l8rd4w3")))

(define-public crate-flowistry-0.1.2 (c (n "flowistry") (v "0.1.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fluid-let") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "take_mut") (r "^0.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (d #t) (k 2)))) (h "0km8qwqq8nfxahasx79gf67ly4r221j3si0v1m3w7n5cywj3z67r")))

(define-public crate-flowistry-0.1.3 (c (n "flowistry") (v "0.1.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fluid-let") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "take_mut") (r "^0.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (d #t) (k 2)))) (h "0hrvlz876xvybwd7xj7bv6yj8zn37j4454v4iq0ymhd0s5nc4p83")))

(define-public crate-flowistry-0.1.4 (c (n "flowistry") (v "0.1.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fluid-let") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "take_mut") (r "^0.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (d #t) (k 2)))) (h "01khpvqfjq7hvvzqdp1gxcrsxf5ap2jpna8w8p39pcyysnk1p1n5")))

(define-public crate-flowistry-0.2.0 (c (n "flowistry") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fluid-let") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "take_mut") (r "^0.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (d #t) (k 2)))) (h "04dcx35aawgni1i7v0nfjbss47jdr0d1n5mi36gqa3v9sfc17sdp")))

(define-public crate-flowistry-0.2.1 (c (n "flowistry") (v "0.2.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fluid-let") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "rustc_version_runtime") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "take_mut") (r "^0.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (d #t) (k 2)))) (h "0d8hijr92yzr74v4fndbwamslmd1bj7pv5zf8bcq2qphfq4nrvdp")))

(define-public crate-flowistry-0.3.0 (c (n "flowistry") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "take_mut") (r "^0.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (d #t) (k 2)))) (h "0qbyliq50y1fzqcj6217jdspxzchdl9m2iiaiyxwnnw86cpmdzqf")))

(define-public crate-flowistry-0.3.1 (c (n "flowistry") (v "0.3.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "take_mut") (r "^0.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (d #t) (k 2)))) (h "1f4lb6s5jr4f5zjvxpwbw9czy1n6jvswrn15vv9m77im175rx1gs")))

(define-public crate-flowistry-0.3.2 (c (n "flowistry") (v "0.3.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "take_mut") (r "^0.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (d #t) (k 2)))) (h "0pb5ywkpcp2l2sklvc1an1rcz1gp66c65rc3cc213dpnhyw9m318")))

(define-public crate-flowistry-0.3.3 (c (n "flowistry") (v "0.3.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "take_mut") (r "^0.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (d #t) (k 2)))) (h "0lmk4vb6qfjsa2jp0x1n322h5shw1i2wfwmc8k6hw2z4l3vvbm21")))

(define-public crate-flowistry-0.3.4 (c (n "flowistry") (v "0.3.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "take_mut") (r "^0.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (d #t) (k 2)))) (h "0bi6rm38v7vbsv5cvkal16fchdbl16p455cwb0y4wln3i3mivvz1")))

(define-public crate-flowistry-0.3.5 (c (n "flowistry") (v "0.3.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "take_mut") (r "^0.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (d #t) (k 2)))) (h "1jv5bhyfks62xrys4iknimkh9ggdzkpnd8wdkxabmjligydsmbvs")))

(define-public crate-flowistry-0.3.6 (c (n "flowistry") (v "0.3.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (k 0)) (d (n "env_logger") (r "^0.9") (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 2)))) (h "1kcz1p7mw3f5h7mbmahrphvq5g3d2mvl7y1q23j3xv13555a4xi6") (f (quote (("dev" "env_logger/default"))))))

(define-public crate-flowistry-0.3.7 (c (n "flowistry") (v "0.3.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (k 0)) (d (n "env_logger") (r "^0.9") (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 2)))) (h "0lplpixlv9ndxy4xdwhs3rxmqrs9ahrvxgr5pasxksyz06g3cx8p") (f (quote (("dev" "env_logger/default"))))))

(define-public crate-flowistry-0.3.8 (c (n "flowistry") (v "0.3.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (k 0)) (d (n "env_logger") (r "^0.9") (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 2)))) (h "0q3795xgk2adb9q278g9pcii3w2v09jjmf8swi7g5l0m9dwcdksm") (f (quote (("dev" "env_logger/default"))))))

(define-public crate-flowistry-0.3.9 (c (n "flowistry") (v "0.3.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.10") (d #t) (k 0)) (d (n "clap") (r "^2.33") (k 0)) (d (n "env_logger") (r "^0.9") (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 2)))) (h "1wz4fzm2apxk7xfwb4as7svg9xzskdhq4zxj7y3vhg8nxyhl66n8") (f (quote (("dev" "env_logger/default"))))))

(define-public crate-flowistry-0.3.10 (c (n "flowistry") (v "0.3.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.10") (d #t) (k 0)) (d (n "clap") (r "^2.33") (k 0)) (d (n "env_logger") (r "^0.9") (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 2)))) (h "1f91ns0v8z049krxajgcmvliw4ai3k8ibi8kpdcwfiq8ia80dakz") (f (quote (("dev" "env_logger/default"))))))

(define-public crate-flowistry-0.3.11 (c (n "flowistry") (v "0.3.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.10") (d #t) (k 0)) (d (n "clap") (r "^2.33") (k 0)) (d (n "env_logger") (r "^0.9") (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 2)))) (h "0131w1k71rx3cdvhz42qxjg81q06akjgg4kzc1yxflxg43ih5nyx") (f (quote (("dev" "env_logger/default"))))))

(define-public crate-flowistry-0.3.12 (c (n "flowistry") (v "0.3.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.10") (d #t) (k 0)) (d (n "clap") (r "^2.33") (k 0)) (d (n "env_logger") (r "^0.9") (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 2)))) (h "0sa88xzig4k33fd99x2k85jqxv6b4kl4d9dv9kabndbjyb1bmp0j") (f (quote (("dev" "env_logger/default"))))))

(define-public crate-flowistry-0.3.14 (c (n "flowistry") (v "0.3.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14") (d #t) (k 0)) (d (n "clap") (r "^2.33") (k 0)) (d (n "env_logger") (r "^0.9") (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 2)))) (h "0vriq1k682hg07awjni5dj3wqzrjzqpg3yzb69bfiqkap6wyak9n") (f (quote (("dev" "env_logger/default"))))))

(define-public crate-flowistry-0.3.15 (c (n "flowistry") (v "0.3.15") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14") (d #t) (k 0)) (d (n "clap") (r "^2.33") (k 0)) (d (n "env_logger") (r "^0.9") (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 2)))) (h "0ifjzwb07vhy3bz1x7mv6c88vxjddk4kzkg454g0l4l6527x4k03") (f (quote (("dev" "env_logger/default"))))))

(define-public crate-flowistry-0.3.16 (c (n "flowistry") (v "0.3.16") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14") (d #t) (k 0)) (d (n "clap") (r "^2.33") (k 0)) (d (n "env_logger") (r "^0.9") (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 2)))) (h "1nas9yq7g3n4vmww05l8dbsmr4p1izj01m61sa6d6rkhqlwk26yh") (f (quote (("dev" "env_logger/default"))))))

(define-public crate-flowistry-0.3.17 (c (n "flowistry") (v "0.3.17") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14") (d #t) (k 0)) (d (n "clap") (r "^2.33") (k 0)) (d (n "env_logger") (r "^0.9") (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 2)))) (h "1kqssxq93g1smkmb6srnfqcp4npizy92ic65iz0rjjq1lsb7shqb") (f (quote (("dev" "env_logger/default"))))))

(define-public crate-flowistry-0.3.18 (c (n "flowistry") (v "0.3.18") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14") (d #t) (k 0)) (d (n "clap") (r "^2.33") (k 0)) (d (n "env_logger") (r "^0.9") (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 2)))) (h "0h0k4y7lyxm6kb5s7a0hwfv0k6yhi9rzf8cbw5r1kvrrgqf4kj2d") (f (quote (("dev" "env_logger/default"))))))

(define-public crate-flowistry-0.3.19 (c (n "flowistry") (v "0.3.19") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14") (d #t) (k 0)) (d (n "clap") (r "^2.33") (k 0)) (d (n "env_logger") (r "^0.9") (k 0)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.9") (d #t) (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 2)))) (h "0ymv4y76y1d8s8i7q1lx3h0m5p3gk9vpigs1m5bh9l2vg1jwngzd")))

(define-public crate-flowistry-0.3.20 (c (n "flowistry") (v "0.3.20") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)))) (h "18xmsq9sh1w9h6fcqp3sqyn62c1ggqk56wlcyynrnhwkfhcfwhnx")))

(define-public crate-flowistry-0.4.0 (c (n "flowistry") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)))) (h "07sf34f37898q215j1yr1xis3p5lw868p4mlzhhb71pbiv48s89n")))

(define-public crate-flowistry-0.4.1 (c (n "flowistry") (v "0.4.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)))) (h "0wyainbs15pjnnywqsq148rfxzsrhirpvnxk1y5rhgyh8pmgfnl8")))

(define-public crate-flowistry-0.5.0 (c (n "flowistry") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 0)))) (h "0fxylw6li4ylx90b3738b0fvy7g8dyqgyhd19xs1p039r1qyip38")))

(define-public crate-flowistry-0.5.1 (c (n "flowistry") (v "0.5.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 0)))) (h "1vmr431sqlbvwissn35qamd1nv82lx3x9c2zxhhjryhanc9c7wg3")))

(define-public crate-flowistry-0.5.2 (c (n "flowistry") (v "0.5.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 0)))) (h "1ww81h5jqalrpmss535jbapm4mhc20qs5igakdr9pg8bd8lqj5hi")))

(define-public crate-flowistry-0.5.3 (c (n "flowistry") (v "0.5.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 0)))) (h "1n5acv1hr04zalxa6d270cg7k459ch24gy8nry9j5a1vgz9732b7")))

(define-public crate-flowistry-0.5.4 (c (n "flowistry") (v "0.5.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 0)))) (h "0l77pmw348g0ln3f878kvqwyr032lqkly7ww2w78n7g9zgdxl6ck")))

(define-public crate-flowistry-0.5.5 (c (n "flowistry") (v "0.5.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 0)))) (h "1mwqlcb5jxmzaqdjc0bvqbq7y7aqmvhh6jzvnj4s9ka5001kmzl4")))

(define-public crate-flowistry-0.5.6 (c (n "flowistry") (v "0.5.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 0)))) (h "1avs59d2qvawn436xll5md2h9r6a4w1ldpssxvmmcz1v011948yd")))

(define-public crate-flowistry-0.5.7 (c (n "flowistry") (v "0.5.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "1gvvvpzah6x8szx2wa5n1jlp9aryhylyal90014h6pndjr8lam36")))

(define-public crate-flowistry-0.5.8 (c (n "flowistry") (v "0.5.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "1sq4kvwf4802wm46il0h80vyqkkvx1arx1kiy51nfm9r7giq3pjn")))

(define-public crate-flowistry-0.5.9 (c (n "flowistry") (v "0.5.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "1z3qh60bjqp206b807g2vnqisc4i8hjb3imhlppim0hcwxdbpikl")))

(define-public crate-flowistry-0.5.10 (c (n "flowistry") (v "0.5.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "158gmkpyskbnadnsvjfaq59f79qqamipx2qghb9v40g1zgg854i9")))

(define-public crate-flowistry-0.5.11 (c (n "flowistry") (v "0.5.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "1qxa9i1ngw20yxqlhpmlapficcbj3ywsl4j2qybl79ch7a9l9gv3")))

(define-public crate-flowistry-0.5.12 (c (n "flowistry") (v "0.5.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (o #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "05000kz997rbdw89ly7dki4zak66dhd0ldwy35wxmnjhkcjpv7bf") (f (quote (("test" "textwrap" "lazy_static") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.13 (c (n "flowistry") (v "0.5.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (o #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "1np1x4m9ffh9dvj7mzjz8ainc4kj43w1bk1hnjc8fh25whxccr9k") (f (quote (("test" "textwrap" "lazy_static") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.14 (c (n "flowistry") (v "0.5.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (o #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "0dc39p9awyd8w42w2izbr00272sychgz8p1rqdrpfgcjjh2shvkf") (f (quote (("test" "textwrap" "lazy_static") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.15 (c (n "flowistry") (v "0.5.15") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (o #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "06afx6hkbzzbbcp0zf7fpxi6w3gkyd7mmxys22vypgwrmwxjfwhh") (f (quote (("test" "textwrap" "lazy_static") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.16 (c (n "flowistry") (v "0.5.16") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (o #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "01ii0m0dxkhzcbp7i3nm31ga87aq96g6dypyk97kcdxgicqv2ihx") (f (quote (("test" "textwrap" "lazy_static") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.17 (c (n "flowistry") (v "0.5.17") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (o #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "0n16sv12dsjci3ipra427cq6084j972j3jqrqvvi56skbn2j5bmg") (f (quote (("test" "textwrap" "lazy_static") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.18 (c (n "flowistry") (v "0.5.18") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (o #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "1mlawzl12wb9nf1n0li08d7k1nrh9r1wxwqpm8d76il5hm1cy9vh") (f (quote (("test" "textwrap" "lazy_static") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.19 (c (n "flowistry") (v "0.5.19") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (o #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "1k13132yqhir18gk31gfka2hqnhhkbawcw130p02sf8fyg09g0mr") (f (quote (("test" "textwrap" "lazy_static") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.21 (c (n "flowistry") (v "0.5.21") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (o #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "0i1vpj3zppbdyfw28kfn78c9sbw6q9w8n4dzldl1g11b44kpkyg5") (f (quote (("test" "textwrap" "lazy_static") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.22 (c (n "flowistry") (v "0.5.22") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (o #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "04hajp2f8agx7h1dpmlc70dfn156x16anlpvcxf2bizkl3cbcbcr") (f (quote (("test" "textwrap" "lazy_static") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.23 (c (n "flowistry") (v "0.5.23") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (o #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "07axhpl34hxj51rillfxbvmf2j905798pdvckkddqbc6kx19z036") (f (quote (("test" "textwrap" "lazy_static") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.24 (c (n "flowistry") (v "0.5.24") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (o #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "0mr4s969gandvl873yqqancar3r1f4qg1d9dzxbcixpldjss6w93") (f (quote (("test" "textwrap" "lazy_static") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.25 (c (n "flowistry") (v "0.5.25") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (o #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "1kvcnky9zv4dzd85ra6yyc10dnrfa501nwjfzpfgnfg2nrqr3wm0") (f (quote (("test" "textwrap" "lazy_static") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.26 (c (n "flowistry") (v "0.5.26") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (o #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "13cn4b0cx84glpx4l05y52kc0ivicvrvh5vhaw0jbag3i4353w6j") (f (quote (("test" "textwrap" "lazy_static") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.27 (c (n "flowistry") (v "0.5.27") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (o #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "005i9x9lyqnf8kwb8yqh65xz99ia7kwp6b6kvm4mywgrr1k8w3d9") (f (quote (("test" "textwrap" "lazy_static") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.28 (c (n "flowistry") (v "0.5.28") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (o #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "0r0ci3mva3whiv3rjcyxhr4l56ikjrs4z87s7big4nf5p046ahxh") (f (quote (("test" "textwrap" "lazy_static") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.29 (c (n "flowistry") (v "0.5.29") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (o #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "0zdd75wll3nx817c16y2sik9mdnv9db82mivy5vpqqg9nb6ygaxs") (f (quote (("test" "textwrap" "lazy_static") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.30 (c (n "flowistry") (v "0.5.30") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (o #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "19fhb5r40ayashzr7pvgc2r43mb4yw1rjaz5c96656ha1xmzsw9a") (f (quote (("test" "textwrap" "lazy_static") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.31 (c (n "flowistry") (v "0.5.31") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (o #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "187gyry05b2ad3sqbj1ijj74j64sbjg3i5v50gwpbrg7n7yb05a9") (f (quote (("test" "textwrap" "lazy_static") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.32 (c (n "flowistry") (v "0.5.32") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (o #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "0rp7smvark2avkr7pfh3ibhjlb4w9jmc7mg3gmg03d27abdn2wzz") (f (quote (("test" "textwrap" "lazy_static") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.33 (c (n "flowistry") (v "0.5.33") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (o #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "15mf2wckx1lgas57lgamsx7444h9cnsb4r09s7sd1nzdh4xv0frp") (f (quote (("test" "textwrap" "lazy_static") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.34 (c (n "flowistry") (v "0.5.34") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (o #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)))) (h "0pging30z2ja9m5z9kvzjs1a9v4r4r5vfp1sc6nkipwy3fj3g1f5") (f (quote (("test" "textwrap" "lazy_static") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.35 (c (n "flowistry") (v "0.5.35") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "intervaltree") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (o #t) (k 0)))) (h "0aln71jzh14zs7misj99af7l9lzy0pqa564dzhrmhz5nbcqycz2g") (f (quote (("test" "textwrap" "lazy_static") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.36 (c (n "flowistry") (v "0.5.36") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc_utils") (r "^0.6.0-nightly-2023-04-12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 2)))) (h "1d2k97zr10fx7rcpli5rgqmis36j8gp4wc9910myvf9ja8bbnrfb") (f (quote (("test" "rustc_utils/test") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.37 (c (n "flowistry") (v "0.5.37") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc_utils") (r "^0.6.1-nightly-2023-04-12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 2)))) (h "1p9imikbg5zg3mz7yymagw35m9fd1g0w63kr84kg7i3cg9sxsflx") (f (quote (("test" "rustc_utils/test") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.38 (c (n "flowistry") (v "0.5.38") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc_utils") (r "^0.6.2-nightly-2023-04-12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 2)))) (h "0jd2883jh3ybbwbri9dmph6zic60qg9l61hlxdzkxmjp41601q4l") (f (quote (("test" "rustc_utils/test") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.39 (c (n "flowistry") (v "0.5.39") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc_utils") (r "^0.7.0-nightly-2023-08-25") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 2)))) (h "1c6vcc8m95k210qzw1my93n962n4v7id5qksjc0h8jp7kbbyvk3w") (f (quote (("test" "rustc_utils/test") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.40 (c (n "flowistry") (v "0.5.40") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "indexical") (r "^0.3.1") (f (quote ("rustc"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc_utils") (r "=0.7.2-nightly-2023-08-25") (f (quote ("indexical" "indexical"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 2)))) (h "192qlbmmp1fnp766h59fja1cm393vwixav09jhycblgpygyb452b") (f (quote (("test" "rustc_utils/test") ("debug" "html-escape"))))))

(define-public crate-flowistry-0.5.41 (c (n "flowistry") (v "0.5.41") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "fluid-let") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "html-escape") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "indexical") (r "^0.3.1") (f (quote ("rustc"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc_utils") (r "=0.7.3-nightly-2023-08-25") (f (quote ("indexical" "indexical"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.14") (k 2)))) (h "1a3ishw5jhwqj9p96b4p2k5i4ms7p49541i76b1ahpxw12ih2ypp") (f (quote (("test" "rustc_utils/test") ("debug" "html-escape"))))))

