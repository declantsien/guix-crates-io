(define-module (crates-io fl at flatbox_render) #:use-module (crates-io))

(define-public crate-flatbox_render-0.1.0 (c (n "flatbox_render") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "casey") (r "^0.4.0") (d #t) (k 0)) (d (n "egui") (r "^0.19") (f (quote ("bytemuck"))) (d #t) (k 0)) (d (n "egui-winit") (r "^0.19.0") (f (quote ("clipboard" "links"))) (k 0)) (d (n "flatbox_assets") (r "^0.1.0") (d #t) (k 0)) (d (n "flatbox_core") (r "^0.1.0") (d #t) (k 0)) (d (n "flatbox_ecs") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "gl") (r "^0.14.0") (d #t) (k 0)) (d (n "glutin") (r "^0.29.1") (f (quote ("x11"))) (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.5") (d #t) (k 0)) (d (n "palette") (r "^0.7.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty-type-name") (r "^1.0.1") (d #t) (k 0)) (d (n "readonly") (r "^0.2.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "1hmji2mvmd0hm44ag5ccxqi8150wr0xrjvm0fn5aw56bax9kiy14") (f (quote (("default" "context" "ecs")))) (s 2) (e (quote (("ecs" "dep:flatbox_ecs") ("context" "dep:glutin"))))))

