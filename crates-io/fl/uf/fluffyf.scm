(define-module (crates-io fl uf fluffyf) #:use-module (crates-io))

(define-public crate-fluffyf-0.1.0 (c (n "fluffyf") (v "0.1.0") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking" "multipart"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simple_logger") (r "^4") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros" "parsing" "serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "16frkb7zx1c64j05bg4ai64a6wsys4p14gjjzcsifabp6f56digx") (f (quote (("rate-limit") ("default" "rate-limit")))) (r "1.75")))

(define-public crate-fluffyf-0.2.0 (c (n "fluffyf") (v "0.2.0") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking" "multipart" "native-tls"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simple_logger") (r "^4") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros" "parsing" "serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync"))) (d #t) (k 0)))) (h "16x7qzqwcf5z4zrpsbx3ar4p17wfgn00ivl8drfl7nynw8qisw0z") (f (quote (("rate-limit") ("default" "rate-limit")))) (r "1.75")))

