(define-module (crates-io fl ut flute) #:use-module (crates-io))

(define-public crate-flute-0.1.0 (c (n "flute") (v "0.1.0") (d (list (d (n "base64") (r "^0.20") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0wfvrjqgmj58b6d94zx3d14dh507rk1pyxg4wjrx7kk8yf10ww4g") (y #t) (r "1.66")))

(define-public crate-flute-0.2.0 (c (n "flute") (v "0.2.0") (d (list (d (n "base64") (r "^0.20") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1qicbk8j8d80finacnlj287v5axbkgnb90sqrqva45p9cddcyjv3") (y #t) (r "1.66")))

(define-public crate-flute-0.2.1 (c (n "flute") (v "0.2.1") (d (list (d (n "base64") (r "^0.20") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "040shkc68djfbilvmnjhdi8p79zj9fh7jp3dl5d5m37l156ip6j8") (y #t) (r "1.66")))

(define-public crate-flute-0.2.2 (c (n "flute") (v "0.2.2") (d (list (d (n "base64") (r "^0.20") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "06552lilmd0l0xz5nbqis7mm5nrkyb1mkhjpxg144dzlmzk5gy8c") (y #t) (r "1.66")))

(define-public crate-flute-0.3.0 (c (n "flute") (v "0.3.0") (d (list (d (n "base64") (r "^0.20") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "04sd3x9a1kxmqsvha79h6xbivz702bv39snqx9fgx8q09y4365g2") (r "1.66")))

(define-public crate-flute-0.3.1 (c (n "flute") (v "0.3.1") (d (list (d (n "base64") (r "^0.20") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0hm1j17k3igg6k3lpz2alyp89iz4838541qrpzh3bqv7yi318zyp") (y #t) (r "1.66")))

(define-public crate-flute-0.3.2 (c (n "flute") (v "0.3.2") (d (list (d (n "base64") (r "^0.20") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "07c31s4mrzmzsapmj55wpkwzil6ambsdmz684j3sqa8rs325yx5m") (r "1.66")))

(define-public crate-flute-0.3.3 (c (n "flute") (v "0.3.3") (d (list (d (n "base64") (r "^0.20") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0pa056k9190jlm2p31yb3fm1mmlvya6lf6l09pdlmd2g8qcywpvv") (r "1.66")))

(define-public crate-flute-0.4.0 (c (n "flute") (v "0.4.0") (d (list (d (n "base64") (r "^0.20") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.17.3") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-log") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0ag5l4632inmgfd9242y3xj0qhvyy7qxvxlj1v39phbv93vjy3yf") (f (quote (("python" "pyo3" "pyo3-log")))) (r "1.66")))

(define-public crate-flute-0.4.1 (c (n "flute") (v "0.4.1") (d (list (d (n "base64") (r "^0.20") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.17.3") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-log") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0q3gcrgjvdkpsa13vg2mx91883v5549dndgm1sp0yjvn8y7yakq2") (f (quote (("python" "pyo3" "pyo3-log")))) (r "1.66")))

(define-public crate-flute-0.4.2 (c (n "flute") (v "0.4.2") (d (list (d (n "base64") (r "^0.20") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.17.3") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-log") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "07930wpdzwgpw8kc22i8aymp221hz0ylm2cwi9m2xvv5bqqkkqmb") (f (quote (("python" "pyo3" "pyo3-log")))) (r "1.66")))

(define-public crate-flute-0.4.4 (c (n "flute") (v "0.4.4") (d (list (d (n "base64") (r "^0.20") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.17.3") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-log") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1nncprps6ig94drv43sb78iwyj92rjxq2lzmi4akh69zli2dsbx3") (f (quote (("python" "pyo3" "pyo3-log")))) (r "1.66")))

(define-public crate-flute-0.5.0 (c (n "flute") (v "0.5.0") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.17.3") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-log") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raptorq") (r "^1.7") (d #t) (k 0)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0nlanv8nsx0f45sn3x511r37x4291nplh23l6yh4b9b71s58xfzh") (f (quote (("python" "pyo3" "pyo3-log")))) (r "1.66")))

(define-public crate-flute-0.6.0 (c (n "flute") (v "0.6.0") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.17.3") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-log") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raptorq") (r "^1.7") (d #t) (k 0)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "11ica50d8ixlba30dm8v3a7inmgw3iwkvcy5r9yjz7h2f2964sy0") (f (quote (("python" "pyo3" "pyo3-log")))) (r "1.66")))

(define-public crate-flute-0.7.0 (c (n "flute") (v "0.7.0") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.17.3") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-log") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raptor-code") (r "^1.0.5") (d #t) (k 0)) (d (n "raptorq") (r "^1.7") (d #t) (k 0)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1n5vzfwajpzgap5zfgcwghs6vd9nrmf13jw45g6djrslylw80p1h") (f (quote (("python" "pyo3" "pyo3-log")))) (r "1.66")))

(define-public crate-flute-0.7.1 (c (n "flute") (v "0.7.1") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.17.3") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-log") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raptor-code") (r "^1.0.5") (d #t) (k 0)) (d (n "raptorq") (r "^1.7") (d #t) (k 0)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "14n89xb841pq029iqilii42z7gzf23cqah9xm9x708qfcpwsxk5n") (f (quote (("python" "pyo3" "pyo3-log")))) (r "1.66")))

(define-public crate-flute-1.0.0 (c (n "flute") (v "1.0.0") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.19") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-log") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.28") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raptor-code") (r "^1.0.5") (d #t) (k 0)) (d (n "raptorq") (r "^1.7") (d #t) (k 0)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0rnmfvc21sdk3arwqhdq3j3dhnycx5y8kg452fn0xsygrjq5wqbx") (f (quote (("python" "pyo3" "pyo3-log")))) (r "1.66")))

(define-public crate-flute-1.0.1 (c (n "flute") (v "1.0.1") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.19") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-log") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.28") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raptor-code") (r "^1.0.5") (d #t) (k 0)) (d (n "raptorq") (r "^1.7") (d #t) (k 0)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0l3dpwwdzifbdi9dz1kcsj69782ldmsc8sayskxc3v91nm3rbp9c") (f (quote (("python" "pyo3" "pyo3-log")))) (r "1.66")))

(define-public crate-flute-1.0.2 (c (n "flute") (v "1.0.2") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.19") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-log") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.28") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raptor-code") (r "^1.0.5") (d #t) (k 0)) (d (n "raptorq") (r "^1.7") (d #t) (k 0)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "11a5wqbs2q2gy72sp2w54zzsldyq6pqyrs999fhxlnr002xb616b") (f (quote (("python" "pyo3" "pyo3-log")))) (r "1.66")))

(define-public crate-flute-1.0.3 (c (n "flute") (v "1.0.3") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.19") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-log") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.1") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raptor-code") (r "^1.0.5") (d #t) (k 0)) (d (n "raptorq") (r "^1.7") (d #t) (k 0)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0q021w4w5xhy0w0w4dfx5gsm8gnadvvyhfs4g2yg8rhpafx5zva3") (f (quote (("python" "pyo3" "pyo3-log")))) (r "1.66")))

(define-public crate-flute-1.0.4 (c (n "flute") (v "1.0.4") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.19") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-log") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.1") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raptor-code") (r "^1.0.5") (d #t) (k 0)) (d (n "raptorq") (r "^1.7") (d #t) (k 0)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "15c9s9qxinz3bszik75ybilib6zf7bkdpxpyzrj1hgqr6xn32241") (f (quote (("python" "pyo3" "pyo3-log")))) (r "1.66")))

(define-public crate-flute-1.1.0 (c (n "flute") (v "1.1.0") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.19") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-log") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.1") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raptor-code") (r "^1.0.5") (d #t) (k 0)) (d (n "raptorq") (r "^1.7") (d #t) (k 0)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "05hsnxfnlbplwzlr53rpz5knp3d3chz72yws7iwzdb1rpqx86wlm") (f (quote (("python" "pyo3" "pyo3-log") ("optel" "opentelemetry")))) (r "1.66")))

(define-public crate-flute-1.1.1 (c (n "flute") (v "1.1.1") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.19") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-log") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.1") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raptor-code") (r "^1.0.5") (d #t) (k 0)) (d (n "raptorq") (r "^1.7") (d #t) (k 0)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "09gb3dq2h3hi4027v1249cph66qm95jw0kbkmg4n7khzm1rsbbsj") (f (quote (("python" "pyo3" "pyo3-log") ("optel" "opentelemetry")))) (r "1.66")))

(define-public crate-flute-1.1.3 (c (n "flute") (v "1.1.3") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.20") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-log") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raptor-code") (r "^1.0.5") (d #t) (k 0)) (d (n "raptorq") (r "^1.7") (d #t) (k 0)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1cpkawyhkivgjizrvf4ighypxhazcpfkprvw8iirdr6qnzay2q12") (f (quote (("python" "pyo3" "pyo3-log") ("optel" "opentelemetry")))) (r "1.66")))

(define-public crate-flute-1.1.4 (c (n "flute") (v "1.1.4") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.20") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-log") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raptor-code") (r "^1.0.5") (d #t) (k 0)) (d (n "raptorq") (r "^1.7") (d #t) (k 0)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1pj5c1n77nam60gy4m1kl7zj4gn3cvp6msb29b5q1r0jh525jqcc") (f (quote (("python" "pyo3" "pyo3-log") ("optel" "opentelemetry")))) (r "1.66")))

(define-public crate-flute-1.1.5 (c (n "flute") (v "1.1.5") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.20") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-log") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raptor-code") (r "^1.0.5") (d #t) (k 0)) (d (n "raptorq") (r "^1.7") (d #t) (k 0)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "162h1fz11s1xaa5aj8j9qpk6hjv0982px2dpaxszx8vq9r1wmx0r") (f (quote (("python" "pyo3" "pyo3-log") ("optel" "opentelemetry")))) (r "1.66")))

(define-public crate-flute-1.1.6 (c (n "flute") (v "1.1.6") (d (list (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.20") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-log") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raptor-code") (r "^1.0.6") (d #t) (k 0)) (d (n "raptorq") (r "^1.8") (d #t) (k 0)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (d #t) (k 0)))) (h "0kixkjyq55j2yid6yzqrdy6kk6hm3gyncpw687lqplmqzcf5xxgh") (f (quote (("python" "pyo3" "pyo3-log") ("optel" "opentelemetry")))) (r "1.66")))

(define-public crate-flute-1.1.7 (c (n "flute") (v "1.1.7") (d (list (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.20") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-log") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raptor-code") (r "^1.0.6") (d #t) (k 0)) (d (n "raptorq") (r "^1.8") (d #t) (k 0)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (d #t) (k 0)))) (h "0cgb5dm6ax9nx3ddiw8145hi40nvn9hqn4asa43az8vnbl0s43yl") (f (quote (("python" "pyo3" "pyo3-log") ("optel" "opentelemetry")))) (r "1.66")))

(define-public crate-flute-1.2.1 (c (n "flute") (v "1.2.1") (d (list (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.20") (f (quote ("extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-log") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raptor-code") (r "^1.0.6") (d #t) (k 0)) (d (n "raptorq") (r "^2.0") (d #t) (k 0)) (d (n "reed-solomon-erasure") (r "^6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (d #t) (k 0)))) (h "0b8ywawmk02iqjam54vqif5wvrlhl1s5fqsxbw0f6f03h5dhf6n5") (f (quote (("python" "pyo3" "pyo3-log") ("optel" "opentelemetry")))) (r "1.66")))

