(define-module (crates-io fl ui fluidlite) #:use-module (crates-io))

(define-public crate-fluidlite-0.1.0 (c (n "fluidlite") (v "0.1.0") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^0.3") (d #t) (k 2)) (d (n "fluidlite-lib") (r "^0.1.0") (f (quote ("with-sf3" "with-stb"))) (d #t) (k 2)) (d (n "fluidlite-sys") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)))) (h "1jnqmlpjq265068x1prdfzfzc75603zz73z0w5h4hcv0v4p3khsy") (f (quote (("rustdoc" "fluidlite-sys/rustdoc" "log") ("generate-bindings" "fluidlite-sys/generate-bindings"))))))

(define-public crate-fluidlite-0.1.2 (c (n "fluidlite") (v "0.1.2") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^0.3") (d #t) (k 2)) (d (n "fluidlite-lib") (r "^0.1.2") (f (quote ("with-sf3" "with-stb"))) (d #t) (k 2)) (d (n "fluidlite-sys") (r "^0.1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)))) (h "1j46kcscvm0sgxd6pdwpnfjpzgvidlqk4y5lbdfyqars0pfz99q5") (f (quote (("rustdoc" "fluidlite-sys/rustdoc" "log") ("generate-bindings" "fluidlite-sys/generate-bindings"))))))

(define-public crate-fluidlite-0.1.3 (c (n "fluidlite") (v "0.1.3") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^0.3") (d #t) (k 2)) (d (n "fluidlite-lib") (r "^0.1.3") (f (quote ("with-sf3" "with-stb"))) (d #t) (k 2)) (d (n "fluidlite-sys") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)))) (h "064r29f6k7jh3m6wq7mxiyh6in8xiy8csrr33vwazm5kxi87fck5") (f (quote (("rustdoc" "fluidlite-sys/rustdoc" "log") ("generate-bindings" "fluidlite-sys/generate-bindings"))))))

(define-public crate-fluidlite-0.2.0 (c (n "fluidlite") (v "0.2.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1") (d #t) (k 2)) (d (n "fluidlite-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "fluidlite-sys") (r "^0.2.0") (f (quote ("builtin" "with-sf3" "with-stb"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)))) (h "171nfxg7ywq7nv29z5lavkk70il264lhr7dw0w0c408i72ym491l") (f (quote (("with-stb" "fluidlite-sys/with-stb") ("with-sf3" "fluidlite-sys/with-sf3") ("static" "fluidlite-sys/static") ("shared" "fluidlite-sys/shared") ("rustdoc" "fluidlite-sys/rustdoc" "log") ("pkg-config" "fluidlite-sys/pkg-config") ("default") ("builtin" "fluidlite-sys/builtin") ("bindgen" "fluidlite-sys/bindgen"))))))

(define-public crate-fluidlite-0.2.1 (c (n "fluidlite") (v "0.2.1") (d (list (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3.3") (d #t) (k 1)) (d (n "fluidlite-sys") (r "^0.2.1") (d #t) (k 0)) (d (n "fluidlite-sys") (r "^0.2.1") (f (quote ("builtin" "with-sf3" "with-stb"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)))) (h "00d456sxj4zy397jcnfynmsigcjpijscbb19im0vj08vdv66a0kw") (f (quote (("with-stb" "fluidlite-sys/with-stb") ("with-sf3" "fluidlite-sys/with-sf3") ("static" "fluidlite-sys/static") ("shared" "fluidlite-sys/shared") ("rustdoc" "fluidlite-sys/rustdoc" "log") ("pkg-config" "fluidlite-sys/pkg-config") ("default") ("builtin" "fluidlite-sys/builtin") ("bindgen" "fluidlite-sys/bindgen"))))))

