(define-module (crates-io fl um flume) #:use-module (crates-io))

(define-public crate-flume-0.1.0 (c (n "flume") (v "0.1.0") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 2)) (d (n "deque") (r "^0.3") (d #t) (k 0)) (d (n "spin") (r "^0.5") (d #t) (k 0)))) (h "0ah578y0nzlpmp08js1g4j7lhq08qjxzlihs8vnjpjhi29h4dad1")))

(define-public crate-flume-0.2.0 (c (n "flume") (v "0.2.0") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 2)) (d (n "spin") (r "^0.5") (d #t) (k 0)) (d (n "spin_sleep") (r "^0.3") (d #t) (k 0)))) (h "1yxj6q1gda516y4m2r4p852y4p76i3izw2yda403nh4461pvplgq")))

(define-public crate-flume-0.3.0 (c (n "flume") (v "0.3.0") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 2)) (d (n "spin") (r "^0.5") (d #t) (k 0)) (d (n "spin_sleep") (r "^0.3") (d #t) (k 0)))) (h "1zsqz08pi1p520n33didhdiby0547g5j85agwsmzxgh2wfw6bgsk")))

(define-public crate-flume-0.3.1 (c (n "flume") (v "0.3.1") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "spin") (r "^0.5") (d #t) (k 0)))) (h "1qpdb29yyrln2gznlvds3mkqp105qfs8iawh6n985ih9vinx3a47")))

(define-public crate-flume-0.3.2 (c (n "flume") (v "0.3.2") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 2)) (d (n "spin") (r "^0.5") (d #t) (k 0)))) (h "1sjxjnhkxa1sb8hgmv255v28m1rasgvc8acw7jrndhh1wp1x3yzs")))

(define-public crate-flume-0.4.0 (c (n "flume") (v "0.4.0") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 2)) (d (n "spin") (r "^0.5") (d #t) (k 0)))) (h "02bnfkpyqx51cvbqhjwqmydr50iw7n5hziv8vdmsrmya26nyci4x")))

(define-public crate-flume-0.5.0 (c (n "flume") (v "0.5.0") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 2)) (d (n "spin") (r "^0.5") (d #t) (k 0)))) (h "0alm46jn9zbd9hf2x0rgmixi7l3wi7g1di8xk6r4a0mv73d3pk0a")))

(define-public crate-flume-0.5.1 (c (n "flume") (v "0.5.1") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 2)) (d (n "spin") (r "^0.5") (d #t) (k 0)))) (h "185x7w8jxsjsmzckdndzv27zyhaj1hgf1s4j126y3iaglib7nsda")))

(define-public crate-flume-0.6.0 (c (n "flume") (v "0.6.0") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 2)) (d (n "spin") (r "^0.5") (d #t) (k 0)))) (h "1yfv1mh4pzjn32ha5211msiv7dh746fgsf6ls94j36dn2bd3xxba") (f (quote (("select") ("default" "select"))))))

(define-public crate-flume-0.6.1 (c (n "flume") (v "0.6.1") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 2)) (d (n "spin") (r "^0.5") (d #t) (k 0)))) (h "1z68ydnhli4l7wbmwhag42y3sjza5hrjh1fki0phsg6gzs30ixfx") (f (quote (("select") ("default" "select"))))))

(define-public crate-flume-0.6.2 (c (n "flume") (v "0.6.2") (d (list (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 2)) (d (n "spin") (r "^0.5") (d #t) (k 0)))) (h "05hnkcak097y462mik8jxyypibh896nra0z6dib6a2qs6ij8g2hm") (f (quote (("select") ("default" "select"))))))

(define-public crate-flume-0.7.0 (c (n "flume") (v "0.7.0") (d (list (d (n "async-std") (r "^1.5") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 2)) (d (n "spin") (r "^0.5") (d #t) (k 0)))) (h "1iicc50siibdbdl0r5b9z3njzsmzgf4q0rf3kjfwvlrf2paa6k6s") (f (quote (("select") ("default" "select" "async") ("async"))))))

(define-public crate-flume-0.7.1 (c (n "flume") (v "0.7.1") (d (list (d (n "async-std") (r "^1.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (k 0)) (d (n "spin") (r "^0.5") (d #t) (k 0)))) (h "12rq8wxjhh9x5xlqv66756gynls5niir8vxslrjp129m71f2hpl5") (f (quote (("select") ("default" "select" "async") ("async" "futures"))))))

(define-public crate-flume-0.7.2 (c (n "flume") (v "0.7.2") (d (list (d (n "async-std") (r "^1.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (k 0)) (d (n "spin") (r "^0.5") (d #t) (k 0)))) (h "05xm4snq52lpgpwyayi0k0w4diraqca5abd8znm2lv33cjiljlw3") (f (quote (("select") ("default" "select" "async") ("async" "futures"))))))

(define-public crate-flume-0.8.0 (c (n "flume") (v "0.8.0") (d (list (d (n "async-std") (r "^1.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "spinning_top") (r "^0.2") (d #t) (k 0)))) (h "1fzvc88npzf5pk4jh4pfvaawns6pdmia553f5d97zx7fv6x1p7g9") (f (quote (("select") ("eventual-fairness" "async" "rand") ("default" "async" "select" "eventual-fairness") ("async" "futures"))))))

(define-public crate-flume-0.8.1 (c (n "flume") (v "0.8.1") (d (list (d (n "async-std") (r "^1.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "spinning_top") (r "^0.2") (d #t) (k 0)))) (h "0p09xw4h42wmp10macfacbk0kr9z7yycv8bf0989h98b214p7pkg") (f (quote (("select") ("eventual-fairness" "async" "rand") ("default" "async" "select" "eventual-fairness") ("async" "futures"))))))

(define-public crate-flume-0.8.3 (c (n "flume") (v "0.8.3") (d (list (d (n "async-std") (r "^1.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "spinning_top") (r "^0.2") (d #t) (k 0)))) (h "1km08jmfjwavwmzb6lz1g0m9kl1dv1h40sig49b2jx90n1i9b57z") (f (quote (("select") ("eventual-fairness" "async" "rand") ("default" "async" "select" "eventual-fairness") ("async" "futures"))))))

(define-public crate-flume-0.8.4 (c (n "flume") (v "0.8.4") (d (list (d (n "async-std") (r "^1.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "spinning_top") (r "^0.2") (d #t) (k 0)))) (h "062m7wsy0d9w3a0vfd4irhyqxblwgxisfk2x69gy5cm843qrrwr1") (f (quote (("select") ("eventual-fairness" "async" "rand") ("default" "async" "select" "eventual-fairness") ("async" "futures"))))))

(define-public crate-flume-0.9.0 (c (n "flume") (v "0.9.0") (d (list (d (n "async-std") (r "^1.5") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (d #t) (k 2)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "spinning_top") (r "^0.2") (d #t) (k 0)))) (h "0ip9cvq1a067xbhkqqxpyl1yd5ja2bh75n017jvsz36bhlflyzcg") (f (quote (("select") ("eventual-fairness" "async" "rand") ("default" "async" "select" "eventual-fairness") ("async" "futures"))))))

(define-public crate-flume-0.9.1 (c (n "flume") (v "0.9.1") (d (list (d (n "async-std") (r "^1.5") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3.5") (o #t) (k 0)) (d (n "futures-sink") (r "^0.3.5") (o #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "spinning_top") (r "^0.2") (d #t) (k 0)))) (h "0mcxzcgvfckpkbsi06kavnyqfnksgy3jym0fvzblsvvplzpiis6r") (f (quote (("select") ("eventual-fairness" "async" "rand") ("default" "async" "select" "eventual-fairness") ("async" "futures-sink" "futures-core"))))))

(define-public crate-flume-0.9.2 (c (n "flume") (v "0.9.2") (d (list (d (n "async-std") (r "^1.5") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3.5") (o #t) (k 0)) (d (n "futures-sink") (r "^0.3.5") (o #t) (k 0)) (d (n "nanorand") (r "^0.4") (f (quote ("getrandom"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "spinning_top") (r "^0.2") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1.0") (d #t) (k 2)))) (h "0ck1w9881848xjjk93nxqsvnxfp4xsaysxxn23a210bg2amsvsqv") (f (quote (("select") ("eventual-fairness" "async" "nanorand") ("default" "async" "select" "eventual-fairness") ("async" "futures-sink" "futures-core"))))))

(define-public crate-flume-0.10.0 (c (n "flume") (v "0.10.0") (d (list (d (n "async-std") (r "^1.5") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3.5") (o #t) (k 0)) (d (n "futures-sink") (r "^0.3.5") (o #t) (k 0)) (d (n "nanorand") (r "^0.5") (f (quote ("getrandom"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "spinning_top") (r "^0.2") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1.0") (d #t) (k 2)))) (h "14dvj6d2r6vgsy3adv4lncbddjwc59rgl0rcwc1kdnsmqkh7lwhy") (f (quote (("select") ("eventual-fairness" "async" "nanorand") ("default" "async" "select" "eventual-fairness") ("async" "futures-sink" "futures-core"))))))

(define-public crate-flume-0.10.1 (c (n "flume") (v "0.10.1") (d (list (d (n "async-std") (r "^1.5") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3.5") (o #t) (k 0)) (d (n "futures-sink") (r "^0.3.5") (o #t) (k 0)) (d (n "nanorand") (r "^0.5") (f (quote ("getrandom"))) (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "spinning_top") (r "^0.2") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1.0") (d #t) (k 2)))) (h "1a84f514b2wqc5wr616w0kc11s46b827ijxljpzm9a0z9jffyqh3") (f (quote (("select") ("eventual-fairness" "async" "nanorand") ("default" "async" "select" "eventual-fairness") ("async" "futures-sink" "futures-core" "pin-project"))))))

(define-public crate-flume-0.10.2 (c (n "flume") (v "0.10.2") (d (list (d (n "async-std") (r "^1.5") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3.5") (o #t) (k 0)) (d (n "futures-sink") (r "^0.3.5") (o #t) (k 0)) (d (n "nanorand") (r "^0.5") (f (quote ("getrandom"))) (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "spinning_top") (r "^0.2") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1.0") (d #t) (k 2)))) (h "125msmrd374fg9xl184zii514mbflz8mskdlf6i613wvp5d6h6jk") (f (quote (("select") ("eventual-fairness" "async" "nanorand") ("default" "async" "select" "eventual-fairness") ("async" "futures-sink" "futures-core" "pin-project"))))))

(define-public crate-flume-0.10.3 (c (n "flume") (v "0.10.3") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (k 0)) (d (n "futures-sink") (r "^0.3") (o #t) (k 0)) (d (n "nanorand") (r "^0.5") (f (quote ("getrandom"))) (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "spinning_top") (r "^0.2") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1.0") (d #t) (k 2)))) (h "0v5ynvq6kr58ml3wdalzkcy165zs03jf6b3if4vggdd9sjjhz7l5") (f (quote (("select") ("eventual-fairness" "async" "nanorand") ("default" "async" "select" "eventual-fairness") ("async" "futures-sink" "futures-core" "pin-project"))))))

(define-public crate-flume-0.10.4 (c (n "flume") (v "0.10.4") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (k 0)) (d (n "futures-sink") (r "^0.3") (o #t) (k 0)) (d (n "nanorand") (r "^0.5") (f (quote ("getrandom"))) (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "spinning_top") (r "^0.2") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1.0") (d #t) (k 2)))) (h "1pqpaal84p372if4w8w9zxqj1zc1kdfgrbg6i6ljwn6lyjdfdz0i") (f (quote (("select") ("eventual-fairness" "async" "nanorand") ("default" "async" "select" "eventual-fairness") ("async" "futures-sink" "futures-core" "pin-project"))))))

(define-public crate-flume-0.10.5 (c (n "flume") (v "0.10.5") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (k 0)) (d (n "futures-sink") (r "^0.3") (o #t) (k 0)) (d (n "nanorand") (r "^0.5") (f (quote ("getrandom"))) (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "spinning_top") (r "^0.2") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1.0") (d #t) (k 2)))) (h "1abhzvanhhqp2pbyp20xryr9vqlccz4413pxmqxv8bch3swnd7gs") (f (quote (("select") ("eventual-fairness" "async" "nanorand") ("default" "async" "select" "eventual-fairness") ("async" "futures-sink" "futures-core" "pin-project"))))))

(define-public crate-flume-0.10.6 (c (n "flume") (v "0.10.6") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (k 0)) (d (n "futures-sink") (r "^0.3") (o #t) (k 0)) (d (n "nanorand") (r "^0.5") (f (quote ("getrandom"))) (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "spinning_top") (r "^0.2") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1.0") (d #t) (k 2)))) (h "0ljszymbr1clixx3d4dmjwsy8vzp65bzwza77y03pdbvq3aiqxyi") (f (quote (("select") ("eventual-fairness" "async" "nanorand") ("default" "async" "select" "eventual-fairness") ("async" "futures-sink" "futures-core" "pin-project")))) (y #t)))

(define-public crate-flume-0.10.7 (c (n "flume") (v "0.10.7") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (k 0)) (d (n "futures-sink") (r "^0.3") (o #t) (k 0)) (d (n "nanorand") (r "^0.5") (f (quote ("getrandom"))) (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "spinning_top") (r "^0.2") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1.0") (d #t) (k 2)))) (h "1szilygrw57mclf4lixhqp9labkhxmwg1kg4kim76ncpabl1dbfx") (f (quote (("select") ("eventual-fairness" "async" "nanorand") ("default" "async" "select" "eventual-fairness") ("async" "futures-sink" "futures-core" "pin-project"))))))

(define-public crate-flume-0.10.8 (c (n "flume") (v "0.10.8") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (k 0)) (d (n "futures-sink") (r "^0.3") (o #t) (k 0)) (d (n "nanorand") (r "^0.6") (f (quote ("getrandom"))) (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "spinning_top") (r "^0.2") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1.0") (d #t) (k 2)))) (h "0br9w5kqslfsyjbjfx3lxxzpxn97zaq9cy0j70dkkfymza0cr41f") (f (quote (("select") ("eventual-fairness" "async" "nanorand") ("default" "async" "select" "eventual-fairness") ("async" "futures-sink" "futures-core" "pin-project"))))))

(define-public crate-flume-0.10.9 (c (n "flume") (v "0.10.9") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.5") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (k 0)) (d (n "futures-sink") (r "^0.3") (o #t) (k 0)) (d (n "nanorand") (r "^0.6") (f (quote ("getrandom"))) (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "spin") (r "^0.9.2") (f (quote ("mutex"))) (d #t) (k 0)) (d (n "waker-fn") (r "^1.1.0") (d #t) (k 2)))) (h "1d4a7wl9a6j8bqmm1jsycq5y36cgagbkwhcyc1i3m41s7d3zvhr4") (f (quote (("select") ("eventual-fairness" "async" "nanorand") ("default" "async" "select" "eventual-fairness") ("async" "futures-sink" "futures-core" "pin-project"))))))

(define-public crate-flume-0.10.10 (c (n "flume") (v "0.10.10") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.5") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (k 0)) (d (n "futures-sink") (r "^0.3") (o #t) (k 0)) (d (n "nanorand") (r "^0.6") (f (quote ("getrandom"))) (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "spin1") (r "^0.9.2") (f (quote ("mutex"))) (d #t) (k 0) (p "spin")) (d (n "waker-fn") (r "^1.1.0") (d #t) (k 2)))) (h "1h3sjks6n8cfw32lw7g37g7cl140i5m4gxmn8vhqh09427yxl12x") (f (quote (("spin") ("select") ("eventual-fairness" "async" "nanorand") ("default" "async" "select" "eventual-fairness") ("async" "futures-sink" "futures-core" "pin-project"))))))

(define-public crate-flume-0.10.11 (c (n "flume") (v "0.10.11") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.5") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (k 0)) (d (n "futures-sink") (r "^0.3") (o #t) (k 0)) (d (n "nanorand") (r "^0.6") (f (quote ("getrandom"))) (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "spin1") (r "^0.9.2") (f (quote ("mutex"))) (d #t) (k 0) (p "spin")) (d (n "tokio") (r "^1.16.1") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1.0") (d #t) (k 2)))) (h "1i1zgmdxvq2gn8c4kr86rihik9whnlfiasyjvjaxxa8mlwv989qb") (f (quote (("spin") ("select") ("eventual-fairness" "async" "nanorand") ("default" "async" "select" "eventual-fairness") ("async" "futures-sink" "futures-core" "pin-project"))))))

(define-public crate-flume-0.10.12 (c (n "flume") (v "0.10.12") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.5") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (k 0)) (d (n "futures-sink") (r "^0.3") (o #t) (k 0)) (d (n "nanorand") (r "^0.7") (f (quote ("getrandom"))) (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "spin1") (r "^0.9.2") (f (quote ("mutex"))) (d #t) (k 0) (p "spin")) (d (n "tokio") (r "^1.16.1") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1.0") (d #t) (k 2)))) (h "0sn7hx83gajfifp93xn4pj5c4x3ja06sr47aq55sa30cklch6g44") (f (quote (("spin") ("select") ("eventual-fairness" "async" "nanorand") ("default" "async" "select" "eventual-fairness") ("async" "futures-sink" "futures-core" "pin-project"))))))

(define-public crate-flume-0.10.13 (c (n "flume") (v "0.10.13") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.5") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (k 0)) (d (n "futures-sink") (r "^0.3") (o #t) (k 0)) (d (n "nanorand") (r "^0.7") (f (quote ("getrandom"))) (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "spin1") (r "^0.9.2") (f (quote ("mutex"))) (d #t) (k 0) (p "spin")) (d (n "tokio") (r "^1.16.1") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1.0") (d #t) (k 2)))) (h "1nh3hg9rybfp5a0fx9jmrfjwxllvfkmmyn6cp05aqz0mlf4vbvhw") (f (quote (("spin") ("select") ("eventual-fairness" "async" "nanorand") ("default" "async" "select" "eventual-fairness") ("async" "futures-sink" "futures-core" "pin-project"))))))

(define-public crate-flume-0.10.14 (c (n "flume") (v "0.10.14") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.5") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (k 0)) (d (n "futures-sink") (r "^0.3") (o #t) (k 0)) (d (n "nanorand") (r "^0.7") (f (quote ("getrandom"))) (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "spin1") (r "^0.9.2") (f (quote ("mutex"))) (d #t) (k 0) (p "spin")) (d (n "tokio") (r "^1.16.1") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1.0") (d #t) (k 2)))) (h "0xvm1wpzkjvf99jxy9jp3dxw5nipa9blg7j0ngvxj0rl3i2b8mqn") (f (quote (("spin") ("select") ("eventual-fairness" "async" "nanorand") ("default" "async" "select" "eventual-fairness") ("async" "futures-sink" "futures-core" "pin-project"))))))

(define-public crate-flume-0.11.0 (c (n "flume") (v "0.11.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.5") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (k 0)) (d (n "futures-sink") (r "^0.3") (o #t) (k 0)) (d (n "nanorand") (r "^0.7") (f (quote ("getrandom"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "spin1") (r "^0.9.8") (f (quote ("mutex"))) (d #t) (k 0) (p "spin")) (d (n "tokio") (r "^1.16.1") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1.0") (d #t) (k 2)))) (h "10girdbqn77wi802pdh55lwbmymy437k7kklnvj12aaiwaflbb2m") (f (quote (("spin") ("select") ("eventual-fairness" "select" "nanorand") ("default" "async" "select" "eventual-fairness") ("async" "futures-sink" "futures-core"))))))

