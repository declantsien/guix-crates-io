(define-module (crates-io ez no ezno-checker) #:use-module (crates-io))

(define-public crate-ezno-checker-0.0.1 (c (n "ezno-checker") (v "0.0.1") (h "11dh31iypl7q9lc0qbc498bycgbqn6vd8l7j59llxwvlk8hk1y48")))

(define-public crate-ezno-checker-0.0.2 (c (n "ezno-checker") (v "0.0.2") (d (list (d (n "bimap") (r "^0.6.2") (d #t) (k 0)) (d (n "binary-serialize-derive") (r "^0.0.1") (d #t) (k 0)) (d (n "derive-debug-extras") (r "^0.2.0") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2") (d #t) (k 0)) (d (n "levenshtein") (r "^1.0.5") (d #t) (k 0)) (d (n "map_vec") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0.0") (d #t) (k 0)) (d (n "parser") (r "^0.0.3") (f (quote ("extras"))) (o #t) (d #t) (k 0) (p "ezno-parser")) (d (n "path-absolutize") (r "^3.0.14") (f (quote ("use_unix_paths_on_wasm"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "source-map") (r "^0.12.0") (f (quote ("span-serialize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)))) (h "1fla6zldv74mkkdkk3lx6l7dvf5pwf1vrxls2r29gcchppgwirb5") (f (quote (("ezno-parser" "parser") ("default") ("declaration-synthesis"))))))

(define-public crate-ezno-checker-0.0.3 (c (n "ezno-checker") (v "0.0.3") (d (list (d (n "bimap") (r "^0.6.2") (d #t) (k 0)) (d (n "binary-serialize-derive") (r "^0.0.1") (d #t) (k 0)) (d (n "derive-debug-extras") (r "^0.2.0") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2") (d #t) (k 0)) (d (n "levenshtein") (r "^1.0.5") (d #t) (k 0)) (d (n "map_vec") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0.0") (d #t) (k 0)) (d (n "parser") (r "^0.0.3") (f (quote ("extras"))) (o #t) (d #t) (k 0) (p "ezno-parser")) (d (n "path-absolutize") (r "^3.0.14") (f (quote ("use_unix_paths_on_wasm"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "source-map") (r "^0.12.0") (f (quote ("span-serialize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)))) (h "0p7y76s04im3b42xpqblv7ckpw7ry9sixagbj8g5mzwxyz1b44v4") (f (quote (("ezno-parser" "parser") ("default") ("declaration-synthesis"))))))

(define-public crate-ezno-checker-0.0.4 (c (n "ezno-checker") (v "0.0.4") (d (list (d (n "bimap") (r "^0.6.2") (d #t) (k 0)) (d (n "binary-serialize-derive") (r "^0.0.1") (d #t) (k 0)) (d (n "derive-debug-extras") (r "^0.2.0") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2") (d #t) (k 0)) (d (n "levenshtein") (r "^1.0.5") (d #t) (k 0)) (d (n "map_vec") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0.0") (d #t) (k 0)) (d (n "parser") (r "^0.0.3") (f (quote ("extras"))) (o #t) (d #t) (k 0) (p "ezno-parser")) (d (n "path-absolutize") (r "^3.0.14") (f (quote ("use_unix_paths_on_wasm"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "source-map") (r "^0.12.0") (f (quote ("span-serialize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)))) (h "08c5n8d42900rjvkziz8ka1z84ds68n6rjhwx56yiryjh9ic72ff") (f (quote (("ezno-parser" "parser") ("default") ("declaration-synthesis"))))))

(define-public crate-ezno-checker-0.0.5 (c (n "ezno-checker") (v "0.0.5") (d (list (d (n "bimap") (r "^0.6.2") (d #t) (k 0)) (d (n "binary-serialize-derive") (r "^0.0.1") (d #t) (k 0)) (d (n "derive-debug-extras") (r "^0.2.0") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2") (d #t) (k 0)) (d (n "levenshtein") (r "^1.0.5") (d #t) (k 0)) (d (n "map_vec") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0.0") (d #t) (k 0)) (d (n "parser") (r "^0.0.4") (f (quote ("extras"))) (o #t) (d #t) (k 0) (p "ezno-parser")) (d (n "path-absolutize") (r "^3.0.14") (f (quote ("use_unix_paths_on_wasm"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "source-map") (r "^0.13") (f (quote ("span-serialize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)))) (h "0p7cpif791hyvw3lmaz6jgzbwlj0wscwr90hjcz30gfbfv1d4ial") (f (quote (("ezno-parser" "parser") ("default"))))))

(define-public crate-ezno-checker-0.0.6 (c (n "ezno-checker") (v "0.0.6") (d (list (d (n "bimap") (r "^0.6.2") (d #t) (k 0)) (d (n "binary-serialize-derive") (r "^0.0.1") (d #t) (k 0)) (d (n "derive-debug-extras") (r "^0.2.0") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2") (d #t) (k 0)) (d (n "levenshtein") (r "^1.0.5") (d #t) (k 0)) (d (n "map_vec") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0.0") (d #t) (k 0)) (d (n "parser") (r "^0.0.4") (f (quote ("extras"))) (o #t) (d #t) (k 0) (p "ezno-parser")) (d (n "path-absolutize") (r "^3.0.14") (f (quote ("use_unix_paths_on_wasm"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "source-map") (r "^0.13") (f (quote ("span-serialize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)))) (h "186i3xachblrjcdw0d68kgzsyvx6sfd3bklcm8qbjl3gyklcsfpr") (f (quote (("ezno-parser" "parser") ("default"))))))

(define-public crate-ezno-checker-0.0.7 (c (n "ezno-checker") (v "0.0.7") (d (list (d (n "bimap") (r "^0.6.2") (d #t) (k 0)) (d (n "binary-serialize-derive") (r "^0.0.1") (d #t) (k 0)) (d (n "derive-debug-extras") (r "^0.2.0") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2") (d #t) (k 0)) (d (n "levenshtein") (r "^1.0.5") (d #t) (k 0)) (d (n "map_vec") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0.0") (d #t) (k 0)) (d (n "parser") (r "^0.0.4") (f (quote ("extras"))) (o #t) (d #t) (k 0) (p "ezno-parser")) (d (n "path-absolutize") (r "^3.0.14") (f (quote ("use_unix_paths_on_wasm"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "source-map") (r "^0.13") (f (quote ("span-serialize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)))) (h "09jri8sy23zp60m0mmxb1c8fjn1vg4fnws445v0v9q552rmf8jf1") (f (quote (("ezno-parser" "parser") ("default"))))))

(define-public crate-ezno-checker-0.0.8 (c (n "ezno-checker") (v "0.0.8") (d (list (d (n "bimap") (r "^0.6.2") (d #t) (k 0)) (d (n "binary-serialize-derive") (r "^0.0.1") (d #t) (k 0)) (d (n "derive-debug-extras") (r "^0.2.0") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2") (d #t) (k 0)) (d (n "levenshtein") (r "^1.0.5") (d #t) (k 0)) (d (n "map_vec") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0.0") (d #t) (k 0)) (d (n "parser") (r "^0.0.5") (f (quote ("extras"))) (o #t) (d #t) (k 0) (p "ezno-parser")) (d (n "path-absolutize") (r "^3.0.14") (f (quote ("use_unix_paths_on_wasm"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "source-map") (r "^0.14.2") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)))) (h "1ny5rs7an53ijf8dkywrm2qz6v1h4imgvrhrf4cvqmlmp5p7m1bk") (f (quote (("ezno-parser" "parser") ("default"))))))

(define-public crate-ezno-checker-0.0.9 (c (n "ezno-checker") (v "0.0.9") (d (list (d (n "bimap") (r "^0.6.2") (d #t) (k 0)) (d (n "binary-serialize-derive") (r "^0.0.1") (d #t) (k 0)) (d (n "derive-debug-extras") (r "^0.2.0") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2") (d #t) (k 0)) (d (n "levenshtein") (r "^1.0.5") (d #t) (k 0)) (d (n "map_vec") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0.0") (d #t) (k 0)) (d (n "parser") (r "^0.0.6") (f (quote ("extras"))) (o #t) (d #t) (k 0) (p "ezno-parser")) (d (n "path-absolutize") (r "^3.0.14") (f (quote ("use_unix_paths_on_wasm"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "source-map") (r "^0.14.5") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)))) (h "08vv4pcz8h1iikwyrc7igyfbjl8s1i1zd4cy1h1jvh74lfg1b3bv") (f (quote (("ezno-parser" "parser") ("default"))))))

(define-public crate-ezno-checker-0.0.10 (c (n "ezno-checker") (v "0.0.10") (d (list (d (n "bimap") (r "^0.6.2") (d #t) (k 0)) (d (n "binary-serialize-derive") (r "^0.0.1") (d #t) (k 0)) (d (n "derive-debug-extras") (r "^0.2.0") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2") (d #t) (k 0)) (d (n "levenshtein") (r "^1.0.5") (d #t) (k 0)) (d (n "map_vec") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0.0") (d #t) (k 0)) (d (n "parser") (r "^0.0.7") (f (quote ("extras"))) (o #t) (d #t) (k 0) (p "ezno-parser")) (d (n "path-absolutize") (r "^3.0.14") (f (quote ("use_unix_paths_on_wasm"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "source-map") (r "^0.14.6") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)))) (h "0024akwfziaymsc586bk0vh38b1qkf92gif0vhw13xh8xdsn5dz7") (f (quote (("ezno-parser" "parser") ("default"))))))

(define-public crate-ezno-checker-0.0.11 (c (n "ezno-checker") (v "0.0.11") (d (list (d (n "bimap") (r "^0.6.2") (d #t) (k 0)) (d (n "binary-serialize-derive") (r "^0.0.1") (d #t) (k 0)) (d (n "derive-debug-extras") (r "^0.2.0") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2") (d #t) (k 0)) (d (n "levenshtein") (r "^1.0.5") (d #t) (k 0)) (d (n "map_vec") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0.0") (d #t) (k 0)) (d (n "parser") (r "^0.0.8") (f (quote ("extras"))) (o #t) (d #t) (k 0) (p "ezno-parser")) (d (n "path-absolutize") (r "^3.0.14") (f (quote ("use_unix_paths_on_wasm"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "source-map") (r "^0.14.6") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)))) (h "1viahykkd04in1cplm06dy81fw27cv33m47bx1h23bgm6rb1mxvy") (f (quote (("ezno-parser" "parser") ("default"))))))

(define-public crate-ezno-checker-0.0.12 (c (n "ezno-checker") (v "0.0.12") (d (list (d (n "bimap") (r "^0.6.2") (d #t) (k 0)) (d (n "binary-serialize-derive") (r "^0.0.1") (d #t) (k 0)) (d (n "derive-debug-extras") (r "^0.2.0") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2") (d #t) (k 0)) (d (n "levenshtein") (r "^1.0.5") (d #t) (k 0)) (d (n "map_vec") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0.0") (d #t) (k 0)) (d (n "parser") (r "^0.1.1") (f (quote ("extras"))) (o #t) (d #t) (k 0) (p "ezno-parser")) (d (n "path-absolutize") (r "^3.0.14") (f (quote ("use_unix_paths_on_wasm"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "source-map") (r "^0.14.6") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)))) (h "1vxb6jgmcakpnl7pv88dalbzdckhkhy4zl3jy17j11fk32l8n94g") (f (quote (("ezno-parser" "parser") ("default"))))))

(define-public crate-ezno-checker-0.0.13 (c (n "ezno-checker") (v "0.0.13") (d (list (d (n "bimap") (r "^0.6.2") (d #t) (k 0)) (d (n "binary-serialize-derive") (r "^0.0.1") (d #t) (k 0)) (d (n "derive-debug-extras") (r "^0.2.0") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2") (d #t) (k 0)) (d (n "levenshtein") (r "^1.0.5") (d #t) (k 0)) (d (n "map_vec") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0.0") (d #t) (k 0)) (d (n "parser") (r "^0.1.2") (f (quote ("extras"))) (o #t) (d #t) (k 0) (p "ezno-parser")) (d (n "path-absolutize") (r "^3.0.14") (f (quote ("use_unix_paths_on_wasm"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "source-map") (r "^0.14.7") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)))) (h "09icwrns10fl7ph2mja0q49kwaannpribb091v0skpm9jk778h5x") (f (quote (("ezno-parser" "parser") ("default"))))))

(define-public crate-ezno-checker-0.0.14 (c (n "ezno-checker") (v "0.0.14") (d (list (d (n "bimap") (r "^0.6.2") (d #t) (k 0)) (d (n "binary-serialize-derive") (r "^0.0.1") (d #t) (k 0)) (d (n "derive-debug-extras") (r "^0.2.0") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "erased-serde") (r "^0.4.1") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2") (d #t) (k 0)) (d (n "levenshtein") (r "^1.0.5") (d #t) (k 0)) (d (n "map_vec") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "ordered-float") (r "^4.2.0") (d #t) (k 0)) (d (n "parser") (r "^0.1.3") (f (quote ("extras"))) (o #t) (d #t) (k 0) (p "ezno-parser")) (d (n "path-absolutize") (r "^3.0.14") (f (quote ("use_unix_paths_on_wasm"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "source-map") (r "^0.14.7") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)))) (h "1l82f3899xpjhcxvbzrvfvcagxfwd7wk3kljlzs4q3a582cbj4hn") (f (quote (("ezno-parser" "parser") ("default"))))))

(define-public crate-ezno-checker-0.0.15 (c (n "ezno-checker") (v "0.0.15") (d (list (d (n "bimap") (r "^0.6.2") (d #t) (k 0)) (d (n "binary-serialize-derive") (r "^0.0.1") (d #t) (k 0)) (d (n "derive-debug-extras") (r "^0.3") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.2") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2") (d #t) (k 0)) (d (n "levenshtein") (r "^1.0.5") (d #t) (k 0)) (d (n "map_vec") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "ordered-float") (r "^4.2.0") (d #t) (k 0)) (d (n "parser") (r "^0.1.4") (f (quote ("extras"))) (o #t) (d #t) (k 0) (p "ezno-parser")) (d (n "path-absolutize") (r "^3.0.14") (f (quote ("use_unix_paths_on_wasm"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simple-json-parser") (r "^0.0.2") (d #t) (k 0)) (d (n "source-map") (r "^0.14.10") (f (quote ("serde-serialize" "self-rust-tokenize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)) (d (n "tsify") (r "^0.4.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen") (r "=0.2.89") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "16myvw7xmwaim1pi150v58wc2raz8p88ra6a96iswpw1ny58d27w") (f (quote (("default" "ezno-parser")))) (s 2) (e (quote (("serde-serialize" "dep:serde") ("ezno-parser" "dep:parser"))))))

(define-public crate-ezno-checker-0.0.16 (c (n "ezno-checker") (v "0.0.16") (d (list (d (n "binary-serialize-derive") (r "^0.0.1") (d #t) (k 0)) (d (n "derive-debug-extras") (r "^0.3") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.2") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.3") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2") (d #t) (k 0)) (d (n "levenshtein") (r "^1") (d #t) (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "parser") (r "^0.1.5") (f (quote ("extras"))) (o #t) (d #t) (k 0) (p "ezno-parser")) (d (n "path-absolutize") (r "^3.0") (f (quote ("use_unix_paths_on_wasm"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simple-json-parser") (r "^0.0.2") (d #t) (k 0)) (d (n "source-map") (r "^0.15") (f (quote ("serde-serialize" "self-rust-tokenize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1") (d #t) (k 0)) (d (n "tsify") (r "^0.4.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen") (r "=0.2.89") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "0xb44m2b2xgia6a166na9bnk80cxvyyg6i7farrxmq6ns3dmh066") (f (quote (("default" "ezno-parser")))) (s 2) (e (quote (("serde-serialize" "dep:serde") ("ezno-parser" "dep:parser"))))))

