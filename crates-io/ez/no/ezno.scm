(define-module (crates-io ez no ezno) #:use-module (crates-io))

(define-public crate-ezno-0.0.0 (c (n "ezno") (v "0.0.0") (h "09jqx87rcqzywpsaz4vkxz6w455fqxjs9m01kq45xlk8dh9wq4br")))

(define-public crate-ezno-0.0.1 (c (n "ezno") (v "0.0.1") (d (list (d (n "argh") (r "^0.1.6") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "checker") (r "^0.0.1") (d #t) (k 0) (p "ezno-checker")) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "console") (r "^0.14.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.1.0") (d #t) (k 0)) (d (n "multiline-term-input") (r "^0.1.0") (d #t) (k 0)) (d (n "notify") (r "^4.0.17") (d #t) (k 0)) (d (n "parser") (r "^0.0.1") (d #t) (k 0) (p "ezno-parser")))) (h "032rchy4z4471jm0wwngxf9jq5381msl3mpq8m4n2grslaqc018n")))

(define-public crate-ezno-0.0.2 (c (n "ezno") (v "0.0.2") (d (list (d (n "argh") (r "^0.1.6") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "checker") (r "^0.0.1") (d #t) (k 0) (p "ezno-checker")) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "console") (r "^0.14.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.1.0") (d #t) (k 0)) (d (n "multiline-term-input") (r "^0.1.0") (d #t) (k 0)) (d (n "notify") (r "^4.0.17") (d #t) (k 0)) (d (n "parser") (r "^0.0.2") (d #t) (k 0) (p "ezno-parser")))) (h "0x51nh4c0m7zjxcryhr61v1p4l4ihdr9b45hs24x8wkrn1vxhgv5")))

(define-public crate-ezno-0.0.3 (c (n "ezno") (v "0.0.3") (d (list (d (n "argh") (r "^0.1.6") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "checker") (r "^0.0.1") (d #t) (k 0) (p "ezno-checker")) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "console") (r "^0.14.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2.2") (d #t) (k 0)) (d (n "multiline-term-input") (r "^0.1.0") (d #t) (k 0)) (d (n "notify") (r "^4.0.17") (d #t) (k 0)) (d (n "parser") (r "^0.0.3") (d #t) (k 0) (p "ezno-parser")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "0g2z1kv6r67c68jrwxb15rppncjlng3bm7mrs56fdm6cz8vzwyc0")))

(define-public crate-ezno-0.0.4 (c (n "ezno") (v "0.0.4") (d (list (d (n "argh") (r "^0.1.6") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "checker") (r "^0.0.1") (d #t) (k 0) (p "ezno-checker")) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "console") (r "^0.14.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2.2") (d #t) (k 0)) (d (n "multiline-term-input") (r "^0.1.0") (d #t) (k 0)) (d (n "notify") (r "^4.0.17") (d #t) (k 0)) (d (n "parser") (r "^0.0.3") (d #t) (k 0) (p "ezno-parser")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "01ifgcgxnhrarpj2r98pa71n7v67ynskv5m71x1jp9pch2yvk300")))

(define-public crate-ezno-0.0.5 (c (n "ezno") (v "0.0.5") (d (list (d (n "argh") (r "^0.1.6") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "checker") (r "^0.0.1") (d #t) (k 0) (p "ezno-checker")) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "console") (r "^0.14.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2.2") (d #t) (k 0)) (d (n "multiline-term-input") (r "^0.1.0") (d #t) (k 0)) (d (n "notify") (r "^4.0.17") (d #t) (k 0)) (d (n "parser") (r "^0.0.3") (d #t) (k 0) (p "ezno-parser")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "0z3hyl6nwl4smip4i2irkhjymdd5nyfx9jkf0j415hcx2rxryz2m")))

(define-public crate-ezno-0.0.6 (c (n "ezno") (v "0.0.6") (d (list (d (n "argh") (r "^0.1.6") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "checker") (r "^0.0.1") (d #t) (k 0) (p "ezno-checker")) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "console") (r "^0.14.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2.2") (d #t) (k 0)) (d (n "multiline-term-input") (r "^0.1.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "notify") (r "^4.0.17") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parser") (r "^0.0.3") (d #t) (k 0) (p "ezno-parser")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "1ynclklhk2krlmgfqspy9fzilnf6kji3lvz0l7gm2c3b87l9072y")))

(define-public crate-ezno-0.0.7 (c (n "ezno") (v "0.0.7") (d (list (d (n "argh") (r "^0.1.6") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "checker") (r "^0.0.1") (d #t) (k 0) (p "ezno-checker")) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "console") (r "^0.14.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2.2") (d #t) (k 0)) (d (n "multiline-term-input") (r "^0.1.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "notify") (r "^4.0.17") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parser") (r "^0.0.3") (d #t) (k 0) (p "ezno-parser")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "03dkh1f0rkagv2imcl5amyxqc28cqykmxv2ja6qlajf1x1xirffj")))

(define-public crate-ezno-0.0.8 (c (n "ezno") (v "0.0.8") (d (list (d (n "argh") (r "^0.1.6") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "checker") (r "^0.0.1") (d #t) (k 0) (p "ezno-checker")) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "console") (r "^0.14.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2.2") (d #t) (k 0)) (d (n "multiline-term-input") (r "^0.1.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "notify") (r "^4.0.17") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parser") (r "^0.0.3") (d #t) (k 0) (p "ezno-parser")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "01r1nfma9222dhm173a2yhcp9354s1gkscpj7j7yph0f584ca4zm")))

(define-public crate-ezno-0.0.9 (c (n "ezno") (v "0.0.9") (d (list (d (n "argh") (r "^0.1.6") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "checker") (r "^0.0.6") (f (quote ("ezno-parser"))) (d #t) (k 0) (p "ezno-checker")) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "console") (r "^0.14.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "multiline-term-input") (r "^0.1.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "notify") (r "^4.0.17") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parser") (r "^0.0.4") (f (quote ("extras"))) (d #t) (k 0) (p "ezno-parser")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.86") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "1fjy63kws9nvs0izazrk09lvxfwjz7wxgxvnyryhdh6qdihjxjip")))

(define-public crate-ezno-0.0.10 (c (n "ezno") (v "0.0.10") (d (list (d (n "argh") (r "^0.1.6") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "checker") (r "^0.0.7") (f (quote ("ezno-parser"))) (d #t) (k 0) (p "ezno-checker")) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "console") (r "^0.14.1") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "multiline-term-input") (r "^0.1.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "notify") (r "^4.0.17") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parser") (r "^0.0.4") (f (quote ("extras"))) (d #t) (k 0) (p "ezno-parser")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.86") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "1abw2n1k7rlm97116mf78n3dzcszxg29hj8bmx130pb4af3w4lgp")))

(define-public crate-ezno-0.0.11 (c (n "ezno") (v "0.0.11") (d (list (d (n "argh") (r "^0.1.6") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "checker") (r "^0.0.8") (f (quote ("ezno-parser"))) (d #t) (k 0) (p "ezno-checker")) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "console") (r "^0.14.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "enum-variants-strings") (r "^0.2.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "multiline-term-input") (r "^0.1.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "notify") (r "^4.0.17") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parser") (r "^0.0.5") (f (quote ("extras"))) (d #t) (k 0) (p "ezno-parser")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "1cixsb7x293ffdrsnzm7nksw1zdaq209cf7sqrks0dhk4ryxr0kn")))

(define-public crate-ezno-0.0.12 (c (n "ezno") (v "0.0.12") (d (list (d (n "argh") (r "^0.1.6") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "checker") (r "^0.0.8") (f (quote ("ezno-parser"))) (d #t) (k 0) (p "ezno-checker")) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "console") (r "^0.14.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "enum-variants-strings") (r "^0.2.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "multiline-term-input") (r "^0.1.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "notify") (r "^4.0.17") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parser") (r "^0.0.5") (f (quote ("extras"))) (d #t) (k 0) (p "ezno-parser")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "0brqgvjga2mcyzcick3ib761al6flj1m4cm39232lmlwgfi4yhv2")))

(define-public crate-ezno-0.0.13 (c (n "ezno") (v "0.0.13") (d (list (d (n "argh") (r "^0.1.6") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "checker") (r "^0.0.8") (f (quote ("ezno-parser"))) (d #t) (k 0) (p "ezno-checker")) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "console") (r "^0.14.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "enum-variants-strings") (r "^0.2.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "multiline-term-input") (r "^0.1.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "notify") (r "^4.0.17") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parser") (r "^0.0.5") (f (quote ("extras"))) (d #t) (k 0) (p "ezno-parser")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "0lj9ba8kkgh7s0aglkv6kridaya1j79gmbgkxr49dhwknsq2bvqk")))

(define-public crate-ezno-0.0.14 (c (n "ezno") (v "0.0.14") (d (list (d (n "argh") (r "^0.1.6") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "checker") (r "^0.0.9") (f (quote ("ezno-parser"))) (d #t) (k 0) (p "ezno-checker")) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "console") (r "^0.14.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "enum-variants-strings") (r "^0.2.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "multiline-term-input") (r "^0.1.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "notify") (r "^4.0.17") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parser") (r "^0.0.6") (f (quote ("extras"))) (d #t) (k 0) (p "ezno-parser")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "00iaq889vzslh41nzpzvfjy8snyrl26m73wvq3vq28agbzd6n66v")))

(define-public crate-ezno-0.0.15 (c (n "ezno") (v "0.0.15") (d (list (d (n "argh") (r "^0.1.6") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "checker") (r "^0.0.10") (f (quote ("ezno-parser"))) (d #t) (k 0) (p "ezno-checker")) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "console") (r "^0.14.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "enum-variants-strings") (r "^0.2.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "multiline-term-input") (r "^0.1.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "notify") (r "^4.0.17") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parser") (r "^0.0.7") (f (quote ("extras"))) (d #t) (k 0) (p "ezno-parser")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "1rx5gcnir94m1s4qxiwdjg1zxzkgw0vilmc68av4q54j7ly9jskp")))

(define-public crate-ezno-0.0.16 (c (n "ezno") (v "0.0.16") (d (list (d (n "argh") (r "^0.1.6") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "checker") (r "^0.0.11") (f (quote ("ezno-parser"))) (d #t) (k 0) (p "ezno-checker")) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "console") (r "^0.14.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "enum-variants-strings") (r "^0.2.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "multiline-term-input") (r "^0.1.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "notify") (r "^4.0.17") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parser") (r "^0.0.8") (f (quote ("extras"))) (d #t) (k 0) (p "ezno-parser")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "1frsyhmxrwm6pqpdbg1bsfn0hvkbs3yz2lrhvlqzfwk376dmn6jy")))

(define-public crate-ezno-0.0.17 (c (n "ezno") (v "0.0.17") (d (list (d (n "argh") (r "^0.1.6") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "checker") (r "^0.0.12") (f (quote ("ezno-parser"))) (d #t) (k 0) (p "ezno-checker")) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "console") (r "^0.14.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "enum-variants-strings") (r "^0.2.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "multiline-term-input") (r "^0.1.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "notify") (r "^4.0.17") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parser") (r "^0.1.1") (f (quote ("extras"))) (d #t) (k 0) (p "ezno-parser")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "07hplis0gydh263dv86ngpv8y49yqjyy8zk5fkfcsz5043cqhxl9")))

(define-public crate-ezno-0.0.18 (c (n "ezno") (v "0.0.18") (d (list (d (n "argh") (r "^0.1.6") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "checker") (r "^0.0.13") (f (quote ("ezno-parser"))) (d #t) (k 0) (p "ezno-checker")) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "console") (r "^0.14.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "enum-variants-strings") (r "^0.2.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "multiline-term-input") (r "^0.1.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "notify") (r "^4.0.17") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parser") (r "^0.1.2") (f (quote ("extras"))) (d #t) (k 0) (p "ezno-parser")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "1rf3hdhjyrk3j7ba6aywiyds4k8hmy83aq6b6b0dgwhwp16c247h")))

(define-public crate-ezno-0.0.19 (c (n "ezno") (v "0.0.19") (d (list (d (n "argh") (r "^0.1.6") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "checker") (r "^0.0.14") (f (quote ("ezno-parser"))) (d #t) (k 0) (p "ezno-checker")) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "enum-variants-strings") (r "^0.2.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "multiline-term-input") (r "^0.1.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "notify") (r "^6.1.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parser") (r "^0.1.3") (f (quote ("extras"))) (d #t) (k 0) (p "ezno-parser")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.89") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "014l8dmji0cafq6nszxyk09mqz45fwdzjk3sbc1haa7rkchh2w1g")))

(define-public crate-ezno-0.0.20 (c (n "ezno") (v "0.0.20") (d (list (d (n "argh") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "checker") (r "^0.0.15") (f (quote ("ezno-parser" "serde-serialize"))) (d #t) (k 0) (p "ezno-checker")) (d (n "codespan-reporting") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "enum-variants-strings") (r "^0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "multiline-term-input") (r "^0.1.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "notify") (r "^6.1.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parser") (r "^0.1.4") (f (quote ("extras"))) (d #t) (k 0) (p "ezno-parser")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tsify") (r "^0.4.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen") (r "=0.2.89") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-derive") (r "^0.2.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "1qfypm01dkzldqf70xfz53hfp5dh8fn18fx9mfasaw5clzkbwfxs")))

(define-public crate-ezno-0.0.21 (c (n "ezno") (v "0.0.21") (d (list (d (n "argh") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "checker") (r "^0.0.16") (f (quote ("ezno-parser" "serde-serialize"))) (d #t) (k 0) (p "ezno-checker")) (d (n "codespan-reporting") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "enum-variants-strings") (r "^0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "multiline-term-input") (r "^0.1.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "native-tls") (r "^0.2.11") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "notify") (r "^6.1.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "parser") (r "^0.1.5") (f (quote ("extras"))) (d #t) (k 0) (p "ezno-parser")) (d (n "self-replace") (r "^1.3.7") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simple-json-parser") (r "^0.0.2") (d #t) (k 0)) (d (n "tsify") (r "^0.4.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-derive") (r "^0.2.1") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "1jlxzvpcv7mbghyi1brlk7q4wr5zy4rg75ihq1068kgg4ld2xk0z")))

