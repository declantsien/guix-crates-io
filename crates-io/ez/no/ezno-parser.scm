(define-module (crates-io ez no ezno-parser) #:use-module (crates-io))

(define-public crate-ezno-parser-0.0.1 (c (n "ezno-parser") (v "0.0.1") (d (list (d (n "derive-debug-extras") (r "^0.2.2") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-finite-automaton") (r "^0.1.0") (d #t) (k 0)) (d (n "derive-partial-eq-extras") (r "^0.1.2") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "enum_variant_type") (r "^0.3.1") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.1.0") (d #t) (k 0)) (d (n "match_deref") (r "^0.1.1") (d #t) (k 2)) (d (n "self-rust-tokenize") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "source-map") (r "^0.11.2") (f (quote ("span-serialize" "self-rust-tokenize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)) (d (n "tokenizer-lib") (r "^1.5.0") (f (quote ("parallel"))) (k 0)) (d (n "visitable-derive") (r "^0.0.1") (d #t) (k 0) (p "ezno-parser-visitable-derive")))) (h "0f95729vfc8aajzjlylk8dmbp6bw8janxrdvxmbnwwwkiwanvqx4") (f (quote (("extras") ("default" "self-rust-tokenize" "extras")))) (s 2) (e (quote (("self-rust-tokenize" "dep:self-rust-tokenize" "source-map/self-rust-tokenize"))))))

(define-public crate-ezno-parser-0.0.2 (c (n "ezno-parser") (v "0.0.2") (d (list (d (n "derive-debug-extras") (r "^0.2.2") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-finite-automaton") (r "^0.1.0") (d #t) (k 0)) (d (n "derive-partial-eq-extras") (r "^0.1.2") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "enum_variant_type") (r "^0.3.1") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.1.0") (d #t) (k 0)) (d (n "match_deref") (r "^0.1.1") (d #t) (k 2)) (d (n "self-rust-tokenize") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "source-map") (r "^0.11.3") (f (quote ("span-serialize" "self-rust-tokenize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)) (d (n "tokenizer-lib") (r "^1.5.0") (f (quote ("parallel"))) (k 0)) (d (n "visitable-derive") (r "^0.0.1") (d #t) (k 0) (p "ezno-parser-visitable-derive")))) (h "1z6hi1wmsv1wapf8gy3x5jd0yg8jvafalb6pfb86p47qn3kv8a17") (f (quote (("extras") ("default" "self-rust-tokenize" "extras")))) (s 2) (e (quote (("self-rust-tokenize" "dep:self-rust-tokenize" "source-map/self-rust-tokenize"))))))

(define-public crate-ezno-parser-0.0.3 (c (n "ezno-parser") (v "0.0.3") (d (list (d (n "derive-debug-extras") (r "^0.2.2") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-finite-automaton") (r "^0.1.0") (d #t) (k 0)) (d (n "derive-partial-eq-extras") (r "^0.1.2") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "enum_variant_type") (r "^0.3.1") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.1.0") (d #t) (k 0)) (d (n "match_deref") (r "^0.1.1") (d #t) (k 2)) (d (n "self-rust-tokenize") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "source-map") (r "^0.12") (f (quote ("span-serialize" "self-rust-tokenize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)) (d (n "tokenizer-lib") (r "^1.5.0") (f (quote ("parallel"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokenizer-lib") (r "^1.5.0") (f (quote ("buffered"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "visitable-derive") (r "^0.0.1") (d #t) (k 0) (p "ezno-parser-visitable-derive")))) (h "1s2az831g6y4vsfppi0s41q09x0pkwz4yqqnackccb97gs4fb73d") (f (quote (("extras") ("default" "self-rust-tokenize" "extras" "codespan-reporting") ("codespan-reporting" "source-map/codespan-reporting")))) (s 2) (e (quote (("self-rust-tokenize" "dep:self-rust-tokenize" "source-map/self-rust-tokenize"))))))

(define-public crate-ezno-parser-0.0.4 (c (n "ezno-parser") (v "0.0.4") (d (list (d (n "derive-debug-extras") (r "^0.2.2") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-finite-automaton") (r "^0.1.0") (d #t) (k 0)) (d (n "derive-partial-eq-extras") (r "^0.1.2") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "enum_variant_type") (r "^0.3.1") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.1.0") (d #t) (k 0)) (d (n "match_deref") (r "^0.1.1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "self-rust-tokenize") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "source-map") (r "^0.13") (f (quote ("span-serialize" "self-rust-tokenize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)) (d (n "tokenizer-lib") (r "^1.5.0") (f (quote ("parallel"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokenizer-lib") (r "^1.5.0") (f (quote ("buffered"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "visitable-derive") (r "^0.0.2") (d #t) (k 0) (p "ezno-parser-visitable-derive")))) (h "0dpkq26yw5dzwldb5kx7f474cwcd7aizkbrjzsmv2sx61pq6c8ib") (f (quote (("extras") ("default" "self-rust-tokenize" "extras" "codespan-reporting") ("codespan-reporting" "source-map/codespan-reporting")))) (s 2) (e (quote (("self-rust-tokenize" "dep:self-rust-tokenize" "source-map/self-rust-tokenize"))))))

(define-public crate-ezno-parser-0.0.5 (c (n "ezno-parser") (v "0.0.5") (d (list (d (n "derive-debug-extras") (r "^0.2.2") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-finite-automaton") (r "^0.1.3") (d #t) (k 0)) (d (n "derive-partial-eq-extras") (r "^0.1.2") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "enum_variant_type") (r "^0.3.1") (d #t) (k 0)) (d (n "get-field-by-type") (r "^0.0.3") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.1.0") (d #t) (k 0)) (d (n "match_deref") (r "^0.1.1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "self-rust-tokenize") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "source-map") (r "^0.14.2") (f (quote ("serde-serialize" "self-rust-tokenize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)) (d (n "tokenizer-lib") (r "^1.5.1") (f (quote ("parallel" "sized-tokens"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokenizer-lib") (r "^1.5.1") (f (quote ("buffered" "sized-tokens"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "visitable-derive") (r "^0.0.2") (d #t) (k 0) (p "ezno-parser-visitable-derive")))) (h "1d0r952jwq7pi5fyim18vjwiaajjdpjgyq1giv1y71ff4g3npzhj") (f (quote (("extras") ("default" "self-rust-tokenize" "extras" "codespan-reporting" "serde-serialize") ("codespan-reporting" "source-map/codespan-reporting")))) (s 2) (e (quote (("serde-serialize" "dep:serde") ("self-rust-tokenize" "dep:self-rust-tokenize" "source-map/self-rust-tokenize"))))))

(define-public crate-ezno-parser-0.0.6 (c (n "ezno-parser") (v "0.0.6") (d (list (d (n "derive-debug-extras") (r "^0.2.2") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-finite-automaton") (r "^0.1.3") (d #t) (k 0)) (d (n "derive-partial-eq-extras") (r "^0.1.2") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "enum_variant_type") (r "^0.3.1") (d #t) (k 0)) (d (n "get-field-by-type") (r "^0.0.3") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2.1") (d #t) (k 0)) (d (n "match_deref") (r "^0.1.1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "self-rust-tokenize") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "source-map") (r "^0.14.5") (f (quote ("serde-serialize" "self-rust-tokenize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)) (d (n "tokenizer-lib") (r "^1.5.1") (f (quote ("parallel" "sized-tokens"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokenizer-lib") (r "^1.5.1") (f (quote ("buffered" "sized-tokens"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "visitable-derive") (r "^0.0.3") (d #t) (k 0) (p "ezno-parser-visitable-derive")))) (h "0hbxs92x9bpkg0v7vsc2bcx1s17rw6k6xcc7mjwmxarjqp8nhhm4") (f (quote (("extras") ("default" "self-rust-tokenize" "extras" "codespan-reporting" "serde-serialize") ("codespan-reporting" "source-map/codespan-reporting")))) (s 2) (e (quote (("serde-serialize" "dep:serde") ("self-rust-tokenize" "dep:self-rust-tokenize" "source-map/self-rust-tokenize"))))))

(define-public crate-ezno-parser-0.0.7 (c (n "ezno-parser") (v "0.0.7") (d (list (d (n "derive-debug-extras") (r "^0.2.2") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-finite-automaton") (r "^0.1.3") (d #t) (k 0)) (d (n "derive-partial-eq-extras") (r "^0.1.2") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "enum_variant_type") (r "^0.3.1") (d #t) (k 0)) (d (n "get-field-by-type") (r "^0.0.3") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2.1") (d #t) (k 0)) (d (n "match_deref") (r "^0.1.1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "self-rust-tokenize") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "source-map") (r "^0.14.6") (f (quote ("serde-serialize" "self-rust-tokenize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)) (d (n "tokenizer-lib") (r "^1.5.1") (f (quote ("parallel" "sized-tokens"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokenizer-lib") (r "^1.5.1") (f (quote ("buffered" "sized-tokens"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "visitable-derive") (r "^0.0.3") (d #t) (k 0) (p "ezno-parser-visitable-derive")))) (h "1zrzp2rdswr3bs7cjp606ykzqdb5drm4mf2im34246n6z9dhxmks") (f (quote (("extras") ("default" "self-rust-tokenize" "extras" "codespan-reporting" "serde-serialize") ("codespan-reporting" "source-map/codespan-reporting")))) (s 2) (e (quote (("serde-serialize" "dep:serde") ("self-rust-tokenize" "dep:self-rust-tokenize" "source-map/self-rust-tokenize"))))))

(define-public crate-ezno-parser-0.0.8 (c (n "ezno-parser") (v "0.0.8") (d (list (d (n "derive-debug-extras") (r "^0.2.2") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-finite-automaton") (r "^0.1.3") (d #t) (k 0)) (d (n "derive-partial-eq-extras") (r "^0.1.2") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "enum_variant_type") (r "^0.3.1") (d #t) (k 0)) (d (n "get-field-by-type") (r "^0.0.3") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2.1") (d #t) (k 0)) (d (n "match_deref") (r "^0.1.1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "self-rust-tokenize") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "source-map") (r "^0.14.6") (f (quote ("serde-serialize" "self-rust-tokenize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)) (d (n "tokenizer-lib") (r "^1.5.1") (f (quote ("parallel" "sized-tokens"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokenizer-lib") (r "^1.5.1") (f (quote ("buffered" "sized-tokens"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "visitable-derive") (r "^0.0.3") (d #t) (k 0) (p "ezno-parser-visitable-derive")))) (h "1bjqj8idj0kq58irb6vwbavm17rpg5ywsc5w4v869jzmfprxmg1c") (f (quote (("extras") ("default" "self-rust-tokenize" "extras" "codespan-reporting" "serde-serialize") ("codespan-reporting" "source-map/codespan-reporting")))) (s 2) (e (quote (("serde-serialize" "dep:serde") ("self-rust-tokenize" "dep:self-rust-tokenize" "source-map/self-rust-tokenize"))))))

(define-public crate-ezno-parser-0.1.0 (c (n "ezno-parser") (v "0.1.0") (d (list (d (n "derive-debug-extras") (r "^0.2.2") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-finite-automaton") (r "^0.1.3") (d #t) (k 0)) (d (n "derive-partial-eq-extras") (r "^0.1.2") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "enum_variant_type") (r "^0.3.1") (d #t) (k 0)) (d (n "get-field-by-type") (r "^0.0.3") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2.1") (d #t) (k 0)) (d (n "match_deref") (r "^0.1.1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "self-rust-tokenize") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "source-map") (r "^0.14.6") (f (quote ("serde-serialize" "self-rust-tokenize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)) (d (n "tokenizer-lib") (r "^1.5.1") (f (quote ("parallel" "sized-tokens"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokenizer-lib") (r "^1.5.1") (f (quote ("buffered" "sized-tokens"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "visitable-derive") (r "^0.0.3") (d #t) (k 0) (p "ezno-parser-visitable-derive")))) (h "14ggi2z6p2ksnxa4gk9a8lmhljh817smc1qwjfbx8myvwvs7jjvp") (f (quote (("extras") ("default" "self-rust-tokenize" "extras" "codespan-reporting" "serde-serialize") ("codespan-reporting" "source-map/codespan-reporting")))) (s 2) (e (quote (("serde-serialize" "dep:serde") ("self-rust-tokenize" "dep:self-rust-tokenize" "source-map/self-rust-tokenize"))))))

(define-public crate-ezno-parser-0.1.1 (c (n "ezno-parser") (v "0.1.1") (d (list (d (n "derive-debug-extras") (r "^0.2.2") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-finite-automaton") (r "^0.1.3") (d #t) (k 0)) (d (n "derive-partial-eq-extras") (r "^0.1.2") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "enum_variant_type") (r "^0.3.1") (d #t) (k 0)) (d (n "get-field-by-type") (r "^0.0.3") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2.1") (d #t) (k 0)) (d (n "match_deref") (r "^0.1.1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "self-rust-tokenize") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "source-map") (r "^0.14.6") (f (quote ("serde-serialize" "self-rust-tokenize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)) (d (n "tokenizer-lib") (r "^1.5.1") (f (quote ("parallel" "sized-tokens"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokenizer-lib") (r "^1.5.1") (f (quote ("buffered" "sized-tokens"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "visitable-derive") (r "^0.0.3") (d #t) (k 0) (p "ezno-parser-visitable-derive")))) (h "1r9k6c9w4gmp5152m9p80i9q7m9f6a3s9wc3b5pizpcisfkpk032") (f (quote (("extras") ("default" "self-rust-tokenize" "extras" "codespan-reporting" "serde-serialize") ("codespan-reporting" "source-map/codespan-reporting")))) (s 2) (e (quote (("serde-serialize" "dep:serde") ("self-rust-tokenize" "dep:self-rust-tokenize" "source-map/self-rust-tokenize"))))))

(define-public crate-ezno-parser-0.1.2 (c (n "ezno-parser") (v "0.1.2") (d (list (d (n "derive-debug-extras") (r "^0.2.2") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-finite-automaton") (r "^0.1.3") (d #t) (k 0)) (d (n "derive-partial-eq-extras") (r "^0.1.2") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "enum_variant_type") (r "^0.3.1") (d #t) (k 0)) (d (n "get-field-by-type") (r "^0.0.3") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2.1") (d #t) (k 0)) (d (n "match_deref") (r "^0.1.1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "self-rust-tokenize") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "source-map") (r "^0.14.7") (f (quote ("serde-serialize" "self-rust-tokenize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)) (d (n "tokenizer-lib") (r "^1.5.1") (f (quote ("parallel" "sized-tokens"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokenizer-lib") (r "^1.5.1") (f (quote ("buffered" "sized-tokens"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "visitable-derive") (r "^0.0.4") (d #t) (k 0) (p "ezno-parser-visitable-derive")))) (h "0i17wsvdxyjad9y8laqaa5hn26r6zw4dc2fmacflal4fzv0k92df") (f (quote (("extras") ("default" "self-rust-tokenize" "extras" "codespan-reporting" "serde-serialize") ("codespan-reporting" "source-map/codespan-reporting")))) (s 2) (e (quote (("serde-serialize" "dep:serde") ("self-rust-tokenize" "dep:self-rust-tokenize" "source-map/self-rust-tokenize"))))))

(define-public crate-ezno-parser-0.1.3 (c (n "ezno-parser") (v "0.1.3") (d (list (d (n "derive-debug-extras") (r "^0.2.2") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-finite-automaton") (r "^0.1.3") (d #t) (k 0)) (d (n "derive-partial-eq-extras") (r "^0.1.2") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.2") (d #t) (k 0)) (d (n "enum_variant_type") (r "^0.3.1") (d #t) (k 0)) (d (n "get-field-by-type") (r "^0.0.3") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2.1") (d #t) (k 0)) (d (n "match_deref") (r "^0.1.1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "self-rust-tokenize") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "source-map") (r "^0.14.7") (f (quote ("serde-serialize" "self-rust-tokenize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)) (d (n "tokenizer-lib") (r "^1.5.1") (f (quote ("parallel" "sized-tokens"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokenizer-lib") (r "^1.5.1") (f (quote ("buffered" "sized-tokens"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "visitable-derive") (r "^0.0.4") (d #t) (k 0) (p "ezno-parser-visitable-derive")))) (h "0l4g5zvsy7q7qj8fgsgddqjcmi5aia28ry250kzyl6dsacjrsbs9") (f (quote (("extras") ("default" "self-rust-tokenize" "extras" "codespan-reporting" "serde-serialize") ("codespan-reporting" "source-map/codespan-reporting")))) (s 2) (e (quote (("serde-serialize" "dep:serde") ("self-rust-tokenize" "dep:self-rust-tokenize" "source-map/self-rust-tokenize"))))))

(define-public crate-ezno-parser-0.1.4 (c (n "ezno-parser") (v "0.1.4") (d (list (d (n "derive-debug-extras") (r "^0.3") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.2") (d #t) (k 0)) (d (n "derive-finite-automaton") (r "^0.2") (d #t) (k 0)) (d (n "derive-partial-eq-extras") (r "^0.2") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.3") (d #t) (k 0)) (d (n "get-field-by-type") (r "^0") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2") (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.2.0") (d #t) (k 0)) (d (n "match_deref") (r "^0.1.1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "self-rust-tokenize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "source-map") (r "^0.14") (f (quote ("serde-serialize" "self-rust-tokenize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)) (d (n "tokenizer-lib") (r "^1.5.1") (f (quote ("parallel" "sized-tokens"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokenizer-lib") (r "^1.5.1") (f (quote ("buffered" "sized-tokens"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tsify") (r "^0.4.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "visitable-derive") (r "^0.0.6") (d #t) (k 0) (p "ezno-parser-visitable-derive")) (d (n "wasm-bindgen") (r "=0.2.89") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "1x2dwn34h9xn8kfaf4lb0a09wscf49vcl6kqb7dpcpbw3qglsqj0") (f (quote (("full-typescript") ("extras") ("default" "self-rust-tokenize" "extras" "codespan-reporting" "serde-serialize" "full-typescript") ("codespan-reporting" "source-map/codespan-reporting")))) (s 2) (e (quote (("serde-serialize" "dep:serde") ("self-rust-tokenize" "dep:self-rust-tokenize" "source-map/self-rust-tokenize"))))))

(define-public crate-ezno-parser-0.1.5 (c (n "ezno-parser") (v "0.1.5") (d (list (d (n "derive-debug-extras") (r "^0.3") (f (quote ("auto-debug-single-tuple-inline"))) (d #t) (k 0)) (d (n "derive-enum-from-into") (r "^0.2") (d #t) (k 0)) (d (n "derive-finite-automaton") (r "^0.2") (d #t) (k 0)) (d (n "derive-partial-eq-extras") (r "^0.2") (d #t) (k 0)) (d (n "enum-variants-strings") (r "^0.3") (d #t) (k 0)) (d (n "get-field-by-type") (r "^0") (d #t) (k 0)) (d (n "iterator-endiate") (r "^0.2") (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.2.0") (d #t) (k 0)) (d (n "match_deref") (r "^0.1.1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "self-rust-tokenize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "source-map") (r "^0.15") (f (quote ("serde-serialize" "self-rust-tokenize"))) (d #t) (k 0)) (d (n "temporary-annex") (r "^0.1.0") (d #t) (k 0)) (d (n "tokenizer-lib") (r "^1.6") (f (quote ("parallel" "sized-tokens"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokenizer-lib") (r "^1.6") (f (quote ("buffered" "sized-tokens"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tsify") (r "^0.4.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "visitable-derive") (r "^0.0.7") (d #t) (k 0) (p "ezno-parser-visitable-derive")) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "1f7yv46ympfbmhsi271i33w576pcgc1c4k6sg0zx77abcrsvfd5z") (f (quote (("full-typescript") ("extras") ("default" "self-rust-tokenize" "extras" "codespan-reporting" "serde-serialize" "full-typescript") ("codespan-reporting" "source-map/codespan-reporting")))) (s 2) (e (quote (("serde-serialize" "dep:serde") ("self-rust-tokenize" "dep:self-rust-tokenize" "source-map/self-rust-tokenize"))))))

