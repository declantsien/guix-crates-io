(define-module (crates-io ez rp ezrpc) #:use-module (crates-io))

(define-public crate-ezrpc-0.1.0 (c (n "ezrpc") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-lock") (r "^2.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "downcast") (r "^0.11") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "gloo-console") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-utils") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lockfree") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log-error") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp") (r "^0.8") (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (d #t) (k 0)) (d (n "rmpv") (r "^1") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc" "alloc"))) (k 0)) (d (n "serde-transcode") (r "^1") (d #t) (k 0)) (d (n "serde-value") (r "^0.7") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "spin") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("net" "time" "rt" "sync" "io-util"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "ws-tool") (r "^0.7") (f (quote ("async"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ws_stream_wasm") (r "^0.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0xn6sr2djgar3r0d44w16ir5w6mrfn24v1sxsjzc1sd6kq7hx583") (f (quote (("default"))))))

(define-public crate-ezrpc-0.1.1 (c (n "ezrpc") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-lock") (r "^2.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "downcast") (r "^0.11") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.26") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "gloo-console") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-utils") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lockfree") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log-error") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rmp") (r "^0.8") (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (d #t) (k 0)) (d (n "rmpv") (r "^1") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc" "alloc"))) (k 0)) (d (n "serde-transcode") (r "^1") (d #t) (k 0)) (d (n "serde-value") (r "^0.7") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "spin") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("net" "time" "rt" "sync" "io-util"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "ws-tool") (r "^0.8") (f (quote ("async"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ws_stream_wasm") (r "^0.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1pdyns7c7y3nsayzbchirv7nxx3ndzqq5ca1f2lp6fb7zyabl6wq") (f (quote (("default"))))))

