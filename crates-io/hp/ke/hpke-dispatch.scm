(define-module (crates-io hp ke hpke-dispatch) #:use-module (crates-io))

(define-public crate-hpke-dispatch-0.1.0 (c (n "hpke-dispatch") (v "0.1.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.6") (f (quote ("js" "js-sys"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hpke") (r "^0.8.0") (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde_crate") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0b25hby5zrcrl5kyf8dkj9vsjymxmqvhv5852jjc65j55yrh18pf") (f (quote (("serde" "serde_crate") ("kem-x25519-hkdf-sha256" "hpke/x25519") ("kem-dh-p256-hkdf-sha256" "hpke/p256") ("kem-all" "kem-dh-p256-hkdf-sha256" "kem-x25519-hkdf-sha256") ("kdf-sha512") ("kdf-sha384") ("kdf-sha256") ("kdf-all" "kdf-sha256" "kdf-sha384" "kdf-sha512") ("default" "algo-all" "base-mode-seal" "base-mode-open") ("cfg_eval") ("base-mode-seal") ("base-mode-open") ("algo-all" "aead-all" "kdf-all" "kem-all") ("aead-chacha-20-poly-1305") ("aead-all" "aead-aes-gcm-128" "aead-aes-gcm-256" "aead-chacha-20-poly-1305") ("aead-aes-gcm-256") ("aead-aes-gcm-128"))))))

(define-public crate-hpke-dispatch-0.1.1 (c (n "hpke-dispatch") (v "0.1.1") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.6") (f (quote ("js" "js-sys"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hpke") (r "^0.8.0") (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde_crate") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0i4vg54188hifgqha7i7xm61xd7cf8nv40c2l16ff86mab06nppc") (f (quote (("serde" "serde_crate") ("kem-x25519-hkdf-sha256" "hpke/x25519") ("kem-dh-p256-hkdf-sha256" "hpke/p256") ("kem-all" "kem-dh-p256-hkdf-sha256" "kem-x25519-hkdf-sha256") ("kdf-sha512") ("kdf-sha384") ("kdf-sha256") ("kdf-all" "kdf-sha256" "kdf-sha384" "kdf-sha512") ("default" "algo-all" "base-mode-seal" "base-mode-open") ("cfg_eval") ("base-mode-seal") ("base-mode-open") ("algo-all" "aead-all" "kdf-all" "kem-all") ("aead-chacha-20-poly-1305") ("aead-all" "aead-aes-gcm-128" "aead-aes-gcm-256" "aead-chacha-20-poly-1305") ("aead-aes-gcm-256") ("aead-aes-gcm-128"))))))

(define-public crate-hpke-dispatch-0.1.2 (c (n "hpke-dispatch") (v "0.1.2") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.6") (f (quote ("js" "js-sys"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hpke") (r "^0.8.0") (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde_crate") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1zbpfhvakp5hgmnzawl8p5z4b5lqa1mw8nk55qhs6wkmsgw891mi") (f (quote (("serde" "serde_crate") ("kem-x25519-hkdf-sha256" "hpke/x25519") ("kem-dh-p256-hkdf-sha256" "hpke/p256") ("kem-all" "kem-dh-p256-hkdf-sha256" "kem-x25519-hkdf-sha256") ("kdf-sha512") ("kdf-sha384") ("kdf-sha256") ("kdf-all" "kdf-sha256" "kdf-sha384" "kdf-sha512") ("default" "algo-all" "base-mode-seal" "base-mode-open") ("cfg_eval") ("base-mode-seal") ("base-mode-open") ("algo-all" "aead-all" "kdf-all" "kem-all") ("aead-chacha-20-poly-1305") ("aead-all" "aead-aes-gcm-128" "aead-aes-gcm-256" "aead-chacha-20-poly-1305") ("aead-aes-gcm-256") ("aead-aes-gcm-128"))))))

(define-public crate-hpke-dispatch-0.1.3 (c (n "hpke-dispatch") (v "0.1.3") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.6") (f (quote ("js" "js-sys"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hpke") (r "^0.8.0") (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde_crate") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.30") (d #t) (k 2)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "zeroize") (r "^1.3") (d #t) (k 0)))) (h "0vd7mq0175fdv3fiks66x8f6lh5mxxnvkmhdqxf6ah8zp3i9m8mj") (f (quote (("wee-alloc") ("serde" "serde_crate") ("kem-x25519-hkdf-sha256" "hpke/x25519") ("kem-dh-p256-hkdf-sha256" "hpke/p256") ("kem-all" "kem-dh-p256-hkdf-sha256" "kem-x25519-hkdf-sha256") ("kdf-sha512") ("kdf-sha384") ("kdf-sha256") ("kdf-all" "kdf-sha256" "kdf-sha384" "kdf-sha512") ("default" "algo-all" "base-mode-seal" "base-mode-open") ("cfg_eval") ("base-mode-seal") ("base-mode-open") ("algo-all" "aead-all" "kdf-all" "kem-all") ("aead-chacha-20-poly-1305") ("aead-all" "aead-aes-gcm-128" "aead-aes-gcm-256" "aead-chacha-20-poly-1305") ("aead-aes-gcm-256") ("aead-aes-gcm-128"))))))

(define-public crate-hpke-dispatch-0.2.0 (c (n "hpke-dispatch") (v "0.2.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.6") (f (quote ("js" "js-sys"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hpke") (r "^0.8.0") (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.30") (d #t) (k 2)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "zeroize") (r "^1.3") (d #t) (k 0)))) (h "0ysa36vvai562knbii9gc27vplhj694l02g2zvwghgpq7bv6hwkg") (f (quote (("wee-alloc") ("serde" "serde_crate") ("kem-x25519-hkdf-sha256" "hpke/x25519") ("kem-dh-p256-hkdf-sha256" "hpke/p256") ("kem-all" "kem-dh-p256-hkdf-sha256" "kem-x25519-hkdf-sha256") ("kdf-sha512") ("kdf-sha384") ("kdf-sha256") ("kdf-all" "kdf-sha256" "kdf-sha384" "kdf-sha512") ("default" "algo-all" "base-mode-seal" "base-mode-open") ("cfg_eval") ("base-mode-seal") ("base-mode-open") ("algo-all" "aead-all" "kdf-all" "kem-all") ("aead-chacha-20-poly-1305") ("aead-all" "aead-aes-gcm-128" "aead-aes-gcm-256" "aead-chacha-20-poly-1305") ("aead-aes-gcm-256") ("aead-aes-gcm-128"))))))

(define-public crate-hpke-dispatch-0.2.1 (c (n "hpke-dispatch") (v "0.2.1") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.6") (f (quote ("js" "js-sys"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hpke") (r "^0.9.0") (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.30") (d #t) (k 2)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "zeroize") (r "^1.3") (d #t) (k 0)))) (h "0kp6hhi47vr5pqp2y4dzy8dsf6yssj8kf3939rfk847m1lf1s82w") (f (quote (("wee-alloc") ("serde" "serde_crate") ("kem-x25519-hkdf-sha256" "hpke/x25519") ("kem-dh-p256-hkdf-sha256" "hpke/p256") ("kem-all" "kem-dh-p256-hkdf-sha256" "kem-x25519-hkdf-sha256") ("kdf-sha512") ("kdf-sha384") ("kdf-sha256") ("kdf-all" "kdf-sha256" "kdf-sha384" "kdf-sha512") ("default" "algo-all" "base-mode-seal" "base-mode-open") ("cfg_eval") ("base-mode-seal") ("base-mode-open") ("algo-all" "aead-all" "kdf-all" "kem-all") ("aead-chacha-20-poly-1305") ("aead-all" "aead-aes-gcm-128" "aead-aes-gcm-256" "aead-chacha-20-poly-1305") ("aead-aes-gcm-256") ("aead-aes-gcm-128")))) (y #t)))

(define-public crate-hpke-dispatch-0.3.0 (c (n "hpke-dispatch") (v "0.3.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.6") (f (quote ("js" "js-sys"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hpke") (r "^0.9.0") (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.30") (d #t) (k 2)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "zeroize") (r "^1.3") (d #t) (k 0)))) (h "1dph30pq38fc74v1q6iwbq5rbiz879vfmi4iw2m4gi9gqcnrfxwf") (f (quote (("wee-alloc") ("serde" "serde_crate") ("kem-x25519-hkdf-sha256" "hpke/x25519") ("kem-dh-p256-hkdf-sha256" "hpke/p256") ("kem-all" "kem-dh-p256-hkdf-sha256" "kem-x25519-hkdf-sha256") ("kdf-sha512") ("kdf-sha384") ("kdf-sha256") ("kdf-all" "kdf-sha256" "kdf-sha384" "kdf-sha512") ("default" "algo-all" "base-mode-seal" "base-mode-open" "hpke/std") ("cfg_eval") ("base-mode-seal") ("base-mode-open") ("algo-all" "aead-all" "kdf-all" "kem-all") ("aead-chacha-20-poly-1305") ("aead-all" "aead-aes-gcm-128" "aead-aes-gcm-256" "aead-chacha-20-poly-1305") ("aead-aes-gcm-256") ("aead-aes-gcm-128"))))))

(define-public crate-hpke-dispatch-0.4.0 (c (n "hpke-dispatch") (v "0.4.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (f (quote ("js" "js-sys"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hpke") (r "^0.9.0") (f (quote ("std"))) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.145") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.83") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.33") (d #t) (k 2)) (d (n "zeroize") (r "^1.3") (d #t) (k 0)))) (h "029f9y9s24xs5w3l09vz2r50dbjzfzwj09kppms3ggn90vl3bq82") (f (quote (("serde" "serde_crate") ("kem-x25519-hkdf-sha256" "hpke/x25519") ("kem-dh-p256-hkdf-sha256" "hpke/p256") ("kem-all" "kem-dh-p256-hkdf-sha256" "kem-x25519-hkdf-sha256") ("kdf-sha512") ("kdf-sha384") ("kdf-sha256") ("kdf-all" "kdf-sha256" "kdf-sha384" "kdf-sha512") ("default" "algo-all" "base-mode-seal" "base-mode-open") ("cfg_eval") ("base-mode-seal") ("base-mode-open") ("algo-all" "aead-all" "kdf-all" "kem-all") ("aead-chacha-20-poly-1305") ("aead-all" "aead-aes-gcm-128" "aead-aes-gcm-256" "aead-chacha-20-poly-1305") ("aead-aes-gcm-256") ("aead-aes-gcm-128"))))))

(define-public crate-hpke-dispatch-0.5.0 (c (n "hpke-dispatch") (v "0.5.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (f (quote ("js" "js-sys"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hpke") (r "^0.10.0") (f (quote ("std"))) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.145") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.83") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.33") (d #t) (k 2)) (d (n "zeroize") (r "^1.3") (d #t) (k 0)))) (h "1i4jcdaagd2csnsnbhd54m2kixp5cznpjji0jzz0w75pjmqyr0ls") (f (quote (("serde" "serde_crate") ("kem-x25519-hkdf-sha256" "hpke/x25519") ("kem-dh-p256-hkdf-sha256" "hpke/p256") ("kem-all" "kem-dh-p256-hkdf-sha256" "kem-x25519-hkdf-sha256") ("kdf-sha512") ("kdf-sha384") ("kdf-sha256") ("kdf-all" "kdf-sha256" "kdf-sha384" "kdf-sha512") ("default" "algo-all" "base-mode-seal" "base-mode-open") ("cfg_eval") ("base-mode-seal") ("base-mode-open") ("algo-all" "aead-all" "kdf-all" "kem-all") ("aead-chacha-20-poly-1305") ("aead-all" "aead-aes-gcm-128" "aead-aes-gcm-256" "aead-chacha-20-poly-1305") ("aead-aes-gcm-256") ("aead-aes-gcm-128"))))))

(define-public crate-hpke-dispatch-0.5.1 (c (n "hpke-dispatch") (v "0.5.1") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js" "js-sys"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hpke") (r "^0.10.0") (f (quote ("std"))) (k 0)) (d (n "num_enum") (r "^0.7.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.185") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.185") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (k 2)) (d (n "zeroize") (r "^1.6") (d #t) (k 0)))) (h "030acswmbf3hpx3sx4nw9c29cd7syias42kjqs1m4w44qivgi13c") (f (quote (("serde" "serde_crate") ("kem-x25519-hkdf-sha256" "hpke/x25519") ("kem-dh-p256-hkdf-sha256" "hpke/p256") ("kem-all" "kem-dh-p256-hkdf-sha256" "kem-x25519-hkdf-sha256") ("kdf-sha512") ("kdf-sha384") ("kdf-sha256") ("kdf-all" "kdf-sha256" "kdf-sha384" "kdf-sha512") ("default" "algo-all" "base-mode-seal" "base-mode-open") ("cfg_eval") ("base-mode-seal") ("base-mode-open") ("algo-all" "aead-all" "kdf-all" "kem-all") ("aead-chacha-20-poly-1305") ("aead-all" "aead-aes-gcm-128" "aead-aes-gcm-256" "aead-chacha-20-poly-1305") ("aead-aes-gcm-256") ("aead-aes-gcm-128"))))))

