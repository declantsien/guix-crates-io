(define-module (crates-io as ka askar-storage) #:use-module (crates-io))

(define-public crate-askar-storage-0.1.0 (c (n "askar-storage") (v "0.1.0") (d (list (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "askar-crypto") (r "^0.3") (f (quote ("alloc" "argon2" "chacha" "std_rng"))) (k 0)) (d (n "async-lock") (r "^3.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "bs58") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures-lite") (r "^2.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.1") (f (quote ("chrono" "runtime-tokio"))) (o #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt-multi-thread" "time"))) (d #t) (k 0)) (d (n "url") (r "^2.1") (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (d #t) (k 0)))) (h "1w6ddf9g8hjj1x4fry2lb2sxvhawidcskyjxqfm52mpdp8fr326p") (f (quote (("sqlite" "sqlx" "sqlx/sqlite") ("postgres" "sqlx" "sqlx/postgres" "sqlx/tls-rustls") ("pg_test" "postgres") ("migration" "rmp-serde" "sqlx/macros") ("default" "all_backends" "log") ("any") ("all_backends" "any" "postgres" "sqlite")))) (r "1.58")))

(define-public crate-askar-storage-0.1.1 (c (n "askar-storage") (v "0.1.1") (d (list (d (n "arc-swap") (r "^1.6") (d #t) (k 0)) (d (n "askar-crypto") (r "^0.3") (f (quote ("alloc" "argon2" "chacha" "std_rng"))) (k 0)) (d (n "async-lock") (r "^3.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "bs58") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures-lite") (r "^2.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.3") (f (quote ("chrono" "runtime-tokio"))) (o #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt-multi-thread" "time"))) (d #t) (k 0)) (d (n "url") (r "^2.1") (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (d #t) (k 0)))) (h "1vkrh68vzjwl07al7pwj8s7yik7wh71fq125iv37a876c9f2mf6r") (f (quote (("pg_test" "postgres") ("default" "all_backends" "log") ("any") ("all_backends" "any" "postgres" "sqlite")))) (s 2) (e (quote (("sqlite" "dep:sqlx" "sqlx?/sqlite") ("postgres" "dep:sqlx" "sqlx?/postgres" "sqlx?/tls-rustls") ("migration" "dep:rmp-serde" "dep:sqlx" "sqlx?/macros")))) (r "1.63")))

