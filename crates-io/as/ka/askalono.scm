(define-module (crates-io as ka askalono) #:use-module (crates-io))

(define-public crate-askalono-0.1.0 (c (n "askalono") (v "0.1.0") (d (list (d (n "flate2") (r "^1.0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "rayon") (r "^0.8.2") (d #t) (k 0)) (d (n "regex") (r "^0.2.1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.5") (d #t) (k 0)) (d (n "walkdir") (r "^1.0.7") (d #t) (k 0)))) (h "0rl795wa2yr51iwc72jdkafgay2cgj12ay85qzdbicf6g1ri1rj5")))

(define-public crate-askalono-0.1.1 (c (n "askalono") (v "0.1.1") (d (list (d (n "flate2") (r "^1.0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "rayon") (r "^0.8.2") (d #t) (k 0)) (d (n "regex") (r "^0.2.1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.5") (d #t) (k 0)) (d (n "walkdir") (r "^1.0.7") (d #t) (k 0)))) (h "05hncb2bisfqlvfn7gsjq5cclkrspb3wqydqw43vahmjh24gjj9q")))

(define-public crate-askalono-0.2.0-beta.1 (c (n "askalono") (v "0.2.0-beta.1") (d (list (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "rayon") (r "^1.0.1") (d #t) (k 0)) (d (n "regex") (r "^0.2.10") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.11") (o #t) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.5") (d #t) (k 0)))) (h "1kixsjvxdpbnn0kw4p0z5mgbcxcb80jbh3k7l929h83mskhlqq4m") (f (quote (("spdx" "serde_json") ("default" "spdx"))))))

(define-public crate-askalono-0.2.0 (c (n "askalono") (v "0.2.0") (d (list (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "rayon") (r "^1.0.1") (d #t) (k 0)) (d (n "regex") (r "^0.2.10") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.11") (o #t) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.5") (d #t) (k 0)))) (h "0718hvdkqm7a08f3hwh4ma0jgb6yp4pgqr6cbhprpc3zhiqww8py") (f (quote (("spdx" "serde_json") ("default" "spdx"))))))

(define-public crate-askalono-0.3.0 (c (n "askalono") (v "0.3.0") (d (list (d (n "env_logger") (r "^0.5.5") (d #t) (k 2)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "rayon") (r "^1.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^0.2.10") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.11") (o #t) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.5") (d #t) (k 0)))) (h "1qgiqfpqf815wqmfx09r9y8f6avi3pajzk7v0mn5prdkzhyy0bg6") (f (quote (("spdx" "serde_json") ("default" "spdx"))))))

(define-public crate-askalono-0.4.0 (c (n "askalono") (v "0.4.0") (d (list (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rayon") (r "^1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.1.7") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.8") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "zstd") (r "^0.4") (f (quote ("wasm"))) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0pfg9zmygljp8481vhnj3si2k31ysy71klgqndmddfaw4jgjyxqg") (f (quote (("spdx" "serde_json") ("default" "spdx"))))))

(define-public crate-askalono-0.4.1 (c (n "askalono") (v "0.4.1") (d (list (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rayon") (r "^1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.1.7") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.8") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "zstd") (r "^0.4") (f (quote ("wasm"))) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0jd8f2nb6m4qisr5sfl4wy86sy61s8drs7dmaaqcnn7mp98wd01m") (f (quote (("spdx" "serde_json") ("default" "spdx"))))))

(define-public crate-askalono-0.4.2 (c (n "askalono") (v "0.4.2") (d (list (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rayon") (r "^1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.1.7") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.8") (d #t) (k 0)) (d (n "zstd") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "zstd") (r "^0.5") (f (quote ("wasm"))) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "16sdcb5plk065yb25xridykcwqax32js9mdvfa81zg911qcgchl8") (f (quote (("spdx" "serde_json") ("default" "spdx"))))))

(define-public crate-askalono-0.4.3 (c (n "askalono") (v "0.4.3") (d (list (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "flate2") (r "^1.0.14") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "flate2") (r "^1.0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rayon") (r "^1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.1.7") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.8") (d #t) (k 0)) (d (n "zstd") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1w1ys6zpji2fax35a4sh5ifnx9wjrd0sz3q333s87i6rj1mp44jc") (f (quote (("spdx" "serde_json") ("gzip" "flate2") ("default" "spdx"))))))

(define-public crate-askalono-0.4.4 (c (n "askalono") (v "0.4.4") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "flate2") (r "^1.0.14") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "flate2") (r "^1.0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rayon") (r "^1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.1.7") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.8") (d #t) (k 0)) (d (n "zstd") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "045vj0m8h7j1ajngwb939hr96fyv1lz8gmb7sv2qy76kln8nrklc") (f (quote (("spdx" "serde_json") ("gzip" "flate2") ("default" "spdx"))))))

(define-public crate-askalono-0.4.5 (c (n "askalono") (v "0.4.5") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "flate2") (r "^1.0.14") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "flate2") (r "^1.0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rayon") (r "^1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.1.7") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.8") (d #t) (k 0)) (d (n "zstd") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0ffp3w44rpi7klgskpi9yw075dzsw7k47mwdkhvnjkw96yc3cybq") (f (quote (("spdx" "serde_json") ("gzip" "flate2") ("default" "spdx"))))))

(define-public crate-askalono-0.4.6 (c (n "askalono") (v "0.4.6") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "flate2") (r "^1.0.14") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "flate2") (r "^1.0.14") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rayon") (r "^1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.1.7") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.8") (d #t) (k 0)) (d (n "zstd") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1mz6sadldnkgs2wlcgnqg89135vii5ilb0bcyg758k54pl1dgda4") (f (quote (("spdx" "serde_json") ("gzip" "flate2") ("default" "spdx"))))))

