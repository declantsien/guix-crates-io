(define-module (crates-io as yn async-graphql) #:use-module (crates-io))

(define-public crate-async-graphql-0.5.0 (c (n "async-graphql") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^0.5.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1c5592jn5nw8xzf71cw8slhyhrvh3qbqczy2ki3df27kzvzx8wlc") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-0.6.0 (c (n "async-graphql") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^0.6.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "05pm7c9mchbh2rvqhvzx6s611nvvdqskd6pg5b6y73dqd6lmpj10") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-0.7.0 (c (n "async-graphql") (v "0.7.0") (d (list (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^0.7.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "11mvi25z2qnwbf20xgkiadiaymdsxi220hawibx2lkmbbw3pvjxf") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-0.8.0 (c (n "async-graphql") (v "0.8.0") (d (list (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^0.8.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "10sq9glq8paqiljv5sw15xvzmymdr0ghwzq61hwr5434zyk8as4x") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-0.8.1 (c (n "async-graphql") (v "0.8.1") (d (list (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1nsmwhgfn8vqic4b8arw9gr7hmqsx1rycl94bmimql9fh78fwdgr") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-0.9.0 (c (n "async-graphql") (v "0.9.0") (d (list (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1qqik55f9pdxkfa8wc0kv0pw98yf8gm5vc7rc9hiqz96sxa1jqba") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-0.9.1 (c (n "async-graphql") (v "0.9.1") (d (list (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0fcqf14xjkzmp6f0x0j7gkvn5c3vm0rck6mmrmbrhs7kxdrwj7s8") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-0.9.2 (c (n "async-graphql") (v "0.9.2") (d (list (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^0.9.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0g8ikac0x34g5cjvznyp45r82bqz316pzysv6pm1xd8da0jvxlpl") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-0.9.3 (c (n "async-graphql") (v "0.9.3") (d (list (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^0.9.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1mqccnymq2wpmbhc5dpx6740zvp5i21s0snyic70x8nwgkqnwqjx") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-0.9.4 (c (n "async-graphql") (v "0.9.4") (d (list (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^0.9.4") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0vh7d66cnjvv9n8lxw0zxf0i1ag0jyp7mcf8rkj6kbnlx36nvzww") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-0.10.0 (c (n "async-graphql") (v "0.10.0") (d (list (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^0.10.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1mxsxbc08pz4szrc54w48j2706ckqgpa19l4acg1x15njsqkz07f") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-0.10.2 (c (n "async-graphql") (v "0.10.2") (d (list (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^0.10.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1hifjr4nxh7sazdf2l2jybifwcdbg1rgbvcbfc9cgy6q4zpvy0cl") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-0.10.3 (c (n "async-graphql") (v "0.10.3") (d (list (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^0.10.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1kn223wmdmnicwfm0ildmzv2yypxv7673zmw6r36d29lfbkp2bvh") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-0.10.4 (c (n "async-graphql") (v "0.10.4") (d (list (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^0.10.4") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1h3cddl8hw5lb98bhgj4bi18q04bj4kg606hgzdvpxdx2bp5qbgb") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-0.10.5 (c (n "async-graphql") (v "0.10.5") (d (list (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^0.10.5") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "18civ30wq3dnpmcg6ikjdcqqsg8q1n0b7g9av97l03696k2yclbx") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-0.10.6 (c (n "async-graphql") (v "0.10.6") (d (list (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^0.10.6") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0zp06dr7bs2xqnwac8xn3grv77c6m6jv0lwl0hlr3s0xl2cpxlmx") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-0.10.7 (c (n "async-graphql") (v "0.10.7") (d (list (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^0.10.7") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0i44wrr6m5ncb7q8kskz3hygr47zwfbw2v7383chrw0yjh0aicz5") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-0.10.8 (c (n "async-graphql") (v "0.10.8") (d (list (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^0.10.8") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "08vrhpb8xyqnqsxyphniqw9xsjgm7x6dfimplbqyyg8w377qabxr") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-1.0.0 (c (n "async-graphql") (v "1.0.0") (d (list (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.0.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1l96qpms2125gd5qnf6ihaczwif6i3jmg0q8a2vk4sa3c0jlnrwg") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-1.1.0 (c (n "async-graphql") (v "1.1.0") (d (list (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.0.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1q2h696fggw8z2f1mx9bbxl77fjm55pr47x089grim0fvxy7scvh") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-1.1.1 (c (n "async-graphql") (v "1.1.1") (d (list (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.0.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0x99v1ac2vidp5c0j8750iczs4qk20zkv93xz4x7w9c51wc1w6l0") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-1.2.0 (c (n "async-graphql") (v "1.2.0") (d (list (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.2.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1d0zla05c9m793z254dc13simxbs4vnq5k035q2jqa98i09vh6zh") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-1.2.1 (c (n "async-graphql") (v "1.2.1") (d (list (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.2.1") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0dcbsi8p4bfvvb09vj2sll2119fx4l35kfc18nk381y2c91g0rm5") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-1.3.0 (c (n "async-graphql") (v "1.3.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.3.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "12c1297h80p1nh1yqmm8hn3h031163dxip7a2rgpis4iag9zqsqq") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-1.3.1 (c (n "async-graphql") (v "1.3.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0fpsi6ycg5lbc5076bcrf47lni4v003i99h025myfs5k8jjmljl8") (f (quote (("default" "chrono" "uuid"))))))

(define-public crate-async-graphql-1.3.2 (c (n "async-graphql") (v "1.3.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.3.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1d3lpf21dnbl4y0sqw2aiawvyjk3gj29yq9qvyibif8q7p17wcj2") (f (quote (("default" "chrono" "uuid" "url"))))))

(define-public crate-async-graphql-1.4.0 (c (n "async-graphql") (v "1.4.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.4.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1izf0fjzw7pfpi1g8107qscappbxkhmh015dihqhkz8841291w87") (f (quote (("validators" "regex" "once_cell") ("default" "bson" "chrono" "uuid" "url" "validators"))))))

(define-public crate-async-graphql-1.4.1 (c (n "async-graphql") (v "1.4.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.4.1") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0iwap2lmji2q30k6064p2475ig6050xswn8rz5f2gad09ajmvxda") (f (quote (("validators" "regex" "once_cell") ("default" "bson" "chrono" "uuid" "url" "validators"))))))

(define-public crate-async-graphql-1.4.2 (c (n "async-graphql") (v "1.4.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.4.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0hp2yxlfp20jssxhmp1h6wxql0bgfml75vg609lvi9hq2lsl07lj") (f (quote (("validators" "regex" "once_cell") ("default" "bson" "chrono" "uuid" "url" "validators"))))))

(define-public crate-async-graphql-1.4.3 (c (n "async-graphql") (v "1.4.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.4.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0fyk1g8kw3z6yh7a0j359928jvdclgra4z6fnw16c3b8y6c6md70") (f (quote (("validators" "regex" "once_cell") ("default" "bson" "chrono" "uuid" "url" "validators"))))))

(define-public crate-async-graphql-1.4.4 (c (n "async-graphql") (v "1.4.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.4.4") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1kikwgdh08yzxycs0b6v0ld0pq5nxqifprabyi7zigh2cp0n3zvb") (f (quote (("validators" "regex" "once_cell") ("default" "bson" "chrono" "uuid" "url" "validators"))))))

(define-public crate-async-graphql-1.5.0 (c (n "async-graphql") (v "1.5.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.5.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "itoa") (r "^0.4.5") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "15xfq61qbawwri7n0sn33h4br7g8slgfx03jv2lbvp9rg30p577c") (f (quote (("validators" "regex" "once_cell") ("default" "bson" "chrono" "uuid" "url" "validators"))))))

(define-public crate-async-graphql-1.5.1 (c (n "async-graphql") (v "1.5.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.5.1") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0ba936wdrr45sn307aw5rw8i6n4zsrfa0mavixkbkxmam444sva3") (f (quote (("validators" "regex" "once_cell") ("default" "bson" "chrono" "uuid" "url" "validators"))))))

(define-public crate-async-graphql-1.5.2 (c (n "async-graphql") (v "1.5.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.5.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "02b28m0vll67j5qv9jgc6cxz9g2hwz2l253zqjj7gf1ip0i6d4nm") (f (quote (("validators" "regex" "once_cell") ("default" "bson" "chrono" "uuid" "url" "validators"))))))

(define-public crate-async-graphql-1.6.0 (c (n "async-graphql") (v "1.6.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.6.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "im") (r "^14.3.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1ms8i6d44rp47aakc92g5zgn24nxg2qckjdp5b35pkvmagn05bgn") (f (quote (("validators" "regex" "once_cell") ("default" "bson" "uuid" "url" "validators"))))))

(define-public crate-async-graphql-1.6.1 (c (n "async-graphql") (v "1.6.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.6.1") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "im") (r "^14.3.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0cxg84z4vq1i7gqhvi1bhb28xp7nn78bv2lq4m37vs5hj6ksbyzm") (f (quote (("validators" "regex" "once_cell") ("default" "bson" "uuid" "url" "validators"))))))

(define-public crate-async-graphql-1.6.2 (c (n "async-graphql") (v "1.6.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.6.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0w1mxnhy519nc1q0q3rghy8pni0zyh4wbq4nfph5q802n23l02lh") (f (quote (("validators" "regex" "once_cell") ("default" "bson" "uuid" "url" "validators"))))))

(define-public crate-async-graphql-1.6.3 (c (n "async-graphql") (v "1.6.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.6.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0q7vl5kym3qspsgxvlrql9l9hcay98mxq9gfqfpjx339fzn1l36g") (f (quote (("validators" "regex" "once_cell") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.6.4 (c (n "async-graphql") (v "1.6.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.6.4") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0qhay8qw6dxmbysa2cz1n36v62wmwcshc7iv373nsx1crxaafd2h") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.6.5 (c (n "async-graphql") (v "1.6.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.6.5") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0lcxg3258yn808hpzi39xn2imj44bmgkflmbp413j61gzsz1kysc") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.6.6 (c (n "async-graphql") (v "1.6.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.6.6") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1rjvsrxhvvkxg03fh4vdm1ryj3f72jpqzhpk313jha6mjp00fibq") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.6.7 (c (n "async-graphql") (v "1.6.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.6.7") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0c5bhldji11hbc8haas3lrf9xpa399fgm250zas5nm1pxrjyazhm") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.6.8 (c (n "async-graphql") (v "1.6.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.6.8") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "11mnz2zdx3fg02fzlrvwqgx5k29f19qd504r21wxdb2ddnjhba35") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.7.0 (c (n "async-graphql") (v "1.7.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.7.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1cspnca4h9cm26395iryc0f11pl3186m9mf8k5x1x36hw8f9hf88") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.7.1 (c (n "async-graphql") (v "1.7.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.7.1") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "085ik8z1qk5gwavrx68az2ag1pl5q7swiv8swdvj6l5alkfr4z8b") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.7.2 (c (n "async-graphql") (v "1.7.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.7.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1hhi3b7gzkgy5bc8gpaap0a3ivrawd7p01pc4wv4zbnqwibcnkzd") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.7.3 (c (n "async-graphql") (v "1.7.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.7.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0cawh9n8ybq0kcgkpxxxx7wxsga69yvr34csd08sr7ywa49v44ly") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.7.4 (c (n "async-graphql") (v "1.7.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.7.4") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0a5ndir4fc4bd6aclvn5n2rhmqxcxvv4fjac11j3286dcamghs12") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.7.5 (c (n "async-graphql") (v "1.7.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.7.5") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1ybd8hjz771krc7n3z2rhb30azvrf4v47jgsanxhpb5s23k2i149") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.7.6 (c (n "async-graphql") (v "1.7.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.7.6") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "16g51d9kh2qr4pnzq7pjdlpc2acx136gmxj4bkbkcybxfhf5ysky") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.7.7 (c (n "async-graphql") (v "1.7.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.7.7") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0mgmlm52g84wfd7l7zcsl2hwddyfwhzmpgdfjfnxysx48xf5yjgj") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.7.8 (c (n "async-graphql") (v "1.7.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.7.8") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "18qsdsgp1wz8b04q71kn7pkj4zsqm0b3zrv22n11r40gdh7haa69") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.8.0 (c (n "async-graphql") (v "1.8.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.8.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0d7vn1cg0mg1p7rf6wrq5wyalr7wn6bckf0qa4j5227mxryqsh95") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.8.1 (c (n "async-graphql") (v "1.8.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "actix-rt") (r "^1.0.0") (d #t) (k 2)) (d (n "actix-web") (r "^2.0.0") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.8.1") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tide") (r "^0.6.0") (d #t) (k 2)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1sn7g9n14m72ahvg414avwjisql936k74bi8w6wxg1n00pvrwi1l") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.9.0 (c (n "async-graphql") (v "1.9.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.9.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "06d014sjcxl69pc2dl91hhipsa10kgzyxd56x6kfqgpc3nb0kqhf") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.9.1 (c (n "async-graphql") (v "1.9.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.9.1") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "02wbvdc4rvk0c5lnj4pm2kgzxy39043fq7mg24kz29fyfdvp2hfm") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.9.2 (c (n "async-graphql") (v "1.9.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.9.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1sgah201sjss2mq62cn957lxnkhgkh1w6m3xnka500avp20g75kf") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.9.3 (c (n "async-graphql") (v "1.9.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.9.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1i7jhis981nc4angc9q8mcvadkdxprrcsps5ni47brsdnhrcs94r") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.9.4 (c (n "async-graphql") (v "1.9.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.9.4") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0vxz9m75zy1v1iyi5a0kmvkq5yqpfphwf9af79bm5mbwakcf5qxl") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.9.5 (c (n "async-graphql") (v "1.9.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.9.5") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "051d72p8i654p868wqm8ydv0xbn14vkprg86friallg32zd8nlqh") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.9.7 (c (n "async-graphql") (v "1.9.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.9.7") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "038anqcxmg969f730gi7jgl0455lqavk3gwilx1fwrp1pasbm4zy") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.9.8 (c (n "async-graphql") (v "1.9.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.9.8") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0irhgz54pm0jkxjjwbhnhqrjv12aj19bzaqqg73xxzcjvgyhcand") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.9.9 (c (n "async-graphql") (v "1.9.9") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.9.9") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0a484wxnvl5hw1xppnm8lczxh673h5c8p42in3ypj98sfz2kchyw") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.9.10 (c (n "async-graphql") (v "1.9.10") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.9.10") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "133h2qgzv5ncxdvj0xs7n4l1b0ng0zb9xkblwpcsdf5xydxiwb16") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.9.12 (c (n "async-graphql") (v "1.9.12") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.9.12") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "17mnh18ikrfx8gnd6jfmmvv5fr73hqq6nippq3kgi31di4vnivaw") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.9.13 (c (n "async-graphql") (v "1.9.13") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.9.13") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "14yjkcasxjqpk2dvq0dl2ilb0bw6kv6i0y2a4308brh7h8x14fpq") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.9.14 (c (n "async-graphql") (v "1.9.14") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.9.14") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0whvn68ifbykzmm6icpnn7ascyr71skhlg358pjd7ibf72xf7nry") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.9.15 (c (n "async-graphql") (v "1.9.15") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.9.15") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1s91hdbvs034dqf8f031db2x1lrsflfy03xz4swkyi4982yvd4jw") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.9.16 (c (n "async-graphql") (v "1.9.16") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.9.16") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1mamvzn9jy4pgr040m1lk6fiw921yx3l58macg02nyx25fq0q38n") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.9.17 (c (n "async-graphql") (v "1.9.17") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.9.17") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0hapj7pr8j2xbx90a3h9m57xd93mfg6fdvbjpr7vjjplfsiy5c5g") (f (quote (("validators" "regex") ("default" "bson" "uuid" "url" "chrono-tz" "validators"))))))

(define-public crate-async-graphql-1.9.18 (c (n "async-graphql") (v "1.9.18") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.9.18") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "18w22wzf638m27qm731sxa9dawd1psxkra5ifamk7rqv2hdf20ln") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.9.19 (c (n "async-graphql") (v "1.9.19") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.9.19") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1w8xajn6qr3zm5si24w1rl64wk6ljxn0wzhww0v1kxia4yms26wn") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.9.20 (c (n "async-graphql") (v "1.9.20") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.9.20") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0qavmkd3yzs78v330zi2vgvh10f276mfvv7pl3caw1cq0wh1b7zg") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.9.21 (c (n "async-graphql") (v "1.9.21") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.9.21") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "050qdsqvc0ki6ymv7q3v9qbjcazglw6d7qp0grsnf3szxvl5h2gl") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.9.22 (c (n "async-graphql") (v "1.9.22") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.9.22") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0zy1nmybbvp2dp3gkpxz95p0gkcbh2yhd8wdw1b9nipac9qkahxm") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.9.23 (c (n "async-graphql") (v "1.9.23") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.9.23") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "16dxgdjaq7ncxpnzazsidbx1dqckarjrlyb6yrh3xknga9jp8wcf") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.9.24 (c (n "async-graphql") (v "1.9.24") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.9.24") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1jhwm4rqhdw14ky2nw4zxsjfzjsyvm14bmyxh9bn4q4g1hvhjx7h") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.10.0 (c (n "async-graphql") (v "1.10.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.10.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1mq0i6yc0sp7g5j1pas123rydq21yaw4wgsv8ah4i5v8jwvf69z7") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.10.1 (c (n "async-graphql") (v "1.10.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.10.1") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0vcyacr6yjplnmvwa7hsz8q20kgw903gqd5855g4agr703f3cw8v") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.10.2 (c (n "async-graphql") (v "1.10.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.10.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1as6l2a3sfbr2a3zmhcznrf01cp737l7zcbz60bb29mb6yh60yf5") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.10.3 (c (n "async-graphql") (v "1.10.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.10.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0df96lghlm7ndzi4lhx6g1hss3byzqinca7qg3apdl63rvjmnfrp") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.10.4 (c (n "async-graphql") (v "1.10.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.10.4") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "17xcb74gc0javwwsnr25i70m07rqniw1d2ja5sxj7iicgfi1mvvv") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.10.5 (c (n "async-graphql") (v "1.10.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.10.5") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0j2zmx9s5bj78v0jpvp2bfnihlvy0c18gbf798nd9jr43gwkqfvi") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.10.6 (c (n "async-graphql") (v "1.10.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.10.6") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1hhgnwcp70n9van264l3jl30gddsn310hnqxjw1v67cqzb7b00lc") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.10.7 (c (n "async-graphql") (v "1.10.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.10.7") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0df7flahp57rbny08ddiql9g8mwqzvwnl53d30zg9fxf3svirw1d") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.10.8 (c (n "async-graphql") (v "1.10.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.10.8") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1n443zqvhzqx7dc18lp6mxm6k94kabnfaj5dq5qg7b2q7d13zfxh") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.10.9 (c (n "async-graphql") (v "1.10.9") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.10.9") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1xx73gfa733s6gsidzdvxhdhv4iziya70qvamjnnlp9c0y9rwvk4") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.10.10 (c (n "async-graphql") (v "1.10.10") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.10.10") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0sf0sfgm23c366z1dgiy0w6a3ji9h2nflf3fw42zwj9bi84251x0") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.10.11 (c (n "async-graphql") (v "1.10.11") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.10.11") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0ji4y7swkpdqf50h0brxi90xpl66nvjrsy4kvajd0rm31zibjdl8") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.10.12 (c (n "async-graphql") (v "1.10.12") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.10.12") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "graphql-parser") (r "= 0.2.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "10z5mqcza5zg6qp5jfz12gvvbyag4hjpggxvpjhxfajwnsw2kd75") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.11.0 (c (n "async-graphql") (v "1.11.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.11.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1fh568wva687rx0a22hprn31yck0anqslbpya63vkn6y01ricjlm") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.11.1 (c (n "async-graphql") (v "1.11.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.11.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1x76zqd6kn5k1cdly13b11zfvxfggrv2bxmyhmcg409q92mpf1z7") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.11.2 (c (n "async-graphql") (v "1.11.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.11.2") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1s6xp1r0xi00nsz7gg80dx9ks77hxklf66v3w928d4h7ka170gzc") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.11.3 (c (n "async-graphql") (v "1.11.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.11.3") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1h55i1fkyb189vs0zywlcwcs718snllyfajprn9r5v7z5y7ff511") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.12.1 (c (n "async-graphql") (v "1.12.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.12.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0rxxmr8qzp63lz94xxga78h1x4n7fr7l2i7pzn6q7b3yavfzwhma") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.12.2 (c (n "async-graphql") (v "1.12.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.12.2") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "03f0bsd9xbmz12xrcd1bp14vb03p013g2rqqqkvhmm75czjcy482") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.12.3 (c (n "async-graphql") (v "1.12.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.12.3") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^0.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "128i847hxinirhngkjyw7rg26igp15nq2xkbms3pmzral1r1cyhb") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.12.4 (c (n "async-graphql") (v "1.12.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.12.4") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^0.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "01912k5rn4ipr5fbd50pvqs41ijw4hnr52ngfymkfdv0ckw7r0aa") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.12.6 (c (n "async-graphql") (v "1.12.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.12.6") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^0.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1rpcmmigdwn12fbfq784h7l5lil3lsx0nv25mh7ngjlblvxdljwf") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.12.7 (c (n "async-graphql") (v "1.12.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.12.7") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^0.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0vgzy4251qcifzsbkrbav623x0sjq08g3kl9rk0dca4bvn74qzpf") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.12.8 (c (n "async-graphql") (v "1.12.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.12.8") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1c4yw4f3r2rdcfhjyqkhj9bq5cz5c4ay3kmxkfxcdq66mqq4dwfw") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.12.9 (c (n "async-graphql") (v "1.12.9") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.12.9") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0ckjg2n7s9vmhjxp0dwhy8apskx25fki00dg772qv3s0ir4ihxr7") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.12.10 (c (n "async-graphql") (v "1.12.10") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.12.10") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^0.5.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "19mgplqapd8ln30s2b80p10jjmnmwacfagcni839hyy1zrfq4051") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.12.11 (c (n "async-graphql") (v "1.12.11") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.12.11") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^0.5.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1qlm7x5wd20fyz2hhdrqxy3varpl1qm5kjv54zb8zb883gd98ais") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.12.12 (c (n "async-graphql") (v "1.12.12") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.12.12") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^0.5.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "13sv912fd14lb08xfklw2hcxb9vj05iyqlirqwzpzbvrmwvw24n7") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.12.13 (c (n "async-graphql") (v "1.12.13") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.12.13") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^0.5.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "09wbn28lvswzxg81rrs1fb8l96bqcaz823fxhgndk0nr3lhc60rl") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.12.14 (c (n "async-graphql") (v "1.12.14") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.12.14") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^0.5.1") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1imvw4dbkzsk9zyzxzknb3s0f9c2wnjwaymflm14adain9gj7sv2") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.12.15 (c (n "async-graphql") (v "1.12.15") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.12.15") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^0.5.1") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "0qzlhfx442a9b5qqvdga866y9y9znm6fp9w2zqqmcwlb3v7k1mlr") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.12.16 (c (n "async-graphql") (v "1.12.16") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.12.16") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^0.5.1") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1wz3fyqa4584fq80y41gbg656bl9jazmr2cz1mv8s4bikvzlpvnm") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.12.17 (c (n "async-graphql") (v "1.12.17") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.12.17") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^0.5.1") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1w68al6ca7flh041a6xwnbi63xw9gzz51k3hsv36ld78h50vg28p") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.12.18 (c (n "async-graphql") (v "1.12.18") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.12.18") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^0.5.1") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1rsdv5gbsxkq7hzpfr1zdkcpkgvy5fcwszdj21fg26q52957cg1g") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.13.0 (c (n "async-graphql") (v "1.13.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.13.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.13.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "1ar33v1ns3nmdr93admb8barcn6ga06d0xm8rs323v4564jp356x") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.13.1 (c (n "async-graphql") (v "1.13.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.13.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.13.1") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (o #t) (d #t) (k 0)))) (h "050adgy1aaxdkrlcr80nzgapdcswb7kd1gkb3d8i4fc29fz87z4i") (f (quote (("default" "bson" "uuid" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.13.2 (c (n "async-graphql") (v "1.13.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.13.2") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.13.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "06nhfihpyzsy8xiwyqy7991myv2vf43vk3hbmlmhb2583v8vzwdl") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.13.3 (c (n "async-graphql") (v "1.13.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.13.3") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.13.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0n83apcjh2s3h72giv3h312wpajj7h6f0irbk1c18l4rc0acwdrh") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.13.4 (c (n "async-graphql") (v "1.13.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "=1.13.4") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=1.13.4") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "16cqlkmjq9bhzlbp0a67zw3cgai5299hzv809hv7x25c2qqsi3ya") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.13.5 (c (n "async-graphql") (v "1.13.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "=1.13.4") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=1.13.4") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1nndyjzjgaqwrjq25394af13wz9pbzzz3gy761hblphkjvy0c234") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.14.0 (c (n "async-graphql") (v "1.14.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=1.13.4") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "02drxdwlj358cybk0484mfpr2qpb0k9b3bch0sm0nqqi6ca1hclf") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.14.1 (c (n "async-graphql") (v "1.14.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=1.13.4") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1sq6z84ghzrlrxz0r5srgi2mzjvi3mmpqcfpl8ccl5y74zi6cfcm") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.14.2 (c (n "async-graphql") (v "1.14.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0d8nxcvnab9qkdp7aj101xia3hlp8dm58h90wy6j28iapix2nj49") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.14.3 (c (n "async-graphql") (v "1.14.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1r13kx4989dzybww11a980x13z2x3mnk7vqdr02vda0gmwgiyzg2") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.14.4 (c (n "async-graphql") (v "1.14.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0zhpzy3xcy7yxg7j5nh6mff6zkrldgvrrjadzcdzbaxzmz7whnmv") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.14.5 (c (n "async-graphql") (v "1.14.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0lnvy60yd0fbck3qbw37h00v9xr3x1hc6x6byjlgmi9rwak97zja") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.14.6 (c (n "async-graphql") (v "1.14.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0xvr6ndzfh0b10pvanfb932grksx365pdj3qc6hl18cdid5nhf7h") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.14.7 (c (n "async-graphql") (v "1.14.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0qyj656mgmm9z2yavm3kgvyim7n9h9c386vwhm07rn581rrv3jzb") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.14.8 (c (n "async-graphql") (v "1.14.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1zvdv6b16i2yhm5rbdr5mrd60gazjj14zm8i4yds5a0nrijcpjgg") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.14.9 (c (n "async-graphql") (v "1.14.9") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "06cmbbjdqv245sisp9fqd2cbydlfkl1ayx665ldjyay0cvlv2ww8") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.14.10 (c (n "async-graphql") (v "1.14.10") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0z44g8d0vvfhg3piirdp1h5b0csn4f48p5p63byi4slgnxbwi1l8") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.14.11 (c (n "async-graphql") (v "1.14.11") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1z3249g5n8rfxw5mdd2fyckzyhimi00a7w2ksf97g9h6fdg2w5yw") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.14.12 (c (n "async-graphql") (v "1.14.12") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1nx41w02wvh7vqcfy31wmbzdi6z6prk7hr80qgpk9q6mkn8znbn5") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.14.13 (c (n "async-graphql") (v "1.14.13") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0lx82mapcb2kjajj09ncy1nqqi3i8whp88mgjnxv6zb7zzyvs6b9") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.14.14 (c (n "async-graphql") (v "1.14.14") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0d29dzni5w2rsrpcn6scbhak3rgq6kgiyfghyb91vnbykanxamq3") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.14.15 (c (n "async-graphql") (v "1.14.15") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0znsjh8wn8irs6wlanv1apbf27mbj8l2y6y8bybhfr4j7fx4m0h6") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.14.16 (c (n "async-graphql") (v "1.14.16") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "15iiny67lqkp52xr66vmwa58v9rdkhj30bmm7cvd043lah618y6b") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.14.17 (c (n "async-graphql") (v "1.14.17") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0i23fagkjqjwkfiwnshdkjzj621jirxxfvdw8whld0a88vlh12j7") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.14.18 (c (n "async-graphql") (v "1.14.18") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "19rjhw46c335q3p3sgjxddxaxjkww24i83xla7jfmpy7xaar3y94") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.14.19 (c (n "async-graphql") (v "1.14.19") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1qhyxsn28hjx6lms7ndql3i61sz00y263nkdg0jwmxpvw68rwjvx") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.14.20 (c (n "async-graphql") (v "1.14.20") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0vx48m1j37j75a8ksnr95mspwngyfvmqf0v37rvk7slqc98fqzn7") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.14.21 (c (n "async-graphql") (v "1.14.21") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1d126ijicv58c8k3i01nyqzkbfzp8rkyq9v1f3a2rar6fjhmpjv9") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.15.0 (c (n "async-graphql") (v "1.15.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0x159y9n919a4bww10bhqvsrkpv9kz1sgh2iamvgxfravchpfyfg") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.15.1 (c (n "async-graphql") (v "1.15.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "17mvj2ga9dk7cq0j5kwzfd1vb78kcrkmppxdcibg5jmxcxm05ms9") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.15.2 (c (n "async-graphql") (v "1.15.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "19x2m5fvmdg2q8nzp0znnkk5ps0rh5cl6zrpz78hmyhan2rxiqr3") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.15.3 (c (n "async-graphql") (v "1.15.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1k09hpgmk2mh9rb64bnhfa5mlr2f1mxymcnafpk855china7kmkg") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.15.4 (c (n "async-graphql") (v "1.15.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0xyrd2wnk4xzz75nw148m7f45c0yhaigc4mqqafkz3hqspkcryxa") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.15.5 (c (n "async-graphql") (v "1.15.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1jikkqxrk47795jbk4h84xpixlqr25f1prh9d8igv4106s7jpwii") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.15.6 (c (n "async-graphql") (v "1.15.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1nywgrlm8a16acwqvxxa5rxpp32nrh1ql3d9qqfia47q096v7xlg") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.15.7 (c (n "async-graphql") (v "1.15.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1l1d14drrsbjrq1yfpklj1r7p2kvrn85fw43546a9xkm6pzdlnrv") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.15.8 (c (n "async-graphql") (v "1.15.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "039wm8wzp218l5j4a7sf59dv1llxck2mjyizh3yxf9jqjgqabxr9") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.15.10 (c (n "async-graphql") (v "1.15.10") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "02ka5bqzlx61dhrs09n4wkz0pmxd6fc001xhqhl55mh379m2cgcd") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.15.11 (c (n "async-graphql") (v "1.15.11") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1vz4c93yk6kzz0ddapk1in13rgcz0hfqszhwjphcbqmza99yhy3q") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.15.12 (c (n "async-graphql") (v "1.15.12") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1n9zz4v3jdlv8lf009892hk97fm3c4bv3k6lma1n8bs72w7kzzsj") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.15.13 (c (n "async-graphql") (v "1.15.13") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1q0011sylpwpif78dyxkiqz06nivf3yjcsj85jgkj7hy3bc1a1nx") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.15.14 (c (n "async-graphql") (v "1.15.14") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1mxxbix7yf98qk0mak89y8mcc5z1gwh02k9jxkjqz51asz759sn9") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.15.15 (c (n "async-graphql") (v "1.15.15") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.14.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0bx1hzm58bvi7vzq28asvapg4qrg4lbprq37hjavfang2hyncqbc") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.16.0 (c (n "async-graphql") (v "1.16.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "=1.16.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0v4s06y73h1wsl3nr5wy5q3d8hbarqi4dbl5xvli3frx9ws64i72") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.16.1 (c (n "async-graphql") (v "1.16.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.16.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "03z9pxycfz2xfbrkgi96kc2yp8cw7qqih9w615nb2cd7128vz86a") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.16.2 (c (n "async-graphql") (v "1.16.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.16.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1w8a3ixggap7abzjxmy63q3c8a85k2zp7dyc1b7q9fin13fk13jb") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.16.3 (c (n "async-graphql") (v "1.16.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.16.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1gn6bd0d553cmiiznddy2lxzf8ljgwcnqyxj692cl5zcjjy2f1rd") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.16.4 (c (n "async-graphql") (v "1.16.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.16.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1g74sckzjxj9i9g6430b1wgsi32gdv9mw4cwblkqzn3js3i3znmx") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.16.5 (c (n "async-graphql") (v "1.16.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.16.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0idvk66zhkzmgp0ajlf4c2jgc8qqim5lsww0d3l49l268gylcf6v") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.16.6 (c (n "async-graphql") (v "1.16.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.16.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1wzbz2y9sr24ssm3jbfdshpncgicpc5d1jlkclx7cim85yz1w4x4") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.16.7 (c (n "async-graphql") (v "1.16.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.16.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "16cl0zj78drwgbfnl0nrlcfp03r0w4r7hzd1i0aqvdr43gw5v2c1") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.16.8 (c (n "async-graphql") (v "1.16.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.16.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0gzgr53jcjml1dxj0w5ckg0zx84jk1k19jfp3ckywlmrp9f54n4q") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.16.9 (c (n "async-graphql") (v "1.16.9") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.16.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1p5nqi3cgbpzl8d79lvn71hq6638kqcfxnazfjq24qhscy1h27yf") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.16.11 (c (n "async-graphql") (v "1.16.11") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.16.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "xlog") (r "^0.1") (d #t) (k 0)))) (h "1n7v0gagw3cyj20yb1q1525xmihhp5zvjkr89m6bdc48y12f38w6") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.16.12 (c (n "async-graphql") (v "1.16.12") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.16.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "xlog") (r "^0.1") (d #t) (k 0)))) (h "133w8w42z5v6fhp3b50a4is6a87n36v0733dkf3j9an8b9s5zw9w") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.16.13 (c (n "async-graphql") (v "1.16.13") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.16.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0xshfybfywkrfz4h1aywa9ji55blczyr26h0b9lli94pal90c2xz") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.16.14 (c (n "async-graphql") (v "1.16.14") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.16.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0nm1lrgm378bqbds1cjn3lgk9y9x5pgynpk07mm4b1g01iqar9md") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.16.15 (c (n "async-graphql") (v "1.16.15") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.16.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1f2767dv7q655iymwrn2zjhb6akwc3vxdha1vxh9mwb0mbdq9bms") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.17.0 (c (n "async-graphql") (v "1.17.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.16.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1l30bmqh88cqb3rnyr0f74dq39bq5rbl7i0dfmgg2wyak85r8q1h") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.17.1 (c (n "async-graphql") (v "1.17.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.16.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.14.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0pr4aiwi2dzs3z1wx521749yc0j785j0gymzya35iqvvgi795rha") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.17.2 (c (n "async-graphql") (v "1.17.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.17.2") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.17.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0fjm5l85zpyksc9wrb4ldbsw4sn64h0l098asqcijr8ln2a1n3yl") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.17.3 (c (n "async-graphql") (v "1.17.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.17.2") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.17.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "16ra2hprg167b8y9mn1vf5k5ckf4xhq4dagbxfxysm3bwij875y3") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.17.4 (c (n "async-graphql") (v "1.17.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.17.2") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.17.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1zhrxazqc9zbdpzf8k13y86f9vigvmz1kg3vfwqa4nfk50jzwanl") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.17.5 (c (n "async-graphql") (v "1.17.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.17.2") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.17.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "02pmmw9b3sw5q704myvlzqdypij7fz6wjsqrz65n73gcq783h9jl") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.17.6 (c (n "async-graphql") (v "1.17.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.17.2") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.17.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0dl0y0lv0ip9jxf1mqf3852jv6s3jglc4phf1qqvxqgabwdcgxds") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.17.7 (c (n "async-graphql") (v "1.17.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.17.6") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.17.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "05i8ghcjks7fba5kkaw13hsswgcd593vggvx602ns9rwyag70kn6") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.17.8 (c (n "async-graphql") (v "1.17.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.17.6") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.17.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1q1r7w3shwbj7w3jms2ilfbnwzydkz7mqlg3v04wm6fjvkx6pamq") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.17.9 (c (n "async-graphql") (v "1.17.9") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.17.6") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.17.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1xyh8g4y9yjypcbn6k91bi2h3wcgnixvq544s166ks1jpb65hyz3") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.17.10 (c (n "async-graphql") (v "1.17.10") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.17.6") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.17.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1w76wzf5a7gjafbgfrdlwdrwqz9mxvsw0mjc83yx5j8pq4xvh945") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.17.11 (c (n "async-graphql") (v "1.17.11") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.17.6") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.17.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0hmlaqsf5lbracm5jrs0lqhis58d8kkrrhflvn7zswi00f0lj22g") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.17.12 (c (n "async-graphql") (v "1.17.12") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.17.11") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.17.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0yd8ikn6y6gz640f652nl0kbrmqjw36nbvcs0m1czmn517yn589m") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.17.13 (c (n "async-graphql") (v "1.17.13") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.17.11") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.17.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1jyb758wwygj340cnfpqh1gzs4ffm15cqkv6f5llf859d6937mmy") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.17.14 (c (n "async-graphql") (v "1.17.14") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.17.11") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.17.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "10032725jfkkpd8lwxqg0gxpm3l0pc928v8b34fj0wmxq109gi65") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.17.15 (c (n "async-graphql") (v "1.17.15") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.17.11") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.17.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0ig73br3jplcnkyjgdrgmz3pvfwzmpyf9kz9ckzkxsmilcclfshw") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.17.16 (c (n "async-graphql") (v "1.17.16") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.17.11") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.17.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1ll466gaj5prfnc6zd5mbflghzfx8n53cbpjh557vai6d9vlms6n") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.17.17 (c (n "async-graphql") (v "1.17.17") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.17.11") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.17.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0y2x9azzn7fz9mhp0svc3a89k0asfa9zinrm9fpfrgbagdn68yk3") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.17.18 (c (n "async-graphql") (v "1.17.18") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.17.11") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.17.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1v9qw8bkiaaqlw18hkickh1823n00j7hc0vxfb0dvpbh2g90xnyw") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.17.19 (c (n "async-graphql") (v "1.17.19") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.17.11") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.17.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0ky6laq5x7sxsn2szi6lx0qrdaapzckn5gsqxr6xh4rzlmvppqy7") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.17.20 (c (n "async-graphql") (v "1.17.20") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.17.19") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.17.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1y43yfpfihlq2qwnhnfb2i72kmq006px4wccr6cqgpzamzbnn1ms") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.17.21 (c (n "async-graphql") (v "1.17.21") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.17.21") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.17.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0plwd7amv2n6ca8pm8mlm3y6zcrwpsfwc67ap3cb7pivzvjwyqqw") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.18.0 (c (n "async-graphql") (v "1.18.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "async-graphql-derive") (r "^1.18.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.18.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "multer") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0wkh24l2pdwzzz7hcn1v4lm0dzwcbsx0ly9xl9ymzlbwz26asl55") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-1.18.1 (c (n "async-graphql") (v "1.18.1") (d (list (d (n "async-graphql-derive") (r "^1.18.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.18.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "17srds83s9b2bdqpmqnfrwpq8nm37hslg6r2gx4vzwafk3y081nm") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-2.0.0-alpha.0 (c (n "async-graphql") (v "2.0.0-alpha.0") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1sm6r6nf27xl9sq176d8cqs98n9jxciqgpnmvw091x1ial2cwnf0") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-2.0.0-alpha.1 (c (n "async-graphql") (v "2.0.0-alpha.1") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.1") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0d3dd888nzfgn0dr7cm34iwkcab543z2h0wjvm340856gb0l8xcz") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-2.0.0-alpha.2 (c (n "async-graphql") (v "2.0.0-alpha.2") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0d3wh5zkxqccijxczglhr1sfcmahlssldq1bmvcq3ddk9q4c3gl3") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-2.0.0-alpha.3 (c (n "async-graphql") (v "2.0.0-alpha.3") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.3") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0g265a1j9kd3h0nb7i4abglqhpixgqacb37nd26q7dawn8bxklzx") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-2.0.0-alpha.4 (c (n "async-graphql") (v "2.0.0-alpha.4") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.4") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.4") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0rlyfba15jds1yx16781q7cid936p231jn7ccfiqyqmklk5w7fym") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-2.0.0-alpha.5 (c (n "async-graphql") (v "2.0.0-alpha.5") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.5") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.5") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "15w29dcmxw9z4hkfaq03xcdnbr6w98rcwzshcx0dv9fnb9kbg1w8") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-2.0.0-alpha.6 (c (n "async-graphql") (v "2.0.0-alpha.6") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0p7lsiq71haq6m7aflx4r78k0xgrzkdkiv6m2brm5q0l00m4z490") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-2.0.0-alpha.7 (c (n "async-graphql") (v "2.0.0-alpha.7") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.7") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.7") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1y7qw1w3vx1h4vmg11dzrpxa1r9ir361bhxwnwkkvv7p4w51xn3f") (f (quote (("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url") ("apollo_tracing" "chrono"))))))

(define-public crate-async-graphql-2.0.0-alpha.8 (c (n "async-graphql") (v "2.0.0-alpha.8") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.8") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.8") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "142iysw1jb6al793hmc7v91afwwfffi4azrp7l6nrfcp2q14ms7x") (f (quote (("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url") ("apollo_tracing" "chrono"))))))

(define-public crate-async-graphql-2.0.0-alpha.9 (c (n "async-graphql") (v "2.0.0-alpha.9") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.9") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.9") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1m5c74f1qxxs31dxlh4d5n2gpqyqbdahbq9vc2hh285a3zmfx74d") (f (quote (("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url") ("apollo_tracing" "chrono"))))))

(define-public crate-async-graphql-2.0.0-alpha.10 (c (n "async-graphql") (v "2.0.0-alpha.10") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.10") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.10") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1hvl95qycn2qm3hjbk93ryvmn5da1dfjh4a6jk39xgwxfz916y8g") (f (quote (("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url") ("apollo_tracing" "chrono"))))))

(define-public crate-async-graphql-2.0.0-alpha.11 (c (n "async-graphql") (v "2.0.0-alpha.11") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.11") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.11") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1lx419skwg6jnp9nlbfdn1i553an00rjn77588s0j163j176b1h7") (f (quote (("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url") ("apollo_tracing" "chrono"))))))

(define-public crate-async-graphql-2.0.0-alpha.12 (c (n "async-graphql") (v "2.0.0-alpha.12") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.12") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.12") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0w30byh3f9glw9m5vpghhbzsfp5jzb3il40dn4y11wxxikhpdy0d") (f (quote (("unblock" "blocking") ("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url" "unblock") ("apollo_tracing" "chrono"))))))

(define-public crate-async-graphql-2.0.0-alpha.13 (c (n "async-graphql") (v "2.0.0-alpha.13") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.13") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.13") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "17bdcrn8xf9vb5k7q14wh4qrzmnvnqn0xvnzp6sf0h31cyyh02nb") (f (quote (("unblock" "blocking") ("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url" "unblock") ("apollo_tracing" "chrono"))))))

(define-public crate-async-graphql-2.0.0-alpha.14 (c (n "async-graphql") (v "2.0.0-alpha.14") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.14") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.14") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0r463fcrg9qnmvidzgyvi8pzf05354613qsqr7v17qazpxl5asay") (f (quote (("unblock" "blocking") ("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url" "unblock") ("apollo_tracing" "chrono"))))))

(define-public crate-async-graphql-1.18.2 (c (n "async-graphql") (v "1.18.2") (d (list (d (n "async-graphql-derive") (r "^1.18.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^1.18.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "14chz8h7g8wcqmsacwzr1g5ckngmjzz2w3ifwkvarv9wbsa9chfg") (f (quote (("default" "bson" "url" "chrono-tz"))))))

(define-public crate-async-graphql-2.0.0-alpha.15 (c (n "async-graphql") (v "2.0.0-alpha.15") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.15") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.15") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0z0n3qkmm7ladsksg4vy0v1lr6q0ba5pwfwkkhgdaxc5md90kq7y") (f (quote (("unblock" "blocking") ("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url" "unblock") ("apollo_tracing" "chrono"))))))

(define-public crate-async-graphql-2.0.0-alpha.16 (c (n "async-graphql") (v "2.0.0-alpha.16") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.16") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.16") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1ci0ka3mh9m55k4vsyaan5riswg8za4hgpnb09pfwhzxszljcnp2") (f (quote (("unblock" "blocking") ("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "uuid" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url" "unblock") ("apollo_tracing" "chrono"))))))

(define-public crate-async-graphql-2.0.0-alpha.17 (c (n "async-graphql") (v "2.0.0-alpha.17") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.17") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.17") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0h4m087g609kg3bnw8918ln2mqm3livg72a34nvdjlgybi7ws8j2") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "uuid" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url" "unblock" "string_number") ("apollo_tracing" "chrono"))))))

(define-public crate-async-graphql-2.0.0-alpha.18 (c (n "async-graphql") (v "2.0.0-alpha.18") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.18") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.18") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0nbphnhzg7z8ddz0f4hvxwj796g8iz2hjdiv9lg3k8802j2c4n0a") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "uuid" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url" "unblock" "string_number") ("apollo_tracing" "chrono"))))))

(define-public crate-async-graphql-2.0.0-alpha.19 (c (n "async-graphql") (v "2.0.0-alpha.19") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.19") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.19") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "11ch36qfk0vbh4g3k1b1paspvhnnknvg1fl7b29spy9s18adw262") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "uuid" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url" "unblock" "string_number") ("apollo_tracing" "chrono"))))))

(define-public crate-async-graphql-2.0.0-alpha.20 (c (n "async-graphql") (v "2.0.0-alpha.20") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.20") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.20") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0lfar74908c2iinxsqwyr1lvfqyc9fly02ll62sz1076dyjbgslv") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "uuid" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url" "unblock" "string_number") ("apollo_tracing" "chrono"))))))

(define-public crate-async-graphql-2.0.0-alpha.21 (c (n "async-graphql") (v "2.0.0-alpha.21") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.21") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.21") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0960k23hd8npn9q4xhv7c86iq11a0xmbh9jgnjy8jxdzmy9k7mh3") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "uuid" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url" "unblock" "string_number") ("apollo_tracing" "chrono"))))))

(define-public crate-async-graphql-2.0.0-alpha.22 (c (n "async-graphql") (v "2.0.0-alpha.22") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.22") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.22") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0x6rf48cv8khbqkswv9wjca284vsnqv3i74ws9i8vxxc81wshw0i") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "apollo_persisted_queries" "uuid" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url" "unblock" "string_number") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru"))))))

(define-public crate-async-graphql-2.0.0-alpha.23 (c (n "async-graphql") (v "2.0.0-alpha.23") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.23") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.23") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0f8663pps3wl3x07anlsyp1fi5kh52fqq6s1qi2rzisrz3f1i5pn") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "apollo_persisted_queries" "uuid" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url" "unblock" "string_number") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru"))))))

(define-public crate-async-graphql-2.0.0-alpha.24 (c (n "async-graphql") (v "2.0.0-alpha.24") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.24") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.24") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "07kxyn938q097wx6a3jnbmvd29vfwqywz376y2ldc66s45lvsw1f") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "apollo_persisted_queries" "uuid" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url" "unblock" "string_number") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru"))))))

(define-public crate-async-graphql-2.0.0-alpha.25 (c (n "async-graphql") (v "2.0.0-alpha.25") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.25") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.25") (d #t) (k 0)) (d (n "async-graphql-value") (r "^2.0.0-alpha.25") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1bm6j79drdl5c9hyvm2h8m52gcy4f1fv4vz10jmf2lmaqck7g7ds") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "apollo_persisted_queries" "uuid" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url" "unblock" "string_number") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru"))))))

(define-public crate-async-graphql-2.0.0-alpha.26 (c (n "async-graphql") (v "2.0.0-alpha.26") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.26") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.26") (d #t) (k 0)) (d (n "async-graphql-value") (r "^2.0.0-alpha.26") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0c9lkar5zdbh860xvfqr2nlmzg1s9rwz28mpm2jsgg1ka2jv4hpj") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "apollo_persisted_queries" "uuid" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url" "unblock" "string_number") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru"))))))

(define-public crate-async-graphql-2.0.0-alpha.27 (c (n "async-graphql") (v "2.0.0-alpha.27") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.27") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.27") (d #t) (k 0)) (d (n "async-graphql-value") (r "^2.0.0-alpha.27") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "18rsfgksnh5rzdxlifd2nsnkwjsk149i3vbw69r9h91y7f5dc7g3") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "apollo_persisted_queries" "uuid" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url" "unblock" "string_number") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru"))))))

(define-public crate-async-graphql-2.0.0-alpha.28 (c (n "async-graphql") (v "2.0.0-alpha.28") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.28") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.28") (d #t) (k 0)) (d (n "async-graphql-value") (r "^2.0.0-alpha.28") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0hbip0md94hs3xhn0wss3sd9q7p5sa3g6vkff16przibcsyrhlv7") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "apollo_persisted_queries" "uuid" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url" "unblock" "string_number") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru"))))))

(define-public crate-async-graphql-2.0.0-alpha.29 (c (n "async-graphql") (v "2.0.0-alpha.29") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.29") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.29") (d #t) (k 0)) (d (n "async-graphql-value") (r "^2.0.0-alpha.29") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0s0rinxppn17pyqqspzpafpk7gag1sd9dgd06v2jnhjh50kg3l47") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "apollo_persisted_queries" "uuid" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url" "unblock" "string_number") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru"))))))

(define-public crate-async-graphql-2.0.0-alpha.30 (c (n "async-graphql") (v "2.0.0-alpha.30") (d (list (d (n "async-graphql-derive") (r "^2.0.0-alpha.30") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0-alpha.30") (d #t) (k 0)) (d (n "async-graphql-value") (r "^2.0.0-alpha.30") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0gx54rncjsl1yjg3hihkqxqqmz44jwlxpsf2ans4y54bxk2yz8i4") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "apollo_persisted_queries" "uuid" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url" "unblock" "string_number") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru"))))))

(define-public crate-async-graphql-2.0.0 (c (n "async-graphql") (v "2.0.0") (d (list (d (n "async-graphql-derive") (r "^2.0.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.0") (d #t) (k 0)) (d (n "async-graphql-value") (r "^2.0.0") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1rwv1917f6nwg2xwllvhg8xdsg5lvdgkn2034fr4s49v7d1x0jic") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "apollo_persisted_queries" "uuid" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url" "unblock" "string_number") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru"))))))

(define-public crate-async-graphql-2.0.1 (c (n "async-graphql") (v "2.0.1") (d (list (d (n "async-graphql-derive") (r "^2.0.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.1") (d #t) (k 0)) (d (n "async-graphql-value") (r "^2.0.1") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0d1al4yjwyx027wdn96c58q49a9l88is1rfpxq0p7n0h9cn51vzg") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "apollo_persisted_queries" "uuid" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url" "unblock" "string_number") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru"))))))

(define-public crate-async-graphql-2.0.2 (c (n "async-graphql") (v "2.0.2") (d (list (d (n "async-graphql-derive") (r "^2.0.2") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.0.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "^2.0.2") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1w5yp056dppr3cnvbc0m8ba98jgkk99717ahvj7r3k3vfmix6gix") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "apollo_persisted_queries" "uuid" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url" "unblock" "string_number") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru"))))))

(define-public crate-async-graphql-2.0.3 (c (n "async-graphql") (v "2.0.3") (d (list (d (n "async-graphql-derive") (r "=2.0.3") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.0.3") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.3") (d #t) (k 0)) (d (n "async-std") (r "^1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.7") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.5.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1ijdj7h0n66vhjj5rbsq2ia9ag8pfr1qsvzf79dwyc8q1a7k5y3l") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "bytes" "tempfile") ("default" "apollo_tracing" "apollo_persisted_queries" "uuid" "bson" "chrono" "chrono-tz" "log" "multipart" "tracing" "url" "unblock" "string_number") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru"))))))

(define-public crate-async-graphql-2.0.4 (c (n "async-graphql") (v "2.0.4") (d (list (d (n "async-channel") (r "^1.5.1") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.0.4") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.0.4") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.4") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.6") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.10") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.6.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1maklgaxgymdn7qrwmz94s2v4afsc1dxnk2rnhjjyzmd0sh8w1aa") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "bytes" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru"))))))

(define-public crate-async-graphql-2.0.5 (c (n "async-graphql") (v "2.0.5") (d (list (d (n "async-channel") (r "^1.5.1") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.0.5") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.0.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.6") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.10") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.6.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "13msj5dl65whwgdclzi327g60jp6frhlaj7qk5b7pz9dzswpwmzs") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "bytes" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru"))))))

(define-public crate-async-graphql-2.0.6 (c (n "async-graphql") (v "2.0.6") (d (list (d (n "async-channel") (r "^1.5.1") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.0.6") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.0.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.6") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.10") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.6.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "14r9jzjdhljfapygjw5fqvnbsw5ghbm620l362xcicvdnzd62c7s") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "bytes" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru"))))))

(define-public crate-async-graphql-2.0.7 (c (n "async-graphql") (v "2.0.7") (d (list (d (n "async-channel") (r "^1.5.1") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.0.6") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.0.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.6") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.10") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.6.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "19c8ar9bpxmi0dv37vhmhshvhqp98bn0llxiy68908apdc3bbffv") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "bytes" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru"))))))

(define-public crate-async-graphql-2.0.8 (c (n "async-graphql") (v "2.0.8") (d (list (d (n "async-channel") (r "^1.5.1") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.0.8") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.0.8") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.6") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.10") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.6.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1pis9ikdrcwhq8nd58ak8mn1r2a0vpcxyp80j9vz7hq96vrx3b3a") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "bytes" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru"))))))

(define-public crate-async-graphql-2.0.9 (c (n "async-graphql") (v "2.0.9") (d (list (d (n "async-channel") (r "^1.5.1") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.0.9") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.0.8") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.6") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.10") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "spin") (r "^0.6.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "08mdpbwd4ms4111wb2p4h69xk10ichd8xhcxs4qwyxxsnvaymwnf") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "bytes" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru"))))))

(define-public crate-async-graphql-2.0.10 (c (n "async-graphql") (v "2.0.10") (d (list (d (n "async-channel") (r "^1.5.1") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.0.10") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.0.8") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.6") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.10") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.6.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0iz69q3s84lwk49qdvfl4x9bjyi6aa83azsx6i7ann2imy4d3zfr") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "bytes" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru" "sha2"))))))

(define-public crate-async-graphql-2.0.11 (c (n "async-graphql") (v "2.0.11") (d (list (d (n "async-channel") (r "^1.5.1") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.0.10") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.0.8") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.6") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.10") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.6.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1lbhw64fyj5p239gm38hzi7w2rnv8fbq9vab7nzr548gar19zzjf") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "bytes" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru" "sha2"))))))

(define-public crate-async-graphql-2.0.12 (c (n "async-graphql") (v "2.0.12") (d (list (d (n "async-channel") (r "^1.5.1") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.0.12") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.0.8") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.6") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.10") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.6.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "09v7l5qkg5lkw1pqym50mw005iidyq4lvh6xihib74f8jlm3m2fp") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "bytes" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru" "sha2"))))))

(define-public crate-async-graphql-2.0.13 (c (n "async-graphql") (v "2.0.13") (d (list (d (n "async-channel") (r "^1.5.1") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.0.12") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.0.8") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.6") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.10") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.6.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1fkalvkf1xbphqwm5hvfwzlzkc8dv41sk6swdsjylr87jmdhcv9y") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "bytes" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru" "sha2"))))))

(define-public crate-async-graphql-2.0.14 (c (n "async-graphql") (v "2.0.14") (d (list (d (n "async-channel") (r "^1.5.1") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.0.12") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.0.8") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.6") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.10") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.6.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1pm81vkf83sl5ypnkys82jyrzalsmj969k7qvd486lk65nkqhv3x") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "bytes" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru" "sha2"))))))

(define-public crate-async-graphql-2.0.15 (c (n "async-graphql") (v "2.0.15") (d (list (d (n "async-channel") (r "^1.5.1") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.0.15") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.0.8") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.6") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.10") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.6.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1grdwrs78qq8mjqgq14lp20zd0aa9mpdrrnxrkxqy743w4c83wwd") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "bytes" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru" "sha2"))))))

(define-public crate-async-graphql-2.0.16 (c (n "async-graphql") (v "2.0.16") (d (list (d (n "async-channel") (r "^1.5.1") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.0.16") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.0.8") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.6") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.10") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.6.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0z9gh66ag54l1cpzs3is8pk50q4lhmnby2zwc2rj9bngld6cy0c1") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "bytes" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru" "sha2"))))))

(define-public crate-async-graphql-2.1.0 (c (n "async-graphql") (v "2.1.0") (d (list (d (n "async-channel") (r "^1.5.1") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.0.16") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.0.8") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.6") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.10") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.6.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0c1chip8lrmdd3bmvdw2y513swamwwhfvf0gcs50yjknfhy3hkw9") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "bytes" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru" "sha2"))))))

(define-public crate-async-graphql-2.1.1 (c (n "async-graphql") (v "2.1.1") (d (list (d (n "async-channel") (r "^1.5.1") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.1.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.1.1") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.6") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.10") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.6.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "04fpb5c1hfh0cpybybr4nhrx44wvdzpz6ij9igvdzpbfh1bh9b1d") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "bytes" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru" "sha2"))))))

(define-public crate-async-graphql-2.1.2 (c (n "async-graphql") (v "2.1.2") (d (list (d (n "async-channel") (r "^1.5.1") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.1.2") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.1.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.6") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.1.10") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.6.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0vy4vgzw9qfb29ql7zy43gh3xbwqj3dc6vzr2a6qggclmwijfa55") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "bytes" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru" "sha2"))))))

(define-public crate-async-graphql-2.1.3 (c (n "async-graphql") (v "2.1.3") (d (list (d (n "async-channel") (r ">=1.5.1, <2.0.0") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.1.3") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.1.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-mutex") (r ">=1.4.0, <2.0.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r ">=1.6.5, <2.0.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "async-trait") (r ">=0.1.41, <0.2.0") (d #t) (k 0)) (d (n "blocking") (r ">=1.0.0, <2.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r ">=1.0.0, <2.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r ">=0.5.4, <0.6.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r ">=0.4.15, <0.5.0") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r ">=0.5.1, <0.6.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r ">=1.0.6, <2.0.0") (d #t) (k 0)) (d (n "futures-util") (r ">=0.3.6, <0.4.0") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r ">=1.6.0, <2.0.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.11, <0.5.0") (o #t) (d #t) (k 0)) (d (n "lru") (r ">=0.6.0, <0.7.0") (o #t) (d #t) (k 0)) (d (n "multer") (r ">=1.2.2, <2.0.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r ">=0.2.12, <0.3.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r ">=1.3.1, <2.0.0") (d #t) (k 0)) (d (n "pin-project-lite") (r ">=0.1.10, <0.2.0") (d #t) (k 0)) (d (n "regex") (r ">=1.4.1, <2.0.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.117, <2.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.48, <2.0.0") (d #t) (k 0)) (d (n "sha2") (r ">=0.9.1, <0.10.0") (o #t) (d #t) (k 0)) (d (n "spin") (r ">=0.6.0, <0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r ">=1.1.0, <2.0.0") (d #t) (k 0)) (d (n "tempfile") (r ">=3.1.0, <4.0.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r ">=1.0.21, <2.0.0") (d #t) (k 0)) (d (n "tracing") (r ">=0.1.21, <0.2.0") (o #t) (d #t) (k 0)) (d (n "url") (r ">=2.1.1, <3.0.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r ">=0.8.1, <0.9.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1qr25lgzy0jw5vw4rqi1kmz3m37dfvcxaadaxljqfm2g74f4z483") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "bytes" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru" "sha2"))))))

(define-public crate-async-graphql-2.1.4 (c (n "async-graphql") (v "2.1.4") (d (list (d (n "async-channel") (r ">=1.5.1, <2.0.0") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.1.4") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.1.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-mutex") (r ">=1.4.0, <2.0.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r ">=1.6.5, <2.0.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "async-trait") (r ">=0.1.41, <0.2.0") (d #t) (k 0)) (d (n "blocking") (r ">=1.0.0, <2.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r ">=1.0.0, <2.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r ">=0.5.4, <0.6.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r ">=0.4.15, <0.5.0") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r ">=0.5.1, <0.6.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r ">=1.0.6, <2.0.0") (d #t) (k 0)) (d (n "futures-util") (r ">=0.3.6, <0.4.0") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r ">=1.6.0, <2.0.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.11, <0.5.0") (o #t) (d #t) (k 0)) (d (n "lru") (r ">=0.6.0, <0.7.0") (o #t) (d #t) (k 0)) (d (n "multer") (r ">=1.2.2, <2.0.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r ">=0.2.12, <0.3.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r ">=1.3.1, <2.0.0") (d #t) (k 0)) (d (n "pin-project-lite") (r ">=0.1.10, <0.2.0") (d #t) (k 0)) (d (n "regex") (r ">=1.4.1, <2.0.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.117, <2.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.48, <2.0.0") (d #t) (k 0)) (d (n "sha2") (r ">=0.9.1, <0.10.0") (o #t) (d #t) (k 0)) (d (n "spin") (r ">=0.6.0, <0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r ">=1.1.0, <2.0.0") (d #t) (k 0)) (d (n "tempfile") (r ">=3.1.0, <4.0.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r ">=1.0.21, <2.0.0") (d #t) (k 0)) (d (n "tracing") (r ">=0.1.21, <0.2.0") (o #t) (d #t) (k 0)) (d (n "url") (r ">=2.1.1, <3.0.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r ">=0.8.1, <0.9.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "11mminkbq06p2qmgwd7vn4nmdwsj21n651vm5f71596xznc79lk5") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "bytes" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru" "sha2"))))))

(define-public crate-async-graphql-2.1.5 (c (n "async-graphql") (v "2.1.5") (d (list (d (n "async-channel") (r ">=1.5.1, <2.0.0") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.1.4") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.1.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-mutex") (r ">=1.4.0, <2.0.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r ">=1.6.5, <2.0.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "async-trait") (r ">=0.1.41, <0.2.0") (d #t) (k 0)) (d (n "blocking") (r ">=1.0.0, <2.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r ">=1.0.0, <2.0.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r ">=0.5.4, <0.6.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r ">=0.4.15, <0.5.0") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r ">=0.5.1, <0.6.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r ">=1.0.6, <2.0.0") (d #t) (k 0)) (d (n "futures-util") (r ">=0.3.6, <0.4.0") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r ">=1.6.0, <2.0.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.11, <0.5.0") (o #t) (d #t) (k 0)) (d (n "lru") (r ">=0.6.0, <0.7.0") (o #t) (d #t) (k 0)) (d (n "multer") (r ">=1.2.2, <2.0.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r ">=0.2.12, <0.3.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r ">=1.3.1, <2.0.0") (d #t) (k 0)) (d (n "pin-project-lite") (r ">=0.1.10, <0.2.0") (d #t) (k 0)) (d (n "regex") (r ">=1.4.1, <2.0.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.117, <2.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.48, <2.0.0") (d #t) (k 0)) (d (n "sha2") (r ">=0.9.1, <0.10.0") (o #t) (d #t) (k 0)) (d (n "spin") (r ">=0.6.0, <0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r ">=1.1.0, <2.0.0") (d #t) (k 0)) (d (n "tempfile") (r ">=3.1.0, <4.0.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r ">=1.0.21, <2.0.0") (d #t) (k 0)) (d (n "tracing") (r ">=0.1.21, <0.2.0") (o #t) (d #t) (k 0)) (d (n "url") (r ">=2.1.1, <3.0.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r ">=0.8.1, <0.9.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0kmfz9s429v09k9q9i03wf2dvag8adri54rm2zm36cfinj89x5yr") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "bytes" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru" "sha2"))))))

(define-public crate-async-graphql-2.1.6 (c (n "async-graphql") (v "2.1.6") (d (list (d (n "async-channel") (r "^1.5.1") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.1.4") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.1.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1nryjfrj0kvhr35fzlh0nwmxkppqds49pz90y9ax71acqs4fvpcd") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru" "sha2"))))))

(define-public crate-async-graphql-2.1.7 (c (n "async-graphql") (v "2.1.7") (d (list (d (n "async-channel") (r "^1.5.1") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.1.4") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.1.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "037xw0ziv43ncdbj4pinc1xb2vpxqpdjw2axd8c94k3rnv4c1471") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru" "sha2"))))))

(define-public crate-async-graphql-2.1.8 (c (n "async-graphql") (v "2.1.8") (d (list (d (n "async-channel") (r "^1.5.1") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.1.8") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.1.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0ynxwy1s7bfxc0bvhs3kmanqicnvgkrg9mgr0khv134x5gz7xhig") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru" "sha2"))))))

(define-public crate-async-graphql-2.1.9 (c (n "async-graphql") (v "2.1.9") (d (list (d (n "async-channel") (r "^1.5.1") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.1.8") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.1.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "11nzx5icm7v1ddqimsy6lsza7wkwkvrsgv9pr3n6yihm9pbs7174") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru" "sha2"))))))

(define-public crate-async-graphql-2.2.0 (c (n "async-graphql") (v "2.2.0") (d (list (d (n "async-channel") (r "^1.5.1") (d #t) (k 2)) (d (n "async-graphql-derive") (r "=2.2.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.1.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0l89sw4vjqbsw6f1hfhv22vwc7h7an7cyhn6ai19piyf53gip5ic") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "async-mutex" "lru" "sha2"))))))

(define-public crate-async-graphql-2.3.0 (c (n "async-graphql") (v "2.3.0") (d (list (d (n "async-graphql-derive") (r "=2.3.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.1.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0xkka2nwcg1vapvr1yhdil92gki1h779viragq58x9gg7ah5wziq") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.3.1 (c (n "async-graphql") (v "2.3.1") (d (list (d (n "async-graphql-derive") (r "=2.3.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.1.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "17l91qxg5xgh900ffmd9r155lfl5zxk0nqab5hc27f56824dvbz3") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.3.2 (c (n "async-graphql") (v "2.3.2") (d (list (d (n "async-graphql-derive") (r "=2.3.2") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.1.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1kx0hc031w5x4cs6b6p5b47qyx8i805w17lfqv3s0ys6gvimkv2b") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.4.0 (c (n "async-graphql") (v "2.4.0") (d (list (d (n "async-graphql-derive") (r "=2.4.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.1.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1w0dn4wvnssighch7vj56wgbd8iy5q4nwq14mwl24yqlvsc5mpav") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.4.1 (c (n "async-graphql") (v "2.4.1") (d (list (d (n "async-graphql-derive") (r "=2.4.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.1.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0285hdxj4fdapacyqfdv8m7q7nzpjzca4h2233hvm3kk0jk91q16") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.4.2 (c (n "async-graphql") (v "2.4.2") (d (list (d (n "async-graphql-derive") (r "=2.4.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.1.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1kx57kpmig1hlk1s5d6wi3g7f3jq09873h5f9lbq0dkl7s8c72pk") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.4.3 (c (n "async-graphql") (v "2.4.3") (d (list (d (n "async-graphql-derive") (r "=2.4.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.1.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1wkw2zjj36jfxlmlcnpjmwdjkqaaxv4jn6mf6hgz5pmmkfjn53z1") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.4.4 (c (n "async-graphql") (v "2.4.4") (d (list (d (n "async-graphql-derive") (r "=2.4.3") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.1.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "10hf6psldnin6ssx90rgzg3840xrhp8pph6awbb4yxa6ir9dz457") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.4.5 (c (n "async-graphql") (v "2.4.5") (d (list (d (n "async-graphql-derive") (r "^2.4.5") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.4.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1jb8xvlispz0z8h0mpwiirl24a5342fx1bd7yh1sx895xfyckw0y") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.4.6 (c (n "async-graphql") (v "2.4.6") (d (list (d (n "async-graphql-derive") (r "^2.4.5") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.4.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0nm7vab9l6yn73bfkyd0pw7mv2yaqry5dvs9j76ybxdkwnd5l2zh") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.4.7 (c (n "async-graphql") (v "2.4.7") (d (list (d (n "async-graphql-derive") (r "^2.4.5") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.4.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "07w5zczlcjyrl9d1vkqm2nlha5cdl62879x67fis9wz9n4q0b8j6") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.4.8 (c (n "async-graphql") (v "2.4.8") (d (list (d (n "async-graphql-derive") (r "=2.4.8") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.4.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0xp1nlz0dfqj5kzz1ikwyc1cm72gig6hlgw2v7q5ckdbf8kh00bz") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.4.9 (c (n "async-graphql") (v "2.4.9") (d (list (d (n "async-graphql-derive") (r "=2.4.9") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.4.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0wvrj0hzcmdrcqs9r4wbvrviq8mr4v77nl66yaqzp265k7044hfy") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.4.10 (c (n "async-graphql") (v "2.4.10") (d (list (d (n "async-graphql-derive") (r "=2.4.10") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.4.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0rhz81q07x8lhk60xac6zg03skbah9gpqx7i5sy4yz2zj4jrkjib") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.4.11 (c (n "async-graphql") (v "2.4.11") (d (list (d (n "async-graphql-derive") (r "=2.4.11") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.4.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0gwxpjxs7n7rksw3pccrxg2d6509f0qqflsyvs16glhkscc7g4dw") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.5.0 (c (n "async-graphql") (v "2.5.0") (d (list (d (n "async-graphql-derive") (r "=2.5.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.4.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0d8zdm1w23gvwa6svmpzmzl34x6zjswks05wxkwvhxswb9d3x0w2") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.5.1 (c (n "async-graphql") (v "2.5.1") (d (list (d (n "async-graphql-derive") (r "=2.5.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.4.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1p9rd7qmcz4rgm87iqpr9zgm7hz83msxk2anqifj4m71cxaz5m12") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.5.2 (c (n "async-graphql") (v "2.5.2") (d (list (d (n "async-graphql-derive") (r "=2.5.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.4.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1cwm2qw3kznf5kfcln35cdrcm814mcb5j61wlj0xrmf87cb2xd1p") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.5.3 (c (n "async-graphql") (v "2.5.3") (d (list (d (n "async-graphql-derive") (r "=2.5.3") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.5.3") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0i86ic4chyx7xjmc91m8k2a8r29x8y4ywva96m8rlhkhz78d19if") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.5.4 (c (n "async-graphql") (v "2.5.4") (d (list (d (n "async-graphql-derive") (r "=2.5.4") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.5.4") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "16k3037nfhczc3wfgm4np7dx50m4yyd4cbvx3fz0fx6859k181h6") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.5.5 (c (n "async-graphql") (v "2.5.5") (d (list (d (n "async-graphql-derive") (r "=2.5.5") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.5.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1m1fy83lacsh2fmn5c3754libpmnvag6likj9c4wkvmly8km15b0") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.5.6 (c (n "async-graphql") (v "2.5.6") (d (list (d (n "async-graphql-derive") (r "=2.5.5") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.5.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1miy5q5qzwfhcghrha0gafrfp3p3v4d4pj894915gfhh7q5mvgmx") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.5.7 (c (n "async-graphql") (v "2.5.7") (d (list (d (n "async-graphql-derive") (r "=2.5.5") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.5.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "154h46vrfxxbxk9ifn2ln9x683rbjg7i8g8i3a0zl6x12y3zayp8") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.5.8 (c (n "async-graphql") (v "2.5.8") (d (list (d (n "async-graphql-derive") (r "=2.5.8") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.5.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1k74a98wc3yg5fxxx4zrrbirx09x3z9hmb9w4nxqs3dmqijxqix8") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.5.9 (c (n "async-graphql") (v "2.5.9") (d (list (d (n "async-graphql-derive") (r "=2.5.9") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.5.9") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.5.9") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0wdmdxr11wf929vhbj62p698hzgqh29faid8xq3m5a6sxv8rqknl") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.5.10 (c (n "async-graphql") (v "2.5.10") (d (list (d (n "async-graphql-derive") (r "=2.5.10") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.5.9") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.5.9") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "10x6c98swnq0fc797mapp0pgqzrkdsk1c6ilj36frfyprmgax99b") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.5.11 (c (n "async-graphql") (v "2.5.11") (d (list (d (n "async-graphql-derive") (r "=2.5.10") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.5.9") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.5.9") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1yxzgfwya7b54q5zz7c53rbvh1w6r83g25gdz84x8m72bd902c6w") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.5.12 (c (n "async-graphql") (v "2.5.12") (d (list (d (n "async-graphql-derive") (r "=2.5.12") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.5.9") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.5.9") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "19gy7nyq4vjphh2j950dp18zph0xmgnd9bj0mynr7fm63wnlbdpd") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.5.13 (c (n "async-graphql") (v "2.5.13") (d (list (d (n "async-graphql-derive") (r "=2.5.13") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.5.9") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.5.9") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0rlqi4kfqrbnv08qd83ng43fvrr5llc6rgnch32q8k9w72ahw7qc") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.5.14 (c (n "async-graphql") (v "2.5.14") (d (list (d (n "async-graphql-derive") (r "=2.5.13") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.5.9") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.5.9") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tokio") (r "^1.3.0") (f (quote ("macros" "rt" "sync" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1llmn140l63kl6ckhvznsddir7xmvny3yvqfr3s7pwszym28wkbl") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.6.0 (c (n "async-graphql") (v "2.6.0") (d (list (d (n "async-graphql-derive") (r "=2.6.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.5.9") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.5.9") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tokio") (r "^1.3.0") (f (quote ("macros" "rt" "sync" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1l1dixhamq57v7lq24wmahysc2mvjgfifplk9h29zwjyixi83bli") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.6.1 (c (n "async-graphql") (v "2.6.1") (d (list (d (n "async-graphql-derive") (r "=2.6.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.5.9") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.5.9") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tokio") (r "^1.3.0") (f (quote ("macros" "rt" "sync" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "19hvp1b9lk13fprlk6gjibyfsyigr456hzfy8sggslwd2hxnixw9") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.6.2 (c (n "async-graphql") (v "2.6.2") (d (list (d (n "async-graphql-derive") (r "=2.6.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.5.9") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.5.9") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tokio") (r "^1.3.0") (f (quote ("macros" "rt" "sync" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0sf1nj4g7k3wc1a6m37mdsy6xg0432px5xhfg0nl3rkpia3zvxkc") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("nightly") ("multipart" "multer" "tempfile") ("default" "apollo_persisted_queries" "apollo_tracing" "bson" "chrono" "chrono-tz" "log" "multipart" "string_number" "tracing" "unblock" "url" "uuid" "dataloader") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.6.3 (c (n "async-graphql") (v "2.6.3") (d (list (d (n "async-graphql-derive") (r "=2.6.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.5.9") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.5.9") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1rkl92sc4dmswxmfp83xy3jpfcc44fnrzx7x2q3aky900f6h07fq") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("default") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.6.4 (c (n "async-graphql") (v "2.6.4") (d (list (d (n "async-graphql-derive") (r "=2.6.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.5.9") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.5.9") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.41") (d #t) (k 0)) (d (n "blocking") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.8") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.7.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1rvckg28hs89h0x8g3sv8dqsc2m29wjgkl099c0vd7qdrwv4qz3f") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("default") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.6.5 (c (n "async-graphql") (v "2.6.5") (d (list (d (n "async-graphql-derive") (r "=2.6.5") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.6.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.6.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1vblm3ij67bvpmhczvx57m8i0kfpc398wv4cy2pfmznsbis6zhg9") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("default") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.7.0 (c (n "async-graphql") (v "2.7.0") (d (list (d (n "async-graphql-derive") (r "=2.7.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.6.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.6.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0k51g5rplca9glj9ixjqa05gr7kkyfnd2k5bgiqkypm36vycs651") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("default") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.7.1 (c (n "async-graphql") (v "2.7.1") (d (list (d (n "async-graphql-derive") (r "=2.7.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.7.1") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.6.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "056iw67y3v3cx8xmspk0bbf0sy0mb17n1kqaac2v79nvxmzcizry") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("default") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.7.2 (c (n "async-graphql") (v "2.7.2") (d (list (d (n "async-graphql-derive") (r "=2.7.2") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.7.1") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.6.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1238l17x0fclhya1r5dissbddidp26fzgq9zhjs2vpp215i0b76y") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("default") ("dataloader" "futures-timer" "futures-channel") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.7.3 (c (n "async-graphql") (v "2.7.3") (d (list (d (n "async-graphql-derive") (r "=2.7.3") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.7.1") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.6.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "05gxnzamfjzvdjzdvpf3ddgfh0y58gylh7was4mkci8hj4fzfcc4") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("default") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.7.4 (c (n "async-graphql") (v "2.7.4") (d (list (d (n "async-graphql-derive") (r "=2.7.3") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.7.1") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.6.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.25") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0hm9n01r8dpqqb90cf2lr5wx416bwsi41kxq1ij8x1xjdyd0m0qm") (f (quote (("unblock" "blocking") ("string_number" "num-traits") ("default") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.8.0 (c (n "async-graphql") (v "2.8.0") (d (list (d (n "async-graphql-derive") (r "=2.8.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.7.1") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.6.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0m76vy2zin95xv58b4wdkfybxkic22ad8l9fgb4rmy1xszmya6mi") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.8.1 (c (n "async-graphql") (v "2.8.1") (d (list (d (n "async-graphql-derive") (r "=2.8.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.7.1") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.6.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1rj704cr42kjd3hivz7lqcdy8zgbl59rcckj0xaq4y2vvi3irvac") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.8.2 (c (n "async-graphql") (v "2.8.2") (d (list (d (n "async-graphql-derive") (r "=2.8.2") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.7.1") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.6.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0jk96fdq1wgd7nasib0ydl8z9jhhcyr957l20dv3cjpfcnpp2pmv") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.8.4 (c (n "async-graphql") (v "2.8.4") (d (list (d (n "async-graphql-derive") (r "=2.8.4") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.7.1") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.6.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0x5xfi894m08mrvn4dqdh1g9gvv3822yrang7kf7vr8701nbw4cc") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.8.5 (c (n "async-graphql") (v "2.8.5") (d (list (d (n "async-graphql-derive") (r "=2.8.5") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.8.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.6.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0a5lb18v5xg58y0p309wlw4mk74sly8c587qihcxpkscmg7n6ysb") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.8.6 (c (n "async-graphql") (v "2.8.6") (d (list (d (n "async-graphql-derive") (r "=2.8.5") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.8.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.6.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^1.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1hhk02faasm94v2aqxzr67a9zizhkpwl7mw8rb0n17f5ww4sczf0") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.9.0 (c (n "async-graphql") (v "2.9.0") (d (list (d (n "async-graphql-derive") (r "^2.9.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.9.0") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.6.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1n2v8817f5yd0s4qfhcnbnzdny8ls1mv0six9r964dckdxm2r1z7") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2")))) (y #t)))

(define-public crate-async-graphql-2.9.1 (c (n "async-graphql") (v "2.9.1") (d (list (d (n "async-graphql-derive") (r "=2.9.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.9.1") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.9.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0qc1660m28581gdhcdaw5a7cndcy76v4d425ny74105qixvf8d49") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.9.2 (c (n "async-graphql") (v "2.9.2") (d (list (d (n "async-graphql-derive") (r "=2.9.2") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.9.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.9.2") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1nblanxfjmjkp9b619ik0ffp77mrwm0wlryw1zkb34xcf1fsvhfj") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.9.3 (c (n "async-graphql") (v "2.9.3") (d (list (d (n "async-graphql-derive") (r "=2.9.3") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.9.3") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.9.3") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0-beta.1") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0l8cv40v26vqcv2si1vdc19l03xykz8nkk7zc596na1cn9qm0dni") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.9.4 (c (n "async-graphql") (v "2.9.4") (d (list (d (n "async-graphql-derive") (r "=2.9.4") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.9.4") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.9.4") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0-beta.1") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1vnl8g1p1k17vz65bcaa15hpihr2cd0ssqnh02xbp0xgdmpfpf0g") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.9.5 (c (n "async-graphql") (v "2.9.5") (d (list (d (n "async-graphql-derive") (r "=2.9.5") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.9.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.9.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0-beta.1") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0jssfbd93m491xphb2ksgcndkwlajlr02f8chs6y47yzn1y1svjg") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.9.6 (c (n "async-graphql") (v "2.9.6") (d (list (d (n "async-graphql-derive") (r "=2.9.6") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.9.6") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.9.6") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0-beta.1") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "050qr424f6shwa1vjvr5y8f1v1dpbhyjd19087g58vfiq2q582qc") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.9.7 (c (n "async-graphql") (v "2.9.7") (d (list (d (n "async-graphql-derive") (r "=2.9.7") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.9.7") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.9.7") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0-beta.1") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0i6ksdajdlsxn408paplklc1lsfb23wni50801ds53sscv0wiswp") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.9.8 (c (n "async-graphql") (v "2.9.8") (d (list (d (n "async-graphql-derive") (r "^2.9.8") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.9.8") (d #t) (k 0)) (d (n "async-graphql-value") (r "^2.9.8") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0-beta.1") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1yhm6jk35rzjcj2553dnh87gd0b3j94rqs4h07wxa881x8k75l58") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.9.9 (c (n "async-graphql") (v "2.9.9") (d (list (d (n "async-graphql-derive") (r "^2.9.8") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.9.8") (d #t) (k 0)) (d (n "async-graphql-value") (r "^2.9.8") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0-beta.1") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "19ix9rlbbbhsygpsf40h0wgp5myq9xldcdbfbmxj0vn3xlwwnib7") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.9.10 (c (n "async-graphql") (v "2.9.10") (d (list (d (n "async-graphql-derive") (r "^2.9.8") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.9.8") (d #t) (k 0)) (d (n "async-graphql-value") (r "^2.9.8") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0-beta.1") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1zinnp1968k12njxymdvcpynn59z5k788sx0f3pxn3zdg2d1a333") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.9.11 (c (n "async-graphql") (v "2.9.11") (d (list (d (n "async-graphql-derive") (r "^2.9.8") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.9.8") (d #t) (k 0)) (d (n "async-graphql-value") (r "^2.9.8") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0-beta.1") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1drhw79fb438ymi5hl23mf1mqrnp2pdly27188bhvn12fbdw00fd") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.9.12 (c (n "async-graphql") (v "2.9.12") (d (list (d (n "async-graphql-derive") (r "=2.9.12") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.9.12") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.9.12") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0-beta.1") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0dppkqvg83lqsxamslqvz5mba9ilxn1kbb46f98apbf1ic2digxj") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.9.13 (c (n "async-graphql") (v "2.9.13") (d (list (d (n "async-graphql-derive") (r "=2.9.13") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.9.13") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.9.13") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0-beta.1") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "09nr28w8d0il2zm933rxxm9m55xvx0p5lcpxkbq038ywqzf55515") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.9.14 (c (n "async-graphql") (v "2.9.14") (d (list (d (n "async-graphql-derive") (r "=2.9.14") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.9.14") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.9.14") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0-beta.1") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0lqclrjrq429i2sfjg1sw709n9d3418agi7aqr0rjdnzhak485f7") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.9.15 (c (n "async-graphql") (v "2.9.15") (d (list (d (n "async-graphql-derive") (r "=2.9.15") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.9.15") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.9.15") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "05zwkz4bqsfagqd2k926s77wryvvhx9ff72gsvvpvvnjyg9xjh46") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.10.0 (c (n "async-graphql") (v "2.10.0") (d (list (d (n "async-graphql-derive") (r "=2.10.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.10.0") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.10.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0ai4y4g4y21yc6wizqx0a9phs1w6gfi9v8xn538n67pg4sg8vbiz") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.10.1 (c (n "async-graphql") (v "2.10.1") (d (list (d (n "async-graphql-derive") (r "=2.10.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.10.1") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.10.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0c1pd6mbkkaa8kv0dgihay24cyyd6lxfzpwk8mr2z9qnb6pf7clm") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.10.2 (c (n "async-graphql") (v "2.10.2") (d (list (d (n "async-graphql-derive") (r "^2.10.2") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.10.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "^2.10.2") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "05n677sm8lpd9n3w539pmkwmjr0yc9kd8b8k77q5s0s5vjfbp9f8") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.10.3 (c (n "async-graphql") (v "2.10.3") (d (list (d (n "async-graphql-derive") (r "=2.10.3") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.10.3") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.10.3") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1yfcny3825bkmhv3h321wiappc6rdzb6y3ddawz1v1r2g0icdfsp") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.10.4 (c (n "async-graphql") (v "2.10.4") (d (list (d (n "async-graphql-derive") (r "=2.10.4") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.10.4") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.10.4") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1vjffk2nsrbb9m2am3494nzwp0zidv6pxvghf478vkbd3ifhxzrn") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.10.5 (c (n "async-graphql") (v "2.10.5") (d (list (d (n "async-graphql-derive") (r "=2.10.5") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.10.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.10.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1dq0aw3aq68f5wi4m9f0cmc9bk9ixragn0fq91zsfyys963p146v") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.10.6 (c (n "async-graphql") (v "2.10.6") (d (list (d (n "async-graphql-derive") (r "^2.10.6") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.10.6") (d #t) (k 0)) (d (n "async-graphql-value") (r "^2.10.6") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0gvz5xzil8pg57r5wrdwmxk4ifc58rc3n1sgiidb37qxx817af72") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.10.7 (c (n "async-graphql") (v "2.10.7") (d (list (d (n "async-graphql-derive") (r "=2.10.7") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.10.7") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.10.7") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "11jp6aix0vdiwgyvvcxwwa916hzv8pv8kn41hqppp928kl5likxf") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.10.8 (c (n "async-graphql") (v "2.10.8") (d (list (d (n "async-graphql-derive") (r "^2.10.8") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^2.10.8") (d #t) (k 0)) (d (n "async-graphql-value") (r "^2.10.8") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "126gc8jki55py24gwhgac49nlmpgw4ickqjvh7ycz5y7gdkigbi8") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.11.0 (c (n "async-graphql") (v "2.11.0") (d (list (d (n "async-graphql-derive") (r "=2.11.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.11.0") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.11.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0b9nansly639s5i9r85d7vjpzz6k6damrq7jrp1faqk47y48jzd1") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.11.1 (c (n "async-graphql") (v "2.11.1") (d (list (d (n "async-graphql-derive") (r "=2.11.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.11.1") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.11.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0ygpaz6416z4p2wfrqkqz7w732phakrpvwiqwnm16ckdwp2rv18k") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.11.2 (c (n "async-graphql") (v "2.11.2") (d (list (d (n "async-graphql-derive") (r "=2.11.2") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.11.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.11.2") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "11gdbg335qbh4vkawbm9w99ipvaya3bvhlzplda9ixl8850vacqk") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-2.11.3 (c (n "async-graphql") (v "2.11.3") (d (list (d (n "async-graphql-derive") (r "=2.11.3") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=2.11.3") (d #t) (k 0)) (d (n "async-graphql-value") (r "=2.11.3") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1q1fw6f2z3mgxvbsxkrwmgznlrgsaa8x9k6158bgh9s4mgg9wslf") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number" "num-traits") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.0-alpha.3 (c (n "async-graphql") (v "3.0.0-alpha.3") (d (list (d (n "async-graphql-derive") (r "=3.0.0-alpha.3") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=3.0.0-alpha.3") (d #t) (k 0)) (d (n "async-graphql-value") (r "=3.0.0-alpha.3") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "01xzzw2c3rfv7kds26dni38slk773l94vbqjdmn12aln401l4yf7") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.0 (c (n "async-graphql") (v "3.0.0") (d (list (d (n "async-graphql-derive") (r "=3.0.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=3.0.0") (d #t) (k 0)) (d (n "async-graphql-value") (r "=3.0.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0m1rp7r2bkyslkp9qqqd7f9hd5hbx2dz5lsadiqaknp3iz37r7gl") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.1 (c (n "async-graphql") (v "3.0.1") (d (list (d (n "async-graphql-derive") (r "=3.0.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=3.0.1") (d #t) (k 0)) (d (n "async-graphql-value") (r "=3.0.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1psq5mfw1sj23cxsaasi04dwll5imggqbjvzi74rvgv22gvzca5l") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.2 (c (n "async-graphql") (v "3.0.2") (d (list (d (n "async-graphql-derive") (r "=3.0.2") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=3.0.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "=3.0.2") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "11vzkg8w8z717iav9jw4h7jag7y5abmhfp4gfwcsnwlz53b686yg") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.3 (c (n "async-graphql") (v "3.0.3") (d (list (d (n "async-graphql-derive") (r "=3.0.3") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=3.0.3") (d #t) (k 0)) (d (n "async-graphql-value") (r "=3.0.3") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1xq928m39z440l72qdpn5anjsylj58qqidzc8rgnq003254dsc1n") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.4 (c (n "async-graphql") (v "3.0.4") (d (list (d (n "async-graphql-derive") (r "=3.0.4") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=3.0.4") (d #t) (k 0)) (d (n "async-graphql-value") (r "=3.0.4") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "04rri89gqjgyqp00j0qi6fl45wx5mrlzx9vl1b75c2mkfiq1g50y") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.5 (c (n "async-graphql") (v "3.0.5") (d (list (d (n "async-graphql-derive") (r "=3.0.5") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=3.0.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "=3.0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0awmvr4mq9kgds05k0x0knbrjkivk1my302321mf32j7jsr03n5z") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.6 (c (n "async-graphql") (v "3.0.6") (d (list (d (n "async-graphql-derive") (r "=3.0.6") (d #t) (k 0)) (d (n "async-graphql-parser") (r "=3.0.6") (d #t) (k 0)) (d (n "async-graphql-value") (r "=3.0.6") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0bpf37nbjipfqrwf9r42laj7nx6rhy108f2b7xc4lfqk8jdi5sr8") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.7 (c (n "async-graphql") (v "3.0.7") (d (list (d (n "async-graphql-derive") (r "^3.0.7") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.7") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.7") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1nzwmd0vwxhmyizk18agczwmivw9wq925cv6wk72a74b7hh4y95z") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.8 (c (n "async-graphql") (v "3.0.8") (d (list (d (n "async-graphql-derive") (r "^3.0.7") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.7") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.7") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "12b8bmh5ih6qvzbh0zfvwlwzm73l6rsf3bbiaa0m1blnhspff67g") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.9 (c (n "async-graphql") (v "3.0.9") (d (list (d (n "async-graphql-derive") (r "^3.0.7") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.7") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.7") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0cm4cf94yqibhqv7k2z3wfk03rsi7nm60mw0cim11ysdqk9mlay8") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.10 (c (n "async-graphql") (v "3.0.10") (d (list (d (n "async-graphql-derive") (r "^3.0.7") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.7") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.7") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "08q427c3lpb6paz3d9kk35gqnc8kxrzgrn2cwc0b117h9bdmf38q") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.11 (c (n "async-graphql") (v "3.0.11") (d (list (d (n "async-graphql-derive") (r "^3.0.7") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.7") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.7") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1cgj7msrjkzzc5qsp1byq9y3ci0bjjjhgwm4hky5i32bq2i3w2h3") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.12 (c (n "async-graphql") (v "3.0.12") (d (list (d (n "async-graphql-derive") (r "^3.0.7") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.7") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.7") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0jxcgn371sp6l4i94gwmh4p4h9lib32vzjxgzlq34giqdxl5nbh6") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.13 (c (n "async-graphql") (v "3.0.13") (d (list (d (n "async-graphql-derive") (r "^3.0.13") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.13") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.13") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.13") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0naj07vxz9hrrsyhqghscnqfgfdz937dq45dh5980fk1af4gprs4") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.14 (c (n "async-graphql") (v "3.0.14") (d (list (d (n "async-graphql-derive") (r "^3.0.13") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.13") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.13") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.18") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "131rvyk94c4fxlj0cfsps885g3sscvvsxafx9rk5ay5lrkklx6j3") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.15 (c (n "async-graphql") (v "3.0.15") (d (list (d (n "async-graphql-derive") (r "^3.0.13") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.13") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.13") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.18") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "07hm752k2mvgli7418k1yyx1blwlvshf0dnzlv96fb3lsj3xlpgd") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.16 (c (n "async-graphql") (v "3.0.16") (d (list (d (n "async-graphql-derive") (r "^3.0.13") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.13") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.13") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1pdpn6qsnvqhq02wifg45i79lk4xa9jbqw6rgk5a1my6vqk8nd66") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.17 (c (n "async-graphql") (v "3.0.17") (d (list (d (n "async-graphql-derive") (r "^3.0.13") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.13") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.13") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0qjq9i4cjb0giwsw9rpqdl37kk8i1xdn1p4xi4a2m2m1vr09gfzl") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.18 (c (n "async-graphql") (v "3.0.18") (d (list (d (n "async-graphql-derive") (r "^3.0.18") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.18") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.18") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0dyvlsg6xz8iv80lmw0vyg4qyh1wqlxgv9kswj2gldgz517qqsib") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.19 (c (n "async-graphql") (v "3.0.19") (d (list (d (n "async-graphql-derive") (r "^3.0.19") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.19") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.19") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1rdvnxgvm58bkb2wivqmbylflnad25jpykr76j2c02bwznrlr53i") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.20 (c (n "async-graphql") (v "3.0.20") (d (list (d (n "async-graphql-derive") (r "^3.0.20") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.20") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.20") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0jb8s6v44f0p2kvsa5a3f4jpwni273cs016jrwsbxgmlw5s2idxp") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.21 (c (n "async-graphql") (v "3.0.21") (d (list (d (n "async-graphql-derive") (r "^3.0.21") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.21") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.21") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0j5skic78zwn2h056lzs240zrpc3h8bk9vcav4hkkrpgci2ia9y8") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.22 (c (n "async-graphql") (v "3.0.22") (d (list (d (n "async-graphql-derive") (r "^3.0.22") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.22") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.22") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "03z4fmfm6gbkabw8wzx04xgzlr45jcg6psbsg4341gl45p4370dz") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.23 (c (n "async-graphql") (v "3.0.23") (d (list (d (n "async-graphql-derive") (r "^3.0.23") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.23") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.23") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0xfdc0zvh7xjsgb32cc9m12n9l6c4h8ji530qs41hv55d1wzjks4") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.24 (c (n "async-graphql") (v "3.0.24") (d (list (d (n "async-graphql-derive") (r "^3.0.24") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.24") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.24") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0nplvzg3mmj131l339k257zkm24j2q4ab8m16hvps4y78qf93474") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.25 (c (n "async-graphql") (v "3.0.25") (d (list (d (n "async-graphql-derive") (r "^3.0.25") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.25") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.25") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0crwm9yq1sbb9i1cz5swx8xh5g2wh8ih7rgwh59w485nxb2jfnw6") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.26 (c (n "async-graphql") (v "3.0.26") (d (list (d (n "async-graphql-derive") (r "^3.0.26") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.26") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.26") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1h0bmkljbn3l0jmrjkgiz5irp05sypyjcn0pl8hv6rnmciy3zgqv") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.27 (c (n "async-graphql") (v "3.0.27") (d (list (d (n "async-graphql-derive") (r "^3.0.27") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.27") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.27") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1fp5dks91s6rsw9m0sn63qv6h16l2n3riq3isnjakrx9a37946yf") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.28 (c (n "async-graphql") (v "3.0.28") (d (list (d (n "async-graphql-derive") (r "^3.0.28") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.28") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.28") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0sr06k8xv2c2b00azbqz06dmhwvk197cblsrmdsz3avrhqcallnz") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.29 (c (n "async-graphql") (v "3.0.29") (d (list (d (n "async-graphql-derive") (r "^3.0.29") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.29") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.29") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "06y3rdw4082y7mnyizlh8q9nzdsvd8wjb0s1fllv854crz5y59px") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.30 (c (n "async-graphql") (v "3.0.30") (d (list (d (n "async-graphql-derive") (r "^3.0.30") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.30") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.30") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0rh40ax3bl0wx4qq83ykhz0407r35k5z9wldf8qhgbri7y1f0kci") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.31 (c (n "async-graphql") (v "3.0.31") (d (list (d (n "async-graphql-derive") (r "^3.0.31") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.31") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.31") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.16.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1r4kigyrwc7svginvhmqprdnvd0xl4vx8ijf60qjm8w90fk99afi") (f (quote (("unstable_oneof" "async-graphql-derive/unstable_oneof") ("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.33 (c (n "async-graphql") (v "3.0.33") (d (list (d (n "async-graphql-derive") (r "^3.0.33") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.33") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.33") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "069qw7wv8zbfdm72lciv7llmv794nq5rpzz08jw8wj40nrpdfqq9") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.34 (c (n "async-graphql") (v "3.0.34") (d (list (d (n "async-graphql-derive") (r "^3.0.34") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.34") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.34") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1w98snqschdmawp9pmay2zcra859lrin43c5l4183j4awpam8i1z") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.35 (c (n "async-graphql") (v "3.0.35") (d (list (d (n "async-graphql-derive") (r "^3.0.35") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.35") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.35") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1rngz2w05y80qw8jwmzmkv611lisbszphmw66k28jk8843a19ccj") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.36 (c (n "async-graphql") (v "3.0.36") (d (list (d (n "async-graphql-derive") (r "^3.0.36") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.36") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.36") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0jlmgzp54p9b4m75f9illlpnxfh63qn0m2b2wcc3wk7bcrvdxrbq") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.37 (c (n "async-graphql") (v "3.0.37") (d (list (d (n "async-graphql-derive") (r "^3.0.37") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.37") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.37") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1xkgnimsy71bi8g0a4nr267rfxlq7lvwd8k7pj4669c5isjjdzqz") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-3.0.38 (c (n "async-graphql") (v "3.0.38") (d (list (d (n "async-graphql-derive") (r "^3.0.38") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^3.0.38") (d #t) (k 0)) (d (n "async-graphql-value") (r "^3.0.38") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0vrp5hw6fasgkfva1n8slwncx41a8rc9yzhgpx4xda3rkhz141i1") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-4.0.0-alpha.0 (c (n "async-graphql") (v "4.0.0-alpha.0") (d (list (d (n "async-graphql-derive") (r "^4.0.0-alpha.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^4.0.0-alpha.0") (d #t) (k 0)) (d (n "async-graphql-value") (r "^4.0.0-alpha.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0yky92fd5px1ix2ywqr2hkqp84sadq14xk7v7pcfdv35zn66wdc8") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-4.0.0-alpha.1 (c (n "async-graphql") (v "4.0.0-alpha.1") (d (list (d (n "async-graphql-derive") (r "^4.0.0-alpha.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^4.0.0-alpha.1") (d #t) (k 0)) (d (n "async-graphql-value") (r "^4.0.0-alpha.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0b7i9m58713nrqna96sswq3v16v8ycyc4r59yl5xrllprc9p0f2h") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-4.0.0-alpha.2 (c (n "async-graphql") (v "4.0.0-alpha.2") (d (list (d (n "async-graphql-derive") (r "^4.0.0-alpha.2") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^4.0.0-alpha.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "^4.0.0-alpha.2") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1fnxdrhzm5m3941x6b6xkkn88zgv9dhs4sp002s9ya97fnyxf668") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-4.0.0 (c (n "async-graphql") (v "4.0.0") (d (list (d (n "async-graphql-derive") (r "^4.0.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^4.0.0") (d #t) (k 0)) (d (n "async-graphql-value") (r "^4.0.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1nwr67fi3k4f9zzms8yz4gdsl94crbn2vc1m6q7xdiq0n387slmm") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-4.0.1 (c (n "async-graphql") (v "4.0.1") (d (list (d (n "async-graphql-derive") (r "^4.0.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^4.0.1") (d #t) (k 0)) (d (n "async-graphql-value") (r "^4.0.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "12c6am3zx46555v9bmk9wjypkkgwbq6jf2jkw5pigg73cjm51g0r") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-4.0.2 (c (n "async-graphql") (v "4.0.2") (d (list (d (n "async-graphql-derive") (r "^4.0.2") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^4.0.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "^4.0.2") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0k94i15bdnv08q9v1vl9xvl8zn1dl203lgp6psdvx405k5m014fm") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("default") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-4.0.3 (c (n "async-graphql") (v "4.0.3") (d (list (d (n "async-graphql-derive") (r "^4.0.3") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^4.0.3") (d #t) (k 0)) (d (n "async-graphql-value") (r "^4.0.3") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0i12hhyk51mak4rm34vi8chlsyqr7s2ipkp7ms4cblalf82vchxf") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("default" "email-validator") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-4.0.4 (c (n "async-graphql") (v "4.0.4") (d (list (d (n "async-graphql-derive") (r "^4.0.4") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^4.0.4") (d #t) (k 0)) (d (n "async-graphql-value") (r "^4.0.4") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "02sjqnsxjmjg7lnaq65nss60qkng2ksabj3gbkmdkdhjd9cymzzz") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("default" "email-validator") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-4.0.5 (c (n "async-graphql") (v "4.0.5") (d (list (d (n "async-graphql-derive") (r "^4.0.5") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^4.0.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "^4.0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "05mxyfw8nk43zm3mlz7lfvk59711gnpwiij3ck0kbyzpb1jfyywx") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("default" "email-validator") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-4.0.6 (c (n "async-graphql") (v "4.0.6") (d (list (d (n "async-graphql-derive") (r "^4.0.6") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^4.0.6") (d #t) (k 0)) (d (n "async-graphql-value") (r "^4.0.6") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "16377z6wi4n8wvp6z1a0wkf7dn3hws1hswhvz128xdj8ppnxkv44") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("default" "email-validator") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-4.0.7 (c (n "async-graphql") (v "4.0.7") (d (list (d (n "async-graphql-derive") (r "^4.0.7") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^4.0.7") (d #t) (k 0)) (d (n "async-graphql-value") (r "^4.0.7") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.25") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1c8nxdbsis5q2l5r9b7h54j60k0xgc4w5bf1lj0ddhq3m2bnrk4d") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("default" "email-validator") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-4.0.8 (c (n "async-graphql") (v "4.0.8") (d (list (d (n "async-graphql-derive") (r "^4.0.8") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^4.0.8") (d #t) (k 0)) (d (n "async-graphql-value") (r "^4.0.8") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1z4hzsh3syd3ad8r1ni4xdff01y4c0m04d7id2g0m8g40gbn5n29") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("default" "email-validator") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-4.0.9 (c (n "async-graphql") (v "4.0.9") (d (list (d (n "async-graphql-derive") (r "^4.0.9") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^4.0.9") (d #t) (k 0)) (d (n "async-graphql-value") (r "^4.0.9") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0phr7kx6m5jjxfzfxpl0dww64nz2rdpprnb20rzj9yzjnxj46qax") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("default" "email-validator") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-4.0.10 (c (n "async-graphql") (v "4.0.10") (d (list (d (n "async-graphql-derive") (r "^4.0.10") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^4.0.10") (d #t) (k 0)) (d (n "async-graphql-value") (r "^4.0.10") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1kdhwi5j9nxvcs7igkrqjxi52db2vijrsw81bqlnkl42g03p1xd0") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("default" "email-validator") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-4.0.11 (c (n "async-graphql") (v "4.0.11") (d (list (d (n "async-graphql-derive") (r "^4.0.11") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^4.0.11") (d #t) (k 0)) (d (n "async-graphql-value") (r "^4.0.11") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "12pxcvp5gfcazqpr70a4dfdnxhy5hk0lb92bc1phjfp5ijcjxc67") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("default" "email-validator") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-4.0.12 (c (n "async-graphql") (v "4.0.12") (d (list (d (n "async-graphql-derive") (r "^4.0.12") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^4.0.12") (d #t) (k 0)) (d (n "async-graphql-value") (r "^4.0.12") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0.0") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1j1nh7rixgmizyi745d3wf5myplh4qh8i1l845ywymy0bq3m8xq9") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("default" "email-validator") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-4.0.13 (c (n "async-graphql") (v "4.0.13") (d (list (d (n "async-graphql-derive") (r "^4.0.13") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^4.0.13") (d #t) (k 0)) (d (n "async-graphql-value") (r "^4.0.13") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1mlclb2k2k4qafv5crm31j8jk2r20gjwvhlr8mk6ix9m5pbsrd5p") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("default" "email-validator") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-4.0.14 (c (n "async-graphql") (v "4.0.14") (d (list (d (n "async-graphql-derive") (r "^4.0.14") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^4.0.14") (d #t) (k 0)) (d (n "async-graphql-value") (r "^4.0.14") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "12zv3j2xlci29zqylwygxmjidmyrrinwm804llqm482sphhcm0mg") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("default" "email-validator") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-4.0.15 (c (n "async-graphql") (v "4.0.15") (d (list (d (n "async-graphql-derive") (r "^4.0.15") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^4.0.15") (d #t) (k 0)) (d (n "async-graphql-value") (r "^4.0.15") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "18538fs1vahy9dyxscprs7nlkv8v0ixsip7ail71imcn3bq5xwhj") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("default" "email-validator") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-4.0.16 (c (n "async-graphql") (v "4.0.16") (d (list (d (n "async-graphql-derive") (r "^4.0.16") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^4.0.16") (d #t) (k 0)) (d (n "async-graphql-value") (r "^4.0.16") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "100z89y2hj6xjch8avjyld96khsa6613qyz4zxzdf4nlg0k55vfr") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("default" "email-validator") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-5.0.0-alpha.1 (c (n "async-graphql") (v "5.0.0-alpha.1") (d (list (d (n "async-graphql-derive") (r "^5.0.0-alpha.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^5.0.0-alpha.1") (d #t) (k 0)) (d (n "async-graphql-value") (r "^5.0.0-alpha.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1gjj4yjx0l3lafv7drsricw5ksm80hp9gy4y4kwplpkc2qgqax2d") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-5.0.0-alpha.2 (c (n "async-graphql") (v "5.0.0-alpha.2") (d (list (d (n "async-graphql-derive") (r "^5.0.0-alpha.2") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^5.0.0-alpha.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "^5.0.0-alpha.2") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1brx156f7fgg1s70818gbs7pnddad4mxpz1npzljfj9ay474ackb") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-5.0.0-alpha.3 (c (n "async-graphql") (v "5.0.0-alpha.3") (d (list (d (n "async-graphql-derive") (r "^5.0.0-alpha.3") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^5.0.0-alpha.3") (d #t) (k 0)) (d (n "async-graphql-value") (r "^5.0.0-alpha.3") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1jwvlvm0n8lwa09fx43lif6vz6ycyppcl0x70df3gg59xr4cq8sk") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-5.0.0-alpha.4 (c (n "async-graphql") (v "5.0.0-alpha.4") (d (list (d (n "async-graphql-derive") (r "^5.0.0-alpha.4") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^5.0.0-alpha.4") (d #t) (k 0)) (d (n "async-graphql-value") (r "^5.0.0-alpha.4") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1zl3nn24j1vcrxv6dw30sx33cndwgzk3647qiyy2vxjb0jyv8mlg") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-5.0.0-alpha.5 (c (n "async-graphql") (v "5.0.0-alpha.5") (d (list (d (n "async-graphql-derive") (r "^5.0.0-alpha.5") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^5.0.0-alpha.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "^5.0.0-alpha.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "14cj5nxh45b0ginrk1n4q8imw1ir3krda43gfvmjwbj1y6k6wkfb") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-5.0.0 (c (n "async-graphql") (v "5.0.0") (d (list (d (n "async-graphql-derive") (r "^5.0.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^5.0.0") (d #t) (k 0)) (d (n "async-graphql-value") (r "^5.0.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0wqyi6z9pw9s393rw3zk7iv9clfrhdg9baqaw9lj79gsw79cpiah") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-5.0.1 (c (n "async-graphql") (v "5.0.1") (d (list (d (n "async-graphql-derive") (r "^5.0.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^5.0.1") (d #t) (k 0)) (d (n "async-graphql-value") (r "^5.0.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1zv28phqq10jxkjl4cx2s42c7zzn82sn1nl9sxhrrz8ybmfhw1pw") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-5.0.2 (c (n "async-graphql") (v "5.0.2") (d (list (d (n "async-graphql-derive") (r "^5.0.2") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^5.0.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "^5.0.2") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1nbi6l4vdxh5vc8cw5wy6fbpp9a1zs243d46ajsrqkdlck9wy1ah") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-5.0.3 (c (n "async-graphql") (v "5.0.3") (d (list (d (n "async-graphql-derive") (r "^5.0.3") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^5.0.3") (d #t) (k 0)) (d (n "async-graphql-value") (r "^5.0.3") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1bpffsgfyvvz3kl8h38mbbxlsmc9jr601k0bx5hmp7h8xzzr5fs2") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-5.0.4 (c (n "async-graphql") (v "5.0.4") (d (list (d (n "async-graphql-derive") (r "^5.0.4") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^5.0.4") (d #t) (k 0)) (d (n "async-graphql-value") (r "^5.0.4") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1fml1ccqfc80cia1ay1qncwap59z0di9akz0fg54avw9vhpmjmkd") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-5.0.5 (c (n "async-graphql") (v "5.0.5") (d (list (d (n "async-graphql-derive") (r "^5.0.5") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^5.0.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "^5.0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "handlebars") (r "^4.3.6") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0hd472716mwn1j03j1kdl2gf1pdk2dix213lx53v0xd8y6diyz3c") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("password-strength-validator" "zxcvbn") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-5.0.6 (c (n "async-graphql") (v "5.0.6") (d (list (d (n "async-graphql-derive") (r "^5.0.6") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^5.0.6") (d #t) (k 0)) (d (n "async-graphql-value") (r "^5.0.6") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (d #t) (k 0)) (d (n "handlebars") (r "^4.3.6") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "iso8601-duration") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0n4j3prm1ydkhb5g1q8hgqlqf82a7sxnqw4js2pszdzvsv4jfbb9") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("playground") ("password-strength-validator" "zxcvbn") ("graphiql" "handlebars") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile" "playground" "graphiql") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601-duration") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-5.0.7 (c (n "async-graphql") (v "5.0.7") (d (list (d (n "async-graphql-derive") (r "^5.0.7") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^5.0.7") (d #t) (k 0)) (d (n "async-graphql-value") (r "^5.0.7") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "handlebars") (r "^4.3.6") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "iso8601") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "069zp50sc0m1i7qkrr6k5v7ncd0vibl5s7j6fpc4afshw8ixc3kg") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("playground") ("password-strength-validator" "zxcvbn") ("graphiql" "handlebars") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile" "playground" "graphiql") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-5.0.8 (c (n "async-graphql") (v "5.0.8") (d (list (d (n "async-graphql-derive") (r "^5.0.8") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^5.0.8") (d #t) (k 0)) (d (n "async-graphql-value") (r "^5.0.8") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "handlebars") (r "^4.3.6") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "iso8601") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0zrdm1kb23762wp6yplwblhb1g7w24mpnm18cfyksjsi07xrmq3a") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("playground") ("password-strength-validator" "zxcvbn") ("graphiql" "handlebars") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile" "playground" "graphiql") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-5.0.9 (c (n "async-graphql") (v "5.0.9") (d (list (d (n "async-graphql-derive") (r "^5.0.9") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^5.0.9") (d #t) (k 0)) (d (n "async-graphql-value") (r "^5.0.9") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "handlebars") (r "^4.3.6") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "iso8601") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "196z41kx7iw3avp9kmwmd5pbxby553jjbqswc70qm0jbdj9j6i1n") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("playground") ("password-strength-validator" "zxcvbn") ("graphiql" "handlebars") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile" "playground" "graphiql") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-5.0.10 (c (n "async-graphql") (v "5.0.10") (d (list (d (n "async-graphql-derive") (r "^5.0.10") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^5.0.10") (d #t) (k 0)) (d (n "async-graphql-value") (r "^5.0.10") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "handlebars") (r "^4.3.6") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "iso8601") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0zzdbhg63pnsd43gvl66qqbkbhwvd1f1gkxi3vz31vi3pvwzhpmk") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("playground") ("password-strength-validator" "zxcvbn") ("graphiql" "handlebars") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile" "playground" "graphiql") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-6.0.0 (c (n "async-graphql") (v "6.0.0") (d (list (d (n "async-graphql-derive") (r "^6.0.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^6.0.0") (d #t) (k 0)) (d (n "async-graphql-value") (r "^6.0.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "handlebars") (r "^4.3.6") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "iso8601") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0b23hvz4mn1x87by1mz018b0a5b5d4i5118nqhq5jchyazpmc7qd") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("playground") ("password-strength-validator" "zxcvbn") ("graphiql" "handlebars") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile" "playground" "graphiql") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-6.0.1 (c (n "async-graphql") (v "6.0.1") (d (list (d (n "async-graphql-derive") (r "^6.0.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^6.0.1") (d #t) (k 0)) (d (n "async-graphql-value") (r "^6.0.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "handlebars") (r "^4.3.6") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "iso8601") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0s9bv89lick4hkafk6lzhzf640m2xmzrqsvrldkk5giq18ah1vqd") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("playground") ("password-strength-validator" "zxcvbn") ("graphiql" "handlebars") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile" "playground" "graphiql") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-6.0.3 (c (n "async-graphql") (v "6.0.3") (d (list (d (n "async-graphql-derive") (r "^6.0.3") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^6.0.3") (d #t) (k 0)) (d (n "async-graphql-value") (r "^6.0.3") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("io" "sink"))) (k 0)) (d (n "handlebars") (r "^4.3.6") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "iso8601") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1948i5gy1yd6q31hhb0fj0bi481m0kwl4nlnsdsbp2mnbxr0201c") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("playground") ("password-strength-validator" "zxcvbn") ("graphiql" "handlebars") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile" "playground" "graphiql") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-6.0.4 (c (n "async-graphql") (v "6.0.4") (d (list (d (n "async-graphql-derive") (r "^6.0.4") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^6.0.4") (d #t) (k 0)) (d (n "async-graphql-value") (r "^6.0.4") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("std" "io" "sink" "async-await" "async-await-macro"))) (k 0)) (d (n "handlebars") (r "^4.3.6") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "iso8601") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1ycj0a0qrm4hg71cchmvksmkvrm4z5j6k2vwaxb7bw88mrm8r86i") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("playground") ("password-strength-validator" "zxcvbn") ("graphiql" "handlebars") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile" "playground" "graphiql") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-6.0.5 (c (n "async-graphql") (v "6.0.5") (d (list (d (n "async-graphql-derive") (r "^6.0.5") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^6.0.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "^6.0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.6") (f (quote ("html_reports" "async_tokio"))) (d #t) (k 2)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("std" "io" "sink" "async-await" "async-await-macro"))) (k 0)) (d (n "handlebars") (r "^4.3.6") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "iso8601") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1naz1d1zicfj9q99lj43mdhwxaizcbpifscf8ybndd8qw2c17gmm") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("playground") ("password-strength-validator" "zxcvbn") ("graphiql" "handlebars") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile" "playground" "graphiql") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-6.0.6 (c (n "async-graphql") (v "6.0.6") (d (list (d (n "async-graphql-derive") (r "^6.0.6") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^6.0.6") (d #t) (k 0)) (d (n "async-graphql-value") (r "^6.0.6") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.6") (f (quote ("html_reports" "async_tokio"))) (d #t) (k 2)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("std" "io" "sink" "async-await" "async-await-macro"))) (k 0)) (d (n "handlebars") (r "^4.3.6") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "iso8601") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0cgw4qna91gh8s7clbak61jk5b3ji6b6228d4d1h4qqlc6c572bk") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("playground") ("password-strength-validator" "zxcvbn") ("graphiql" "handlebars") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile" "playground" "graphiql") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-6.0.7 (c (n "async-graphql") (v "6.0.7") (d (list (d (n "async-graphql-derive") (r "^6.0.7") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^6.0.7") (d #t) (k 0)) (d (n "async-graphql-value") (r "^6.0.7") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.6") (f (quote ("html_reports" "async_tokio"))) (d #t) (k 2)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("std" "io" "sink" "async-await" "async-await-macro"))) (k 0)) (d (n "handlebars") (r "^4.3.6") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "iso8601") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0c7y8f5nvfl5qihf2s92yin1i8g3lik7b7p9bphl15n5a6sv1p8s") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("playground") ("password-strength-validator" "zxcvbn") ("graphiql" "handlebars") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile" "playground" "graphiql") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-6.0.9 (c (n "async-graphql") (v "6.0.9") (d (list (d (n "async-graphql-derive") (r "^6.0.9") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^6.0.9") (d #t) (k 0)) (d (n "async-graphql-value") (r "^6.0.9") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.6") (f (quote ("html_reports" "async_tokio"))) (d #t) (k 2)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("std" "io" "sink" "async-await" "async-await-macro"))) (k 0)) (d (n "handlebars") (r "^4.3.6") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "iso8601") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "142g0zw36l67jd4ldj2xwvy0f29v0ds54ypscjlg562azyki6w8i") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("playground") ("password-strength-validator" "zxcvbn") ("graphiql" "handlebars") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile" "playground" "graphiql") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-6.0.10 (c (n "async-graphql") (v "6.0.10") (d (list (d (n "async-graphql-derive") (r "^6.0.10") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^6.0.10") (d #t) (k 0)) (d (n "async-graphql-value") (r "^6.0.10") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.6") (f (quote ("html_reports" "async_tokio"))) (d #t) (k 2)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("std" "io" "sink" "async-await" "async-await-macro"))) (k 0)) (d (n "handlebars") (r "^4.3.6") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "iso8601") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0wlgm6ixa47qgcrdc5gf2dsiaxyl3b7r1pm6zjb6fl16l8lc4rd6") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("playground") ("password-strength-validator" "zxcvbn") ("graphiql" "handlebars") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile" "playground" "graphiql") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-6.0.11 (c (n "async-graphql") (v "6.0.11") (d (list (d (n "async-graphql-derive") (r "^6.0.11") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^6.0.11") (d #t) (k 0)) (d (n "async-graphql-value") (r "^6.0.11") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.6") (f (quote ("html_reports" "async_tokio"))) (d #t) (k 2)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("std" "io" "sink" "async-await" "async-await-macro"))) (k 0)) (d (n "handlebars") (r "^4.3.6") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "iso8601") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^2.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "uuid08") (r "^0.8") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0) (p "uuid")) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "132a942rljsq8s8rgz6h3wlyp02s6bfg4spm3ckxnvvfgmc5v2i9") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("playground") ("password-strength-validator" "zxcvbn") ("graphiql" "handlebars") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile" "playground" "graphiql") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-7.0.0 (c (n "async-graphql") (v "7.0.0") (d (list (d (n "async-graphql-derive") (r "^7.0.0") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^7.0.0") (d #t) (k 0)) (d (n "async-graphql-value") (r "^7.0.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.6") (f (quote ("html_reports" "async_tokio"))) (d #t) (k 2)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("std" "io" "sink" "async-await" "async-await-macro"))) (k 0)) (d (n "handlebars") (r "^4.3.6") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0) (p "http")) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "iso8601") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^3.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1xicp25jqigpfp2bhakv0jaah104c97gcs55441jvzak8q191nca") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("playground") ("password-strength-validator" "zxcvbn") ("graphiql" "handlebars") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile" "playground" "graphiql") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-7.0.1 (c (n "async-graphql") (v "7.0.1") (d (list (d (n "async-graphql-derive") (r "^7.0.1") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^7.0.1") (d #t) (k 0)) (d (n "async-graphql-value") (r "^7.0.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.6") (f (quote ("html_reports" "async_tokio"))) (d #t) (k 2)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("std" "io" "sink" "async-await" "async-await-macro"))) (k 0)) (d (n "handlebars") (r "^4.3.6") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0) (p "http")) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "iso8601") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^3.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions_next") (r "^1.1.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "010rby5yi08y0pcsa1qbfdsa7mpk4abcfp03gfsg6gv8gzwjcsdi") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("playground") ("password-strength-validator" "zxcvbn") ("graphiql" "handlebars") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile" "playground" "graphiql") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-7.0.2 (c (n "async-graphql") (v "7.0.2") (d (list (d (n "async-graphql-derive") (r "^7.0.2") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^7.0.2") (d #t) (k 0)) (d (n "async-graphql-value") (r "^7.0.2") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bigdecimal") (r ">=0.3.0, <0.5.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.6") (f (quote ("html_reports" "async_tokio"))) (d #t) (k 2)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("std" "io" "sink" "async-await" "async-await-macro"))) (k 0)) (d (n "handlebars") (r "^4.3.6") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0) (p "http")) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "iso8601") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^3.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions_next") (r "^1.1.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "0rq50rpv6b70x84n0qlpnh3klz08784ngd0xsbh37n5ymlsrma0b") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("playground") ("password-strength-validator" "zxcvbn") ("graphiql" "handlebars") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile" "playground" "graphiql") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-7.0.3 (c (n "async-graphql") (v "7.0.3") (d (list (d (n "async-graphql-derive") (r "^7.0.3") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^7.0.3") (d #t) (k 0)) (d (n "async-graphql-value") (r "^7.0.3") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bigdecimal") (r ">=0.3.0, <0.5.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.6") (f (quote ("html_reports" "async_tokio"))) (d #t) (k 2)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.13") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (f (quote ("std" "io" "sink" "async-await" "async-await-macro"))) (k 0)) (d (n "handlebars") (r "^4.3.6") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0) (p "http")) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "iso8601") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.15") (d #t) (k 0)) (d (n "multer") (r "^3.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.6") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 2)) (d (n "smol_str") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "static_assertions_next") (r "^1.1.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.4.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.35") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.1.2") (o #t) (d #t) (k 0)))) (h "1af6n5q1xigvn18hxiq4k19d369zqwxinagzpvvzsnpzbdys47r6") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("playground") ("password-strength-validator" "zxcvbn") ("graphiql" "handlebars") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile" "playground" "graphiql") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

(define-public crate-async-graphql-7.0.5 (c (n "async-graphql") (v "7.0.5") (d (list (d (n "async-graphql-derive") (r "^7.0.5") (d #t) (k 0)) (d (n "async-graphql-parser") (r "^7.0.5") (d #t) (k 0)) (d (n "async-graphql-value") (r "^7.0.5") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.79") (d #t) (k 0)) (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "bigdecimal") (r ">=0.3.0, <0.5.0") (o #t) (d #t) (k 0)) (d (n "blocking") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.9.0") (f (quote ("chrono-0_4" "uuid-1"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.6.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.37") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports" "async_tokio"))) (d #t) (k 2)) (d (n "fast_chemail") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.30") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.30") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.30") (f (quote ("std" "io" "sink" "async-await" "async-await-macro"))) (k 0)) (d (n "handlebars") (r "^5.1.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^1.1.0") (d #t) (k 0) (p "http")) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "iso8601") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "multer") (r "^3.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.14") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.35.0") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4.9") (d #t) (k 2)) (d (n "smol_str") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "static_assertions_next") (r "^1.1.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("parsing" "formatting" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("macros" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("std-future" "futures-03"))) (o #t) (d #t) (k 0)) (d (n "tracinglib") (r "^0.1.40") (o #t) (d #t) (k 0) (p "tracing")) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)) (d (n "zxcvbn") (r "^2.2.2") (o #t) (d #t) (k 0)))) (h "1kmx49f3vpyla9zbwn2njglslz6dh482df80220fx75yr0yqx06h") (f (quote (("unblock" "blocking") ("tracing" "tracinglib" "tracing-futures") ("tokio-sync" "tokio") ("string_number") ("playground") ("password-strength-validator" "zxcvbn") ("graphiql" "handlebars") ("email-validator" "fast_chemail") ("dynamic-schema") ("default" "email-validator" "tempfile" "playground" "graphiql") ("decimal" "rust_decimal") ("dataloader" "futures-timer" "futures-channel" "lru") ("chrono-duration" "chrono" "iso8601") ("cbor" "serde_cbor") ("apollo_tracing" "chrono") ("apollo_persisted_queries" "lru" "sha2"))))))

