(define-module (crates-io as yn async-codec-lite) #:use-module (crates-io))

(define-public crate-async-codec-lite-0.0.0 (c (n "async-codec-lite") (v "0.0.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-io") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.11") (d #t) (k 2)) (d (n "futures-sink") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("io" "sink"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memchr") (r "^2.3") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "01bz1palgvc86kl05w902apw2iy6k3sn6cg14fn841apv4vd8alk") (f (quote (("lines" "memchr") ("json" "serde" "serde_json") ("default") ("cbor" "serde" "serde_cbor"))))))

(define-public crate-async-codec-lite-0.0.1 (c (n "async-codec-lite") (v "0.0.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-io") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.11") (d #t) (k 2)) (d (n "futures-sink") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("io" "sink"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memchr") (r "^2.3") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0lqdb1hlf2g35ljfywxb4bm2j9s4mfkhm906klilxc3xpnh04i5y") (f (quote (("lines" "memchr") ("json" "serde" "serde_json") ("default") ("cbor" "serde" "serde_cbor"))))))

(define-public crate-async-codec-lite-0.0.2 (c (n "async-codec-lite") (v "0.0.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-io") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.11") (d #t) (k 2)) (d (n "futures-sink") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("io" "sink"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memchr") (r "^2.3") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "18v08w0mwv2gd1in1gjd2lm2bi18x3d2ac9mdcvgzn3j747c69r5") (f (quote (("lines" "memchr") ("json" "serde" "serde_json") ("default") ("cbor" "serde" "serde_cbor"))))))

