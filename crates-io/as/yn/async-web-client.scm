(define-module (crates-io as yn async-web-client) #:use-module (crates-io))

(define-public crate-async-web-client-0.1.0 (c (n "async-web-client") (v "0.1.0") (h "1q8v17h4li98da5lwqs9jq9ishiwp6c4absjpwqn6bvv3vbgsq8k")))

(define-public crate-async-web-client-0.2.0 (c (n "async-web-client") (v "0.2.0") (d (list (d (n "async-http-codec") (r "^0.5.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-ws") (r "^0.3.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "console_log") (r "^1") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-rustls") (r "^0.24.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gloo-net") (r "^0.2.6") (f (quote ("http"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "smol") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-logger") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.4") (f (quote ("ReadableStream" "ReadableStreamDefaultReader"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.25.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0gq8kqyc4wy6q0rwqywmp08np55i7mcyd86j359xw6afjh2hs1rq")))

(define-public crate-async-web-client-0.2.1 (c (n "async-web-client") (v "0.2.1") (d (list (d (n "async-http-codec") (r "^0.5.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-ws") (r "^0.3.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "console_log") (r "^1") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-rustls") (r "^0.24.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gloo-net") (r "^0.2.6") (f (quote ("http"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rustls") (r "^0.21.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smol") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-logger") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.4") (f (quote ("ReadableStream" "ReadableStreamDefaultReader"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.25.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0v6c8ys663y0ybrhiqq8fxy5yjpqwyawvhf17gpbp5fjz59li43x")))

(define-public crate-async-web-client-0.2.2 (c (n "async-web-client") (v "0.2.2") (d (list (d (n "async-http-codec") (r "^0.5.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-ws") (r "^0.3.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "console_log") (r "^1") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-rustls") (r "^0.24.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gloo-net") (r "^0.2.6") (f (quote ("http"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rustls") (r "^0.21.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smol") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-logger") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.4") (f (quote ("ReadableStream" "ReadableStreamDefaultReader"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.25.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "05m6glh617ibcanv3kpzf4s7m8k89yvdr7dxlmdsq02bmwawznwj")))

(define-public crate-async-web-client-0.2.3 (c (n "async-web-client") (v "0.2.3") (d (list (d (n "async-http-codec") (r "^0.5.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-ws") (r "^0.3.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "console_log") (r "^1") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-rustls") (r "^0.24.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gloo-net") (r "^0.2.6") (f (quote ("http"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rustls") (r "^0.21.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smol") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-logger") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.4") (f (quote ("ReadableStream" "ReadableStreamDefaultReader"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.25.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0qa4372h0v19hlpp400ikvnzfv3zfxpwyb4fgfhfsai84zp1k4nj")))

(define-public crate-async-web-client-0.2.5 (c (n "async-web-client") (v "0.2.5") (d (list (d (n "async-http-codec") (r "^0.5.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-ws") (r "^0.3.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "console_log") (r "^1") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-rustls") (r "^0.24.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gloo-net") (r "^0.2.6") (f (quote ("http"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rustls") (r "^0.21.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smol") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-logger") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.4") (f (quote ("ReadableStream" "ReadableStreamDefaultReader"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.25.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "156ljx2xbfczffyn3q7cq489ycgral4arv9m346k8rzk9gwcj7p0")))

(define-public crate-async-web-client-0.2.6 (c (n "async-web-client") (v "0.2.6") (d (list (d (n "async-http-codec") (r "^0.5.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-ws") (r "^0.3.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "console_log") (r "^1") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-rustls") (r "^0.24.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gloo-net") (r "^0.2.6") (f (quote ("http"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rustls") (r "^0.21.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smol") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-logger") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.4") (f (quote ("ReadableStream" "ReadableStreamDefaultReader"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.25.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0nnhgx4q4ccjbhjdiw7f1bqzb6c7z1cwqjmz56yyb6chxq1mbkyc")))

(define-public crate-async-web-client-0.2.7 (c (n "async-web-client") (v "0.2.7") (d (list (d (n "async-http-codec") (r "^0.5.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-ws") (r "^0.3.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "console_log") (r "^1") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-rustls") (r "^0.24.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gloo-net") (r "^0.2.6") (f (quote ("http"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rustls") (r "^0.21.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smol") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-logger") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.4") (f (quote ("ReadableStream" "ReadableStreamDefaultReader"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.25.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0zivxqihkzch5h6883d16gpcwzmi10iylrr4i2nh0va26s63cf1q")))

(define-public crate-async-web-client-0.3.0 (c (n "async-web-client") (v "0.3.0") (d (list (d (n "async-http-codec") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-ws") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "console_log") (r "^1") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-rustls") (r "^0.24.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gloo-net") (r "^0.2.6") (f (quote ("http"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rustls") (r "^0.21.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smol") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-logger") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.4") (f (quote ("ReadableStream" "ReadableStreamDefaultReader"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.25.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "00yhbs644r76k1hai81gp62gw6whgan8q2sja105ryclnszsjqjv")))

(define-public crate-async-web-client-0.4.0 (c (n "async-web-client") (v "0.4.0") (d (list (d (n "async-http-codec") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-ws") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "console_log") (r "^1") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-rustls") (r "^0.25.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gloo-net") (r "^0.2.6") (f (quote ("http"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rustls") (r "^0.22") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pki-types") (r "^1.0.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "smol") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-logger") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.4") (f (quote ("ReadableStream" "ReadableStreamDefaultReader"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.25.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0imzn2w0wqkgky8r6vhxzna8bzcnhn6xd8nkc8n3mvi24f4fl1af")))

(define-public crate-async-web-client-0.5.0 (c (n "async-web-client") (v "0.5.0") (d (list (d (n "async-http-codec") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^1.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-ws") (r "^0.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "console_log") (r "^1") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-rustls") (r "^0.25.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gloo-net") (r "^0.2.6") (f (quote ("http"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rustls") (r "^0.22") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-pki-types") (r "^1.0.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "smol") (r "^1.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-logger") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.4") (f (quote ("ReadableStream" "ReadableStreamDefaultReader"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.25.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1rm7hdjrjb59h1v0h9pf8v0xxlpy4jsnybvgl7k8s54b3zpb7l1y") (f (quote (("websocket" "async-ws"))))))

(define-public crate-async-web-client-0.5.1 (c (n "async-web-client") (v "0.5.1") (d (list (d (n "async-http-codec") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-net") (r "^2.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-ws") (r "^0.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "console_log") (r "^1") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-rustls") (r "^0.25.1") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gloo-net") (r "^0.2.6") (f (quote ("http"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rustls-pki-types") (r "^1.0.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "smol") (r "^2.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-logger") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.4") (f (quote ("ReadableStream" "ReadableStreamDefaultReader"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.26.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1kk0lfwc2mwwq31rgpjljyxwdwa1zgd1fgrxqd7j8qiryrwyy858") (f (quote (("websocket" "async-ws") ("ring" "futures-rustls/ring") ("default" "ring") ("aws-lc-rs" "futures-rustls/aws-lc-rs"))))))

(define-public crate-async-web-client-0.6.0 (c (n "async-web-client") (v "0.6.0") (d (list (d (n "async-http-codec") (r "^0.8.0") (d #t) (k 0)) (d (n "async-net") (r "^2.0.0") (d #t) (k 0)) (d (n "async-ws") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-rustls") (r "^0.26") (f (quote ("tls12"))) (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rustls-pki-types") (r "^1.0.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "smol") (r "^2.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "webpki-roots") (r "^0.26.0") (d #t) (k 0)))) (h "0nwddcvca7f5dan6dpkvq6v12xpyqznxhga4x78x97vnz6aqsi4p") (f (quote (("websocket" "async-ws") ("ring" "futures-rustls/ring") ("default" "aws-lc-rs") ("aws-lc-rs" "futures-rustls/aws-lc-rs"))))))

(define-public crate-async-web-client-0.6.1 (c (n "async-web-client") (v "0.6.1") (d (list (d (n "async-http-codec") (r "^0.8.0") (d #t) (k 0)) (d (n "async-net") (r "^2.0.0") (d #t) (k 0)) (d (n "async-ws") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-rustls") (r "^0.26") (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rustls-pki-types") (r "^1.0.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "smol") (r "^2.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "webpki-roots") (r "^0.26.0") (d #t) (k 0)))) (h "1kf847jlhrbzg93l3xvl73l6wsdpyv9m0lrxfhaqyhj3p1al0is6") (f (quote (("websocket" "async-ws") ("tls12" "futures-rustls/tls12") ("ring" "futures-rustls/ring") ("default" "aws-lc-rs" "tls12") ("aws-lc-rs" "futures-rustls/aws-lc-rs"))))))

(define-public crate-async-web-client-0.6.2 (c (n "async-web-client") (v "0.6.2") (d (list (d (n "async-http-codec") (r "^0.8.0") (d #t) (k 0)) (d (n "async-net") (r "^2.0.0") (d #t) (k 0)) (d (n "async-ws") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-rustls") (r "^0.26") (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rustls-pki-types") (r "^1.0.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "smol") (r "^2.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "webpki-roots") (r "^0.26.0") (d #t) (k 0)))) (h "0abd4fi1lhxrdkqi0b873yfh5vr8ymc1mhi8jrbrpkfkzas1yf1p") (f (quote (("websocket" "async-ws") ("tls12" "futures-rustls/tls12") ("ring" "futures-rustls/ring") ("default" "aws-lc-rs" "tls12") ("aws-lc-rs" "futures-rustls/aws-lc-rs"))))))

