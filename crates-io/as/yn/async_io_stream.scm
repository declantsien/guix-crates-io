(define-module (crates-io as yn async_io_stream) #:use-module (crates-io))

(define-public crate-async_io_stream-0.1.0 (c (n "async_io_stream") (v "0.1.0") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "flexi_logger") (r "^0.15") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-io") (r "^0.3") (d #t) (k 0)) (d (n "futures-sink") (r "^0.3") (d #t) (k 0)) (d (n "futures-task") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pharos") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "tokio") (r "^0.2") (o #t) (d #t) (k 0)))) (h "161iddf7li7gx6gwc3ykcabm22jz3m6nh4jagfhs4n0l0zr0bjph") (f (quote (("tokio_io" "tokio") ("map_pharos" "pharos"))))))

(define-public crate-async_io_stream-0.2.0-beta.1 (c (n "async_io_stream") (v "0.2.0-beta.1") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "flexi_logger") (r "^0.15") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-io") (r "^0.3") (d #t) (k 0)) (d (n "futures-sink") (r "^0.3") (d #t) (k 0)) (d (n "futures-task") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pharos") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "tokio") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0r3r85jq8pyvjwi1rnzh6xcjg6pr2x79ikkxfs3sxacnjiyv7mhz") (f (quote (("tokio_io" "tokio") ("map_pharos" "pharos"))))))

(define-public crate-async_io_stream-0.2.0 (c (n "async_io_stream") (v "0.2.0") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-io") (r "^0.3") (d #t) (k 0)) (d (n "futures-sink") (r "^0.3") (d #t) (k 0)) (d (n "futures-task") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pharos") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rustc_version") (r "^0.3") (d #t) (k 1)) (d (n "tokio") (r "^1") (o #t) (d #t) (k 0)))) (h "1z8sb897wid2j2ap5wlw5aqx51dr9z3kpxvwbwdy2r6jvmhcgkj6") (f (quote (("tokio_io" "tokio") ("map_pharos" "pharos"))))))

(define-public crate-async_io_stream-0.3.0 (c (n "async_io_stream") (v "0.3.0") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pharos") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rustc_version") (r "^0.3") (d #t) (k 1)) (d (n "tokio") (r "^1") (o #t) (d #t) (k 0)))) (h "0q6fv37mravzxlbyjky9vw5gzpyahsxfl2akvci418rbph319jj9") (f (quote (("tokio_io" "tokio") ("map_pharos" "pharos"))))))

(define-public crate-async_io_stream-0.3.1 (c (n "async_io_stream") (v "0.3.1") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pharos") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rustc_version") (r "^0.3") (d #t) (k 1)) (d (n "tokio") (r "^1") (o #t) (d #t) (k 0)))) (h "151znrdz2k3zknfp4fnjzhkd8f3wwpn7zash17l32fhrnx0dfnkd") (f (quote (("tokio_io" "tokio") ("map_pharos" "pharos"))))))

(define-public crate-async_io_stream-0.3.2 (c (n "async_io_stream") (v "0.3.2") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pharos") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rustc_version") (r "^0.3") (d #t) (k 1)) (d (n "tokio") (r "^1") (o #t) (d #t) (k 0)))) (h "1pzh2hbhx301iwcppwma43qi29i5s3b239pv7nkg6730py3k86sl") (f (quote (("tokio_io" "tokio") ("map_pharos" "pharos"))))))

(define-public crate-async_io_stream-0.3.3 (c (n "async_io_stream") (v "0.3.3") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pharos") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "tokio") (r "^1") (o #t) (d #t) (k 0)))) (h "0k5rv51935p3il74q59hwaaid6sy9kv05vz3lw48jpgkrpgbkmxn") (f (quote (("tokio_io" "tokio") ("map_pharos" "pharos"))))))

