(define-module (crates-io as yn async-backtrace) #:use-module (crates-io))

(define-public crate-async-backtrace-0.0.1 (c (n "async-backtrace") (v "0.0.1") (h "16ping3admqi0jwqm7i5h8gqxx4p0p3lbgq5k6n21bsjb7954ph5")))

(define-public crate-async-backtrace-0.2.0 (c (n "async-backtrace") (v "0.2.0") (d (list (d (n "async-backtrace-attributes") (r "^0.2") (d #t) (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 2)) (d (n "loom") (r "^0.5.6") (d #t) (t "cfg(loom)") (k 0)) (d (n "once_cell") (r "^1.0.0") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt-multi-thread" "sync" "macros"))) (d #t) (k 2)))) (h "16677jbdwsfkj0dd6qv3qybnws8nv4p5zq7lp5h8sr0pra6386sf") (r "1.59")))

(define-public crate-async-backtrace-0.2.1 (c (n "async-backtrace") (v "0.2.1") (d (list (d (n "async-backtrace-attributes") (r "^0.2") (d #t) (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "loom") (r "^0.5.6") (d #t) (t "cfg(loom)") (k 0)) (d (n "once_cell") (r "^1.0.0") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt-multi-thread" "sync" "macros"))) (d #t) (k 2)))) (h "1hd6l47z435ql4fpxir4qfaf0y5ywd2s8bhfcb5lggp2j75ilik3") (r "1.59")))

(define-public crate-async-backtrace-0.2.2 (c (n "async-backtrace") (v "0.2.2") (d (list (d (n "async-backtrace-attributes") (r "^0.2") (d #t) (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "loom") (r "^0.5.6") (d #t) (t "cfg(loom)") (k 0)) (d (n "once_cell") (r "^1.0.0") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt-multi-thread" "sync" "macros"))) (d #t) (k 2)))) (h "01k3y07wqi7bvv1n77x2y0nn77qzk4xk37h7n5iz0gh2vyr60zd9") (r "1.59")))

(define-public crate-async-backtrace-0.2.3 (c (n "async-backtrace") (v "0.2.3") (d (list (d (n "async-backtrace-attributes") (r "^0.2") (d #t) (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "loom") (r "^0.5.6") (d #t) (t "cfg(loom)") (k 0)) (d (n "once_cell") (r "^1.0.0") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt-multi-thread" "sync" "macros"))) (d #t) (k 2)))) (h "0snhwfwrhvlh1j5spxxhbwfxi1b03vk5b25450zbwkmqhy2x9k2p") (r "1.59")))

(define-public crate-async-backtrace-0.2.4 (c (n "async-backtrace") (v "0.2.4") (d (list (d (n "async-backtrace-attributes") (r "^0.2") (d #t) (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "loom") (r "^0.5.6") (d #t) (t "cfg(loom)") (k 0)) (d (n "once_cell") (r "^1.0.0") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt-multi-thread" "sync" "macros"))) (d #t) (k 2)))) (h "1g1fn85hpcnxaiy4w83hah0r3nhgsvsxk3ljd0j5s1dk1f5synrs") (r "1.59")))

(define-public crate-async-backtrace-0.2.5 (c (n "async-backtrace") (v "0.2.5") (d (list (d (n "async-backtrace-attributes") (r "^0.2") (d #t) (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "loom") (r "^0.5.6") (d #t) (t "cfg(loom)") (k 0)) (d (n "once_cell") (r "^1.0.0") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt-multi-thread" "sync" "macros"))) (d #t) (k 2)))) (h "06l6yy9f6rv9pzfmpq5fclhinsq47sfv5mpsicmqh4bnaz5n6m8i") (r "1.59")))

(define-public crate-async-backtrace-0.2.6 (c (n "async-backtrace") (v "0.2.6") (d (list (d (n "async-backtrace-attributes") (r "^0.2") (d #t) (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "loom") (r "^0.5.6") (d #t) (t "cfg(loom)") (k 0)) (d (n "once_cell") (r "^1.0.0") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt-multi-thread" "sync" "macros"))) (d #t) (k 2)))) (h "00l8lc1629lay0pfmlnfy36rw1sv1x6nslcyy5j0g4kd65l42ais") (r "1.59")))

(define-public crate-async-backtrace-0.2.7 (c (n "async-backtrace") (v "0.2.7") (d (list (d (n "async-backtrace-attributes") (r "^0.2") (d #t) (k 0)) (d (n "core_affinity") (r "^0.5.10") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 2)) (d (n "loom") (r "^0.5.6") (d #t) (t "cfg(loom)") (k 0)) (d (n "once_cell") (r "^1.0.0") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt-multi-thread" "sync" "macros"))) (d #t) (k 2)))) (h "165i3gdc3aasgbajnifx1wkj597dacx1wp0r7yhjfv94b0akkjsd")))

