(define-module (crates-io as yn async-injector) #:use-module (crates-io))

(define-public crate-async-injector-0.1.0 (c (n "async-injector") (v "0.1.0") (d (list (d (n "async-injector-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 2)) (d (n "futures") (r "^0.3.0-alpha.17") (f (quote ("nightly" "async-await"))) (d #t) (k 0) (p "futures-preview")) (d (n "hashbrown") (r "^0.5.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9.0") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (d #t) (k 0)))) (h "0cv8gqg09348ijw1k5zajn49z12g826bnm6r02dsh3ksj99gd65p")))

(define-public crate-async-injector-0.2.0 (c (n "async-injector") (v "0.2.0") (d (list (d (n "async-injector-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.7") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 2)) (d (n "futures") (r "^0.3.0-alpha.17") (f (quote ("nightly" "async-await"))) (d #t) (k 0) (p "futures-preview")) (d (n "hashbrown") (r "^0.5.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.98") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.2.0") (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (d #t) (k 0)))) (h "0xikncik35i9jf5nbmvrczl7wnbivhq0gn64hpnf5p38h0rid2s7")))

(define-public crate-async-injector-0.2.1 (c (n "async-injector") (v "0.2.1") (d (list (d (n "async-injector-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.7") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 2)) (d (n "futures") (r "^0.3.0-alpha.17") (f (quote ("nightly" "async-await"))) (d #t) (k 0) (p "futures-preview")) (d (n "hashbrown") (r "^0.5.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.98") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.2.0") (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (d #t) (k 0)))) (h "0f0g664rq9sqdcys42n32dfyky46n61qdwx4mch9rqjyx3qfv15s")))

(define-public crate-async-injector-0.2.2 (c (n "async-injector") (v "0.2.2") (d (list (d (n "async-injector-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.7") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 2)) (d (n "futures") (r "^0.3.0-alpha.18") (f (quote ("nightly" "async-await"))) (d #t) (k 0) (p "futures-preview")) (d (n "hashbrown") (r "^0.5.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.2.0") (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (d #t) (k 0)))) (h "1g3ia392qdy9alncjq128q3pg0lln40rcibql4di24k17f60fzia")))

(define-public crate-async-injector-0.3.0 (c (n "async-injector") (v "0.3.0") (d (list (d (n "async-injector-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.7") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 2)) (d (n "futures") (r "= 0.3.0-alpha.19") (f (quote ("async-await"))) (d #t) (k 2) (p "futures-preview")) (d (n "futures-channel-preview") (r "= 0.3.0-alpha.19") (d #t) (k 0)) (d (n "futures-util-preview") (r "= 0.3.0-alpha.19") (d #t) (k 0)) (d (n "hashbrown") (r "^0.5.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.2.0") (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (d #t) (k 0)))) (h "194ka1n91n5pjmm1s796jjja92ka2h6rgj4621pjswy9a4kdf6a2")))

(define-public crate-async-injector-0.4.0 (c (n "async-injector") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 2)) (d (n "futures-channel") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.5.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.2.0") (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (d #t) (k 0)) (d (n "tokio") (r "^0.2.6") (f (quote ("full"))) (d #t) (k 2)))) (h "118262zw1rbkqxl779zwq8gj16g7qcz3nvvvfizx0d48r68y81ld")))

(define-public crate-async-injector-0.4.1 (c (n "async-injector") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.22") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 2)) (d (n "futures-channel") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.5.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.2.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.6") (f (quote ("full"))) (d #t) (k 2)))) (h "09q8kzm1jnpwxxyfbnkk9j6cfkl8j2b7z38r81ipaajrdjfsmdjf")))

(define-public crate-async-injector-0.4.2 (c (n "async-injector") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.22") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 2)) (d (n "futures-channel") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.5.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.2.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.6") (f (quote ("full"))) (d #t) (k 2)))) (h "1fsgnspb6v228sbw1a9zlfkw3l0i40rpaldd6y5jzv8f4l541dln")))

(define-public crate-async-injector-0.5.0 (c (n "async-injector") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.28") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "hashbrown") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.2.2") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.19") (f (quote ("sync"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2.19") (f (quote ("full"))) (d #t) (k 2)))) (h "10g0lnjm0vgg9vj42v32wmiys86cqarbrjcbnd628qr071250mb8") (f (quote (("static" "lazy_static"))))))

(define-public crate-async-injector-0.6.0 (c (n "async-injector") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.28") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "hashbrown") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.2.2") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.19") (f (quote ("sync"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2.19") (f (quote ("full"))) (d #t) (k 2)))) (h "0wv1lmc141lc1a9bkassk5hkqlbkc15aggj0zkyzvbghyfs4fyhd") (f (quote (("static" "lazy_static"))))))

(define-public crate-async-injector-0.7.0 (c (n "async-injector") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.28") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.5.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "hashbrown") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.2.2") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.19") (f (quote ("sync" "stream" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2.19") (f (quote ("full"))) (d #t) (k 2)))) (h "1n9ny4nbf0r8rrvh0vw3h8ly0z5f0nvid3ngn63nsw9kb6yjgli3") (f (quote (("static" "lazy_static"))))))

(define-public crate-async-injector-0.8.0 (c (n "async-injector") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.28") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.6.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "hashbrown") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.2.2") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.19") (f (quote ("sync" "stream" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2.19") (f (quote ("full"))) (d #t) (k 2)))) (h "0q8qhr5607sih9ligkqccbrprnscn28m92y3kkpf8zjd460bvh9b") (f (quote (("static" "lazy_static"))))))

(define-public crate-async-injector-0.9.1 (c (n "async-injector") (v "0.9.1") (d (list (d (n "anyhow") (r "^1.0.28") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "hashbrown") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.2.2") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.19") (f (quote ("sync" "stream" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2.19") (f (quote ("full"))) (d #t) (k 2)))) (h "0zzsnkym3ryjkvkwdw3c29dh4i4rmzn9dclw5zars01vplqrif2x") (f (quote (("static" "lazy_static"))))))

(define-public crate-async-injector-0.10.0 (c (n "async-injector") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.28") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.10.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.4") (d #t) (k 0)) (d (n "hashbrown") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.2.2") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.19") (f (quote ("sync" "stream" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2.19") (f (quote ("full"))) (d #t) (k 2)))) (h "0pcvm0wnx8dk8lqk5dspbfpf36zbb238c9283zxg4zf6z6y8ganh") (f (quote (("static" "lazy_static"))))))

(define-public crate-async-injector-0.11.0 (c (n "async-injector") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.11.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.7") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.7") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.2.2") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.3.1") (f (quote ("sync" "stream" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^0.3.1") (f (quote ("full"))) (d #t) (k 2)))) (h "1bnm0wcfkipdsrx93dgs0ffs6aa3x9mcyknfgdqsfv774g4sn029") (f (quote (("static" "lazy_static"))))))

(define-public crate-async-injector-0.11.1 (c (n "async-injector") (v "0.11.1") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.11.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.7") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.7") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.2.2") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^0.3.1") (f (quote ("sync" "stream" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^0.3.1") (f (quote ("full"))) (d #t) (k 2)))) (h "1f1ncrm1gzg3bli1k70xyk4vfapd4ygrnn5gbnvangm7f89nqx1x") (f (quote (("static" "lazy_static"))))))

(define-public crate-async-injector-0.12.0 (c (n "async-injector") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.11.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.3.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.0") (d #t) (k 0)))) (h "0am18k6fh2gqd9w8n65j5qwavmpvqhq94zrmlbf15zbz509002hx") (f (quote (("static" "lazy_static"))))))

(define-public crate-async-injector-0.13.0 (c (n "async-injector") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.11.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.3.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.0") (d #t) (k 0)))) (h "1bm3q7m4nh99pfxj32qxaqa0m3f9q5qqvds5hvgdqwy097dilan2") (f (quote (("static" "lazy_static"))))))

(define-public crate-async-injector-0.13.1 (c (n "async-injector") (v "0.13.1") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.11.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.3.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.4.2") (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.0") (d #t) (k 0)))) (h "0qn8kl67qq40smgfd5qirinsxncpcyfpb2c8pkq5m7a1g1hm0nya") (f (quote (("static" "lazy_static"))))))

(define-public crate-async-injector-0.14.0 (c (n "async-injector") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.14.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.0") (d #t) (k 0)))) (h "1pmrad9w95vbi7db3qzzawkvgq4sgqy0bigqihl7jsipl74j6w7b")))

(define-public crate-async-injector-0.14.1 (c (n "async-injector") (v "0.14.1") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.14.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.0") (d #t) (k 0)))) (h "0vg37pfzbq303qhpr29017ma35n73bak6568nj7wsla3jn2wm32w")))

(define-public crate-async-injector-0.15.0 (c (n "async-injector") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.15.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.0") (d #t) (k 0)))) (h "04mq9488h0jdbpyz2rg00yh8dhy40vnin3rm233a5adgv1wkjinc")))

(define-public crate-async-injector-0.15.1 (c (n "async-injector") (v "0.15.1") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.15.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.0") (d #t) (k 0)))) (h "0062ixldhq27iqz34w46bp7aphf8jnnkkbsn81gsjlzc3hscrcv8")))

(define-public crate-async-injector-0.15.2 (c (n "async-injector") (v "0.15.2") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.15.1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.0") (d #t) (k 0)))) (h "0wknkb0h930ki8nh2cp0z16bl5sxd8fz7rl0rm6sq589vk8ypipq")))

(define-public crate-async-injector-0.15.3 (c (n "async-injector") (v "0.15.3") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.15.3") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.0") (d #t) (k 0)))) (h "0ipqpw58y7lbpwisz3kl213sip7k4ma5d1gq67pz5wjnmsk87b7h")))

(define-public crate-async-injector-0.16.0 (c (n "async-injector") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.16.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.121") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.4.0") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.2") (d #t) (k 0)))) (h "11j9y5mqswqsgfiwwl50i9nz6spy4x5ywxcdcl20k2jkap1mccr2")))

(define-public crate-async-injector-0.17.0 (c (n "async-injector") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.17.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.121") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.4.0") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0kb0sd2xsrjfrzhrc670sjdg8nijs93afql4pi0hgls3b2zdlsch")))

(define-public crate-async-injector-0.17.1 (c (n "async-injector") (v "0.17.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.17.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.4.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1jyaf6j4p0c4habrn0wx4bf2xwjzp4k4cckw3vixlk3bq1gp8xr6")))

(define-public crate-async-injector-0.18.0 (c (n "async-injector") (v "0.18.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.18.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.4.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "09bwsf7pbgdraa9n4akkv6l57smfd2cgpc9i6knq66qphgvvdiz5")))

(define-public crate-async-injector-0.18.1 (c (n "async-injector") (v "0.18.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.18.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.4.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0swraa480h25gqphj5mrbj7a9bp0vrfgrqkfign7512c82g5g25h")))

(define-public crate-async-injector-0.18.2 (c (n "async-injector") (v "0.18.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.18.2") (d #t) (k 0)) (d (n "hashbrown") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.4.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "16fxhvnn5yvcy7rsmc28hawsafi38c8hzjymi9jkmgdfm22xbfcd")))

(define-public crate-async-injector-0.18.3 (c (n "async-injector") (v "0.18.3") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.18.3") (d #t) (k 0)) (d (n "hashbrown") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.4.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0gnl0mr2l9ppsbbchkacii0vp6jf1dfg4x3nf9g8g96ynv8mki58")))

(define-public crate-async-injector-0.18.4 (c (n "async-injector") (v "0.18.4") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 2)) (d (n "async-injector-derive") (r "^0.18.4") (d #t) (k 0)) (d (n "hashbrown") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.4.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1xnc9i2rvpl42ygi7q24yfjpgmhhv3zsa4njrq1n0w8a59klhfh0") (r "1.56")))

(define-public crate-async-injector-0.18.5 (c (n "async-injector") (v "0.18.5") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 2)) (d (n "async-injector-derive") (r "=0.18.5") (d #t) (k 0)) (d (n "hashbrown") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.4.0") (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.10.1") (f (quote ("rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1ysdd2ap8z37qcsy0f3wa4333chkbfnscycwqax45fr7l9s9xidm") (r "1.56")))

(define-public crate-async-injector-0.19.0 (c (n "async-injector") (v "0.19.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 2)) (d (n "async-injector-derive") (r "=0.19.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.4.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "04cfsvihb4vls7nl8w5bpbwfzhv43vdq16ab4lv91h8izchiyi12") (r "1.65")))

(define-public crate-async-injector-0.19.1 (c (n "async-injector") (v "0.19.1") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 2)) (d (n "async-injector-derive") (r "=0.19.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.4.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1bj5s2j96m97p58m4wj42p0dv9hkr2drw5drd4zkq1fr88s59xic") (r "1.65")))

(define-public crate-async-injector-0.19.2 (c (n "async-injector") (v "0.19.2") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 2)) (d (n "async-injector-derive") (r "=0.19.2") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.4.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0gg0m9jzgkf2nig0l85lbw1ckj3sngh0rw3qhn3w3i965vwah0iz") (r "1.65")))

(define-public crate-async-injector-0.19.3 (c (n "async-injector") (v "0.19.3") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 2)) (d (n "async-injector-derive") (r "=0.19.3") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-hashkey") (r "^0.4.5") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0cf3jxhalsvikra77412d3qh5p4bc1psmwl49a3b1f6x87vk0v7q") (r "1.65")))

