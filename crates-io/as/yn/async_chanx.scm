(define-module (crates-io as yn async_chanx) #:use-module (crates-io))

(define-public crate-async_chanx-0.0.0 (c (n "async_chanx") (v "0.0.0") (h "13yn2fixvksph73x1hq8y2rzm4f1n7a6nssvyi7mmh9hqs86z2pi")))

(define-public crate-async_chanx-0.1.0-alpha.1 (c (n "async_chanx") (v "0.1.0-alpha.1") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (k 2)) (d (n "async_executors") (r "^0.3") (f (quote ("async_std" "localpool"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-sink") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "tokio") (r "^0.2") (f (quote ("sync"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync" "stream"))) (d #t) (k 2)))) (h "03hw8l46vdkwzx9nj6scnphyjmzp2kv1sjzhcil45l3rgzicfh23")))

(define-public crate-async_chanx-0.1.0-alpha.2 (c (n "async_chanx") (v "0.1.0-alpha.2") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (k 2)) (d (n "async_executors") (r "^0.4") (f (quote ("async_std" "localpool"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-sink") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "rustc_version") (r "^0.3") (d #t) (k 1)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "10fma2fppq5lg1wlzcqm23m42v8rwzrcf610bh89as8lkjbfwf96")))

(define-public crate-async_chanx-0.1.0-alpha.3 (c (n "async_chanx") (v "0.1.0-alpha.3") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (k 2)) (d (n "async_executors") (r "^0.4") (f (quote ("async_std" "localpool"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-sink") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 2)))) (h "1wfyd1r4mj811r75d7g65v6n9ls1kcqgz0bxgnmd4wzr2nmpzysp")))

(define-public crate-async_chanx-0.1.0-alpha.4 (c (n "async_chanx") (v "0.1.0-alpha.4") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (k 2)) (d (n "async_executors") (r "^0.4") (f (quote ("async_std" "localpool"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-sink") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "tokio-stream") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tokio_crate") (r "^1") (f (quote ("sync"))) (o #t) (d #t) (k 0) (p "tokio")) (d (n "tokio_crate") (r "^1") (f (quote ("sync"))) (d #t) (k 2) (p "tokio")))) (h "0m88cfhbpiwj1sbk5wm3mlp628fhw5xkr40d4kwxrwbsndxrnliv") (f (quote (("tokio" "tokio_crate" "tokio-stream"))))))

(define-public crate-async_chanx-0.1.0-alpha.5 (c (n "async_chanx") (v "0.1.0-alpha.5") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "async_executors") (r "^0.6") (f (quote ("async_std" "localpool"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-sink") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "tokio-stream") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tokio_crate") (r "^1") (f (quote ("sync"))) (o #t) (d #t) (k 0) (p "tokio")) (d (n "tokio_crate") (r "^1") (f (quote ("sync"))) (d #t) (k 2) (p "tokio")))) (h "1i70shj6r1kivkkqq82q8liix7hglpqhlajcax7h71imhq66ciqh") (f (quote (("tokio" "tokio_crate" "tokio-stream"))))))

