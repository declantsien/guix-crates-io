(define-module (crates-io as yn async-timer) #:use-module (crates-io))

(define-public crate-async-timer-0.1.0 (c (n "async-timer") (v "0.1.0") (d (list (d (n "futures-preview") (r "^0.3.0-alpha.14") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0sg9d4w4cczknd2aifhrivk0vsgap2v64gbl157zn52z19nbc2nh") (f (quote (("no_std") ("default"))))))

(define-public crate-async-timer-0.2.0 (c (n "async-timer") (v "0.2.0") (d (list (d (n "futures-preview") (r "^0.3.0-alpha.14") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "nix") (r "^0.13") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "romio") (r "^0.3.0-alpha.5") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "romio") (r "^0.3.0-alpha.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "14jgdmd6jwzmq8ny2hws4s1b4179l12k5mc4qjr2x5cmca5xndbl") (f (quote (("romio_on" "mio" "romio" "nix") ("no_std") ("default"))))))

(define-public crate-async-timer-0.2.1 (c (n "async-timer") (v "0.2.1") (d (list (d (n "futures-preview") (r "^0.3.0-alpha.14") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "nix") (r "^0.13") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "romio") (r "^0.3.0-alpha.5") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "romio") (r "^0.3.0-alpha.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "07764d7q2av6gzqdyd64qc5lrmrb9nm3rcvikrkxwv5d721aba88") (f (quote (("romio_on" "mio" "romio" "nix") ("no_std") ("default"))))))

(define-public crate-async-timer-0.2.2 (c (n "async-timer") (v "0.2.2") (d (list (d (n "futures-preview") (r "^0.3.0-alpha.14") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "nix") (r "^0.13") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "romio") (r "^0.3.0-alpha.5") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "romio") (r "^0.3.0-alpha.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0dhzf1hi79s4jvfrhkad04wjk1407carbywg8pdrd15hbrh59gn0") (f (quote (("romio_on" "mio" "romio" "nix") ("no_std") ("default"))))))

(define-public crate-async-timer-0.2.3 (c (n "async-timer") (v "0.2.3") (d (list (d (n "futures-preview") (r "^0.3.0-alpha.14") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "nix") (r "^0.13") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "romio") (r "^0.3.0-alpha.5") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "romio") (r "^0.3.0-alpha.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1zkgx2zp2c47sgsyvp0fxcymv10z1v9pra26izzkzmrdcvs294qm") (f (quote (("romio_on" "mio" "romio" "nix") ("no_std") ("default"))))))

(define-public crate-async-timer-0.2.4 (c (n "async-timer") (v "0.2.4") (d (list (d (n "futures-preview") (r "^0.3.0-alpha.16") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "nix") (r "^0.13") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "romio") (r "^0.3.0-alpha.5") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "romio") (r "^0.3.0-alpha.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0wd4mps3r4si1rg6gfagcnayqa2h289bbbxh2cbkifxazis4ymj0") (f (quote (("romio_on" "mio" "romio" "nix") ("no_std") ("default"))))))

(define-public crate-async-timer-0.2.5 (c (n "async-timer") (v "0.2.5") (d (list (d (n "futures-preview") (r "^0.3.0-alpha.16") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "nix") (r "^0.14") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "romio") (r "^0.3.0-alpha.5") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "romio") (r "^0.3.0-alpha.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "18jp3l3saq3px6zmcin39raf0v70ncn3l8p9idyl07zs45lh023i") (f (quote (("romio_on" "mio" "romio" "nix") ("no_std") ("default"))))))

(define-public crate-async-timer-0.2.6 (c (n "async-timer") (v "0.2.6") (d (list (d (n "futures-preview") (r "^0.3.0-alpha.16") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "nix") (r "^0.14") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "romio") (r "^0.3.0-alpha.5") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "romio") (r "^0.3.0-alpha.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "14bjgzh7vmz89sqbgnvqrnk6122b3smhla3lbgfkl2rsy9r9hbbc") (f (quote (("romio_on" "mio" "romio" "nix") ("no_std") ("default"))))))

(define-public crate-async-timer-0.2.7 (c (n "async-timer") (v "0.2.7") (d (list (d (n "futures-preview") (r "^0.3.0-alpha.16") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "nix") (r "^0.14") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "romio") (r "^0.3.0-alpha.5") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "romio") (r "^0.3.0-alpha.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "02pfqbdkbmjhhwk96166xxfdhr69wnzsjylbbn44ly7dhqk0aha4") (f (quote (("romio_on" "mio" "romio" "nix") ("no_std") ("default"))))))

(define-public crate-async-timer-0.2.8 (c (n "async-timer") (v "0.2.8") (d (list (d (n "futures-preview") (r "^0.3.0-alpha.16") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "nix") (r "^0.14") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "romio") (r "^0.3.0-alpha.5") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "romio") (r "^0.3.0-alpha.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1gjm6qcwvhagh6nq1jja8npgrpbl7p1m104sjf5c1msdkvyb7bb0") (f (quote (("romio_on" "mio" "romio" "nix") ("no_std") ("default"))))))

(define-public crate-async-timer-0.2.9 (c (n "async-timer") (v "0.2.9") (d (list (d (n "futures-preview") (r "^0.3.0-alpha.16") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "nix") (r "^0.14") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "romio") (r "^0.3.0-alpha.5") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "romio") (r "^0.3.0-alpha.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\", target_os = \"dragonfly\", target_os = \"netbsd\", target_os = \"freebsd\", target_os = \"openbsd\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "00yh4nq4fkqkwdvw97iwdbrjq7d0znwkhg77ni9i8bmxv376zg2y") (f (quote (("romio_on" "mio" "romio" "nix") ("no_std") ("default"))))))

(define-public crate-async-timer-0.2.10 (c (n "async-timer") (v "0.2.10") (d (list (d (n "futures-preview") (r "^0.3.0-alpha.16") (d #t) (k 2)) (d (n "libc") (r "^0.2.60") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.14") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "romio") (r "^0.3.0-alpha.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "13qqmz3hi7mslz34kxn2hf5p3xwk4hr051nsagcn67d1972d2qjd") (f (quote (("romio_on" "mio" "romio" "nix") ("no_std") ("default"))))))

(define-public crate-async-timer-0.3.0 (c (n "async-timer") (v "0.3.0") (d (list (d (n "futures-preview") (r "^0.3.0-alpha") (d #t) (k 2)) (d (n "libc") (r "^0.2.60") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.15") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "tokio") (r "^0.2.0-alpha") (d #t) (k 2)) (d (n "tokio-reactor") (r "^0.2.0-alpha") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0i4ca2xjz0v2l7qfcc8q68rqfsgviv2j3gfnqqxlv3pnkrss46r0") (f (quote (("tokio_on" "mio" "tokio-reactor" "nix") ("no_std") ("default"))))))

(define-public crate-async-timer-0.3.1 (c (n "async-timer") (v "0.3.1") (d (list (d (n "futures-preview") (r "^0.3.0-alpha") (d #t) (k 2)) (d (n "libc") (r "^0.2.60") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.15") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "tokio") (r "^0.2.0-alpha") (d #t) (k 2)) (d (n "tokio-reactor") (r "^0.2.0-alpha") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0cndipx0s9bm6w6wmi59i7h0dyhf5kv1bm9nmxsqdl6z23074y67") (f (quote (("tokio_on" "mio" "tokio-reactor" "nix") ("no_std") ("default"))))))

(define-public crate-async-timer-0.4.0 (c (n "async-timer") (v "0.4.0") (d (list (d (n "futures-preview") (r "^0.3.0-alpha") (d #t) (k 2)) (d (n "libc") (r "^0.2.60") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.15") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "tokio") (r "^0.2.0-alpha") (d #t) (k 2)) (d (n "tokio-reactor") (r "^0.2.0-alpha") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1733q7f0f0j132ga9vw2szwbkygnvwx963zhlkrgq745wk0fw841") (f (quote (("tokio_on" "mio" "tokio-reactor" "nix") ("no_std") ("default"))))))

(define-public crate-async-timer-0.5.0 (c (n "async-timer") (v "0.5.0") (d (list (d (n "futures-preview") (r "^0.3.0-alpha") (d #t) (k 2)) (d (n "libc") (r "^0.2.60") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.15") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "tokio") (r "^0.2.0-alpha") (d #t) (k 2)) (d (n "tokio-reactor") (r "^0.2.0-alpha") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1vsygbsyz6yqgra0p8a25b45srwl7zsvmaakrrh8p04l6v0ghyfw") (f (quote (("tokio_on" "mio" "tokio-reactor" "nix") ("no_std") ("default"))))))

(define-public crate-async-timer-0.5.1 (c (n "async-timer") (v "0.5.1") (d (list (d (n "futures-preview") (r "^0.3.0-alpha") (d #t) (k 2)) (d (n "libc") (r "^0.2.60") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.15") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "tokio") (r "^0.2.0-alpha") (d #t) (k 2)) (d (n "tokio-reactor") (r "^0.2.0-alpha") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0gcf4zhdwq215jahkng3mwhr0f85shsn6p76zn9clkg9qd8q3kbx") (f (quote (("tokio_on" "mio" "tokio-reactor" "nix") ("no_std") ("default"))))))

(define-public crate-async-timer-0.5.2 (c (n "async-timer") (v "0.5.2") (d (list (d (n "futures-preview") (r "^0.3.0-alpha") (d #t) (k 2)) (d (n "libc") (r "^0.2.60") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.15") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "tokio") (r "^0.2.0-alpha.2") (d #t) (k 2)) (d (n "tokio-net") (r "^0.2.0-alpha.2") (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1papwwh4kgp4r4dfrdmyqs25mnpnxgdxsyskr0r2qqbippbbpzkn") (f (quote (("tokio_on" "mio" "tokio-net" "nix") ("no_std") ("default"))))))

(define-public crate-async-timer-0.6.0 (c (n "async-timer") (v "0.6.0") (d (list (d (n "cute-async") (r "^0.3") (f (quote ("tokio"))) (d #t) (k 2)) (d (n "futures-core-preview") (r "^0.3.0-alpha") (o #t) (d #t) (k 0)) (d (n "futures-util-preview") (r "^0.3.0-alpha") (d #t) (k 2)) (d (n "libc") (r "^0.2.60") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.15") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "tokio-net") (r "^0.2.0-alpha.2") (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0mg1jaw60icc8fm4i9wb7h0d1lywb7p75ks0pcywpg8qgzlls7p6") (f (quote (("tokio_on" "mio" "tokio-net" "nix") ("stream" "futures-core-preview") ("no_std") ("default"))))))

(define-public crate-async-timer-0.6.1 (c (n "async-timer") (v "0.6.1") (d (list (d (n "cute-async") (r "^0.3") (f (quote ("tokio"))) (d #t) (k 2)) (d (n "futures-core-preview") (r "^0.3.0-alpha") (o #t) (d #t) (k 0)) (d (n "futures-util-preview") (r "^0.3.0-alpha") (d #t) (k 2)) (d (n "libc") (r "^0.2.60") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.15") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "tokio-net") (r "^0.2.0-alpha.2") (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1r4vm3jhkn8hmgwgpd5iqqdfwzimnbac883wlfsly7bs2zj5szv3") (f (quote (("tokio_on" "mio" "tokio-net" "nix") ("stream" "futures-core-preview") ("no_std") ("default"))))))

(define-public crate-async-timer-0.6.2 (c (n "async-timer") (v "0.6.2") (d (list (d (n "cute-async") (r "^0.3") (f (quote ("tokio"))) (d #t) (k 2)) (d (n "futures-core-preview") (r "^0.3.0-alpha") (o #t) (d #t) (k 0)) (d (n "futures-util-preview") (r "^0.3.0-alpha") (d #t) (k 2)) (d (n "libc") (r "^0.2.60") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.15") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "tokio-net") (r "^0.2.0-alpha.2") (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "10pb0s8547kgrz7k6bqn0bjn0gs7bfcrc5wrlfkqmxmj0z2ac22p") (f (quote (("tokio_on" "mio" "tokio-net" "nix") ("stream" "futures-core-preview") ("no_std") ("default"))))))

(define-public crate-async-timer-0.6.3 (c (n "async-timer") (v "0.6.3") (d (list (d (n "cute-async") (r "^0.3") (f (quote ("tokio"))) (d #t) (k 2)) (d (n "futures-core-preview") (r "^0.3.0-alpha") (o #t) (d #t) (k 0)) (d (n "futures-util-preview") (r "^0.3.0-alpha") (d #t) (k 2)) (d (n "libc") (r "^0.2.60") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.15") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "tokio-net") (r "^0.2.0-alpha.2") (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "08q7rswmyvmllm3lf2vy8ifhifi7hrpbj5pd7lw3bg22l3zfjqha") (f (quote (("tokio_on" "mio" "tokio-net" "nix") ("stream" "futures-core-preview") ("no_std") ("default"))))))

(define-public crate-async-timer-0.7.0 (c (n "async-timer") (v "0.7.0") (d (list (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (d #t) (k 2)) (d (n "libc") (r "^0.2.60") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.15") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("io-driver"))) (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-core"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1af2z8mjmbsaf8byjjj9qhw4sz2phfdw9k6mw0zv54nlfca7ghd1") (f (quote (("tokio_on" "mio" "tokio" "nix") ("stream" "futures-core") ("no_std") ("default"))))))

(define-public crate-async-timer-0.7.1 (c (n "async-timer") (v "0.7.1") (d (list (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (d #t) (k 2)) (d (n "libc") (r "^0.2.60") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.16") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("io-driver"))) (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-core"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0vxvl1v3ry38283w39p4w6sfpa1fylvmb5xp9ay82i1d5bia5d0s") (f (quote (("tokio_on" "mio" "tokio" "nix") ("stream" "futures-core") ("no_std") ("default"))))))

(define-public crate-async-timer-0.7.2 (c (n "async-timer") (v "0.7.2") (d (list (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (d #t) (k 2)) (d (n "libc") (r "^0.2.60") (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.16") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("io-driver"))) (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-core"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "089pdpfj03ikh5vzl7cd19935i66g9rxxhhfa7yfw3gr6p1zx5wb") (f (quote (("tokio_on" "mio" "tokio" "nix") ("stream" "futures-core") ("no_std") ("default"))))))

(define-public crate-async-timer-0.7.3 (c (n "async-timer") (v "0.7.3") (d (list (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (d #t) (k 2)) (d (n "libc") (r "^0.2.60") (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.17") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("io-driver"))) (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-core"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1bv15dk08dhqw4gygj811ag42rhdakxiik9p29n3l954x76y22q9") (f (quote (("tokio_on" "mio" "tokio" "nix") ("stream" "futures-core") ("no_std") ("default"))))))

(define-public crate-async-timer-1.0.0-beta.1 (c (n "async-timer") (v "1.0.0-beta.1") (d (list (d (n "cc") (r "^1") (o #t) (d #t) (k 1)) (d (n "error-code") (r "^1") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (d #t) (k 2)) (d (n "libc") (r "^0.2.60") (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.17") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "os-sync") (r "^0.3") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"ios\"))))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("io-driver"))) (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-core"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)))) (h "1pq2lhfz7mnzdskzbi1fql9hdwfsmf28bx7dal6vd2ckcr68wsyq") (f (quote (("tokio02" "mio" "tokio" "nix" "std") ("stream" "futures-core") ("std") ("default") ("c_wrapper" "cc"))))))

(define-public crate-async-timer-1.0.0-beta.2 (c (n "async-timer") (v "1.0.0-beta.2") (d (list (d (n "cc") (r "^1") (o #t) (d #t) (k 1)) (d (n "error-code") (r "^1") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (d #t) (k 2)) (d (n "libc") (r "^0.2.60") (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.17") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "os-sync") (r "^0.3") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"ios\"))))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("io-driver"))) (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-core"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "05rwviv0ykmg33gf978081i8x65lq6qlghd33wzajf3h1p9zhqnj") (f (quote (("tokio02" "mio" "tokio" "nix" "std") ("stream" "futures-core") ("std") ("default") ("c_wrapper" "cc"))))))

(define-public crate-async-timer-1.0.0-beta.3 (c (n "async-timer") (v "1.0.0-beta.3") (d (list (d (n "cc") (r "^1") (o #t) (d #t) (k 1)) (d (n "error-code") (r "^1") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (d #t) (k 2)) (d (n "libc") (r "^0.2.60") (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.17") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "os-sync") (r "^0.3") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"ios\"))))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("io-driver"))) (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-core"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "10xv9r1qkc1a6isd011kyhsjjsqi24ap61qlvrclc4889agxv4dc") (f (quote (("tokio02" "mio" "tokio" "nix" "std") ("stream" "futures-core") ("std") ("default") ("c_wrapper" "cc"))))))

(define-public crate-async-timer-1.0.0-beta.4 (c (n "async-timer") (v "1.0.0-beta.4") (d (list (d (n "cc") (r "^1") (o #t) (d #t) (k 1)) (d (n "error-code") (r "^2") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (d #t) (k 2)) (d (n "libc") (r "^0.2.60") (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.17") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "os-sync") (r "^0.3") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"ios\"))))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("io-driver"))) (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-core"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1sk2ql309yl06xw2w88dsqrp6iw09h2fhddxpzj08xpyavgd8jjs") (f (quote (("tokio02" "mio" "tokio" "nix" "std") ("stream" "futures-core") ("std") ("default") ("c_wrapper" "cc"))))))

(define-public crate-async-timer-1.0.0-beta.5 (c (n "async-timer") (v "1.0.0-beta.5") (d (list (d (n "cc") (r "^1") (o #t) (d #t) (k 1)) (d (n "error-code") (r "^2") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (d #t) (k 2)) (d (n "libc") (r "^0.2.60") (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "os-sync") (r "^0.3") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"ios\"))))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("io-driver"))) (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-core"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "10jihy3lqh68jr45b07k0zya8l2a1ad5jgxdcpqkvaqbygmkh87y") (f (quote (("tokio02" "mio" "tokio" "nix" "std") ("stream" "futures-core") ("std") ("default") ("c_wrapper" "cc"))))))

(define-public crate-async-timer-0.7.4 (c (n "async-timer") (v "0.7.4") (d (list (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.0") (d #t) (k 2)) (d (n "libc") (r "^0.2.60") (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.18") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("io-driver"))) (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-core"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1ma4iarl4jg3wnszmsmhf37ajbgl8vnbjkkvf0hahanbfvnscpxs") (f (quote (("tokio_on" "mio" "tokio" "nix") ("stream" "futures-core") ("no_std") ("default"))))))

(define-public crate-async-timer-1.0.0-beta.6 (c (n "async-timer") (v "1.0.0-beta.6") (d (list (d (n "cc") (r "^1") (o #t) (d #t) (k 1)) (d (n "error-code") (r "^2") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.60") (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "mio") (r "^0.6") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.19") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "os-sync") (r "^0.3") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"ios\"))))") (k 0)) (d (n "tokio_02") (r "^0.2") (f (quote ("io-driver"))) (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0) (p "tokio")) (d (n "tokio_02") (r "^0.2") (f (quote ("macros" "rt-core"))) (d #t) (k 2) (p "tokio")) (d (n "tokio_03") (r "^0.3.5") (f (quote ("net"))) (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0) (p "tokio")) (d (n "tokio_03") (r "^0.3.2") (f (quote ("macros" "rt"))) (k 2) (p "tokio")) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1s886nix53m6ny7wbla4s55v1qnhsibx87s2z7x7v8gixyiw6ljl") (f (quote (("tokio03" "tokio_03" "nix" "std") ("tokio02" "mio" "tokio_02" "nix" "std") ("stream" "futures-core") ("std") ("default") ("c_wrapper" "cc"))))))

(define-public crate-async-timer-1.0.0-beta.7 (c (n "async-timer") (v "1.0.0-beta.7") (d (list (d (n "cc") (r "^1") (o #t) (d #t) (k 1)) (d (n "error-code") (r "^2") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.60") (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.19") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "tokio_1") (r "^1") (f (quote ("net"))) (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0) (p "tokio")) (d (n "tokio_1") (r "^1") (f (quote ("macros" "rt"))) (k 2) (p "tokio")) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "11aq79ljwzlam7lkg49p2388418k090y157mzc3dygw6lncjg5lx") (f (quote (("tokio1" "tokio_1" "nix" "std") ("stream" "futures-core") ("std") ("default") ("c_wrapper" "cc"))))))

(define-public crate-async-timer-1.0.0-beta.8 (c (n "async-timer") (v "1.0.0-beta.8") (d (list (d (n "cc") (r "^1") (o #t) (d #t) (k 1)) (d (n "error-code") (r "^2.2") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.60") (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0)) (d (n "nix") (r "^0.23") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "tokio_1") (r "^1.15") (f (quote ("net"))) (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", unix))") (k 0) (p "tokio")) (d (n "tokio_1") (r "^1.15") (f (quote ("macros" "rt"))) (k 2) (p "tokio")) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("threadpoolapiset"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0i4qzj2vhrf3kvcfgmn02smx2v5blb8xrz8pcxjm9nqhrpfdzb7s") (f (quote (("tokio1" "tokio_1" "nix" "std") ("stream" "futures-core") ("std" "error-code/std") ("default") ("c_wrapper" "cc"))))))

(define-public crate-async-timer-1.0.0-beta.9 (c (n "async-timer") (v "1.0.0-beta.9") (d (list (d (n "cc") (r "^1") (o #t) (d #t) (k 1)) (d (n "error-code") (r "^2.2") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.60") (t "cfg(any(target_os = \"macos\", target_os = \"ios\", windows, unix))") (k 0)) (d (n "nix") (r "^0.26") (o #t) (d #t) (t "cfg(any(target_os = \"bitrig\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "tokio_1") (r "^1.15") (f (quote ("net"))) (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", windows, unix))") (k 0) (p "tokio")) (d (n "tokio_1") (r "^1.15") (f (quote ("macros" "rt"))) (k 2) (p "tokio")) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)))) (h "1yi9l0nchbgcpix53a2i0jpl3h6vdfcmhmf658gkahn7lpy9mgvy") (f (quote (("tokio1" "tokio_1" "nix" "std") ("stream" "futures-core") ("std" "error-code/std") ("default") ("c_wrapper" "cc"))))))

(define-public crate-async-timer-1.0.0-beta.10 (c (n "async-timer") (v "1.0.0-beta.10") (d (list (d (n "cc") (r "^1") (o #t) (d #t) (k 1)) (d (n "error-code") (r "^3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.60") (t "cfg(any(target_os = \"macos\", target_os = \"ios\", windows, unix))") (k 0)) (d (n "tokio_1") (r "^1.15") (f (quote ("net"))) (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", windows, unix))") (k 0) (p "tokio")) (d (n "tokio_1") (r "^1.15") (f (quote ("macros" "rt"))) (k 2) (p "tokio")) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)))) (h "05vrcf3ah92dvx3icnzc9il5sg68k02l7cc4w7ilw8ww3d99pz8y") (f (quote (("tokio1" "tokio_1" "std") ("stream" "futures-core") ("std" "error-code/std") ("default") ("c_wrapper" "cc"))))))

(define-public crate-async-timer-1.0.0-beta.11 (c (n "async-timer") (v "1.0.0-beta.11") (d (list (d (n "cc") (r "^1") (o #t) (d #t) (k 1)) (d (n "error-code") (r "^3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.60") (t "cfg(any(target_os = \"macos\", target_os = \"ios\", windows, unix))") (k 0)) (d (n "tokio_1") (r "^1.15") (f (quote ("net"))) (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", windows, unix))") (k 0) (p "tokio")) (d (n "tokio_1") (r "^1.15") (f (quote ("macros" "rt"))) (k 2) (p "tokio")) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)))) (h "0sbhgqh7bvcrdygxj304qbx86rha6i4vhqymjd75yimd1xxc51cs") (f (quote (("tokio1" "tokio_1" "std") ("std" "error-code/std") ("default") ("c_wrapper" "cc"))))))

(define-public crate-async-timer-1.0.0-beta.12 (c (n "async-timer") (v "1.0.0-beta.12") (d (list (d (n "cc") (r "^1") (o #t) (d #t) (k 1)) (d (n "error-code") (r "^3") (d #t) (k 0)) (d (n "libc") (r "^0.2.60") (t "cfg(any(target_os = \"macos\", target_os = \"ios\", windows, unix))") (k 0)) (d (n "tokio_1") (r "^1.35") (f (quote ("net"))) (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", windows, unix))") (k 0) (p "tokio")) (d (n "tokio_1") (r "^1.35") (f (quote ("macros" "rt"))) (k 2) (p "tokio")) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)))) (h "060jsyf3h1j7gimax63xjp8vrfiw7h6bkvrma88sywsnb8slab1i") (f (quote (("tokio1" "tokio_1" "std") ("std" "error-code/std") ("default") ("c_wrapper" "cc"))))))

(define-public crate-async-timer-1.0.0-beta.13 (c (n "async-timer") (v "1.0.0-beta.13") (d (list (d (n "cc") (r "^1") (o #t) (d #t) (k 1)) (d (n "error-code") (r "^3") (d #t) (k 0)) (d (n "libc") (r "^0.2.60") (t "cfg(any(target_os = \"macos\", target_os = \"ios\", windows, unix))") (k 0)) (d (n "tokio_1") (r "^1.35") (f (quote ("net"))) (o #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", windows, unix))") (k 0) (p "tokio")) (d (n "tokio_1") (r "^1.35") (f (quote ("macros" "rt"))) (k 2) (p "tokio")) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"wasm32\"))") (k 0)))) (h "0s5mwgf7nl7sd5lmg9z1vvrai58g6czd104r3kq00ld0p8r8k8al") (f (quote (("tokio1" "tokio_1" "std") ("std" "error-code/std") ("default") ("c_wrapper" "cc"))))))

