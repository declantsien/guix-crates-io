(define-module (crates-io as yn async-compression-issue-150-workaround) #:use-module (crates-io))

(define-public crate-async-compression-issue-150-workaround-0.3.15-issue-150 (c (n "async-compression-issue-150-workaround") (v "0.3.15-issue-150") (d (list (d (n "brotli") (r "^3.3.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.0.0") (d #t) (k 2)) (d (n "bytes-05") (r "^0.5.0") (o #t) (d #t) (k 0) (p "bytes")) (d (n "bytes-05") (r "^0.5.0") (d #t) (k 2) (p "bytes")) (d (n "bytes-06") (r "^0.6.0") (d #t) (k 2) (p "bytes")) (d (n "bzip2") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.11") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-core") (r "^0.3.0") (k 0)) (d (n "futures-io") (r "^0.3.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "futures-test") (r "^0.3.5") (d #t) (k 2)) (d (n "libzstd") (r "^0.11.1") (o #t) (k 0) (p "zstd")) (d (n "memchr") (r "^2.2.1") (d #t) (k 0)) (d (n "ntest") (r "^0.7.5") (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "tokio") (r "^1.0.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("io-util"))) (k 2)) (d (n "tokio-02") (r "^0.2.21") (o #t) (k 0) (p "tokio")) (d (n "tokio-02") (r "^0.2.21") (f (quote ("io-util" "stream" "macros" "io-std"))) (k 2) (p "tokio")) (d (n "tokio-03") (r "^0.3.0") (o #t) (k 0) (p "tokio")) (d (n "tokio-03") (r "^0.3.0") (f (quote ("io-util" "stream"))) (k 2) (p "tokio")) (d (n "tokio-util-03") (r "^0.3.0") (f (quote ("codec"))) (k 2) (p "tokio-util")) (d (n "tokio-util-04") (r "^0.4.0") (f (quote ("io"))) (k 2) (p "tokio-util")) (d (n "tokio-util-05") (r "^0.5.0") (f (quote ("io"))) (k 2) (p "tokio-util")) (d (n "tokio-util-06") (r "^0.6.0") (f (quote ("io"))) (k 2) (p "tokio-util")) (d (n "xz2") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "zstd-safe") (r "^5.0.1") (o #t) (k 0)))) (h "140n0g1pq5hj7izzzy6l1pqnvss56dggxkzz3vg69im4jzx3n72s") (f (quote (("zstd" "libzstd" "zstd-safe") ("zlib" "flate2") ("xz" "xz2") ("stream" "bytes-05") ("lzma" "xz2") ("gzip" "flate2") ("futures-write" "futures-io") ("futures-bufread" "futures-io") ("deflate" "flate2") ("default") ("all-implementations" "futures-io" "stream" "tokio-02" "tokio-03" "tokio") ("all-algorithms" "brotli" "bzip2" "deflate" "gzip" "lzma" "xz" "zlib" "zstd") ("all" "all-implementations" "all-algorithms"))))))

