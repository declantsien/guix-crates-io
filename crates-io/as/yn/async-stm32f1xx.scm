(define-module (crates-io as yn async-stm32f1xx) #:use-module (crates-io))

(define-public crate-async-stm32f1xx-0.1.0 (c (n "async-stm32f1xx") (v "0.1.0") (d (list (d (n "as-slice") (r "^0.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6") (d #t) (k 0)) (d (n "cortex-m-semihosting") (r "^0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "panic-semihosting") (r "^0.5") (d #t) (k 2)) (d (n "stm32f1xx-hal") (r "^0.5") (f (quote ("rt"))) (d #t) (k 0)) (d (n "stm32f1xx-hal") (r "^0.5") (f (quote ("stm32f103" "medium"))) (d #t) (k 2)) (d (n "void") (r "^1.0") (k 0)))) (h "0dsazfads99lp8msxspa9cjqf6df5y1v988a6dwahfazclmbm7db")))

(define-public crate-async-stm32f1xx-0.2.0 (c (n "async-stm32f1xx") (v "0.2.0") (d (list (d (n "as-slice") (r "^0.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6") (d #t) (k 0)) (d (n "cortex-m-semihosting") (r "^0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "panic-semihosting") (r "^0.5") (d #t) (k 2)) (d (n "stm32f1xx-hal") (r "^0.6") (f (quote ("rt"))) (d #t) (k 0)) (d (n "stm32f1xx-hal") (r "^0.6") (f (quote ("stm32f103" "medium"))) (d #t) (k 2)) (d (n "void") (r "^1.0") (k 0)))) (h "16117kv7dygafvz4h8m4dd0hwydw7c1jknpznfdc0asmg68y1y6n")))

(define-public crate-async-stm32f1xx-0.2.1 (c (n "async-stm32f1xx") (v "0.2.1") (d (list (d (n "as-slice") (r "^0.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6") (d #t) (k 0)) (d (n "cortex-m-semihosting") (r "^0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "panic-semihosting") (r "^0.5") (d #t) (k 2)) (d (n "stm32f1xx-hal") (r "^0.6") (f (quote ("rt"))) (d #t) (k 0)) (d (n "stm32f1xx-hal") (r "^0.6") (f (quote ("stm32f103" "medium"))) (d #t) (k 2)) (d (n "void") (r "^1.0") (k 0)))) (h "099n5xky2vr8lv37mhf29sk675yh9nswv1hm9n4kzifkqff51g3f")))

(define-public crate-async-stm32f1xx-0.3.0 (c (n "async-stm32f1xx") (v "0.3.0") (d (list (d (n "as-slice") (r "^0.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6") (d #t) (k 0)) (d (n "defmt") (r "^0.1") (d #t) (k 2)) (d (n "defmt-rtt") (r "^0.1") (d #t) (k 2)) (d (n "embedded-dma") (r "^0.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 0)) (d (n "panic-probe") (r "^0.1") (f (quote ("print-defmt"))) (d #t) (k 2)) (d (n "stm32f1xx-hal") (r "^0.7") (f (quote ("rt"))) (d #t) (k 0)) (d (n "stm32f1xx-hal") (r "^0.7") (f (quote ("stm32f103" "medium"))) (d #t) (k 2)) (d (n "void") (r "^1.0") (k 0)))) (h "0id04cnc67ma4g0dyg6fdvsiqy0hjypqcipnj12gi4hf7sh04lh8") (f (quote (("defmt-default") ("default" "defmt-default"))))))

