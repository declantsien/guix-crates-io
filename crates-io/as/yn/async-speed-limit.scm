(define-module (crates-io as yn async-speed-limit) #:use-module (crates-io))

(define-public crate-async-speed-limit-0.1.0 (c (n "async-speed-limit") (v "0.1.0") (d (list (d (n "futures-core") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "futures-timer") (r "^2.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("std" "channel" "io" "io-compat"))) (k 2)) (d (n "pin-project-lite") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "tokio") (r "^0.1.22") (f (quote ("io" "rt-full" "codec"))) (k 2)))) (h "17czpc7wmclnglqs0qrcay82znn15pvwc369vh5sr4x01j6mk91l") (f (quote (("standard-clock" "futures-timer") ("read-initializer" "futures-io/unstable" "futures-io/read-initializer") ("fused-future" "futures-core") ("doc") ("default" "futures-io" "fused-future" "standard-clock"))))))

(define-public crate-async-speed-limit-0.2.0 (c (n "async-speed-limit") (v "0.2.0") (d (list (d (n "futures-core") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "futures-timer") (r "^2.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("std" "channel" "io" "io-compat"))) (k 2)) (d (n "pin-project-lite") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "tokio") (r "^0.1.22") (f (quote ("io" "rt-full" "codec"))) (k 2)))) (h "1wg6fw7szc6s48fbrb5i54bxnb197m5asbw87mnhycy4hh7gyq49") (f (quote (("standard-clock" "futures-timer") ("read-initializer" "futures-io/unstable" "futures-io/read-initializer") ("fused-future" "futures-core") ("doc") ("default" "futures-io" "fused-future" "standard-clock"))))))

(define-public crate-async-speed-limit-0.3.0 (c (n "async-speed-limit") (v "0.3.0") (d (list (d (n "futures-core") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("std" "channel" "io" "io-compat"))) (k 2)) (d (n "pin-project-lite") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "tokio") (r "^0.1.22") (f (quote ("io" "rt-full" "codec"))) (k 2)))) (h "0p41khlnxmjdxbw543z7cdik93x8vpvqvk0sai2g59nn3zhzvi0q") (f (quote (("standard-clock" "futures-timer") ("read-initializer" "futures-io/unstable" "futures-io/read-initializer") ("fused-future" "futures-core") ("doc") ("default" "futures-io" "fused-future" "standard-clock"))))))

(define-public crate-async-speed-limit-0.3.1 (c (n "async-speed-limit") (v "0.3.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures-core") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("std" "channel" "io" "io-compat"))) (k 2)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "tokio") (r "^0.1.22") (f (quote ("io" "rt-full" "codec"))) (k 2)))) (h "0w82s65pcbyszir1zykq2i9m3xb0wxqrbvc4iq645ix4a76g8cn8") (f (quote (("standard-clock" "futures-timer") ("read-initializer" "futures-io/unstable" "futures-io/read-initializer") ("fused-future" "futures-core") ("doc") ("default" "futures-io" "fused-future" "standard-clock"))))))

(define-public crate-async-speed-limit-0.4.0 (c (n "async-speed-limit") (v "0.4.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures-core") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("std" "channel" "io" "io-compat"))) (k 2)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 2)) (d (n "tokio") (r "^0.1.22") (f (quote ("io" "rt-full" "codec"))) (k 2)))) (h "02zhs3kbs6wdnjchnyfrbn98v5vrcz5pcwsz95wld3w2db5yj728") (f (quote (("standard-clock" "futures-timer") ("read-initializer" "futures-io/unstable" "futures-io/read-initializer") ("fused-future" "futures-core") ("default" "futures-io" "fused-future" "standard-clock"))))))

(define-public crate-async-speed-limit-0.4.1 (c (n "async-speed-limit") (v "0.4.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures-core") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.19") (o #t) (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("std" "channel" "io" "io-compat"))) (k 2)) (d (n "pin-project-lite") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "rt" "macros"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6.9") (f (quote ("codec"))) (d #t) (k 2)))) (h "10zi872j1cxmgmlp0f48204daq75v4mcgyfjhw1f4jmlpz68gllp") (f (quote (("standard-clock" "futures-timer") ("read-initializer") ("fused-future" "futures-core") ("default" "futures-io" "fused-future" "standard-clock"))))))

