(define-module (crates-io as yn async-hal) #:use-module (crates-io))

(define-public crate-async-hal-0.1.0-alpha.1 (c (n "async-hal") (v "0.1.0-alpha.1") (d (list (d (n "bxcan") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "nb") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 2)))) (h "0mwnpldafvx47zghzj5hdiday525h7k8c51dqfg0cbpc63j77jz4") (f (quote (("mock") ("default" "bxcan" "mock"))))))

(define-public crate-async-hal-0.1.0-alpha.2 (c (n "async-hal") (v "0.1.0-alpha.2") (d (list (d (n "bxcan") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "nb") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 2)))) (h "111pv5lv989vl8j602z96adq149ppw54wfkx1hmid74hdymrnm9c") (f (quote (("mock") ("default" "bxcan" "mock"))))))

(define-public crate-async-hal-0.1.0-alpha.3 (c (n "async-hal") (v "0.1.0-alpha.3") (d (list (d (n "bxcan") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "nb") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 2)))) (h "0skq5d2vhn3qi8b1jvwbx7b06fqrdkv9d9m3amkw07g7f8j0frxi") (f (quote (("mock") ("default" "bxcan" "mock"))))))

(define-public crate-async-hal-0.1.0-alpha.4 (c (n "async-hal") (v "0.1.0-alpha.4") (d (list (d (n "bxcan") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (d #t) (k 0)) (d (n "fugit") (r "^0.3.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "nb") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "void") (r "^1.0.2") (o #t) (k 0)))) (h "0zflsy3qyljb8wn746vykvbk3ffhikibxbsfs78jx7hjb0r9cw2k") (f (quote (("mock") ("default" "bxcan" "mock" "nb")))) (s 2) (e (quote (("nb" "dep:nb" "void"))))))

(define-public crate-async-hal-0.1.0-alpha.5 (c (n "async-hal") (v "0.1.0-alpha.5") (d (list (d (n "bxcan") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (d #t) (k 0)) (d (n "fugit") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "nb") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "void") (r "^1.0.2") (o #t) (k 0)))) (h "0mm7gfqlnw76r41jjg6jg1grjmfp5yzgkk3wnwfv49ksd6ljw0dm") (f (quote (("mock") ("full" "bxcan" "executor" "mock" "nb") ("executor")))) (s 2) (e (quote (("nb" "fugit" "dep:nb" "void"))))))

(define-public crate-async-hal-0.1.0-alpha.6 (c (n "async-hal") (v "0.1.0-alpha.6") (d (list (d (n "bxcan") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (d #t) (k 0)) (d (n "fugit") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "nb") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (o #t) (k 0)))) (h "0khid49saiqshfjz4wms6r46m5a7mwzhns3rdpvi5g702m2azlbc") (f (quote (("mock") ("full" "bxcan" "executor" "mock" "nb") ("executor")))) (s 2) (e (quote (("nb" "fugit" "dep:nb" "void"))))))

(define-public crate-async-hal-0.1.0-alpha.7 (c (n "async-hal") (v "0.1.0-alpha.7") (d (list (d (n "bxcan") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (d #t) (k 0)) (d (n "fugit") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "nb") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "16ckm285cr0cja20qxxh0bxkviprr0nz01gdz0y53aq1k5gqx1w5") (f (quote (("mock") ("full" "bxcan" "executor" "mock" "nb") ("executor")))) (s 2) (e (quote (("nb" "fugit" "dep:nb"))))))

(define-public crate-async-hal-0.1.0-alpha.8 (c (n "async-hal") (v "0.1.0-alpha.8") (d (list (d (n "bxcan") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (d #t) (k 0)) (d (n "fugit") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "nb") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1cvlkv4csx2zdv99fpwax2vmdbhgpfayd7rjdzyki6vmbiwkr611") (f (quote (("mock") ("full" "bxcan" "executor" "mock" "nb") ("executor")))) (s 2) (e (quote (("nb" "fugit" "dep:nb"))))))

(define-public crate-async-hal-0.1.0-alpha.9 (c (n "async-hal") (v "0.1.0-alpha.9") (d (list (d (n "bxcan") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (d #t) (k 0)) (d (n "fugit") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "nb") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "usb-device") (r "^0.2.9") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0n3w1ywq9f8algi5bigqjpgq7vcsf9wrahc9mzy2m132kgsb7lda") (f (quote (("mock") ("full" "bxcan" "executor" "mock" "nb") ("executor")))) (s 2) (e (quote (("nb" "fugit" "dep:nb"))))))

(define-public crate-async-hal-0.1.0-alpha.10 (c (n "async-hal") (v "0.1.0-alpha.10") (d (list (d (n "bxcan") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (d #t) (k 0)) (d (n "fugit") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "nb") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "usb-device") (r "^0.2.9") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0lnhvy71699jvn29x8y9xqfj3bndlfyq6dgz505lkf4clw50bhb9") (f (quote (("serial") ("mock") ("io") ("full" "can" "delay" "executor" "io" "nb" "serial") ("executor") ("delay") ("can")))) (s 2) (e (quote (("nb" "fugit" "dep:nb"))))))

(define-public crate-async-hal-0.1.0-alpha.11 (c (n "async-hal") (v "0.1.0-alpha.11") (d (list (d (n "bxcan") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (d #t) (k 0)) (d (n "fugit") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "nb") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "usb-device") (r "^0.2.9") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1vfm1lbrp1w58xc4nq849mbpp6l2hzdyh178rpiaw2l3d0d7pjql") (f (quote (("serial") ("mock") ("io") ("full" "can" "delay" "executor" "io" "nb" "serial") ("executor") ("delay") ("can")))) (s 2) (e (quote (("nb" "fugit" "dep:nb"))))))

