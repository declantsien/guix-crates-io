(define-module (crates-io as yn async-raft-ext) #:use-module (crates-io))

(define-public crate-async-raft-ext-0.6.2-beta.1 (c (n "async-raft-ext") (v "0.6.2-beta.1") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (f (quote ("from"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "memstore") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.10") (d #t) (k 2)))) (h "0h1chj8nn8nwi3hwln839g4dp299lhwarhqbisdan30g7a8gyxbz") (f (quote (("docinclude"))))))

(define-public crate-async-raft-ext-0.6.2-beta.2 (c (n "async-raft-ext") (v "0.6.2-beta.2") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (f (quote ("from"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "memstore") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.10") (d #t) (k 2)))) (h "1if3sqayg8vawcszm0dha5hj08vyv0jv4bxh5qb94pcrwrmh4l66") (f (quote (("docinclude"))))))

(define-public crate-async-raft-ext-0.6.2-beta.3 (c (n "async-raft-ext") (v "0.6.2-beta.3") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (f (quote ("from"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "memstore") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.10") (d #t) (k 2)))) (h "13w2ywk3mr8fj12lf6iz5z4rp8nxj4yjkhyf861z9b41xm4w8w36") (f (quote (("docinclude"))))))

(define-public crate-async-raft-ext-0.6.2-beta.4 (c (n "async-raft-ext") (v "0.6.2-beta.4") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (f (quote ("from"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "memstore") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.10") (d #t) (k 2)))) (h "0idid9wyn2mz6pvlv771197bwmsjs189fwq13jlx0sk2lq43dmsh") (f (quote (("docinclude"))))))

(define-public crate-async-raft-ext-0.6.2 (c (n "async-raft-ext") (v "0.6.2") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (f (quote ("from"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "memstore") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.10") (d #t) (k 2)))) (h "08a9nh3np3ra5f15xgx8b13f90vsb07pkgvkmdyggjdzmizawkvm") (f (quote (("docinclude"))))))

(define-public crate-async-raft-ext-0.6.3-beta.1 (c (n "async-raft-ext") (v "0.6.3-beta.1") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (f (quote ("from"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "memstore") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.10") (d #t) (k 2)))) (h "02mxfp3jhal7n2liyva27k2a6y94n0rzad5ny9y247i12pinb2aq") (f (quote (("docinclude"))))))

(define-public crate-async-raft-ext-0.6.3-beta.2 (c (n "async-raft-ext") (v "0.6.3-beta.2") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (f (quote ("from"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "memstore") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.10") (d #t) (k 2)))) (h "0agri887swnrd5s23b2fsrziicdlnjbsxblx0azyh8lgny9zdmwc") (f (quote (("docinclude"))))))

(define-public crate-async-raft-ext-0.6.3 (c (n "async-raft-ext") (v "0.6.3") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (f (quote ("from"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "memstore") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.10") (d #t) (k 2)))) (h "0ilmg1dyz8l87s51p7l7iqchdlp0np7vhb20wh6c4pscngg9jvad") (f (quote (("docinclude"))))))

