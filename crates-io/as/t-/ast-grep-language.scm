(define-module (crates-io as t- ast-grep-language) #:use-module (crates-io))

(define-public crate-ast-grep-language-0.1.14 (c (n "ast-grep-language") (v "0.1.14") (d (list (d (n "ast-grep-core") (r "^0.1.14") (d #t) (k 0)) (d (n "ignore") (r "^0.4.18") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-go") (r "^0.19.1") (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.14") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.4") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.1") (d #t) (k 0)))) (h "12k3s5sxg2wwksrbn9hrl4p1w1jhvj1vbkp06b8jyz97p12pb2w8") (r "1.63")))

(define-public crate-ast-grep-language-0.1.15 (c (n "ast-grep-language") (v "0.1.15") (d (list (d (n "ast-grep-core") (r "^0.1.15") (d #t) (k 0)) (d (n "ignore") (r "^0.4.18") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.1") (o #t) (d #t) (k 0)))) (h "0313mc2ynymi898bb5vsv9q0dhnr6gdqadhy53cbvyb6n9ca5mm7") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-typescript" "tree-sitter-c-sharp")))) (r "1.63")))

(define-public crate-ast-grep-language-0.1.16 (c (n "ast-grep-language") (v "0.1.16") (d (list (d (n "ast-grep-core") (r "^0.1.16") (d #t) (k 0)) (d (n "ignore") (r "^0.4.19") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.1") (o #t) (d #t) (k 0)))) (h "1d8g3zj37zw78cap4xjbqzrkl5773dq2swl762k5h7wkgn4c79zv") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-typescript" "tree-sitter-c-sharp")))) (r "1.63")))

(define-public crate-ast-grep-language-0.1.17 (c (n "ast-grep-language") (v "0.1.17") (d (list (d (n "ast-grep-core") (r "^0.1.17") (d #t) (k 0)) (d (n "ignore") (r "^0.4.19") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.1") (o #t) (d #t) (k 0)))) (h "1cm36lmsr2b2vk09pbpkmalcbk8q67zscmzab3527fq46jjljml6") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-typescript" "tree-sitter-c-sharp")))) (r "1.63")))

(define-public crate-ast-grep-language-0.1.18 (c (n "ast-grep-language") (v "0.1.18") (d (list (d (n "ast-grep-core") (r "^0.1.18") (d #t) (k 0)) (d (n "ignore") (r "^0.4.19") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.1") (o #t) (d #t) (k 0)))) (h "0dmaah7mwcm4kfiskkwxfhkvkm3h949wkink76zyaq9hbhfn6yzy") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-typescript" "tree-sitter-c-sharp")))) (r "1.63")))

(define-public crate-ast-grep-language-0.2.0 (c (n "ast-grep-language") (v "0.2.0") (d (list (d (n "ast-grep-core") (r "^0.2.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.1") (o #t) (d #t) (k 0)))) (h "01s5p6lxfd74axqzblwyi2y2as9gqs9rh7g23zfbjmwjxfg6cb33") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-typescript" "tree-sitter-c-sharp")))) (r "1.63")))

(define-public crate-ast-grep-language-0.2.1 (c (n "ast-grep-language") (v "0.2.1") (d (list (d (n "ast-grep-core") (r "^0.2.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.1") (o #t) (d #t) (k 0)))) (h "044hpkqashg4zdywcfaalhig3x4gs2ic0gpjvdpl7njh64y75lpn") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-typescript" "tree-sitter-c-sharp")))) (r "1.63")))

(define-public crate-ast-grep-language-0.2.2 (c (n "ast-grep-language") (v "0.2.2") (d (list (d (n "ast-grep-core") (r "^0.2.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.1") (o #t) (d #t) (k 0)))) (h "0x0wdpghcf94gxh9ha0b96qdvwyzwxmp6j1vvd5krmpd5nl8xnqz") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-typescript" "tree-sitter-c-sharp")))) (r "1.63")))

(define-public crate-ast-grep-language-0.2.3 (c (n "ast-grep-language") (v "0.2.3") (d (list (d (n "ast-grep-core") (r "^0.2.3") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.1") (o #t) (d #t) (k 0)))) (h "1fsakc1kjhm8hsg963z6b2vccjkkn6v3ssclsj4zi7g4bbcq84v8") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-typescript" "tree-sitter-c-sharp")))) (r "1.63")))

(define-public crate-ast-grep-language-0.2.6 (c (n "ast-grep-language") (v "0.2.6") (d (list (d (n "ast-grep-core") (r "^0.2.6") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "0vxhvs090sdbbxihxx4r805am7l8fa0fk1xffxcar638cx4nml65") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-typescript" "tree-sitter-c-sharp")))) (r "1.63")))

(define-public crate-ast-grep-language-0.3.0 (c (n "ast-grep-language") (v "0.3.0") (d (list (d (n "ast-grep-core") (r "^0.3.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "1y01hpbljdpa68z9khm0n0w27fzlgblr2mr4s5pc778raaz6ifp6") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-typescript" "tree-sitter-thrift" "tree-sitter-c-sharp")))) (r "1.63")))

(define-public crate-ast-grep-language-0.3.1 (c (n "ast-grep-language") (v "0.3.1") (d (list (d (n "ast-grep-core") (r "^0.3.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "0izazhy3prd9janqg2d7f3rfwm32wx1yhycl0nz4s18h4hz75zzd") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-typescript" "tree-sitter-thrift" "tree-sitter-c-sharp")))) (r "1.63")))

(define-public crate-ast-grep-language-0.3.2 (c (n "ast-grep-language") (v "0.3.2") (d (list (d (n "ast-grep-core") (r "^0.3.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "157xdsk2cvd984nsqzsah2jrq1kpahdjlazyplhvwf2dqxdj4wzx") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-typescript" "tree-sitter-thrift" "tree-sitter-c-sharp")))) (r "1.63")))

(define-public crate-ast-grep-language-0.3.3 (c (n "ast-grep-language") (v "0.3.3") (d (list (d (n "ast-grep-core") (r "^0.3.3") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "1li1nmhl0v0bfy4xh0j0finrb2r7y06f43i88q4j9zayvwffrbi6") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-typescript" "tree-sitter-thrift" "tree-sitter-c-sharp")))) (r "1.63")))

(define-public crate-ast-grep-language-0.4.0 (c (n "ast-grep-language") (v "0.4.0") (d (list (d (n "ast-grep-core") (r "^0.4.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "0431zh0xg6xpyvhdmqf6a57rkhjafqnrvapbvdf00swk8japm7mi") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-typescript" "tree-sitter-thrift" "tree-sitter-c-sharp")))) (r "1.63")))

(define-public crate-ast-grep-language-0.4.1 (c (n "ast-grep-language") (v "0.4.1") (d (list (d (n "ast-grep-core") (r "^0.4.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "04ja2ihyg8zhin8b83pnxyiyc2wp3nn03ss4vmrcssgs0xbsy1f6") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-typescript" "tree-sitter-thrift" "tree-sitter-c-sharp")))) (r "1.63")))

(define-public crate-ast-grep-language-0.5.0 (c (n "ast-grep-language") (v "0.5.0") (d (list (d (n "ast-grep-core") (r "^0.5.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "13a4p640j486wjaanvz0jk01m410ydinkxjqjfjp3a452h42cni3") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-typescript" "tree-sitter-thrift" "tree-sitter-c-sharp")))) (r "1.63")))

(define-public crate-ast-grep-language-0.5.1 (c (n "ast-grep-language") (v "0.5.1") (d (list (d (n "ast-grep-core") (r "^0.5.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "06wzk54wgwyfj3fpkzn6p0g0hfw422jifj4d2bpw18kg0hmc3my7") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-typescript" "tree-sitter-thrift" "tree-sitter-c-sharp")))) (r "1.63")))

(define-public crate-ast-grep-language-0.5.2 (c (n "ast-grep-language") (v "0.5.2") (d (list (d (n "ast-grep-core") (r "^0.5.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.17") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "1wj69sjc01h6krapl3q13lv1li70xazxfiipawxcqb57m3pw33gr") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-typescript" "tree-sitter-thrift" "tree-sitter-c-sharp")))) (r "1.63")))

(define-public crate-ast-grep-language-0.5.3 (c (n "ast-grep-language") (v "0.5.3") (d (list (d (n "ast-grep-core") (r "^0.5.3") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.17") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "1p4disw03w7821x1jaidj8qzwnj7x13js4lcjigrbai71phm679a") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-typescript" "tree-sitter-thrift" "tree-sitter-c-sharp")))) (r "1.63")))

(define-public crate-ast-grep-language-0.5.5 (c (n "ast-grep-language") (v "0.5.5") (d (list (d (n "ast-grep-core") (r "^0.5.5") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.17") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "046bs8yygd2bpa982vbcisy18mdbmg7acws87svmyiz0msm2kr8c") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.5.6 (c (n "ast-grep-language") (v "0.5.6") (d (list (d (n "ast-grep-core") (r "^0.5.6") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.17") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "16q2934m4nb9kj0dpdmgsmaqax6xz29n5wazkyzyc3l7p2cw77pz") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.5.7 (c (n "ast-grep-language") (v "0.5.7") (d (list (d (n "ast-grep-core") (r "^0.5.7") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.17") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "1nbbb2cq5dwqkfaxnk2dzl11mjw5qji94i04siy2y15x6ng8c8yv") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.6.0 (c (n "ast-grep-language") (v "0.6.0") (d (list (d (n "ast-grep-core") (r "^0.6.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.17") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "0ng0l4cxma03vsfyphwpd3fji35rndmj9nxjw7f6bsd64qr1haws") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.6.1 (c (n "ast-grep-language") (v "0.6.1") (d (list (d (n "ast-grep-core") (r "^0.6.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.17") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "075nnyakvz0133pm05j6l3v7icbg2931v50k7vi6i756fvrlhlhi") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.6.2 (c (n "ast-grep-language") (v "0.6.2") (d (list (d (n "ast-grep-core") (r "^0.6.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.17") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "1x41n14cn68mmn61wgfllfk3ny0kijq8hjnvzvnxkdcw5rmwj40n") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.6.3 (c (n "ast-grep-language") (v "0.6.3") (d (list (d (n "ast-grep-core") (r "^0.6.3") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.17") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "0flrpm0bjn189s6j47gxq088kj5zmk3ryzg12f3mxm4zvj545gq8") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.6.4 (c (n "ast-grep-language") (v "0.6.4") (d (list (d (n "ast-grep-core") (r "^0.6.4") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.17") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "0ldzryga567i5ai0l13a94jbpvm21dxijszjvg6a62klhcbysav5") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.6.5 (c (n "ast-grep-language") (v "0.6.5") (d (list (d (n "ast-grep-core") (r "^0.6.5") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.17") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "0hrzdcvgrzg2vfvlcnb4aana1jbd9ygxxh2pizy8zi0flz44q9fm") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.6.6 (c (n "ast-grep-language") (v "0.6.6") (d (list (d (n "ast-grep-core") (r "^0.6.6") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.17") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "064c1mhgjn7lmd7bynglh0ylaf9pfb2frjs9m75lhnvbywwbgi3w") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.6.7 (c (n "ast-grep-language") (v "0.6.7") (d (list (d (n "ast-grep-core") (r "^0.6.7") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.17") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "0fvaknvx5gafd6y7x8fj68ag57n37cv9bbslmnc2q3ify1qgs9pc") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.7.0 (c (n "ast-grep-language") (v "0.7.0") (d (list (d (n "ast-grep-core") (r "^0.7.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.18") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "1x6a0151bhbrzrnz0qrmf41i43nd948vfv6vs4shydjpzj52b9bj") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.7.1 (c (n "ast-grep-language") (v "0.7.1") (d (list (d (n "ast-grep-core") (r "^0.7.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.18") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "0fm09164pc2zy56mpbpxrypfcwnq5ykg23nr0aqvl19474dyi8s3") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.7.2 (c (n "ast-grep-language") (v "0.7.2") (d (list (d (n "ast-grep-core") (r "^0.7.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.18") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "0hil89f6848ca310lnwj8lpq9q09wkjinrdhcfwnc64104baqlp8") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.8.0 (c (n "ast-grep-language") (v "0.8.0") (d (list (d (n "ast-grep-core") (r "^0.8.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.18") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "05q3hkhxk06m1qhxqc9avk1k2awrm8pghjxp9jk2yj4qm5768csw") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.9.0 (c (n "ast-grep-language") (v "0.9.0") (d (list (d (n "ast-grep-core") (r "^0.9.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.18") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "1l7krdiq2gkwdvlpb9g7sws3qfm63nfirvz9yah06fybp1dv7pv5") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.9.1 (c (n "ast-grep-language") (v "0.9.1") (d (list (d (n "ast-grep-core") (r "^0.9.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.18") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "0xw1sw0gicx6w3pilqiagjzp9304il3imkmkzzm3m4fwrilhb494") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.9.2 (c (n "ast-grep-language") (v "0.9.2") (d (list (d (n "ast-grep-core") (r "^0.9.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.18") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "0rq2k58vm9jj20wqnf9kh4j9d612xsn1s8835xaljz9raacrrr9z") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.9.3 (c (n "ast-grep-language") (v "0.9.3") (d (list (d (n "ast-grep-core") (r "^0.9.3") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.18") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "124ibj4yfbfg8brjykknvh14y2c74z9a0l4xfhfp99ism7mrmz0w") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.10.0 (c (n "ast-grep-language") (v "0.10.0") (d (list (d (n "ast-grep-core") (r "^0.10.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.18") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "139a5alh57n6aximdqngn42albyn2j5vvwinhh2n4cs2figb36vl") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.10.1 (c (n "ast-grep-language") (v "0.10.1") (d (list (d (n "ast-grep-core") (r "^0.10.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.18") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "05y7ik5l7gcfxg2fvs9fsfpmmqzg8nk3p6pzggfmmh6fpw8w3wfn") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.11.0 (c (n "ast-grep-language") (v "0.11.0") (d (list (d (n "ast-grep-core") (r "^0.11.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.18") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "145afyaginxdh1wvmd24m4d8awpgr79m1q4gqngqf3j7aiaipw93") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.11.1 (c (n "ast-grep-language") (v "0.11.1") (d (list (d (n "ast-grep-core") (r "^0.11.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.18") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "0v9k9jphyh8fw7my1g7nlp95jbz73plfvcapsyhagn3mkw9hym75") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.12.0 (c (n "ast-grep-language") (v "0.12.0") (d (list (d (n "ast-grep-core") (r "^0.12.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "0ygy8b1v0gxsvk3scw93jyx3bd7g25czvzlzriw1igpwiam6j101") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.12.1 (c (n "ast-grep-language") (v "0.12.1") (d (list (d (n "ast-grep-core") (r "^0.12.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "0mnzlpkm1nalbx1h19saa72lyqhr9whkyv0rzdqazqhqdv2pz4kr") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.12.2 (c (n "ast-grep-language") (v "0.12.2") (d (list (d (n "ast-grep-core") (r "^0.12.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "029asknasyiqn7xvp896w2wy579f15bx1h5zfd5h81iifx35xy6q") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.12.3 (c (n "ast-grep-language") (v "0.12.3") (d (list (d (n "ast-grep-core") (r "^0.12.3") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "09ih37r9ddzhp2wacx1h17l0ls72px7qc7kr15s2fxvgx8kdrd21") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.12.4 (c (n "ast-grep-language") (v "0.12.4") (d (list (d (n "ast-grep-core") (r "^0.12.4") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "1y10ga0r0mbl4v2zsv19wpk2jlgabvqac49c2aj7a3ckn7c4fv7n") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.12.5 (c (n "ast-grep-language") (v "0.12.5") (d (list (d (n "ast-grep-core") (r "^0.12.5") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "101x8pc2dxmhlz06s05yrydm4afypqb50xpnxijjhk38v9ijg6gv") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.13.0 (c (n "ast-grep-language") (v "0.13.0") (d (list (d (n "ast-grep-core") (r "^0.13.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "06q5f83bxb4rayhjlbbn8avcys4nv2apg97v9w931ckkfq91nnlw") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.13.1 (c (n "ast-grep-language") (v "0.13.1") (d (list (d (n "ast-grep-core") (r "^0.13.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "1bjlrizsvqsnbj14blkd16zsrzy4kh6cw3av4kham170sixjvla8") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.13.2 (c (n "ast-grep-language") (v "0.13.2") (d (list (d (n "ast-grep-core") (r "^0.13.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "1wrz71hymksdc28x907bf9hx2g06fwcz9iqk02jh6dpnh20sv9gw") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.14.0 (c (n "ast-grep-language") (v "0.14.0") (d (list (d (n "ast-grep-core") (r "^0.14.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.21") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "0wzqxq02f0rqbdniavi05kssrg74sq59mmfqp40y28cwfldaya7a") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.14.1 (c (n "ast-grep-language") (v "0.14.1") (d (list (d (n "ast-grep-core") (r "^0.14.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.21") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "1hpm5hq8h2h9vybh3gy8gpxz6bqrqi3vw32pc3ixr9mz9a40chy7") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.14.2 (c (n "ast-grep-language") (v "0.14.2") (d (list (d (n "ast-grep-core") (r "^0.14.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4.21") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "07blki3l7gkxx7kl0ix8bih9bpfdzm90rwqmgg5nsfj6xa9l6q8m") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.14.3 (c (n "ast-grep-language") (v "0.14.3") (d (list (d (n "ast-grep-core") (r "^0.14.3") (d #t) (k 0)) (d (n "ignore") (r "^0.4.21") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "187pv96nkbrsivdasiwi3x1vg85mf5z4pj7cdzp71h1rijmfzz2g") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.14.4 (c (n "ast-grep-language") (v "0.14.4") (d (list (d (n "ast-grep-core") (r "^0.14.4") (d #t) (k 0)) (d (n "ignore") (r "^0.4.21") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "1m5nr9mzjfxgi5ca3f6hgxdblm0f2aylfizf4c1r2flkb2fa22dm") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.15.0 (c (n "ast-grep-language") (v "0.15.0") (d (list (d (n "ast-grep-core") (r "^0.15.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.21") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "0k3ldrspcv5a0ahfd1xhsazj96rhpqzhl24pbqfzci51id8bxkbv") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.15.1 (c (n "ast-grep-language") (v "0.15.1") (d (list (d (n "ast-grep-core") (r "^0.15.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.21") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "0rd9mxnfg59mdx0450d0cd3fq0pfg4wg6vb2sl0005kv4vjhm7jp") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.16.0 (c (n "ast-grep-language") (v "0.16.0") (d (list (d (n "ast-grep-core") (r "^0.16.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.21") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0) (p "tree-sitter-html-dvdb")) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-thrift") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "1fznb66g5v41qd3vzm07iwglflibinjmgvv0fyx0sqkznm0qlijx") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-thrift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.16.1 (c (n "ast-grep-language") (v "0.16.1") (d (list (d (n "ast-grep-core") (r "^0.16.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.21") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0) (p "tree-sitter-html-dvdb")) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "01k0chs9h4123z5y3c96qiyvg8d13dg9zqyga52i9aag2dw7hwf0") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.17.0 (c (n "ast-grep-language") (v "0.17.0") (d (list (d (n "ast-grep-core") (r "^0.17.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0) (p "tree-sitter-html-dvdb")) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "1isq6g3szkx0h415zdkgx9svmbaavq97gg5yz26wyjwifdzwji04") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.17.1 (c (n "ast-grep-language") (v "0.17.1") (d (list (d (n "ast-grep-core") (r "^0.17.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0) (p "tree-sitter-html-dvdb")) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "0wb9gaid2fsmmrwj39jxlvafc5ss986daq764vjg5mhsxlsy3v3g") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.18.0 (c (n "ast-grep-language") (v "0.18.0") (d (list (d (n "ast-grep-core") (r "^0.18.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0) (p "tree-sitter-html-dvdb")) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "0zryann027kpivpp5q4rfd646pf2f07w0bk0rf931r0cdkw8fnqm") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.18.1 (c (n "ast-grep-language") (v "0.18.1") (d (list (d (n "ast-grep-core") (r "^0.18.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0) (p "tree-sitter-html-dvdb")) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "06skhw42hpg9vc22c3i6gcbb2m0gz47lxm2ngqxjal9cqnw5ak35") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.19.0 (c (n "ast-grep-language") (v "0.19.0") (d (list (d (n "ast-grep-core") (r "^0.19.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.7") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0) (p "tree-sitter-html-dvdb")) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.5") (o #t) (d #t) (k 0)))) (h "0wffp6nypfjrv7qvqnq9v1nv91q3jq46c4r2lljn8l48bf0f5sxj") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.19.1 (c (n "ast-grep-language") (v "0.19.1") (d (list (d (n "ast-grep-core") (r "^0.19.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.8") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0) (p "tree-sitter-html-dvdb")) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.5") (o #t) (d #t) (k 0)))) (h "0wqxd3vpk6j776575bs70mqd77h5snz7wigccfm2qb5g2f3f73kz") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.19.2 (c (n "ast-grep-language") (v "0.19.2") (d (list (d (n "ast-grep-core") (r "^0.19.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.8") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0) (p "tree-sitter-html-dvdb")) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.5") (o #t) (d #t) (k 0)))) (h "1c42v9r4mgb2kwg15rxhh2ji2f6azizl2h2kvx572x8igfq170mx") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.19.3 (c (n "ast-grep-language") (v "0.19.3") (d (list (d (n "ast-grep-core") (r "^0.19.3") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.8") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0) (p "tree-sitter-html-dvdb")) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.5") (o #t) (d #t) (k 0)))) (h "0ns5k4f3q2sda1vqkvsls8hmsq1gnfbp6r3yqiaa138z4m5pk2rn") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.19.4 (c (n "ast-grep-language") (v "0.19.4") (d (list (d (n "ast-grep-core") (r "^0.19.4") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.8") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0) (p "tree-sitter-html-dvdb")) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.22.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.5") (o #t) (d #t) (k 0)))) (h "1wyy2qs8dfx0xf72dmmwz5idz3r4vyar1ignbrbs53c87mj67kdm") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.20.0 (c (n "ast-grep-language") (v "0.20.0") (d (list (d (n "ast-grep-core") (r "^0.20.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.8") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0) (p "tree-sitter-html-dvdb")) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.22.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.5") (o #t) (d #t) (k 0)))) (h "0hgdgalrdaxh5vr9wf581qf44yygdqfcfb8vza85n94g087z2ia4") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.20.1 (c (n "ast-grep-language") (v "0.20.1") (d (list (d (n "ast-grep-core") (r "^0.20.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.8") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0) (p "tree-sitter-html-dvdb")) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.22.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.5") (o #t) (d #t) (k 0)))) (h "1v1731d77nxj572lx701rbx6qqlafznj27rs2bxzyhrzxi27y752") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.20.2 (c (n "ast-grep-language") (v "0.20.2") (d (list (d (n "ast-grep-core") (r "^0.20.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.8") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0) (p "ast-grep-tree-sitter-c-sharp")) (d (n "tree-sitter-cpp") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0) (p "tree-sitter-html-dvdb")) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.22.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.5") (o #t) (d #t) (k 0)))) (h "12hm34yn6y95sg2vsrqwaawdghlw98zwdck3dgjzrpp926zr5z9g") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.20.3 (c (n "ast-grep-language") (v "0.20.3") (d (list (d (n "ast-grep-core") (r "^0.20.3") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.8") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.22.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.5") (o #t) (d #t) (k 0)))) (h "0h8s575d65s5n1bx1vqwzkzns72gyamzgijs6fny0cc0y23p9kg3") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.20.4 (c (n "ast-grep-language") (v "0.20.4") (d (list (d (n "ast-grep-core") (r "^0.20.4") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.8") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.22.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.5") (o #t) (d #t) (k 0)))) (h "154dsyfp8cv5k30vz20lbsyh5qdib28sz9fnix0q2xjqdyqzvr2v") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.20.5 (c (n "ast-grep-language") (v "0.20.5") (d (list (d (n "ast-grep-core") (r "^0.20.5") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.8") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.22.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.5") (o #t) (d #t) (k 0)))) (h "01fhna90508q1bap54xx21qnr5qh8cvr224gvxn80q7xf2xbjinq") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.21.0 (c (n "ast-grep-language") (v "0.21.0") (d (list (d (n "ast-grep-core") (r "^0.21.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.8") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.22.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.5") (o #t) (d #t) (k 0)))) (h "1cdq75wnk8njf1vfzx6gcchz5qpfnbxwpa5w6fm6inv00wq5wvpk") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.21.1 (c (n "ast-grep-language") (v "0.21.1") (d (list (d (n "ast-grep-core") (r "^0.21.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.8") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.22.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.5") (o #t) (d #t) (k 0)))) (h "1ka90v6hcx9jnc8fi7xvgx5k3wzx86sj2jwxmva1xr6ym0662yr9") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.21.2 (c (n "ast-grep-language") (v "0.21.2") (d (list (d (n "ast-grep-core") (r "^0.21.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.8") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.22.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.5") (o #t) (d #t) (k 0)))) (h "0nky03j2aknvnz3x0caz6srxvyxz9lvrylfj9b9gsvfzv7b80ib2") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.63")))

(define-public crate-ast-grep-language-0.21.3 (c (n "ast-grep-language") (v "0.21.3") (d (list (d (n "ast-grep-core") (r "^0.21.3") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.8") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.22.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.5") (o #t) (d #t) (k 0)))) (h "01bl3r60vfgfzyvq01xxi2lz3k59f4aqdz621nq2fd6b8xda4qf8") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.67")))

(define-public crate-ast-grep-language-0.21.4 (c (n "ast-grep-language") (v "0.21.4") (d (list (d (n "ast-grep-core") (r "^0.21.4") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.200") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.8") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "=0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "=0.22.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.5") (o #t) (d #t) (k 0)))) (h "1f857db3i6rw1vj7b13vbjfy040pzd5w4y8cijb7z4ksb5z61ija") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.67")))

(define-public crate-ast-grep-language-0.22.0 (c (n "ast-grep-language") (v "0.22.0") (d (list (d (n "ast-grep-core") (r "^0.22.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.200") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.21.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.21.2") (o #t) (d #t) (k 0) (p "tree-sitter-javascript-sg")) (d (n "tree-sitter-json") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.22.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "=0.4.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.21.1") (o #t) (d #t) (k 0)))) (h "1vswn8325cl49imziqp5dvh8pap69mrb42xmab7b4iaq8zac4py8") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.67")))

(define-public crate-ast-grep-language-0.22.1 (c (n "ast-grep-language") (v "0.22.1") (d (list (d (n "ast-grep-core") (r "^0.22.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.200") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.21.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-haskell") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.21.2") (o #t) (d #t) (k 0) (p "tree-sitter-javascript-sg")) (d (n "tree-sitter-json") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.22.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "=0.4.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.21.1") (o #t) (d #t) (k 0)))) (h "1irp9753n3yla286mddzkvgsafsymqsqc1n4svddkflrjhm8dck1") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-haskell" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.67")))

(define-public crate-ast-grep-language-0.22.2 (c (n "ast-grep-language") (v "0.22.2") (d (list (d (n "ast-grep-core") (r "^0.22.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.200") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.21.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-haskell") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.21.2") (o #t) (d #t) (k 0) (p "tree-sitter-javascript-sg")) (d (n "tree-sitter-json") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.22.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "=0.4.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.21.1") (o #t) (d #t) (k 0)))) (h "06ynhcvfc8fawyx6iqgbsgainvsjk2x53qripl7za9jvqj6dzimj") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-haskell" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.67")))

(define-public crate-ast-grep-language-0.22.3 (c (n "ast-grep-language") (v "0.22.3") (d (list (d (n "ast-grep-core") (r "^0.22.3") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.200") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.21.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-haskell") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.21.2") (o #t) (d #t) (k 0) (p "tree-sitter-javascript-sg")) (d (n "tree-sitter-json") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.22.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "=0.4.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.21.1") (o #t) (d #t) (k 0)))) (h "0yiv7q14mpdph1z3vyjby05rhrp3cyhlii8qmf07j539123j39ga") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-haskell" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.67")))

(define-public crate-ast-grep-language-0.22.4 (c (n "ast-grep-language") (v "0.22.4") (d (list (d (n "ast-grep-core") (r "^0.22.4") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.200") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.21.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-haskell") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.21.2") (o #t) (d #t) (k 0) (p "tree-sitter-javascript-sg")) (d (n "tree-sitter-json") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.22.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "=0.4.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.21.1") (o #t) (d #t) (k 0)))) (h "1jx2fh94l0dza1qmwjhn3xiw4dr8w5l4q1y6gqgsfkyd1yrpq1dx") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-haskell" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.67")))

(define-public crate-ast-grep-language-0.22.5 (c (n "ast-grep-language") (v "0.22.5") (d (list (d (n "ast-grep-core") (r "^0.22.5") (d #t) (k 0)) (d (n "ignore") (r "^0.4.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.200") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tree-sitter-bash") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.21.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-dart") (r "^0.0.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-elixir") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-haskell") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.21.2") (o #t) (d #t) (k 0) (p "tree-sitter-javascript-sg")) (d (n "tree-sitter-json") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-php") (r "^0.22.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-swift") (r "=0.4.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.21.1") (o #t) (d #t) (k 0)))) (h "0gdc7ibp3xxnrhbszaf5wi8ga4hf3yydqhq0m3h1njf1mzniw9vq") (f (quote (("default" "builtin-parser") ("builtin-parser" "tree-sitter-bash" "tree-sitter-c" "tree-sitter-cpp" "tree-sitter-c-sharp" "tree-sitter-css" "tree-sitter-dart" "tree-sitter-elixir" "tree-sitter-go" "tree-sitter-haskell" "tree-sitter-html" "tree-sitter-java" "tree-sitter-javascript" "tree-sitter-json" "tree-sitter-kotlin" "tree-sitter-lua" "tree-sitter-php" "tree-sitter-python" "tree-sitter-ruby" "tree-sitter-rust" "tree-sitter-scala" "tree-sitter-swift" "tree-sitter-typescript")))) (r "1.67")))

