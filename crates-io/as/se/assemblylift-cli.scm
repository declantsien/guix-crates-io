(define-module (crates-io as se assemblylift-cli) #:use-module (crates-io))

(define-public crate-assemblylift-cli-0.1.0 (c (n "assemblylift-cli") (v "0.1.0") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "handlebars") (r "^3.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "zip") (r "^0.5.6") (d #t) (k 0)))) (h "1pmahifyvikllg1hzld8z130vyb0ji1cqmdzjkwyfc3ri0hiigk3")))

(define-public crate-assemblylift-cli-0.1.1 (c (n "assemblylift-cli") (v "0.1.1") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "handlebars") (r "^3.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "zip") (r "^0.5.6") (d #t) (k 0)))) (h "106qpgzgn2y75r5fg9xq2g5jk95qmvhx79ccm37wqx61wfmgx4kc")))

(define-public crate-assemblylift-cli-0.1.2 (c (n "assemblylift-cli") (v "0.1.2") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "handlebars") (r "^3.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.111") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "zip") (r "^0.5.6") (d #t) (k 0)))) (h "0q8yz6pd31lmqj7f2rmv35m0q41yhicb1sy3n7hanl6czrwakyfh")))

(define-public crate-assemblylift-cli-0.2.0 (c (n "assemblylift-cli") (v "0.2.0") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "handlebars") (r "^3.0.1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.111") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "zip") (r "^0.5.6") (d #t) (k 0)))) (h "10ng2vs25a1dv3k7b6s3l6mdlapi15hlhcnwnnq1w107igwm5182")))

(define-public crate-assemblylift-cli-0.2.1 (c (n "assemblylift-cli") (v "0.2.1") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "handlebars") (r "^3.0.1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.111") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)) (d (n "zip") (r "^0.5.6") (d #t) (k 0)))) (h "1nfyql7xvaclrhgxx30486cvnxbppdgd84wsn8j39kfbcqvbp0vf")))

(define-public crate-assemblylift-cli-0.2.2 (c (n "assemblylift-cli") (v "0.2.2") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "handlebars") (r "^3.0.1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.111") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)) (d (n "zip") (r "^0.5.6") (d #t) (k 0)))) (h "1ljd38zlhy512bmb216ca8nxmk8lppd96jp0rqqvvm0idv5mrqjg")))

(define-public crate-assemblylift-cli-0.2.3 (c (n "assemblylift-cli") (v "0.2.3") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "handlebars") (r "^3.0.1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.111") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)) (d (n "zip") (r "^0.5.6") (d #t) (k 0)))) (h "0k3zbsig2db2593dh5n9xhc9p7idri1gnf8z1kszmjp3cb9xxa1g") (y #t)))

(define-public crate-assemblylift-cli-0.2.4 (c (n "assemblylift-cli") (v "0.2.4") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "handlebars") (r "^3.0.1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.111") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)) (d (n "zip") (r "^0.5.6") (d #t) (k 0)))) (h "0akv4xjvfzii6mjl9cjnp3ddxpdrfwjj6s5jis3hjmdm8idbp6bi") (y #t)))

(define-public crate-assemblylift-cli-0.2.5 (c (n "assemblylift-cli") (v "0.2.5") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "handlebars") (r "^3.0.1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.111") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)) (d (n "zip") (r "^0.5.6") (d #t) (k 0)))) (h "1sykh7jy7h1bisjvhw7qj1l761ssqgard9881vdd0im0nj9xkab2")))

(define-public crate-assemblylift-cli-0.2.6 (c (n "assemblylift-cli") (v "0.2.6") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "handlebars") (r "^3.0.1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.111") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)) (d (n "zip") (r "^0.5.6") (d #t) (k 0)))) (h "180ayhz222gh22sjk59yggwkq98i68fa45bh6bjqzpafcvd6acsw")))

(define-public crate-assemblylift-cli-0.2.7 (c (n "assemblylift-cli") (v "0.2.7") (d (list (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "handlebars") (r "^3.5.1") (d #t) (k 0)) (d (n "path_abs") (r "^0.5.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.111") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)) (d (n "zip") (r "^0.5.6") (d #t) (k 0)))) (h "1gij4ll94wbcapkjx93n8j8xkf9wjyflpp3pb4k6n85dy3j3r9cf")))

(define-public crate-assemblylift-cli-0.2.8 (c (n "assemblylift-cli") (v "0.2.8") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "handlebars") (r "^3.5.2") (d #t) (k 0)) (d (n "path_abs") (r "^0.5.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.10") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)) (d (n "zip") (r "^0.5.9") (d #t) (k 0)))) (h "0rr38gcgxdms6m8ss65f7h9jq521yl9niz7c3cn49bma4yl5bkm6")))

(define-public crate-assemblylift-cli-0.2.9 (c (n "assemblylift-cli") (v "0.2.9") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "handlebars") (r "^3.5.2") (d #t) (k 0)) (d (n "path_abs") (r "^0.5.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.10") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)) (d (n "wasmer") (r "^1.0") (d #t) (k 0) (p "wasmer-asml-fork")) (d (n "wasmer-compiler") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-engine-native") (r "^1.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.9") (d #t) (k 0)))) (h "11qkpmp5v5jk889r9hndinraffppgq7sygh2ym9y43jmiqw7f2y5")))

(define-public crate-assemblylift-cli-0.3.0 (c (n "assemblylift-cli") (v "0.3.0") (d (list (d (n "assemblylift_core_iomod") (r "^0.3.0") (d #t) (k 0) (p "assemblylift-core-iomod")) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "handlebars") (r "^3.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 0)) (d (n "registry_common") (r "^0.1") (d #t) (k 0) (p "asml-iomod-registry-common")) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "wasmer") (r "^1.0") (d #t) (k 0) (p "wasmer-asml-fork")) (d (n "wasmer-compiler") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-engine-jit") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-engine-native") (r "^1.0") (d #t) (k 0)) (d (n "z85") (r "^3") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "1j06iknv5ik4kqh3i4frxn783r3p8af6mvirqvj1f2ygjmx41rx5")))

(define-public crate-assemblylift-cli-0.3.1 (c (n "assemblylift-cli") (v "0.3.1") (d (list (d (n "assemblylift_core_iomod") (r "^0.3") (d #t) (k 0) (p "assemblylift-core-iomod")) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "handlebars") (r "^3.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 0)) (d (n "registry_common") (r "^0.1") (d #t) (k 0) (p "asml-iomod-registry-common")) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "wasmer") (r "^1.0") (d #t) (k 0) (p "wasmer-asml-fork")) (d (n "wasmer-compiler") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-engine-jit") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-engine-native") (r "^1.0") (d #t) (k 0)) (d (n "z85") (r "^3") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "1hz1n8gsgxwqn2qj65w9ir2x7xjb81v7s2rvknrg39zryb65i9dy")))

(define-public crate-assemblylift-cli-0.3.2 (c (n "assemblylift-cli") (v "0.3.2") (d (list (d (n "assemblylift_core_iomod") (r "^0.3") (d #t) (k 0) (p "assemblylift-core-iomod")) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "handlebars") (r "^3.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 0)) (d (n "registry_common") (r "^0.1") (d #t) (k 0) (p "asml-iomod-registry-common")) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "wasmer") (r "^1.0") (d #t) (k 0) (p "wasmer-asml-fork")) (d (n "wasmer-compiler") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-engine-jit") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-engine-native") (r "^1.0") (d #t) (k 0)) (d (n "z85") (r "^3") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "1myskdh6yv3y0zd20a3486yqqc8llavqn3hiz9wam1ybnl42cibf")))

(define-public crate-assemblylift-cli-0.4.0-alpha.0 (c (n "assemblylift-cli") (v "0.4.0-alpha.0") (d (list (d (n "assemblylift_core_iomod") (r "^0.4.0-alpha.0") (d #t) (k 0) (p "assemblylift-core-iomod")) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "handlebars") (r "^3.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 0)) (d (n "registry_common") (r "^0.1") (d #t) (k 0) (p "asml-iomod-registry-common")) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "wasmer") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "^2.1.1") (d #t) (k 0)) (d (n "z85") (r "^3") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "1wkd3b5jbahzpjm84c4my7cbjg06x96mvbv5slm7h8yjjfszlag6")))

(define-public crate-assemblylift-cli-0.4.0-alpha.1 (c (n "assemblylift-cli") (v "0.4.0-alpha.1") (d (list (d (n "assemblylift_core_iomod") (r "^0.4.0-alpha.0") (d #t) (k 0) (p "assemblylift-core-iomod")) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "handlebars") (r "^3.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 0)) (d (n "registry_common") (r "^0.1") (d #t) (k 0) (p "asml-iomod-registry-common")) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "wasmer") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "^2.1.1") (d #t) (k 0)) (d (n "z85") (r "^3") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "15m69jfw8nfwpi18vhar689ql1k8zwcwfpws77ml4yxdq8y31g1h")))

(define-public crate-assemblylift-cli-0.4.0-alpha.2 (c (n "assemblylift-cli") (v "0.4.0-alpha.2") (d (list (d (n "assemblylift_core_iomod") (r "^0.4.0-alpha.0") (d #t) (k 0) (p "assemblylift-core-iomod")) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "handlebars") (r "^3.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 0)) (d (n "registry_common") (r "^0.1") (d #t) (k 0) (p "asml-iomod-registry-common")) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "wasmer") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "^2.1.1") (d #t) (k 0)) (d (n "z85") (r "^3") (d #t) (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "1vf0q63b1j676j6ss9ngqrq3hxs91vfgzchr2slir5w6k635f3aw")))

(define-public crate-assemblylift-cli-0.4.0-alpha.3 (c (n "assemblylift-cli") (v "0.4.0-alpha.3") (d (list (d (n "assemblylift_core_iomod") (r "^0.4.0-alpha.0") (d #t) (k 0) (p "assemblylift-core-iomod")) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "handlebars") (r "^3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "k8s-openapi") (r "^0.14.0") (f (quote ("v1_22"))) (d #t) (k 0)) (d (n "kube") (r "^0.71.0") (f (quote ("runtime" "derive"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 0)) (d (n "registry_common") (r "^0.1") (d #t) (k 0) (p "asml-iomod-registry-common")) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "wasmer") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "^2.1.1") (d #t) (k 0)) (d (n "z85") (r "^3") (d #t) (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "0akdn1lnjfyk051psayhmmbljiqg6xmgdphjf6mflba3c2pg6491")))

(define-public crate-assemblylift-cli-0.4.0-alpha.4 (c (n "assemblylift-cli") (v "0.4.0-alpha.4") (d (list (d (n "assemblylift_core_iomod") (r "^0.4.0-alpha.0") (d #t) (k 0) (p "assemblylift-core-iomod")) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10") (d #t) (k 0)) (d (n "handlebars") (r "^3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "k8s-openapi") (r "^0.14.0") (f (quote ("v1_22"))) (d #t) (k 0)) (d (n "kube") (r "^0.71.0") (f (quote ("runtime" "derive"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 0)) (d (n "registry_common") (r "^0.1") (d #t) (k 0) (p "asml-iomod-registry-common")) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "wasmer") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "^2.1.1") (d #t) (k 0)) (d (n "z85") (r "^3") (d #t) (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "0hmwczm3rwbnm2k7y80hzqkp8vrpxmqsphzllsb7hxbwds9lgwpr")))

(define-public crate-assemblylift-cli-0.4.0-alpha.5 (c (n "assemblylift-cli") (v "0.4.0-alpha.5") (d (list (d (n "assemblylift-core") (r "^0.4.0-alpha.3") (d #t) (k 0)) (d (n "assemblylift-core-iomod") (r "^0.4.0-alpha.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10") (d #t) (k 0)) (d (n "handlebars") (r "^3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "k8s-openapi") (r "^0.14.0") (f (quote ("v1_22"))) (d #t) (k 0)) (d (n "kube") (r "^0.71.0") (f (quote ("runtime" "derive"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 0)) (d (n "registry_common") (r "^0.1") (d #t) (k 0) (p "asml-iomod-registry-common")) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "wasmer") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "^2.1.1") (d #t) (k 0)) (d (n "z85") (r "^3") (d #t) (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "1xcifvgjfzvx38vxjrfi65s9r3m69j6pd4h39d8z6mrfk2w4dv71")))

(define-public crate-assemblylift-cli-0.4.0-alpha.6 (c (n "assemblylift-cli") (v "0.4.0-alpha.6") (d (list (d (n "assemblylift-core") (r "^0.4.0-alpha.3") (d #t) (k 0)) (d (n "assemblylift-core-iomod") (r "^0.4.0-alpha.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "handlebars") (r "^3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 0)) (d (n "registry_common") (r "^0.1") (d #t) (k 0) (p "asml-iomod-registry-common")) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "wasmer") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "^2.1.1") (d #t) (k 0)) (d (n "z85") (r "^3") (d #t) (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "1v71zn3m35jvysiaxvp0nn0mfjwsjc2xyr208xl3cm9plldnrnpb")))

(define-public crate-assemblylift-cli-0.4.0-alpha.7 (c (n "assemblylift-cli") (v "0.4.0-alpha.7") (d (list (d (n "assemblylift-core") (r "^0.4.0-alpha.3") (d #t) (k 0)) (d (n "assemblylift-core-iomod") (r "^0.4.0-alpha.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "handlebars") (r "^3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 0)) (d (n "registry_common") (r "^0.1") (d #t) (k 0) (p "asml-iomod-registry-common")) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "wasmer") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "^2.1.1") (d #t) (k 0)) (d (n "z85") (r "^3") (d #t) (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "0a8yzmwkyl68z86hwfcnj8m87w7zv6v5m0zwgpn6wraz2mmq3wvc")))

(define-public crate-assemblylift-cli-0.4.0-alpha.8 (c (n "assemblylift-cli") (v "0.4.0-alpha.8") (d (list (d (n "assemblylift-core") (r "^0.4.0-alpha.3") (d #t) (k 0)) (d (n "assemblylift-core-iomod") (r "^0.4.0-alpha.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "handlebars") (r "^3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 0)) (d (n "registry_common") (r "^0.1") (d #t) (k 0) (p "asml-iomod-registry-common")) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "wasmer") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "^2.1.1") (d #t) (k 0)) (d (n "z85") (r "^3") (d #t) (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "1dm8n2fywnbvf619pmhj51n7al8vd4jryb2dkbwbi6brzbpbbb2i")))

(define-public crate-assemblylift-cli-0.4.0-alpha.9 (c (n "assemblylift-cli") (v "0.4.0-alpha.9") (d (list (d (n "assemblylift-core") (r "^0.4.0-alpha.3") (d #t) (k 0)) (d (n "assemblylift-core-iomod") (r "^0.4.0-alpha.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "handlebars") (r "^3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 0)) (d (n "registry_common") (r "^0.1") (d #t) (k 0) (p "asml-iomod-registry-common")) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "wasmer") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler-cranelift") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^2.1.1") (d #t) (k 0)) (d (n "wasmer-engine-universal") (r "^2.1.1") (d #t) (k 0)) (d (n "z85") (r "^3") (d #t) (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "11fxb2xvflar0pxdaid65f3j61bs7ga0zc59lx9y5p7g0rdhvdkj")))

(define-public crate-assemblylift-cli-0.4.0-alpha.10 (c (n "assemblylift-cli") (v "0.4.0-alpha.10") (d (list (d (n "assemblylift-core") (r "^0.4.0-alpha.10") (d #t) (k 0)) (d (n "assemblylift-core-iomod") (r "^0.4.0-alpha.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "handlebars") (r "^3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 0)) (d (n "registry_common") (r "^0.1") (d #t) (k 0) (p "asml-iomod-registry-common")) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "wasmtime") (r "^2.0") (d #t) (k 0)) (d (n "z85") (r "^3") (d #t) (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "12j81mxbczznydp28kmr4v7szw6a8jrvxcg4bpgwrqqa11n4rkmf")))

(define-public crate-assemblylift-cli-0.4.0-alpha.11 (c (n "assemblylift-cli") (v "0.4.0-alpha.11") (d (list (d (n "assemblylift-core") (r "^0.4.0-alpha.11") (d #t) (k 0)) (d (n "assemblylift-core-iomod") (r "^0.4.0-alpha.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "handlebars") (r "^3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "path_abs") (r "^0.5") (d #t) (k 0)) (d (n "registry_common") (r "^0.1") (d #t) (k 0) (p "asml-iomod-registry-common")) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "wasmtime") (r "^2.0") (d #t) (k 0)) (d (n "z85") (r "^3") (d #t) (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "09wbfg3qaas2lgb3j09pc3yxm0jh3ar9bfsdp5b1aa4v9kz4l7p5")))

