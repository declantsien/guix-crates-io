(define-module (crates-io as se assemblylift-awslambda-host) #:use-module (crates-io))

(define-public crate-assemblylift-awslambda-host-0.1.0 (c (n "assemblylift-awslambda-host") (v "0.1.0") (d (list (d (n "assemblylift_core") (r "^0.1.0") (d #t) (k 0) (p "assemblylift-core")) (d (n "assemblylift_core_event") (r "^0.1.0") (d #t) (k 0) (p "assemblylift-core-event")) (d (n "assemblylift_core_event_common") (r "^0.1.0") (d #t) (k 0) (p "assemblylift-core-event-common")) (d (n "awsio") (r "^0.1.0") (d #t) (k 0) (p "assemblylift-awslambda-iomod")) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "wasmer_runtime") (r "^0.1.1") (d #t) (k 0) (p "wasmer-runtime-asml-fork")) (d (n "wasmer_runtime_core") (r "^0.1.1") (d #t) (k 0) (p "wasmer-runtime-core-asml-fork")))) (h "15dv1b5a6yjfmlb2ipqxl0dy85y6wlx9by845zcaacahrm8y0dwd")))

(define-public crate-assemblylift-awslambda-host-0.1.1 (c (n "assemblylift-awslambda-host") (v "0.1.1") (d (list (d (n "assemblylift_core") (r "^0.1.1") (d #t) (k 0) (p "assemblylift-core")) (d (n "assemblylift_core_event") (r "^0.1.0") (d #t) (k 0) (p "assemblylift-core-event")) (d (n "assemblylift_core_event_common") (r "^0.1.0") (d #t) (k 0) (p "assemblylift-core-event-common")) (d (n "awsio") (r "^0.1.1") (d #t) (k 0) (p "assemblylift-awslambda-iomod")) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "wasmer_runtime") (r "^0.1.1") (d #t) (k 0) (p "wasmer-runtime-asml-fork")) (d (n "wasmer_runtime_core") (r "^0.1.1") (d #t) (k 0) (p "wasmer-runtime-core-asml-fork")))) (h "190jfd0iv3f1dwjm5j7zypdz8v6i0cvzvfc4m6xi068flv30frh3")))

(define-public crate-assemblylift-awslambda-host-0.1.2 (c (n "assemblylift-awslambda-host") (v "0.1.2") (d (list (d (n "assemblylift_core") (r "^0.1.1") (d #t) (k 0) (p "assemblylift-core")) (d (n "assemblylift_core_event") (r "^0.1.1") (d #t) (k 0) (p "assemblylift-core-event")) (d (n "assemblylift_core_event_common") (r "^0.1.0") (d #t) (k 0) (p "assemblylift-core-event-common")) (d (n "awsio") (r "^0.1.2") (d #t) (k 0) (p "assemblylift-awslambda-iomod")) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "wasmer_runtime") (r "^0.1.1") (d #t) (k 0) (p "wasmer-runtime-asml-fork")) (d (n "wasmer_runtime_core") (r "^0.1.1") (d #t) (k 0) (p "wasmer-runtime-core-asml-fork")))) (h "1pxsmh7pl5awqp5sc01hxpgzlhahyw59k4acywg6pq649mznqwnc")))

(define-public crate-assemblylift-awslambda-host-0.2.0 (c (n "assemblylift-awslambda-host") (v "0.2.0") (d (list (d (n "assemblylift_core") (r "^0.2.0") (d #t) (k 0) (p "assemblylift-core")) (d (n "assemblylift_core_io") (r "^0.2.0") (d #t) (k 0) (p "assemblylift-core-io")) (d (n "assemblylift_core_io_common") (r "^0.2.0") (d #t) (k 0) (p "assemblylift-core-io-common")) (d (n "assemblylift_core_iomod") (r "^0.1.0") (d #t) (k 0) (p "assemblylift-core-iomod")) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2.21") (d #t) (k 0)) (d (n "wasmer_runtime") (r "^0.1.1") (d #t) (k 0) (p "wasmer-runtime-asml-fork")) (d (n "wasmer_runtime_core") (r "^0.1.1") (d #t) (k 0) (p "wasmer-runtime-core-asml-fork")))) (h "08h9x9067xk3ghb8hr3xnq1fvgz8npqhkkwymhab394zmh2ah7a4")))

(define-public crate-assemblylift-awslambda-host-0.2.1 (c (n "assemblylift-awslambda-host") (v "0.2.1") (d (list (d (n "assemblylift_core") (r "^0.2.1") (d #t) (k 0) (p "assemblylift-core")) (d (n "assemblylift_core_io") (r "^0.2.0") (d #t) (k 0) (p "assemblylift-core-io")) (d (n "assemblylift_core_io_common") (r "^0.2.0") (d #t) (k 0) (p "assemblylift-core-io-common")) (d (n "assemblylift_core_iomod") (r "^0.2.1") (d #t) (k 0) (p "assemblylift-core-iomod")) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2.21") (d #t) (k 0)) (d (n "wasmer_runtime") (r "^0.1.1") (d #t) (k 0) (p "wasmer-runtime-asml-fork")) (d (n "wasmer_runtime_core") (r "^0.1.1") (d #t) (k 0) (p "wasmer-runtime-core-asml-fork")))) (h "0crvdjwi39ynig99bxknqy1mapmhwm4ap9pcyvaw2dp4glz8q112")))

(define-public crate-assemblylift-awslambda-host-0.2.2 (c (n "assemblylift-awslambda-host") (v "0.2.2") (d (list (d (n "assemblylift_core") (r "^0.2.2") (d #t) (k 0) (p "assemblylift-core")) (d (n "assemblylift_core_io") (r "^0.2.0") (d #t) (k 0) (p "assemblylift-core-io")) (d (n "assemblylift_core_io_common") (r "^0.2.0") (d #t) (k 0) (p "assemblylift-core-io-common")) (d (n "assemblylift_core_iomod") (r "^0.2.1") (d #t) (k 0) (p "assemblylift-core-iomod")) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2.21") (d #t) (k 0)) (d (n "wasmer_runtime") (r "^0.1.1") (d #t) (k 0) (p "wasmer-runtime-asml-fork")) (d (n "wasmer_runtime_core") (r "^0.1.1") (d #t) (k 0) (p "wasmer-runtime-core-asml-fork")))) (h "1aac5f546l6021p6vrh13vdbnzrql7iv5zary6majzji1sz6l1aw")))

(define-public crate-assemblylift-awslambda-host-0.2.3 (c (n "assemblylift-awslambda-host") (v "0.2.3") (d (list (d (n "assemblylift_core") (r "^0.2.3") (d #t) (k 0) (p "assemblylift-core")) (d (n "assemblylift_core_io") (r "^0.2.1") (d #t) (k 0) (p "assemblylift-core-io")) (d (n "assemblylift_core_io_common") (r "^0.2.0") (d #t) (k 0) (p "assemblylift-core-io-common")) (d (n "assemblylift_core_iomod") (r "^0.2.2") (d #t) (k 0) (p "assemblylift-core-iomod")) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2.21") (d #t) (k 0)) (d (n "wasmer") (r "^1.0") (d #t) (k 0) (p "wasmer-asml-fork")) (d (n "wasmer-engine-native") (r "^1.0") (d #t) (k 0)))) (h "1miwppy89dy14v43nj4xbhb48lgrbkc2273469kic8pngxbfy4d7")))

(define-public crate-assemblylift-awslambda-host-0.3.0 (c (n "assemblylift-awslambda-host") (v "0.3.0") (d (list (d (n "assemblylift_core") (r "^0.3") (d #t) (k 0) (p "assemblylift-core")) (d (n "assemblylift_core_io_common") (r "^0.3") (d #t) (k 0) (p "assemblylift-core-io-common")) (d (n "assemblylift_core_iomod") (r "^0.3") (d #t) (k 0) (p "assemblylift-core-iomod")) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "tokio") (r "^1.4") (f (quote ("macros" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "wasmer") (r "^1.0") (d #t) (k 0) (p "wasmer-asml-fork")) (d (n "wasmer-engine-jit") (r "^1.0") (d #t) (k 0)) (d (n "wasmer-engine-native") (r "^1.0") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "1wsk1v2m80fzfzqd7d4gyv3nwhvkdnpc3j62537xdbzhhazwf9x1")))

