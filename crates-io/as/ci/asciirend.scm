(define-module (crates-io as ci asciirend) #:use-module (crates-io))

(define-public crate-asciirend-0.1.0 (c (n "asciirend") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "colorsys") (r "^0.6") (k 0)) (d (n "crossterm") (r "^0.27") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("macros" "libm"))) (k 0)) (d (n "signal-hook") (r "^0.3") (o #t) (d #t) (k 0)))) (h "01nwwih2k5pfjd2mhbzg92rz3f17vbsghai5d4jmzb5436kw4ffp") (f (quote (("test-bin" "anyhow" "std" "signal-hook") ("std" "crossterm") ("default" "std"))))))

(define-public crate-asciirend-0.2.0 (c (n "asciirend") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "colorsys") (r "^0.6") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("macros" "libm"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive" "rc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "signal-hook") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)))) (h "11phsv9nfxsiasi76f3w6s8iqirmc5gghzwhwbi6sagi08f53d75") (f (quote (("wasm" "bindings" "wasm-bindgen") ("test-bin" "anyhow" "std" "signal-hook" "crossterm") ("std") ("serde-all" "serde" "nalgebra/serde-serialize-no-std") ("global-state") ("default" "std" "serde-all") ("bindings" "serde-all" "serde_json" "global-state")))) (y #t)))

(define-public crate-asciirend-0.2.1 (c (n "asciirend") (v "0.2.1") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "colorsys") (r "^0.6") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("macros" "libm"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive" "rc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "signal-hook") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0rjyblinzs98ck5wrbsbk99f79gfx2adj9i44wdx8y6bxr8ibdds") (f (quote (("wasm" "bindings" "wasm-bindgen") ("test-bin" "anyhow" "std" "signal-hook" "crossterm") ("std") ("serde-all" "serde" "nalgebra/serde-serialize-no-std") ("global-state") ("default" "std" "serde-all") ("bindings" "serde-all" "serde_json" "global-state"))))))

(define-public crate-asciirend-0.3.0 (c (n "asciirend") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "colorsys") (r "^0.6") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("macros" "libm"))) (k 0)) (d (n "rhai") (r "^1") (f (quote ("std" "f32_float"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive" "rc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "signal-hook") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)))) (h "06p3y196mm0a0948ip0hygzxdmpc6yrg9i5jniggz9kp72mrb1zm") (f (quote (("wasm" "bindings" "wasm-bindgen" "rhai/wasm-bindgen") ("test-bin" "anyhow" "std" "signal-hook" "crossterm") ("std") ("serde-all" "serde" "nalgebra/serde-serialize-no-std") ("scripting" "rhai") ("global-state") ("default" "std" "serde-all") ("bindings" "serde-all" "serde_json" "global-state"))))))

(define-public crate-asciirend-0.3.1 (c (n "asciirend") (v "0.3.1") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "colorsys") (r "^0.6") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("macros" "libm"))) (k 0)) (d (n "rhai") (r "^1") (f (quote ("std" "f32_float"))) (o #t) (k 0)) (d (n "rhai") (r "^1") (f (quote ("std" "f32_float" "wasm-bindgen"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive" "rc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "signal-hook") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1d2zpyfd8hnhxwsq2mlmjaahz06wcll3i34gf1c54a6arw6gxj96") (f (quote (("wasm" "bindings" "wasm-bindgen") ("test-bin" "anyhow" "std" "signal-hook" "crossterm") ("std") ("serde-all" "serde" "nalgebra/serde-serialize-no-std") ("scripting" "rhai") ("global-state") ("default" "std" "serde-all") ("bindings" "serde-all" "serde_json" "global-state"))))))

