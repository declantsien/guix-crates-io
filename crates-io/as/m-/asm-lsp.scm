(define-module (crates-io as m- asm-lsp) #:use-module (crates-io))

(define-public crate-asm-lsp-0.1.0 (c (n "asm-lsp") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.15.7") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "lsp-server") (r "^0.3.3") (d #t) (k 0)) (d (n "lsp-types") (r "^0.77.0") (d #t) (k 0)) (d (n "quick-xml") (r "^0.18.1") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.18.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "0vpbzbsaarkyhxpr48vlc4r6rlf6cs75l8nqy0mqnp8k68nc0pkh")))

(define-public crate-asm-lsp-0.2.0 (c (n "asm-lsp") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.15.7") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "lsp-server") (r "^0.3.3") (d #t) (k 0)) (d (n "lsp-types") (r "^0.77.0") (d #t) (k 0)) (d (n "quick-xml") (r "^0.18.1") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.6") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.18.0") (d #t) (k 0)))) (h "0cyxjqg9v9xl1zy3d6l3lgqiry9di6xaj6sna2h25aax4bdgbx8y")))

(define-public crate-asm-lsp-0.3.1 (c (n "asm-lsp") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.24.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "lsp-server") (r "^0.6.0") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.2") (d #t) (k 0)) (d (n "quick-xml") (r "^0.18.1") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "0kzkmf8079w4cz2w5z4kvr63z2rigb4d90a263bzbc5pnmf25ji9")))

(define-public crate-asm-lsp-0.3.2 (c (n "asm-lsp") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "lsp-server") (r "^0.7.0") (d #t) (k 0)) (d (n "lsp-types") (r "^0.94.0") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.1") (d #t) (k 0)) (d (n "regex") (r "^1.7.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "1fk70dq6kcjnx6df801i9mz57zfinnmxl6qbczdbkkhjajc8y7rn")))

(define-public crate-asm-lsp-0.3.3 (c (n "asm-lsp") (v "0.3.3") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "lsp-server") (r "^0.7.0") (d #t) (k 0)) (d (n "lsp-types") (r "^0.94.0") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.1") (d #t) (k 0)) (d (n "regex") (r "^1.7.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "1l81ri96izv4r06vqx3m6krghlrqji8ymj1prx34bx2z0pam992g")))

(define-public crate-asm-lsp-0.4.0 (c (n "asm-lsp") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "lsp-server") (r "^0.7.0") (d #t) (k 0)) (d (n "lsp-types") (r "^0.94.0") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.1") (d #t) (k 0)) (d (n "regex") (r "^1.7.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "toml") (r "^0.8.1") (d #t) (k 0)))) (h "0ygp3a57h3dsk53j7fzskx4wj28d279brsjfg1lm65z5vw067j25")))

(define-public crate-asm-lsp-0.4.1 (c (n "asm-lsp") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "lsp-server") (r "^0.7.0") (d #t) (k 0)) (d (n "lsp-types") (r "^0.94.0") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.1") (d #t) (k 0)) (d (n "regex") (r "^1.7.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "toml") (r "^0.8.1") (d #t) (k 0)))) (h "0rxry7cybs6p3y0k0mag1pncji9a5a0q6bzv9w43g1yx21l16i3q")))

(define-public crate-asm-lsp-0.4.2 (c (n "asm-lsp") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "lsp-server") (r "^0.7.0") (d #t) (k 0)) (d (n "lsp-types") (r "^0.94.0") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.1") (d #t) (k 0)) (d (n "regex") (r "^1.7.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "toml") (r "^0.8.1") (d #t) (k 0)))) (h "0hxj7m4hd7jl620pcd2v2vfwschr9d0bmnm13as3x1c2rslqian5")))

(define-public crate-asm-lsp-0.6.0 (c (n "asm-lsp") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.3") (d #t) (k 0)) (d (n "home") (r "^0.5.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "lsp-server") (r "^0.7.0") (d #t) (k 0)) (d (n "lsp-types") (r "^0.94.0") (d #t) (k 0)) (d (n "mockito") (r "^1.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.1") (d #t) (k 0)) (d (n "regex") (r "^1.7.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "toml") (r "^0.8.1") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-asm") (r "^0.1.0") (d #t) (k 0)))) (h "0hqilk28825k6dkyi0fazd7aq6i6k6fyfz0brip30ib9s67ka6wf")))

