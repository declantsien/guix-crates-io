(define-module (crates-io as hp ashpd) #:use-module (crates-io))

(define-public crate-ashpd-0.1.0 (c (n "ashpd") (v "0.1.0") (d (list (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "gdk") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.19") (d #t) (k 0)) (d (n "strum_macros") (r "^0.19") (d #t) (k 0)) (d (n "zbus") (r "^1.1") (d #t) (k 0)) (d (n "zvariant") (r "^2.2") (f (quote ("enumflags2"))) (d #t) (k 0)) (d (n "zvariant_derive") (r "^2.2") (d #t) (k 0)))) (h "01131bma4w7dx612gvgyypychvlja93rfzphaclp2mwhc1n2s285") (f (quote (("gdk_color" "gdk"))))))

(define-public crate-ashpd-0.2.0-alpha (c (n "ashpd") (v "0.2.0-alpha") (d (list (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gdk3x11") (r "^0.14.0") (o #t) (d #t) (k 0) (p "gdkx11")) (d (n "gdk4wayland") (r "^0.1.0") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.1.0") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk3") (r "^0.14.0") (o #t) (d #t) (k 0) (p "gtk")) (d (n "gtk4") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.21") (d #t) (k 0)) (d (n "strum_macros") (r "^0.21") (d #t) (k 0)) (d (n "zbus") (r "^2.0.0-beta.5") (d #t) (k 0)) (d (n "zvariant") (r "^2.7") (f (quote ("enumflags2"))) (k 0)) (d (n "zvariant_derive") (r "^2.7") (d #t) (k 0)))) (h "0gmi3jzlcrwjq3cjrzs4cmzkgklc5gdh3r4s8xyn5nyjjhzvf4iw") (f (quote (("feature_gtk4" "gdk4x11" "gdk4wayland" "gtk4") ("feature_gtk3" "gdk3x11" "gtk3") ("default_features"))))))

(define-public crate-ashpd-0.2.0-alpha-2 (c (n "ashpd") (v "0.2.0-alpha-2") (d (list (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gdk3x11") (r "^0.14.0") (o #t) (d #t) (k 0) (p "gdkx11")) (d (n "gdk4wayland") (r "^0.2.0") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.2.0") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk3") (r "^0.14.0") (o #t) (d #t) (k 0) (p "gtk")) (d (n "gtk4") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.21") (d #t) (k 0)) (d (n "strum_macros") (r "^0.21") (d #t) (k 0)) (d (n "zbus") (r "^2.0.0-beta.5") (d #t) (k 0)) (d (n "zvariant") (r "^2.7") (f (quote ("enumflags2"))) (k 0)) (d (n "zvariant_derive") (r "^2.7") (d #t) (k 0)))) (h "1c9921xwlwa5qmjwj16ydwn2shk6jx4404gvy6ay2xi3vnn6hm1a") (f (quote (("feature_gtk4" "gdk4x11" "gdk4wayland" "gtk4") ("feature_gtk3" "gdk3x11" "gtk3") ("default_features"))))))

(define-public crate-ashpd-0.2.0-alpha-3 (c (n "ashpd") (v "0.2.0-alpha-3") (d (list (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gdk3x11") (r "^0.14.0") (o #t) (d #t) (k 0) (p "gdkx11")) (d (n "gdk4wayland") (r "^0.2.0") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.2.0") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk3") (r "^0.14.0") (o #t) (d #t) (k 0) (p "gtk")) (d (n "gtk4") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.21") (d #t) (k 0)) (d (n "strum_macros") (r "^0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zbus") (r "^2.0.0-beta.6") (d #t) (k 0)) (d (n "zbus_names") (r "^1.0") (d #t) (k 0)) (d (n "zvariant") (r "^2.7") (f (quote ("enumflags2"))) (k 0)) (d (n "zvariant_derive") (r "^2.7") (d #t) (k 0)))) (h "07a3lk7z2r33vl8nw5hmjgganf4mp3y7mchrm93rfcj7w3k5difw") (f (quote (("feature_gtk4" "gdk4x11" "gdk4wayland" "gtk4") ("feature_gtk3" "gdk3x11" "gtk3") ("default_features"))))))

(define-public crate-ashpd-0.2.0-alpha-4 (c (n "ashpd") (v "0.2.0-alpha-4") (d (list (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gdk3x11") (r "^0.14.0") (o #t) (d #t) (k 0) (p "gdkx11")) (d (n "gdk4wayland") (r "^0.3.0") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.3.0") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk3") (r "^0.14.0") (o #t) (d #t) (k 0) (p "gtk")) (d (n "gtk4") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "pw") (r "^0.4") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.21") (d #t) (k 0)) (d (n "strum_macros") (r "^0.21") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zbus") (r "^2.0.0-beta.6") (d #t) (k 0)) (d (n "zbus_macros") (r "^2.0.0-beta.6") (d #t) (k 0)) (d (n "zbus_names") (r "^1.0") (d #t) (k 0)) (d (n "zvariant") (r "^2.7") (f (quote ("enumflags2"))) (k 0)) (d (n "zvariant_derive") (r "^2.7") (d #t) (k 0)))) (h "1ncvg6sg4qvpb75nqr6acav4ihsslv5n9xpbk9gq7q85y571dn90") (f (quote (("feature_pipewire" "pw") ("feature_gtk4" "gdk4x11" "gdk4wayland" "gtk4") ("feature_gtk3" "gdk3x11" "gtk3") ("default_features"))))))

(define-public crate-ashpd-0.2.0-alpha-5 (c (n "ashpd") (v "0.2.0-alpha-5") (d (list (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gdk3x11") (r "^0.14.0") (o #t) (d #t) (k 0) (p "gdkx11")) (d (n "gdk4wayland") (r "^0.3.0") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.3.0") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk3") (r "^0.14.0") (o #t) (d #t) (k 0) (p "gtk")) (d (n "gtk4") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.94") (o #t) (d #t) (k 0)) (d (n "pw") (r "^0.4") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "zbus") (r "^2.0.0-beta.7") (d #t) (k 0)) (d (n "zbus_macros") (r "^2.0.0-beta.7") (d #t) (k 0)) (d (n "zbus_names") (r "^1.0") (d #t) (k 0)) (d (n "zvariant") (r "^2.9") (f (quote ("enumflags2"))) (k 0)) (d (n "zvariant_derive") (r "^2.9") (d #t) (k 0)))) (h "1f2slz0ywhhf4inh411ikldpab2ix9140kqpvfjmciz4crdi8m3s") (f (quote (("log" "tracing") ("feature_pipewire" "pw" "libc") ("feature_gtk4" "gdk4x11" "gdk4wayland" "gtk4") ("feature_gtk3" "gdk3x11" "gtk3") ("default_features"))))))

(define-public crate-ashpd-0.2.0-beta-1 (c (n "ashpd") (v "0.2.0-beta-1") (d (list (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gdk3wayland") (r "^0.15") (f (quote ("v3_22"))) (o #t) (d #t) (k 0) (p "gdkwayland")) (d (n "gdk3x11") (r "^0.15") (o #t) (d #t) (k 0) (p "gdkx11")) (d (n "gdk4wayland") (r "^0.4") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.4") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk3") (r "^0.15") (o #t) (d #t) (k 0) (p "gtk")) (d (n "gtk4") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.94") (o #t) (d #t) (k 0)) (d (n "pw") (r "^0.4") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "zbus") (r "^2.0.0") (d #t) (k 0)) (d (n "zbus_macros") (r "^2.0.0") (d #t) (k 0)) (d (n "zvariant") (r "^3.0") (f (quote ("enumflags2"))) (k 0)) (d (n "zvariant_derive") (r "^3.0") (d #t) (k 0)))) (h "13i9z2xz7gpa6zglmgd83dvl09fv7bayyg2v8x23qwylaz11gqyh") (f (quote (("log" "tracing") ("feature_pipewire" "pw" "libc") ("feature_gtk4" "gdk4x11" "gdk4wayland" "gtk4") ("feature_gtk3" "gdk3x11" "gdk3wayland" "gtk3") ("default_features"))))))

(define-public crate-ashpd-0.2.0 (c (n "ashpd") (v "0.2.0") (d (list (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gdk3wayland") (r "^0.15") (f (quote ("v3_22"))) (o #t) (d #t) (k 0) (p "gdkwayland")) (d (n "gdk3x11") (r "^0.15") (o #t) (d #t) (k 0) (p "gdkx11")) (d (n "gdk4wayland") (r "^0.4") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.4") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk3") (r "^0.15") (o #t) (d #t) (k 0) (p "gtk")) (d (n "gtk4") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.94") (o #t) (d #t) (k 0)) (d (n "pw") (r "^0.4") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1.0-alpha2") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30.0-alpha2") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30.0-alpha2") (f (quote ("unstable_protocols" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^2.0.0") (d #t) (k 0)))) (h "1in1ybllxcl1v9kni06kinjwkrvs1z8ay6qw0la6p3qf4w9mvdk3") (f (quote (("raw_handle" "raw-window-handle" "wayland-client" "wayland-protocols" "wayland-backend") ("log" "tracing") ("feature_pipewire" "pw" "libc") ("feature_gtk4" "gdk4x11" "gdk4wayland" "gtk4") ("feature_gtk3" "gdk3x11" "gdk3wayland" "gtk3") ("default_features"))))))

(define-public crate-ashpd-0.2.1 (c (n "ashpd") (v "0.2.1") (d (list (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gdk3wayland") (r "^0.15") (f (quote ("v3_22"))) (o #t) (d #t) (k 0) (p "gdkwayland")) (d (n "gdk3x11") (r "^0.15") (o #t) (d #t) (k 0) (p "gdkx11")) (d (n "gdk4wayland") (r "^0.4") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.4") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk3") (r "^0.15") (o #t) (d #t) (k 0) (p "gtk")) (d (n "gtk4") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.94") (o #t) (d #t) (k 0)) (d (n "pw") (r "^0.4") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1.0-alpha2") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30.0-alpha2") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30.0-alpha2") (f (quote ("unstable_protocols" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^2.0.0") (d #t) (k 0)))) (h "0cg18yqn3ikm6hp231iws18b1804lx2i8j99gbi9canr9qzcbca2") (f (quote (("raw_handle" "raw-window-handle" "wayland-client" "wayland-protocols" "wayland-backend") ("log" "tracing") ("feature_pipewire" "pw" "libc") ("feature_gtk4" "gdk4x11" "gdk4wayland" "gtk4") ("feature_gtk3" "gdk3x11" "gdk3wayland" "gtk3") ("default_features"))))))

(define-public crate-ashpd-0.2.2 (c (n "ashpd") (v "0.2.2") (d (list (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gdk3wayland") (r "^0.15") (f (quote ("v3_22"))) (o #t) (d #t) (k 0) (p "gdkwayland")) (d (n "gdk3x11") (r "^0.15") (o #t) (d #t) (k 0) (p "gdkx11")) (d (n "gdk4wayland") (r "^0.4") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.4") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk3") (r "^0.15") (o #t) (d #t) (k 0) (p "gtk")) (d (n "gtk4") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.94") (o #t) (d #t) (k 0)) (d (n "pw") (r "^0.4") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1.0-alpha2") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30.0-alpha2") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30.0-alpha2") (f (quote ("unstable_protocols" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^2.0.0") (d #t) (k 0)))) (h "0m8n7ia42i71v3nc08dyfvmf5rafzbx2mqrxs9l1gyc60xpf45br") (f (quote (("raw_handle" "raw-window-handle" "wayland-client" "wayland-protocols" "wayland-backend") ("log" "tracing") ("feature_pipewire" "pw" "libc") ("feature_gtk4" "gdk4x11" "gdk4wayland" "gtk4") ("feature_gtk3" "gdk3x11" "gdk3wayland" "gtk3") ("default_features"))))))

(define-public crate-ashpd-0.2.3 (c (n "ashpd") (v "0.2.3") (d (list (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gdk3wayland") (r "^0.15") (f (quote ("v3_22"))) (o #t) (d #t) (k 0) (p "gdkwayland")) (d (n "gdk3x11") (r "^0.15") (o #t) (d #t) (k 0) (p "gdkx11")) (d (n "gdk4wayland") (r "^0.4") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.4") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk3") (r "^0.15") (o #t) (d #t) (k 0) (p "gtk")) (d (n "gtk4") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.94") (o #t) (d #t) (k 0)) (d (n "pw") (r "^0.4") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1.0-alpha2") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30.0-alpha2") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30.0-alpha2") (f (quote ("unstable_protocols" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^2.0.0") (d #t) (k 0)))) (h "17zb9blcm36275mhkdl2p4kiak3ra1p3mqgh4xr39bq7dkd2cmw0") (f (quote (("raw_handle" "raw-window-handle" "wayland-client" "wayland-protocols" "wayland-backend") ("log" "tracing") ("feature_pipewire" "pw" "libc") ("feature_gtk4" "gdk4x11" "gdk4wayland" "gtk4") ("feature_gtk3" "gdk3x11" "gdk3wayland" "gtk3") ("default_features"))))))

(define-public crate-ashpd-0.2.4 (c (n "ashpd") (v "0.2.4") (d (list (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gdk3wayland") (r "^0.15") (f (quote ("v3_22"))) (o #t) (d #t) (k 0) (p "gdkwayland")) (d (n "gdk3x11") (r "^0.15") (o #t) (d #t) (k 0) (p "gdkx11")) (d (n "gdk4wayland") (r "^0.4") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.4") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk3") (r "^0.15") (o #t) (d #t) (k 0) (p "gtk")) (d (n "gtk4") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.94") (o #t) (d #t) (k 0)) (d (n "pw") (r "^0.4") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1.0-alpha2") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30.0-alpha2") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30.0-alpha2") (f (quote ("unstable_protocols" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^2.0.0") (d #t) (k 0)))) (h "10qn9fs8fi92cns8nz7qaz6vj3jb1v1fjzcakarn80cwfabyx389") (f (quote (("raw_handle" "raw-window-handle" "wayland-client" "wayland-protocols" "wayland-backend") ("log" "tracing") ("feature_pipewire" "pw" "libc") ("feature_gtk4" "gdk4x11" "gdk4wayland" "gtk4") ("feature_gtk3" "gdk3x11" "gdk3wayland" "gtk3") ("default_features"))))))

(define-public crate-ashpd-0.2.5 (c (n "ashpd") (v "0.2.5") (d (list (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gdk3wayland") (r "^0.15") (f (quote ("v3_22"))) (o #t) (d #t) (k 0) (p "gdkwayland")) (d (n "gdk3x11") (r "^0.15") (o #t) (d #t) (k 0) (p "gdkx11")) (d (n "gdk4wayland") (r "^0.4") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.4") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk3") (r "^0.15") (o #t) (d #t) (k 0) (p "gtk")) (d (n "gtk4") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.94") (o #t) (d #t) (k 0)) (d (n "pw") (r "^0.4") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1.0-alpha2") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30.0-alpha2") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30.0-alpha2") (f (quote ("unstable_protocols" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^2.0.0") (d #t) (k 0)))) (h "1sx9d88xxdigwxzi48njcalis7b22hxmjz0wa33mxxrm47qqsjh8") (f (quote (("raw_handle" "raw-window-handle" "wayland-client" "wayland-protocols" "wayland-backend") ("log" "tracing") ("feature_pipewire" "pw" "libc") ("feature_gtk4" "gdk4x11" "gdk4wayland" "gtk4") ("feature_gtk3" "gdk3x11" "gdk3wayland" "gtk3") ("default_features"))))))

(define-public crate-ashpd-0.2.6 (c (n "ashpd") (v "0.2.6") (d (list (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gdk3wayland") (r "^0.15") (f (quote ("v3_22"))) (o #t) (d #t) (k 0) (p "gdkwayland")) (d (n "gdk3x11") (r "^0.15") (o #t) (d #t) (k 0) (p "gdkx11")) (d (n "gdk4wayland") (r "^0.4") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.4") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk3") (r "^0.15") (o #t) (d #t) (k 0) (p "gtk")) (d (n "gtk4") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.94") (o #t) (d #t) (k 0)) (d (n "pw") (r "^0.4") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1.0-alpha6") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30.0-alpha6") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30.0-alpha6") (f (quote ("unstable_protocols" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^2.0.0") (d #t) (k 0)))) (h "1wg9q44n7b6d0wq4sms78jjvb3gmyrw10zh8xcr2igdkk1x0msjy") (f (quote (("raw_handle" "raw-window-handle" "wayland-client" "wayland-protocols" "wayland-backend") ("log" "tracing") ("feature_pipewire" "pw" "libc") ("feature_gtk4" "gdk4x11" "gdk4wayland" "gtk4") ("feature_gtk3" "gdk3x11" "gdk3wayland" "gtk3") ("default_features"))))))

(define-public crate-ashpd-0.3.0 (c (n "ashpd") (v "0.3.0") (d (list (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gdk3wayland") (r "^0.15") (f (quote ("v3_22"))) (o #t) (d #t) (k 0) (p "gdkwayland")) (d (n "gdk3x11") (r "^0.15") (o #t) (d #t) (k 0) (p "gdkx11")) (d (n "gdk4wayland") (r "^0.4") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.4") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk3") (r "^0.15") (o #t) (d #t) (k 0) (p "gtk")) (d (n "gtk4") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.94") (o #t) (d #t) (k 0)) (d (n "pw") (r "^0.4") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1.0-alpha2") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30.0-alpha2") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30.0-alpha2") (f (quote ("unstable_protocols" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^2.0.0") (d #t) (k 0)))) (h "1dm7xqgsriyv0xssv8q2azhzgmway9gis8qllp0mw5vj7s127c3x") (f (quote (("wayland" "wayland-client" "wayland-protocols" "wayland-backend") ("raw_handle" "raw-window-handle" "wayland") ("log" "tracing") ("feature_pipewire" "pw" "libc") ("feature_gtk4" "gdk4x11" "gdk4wayland" "gtk4") ("feature_gtk3" "gdk3x11" "gdk3wayland" "gtk3") ("default_features"))))))

(define-public crate-ashpd-0.3.1 (c (n "ashpd") (v "0.3.1") (d (list (d (n "byteorder") (r "^1.0") (d #t) (k 2)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gdk3wayland") (r "^0.15") (f (quote ("v3_22"))) (o #t) (d #t) (k 0) (p "gdkwayland")) (d (n "gdk3x11") (r "^0.15") (o #t) (d #t) (k 0) (p "gdkx11")) (d (n "gdk4wayland") (r "^0.4") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.4") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk3") (r "^0.15") (o #t) (d #t) (k 0) (p "gtk")) (d (n "gtk4") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.94") (o #t) (d #t) (k 0)) (d (n "pw") (r "^0.5") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1.0-alpha2") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30.0-alpha2") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30.0-alpha2") (f (quote ("unstable_protocols" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^2.0.0") (d #t) (k 0)))) (h "01cjcrnkmg2phv48xy4a4260pcljbv777vk67kcdqp31s661am0v") (f (quote (("wayland" "wayland-client" "wayland-protocols" "wayland-backend") ("tokio_runtime" "zbus/tokio") ("raw_handle" "raw-window-handle" "wayland") ("log" "tracing") ("feature_pipewire" "pw" "libc") ("feature_gtk4" "gdk4x11" "gdk4wayland" "gtk4") ("feature_gtk3" "gdk3x11" "gdk3wayland" "gtk3") ("default_features"))))))

(define-public crate-ashpd-0.3.2 (c (n "ashpd") (v "0.3.2") (d (list (d (n "byteorder") (r "^1.0") (d #t) (k 2)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gdk3wayland") (r "^0.15") (f (quote ("v3_22"))) (o #t) (d #t) (k 0) (p "gdkwayland")) (d (n "gdk3x11") (r "^0.15") (o #t) (d #t) (k 0) (p "gdkx11")) (d (n "gdk4wayland") (r "^0.4") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.4") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk3") (r "^0.15") (o #t) (d #t) (k 0) (p "gtk")) (d (n "gtk4") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.94") (o #t) (d #t) (k 0)) (d (n "pw") (r "^0.5") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1.0-alpha2") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30.0-alpha2") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30.0-alpha2") (f (quote ("unstable_protocols" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^2.0.0") (d #t) (k 0)))) (h "03ylmnzkhjriblxin422s60l53v0d9gwkn1nfr1qf5i1np88xk3d") (f (quote (("wayland" "wayland-client" "wayland-protocols" "wayland-backend") ("tokio_runtime" "zbus/tokio") ("raw_handle" "raw-window-handle" "wayland") ("log" "tracing") ("feature_pipewire" "pw" "libc") ("feature_gtk4" "gdk4x11" "gdk4wayland" "gtk4") ("feature_gtk3" "gdk3x11" "gdk3wayland" "gtk3") ("default_features"))))))

(define-public crate-ashpd-0.4.0-alpha.1 (c (n "ashpd") (v "0.4.0-alpha.1") (d (list (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 2)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "gdk3wayland") (r "^0.16") (o #t) (d #t) (k 0) (p "gdkwayland")) (d (n "gdk3x11") (r "^0.16") (o #t) (d #t) (k 0) (p "gdkx11")) (d (n "gdk4wayland") (r "^0.5") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.5") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk3") (r "^0.16") (o #t) (d #t) (k 0) (p "gtk")) (d (n "gtk4") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.14") (d #t) (k 0)) (d (n "pw") (r "^0.5") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1.0-beta.10") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30.0-beta.10") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30.0-beta.10") (f (quote ("unstable" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^3.1") (f (quote ("url"))) (d #t) (k 0)))) (h "1nbk5bzxl4wy3ca26w3i1gq3akbga7xlnl46y9alixn8jlydwp84") (f (quote (("wayland" "wayland-client" "wayland-protocols" "wayland-backend") ("raw_handle" "raw-window-handle" "wayland") ("pipewire" "pw" "libc") ("gtk4" "gtk4_x11" "gtk4_wayland") ("gtk3" "gtk3_x11" "gtk3_wayland") ("default" "async-std")))) (s 2) (e (quote (("tokio" "zbus/tokio" "dep:tokio") ("gtk4_x11" "gdk4x11" "dep:gtk4") ("gtk4_wayland" "gdk4wayland" "dep:gtk4") ("gtk3_x11" "gdk3x11" "dep:gtk3") ("gtk3_wayland" "gdk3wayland" "dep:gtk3"))))))

(define-public crate-ashpd-0.4.0-alpha.2 (c (n "ashpd") (v "0.4.0-alpha.2") (d (list (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 2)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "gdk3wayland") (r "^0.16") (o #t) (d #t) (k 0) (p "gdkwayland")) (d (n "gdk3x11") (r "^0.16") (o #t) (d #t) (k 0) (p "gdkx11")) (d (n "gdk4wayland") (r "^0.5") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.5") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk3") (r "^0.16") (o #t) (d #t) (k 0) (p "gtk")) (d (n "gtk4") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.14") (d #t) (k 0)) (d (n "pw") (r "^0.5") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30") (f (quote ("unstable" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^3.1") (f (quote ("url"))) (d #t) (k 0)))) (h "11s6qbqlj7im37f4f77mnqjwg9y7zzhjnm6yaxrbaf34mi8p8kwp") (f (quote (("wayland" "wayland-client" "wayland-protocols" "wayland-backend") ("raw_handle" "raw-window-handle" "wayland") ("pipewire" "pw" "libc") ("gtk4" "gtk4_x11" "gtk4_wayland") ("gtk3" "gtk3_x11" "gtk3_wayland") ("default" "async-std")))) (s 2) (e (quote (("tokio" "zbus/tokio" "dep:tokio") ("gtk4_x11" "gdk4x11" "dep:gtk4") ("gtk4_wayland" "gdk4wayland" "dep:gtk4") ("gtk3_x11" "gdk3x11" "dep:gtk3") ("gtk3_wayland" "gdk3wayland" "dep:gtk3"))))))

(define-public crate-ashpd-0.4.0-alpha.3 (c (n "ashpd") (v "0.4.0-alpha.3") (d (list (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 2)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "gdk3wayland") (r "^0.17") (o #t) (d #t) (k 0) (p "gdkwayland")) (d (n "gdk3x11") (r "^0.17") (o #t) (d #t) (k 0) (p "gdkx11")) (d (n "gdk4wayland") (r "^0.6") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.6") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk3") (r "^0.17") (o #t) (d #t) (k 0) (p "gtk")) (d (n "gtk4") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.14") (d #t) (k 0)) (d (n "pw") (r "^0.5") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30") (f (quote ("unstable" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^3.1") (f (quote ("url"))) (d #t) (k 0)))) (h "0xflbckk44ijhy2ks3pbn7xgv6js57wwkvncvbfyqhghi2rfchpc") (f (quote (("wayland" "wayland-client" "wayland-protocols" "wayland-backend") ("raw_handle" "raw-window-handle" "wayland") ("pipewire" "pw" "libc") ("gtk4" "gtk4_x11" "gtk4_wayland") ("gtk3" "gtk3_x11" "gtk3_wayland") ("default" "async-std")))) (s 2) (e (quote (("tokio" "zbus/tokio" "dep:tokio") ("gtk4_x11" "gdk4x11" "dep:gtk4") ("gtk4_wayland" "gdk4wayland" "dep:gtk4") ("gtk3_x11" "gdk3x11" "dep:gtk3") ("gtk3_wayland" "gdk3wayland" "dep:gtk3"))))))

(define-public crate-ashpd-0.4.0-alpha.4 (c (n "ashpd") (v "0.4.0-alpha.4") (d (list (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 2)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "gdk3wayland") (r "^0.17") (o #t) (d #t) (k 0) (p "gdkwayland")) (d (n "gdk3x11") (r "^0.17") (o #t) (d #t) (k 0) (p "gdkx11")) (d (n "gdk4wayland") (r "^0.6") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.6") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk3") (r "^0.17") (o #t) (d #t) (k 0) (p "gtk")) (d (n "gtk4") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.14") (d #t) (k 0)) (d (n "pw") (r "^0.6") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30") (f (quote ("unstable" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^3.1") (f (quote ("url"))) (d #t) (k 0)))) (h "1gj25fnc9q7hbczngia6ijbrl0yl645sv67y5cjh74kkwf9xn0rs") (f (quote (("wayland" "wayland-client" "wayland-protocols" "wayland-backend") ("raw_handle" "raw-window-handle" "wayland") ("pipewire" "pw" "libc") ("gtk4" "gtk4_x11" "gtk4_wayland") ("gtk3" "gtk3_x11" "gtk3_wayland") ("default" "async-std")))) (s 2) (e (quote (("tokio" "zbus/tokio" "dep:tokio") ("gtk4_x11" "gdk4x11" "dep:gtk4") ("gtk4_wayland" "gdk4wayland" "dep:gtk4") ("gtk3_x11" "gdk3x11" "dep:gtk3") ("gtk3_wayland" "gdk3wayland" "dep:gtk3"))))))

(define-public crate-ashpd-0.4.0 (c (n "ashpd") (v "0.4.0") (d (list (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 2)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "gdk3wayland") (r "^0.17") (o #t) (d #t) (k 0) (p "gdkwayland")) (d (n "gdk3x11") (r "^0.17") (o #t) (d #t) (k 0) (p "gdkx11")) (d (n "gdk4wayland") (r "^0.6") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.6") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk3") (r "^0.17") (o #t) (d #t) (k 0) (p "gtk")) (d (n "gtk4") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.14") (d #t) (k 0)) (d (n "pw") (r "^0.6") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30") (f (quote ("unstable" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^3.1") (f (quote ("url"))) (k 0)))) (h "0hby77zdlhm5452aigpja4znnyfk6df41n11yx4r0wsxxd08ns1i") (f (quote (("wayland" "wayland-client" "wayland-protocols" "wayland-backend") ("raw_handle" "raw-window-handle" "wayland") ("pipewire" "pw" "libc") ("gtk4" "gtk4_x11" "gtk4_wayland") ("gtk3" "gtk3_x11" "gtk3_wayland") ("default" "async-std")))) (s 2) (e (quote (("tokio" "zbus/tokio" "dep:tokio") ("gtk4_x11" "gdk4x11" "dep:gtk4") ("gtk4_wayland" "gdk4wayland" "dep:gtk4") ("gtk3_x11" "gdk3x11" "dep:gtk3") ("gtk3_wayland" "gdk3wayland" "dep:gtk3") ("async-std" "zbus/async-io" "dep:async-std"))))))

(define-public crate-ashpd-0.5.0 (c (n "ashpd") (v "0.5.0") (d (list (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 2)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "gdk4wayland") (r "^0.7") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.7") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk4") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.14") (d #t) (k 0)) (d (n "pw") (r "^0.6") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30") (f (quote ("unstable" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^3.1") (f (quote ("url"))) (k 0)))) (h "0m2p1np3p4h6s9xk7myj5sj9mkwswrblni8grbrnvsfpy65baw3k") (f (quote (("wayland" "wayland-client" "wayland-protocols" "wayland-backend") ("raw_handle" "raw-window-handle" "wayland") ("pipewire" "pw" "libc") ("gtk4" "gtk4_x11" "gtk4_wayland") ("default" "async-std")))) (s 2) (e (quote (("tokio" "zbus/tokio" "dep:tokio") ("gtk4_x11" "gdk4x11" "dep:gtk4") ("gtk4_wayland" "gdk4wayland" "dep:gtk4") ("async-std" "zbus/async-io" "dep:async-std"))))))

(define-public crate-ashpd-0.6.0 (c (n "ashpd") (v "0.6.0") (d (list (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 2)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "gdk4wayland") (r "^0.7") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.7") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk4") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.14") (d #t) (k 0)) (d (n "pw") (r "^0.6") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30") (f (quote ("unstable" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^3.1") (f (quote ("url"))) (k 0)))) (h "0vns470ckr7b68x57wzalypszgin1pzlc11i5drp2jijp4nx94d9") (f (quote (("wayland" "wayland-client" "wayland-protocols" "wayland-backend") ("raw_handle" "raw-window-handle" "wayland") ("pipewire" "pw" "libc") ("gtk4" "gtk4_x11" "gtk4_wayland") ("default" "async-std")))) (s 2) (e (quote (("tokio" "zbus/tokio" "dep:tokio") ("gtk4_x11" "gdk4x11" "dep:gtk4") ("gtk4_wayland" "gdk4wayland" "dep:gtk4") ("async-std" "zbus/async-io" "dep:async-std"))))))

(define-public crate-ashpd-0.6.1 (c (n "ashpd") (v "0.6.1") (d (list (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 2)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "gdk4wayland") (r "^0.7") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.7") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk4") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.14") (d #t) (k 0)) (d (n "pw") (r "^0.6") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30") (f (quote ("unstable" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^3.1") (f (quote ("url"))) (k 0)))) (h "11vggxqzn6vx4g8hh9hhyl4s95w1p99ha7n4jilva56i90pbdb4c") (f (quote (("wayland" "wayland-client" "wayland-protocols" "wayland-backend") ("raw_handle" "raw-window-handle" "wayland") ("pipewire" "pw" "libc") ("gtk4" "gtk4_x11" "gtk4_wayland") ("default" "async-std")))) (y #t) (s 2) (e (quote (("tokio" "zbus/tokio" "dep:tokio") ("gtk4_x11" "gdk4x11" "dep:gtk4") ("gtk4_wayland" "gdk4wayland" "dep:gtk4") ("async-std" "zbus/async-io" "dep:async-std"))))))

(define-public crate-ashpd-0.6.2 (c (n "ashpd") (v "0.6.2") (d (list (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 2)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "gdk4wayland") (r "^0.7") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.7") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk4") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.14") (d #t) (k 0)) (d (n "pw") (r "^0.6") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30") (f (quote ("unstable" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^3.1") (f (quote ("url"))) (k 0)))) (h "1ircpnlh64rzbnjbk88xsn9z3wlb7rlvjx7v19m97gc62qjzxbzk") (f (quote (("wayland" "wayland-client" "wayland-protocols" "wayland-backend") ("raw_handle" "raw-window-handle" "wayland") ("pipewire" "pw" "libc") ("gtk4" "gtk4_x11" "gtk4_wayland") ("default" "async-std")))) (s 2) (e (quote (("tokio" "zbus/tokio" "dep:tokio") ("gtk4_x11" "gdk4x11" "dep:gtk4") ("gtk4_wayland" "gdk4wayland" "dep:gtk4") ("async-std" "zbus/async-io" "dep:async-std"))))))

(define-public crate-ashpd-0.6.3 (c (n "ashpd") (v "0.6.3") (d (list (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 2)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "gdk4wayland") (r "^0.7") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.7") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk4") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.14") (d #t) (k 0)) (d (n "pw") (r "^0.6") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30") (f (quote ("unstable" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^3.1") (f (quote ("url"))) (k 0)))) (h "0hs21wkhzchrnn3zijbr6xkxi9a6c8g272jdwv9z0p8hmvg8llia") (f (quote (("wayland" "wayland-client" "wayland-protocols" "wayland-backend") ("raw_handle" "raw-window-handle" "wayland") ("pipewire" "pw" "libc") ("gtk4" "gtk4_x11" "gtk4_wayland") ("default" "async-std")))) (s 2) (e (quote (("tokio" "zbus/tokio" "dep:tokio") ("gtk4_x11" "gdk4x11" "dep:gtk4") ("gtk4_wayland" "gdk4wayland" "dep:gtk4") ("async-std" "zbus/async-io" "dep:async-std"))))))

(define-public crate-ashpd-0.6.4 (c (n "ashpd") (v "0.6.4") (d (list (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 2)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "gdk4wayland") (r "^0.7") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.7") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk4") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.14") (d #t) (k 0)) (d (n "pw") (r "^0.7") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30") (f (quote ("unstable" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^3.1") (f (quote ("url"))) (k 0)))) (h "08b98dqj6wdxqvgjf6ganmr9qjg5jp5iin9v46szmzv1b19pak1w") (f (quote (("wayland" "wayland-client" "wayland-protocols" "wayland-backend") ("raw_handle" "raw-window-handle" "wayland") ("pipewire" "pw" "libc") ("gtk4" "gtk4_x11" "gtk4_wayland") ("default" "async-std")))) (y #t) (s 2) (e (quote (("tokio" "zbus/tokio" "dep:tokio") ("gtk4_x11" "gdk4x11" "dep:gtk4") ("gtk4_wayland" "gdk4wayland" "dep:gtk4") ("async-std" "zbus/async-io" "dep:async-std"))))))

(define-public crate-ashpd-0.6.5 (c (n "ashpd") (v "0.6.5") (d (list (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 2)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "gdk4wayland") (r "^0.7") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.7") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk4") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.14") (d #t) (k 0)) (d (n "pw") (r "^0.7") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30") (f (quote ("unstable" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^3.1") (f (quote ("url"))) (k 0)))) (h "1pkyynrild4jcyyrj59vw9gddr1xhbyf2nzm4m27zwg82ldahh6d") (f (quote (("wayland" "wayland-client" "wayland-protocols" "wayland-backend") ("raw_handle" "raw-window-handle" "wayland") ("pipewire" "pw" "libc") ("gtk4" "gtk4_x11" "gtk4_wayland") ("default" "async-std")))) (s 2) (e (quote (("tokio" "zbus/tokio" "dep:tokio") ("gtk4_x11" "gdk4x11" "dep:gtk4") ("gtk4_wayland" "gdk4wayland" "dep:gtk4") ("async-std" "zbus/async-io" "dep:async-std"))))))

(define-public crate-ashpd-0.6.6 (c (n "ashpd") (v "0.6.6") (d (list (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 2)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "gdk4wayland") (r "^0.7") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.7") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk4") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.14") (d #t) (k 0)) (d (n "pw") (r "^0.7") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30") (f (quote ("unstable" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^3.1") (f (quote ("url"))) (k 0)))) (h "1ai4g5psnqrjjsn5s2daddvhpahxdplany50fz9scl66gj4q5fkc") (f (quote (("wayland" "wayland-client" "wayland-protocols" "wayland-backend") ("raw_handle" "raw-window-handle" "wayland") ("pipewire" "pw" "libc") ("gtk4" "gtk4_x11" "gtk4_wayland") ("default" "async-std")))) (s 2) (e (quote (("tokio" "zbus/tokio" "dep:tokio") ("gtk4_x11" "gdk4x11" "dep:gtk4") ("gtk4_wayland" "gdk4wayland" "dep:gtk4") ("async-std" "zbus/async-io" "dep:async-std"))))))

(define-public crate-ashpd-0.6.7 (c (n "ashpd") (v "0.6.7") (d (list (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 2)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "gdk4wayland") (r "^0.7") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.7") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk4") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.14") (d #t) (k 0)) (d (n "pw") (r "^0.7") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30") (f (quote ("unstable" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^3.1") (f (quote ("url"))) (k 0)))) (h "1kr7l198i3kv0bz3qxpc9ga62yx57s3mymzg6bqbdvr3wj88809c") (f (quote (("wayland" "wayland-client" "wayland-protocols" "wayland-backend") ("raw_handle" "raw-window-handle" "wayland") ("pipewire" "pw" "libc") ("gtk4" "gtk4_x11" "gtk4_wayland") ("default" "async-std")))) (s 2) (e (quote (("tokio" "zbus/tokio" "dep:tokio") ("gtk4_x11" "gdk4x11" "dep:gtk4") ("gtk4_wayland" "gdk4wayland" "dep:gtk4") ("async-std" "zbus/async-io" "dep:async-std"))))))

(define-public crate-ashpd-0.6.8 (c (n "ashpd") (v "0.6.8") (d (list (d (n "async-fs") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "async-net") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 2)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "gdk4wayland") (r "^0.7") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.7") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk4") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.14") (d #t) (k 0)) (d (n "pw") (r "^0.7") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30") (f (quote ("unstable" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^3.1") (f (quote ("url"))) (k 0)))) (h "109d7w6v0rnpy9lv4kmhwgh0sff0440s2vybj1k0ik4ib3d2xhja") (f (quote (("wayland" "wayland-client" "wayland-protocols" "wayland-backend") ("raw_handle" "raw-window-handle" "wayland") ("pipewire" "pw" "libc") ("gtk4" "gtk4_x11" "gtk4_wayland") ("default" "async-std")))) (s 2) (e (quote (("tokio" "zbus/tokio" "dep:tokio") ("gtk4_x11" "gdk4x11" "dep:gtk4") ("gtk4_wayland" "gdk4wayland" "dep:gtk4") ("async-std" "zbus/async-io" "dep:async-fs" "dep:async-net"))))))

(define-public crate-ashpd-0.7.0 (c (n "ashpd") (v "0.7.0") (d (list (d (n "async-fs") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "async-net") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 2)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "gdk4wayland") (r "^0.8") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.8") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "gtk4") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "pw") (r "^0.7") (o #t) (d #t) (k 0) (p "pipewire")) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.3") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.31") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.31") (f (quote ("unstable" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^3.1") (f (quote ("url"))) (k 0)))) (h "1ab92zkibs2gnid17n1n8ib95gwrrdv2cki1zsvxal22fzbjm681") (f (quote (("wayland" "wayland-client" "wayland-protocols" "wayland-backend") ("raw_handle" "raw-window-handle" "wayland") ("pipewire" "pw" "libc") ("gtk4" "gtk4_x11" "gtk4_wayland") ("default" "async-std")))) (s 2) (e (quote (("tokio" "zbus/tokio" "dep:tokio") ("gtk4_x11" "gdk4x11" "dep:gtk4") ("gtk4_wayland" "gdk4wayland" "dep:gtk4") ("async-std" "zbus/async-io" "dep:async-fs" "dep:async-net")))) (r "1.70")))

(define-public crate-ashpd-0.8.0 (c (n "ashpd") (v "0.8.0") (d (list (d (n "async-fs") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "async-net") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "gdk4wayland") (r "^0.8") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.8") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "glib") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "gtk4") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "pipewire") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.3") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.31") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.31") (f (quote ("unstable" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^4.0") (f (quote ("url"))) (k 0)))) (h "144kjh7yxij3f97k591j80rr272f0xv9pkw7lq0pqm27wrz528hv") (f (quote (("wayland" "wayland-client" "wayland-protocols" "wayland-backend") ("raw_handle" "raw-window-handle" "wayland") ("gtk4" "gtk4_x11" "gtk4_wayland") ("default" "async-std")))) (s 2) (e (quote (("tokio" "zbus/tokio" "dep:tokio") ("gtk4_x11" "gdk4x11" "glib" "dep:gtk4") ("gtk4_wayland" "gdk4wayland" "glib" "dep:gtk4") ("glib" "dep:glib") ("async-std" "zbus/async-io" "dep:async-fs" "dep:async-net")))) (r "1.75")))

(define-public crate-ashpd-0.8.1 (c (n "ashpd") (v "0.8.1") (d (list (d (n "async-fs") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "async-net") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "gdk4wayland") (r "^0.8") (o #t) (d #t) (k 0) (p "gdk4-wayland")) (d (n "gdk4x11") (r "^0.8") (o #t) (d #t) (k 0) (p "gdk4-x11")) (d (n "glib") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "gtk4") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "pipewire") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "raw-window-handle") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wayland-backend") (r "^0.3") (f (quote ("client_system"))) (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.31") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.31") (f (quote ("unstable" "client"))) (o #t) (d #t) (k 0)) (d (n "zbus") (r "^4.0") (f (quote ("url"))) (k 0)))) (h "14yh6v12bgngawzds6i252n4zzq9rnqz659p5h898yl7f9y4v26x") (f (quote (("wayland" "wayland-client" "wayland-protocols" "wayland-backend") ("raw_handle" "raw-window-handle" "wayland") ("gtk4" "gtk4_x11" "gtk4_wayland") ("default" "async-std")))) (s 2) (e (quote (("tokio" "zbus/tokio" "dep:tokio") ("gtk4_x11" "gdk4x11" "glib" "dep:gtk4") ("gtk4_wayland" "gdk4wayland" "glib" "dep:gtk4") ("glib" "dep:glib") ("async-std" "zbus/async-io" "dep:async-fs" "dep:async-net")))) (r "1.75")))

