(define-module (crates-io as si assistant_daemon) #:use-module (crates-io))

(define-public crate-assistant_daemon-0.1.0 (c (n "assistant_daemon") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assistant_common") (r "^0.1.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "axum") (r "^0.7") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "cron") (r "^0.12.0") (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "hyper") (r "^1.0") (d #t) (k 0)) (d (n "notify") (r "^6.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "stream"))) (d #t) (k 0)) (d (n "russh") (r "^0.42.0") (d #t) (k 0)) (d (n "russh-keys") (r "^0.42.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("winuser"))) (d #t) (t "cfg(windows)") (k 0)))) (h "01sdn63g6rgqwwvp8jxandxix9dknlrsmi6r0jyb72rn461vz4mm")))

