(define-module (crates-io ze us zeus) #:use-module (crates-io))

(define-public crate-zeus-0.1.0 (c (n "zeus") (v "0.1.0") (d (list (d (n "actix-web") (r "^4") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.5.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "nix") (r "^0.29") (f (quote ("user"))) (k 0)) (d (n "nvml-wrapper") (r "^0.10") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 2)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-actix-web") (r "^0.7.10") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("registry" "env-filter"))) (d #t) (k 0)))) (h "0gld4fhi6idhny4a1kj2aigh4jbmkmfchknbhbblqglnqbrx6j8y")))

