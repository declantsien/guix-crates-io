(define-module (crates-io ze br zebra-state) #:use-module (crates-io))

(define-public crate-zebra-state-0.0.0-placeholder.0 (c (n "zebra-state") (v "0.0.0-placeholder.0") (h "19c00acxraw5br2s3n9zgpw1xpxq8db04grgicckl6xawml581yn")))

(define-public crate-zebra-state-1.0.0-beta.25 (c (n "zebra-state") (v "1.0.0-beta.25") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("clock" "std"))) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "elasticsearch") (r "^8.5.0-alpha.1") (o #t) (d #t) (k 0) (p "elasticsearch")) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "halo2") (r "^0.3.0") (d #t) (k 2) (p "halo2_proofs")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "howudoin") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("ron"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jubjub") (r "^0.10.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (d #t) (k 0)) (d (n "mset") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "proptest") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "rlimit") (r "^0.9.1") (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4"))) (k 0)) (d (n "semver") (r "^1.0.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0) (p "serde_json")) (d (n "spandoc") (r "^0.2.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_55"))) (d #t) (k 2)) (d (n "tokio") (r "^1.28.2") (f (quote ("rt-multi-thread" "sync" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (f (quote ("buffer" "util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.25") (d #t) (k 0)) (d (n "zebra-test") (r "^1.0.0-beta.25") (o #t) (d #t) (k 0)))) (h "19977nyr2jdczmf3hf6vjs6dm30c3vr6bi5d61f45mjdpfgjfc4x") (f (quote (("proptest-impl" "proptest" "proptest-derive" "zebra-test" "zebra-chain/proptest-impl") ("progress-bar" "howudoin") ("getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs")))) (s 2) (e (quote (("elasticsearch" "dep:elasticsearch" "dep:serde_json"))))))

(define-public crate-zebra-state-1.0.0-beta.26 (c (n "zebra-state") (v "1.0.0-beta.26") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("clock" "std"))) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "elasticsearch") (r "^8.5.0-alpha.1") (o #t) (d #t) (k 0) (p "elasticsearch")) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "halo2") (r "^0.3.0") (d #t) (k 2) (p "halo2_proofs")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "howudoin") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("ron"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jubjub") (r "^0.10.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (d #t) (k 0)) (d (n "mset") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "proptest") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "rlimit") (r "^0.9.1") (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4"))) (k 0)) (d (n "semver") (r "^1.0.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0) (p "serde_json")) (d (n "spandoc") (r "^0.2.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_55"))) (d #t) (k 2)) (d (n "tokio") (r "^1.28.2") (f (quote ("rt-multi-thread" "sync" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (f (quote ("buffer" "util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.26") (d #t) (k 0)) (d (n "zebra-test") (r "^1.0.0-beta.26") (o #t) (d #t) (k 0)))) (h "1zl4crkqpq1g0gc99dz4qgfydzs2a2qxa98rc7wq41zdc0r5ikk3") (f (quote (("proptest-impl" "proptest" "proptest-derive" "zebra-test" "zebra-chain/proptest-impl") ("progress-bar" "howudoin") ("getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs")))) (s 2) (e (quote (("elasticsearch" "dep:elasticsearch" "dep:serde_json"))))))

(define-public crate-zebra-state-1.0.0-beta.27 (c (n "zebra-state") (v "1.0.0-beta.27") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("clock" "std"))) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "elasticsearch") (r "^8.5.0-alpha.1") (f (quote ("rustls-tls"))) (o #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "halo2") (r "^0.3.0") (d #t) (k 2) (p "halo2_proofs")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "howudoin") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "insta") (r "^1.30.0") (f (quote ("ron" "redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jubjub") (r "^0.10.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (d #t) (k 0)) (d (n "mset") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "proptest") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "rlimit") (r "^0.9.1") (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4"))) (k 0)) (d (n "semver") (r "^1.0.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.99") (o #t) (d #t) (k 0) (p "serde_json")) (d (n "spandoc") (r "^0.2.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_55"))) (d #t) (k 2)) (d (n "tokio") (r "^1.29.0") (f (quote ("rt-multi-thread" "sync" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29.0") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (f (quote ("buffer" "util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.27") (d #t) (k 0)) (d (n "zebra-test") (r "^1.0.0-beta.27") (o #t) (d #t) (k 0)))) (h "14njhcci6mpih5nm77wvsf4dn1mmg4yagsqy3fa8pznypjv41k5q") (f (quote (("proptest-impl" "proptest" "proptest-derive" "zebra-test" "zebra-chain/proptest-impl") ("progress-bar" "howudoin") ("getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs")))) (s 2) (e (quote (("elasticsearch" "dep:elasticsearch" "dep:serde_json" "zebra-chain/elasticsearch"))))))

(define-public crate-zebra-state-1.0.0-beta.28 (c (n "zebra-state") (v "1.0.0-beta.28") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("clock" "std"))) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "elasticsearch") (r "^8.5.0-alpha.1") (f (quote ("rustls-tls"))) (o #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "halo2") (r "^0.3.0") (d #t) (k 2) (p "halo2_proofs")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "howudoin") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "insta") (r "^1.31.0") (f (quote ("ron" "redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jubjub") (r "^0.10.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.1") (d #t) (k 0)) (d (n "mset") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "proptest") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "rlimit") (r "^0.10.0") (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4"))) (k 0)) (d (n "semver") (r "^1.0.18") (d #t) (k 0)) (d (n "serde") (r "^1.0.168") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.100") (o #t) (d #t) (k 0) (p "serde_json")) (d (n "spandoc") (r "^0.2.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_55"))) (d #t) (k 2)) (d (n "tokio") (r "^1.29.1") (f (quote ("rt-multi-thread" "sync" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (f (quote ("buffer" "util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.28") (f (quote ("async-error"))) (d #t) (k 0)) (d (n "zebra-test") (r "^1.0.0-beta.28") (o #t) (d #t) (k 0)))) (h "1x0lbp3bdg30d52pdamdd76idabp7lvyv5xkngxw5df7fyha660w") (f (quote (("proptest-impl" "proptest" "proptest-derive" "zebra-test" "zebra-chain/proptest-impl") ("progress-bar" "howudoin") ("getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs")))) (s 2) (e (quote (("elasticsearch" "dep:elasticsearch" "dep:serde_json" "zebra-chain/elasticsearch"))))))

(define-public crate-zebra-state-1.0.0-beta.29 (c (n "zebra-state") (v "1.0.0-beta.29") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("clock" "std"))) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "elasticsearch") (r "^8.5.0-alpha.1") (f (quote ("rustls-tls"))) (o #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "halo2") (r "^0.3.0") (d #t) (k 2) (p "halo2_proofs")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "howudoin") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "insta") (r "^1.31.0") (f (quote ("ron" "redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jubjub") (r "^0.10.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.1") (d #t) (k 0)) (d (n "mset") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "proptest") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.9.4") (d #t) (k 0)) (d (n "rlimit") (r "^0.10.1") (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4"))) (k 0)) (d (n "semver") (r "^1.0.18") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0) (p "serde_json")) (d (n "spandoc") (r "^0.2.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_55"))) (d #t) (k 2)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "sync" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (f (quote ("buffer" "util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.29") (f (quote ("async-error"))) (d #t) (k 0)) (d (n "zebra-test") (r "^1.0.0-beta.29") (o #t) (d #t) (k 0)))) (h "1x5vbd8b7zgflpda15yspv5h9a9ivnzkwd4dpcwg8fi2v8w1iwia") (f (quote (("proptest-impl" "proptest" "proptest-derive" "zebra-test" "zebra-chain/proptest-impl") ("progress-bar" "howudoin") ("getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs")))) (s 2) (e (quote (("elasticsearch" "dep:elasticsearch" "dep:serde_json" "zebra-chain/elasticsearch"))))))

(define-public crate-zebra-state-1.0.0-beta.30 (c (n "zebra-state") (v "1.0.0-beta.30") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock" "std"))) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "elasticsearch") (r "^8.5.0-alpha.1") (f (quote ("rustls-tls"))) (o #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "halo2") (r "^0.3.0") (d #t) (k 2) (p "halo2_proofs")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 0)) (d (n "howudoin") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.1") (d #t) (k 0)) (d (n "insta") (r "^1.33.0") (f (quote ("ron" "redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jubjub") (r "^0.10.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.1") (d #t) (k 0)) (d (n "mset") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "proptest") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.0") (d #t) (k 0)) (d (n "rlimit") (r "^0.10.1") (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4"))) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0) (p "serde_json")) (d (n "spandoc") (r "^0.2.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_55"))) (d #t) (k 2)) (d (n "tokio") (r "^1.33.0") (f (quote ("rt-multi-thread" "sync" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (f (quote ("buffer" "util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.39") (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.30") (f (quote ("async-error"))) (d #t) (k 0)) (d (n "zebra-test") (r "^1.0.0-beta.30") (o #t) (d #t) (k 0)))) (h "08b6aals064byjkgnx9sjgd6mn0vcfa6isg37minyrm0dk0x8qs0") (f (quote (("proptest-impl" "proptest" "proptest-derive" "zebra-test" "zebra-chain/proptest-impl") ("progress-bar" "howudoin") ("getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs")))) (s 2) (e (quote (("elasticsearch" "dep:elasticsearch" "dep:serde_json" "zebra-chain/elasticsearch"))))))

(define-public crate-zebra-state-1.0.0-beta.31 (c (n "zebra-state") (v "1.0.0-beta.31") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock" "std"))) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "elasticsearch") (r "^8.5.0-alpha.1") (f (quote ("rustls-tls"))) (o #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "halo2") (r "^0.3.0") (d #t) (k 2) (p "halo2_proofs")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 0)) (d (n "howudoin") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.1") (d #t) (k 0)) (d (n "insta") (r "^1.33.0") (f (quote ("ron" "redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jubjub") (r "^0.10.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.1") (d #t) (k 0)) (d (n "mset") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "proptest") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rlimit") (r "^0.10.1") (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4"))) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (o #t) (d #t) (k 0) (p "serde_json")) (d (n "spandoc") (r "^0.2.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_55"))) (d #t) (k 2)) (d (n "tokio") (r "^1.33.0") (f (quote ("rt-multi-thread" "sync" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (f (quote ("buffer" "util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.39") (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.31") (f (quote ("async-error"))) (d #t) (k 0)) (d (n "zebra-test") (r "^1.0.0-beta.31") (o #t) (d #t) (k 0)))) (h "1ajjfhfiih0jmlljcr52gyzan309wigv9l5lkw1vy8fs17bqg4k8") (f (quote (("proptest-impl" "proptest" "proptest-derive" "zebra-test" "zebra-chain/proptest-impl") ("progress-bar" "howudoin") ("getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs")))) (s 2) (e (quote (("elasticsearch" "dep:elasticsearch" "dep:serde_json" "zebra-chain/elasticsearch"))))))

(define-public crate-zebra-state-1.0.0-beta.32 (c (n "zebra-state") (v "1.0.0-beta.32") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock" "std"))) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "elasticsearch") (r "^8.5.0-alpha.1") (f (quote ("rustls-tls"))) (o #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "halo2") (r "^0.3.0") (d #t) (k 2) (p "halo2_proofs")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 0)) (d (n "howudoin") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.1") (d #t) (k 0)) (d (n "insta") (r "^1.33.0") (f (quote ("ron" "redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "jubjub") (r "^0.10.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.1") (d #t) (k 0)) (d (n "mset") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "proptest") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rlimit") (r "^0.10.1") (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4"))) (k 0)) (d (n "semver") (r "^1.0.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (o #t) (d #t) (k 0) (p "serde_json")) (d (n "spandoc") (r "^0.2.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_55"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt-multi-thread" "sync" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (f (quote ("buffer" "util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.39") (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.32") (f (quote ("async-error"))) (d #t) (k 0)) (d (n "zebra-test") (r "^1.0.0-beta.32") (o #t) (d #t) (k 0)))) (h "03jvl434ijwzd0dr3rcdahx18n3gk4jwqb8xv34ymff8mw5jkwqy") (f (quote (("shielded-scan") ("proptest-impl" "proptest" "proptest-derive" "zebra-test" "zebra-chain/proptest-impl") ("progress-bar" "howudoin") ("getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs")))) (s 2) (e (quote (("elasticsearch" "dep:elasticsearch" "dep:serde_json" "zebra-chain/elasticsearch"))))))

(define-public crate-zebra-state-1.0.0-beta.34 (c (n "zebra-state") (v "1.0.0-beta.34") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock" "std"))) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "elasticsearch") (r "^8.5.0-alpha.1") (f (quote ("rustls-tls"))) (o #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "halo2") (r "^0.3.0") (d #t) (k 2) (p "halo2_proofs")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 0)) (d (n "howudoin") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.1") (d #t) (k 0)) (d (n "insta") (r "^1.33.0") (f (quote ("ron" "redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "jubjub") (r "^0.10.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "metrics") (r "^0.22.0") (d #t) (k 0)) (d (n "mset") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "proptest") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rlimit") (r "^0.10.1") (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4"))) (k 0)) (d (n "semver") (r "^1.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0) (p "serde_json")) (d (n "spandoc") (r "^0.2.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_55"))) (d #t) (k 2)) (d (n "tokio") (r "^1.35.1") (f (quote ("rt-multi-thread" "sync" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (f (quote ("buffer" "util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.39") (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.34") (f (quote ("async-error"))) (d #t) (k 0)) (d (n "zebra-test") (r "^1.0.0-beta.34") (o #t) (d #t) (k 0)))) (h "1ik9dq47gc0h08kgn7csfvwqzif0sw527lv4af06mxqd8j3qgwji") (f (quote (("shielded-scan") ("proptest-impl" "proptest" "proptest-derive" "zebra-test" "zebra-chain/proptest-impl") ("progress-bar" "howudoin") ("getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs")))) (s 2) (e (quote (("elasticsearch" "dep:elasticsearch" "dep:serde_json" "zebra-chain/elasticsearch"))))))

(define-public crate-zebra-state-1.0.0-beta.35 (c (n "zebra-state") (v "1.0.0-beta.35") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.34") (f (quote ("clock" "std"))) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "elasticsearch") (r "^8.5.0-alpha.1") (f (quote ("rustls-tls"))) (o #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "halo2") (r "^0.3.0") (d #t) (k 2) (p "halo2_proofs")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 0)) (d (n "howudoin") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (d #t) (k 0)) (d (n "insta") (r "^1.33.0") (f (quote ("ron" "redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jubjub") (r "^0.10.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "metrics") (r "^0.22.1") (d #t) (k 0)) (d (n "mset") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "proptest") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.8.1") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "rlimit") (r "^0.10.1") (d #t) (k 0)) (d (n "rocksdb") (r "^0.22.0") (f (quote ("lz4"))) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (o #t) (d #t) (k 0) (p "serde_json")) (d (n "spandoc") (r "^0.2.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_55"))) (d #t) (k 2)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt-multi-thread" "sync" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (f (quote ("buffer" "util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.39") (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.35") (f (quote ("async-error"))) (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.35") (f (quote ("proptest-impl"))) (d #t) (k 2)) (d (n "zebra-test") (r "^1.0.0-beta.35") (o #t) (d #t) (k 0)) (d (n "zebra-test") (r "^1.0.0-beta.35") (d #t) (k 2)))) (h "1wbcbrkhk96w0i8sjammiylha8qq1v737aw5r8vjjmm8bjk7dcsm") (f (quote (("shielded-scan") ("proptest-impl" "proptest" "proptest-derive" "zebra-test" "zebra-chain/proptest-impl") ("progress-bar" "howudoin") ("getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs")))) (s 2) (e (quote (("elasticsearch" "dep:elasticsearch" "dep:serde_json" "zebra-chain/elasticsearch"))))))

(define-public crate-zebra-state-1.0.0-beta.36 (c (n "zebra-state") (v "1.0.0-beta.36") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.34") (f (quote ("clock" "std"))) (k 0)) (d (n "color-eyre") (r "^0.6.3") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "elasticsearch") (r "^8.5.0-alpha.1") (f (quote ("rustls-tls"))) (o #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "halo2") (r "^0.3.0") (d #t) (k 2) (p "halo2_proofs")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 0)) (d (n "howudoin") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "human_bytes") (r "^0.4.3") (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.5") (d #t) (k 0)) (d (n "insta") (r "^1.36.1") (f (quote ("ron" "redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jubjub") (r "^0.10.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "metrics") (r "^0.22.3") (d #t) (k 0)) (d (n "mset") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "proptest") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.9.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "rlimit") (r "^0.10.1") (d #t) (k 0)) (d (n "rocksdb") (r "^0.22.0") (f (quote ("lz4"))) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (o #t) (d #t) (k 0) (p "serde_json")) (d (n "spandoc") (r "^0.2.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_55"))) (d #t) (k 2)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt-multi-thread" "sync" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (f (quote ("buffer" "util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.39") (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.36") (f (quote ("async-error"))) (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.36") (f (quote ("proptest-impl"))) (d #t) (k 2)) (d (n "zebra-test") (r "^1.0.0-beta.36") (o #t) (d #t) (k 0)) (d (n "zebra-test") (r "^1.0.0-beta.36") (d #t) (k 2)))) (h "1lcbypqkxmk0hbwldq674a6vkp6kq4v22r3vrh0v4hn837rcpkdc") (f (quote (("shielded-scan") ("proptest-impl" "proptest" "proptest-derive" "zebra-test" "zebra-chain/proptest-impl") ("progress-bar" "howudoin") ("getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs")))) (s 2) (e (quote (("elasticsearch" "dep:elasticsearch" "dep:serde_json" "zebra-chain/elasticsearch"))))))

(define-public crate-zebra-state-1.0.0-beta.37 (c (n "zebra-state") (v "1.0.0-beta.37") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.38") (f (quote ("clock" "std"))) (k 0)) (d (n "color-eyre") (r "^0.6.3") (d #t) (k 2)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "elasticsearch") (r "^8.5.0-alpha.1") (f (quote ("rustls-tls"))) (o #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "halo2") (r "^0.3.0") (d #t) (k 2) (p "halo2_proofs")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 0)) (d (n "howudoin") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "human_bytes") (r "^0.4.3") (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (d #t) (k 0)) (d (n "insta") (r "^1.38.0") (f (quote ("ron" "redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "jubjub") (r "^0.10.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "metrics") (r "^0.22.3") (d #t) (k 0)) (d (n "mset") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "proptest") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "rlimit") (r "^0.10.1") (d #t) (k 0)) (d (n "rocksdb") (r "^0.22.0") (f (quote ("lz4"))) (k 0)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.198") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (o #t) (d #t) (k 0) (p "serde_json")) (d (n "spandoc") (r "^0.2.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.59") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_55"))) (d #t) (k 2)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread" "sync" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (f (quote ("buffer" "util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.39") (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.37") (f (quote ("async-error"))) (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.37") (f (quote ("proptest-impl"))) (d #t) (k 2)) (d (n "zebra-test") (r "^1.0.0-beta.37") (o #t) (d #t) (k 0)) (d (n "zebra-test") (r "^1.0.0-beta.37") (d #t) (k 2)))) (h "01ip3gplw0bx5fv5v6ibj1nqi8xmprjzwppiafbbwy81azp19n4j") (f (quote (("shielded-scan") ("proptest-impl" "proptest" "proptest-derive" "zebra-test" "zebra-chain/proptest-impl") ("progress-bar" "howudoin") ("getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs")))) (s 2) (e (quote (("elasticsearch" "dep:elasticsearch" "dep:serde_json" "zebra-chain/elasticsearch"))))))

