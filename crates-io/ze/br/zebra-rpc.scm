(define-module (crates-io ze br zebra-rpc) #:use-module (crates-io))

(define-public crate-zebra-rpc-0.0.0-placeholder.0 (c (n "zebra-rpc") (v "0.0.0-placeholder.0") (h "1kvarab5wfyzbyr78zda33wdlsg4z64bk2dghl3mzdblvd8ma2pf")))

(define-public crate-zebra-rpc-1.0.0-beta.25 (c (n "zebra-rpc") (v "1.0.0-beta.25") (d (list (d (n "chrono") (r "^0.4.26") (f (quote ("clock" "std"))) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (f (quote ("http1" "server"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("redactions" "json" "ron"))) (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-derive") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-http-server") (r "^18.0.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0) (p "rand")) (d (n "serde") (r "^1.0.164") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 2)) (d (n "tokio") (r "^1.28.2") (f (quote ("time" "rt-multi-thread" "macros" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "zcash_address") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.25") (f (quote ("json-conversion"))) (d #t) (k 0)) (d (n "zebra-consensus") (r "^1.0.0-beta.25") (d #t) (k 0)) (d (n "zebra-network") (r "^1.0.0-beta.25") (d #t) (k 0)) (d (n "zebra-node-services") (r "^1.0.0-beta.25") (d #t) (k 0)) (d (n "zebra-script") (r "^1.0.0-beta.25") (d #t) (k 0)) (d (n "zebra-state") (r "^1.0.0-beta.25") (d #t) (k 0)))) (h "1hckg8xp7rshra5gljnsq8cv1qq7vl6abnk80f3sjs5m1103lp21") (f (quote (("proptest-impl" "proptest" "zebra-consensus/proptest-impl" "zebra-state/proptest-impl" "zebra-network/proptest-impl" "zebra-chain/proptest-impl") ("getblocktemplate-rpcs" "rand" "zcash_address" "zebra-consensus/getblocktemplate-rpcs" "zebra-state/getblocktemplate-rpcs" "zebra-node-services/getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs") ("default"))))))

(define-public crate-zebra-rpc-1.0.0-beta.26 (c (n "zebra-rpc") (v "1.0.0-beta.26") (d (list (d (n "chrono") (r "^0.4.26") (f (quote ("clock" "std"))) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (f (quote ("http1" "server"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("redactions" "json" "ron"))) (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-derive") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-http-server") (r "^18.0.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0) (p "rand")) (d (n "serde") (r "^1.0.164") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 2)) (d (n "tokio") (r "^1.28.2") (f (quote ("time" "rt-multi-thread" "macros" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "zcash_address") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.26") (f (quote ("json-conversion"))) (d #t) (k 0)) (d (n "zebra-consensus") (r "^1.0.0-beta.26") (d #t) (k 0)) (d (n "zebra-network") (r "^1.0.0-beta.26") (d #t) (k 0)) (d (n "zebra-node-services") (r "^1.0.0-beta.26") (d #t) (k 0)) (d (n "zebra-script") (r "^1.0.0-beta.26") (d #t) (k 0)) (d (n "zebra-state") (r "^1.0.0-beta.26") (d #t) (k 0)))) (h "1vkljdyac2aj3rzzpgxxim7j2w4i1zh5vf8gc1ap8bw0mcl7jp8k") (f (quote (("proptest-impl" "proptest" "zebra-consensus/proptest-impl" "zebra-state/proptest-impl" "zebra-network/proptest-impl" "zebra-chain/proptest-impl") ("getblocktemplate-rpcs" "rand" "zcash_address" "zebra-consensus/getblocktemplate-rpcs" "zebra-state/getblocktemplate-rpcs" "zebra-node-services/getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs") ("default"))))))

(define-public crate-zebra-rpc-1.0.0-beta.27 (c (n "zebra-rpc") (v "1.0.0-beta.27") (d (list (d (n "chrono") (r "^0.4.26") (f (quote ("clock" "std"))) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("http1" "server"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.30.0") (f (quote ("redactions" "json" "ron"))) (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-derive") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-http-server") (r "^18.0.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.99") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 2)) (d (n "tokio") (r "^1.29.0") (f (quote ("time" "rt-multi-thread" "macros" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29.0") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "zcash_address") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.27") (f (quote ("json-conversion"))) (d #t) (k 0)) (d (n "zebra-consensus") (r "^1.0.0-beta.27") (d #t) (k 0)) (d (n "zebra-network") (r "^1.0.0-beta.27") (d #t) (k 0)) (d (n "zebra-node-services") (r "^1.0.0-beta.27") (d #t) (k 0)) (d (n "zebra-script") (r "^1.0.0-beta.27") (d #t) (k 0)) (d (n "zebra-state") (r "^1.0.0-beta.27") (d #t) (k 0)))) (h "01c39zjrxszy5xvn2m0j78wv9zyfxlbv5v4phayxwjy1d09pja79") (f (quote (("proptest-impl" "proptest" "zebra-consensus/proptest-impl" "zebra-state/proptest-impl" "zebra-network/proptest-impl" "zebra-chain/proptest-impl") ("getblocktemplate-rpcs" "rand" "zcash_address" "zebra-consensus/getblocktemplate-rpcs" "zebra-state/getblocktemplate-rpcs" "zebra-node-services/getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs") ("default"))))))

(define-public crate-zebra-rpc-1.0.0-beta.28 (c (n "zebra-rpc") (v "1.0.0-beta.28") (d (list (d (n "chrono") (r "^0.4.26") (f (quote ("clock" "std"))) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("http1" "server"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.31.0") (f (quote ("redactions" "json" "ron"))) (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-derive") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-http-server") (r "^18.0.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.168") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.100") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 2)) (d (n "tokio") (r "^1.29.1") (f (quote ("time" "rt-multi-thread" "macros" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "zcash_address") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.28") (f (quote ("json-conversion"))) (d #t) (k 0)) (d (n "zebra-consensus") (r "^1.0.0-beta.28") (d #t) (k 0)) (d (n "zebra-network") (r "^1.0.0-beta.28") (d #t) (k 0)) (d (n "zebra-node-services") (r "^1.0.0-beta.28") (d #t) (k 0)) (d (n "zebra-script") (r "^1.0.0-beta.28") (d #t) (k 0)) (d (n "zebra-state") (r "^1.0.0-beta.28") (d #t) (k 0)))) (h "0i75ib4r2xsqaa6v9l8bhnbb3jfx4hirjw9xscs4d2x059l43p8h") (f (quote (("proptest-impl" "proptest" "zebra-consensus/proptest-impl" "zebra-state/proptest-impl" "zebra-network/proptest-impl" "zebra-chain/proptest-impl") ("getblocktemplate-rpcs" "rand" "zcash_address" "zebra-consensus/getblocktemplate-rpcs" "zebra-state/getblocktemplate-rpcs" "zebra-node-services/getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs") ("default"))))))

(define-public crate-zebra-rpc-1.0.0-beta.29 (c (n "zebra-rpc") (v "1.0.0-beta.29") (d (list (d (n "chrono") (r "^0.4.26") (f (quote ("clock" "std"))) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("http1" "server"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.31.0") (f (quote ("redactions" "json" "ron"))) (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-derive") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-http-server") (r "^18.0.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 2)) (d (n "tokio") (r "^1.32.0") (f (quote ("time" "rt-multi-thread" "macros" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "zcash_address") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.29") (f (quote ("json-conversion"))) (d #t) (k 0)) (d (n "zebra-consensus") (r "^1.0.0-beta.29") (d #t) (k 0)) (d (n "zebra-network") (r "^1.0.0-beta.29") (d #t) (k 0)) (d (n "zebra-node-services") (r "^1.0.0-beta.29") (d #t) (k 0)) (d (n "zebra-script") (r "^1.0.0-beta.29") (d #t) (k 0)) (d (n "zebra-state") (r "^1.0.0-beta.29") (d #t) (k 0)))) (h "0ffrk9sh5shv181zmp1bay1f7m2lg7ghdqv11iidamsi1nx3v3f6") (f (quote (("proptest-impl" "proptest" "zebra-consensus/proptest-impl" "zebra-state/proptest-impl" "zebra-network/proptest-impl" "zebra-chain/proptest-impl") ("getblocktemplate-rpcs" "rand" "zcash_address" "zebra-consensus/getblocktemplate-rpcs" "zebra-state/getblocktemplate-rpcs" "zebra-node-services/getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs") ("default"))))))

(define-public crate-zebra-rpc-1.0.0-beta.30 (c (n "zebra-rpc") (v "1.0.0-beta.30") (d (list (d (n "chrono") (r "^0.4.31") (f (quote ("clock" "std"))) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("http1" "server"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.33.0") (f (quote ("redactions" "json" "ron"))) (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-derive") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-http-server") (r "^18.0.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 2)) (d (n "tokio") (r "^1.33.0") (f (quote ("time" "rt-multi-thread" "macros" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.39") (d #t) (k 0)) (d (n "zcash_address") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.30") (f (quote ("json-conversion"))) (d #t) (k 0)) (d (n "zebra-consensus") (r "^1.0.0-beta.30") (d #t) (k 0)) (d (n "zebra-network") (r "^1.0.0-beta.30") (d #t) (k 0)) (d (n "zebra-node-services") (r "^1.0.0-beta.30") (d #t) (k 0)) (d (n "zebra-script") (r "^1.0.0-beta.30") (d #t) (k 0)) (d (n "zebra-state") (r "^1.0.0-beta.30") (d #t) (k 0)))) (h "140lijdiawrr8yln8b3w3jcjd4h3pnxf3hx3c47vxqvmjbng3sdr") (f (quote (("proptest-impl" "proptest" "zebra-consensus/proptest-impl" "zebra-state/proptest-impl" "zebra-network/proptest-impl" "zebra-chain/proptest-impl") ("getblocktemplate-rpcs" "rand" "zcash_address" "zebra-consensus/getblocktemplate-rpcs" "zebra-state/getblocktemplate-rpcs" "zebra-node-services/getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs") ("default"))))))

(define-public crate-zebra-rpc-1.0.0-beta.31 (c (n "zebra-rpc") (v "1.0.0-beta.31") (d (list (d (n "chrono") (r "^0.4.31") (f (quote ("clock" "std"))) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("http1" "server"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.33.0") (f (quote ("redactions" "json" "ron"))) (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-derive") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-http-server") (r "^18.0.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 2)) (d (n "tokio") (r "^1.33.0") (f (quote ("time" "rt-multi-thread" "macros" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.39") (d #t) (k 0)) (d (n "zcash_address") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.31") (f (quote ("json-conversion"))) (d #t) (k 0)) (d (n "zebra-consensus") (r "^1.0.0-beta.31") (d #t) (k 0)) (d (n "zebra-network") (r "^1.0.0-beta.31") (d #t) (k 0)) (d (n "zebra-node-services") (r "^1.0.0-beta.31") (d #t) (k 0)) (d (n "zebra-script") (r "^1.0.0-beta.31") (d #t) (k 0)) (d (n "zebra-state") (r "^1.0.0-beta.31") (d #t) (k 0)))) (h "1ncdsl29p71as15ys28xl05fgz9bddif5vmmn0iifi3cq857v1jp") (f (quote (("proptest-impl" "proptest" "zebra-consensus/proptest-impl" "zebra-state/proptest-impl" "zebra-network/proptest-impl" "zebra-chain/proptest-impl") ("getblocktemplate-rpcs" "rand" "zcash_address" "zebra-consensus/getblocktemplate-rpcs" "zebra-state/getblocktemplate-rpcs" "zebra-node-services/getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs") ("default"))))))

(define-public crate-zebra-rpc-1.0.0-beta.32 (c (n "zebra-rpc") (v "1.0.0-beta.32") (d (list (d (n "chrono") (r "^0.4.31") (f (quote ("clock" "std"))) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("http1" "server"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.33.0") (f (quote ("redactions" "json" "ron"))) (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-derive") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-http-server") (r "^18.0.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("time" "rt-multi-thread" "macros" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.39") (d #t) (k 0)) (d (n "zcash_address") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.32") (f (quote ("json-conversion"))) (d #t) (k 0)) (d (n "zebra-consensus") (r "^1.0.0-beta.32") (d #t) (k 0)) (d (n "zebra-network") (r "^1.0.0-beta.32") (d #t) (k 0)) (d (n "zebra-node-services") (r "^1.0.0-beta.32") (d #t) (k 0)) (d (n "zebra-script") (r "^1.0.0-beta.32") (d #t) (k 0)) (d (n "zebra-state") (r "^1.0.0-beta.32") (d #t) (k 0)))) (h "13kj9d37am7q1b366n1lq2i0blbxbdg1r0xrhzsy4b9dkyqvslc8") (f (quote (("proptest-impl" "proptest" "zebra-consensus/proptest-impl" "zebra-state/proptest-impl" "zebra-network/proptest-impl" "zebra-chain/proptest-impl") ("getblocktemplate-rpcs" "rand" "zcash_address" "zebra-consensus/getblocktemplate-rpcs" "zebra-state/getblocktemplate-rpcs" "zebra-node-services/getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs") ("default"))))))

(define-public crate-zebra-rpc-1.0.0-beta.34 (c (n "zebra-rpc") (v "1.0.0-beta.34") (d (list (d (n "chrono") (r "^0.4.31") (f (quote ("clock" "std"))) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("http1" "server"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.33.0") (f (quote ("redactions" "json" "ron"))) (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-derive") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-http-server") (r "^18.0.0") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 2)) (d (n "tokio") (r "^1.35.1") (f (quote ("time" "rt-multi-thread" "macros" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.39") (d #t) (k 0)) (d (n "zcash_address") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.34") (f (quote ("json-conversion"))) (d #t) (k 0)) (d (n "zebra-consensus") (r "^1.0.0-beta.34") (d #t) (k 0)) (d (n "zebra-network") (r "^1.0.0-beta.34") (d #t) (k 0)) (d (n "zebra-node-services") (r "^1.0.0-beta.34") (d #t) (k 0)) (d (n "zebra-script") (r "^1.0.0-beta.34") (d #t) (k 0)) (d (n "zebra-state") (r "^1.0.0-beta.34") (d #t) (k 0)))) (h "1wygx245cirivm5c5nm9x0sa49s45gsxmf81r9asn8084jqprqkn") (f (quote (("proptest-impl" "proptest" "zebra-consensus/proptest-impl" "zebra-state/proptest-impl" "zebra-network/proptest-impl" "zebra-chain/proptest-impl") ("internal-miner") ("getblocktemplate-rpcs" "rand" "zcash_address" "zebra-consensus/getblocktemplate-rpcs" "zebra-state/getblocktemplate-rpcs" "zebra-node-services/getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs") ("default"))))))

(define-public crate-zebra-rpc-1.0.0-beta.35 (c (n "zebra-rpc") (v "1.0.0-beta.35") (d (list (d (n "chrono") (r "^0.4.34") (f (quote ("clock" "std"))) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("http1" "server"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.33.0") (f (quote ("redactions" "json" "ron"))) (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-derive") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-http-server") (r "^18.0.0") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 2)) (d (n "tokio") (r "^1.36.0") (f (quote ("time" "rt-multi-thread" "macros" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.39") (d #t) (k 0)) (d (n "zcash_address") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.35") (f (quote ("json-conversion"))) (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.35") (f (quote ("proptest-impl"))) (d #t) (k 2)) (d (n "zebra-consensus") (r "^1.0.0-beta.35") (d #t) (k 0)) (d (n "zebra-consensus") (r "^1.0.0-beta.35") (f (quote ("proptest-impl"))) (d #t) (k 2)) (d (n "zebra-network") (r "^1.0.0-beta.35") (d #t) (k 0)) (d (n "zebra-network") (r "^1.0.0-beta.35") (f (quote ("proptest-impl"))) (d #t) (k 2)) (d (n "zebra-node-services") (r "^1.0.0-beta.35") (d #t) (k 0)) (d (n "zebra-script") (r "^1.0.0-beta.35") (d #t) (k 0)) (d (n "zebra-state") (r "^1.0.0-beta.35") (d #t) (k 0)) (d (n "zebra-state") (r "^1.0.0-beta.35") (f (quote ("proptest-impl"))) (d #t) (k 2)) (d (n "zebra-test") (r "^1.0.0-beta.35") (d #t) (k 2)))) (h "183q1yq5phyvvclcsqai6sr5g27kiwb7jks1fvrv1205ipw90zrp") (f (quote (("proptest-impl" "proptest" "zebra-consensus/proptest-impl" "zebra-state/proptest-impl" "zebra-network/proptest-impl" "zebra-chain/proptest-impl") ("internal-miner") ("getblocktemplate-rpcs" "rand" "zcash_address" "zebra-consensus/getblocktemplate-rpcs" "zebra-state/getblocktemplate-rpcs" "zebra-node-services/getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs") ("default"))))))

(define-public crate-zebra-rpc-1.0.0-beta.36 (c (n "zebra-rpc") (v "1.0.0-beta.36") (d (list (d (n "chrono") (r "^0.4.34") (f (quote ("clock" "std"))) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("http1" "server"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.36.1") (f (quote ("redactions" "json" "ron"))) (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-derive") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-http-server") (r "^18.0.0") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 2)) (d (n "tokio") (r "^1.36.0") (f (quote ("time" "rt-multi-thread" "macros" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.39") (d #t) (k 0)) (d (n "zcash_address") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.36") (f (quote ("json-conversion"))) (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.36") (f (quote ("proptest-impl"))) (d #t) (k 2)) (d (n "zebra-consensus") (r "^1.0.0-beta.36") (d #t) (k 0)) (d (n "zebra-consensus") (r "^1.0.0-beta.36") (f (quote ("proptest-impl"))) (d #t) (k 2)) (d (n "zebra-network") (r "^1.0.0-beta.36") (d #t) (k 0)) (d (n "zebra-network") (r "^1.0.0-beta.36") (f (quote ("proptest-impl"))) (d #t) (k 2)) (d (n "zebra-node-services") (r "^1.0.0-beta.36") (d #t) (k 0)) (d (n "zebra-script") (r "^1.0.0-beta.36") (d #t) (k 0)) (d (n "zebra-state") (r "^1.0.0-beta.36") (d #t) (k 0)) (d (n "zebra-state") (r "^1.0.0-beta.36") (f (quote ("proptest-impl"))) (d #t) (k 2)) (d (n "zebra-test") (r "^1.0.0-beta.36") (d #t) (k 2)))) (h "0ylbk7k19jrkkp8644v90mhyxxhg6zaccpydbykl49i10df8f1v4") (f (quote (("proptest-impl" "proptest" "zebra-consensus/proptest-impl" "zebra-state/proptest-impl" "zebra-network/proptest-impl" "zebra-chain/proptest-impl") ("internal-miner") ("getblocktemplate-rpcs" "rand" "zcash_address" "zebra-consensus/getblocktemplate-rpcs" "zebra-state/getblocktemplate-rpcs" "zebra-node-services/getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs") ("default"))))))

(define-public crate-zebra-rpc-1.0.0-beta.37 (c (n "zebra-rpc") (v "1.0.0-beta.37") (d (list (d (n "chrono") (r "^0.4.38") (f (quote ("clock" "std"))) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("http1" "server"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.38.0") (f (quote ("redactions" "json" "ron"))) (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-derive") (r "^18.0.0") (d #t) (k 0)) (d (n "jsonrpc-http-server") (r "^18.0.0") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.198") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.59") (d #t) (k 2)) (d (n "tokio") (r "^1.37.0") (f (quote ("time" "rt-multi-thread" "macros" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full" "tracing" "test-util"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.39") (d #t) (k 0)) (d (n "zcash_address") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.37") (f (quote ("json-conversion"))) (d #t) (k 0)) (d (n "zebra-chain") (r "^1.0.0-beta.37") (f (quote ("proptest-impl"))) (d #t) (k 2)) (d (n "zebra-consensus") (r "^1.0.0-beta.37") (d #t) (k 0)) (d (n "zebra-consensus") (r "^1.0.0-beta.37") (f (quote ("proptest-impl"))) (d #t) (k 2)) (d (n "zebra-network") (r "^1.0.0-beta.37") (d #t) (k 0)) (d (n "zebra-network") (r "^1.0.0-beta.37") (f (quote ("proptest-impl"))) (d #t) (k 2)) (d (n "zebra-node-services") (r "^1.0.0-beta.37") (d #t) (k 0)) (d (n "zebra-script") (r "^1.0.0-beta.37") (d #t) (k 0)) (d (n "zebra-state") (r "^1.0.0-beta.37") (d #t) (k 0)) (d (n "zebra-state") (r "^1.0.0-beta.37") (f (quote ("proptest-impl"))) (d #t) (k 2)) (d (n "zebra-test") (r "^1.0.0-beta.37") (d #t) (k 2)))) (h "19lag5fflzbgx35pd1i3fmsk9klr08yn9hmc4ycxxy1r7qjvig6p") (f (quote (("proptest-impl" "proptest" "zebra-consensus/proptest-impl" "zebra-state/proptest-impl" "zebra-network/proptest-impl" "zebra-chain/proptest-impl") ("internal-miner") ("getblocktemplate-rpcs" "rand" "zcash_address" "zebra-consensus/getblocktemplate-rpcs" "zebra-state/getblocktemplate-rpcs" "zebra-node-services/getblocktemplate-rpcs" "zebra-chain/getblocktemplate-rpcs") ("default"))))))

