(define-module (crates-io ze no zenoh-flow-descriptors) #:use-module (crates-io))

(define-public crate-zenoh-flow-descriptors-0.6.0-alpha (c (n "zenoh-flow-descriptors") (v "0.6.0-alpha") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "zenoh-flow-commons") (r "^0.6.0-alpha") (d #t) (k 0)) (d (n "zenoh-keyexpr") (r "^0.10.1-rc") (d #t) (k 0)))) (h "0r6w9sfpq94dvbvgchajd7zzq6fjigkjh5nshv8ik5cy9mvfzrll") (f (quote (("shared-memory") ("default"))))))

(define-public crate-zenoh-flow-descriptors-0.6.0-alpha.1 (c (n "zenoh-flow-descriptors") (v "0.6.0-alpha.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "zenoh-flow-commons") (r "^0.6.0-alpha.1") (d #t) (k 0)) (d (n "zenoh-keyexpr") (r "^0.10.1-rc") (d #t) (k 0)))) (h "14x6l89dgpqdzb4xpmpbskfmvqjq4zw3ki47j03r1pjrcq8jncja") (f (quote (("shared-memory") ("default")))) (y #t)))

