(define-module (crates-io ze no zenoh-flow-nodes) #:use-module (crates-io))

(define-public crate-zenoh-flow-nodes-0.6.0-alpha (c (n "zenoh-flow-nodes") (v "0.6.0-alpha") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "prost") (r "^0.12") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "uhlc") (r "^0.6") (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "zenoh-flow-commons") (r "^0.6.0-alpha") (d #t) (k 0)) (d (n "zenoh-flow-derive") (r "^0.6.0-alpha") (d #t) (k 0)))) (h "0v1r3xkcjcib9ar40d1711w1fw792hgaxgfs9azw6bxgxf8q51hf")))

(define-public crate-zenoh-flow-nodes-0.6.0-alpha.1 (c (n "zenoh-flow-nodes") (v "0.6.0-alpha.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.15") (d #t) (k 0)) (d (n "prost") (r "^0.12") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "uhlc") (r "^0.6") (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "zenoh-flow-commons") (r "^0.6.0-alpha.1") (d #t) (k 0)) (d (n "zenoh-flow-derive") (r "^0.6.0-alpha.1") (d #t) (k 0)))) (h "0ppd90b3d76s93fmv2q3gfn5yk4afd6qj1yzkixb8582ja5nx3df") (y #t)))

