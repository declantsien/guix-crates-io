(define-module (crates-io ze no zenoh-protocol) #:use-module (crates-io))

(define-public crate-zenoh-protocol-0.5.0-beta.1 (c (n "zenoh-protocol") (v "0.5.0-beta.1") (d (list (d (n "async-std") (r "=1.6.2") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.38") (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "http-types") (r "^2.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "uhlc") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "zenoh-util") (r "^0.5.0-beta.1") (d #t) (k 0)))) (h "0iszvd44civ0s36206b4cj9629bc7gxny4r56zl5yxn8ndvipmnc") (f (quote (("udp") ("tcp") ("default" "tcp" "udp"))))))

(define-public crate-zenoh-protocol-0.5.0-beta.2 (c (n "zenoh-protocol") (v "0.5.0-beta.2") (d (list (d (n "async-std") (r "=1.6.4") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.38") (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "http-types") (r "^2.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "uhlc") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "zenoh-util") (r "^0.5.0-beta.2") (d #t) (k 0)))) (h "0acfzfpldx0647la3c93l6zq1nzi6c5vi02f883jhl456pbm95g4") (f (quote (("udp") ("tcp") ("default" "tcp" "udp"))))))

(define-public crate-zenoh-protocol-0.5.0-beta.3 (c (n "zenoh-protocol") (v "0.5.0-beta.3") (d (list (d (n "async-std") (r "=1.6.4") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.38") (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "http-types") (r "^2.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "uhlc") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "zenoh-util") (r "^0.5.0-beta.3") (d #t) (k 0)))) (h "1zdb91l165j06fnzf2zg72iwm56p7hq0kqa3cnyrsd3di1wv2xvx") (f (quote (("udp") ("tcp") ("default" "tcp" "udp"))))))

(define-public crate-zenoh-protocol-0.5.0-beta.4 (c (n "zenoh-protocol") (v "0.5.0-beta.4") (d (list (d (n "async-std") (r "=1.6.5") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.38") (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "http-types") (r "^2.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "uhlc") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "zenoh-util") (r "^0.5.0-beta.4") (d #t) (k 0)))) (h "1kwdcb5b1idrcivqqwp3r9dwbrnk2psj4rf9n2qbav3r5vbz54rb") (f (quote (("udp") ("tcp") ("default" "tcp" "udp"))))))

(define-public crate-zenoh-protocol-0.5.0-beta.5 (c (n "zenoh-protocol") (v "0.5.0-beta.5") (d (list (d (n "async-std") (r "=1.6.5") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.38") (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "http-types") (r "^2.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "uhlc") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "zenoh-util") (r "^0.5.0-beta.5") (d #t) (k 0)))) (h "026ksx839rsanyrlw2dys8lhd303ylisykarcf3j3bmvnj50viwm") (f (quote (("udp") ("tcp") ("default" "tcp" "udp"))))))

(define-public crate-zenoh-protocol-0.5.0-beta.7 (c (n "zenoh-protocol") (v "0.5.0-beta.7") (d (list (d (n "aes-soft") (r "^0.6.4") (d #t) (k 0)) (d (n "async-std") (r "=1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "http-types") (r "^2.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nix") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (d #t) (k 0)) (d (n "shared_memory") (r "^0.11.4") (d #t) (k 0)) (d (n "uhlc") (r "^0.2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "zenoh-util") (r "^0.5.0-beta.7") (d #t) (k 0)))) (h "107z47n73n6kjk2fw71i04jqkvbyx98pr582264czax6c6dx50b1") (f (quote (("zero-copy") ("transport_unixsock-stream" "nix") ("transport_udp") ("transport_tcp") ("default" "zero-copy" "transport_tcp" "transport_udp" "transport_unixsock-stream"))))))

(define-public crate-zenoh-protocol-0.6.0-beta.1 (c (n "zenoh-protocol") (v "0.6.0-beta.1") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "uhlc") (r "^0.5.1") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("v4"))) (d #t) (k 2)) (d (n "zenoh-buffers") (r "^0.6.0-beta.1") (d #t) (k 0)) (d (n "zenoh-core") (r "^0.6.0-beta.1") (d #t) (k 0)) (d (n "zenoh-protocol-core") (r "^0.6.0-beta.1") (d #t) (k 0)))) (h "1ij6ayr0sfwwfz1vhfcqhwq2r5fzwh7gl4ib0f3wd4ghfm6q9724") (f (quote (("shared-memory" "zenoh-buffers/shared-memory") ("complete_n" "zenoh-protocol-core/complete_n")))) (r "1.62.1")))

(define-public crate-zenoh-protocol-0.7.0-rc (c (n "zenoh-protocol") (v "0.7.0-rc") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "uhlc") (r "^0.5.1") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("v4"))) (d #t) (k 2)) (d (n "zenoh-buffers") (r "^0.7.0-rc") (d #t) (k 0)) (d (n "zenoh-core") (r "^0.7.0-rc") (d #t) (k 0)) (d (n "zenoh-protocol-core") (r "^0.7.0-rc") (d #t) (k 0)))) (h "12csr2p0m3jh3by4qyp4pn1misak94cgsj014fj43n99dr2h0jhp") (f (quote (("shared-memory" "zenoh-buffers/shared-memory") ("complete_n" "zenoh-protocol-core/complete_n")))) (r "1.62.1")))

(define-public crate-zenoh-protocol-0.7.1-rc (c (n "zenoh-protocol") (v "0.7.1-rc") (d (list (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc" "getrandom"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive" "alloc"))) (k 0)) (d (n "uhlc") (r "^0.5.2") (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (k 0)) (d (n "zenoh-buffers") (r "^0.7.1-rc") (d #t) (k 0)) (d (n "zenoh-keyexpr") (r "^0.7.1-rc") (k 0)) (d (n "zenoh-result") (r "^0.7.1-rc") (k 0)))) (h "094w75lyfc7yknrrcvd6slqx5b48dlbp0bag9fm4pg88hbc7bp6l") (f (quote (("test" "rand" "zenoh-buffers/test") ("shared-memory" "std") ("default" "std") ("complete_n")))) (y #t) (s 2) (e (quote (("std" "hex/std" "rand?/std" "rand?/std_rng" "serde/std" "uhlc/std" "uuid/std" "zenoh-keyexpr/std" "zenoh-result/std")))) (r "1.65.0")))

(define-public crate-zenoh-protocol-0.7.2-rc (c (n "zenoh-protocol") (v "0.7.2-rc") (d (list (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc" "getrandom"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive" "alloc"))) (k 0)) (d (n "uhlc") (r "^0.6.0") (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (k 0)) (d (n "zenoh-buffers") (r "^0.7.2-rc") (d #t) (k 0)) (d (n "zenoh-keyexpr") (r "^0.7.2-rc") (k 0)) (d (n "zenoh-result") (r "^0.7.2-rc") (k 0)))) (h "0j7f73mlx5my4yn8m51xm4fc916mjk1vdqxw07kbmv3xmnn908p5") (f (quote (("test" "rand" "zenoh-buffers/test") ("shared-memory" "std") ("default" "std") ("complete_n")))) (s 2) (e (quote (("std" "hex/std" "rand?/std" "rand?/std_rng" "serde/std" "uhlc/std" "uuid/std" "zenoh-keyexpr/std" "zenoh-result/std")))) (r "1.65.0")))

(define-public crate-zenoh-protocol-0.10.0-rc (c (n "zenoh-protocol") (v "0.10.0-rc") (d (list (d (n "const_format") (r "^0.2.30") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc" "getrandom"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive" "alloc"))) (k 0)) (d (n "uhlc") (r "^0.6.0") (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (k 0)) (d (n "zenoh-buffers") (r "^0.10.0-rc") (k 0)) (d (n "zenoh-keyexpr") (r "^0.10.0-rc") (k 0)) (d (n "zenoh-result") (r "^0.10.0-rc") (k 0)))) (h "1fx464rmn31pk93m6w5bvv0pi8p016952idzxlzcffqz42fvya0y") (f (quote (("test" "rand" "zenoh-buffers/test") ("stats") ("shared-memory" "std" "zenoh-buffers/shared-memory") ("default" "std") ("complete_n")))) (s 2) (e (quote (("std" "hex/std" "rand?/std" "rand?/std_rng" "serde/std" "uhlc/std" "uuid/std" "zenoh-keyexpr/std" "zenoh-result/std")))) (r "1.66.1")))

(define-public crate-zenoh-protocol-0.10.1-rc (c (n "zenoh-protocol") (v "0.10.1-rc") (d (list (d (n "const_format") (r "^0.2.30") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc" "getrandom"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("default"))) (k 2)) (d (n "serde") (r "^1.0.154") (f (quote ("derive" "alloc"))) (k 0)) (d (n "uhlc") (r "^0.6.0") (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (k 0)) (d (n "zenoh-buffers") (r "^0.10.1-rc") (k 0)) (d (n "zenoh-keyexpr") (r "^0.10.1-rc") (k 0)) (d (n "zenoh-result") (r "^0.10.1-rc") (k 0)))) (h "0g7gnaskprznclq3xplwix2g1ql4zb30lnz8cn8hpxllb8a93bxl") (f (quote (("test" "rand" "zenoh-buffers/test") ("stats") ("shared-memory" "std" "zenoh-buffers/shared-memory") ("default" "std") ("complete_n")))) (s 2) (e (quote (("std" "hex/std" "rand?/std" "rand?/std_rng" "serde/std" "uhlc/std" "uuid/std" "zenoh-keyexpr/std" "zenoh-result/std")))) (r "1.66.1")))

(define-public crate-zenoh-protocol-0.11.0-rc.1 (c (n "zenoh-protocol") (v "0.11.0-rc.1") (d (list (d (n "const_format") (r "^0.2.30") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc" "getrandom"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("default"))) (k 2)) (d (n "serde") (r "^1.0.154") (f (quote ("derive" "alloc"))) (k 0)) (d (n "uhlc") (r "^0.7.0") (k 0)) (d (n "zenoh-buffers") (r "^0.11.0-rc.1") (k 0)) (d (n "zenoh-keyexpr") (r "^0.11.0-rc.1") (k 0)) (d (n "zenoh-result") (r "^0.11.0-rc.1") (k 0)))) (h "0g9cn5fzl9ijd9sc1c0sxbv38vk09kf2naj7c8k1z771y4b81vd8") (f (quote (("test" "rand" "zenoh-buffers/test") ("stats") ("shared-memory" "std" "zenoh-buffers/shared-memory") ("default" "std") ("complete_n")))) (s 2) (e (quote (("std" "rand?/std" "rand?/std_rng" "serde/std" "uhlc/std" "zenoh-keyexpr/std" "zenoh-result/std")))) (r "1.66.1")))

(define-public crate-zenoh-protocol-0.11.0-rc.2 (c (n "zenoh-protocol") (v "0.11.0-rc.2") (d (list (d (n "const_format") (r "^0.2.30") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc" "getrandom"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("default"))) (k 2)) (d (n "serde") (r "^1.0.154") (f (quote ("derive" "alloc"))) (k 0)) (d (n "uhlc") (r "^0.7.0") (k 0)) (d (n "zenoh-buffers") (r "^0.11.0-rc.2") (k 0)) (d (n "zenoh-keyexpr") (r "^0.11.0-rc.2") (k 0)) (d (n "zenoh-result") (r "^0.11.0-rc.2") (k 0)))) (h "0yvdwjkrcr3csmlgn3mbplh3964li4zy55mkw2iicd8glygwn9ry") (f (quote (("test" "rand" "zenoh-buffers/test") ("stats") ("shared-memory" "std" "zenoh-buffers/shared-memory") ("default" "std") ("complete_n")))) (s 2) (e (quote (("std" "rand?/std" "rand?/std_rng" "serde/std" "uhlc/std" "zenoh-keyexpr/std" "zenoh-result/std")))) (r "1.66.1")))

(define-public crate-zenoh-protocol-0.11.0-rc.3 (c (n "zenoh-protocol") (v "0.11.0-rc.3") (d (list (d (n "const_format") (r "^0.2.30") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc" "getrandom"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("default"))) (k 2)) (d (n "serde") (r "^1.0.154") (f (quote ("derive" "alloc"))) (k 0)) (d (n "uhlc") (r "^0.7.0") (k 0)) (d (n "zenoh-buffers") (r "^0.11.0-rc.3") (k 0)) (d (n "zenoh-keyexpr") (r "^0.11.0-rc.3") (k 0)) (d (n "zenoh-result") (r "^0.11.0-rc.3") (k 0)))) (h "1wkkrj8gjkb69ix0p44hyy51saiml7wpdqqlbm35mg9vk73hn93h") (f (quote (("test" "rand" "zenoh-buffers/test") ("stats") ("shared-memory" "std" "zenoh-buffers/shared-memory") ("default" "std") ("complete_n")))) (s 2) (e (quote (("std" "rand?/std" "rand?/std_rng" "serde/std" "uhlc/std" "zenoh-keyexpr/std" "zenoh-result/std")))) (r "1.72.0")))

