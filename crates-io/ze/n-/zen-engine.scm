(define-module (crates-io ze n- zen-engine) #:use-module (crates-io))

(define-public crate-zen-engine-0.0.0 (c (n "zen-engine") (v "0.0.0") (h "1ab9v9l933ianwaibb8h23njbnj1zrm8dmm7cdp6f2zgdyrrmckx")))

(define-public crate-zen-engine-0.1.0 (c (n "zen-engine") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.88.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "v8") (r "^0.66.0") (d #t) (k 0)) (d (n "zen-vm") (r "^0.1.0") (d #t) (k 0)))) (h "19l6za1rklmk657z7q2fcx711asw4287ycm2rcasjn8kpia1q92p") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.1.2 (c (n "zen-engine") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.88.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "v8") (r "^0.66.0") (d #t) (k 0)) (d (n "zen-vm") (r "^0.1.0") (d #t) (k 0)))) (h "0kax4kvkb9ayxqj9q4wb2x9g74q77xks9p5irixrcq0lwnbhypry") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.1.6 (c (n "zen-engine") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.88.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "v8") (r "^0.66.0") (d #t) (k 0)) (d (n "zen-vm") (r "^0.1.6") (d #t) (k 0)))) (h "1k3q82bq02jmq791m1mdss8vfzf9qcpmnsw4j7wi78jjy62z6g16") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.1.7 (c (n "zen-engine") (v "0.1.7") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.88.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "v8") (r "^0.66.0") (d #t) (k 0)) (d (n "zen-vm") (r "^0.1.7") (d #t) (k 0)))) (h "1bm3z9z5dx1vhzp6fy875zwiljjqwkcx9b6dwqnfknlhrwc1szzm") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.2.0 (c (n "zen-engine") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.88.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "v8") (r "^0.66.0") (d #t) (k 0)) (d (n "zen-vm") (r "^0.2.0") (d #t) (k 0)))) (h "0wihvvxhxn24nrwsziibjysnpkanr1dxz00w9kj3ysr2nkvs0vk2") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.2.1 (c (n "zen-engine") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.88.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "v8") (r "^0.66.0") (d #t) (k 0)) (d (n "zen-vm") (r "^0.2.1") (d #t) (k 0)))) (h "0zk1f8ykmz22qciilbgv4ng59f10l41pprkblhfrs1b2bbb4xcyr") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.3.0 (c (n "zen-engine") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.88.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "v8") (r "^0.66.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.3.0") (d #t) (k 0)))) (h "10ny8gi6mvpzyg75bs5xwak96d80v9lk31fvcikg6kbqskk3n8c7") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.3.1 (c (n "zen-engine") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.88.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "v8") (r "^0.66.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.3.1") (d #t) (k 0)))) (h "15sprzza2gkkfp2a33l4m44wlrxmp3ll08lkrsrrfni28gpyn9h0") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.3.2 (c (n "zen-engine") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.88.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "v8") (r "^0.66.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.3.2") (d #t) (k 0)))) (h "1m9h7s32h6k7zn4zbh1v16r2dj5b7a21yimnr3lbj5k3pbd64996") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.3.3 (c (n "zen-engine") (v "0.3.3") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.88.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "v8") (r "^0.66.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.3.3") (d #t) (k 0)))) (h "1bagd1npw6nfyc4wwaz8ir4wxv0j6b5r5m5azyil80aq9x82dw2i") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.3.4 (c (n "zen-engine") (v "0.3.4") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.88.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "v8") (r "^0.66.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.3.4") (d #t) (k 0)))) (h "0vd90yma2ymags8cjmnq4zfdf3mz2ir31syw98babnvzahjlpy8i") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.4.0 (c (n "zen-engine") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.88.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "v8") (r "^0.66.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.4.0") (d #t) (k 0)))) (h "0fp7mxvx8m5bkvqvppr59x337cyrabh86qvmswibxc5k8v98qkph") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.4.1 (c (n "zen-engine") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.88.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "v8") (r "^0.66.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.4.1") (d #t) (k 0)))) (h "0i5nw6p2vcy72q7dpijb6x305lgh7riifcj61hcc849f2phzwgwz") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.5.0 (c (n "zen-engine") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.88.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "v8") (r "^0.66.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.5.0") (d #t) (k 0)))) (h "0n38nrn61d22q5qz792mai9g18n9z3vb8hpdbqwkvj7lj79y1r62") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.5.1 (c (n "zen-engine") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.27") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.88.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "v8") (r "^0.66.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.5.1") (d #t) (k 0)))) (h "0mfw9s491sval74ydbkrsy9ipvmi0y065bllzg2bjyvgxzyl5nxb") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.5.2 (c (n "zen-engine") (v "0.5.2") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.100.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "v8") (r "^0.73.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.5.2") (d #t) (k 0)))) (h "1kniq3g0sdbbr3ccbqdi8h4fg3jrkzhqwlrilvnl1asdpvyzi67d") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.6.0 (c (n "zen-engine") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.103.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "v8") (r "^0.74.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.6.0") (d #t) (k 0)))) (h "0nnqx5ci0znpvmfqznf3qnvvydf7dwy5b1n6bxc2z883j5w06z9h") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.7.0 (c (n "zen-engine") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.103.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "v8") (r "^0.74.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.7.0") (d #t) (k 0)))) (h "1pgbcikxb1dbyv96rr2nqwyn33d4049j7ifnwvcnlsbdylwz5xy8") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.7.1 (c (n "zen-engine") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.103.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "v8") (r "^0.74.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.7.1") (d #t) (k 0)))) (h "0fb4mrhkrm4aj1rp9r5mdx2iap4l232wrwpm3j7bl5z4kd07bcr5") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.7.2 (c (n "zen-engine") (v "0.7.2") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.103.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "v8") (r "^0.74.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.7.2") (d #t) (k 0)))) (h "0mp6ry3p00gs5xr4kvfi4wqbnxln2wp8xhnimpzz20w94p0jdlv6") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.8.0 (c (n "zen-engine") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.103.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "v8") (r "^0.74.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.8.0") (d #t) (k 0)))) (h "01w79pf1gyckq1l6hh20f7paf0zlh0hsbar6ijrv95fb4sr7yd1q") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.9.0 (c (n "zen-engine") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.103.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "v8") (r "^0.74.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.9.0") (d #t) (k 0)))) (h "0jic5qcln38s2hdzzaw6jyff4g1xwdjzq1j1crn4x1s5w0fmy5ls") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.9.1 (c (n "zen-engine") (v "0.9.1") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.103.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "v8") (r "^0.74.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.9.1") (d #t) (k 0)))) (h "1gnk4w4fh8fg9rbz1y0jnxfn645qv3q34yryfrf7vc52h662aq4i") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.9.2 (c (n "zen-engine") (v "0.9.2") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.103.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "v8") (r "^0.74.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.9.2") (d #t) (k 0)))) (h "0bvwlyxqnh9caxvf2bhv2q671zs25ds709i3vi269prylfqxwqd1") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.10.0 (c (n "zen-engine") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.103.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "v8") (r "^0.74.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.10.0") (d #t) (k 0)))) (h "150wqhsn586clir23b5m2b746rnimb7mxwjs7q5glw1614ylbdkh") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.11.0 (c (n "zen-engine") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.121.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "v8") (r "^0.76.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.11.0") (d #t) (k 0)))) (h "0ysdknd1d9lm63lahqagn6f2c5rc67nrfd165j2mzl9clvvps4c2") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.12.0 (c (n "zen-engine") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.121.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "v8") (r "^0.76.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.12.0") (d #t) (k 0)))) (h "1gwxf4m5v2bwy381hgjzsgrj87r8d142f464xs87cyfbn48m1j31") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.13.0 (c (n "zen-engine") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.121.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "v8") (r "^0.76.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.13.0") (d #t) (k 0)))) (h "07rwnj9hgd4rka84q31b71m4jiriv7dd9qdibg70r681qci2xgfc") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.14.0 (c (n "zen-engine") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.121.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "v8") (r "^0.76.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.14.0") (d #t) (k 0)))) (h "0xqngp970ain88zs17yk0djrqx057q56lawgs1z1licrgj7z0cx7") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.15.0 (c (n "zen-engine") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.121.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "v8") (r "^0.76.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.15.0") (d #t) (k 0)))) (h "14c63qc4q1z73w9pgc4gpibjmy3n9zfwlrp099w926rd7n1fc4mk") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.15.1 (c (n "zen-engine") (v "0.15.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.141.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "v8") (r "^0.81.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.15.1") (d #t) (k 0)))) (h "0ly7nkk4lyp206bwh24q8jfls6w6di1drik4y0ijbb39l46q5l3s") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.16.0 (c (n "zen-engine") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "fixedbitset") (r "^0.4.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.141.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "v8") (r "^0.81.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.16.0") (d #t) (k 0)))) (h "1azmhs2qm3rlhxs5aiyl99jmqygh3p5jpc3lfq96xll7rynyf4ln") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.16.1 (c (n "zen-engine") (v "0.16.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "fixedbitset") (r "^0.4.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.141.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "v8") (r "^0.81.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.16.1") (d #t) (k 0)))) (h "1c17lbqfpzyplgp04q4akjvg3b7l41w9php8vpnvzgwig6a9zd00") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.17.0 (c (n "zen-engine") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "fixedbitset") (r "^0.4.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_v8") (r "^0.144.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "v8") (r "^0.82.0") (d #t) (k 0)) (d (n "zen-expression") (r "^0.17.0") (d #t) (k 0)))) (h "0q5ypxgvxhh6pr48xhpnbawykx4l0g96w3w983nmyfy39dnzn3am") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.18.0 (c (n "zen-engine") (v "0.18.0") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "fixedbitset") (r "^0.4.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "rquickjs") (r "^0.4.3") (f (quote ("macro" "loader" "rust-alloc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "zen-expression") (r "^0.18.0") (d #t) (k 0)))) (h "03p7qmrqar08by53r9v17gh812j09k6iiybriljfhq1qpw61g6ry") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.18.1 (c (n "zen-engine") (v "0.18.1") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "fixedbitset") (r "^0.4.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "rquickjs") (r "^0.4.3") (f (quote ("macro" "loader" "rust-alloc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "zen-expression") (r "^0.18.1") (d #t) (k 0)))) (h "0mghwljz6igkys3h5bkdw0gg57pl6wl1m0ygr1gj5b6nfl6gi6yb") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.19.0 (c (n "zen-engine") (v "0.19.0") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "fixedbitset") (r "^0.4.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "rquickjs") (r "^0.4.3") (f (quote ("macro" "loader" "rust-alloc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "zen-expression") (r "^0.19.0") (d #t) (k 0)))) (h "0x7z19a0g9vsvh2s6jfc23znkczp81l4qj56ca0sia38frm17lfv") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.20.1 (c (n "zen-engine") (v "0.20.1") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "fixedbitset") (r "^0.4.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "json_dotpath") (r "^1.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "rquickjs") (r "^0.4.3") (f (quote ("macro" "loader" "rust-alloc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "zen-expression") (r "^0.20.1") (d #t) (k 0)) (d (n "zen-tmpl") (r "^0.20.1") (d #t) (k 0)))) (h "0n6hdd4f91r1hlkggzhr51w4hii7br86mhq751s9mnhjhz2qlda1") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.21.0 (c (n "zen-engine") (v "0.21.0") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "fixedbitset") (r "^0.4.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "json_dotpath") (r "^1.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "rquickjs") (r "^0.4.3") (f (quote ("macro" "loader" "rust-alloc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "zen-expression") (r "^0.21.0") (d #t) (k 0)) (d (n "zen-tmpl") (r "^0.21.0") (d #t) (k 0)))) (h "0mqrm75kaxna1a7mfjfn4cda9c3y46lcrg71nnm3g0jqxksnkyza") (s 2) (e (quote (("bincode" "dep:bincode"))))))

(define-public crate-zen-engine-0.22.0 (c (n "zen-engine") (v "0.22.0") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "async-recursion") (r "^1.1.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_futures"))) (d #t) (k 2)) (d (n "fixedbitset") (r "^0.4.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "itertools") (r "^0.13.0") (d #t) (k 0)) (d (n "json_dotpath") (r "^1.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "rquickjs") (r "^0.4.3") (f (quote ("macro" "loader" "rust-alloc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "zen-expression") (r "^0.22.0") (d #t) (k 0)) (d (n "zen-tmpl") (r "^0.22.0") (d #t) (k 0)))) (h "02a63ba9p6s7gs4040xi570xajng42h33rg6803nfmaaiwlxgv2s") (s 2) (e (quote (("bincode" "dep:bincode"))))))

