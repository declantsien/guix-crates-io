(define-module (crates-io ne ti netidx-core) #:use-module (crates-io))

(define-public crate-netidx-core-0.6.0 (c (n "netidx-core") (v "0.6.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)))) (h "1i99a3p1prab4fc6q963a87287ix4qh6xkg6psvgbwv76gc19n9m")))

(define-public crate-netidx-core-0.6.1 (c (n "netidx-core") (v "0.6.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)))) (h "02x01is5chvzjgpwi9954mybiibjm5zrsyh64lbnyrsx9ll3f5w3")))

(define-public crate-netidx-core-0.7.0 (c (n "netidx-core") (v "0.7.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)))) (h "15jd1p699r10ilkyv5c3ydk9vfby6rvdinizli31x7ij6rjyrbwv")))

(define-public crate-netidx-core-0.9.0 (c (n "netidx-core") (v "0.9.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)))) (h "0c94lmbgznm5x404ni09zh3yh5sddjjbdqli6i5nd3mi4lz9j1cc")))

(define-public crate-netidx-core-0.10.0 (c (n "netidx-core") (v "0.10.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)))) (h "0m4d863l56ccsfm39lg1vxyicd5jbaskpg6j55i5gljk8v8h624w")))

(define-public crate-netidx-core-0.10.5 (c (n "netidx-core") (v "0.10.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)))) (h "0s0yji207nbx24v18acw50k21115phwdvb9pywmma01wsnkwwd74")))

(define-public crate-netidx-core-0.11.0 (c (n "netidx-core") (v "0.11.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)))) (h "1xw7d71b0f393srzp6gl8w0zm9iaa75793c26q4jyhdnbvclfpgd")))

(define-public crate-netidx-core-0.12.1 (c (n "netidx-core") (v "0.12.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)))) (h "0c1lmqck3savvixa59rirc79wl0cnbh6vrhp2qc9vyyp27nmsz03")))

(define-public crate-netidx-core-0.12.2 (c (n "netidx-core") (v "0.12.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)))) (h "137pcms1zk08c9zpars72mf3g0r27ccj8bwblhibgai2cr825kdc")))

(define-public crate-netidx-core-0.15.0 (c (n "netidx-core") (v "0.15.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)))) (h "00m1bn6yc3465x9hzvr4qgdnwjjk6b3gn5zda4bp9ji2abpp1pqp")))

(define-public crate-netidx-core-0.15.1 (c (n "netidx-core") (v "0.15.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)))) (h "104ihb20hxb61hrb83wpwyj8qkivn5hy2m0kzawffwb6fka7cmpi")))

(define-public crate-netidx-core-0.16.0 (c (n "netidx-core") (v "0.16.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)))) (h "01a3qs9vi45y0fsk5l0dx529bxb129dhgciyinvvrbgh8f7jkgaz")))

(define-public crate-netidx-core-0.16.1 (c (n "netidx-core") (v "0.16.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "0abmfffrw18i0340d47yywrslavxz6ig75m5qi17hv43rq5wn5yb")))

(define-public crate-netidx-core-0.16.2 (c (n "netidx-core") (v "0.16.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "04sap2cd5hq14p7s1vy03vi1d9f4vayajwmsw7sr39y500ac7bfs")))

(define-public crate-netidx-core-0.16.3 (c (n "netidx-core") (v "0.16.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "14kw3amzgdhmxyr838f7ayxb9qds3ay8y4jz6hq2z0l0rw92mg5i")))

(define-public crate-netidx-core-0.16.4 (c (n "netidx-core") (v "0.16.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "070g82ljrggaya6lr0bxcqz22x5n6zxjycdcxlzpzhb70y110z71")))

(define-public crate-netidx-core-0.16.5 (c (n "netidx-core") (v "0.16.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "0ri3ka93b04q8hsi16mwf5fpydg16h6zcy6bvghclxn6qfnnv2pw")))

(define-public crate-netidx-core-0.16.6 (c (n "netidx-core") (v "0.16.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "1zmdpbcwkybrzvhfsa5rmqy82lvqvrprny7jx87zb93dx1ssw797")))

(define-public crate-netidx-core-0.16.7 (c (n "netidx-core") (v "0.16.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "1fkh4y58xx3nqfh5naa8mmb97czk3r025ri3c6mndxbsq7g9md18")))

(define-public crate-netidx-core-0.16.8 (c (n "netidx-core") (v "0.16.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "055kg730y2sfj601wri79gzyifmr7r0liqzhlzrjfs6gcg790ip1")))

(define-public crate-netidx-core-0.16.9 (c (n "netidx-core") (v "0.16.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "1007kphxpjfb7gsn4acwg0dsp6603phgmpgn8zw3nmax2y26qgbl")))

(define-public crate-netidx-core-0.16.10 (c (n "netidx-core") (v "0.16.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "1sll9c7j9gldn8vnd9a1kzazcivkf0hm6qbcymh3sz3l5nlp4hbj")))

(define-public crate-netidx-core-0.17.0 (c (n "netidx-core") (v "0.17.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "18shkzbpqym2xrl8bxxb7jhj1k7bdfdml52pd2y85djw3g03ydp8")))

(define-public crate-netidx-core-0.17.1 (c (n "netidx-core") (v "0.17.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "1ps0m11hbixishzzbnhd1xg2mj933b3jz6mg6h2kvv92ms4hvazj")))

(define-public crate-netidx-core-0.17.2 (c (n "netidx-core") (v "0.17.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "1aqg7l75r4ng7804gdjmik92bz37dg23d8mrmhn9il1qbhs2sm54")))

(define-public crate-netidx-core-0.17.3 (c (n "netidx-core") (v "0.17.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "01mh6xyb84cawv6vgp2949442n6q99icwhgib08cafn8582gzih8")))

(define-public crate-netidx-core-0.17.4 (c (n "netidx-core") (v "0.17.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "1n516rm7ycf5s6qrm4ki470g5yplcp0nqi0jjm2xkm72rycsnnd5")))

(define-public crate-netidx-core-0.18.0 (c (n "netidx-core") (v "0.18.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "1zx2lvsw774p00impcqgs15vs5i4ypp1bqha7mrvppv6p6rfcg9b")))

(define-public crate-netidx-core-0.18.1 (c (n "netidx-core") (v "0.18.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "0vkhr1yfg43arrlr6igamq8q4l23pivv5px7zmqfs20facs5cvps")))

(define-public crate-netidx-core-0.18.2 (c (n "netidx-core") (v "0.18.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "03mca6r21vi5dg9g5yq63drbai6fr5sp9jxlbn55nrrczwz7hj62")))

(define-public crate-netidx-core-0.18.3 (c (n "netidx-core") (v "0.18.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "1i2lx3dvj62pkkshzbzxs3k8ak3l7crndip1g4y7f3bynm6f6321")))

(define-public crate-netidx-core-0.18.4 (c (n "netidx-core") (v "0.18.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "0fy2dql6camrfjr8lfbwr9qhsaaanjk08ahjf72cja2acmfl7znk")))

(define-public crate-netidx-core-0.18.5 (c (n "netidx-core") (v "0.18.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "04z984cg6rizmgmzhphmkzhc2qx8h3jjll16yikxg02c0b1ssk0l")))

(define-public crate-netidx-core-0.22.0 (c (n "netidx-core") (v "0.22.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "0p4y822bnc0f1mc5077cjf8w5x5pwfxxcjpcmr8q49x1bhiirh7g")))

(define-public crate-netidx-core-0.22.1 (c (n "netidx-core") (v "0.22.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "0w5c43shq7mw2shadwhpnlfmbg2k6fvan3g66mc8zwpsdwipb861")))

(define-public crate-netidx-core-0.22.2 (c (n "netidx-core") (v "0.22.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "1z08igsb1k2j55pn9686m440vgjmln87sriw74r6ig4bfxjigw7p")))

(define-public crate-netidx-core-0.22.6 (c (n "netidx-core") (v "0.22.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "15y182jfrlsfv8pn7jh30yxfyvp2ji71jm9k4a2ns5i6m7qfvzf2")))

(define-public crate-netidx-core-0.22.14 (c (n "netidx-core") (v "0.22.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "18j0w0fxmb5ghd7ql3fi68cds2z86amn6qqim9bfczyn8z9f1gdj")))

(define-public crate-netidx-core-0.22.15 (c (n "netidx-core") (v "0.22.15") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "0ibzfxck41rl56z9i6br4lwhf8apxvh1h6aasaklmml3kfqq1fwd")))

(define-public crate-netidx-core-0.22.16 (c (n "netidx-core") (v "0.22.16") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "0brrswv9gxzn9pxzi49k7gdc79wvccmfn7frh6c73w6i6424mvxz")))

(define-public crate-netidx-core-0.22.17 (c (n "netidx-core") (v "0.22.17") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "1lycj0kkx16njqlnbw4fyi9k5mnm9db1sgiiphrx9p67gjzlwi75")))

(define-public crate-netidx-core-0.22.18 (c (n "netidx-core") (v "0.22.18") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "0hh0mgkjv4782i98zb2rkxrpvarnak81ymkgri0mild6r13lsv6f")))

(define-public crate-netidx-core-0.22.19 (c (n "netidx-core") (v "0.22.19") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "142yny7yggkl4h2v71y03livaxkklb3a8i7aicny9pn3xpw7ll0b")))

(define-public crate-netidx-core-0.22.20 (c (n "netidx-core") (v "0.22.20") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "050ykl33k05q40f9hxkx54a470mifavnpiy4z2zgx3rflrqgbp6x")))

(define-public crate-netidx-core-0.22.21 (c (n "netidx-core") (v "0.22.21") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "0qr4hvfbbaaqav898pa0lyj3330a5fcc7k3anhb0cvmicqqdfr3j")))

(define-public crate-netidx-core-0.22.22 (c (n "netidx-core") (v "0.22.22") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "00xy6lg2kqz2n7krrgfcbr7rkyagxq6bwrjpc7ph8s6mwc7ip9qn")))

(define-public crate-netidx-core-0.22.23 (c (n "netidx-core") (v "0.22.23") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "10mzc99ssj3mbymcnmn7k54xkjlqmrfysg47z00hm92p3wgblyzs")))

(define-public crate-netidx-core-0.24.1 (c (n "netidx-core") (v "0.24.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "1q2lsnkyap8mki5accgy70yz0w0y6lp9s0jqj7b355bgk6kinaqi")))

(define-public crate-netidx-core-0.24.2 (c (n "netidx-core") (v "0.24.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0gl7yivjy47pa1gsxrrichia4sxahwwy9ay5jy1rp5flxn2r8k0m")))

(define-public crate-netidx-core-0.25.0 (c (n "netidx-core") (v "0.25.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0cab4sah6gnqp5agapr51yad1axxjygr0r24qyypgn42yc8aynav")))

(define-public crate-netidx-core-0.25.3 (c (n "netidx-core") (v "0.25.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0m3hxzymzrd4q1h6i0h8743vhhx5iyigalf3xn5mx8v5hg8vkqbi")))

(define-public crate-netidx-core-0.26.0 (c (n "netidx-core") (v "0.26.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "064da2pwmiifv83y1m546w0z6zival6s2zwm50wrlvg9wimk4f48")))

(define-public crate-netidx-core-0.26.2 (c (n "netidx-core") (v "0.26.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1d2yw8qhpwadmxx7px6b8sxbkdl5v823kcg4j5ysxba8knsiaqdn")))

