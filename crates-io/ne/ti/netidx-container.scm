(define-module (crates-io ne ti netidx-container) #:use-module (crates-io))

(define-public crate-netidx-container-0.11.0 (c (n "netidx-container") (v "0.11.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dirs") (r "^4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.11") (k 0)) (d (n "netidx-bscript") (r "^0.11.0") (k 0)) (d (n "netidx-core") (r "^0.11") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.11") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (f (quote ("zstd" "compression"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "025zwrb8rn29iz0f2h1b6k8bchsmspmpxfgnsq35g1sy8p4ax7yi") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-container-0.12.1 (c (n "netidx-container") (v "0.12.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dirs") (r "^4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.12.1") (k 0)) (d (n "netidx-bscript") (r "^0.12.1") (k 0)) (d (n "netidx-core") (r "^0.12.1") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.12.1") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (f (quote ("zstd" "compression"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "02skza2zkjv70kqnlgxjvfwrssh1jb0hqby111bldzyqkir4cg7d") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-container-0.12.2 (c (n "netidx-container") (v "0.12.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dirs") (r "^4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.12.1") (k 0)) (d (n "netidx-bscript") (r "^0.13.0") (k 0)) (d (n "netidx-core") (r "^0.12.1") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.12.1") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (f (quote ("zstd" "compression"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0xxpp2bcz75qkyfa8ws6gs1wlzpp1h34qvx89kwadr80ld83gxs1") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-container-0.12.3 (c (n "netidx-container") (v "0.12.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dirs") (r "^4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.12.1") (k 0)) (d (n "netidx-bscript") (r "^0.14.0") (k 0)) (d (n "netidx-core") (r "^0.12.1") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.12.1") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (f (quote ("zstd" "compression"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0jjajr23d57gvkn8zi2s8cqq1lkixj6rx5qlylqppdjh0ml0gblq") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-container-0.15.0 (c (n "netidx-container") (v "0.15.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.20") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dirs") (r "^4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.15") (k 0)) (d (n "netidx-bscript") (r "^0.15") (k 0)) (d (n "netidx-core") (r "^0.15") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.15") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (f (quote ("zstd" "compression"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "02w4865nj48m5shxhjfnw0727kzhw206fjqmpdg713k6nzr9z8cp") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-container-0.16.0 (c (n "netidx-container") (v "0.16.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "dirs") (r "^4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.16") (k 0)) (d (n "netidx-bscript") (r "^0.16") (k 0)) (d (n "netidx-core") (r "^0.16") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.16") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (f (quote ("zstd" "compression"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "13i8ccqgcd7wgs3fk5whj2sjmqzyzq6vmk0rnpxfjwynwh6givdi") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-container-0.16.1 (c (n "netidx-container") (v "0.16.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "dirs") (r "^4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.16") (k 0)) (d (n "netidx-bscript") (r "^0.16") (k 0)) (d (n "netidx-core") (r "^0.16") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.16") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (f (quote ("zstd" "compression"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "147v7vsxsxbf1qz3y1ac1d1555rwjlmn0k0cj0fs2f6rm16fcpls") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-container-0.16.2 (c (n "netidx-container") (v "0.16.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "dirs") (r "^4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.16.2") (k 0)) (d (n "netidx-bscript") (r "^0.16") (k 0)) (d (n "netidx-core") (r "^0.16") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.16") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (f (quote ("zstd" "compression"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1lclbw2bgx7hla5hrzb5b9qhahlhjq05q6mq9fj9iwqq0jh1r60n") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-container-0.16.3 (c (n "netidx-container") (v "0.16.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "dirs") (r "^4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.16.3") (k 0)) (d (n "netidx-bscript") (r "^0.16") (k 0)) (d (n "netidx-core") (r "^0.16") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.16") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (f (quote ("zstd" "compression"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "18bh0gckxxmmqghvc23d100rsvf7in37fn10zn56hijqk9ywyr6s") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-container-0.17.0 (c (n "netidx-container") (v "0.17.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "dirs") (r "^4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.17") (k 0)) (d (n "netidx-bscript") (r "^0.17") (k 0)) (d (n "netidx-core") (r "^0.17") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.17") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (f (quote ("zstd" "compression"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0l3d5i0wj3wd6vm98c8372yznc8m5hji88hcdacva7gdcagipb1y") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-container-0.18.0 (c (n "netidx-container") (v "0.18.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.18") (k 0)) (d (n "netidx-bscript") (r "^0.18") (k 0)) (d (n "netidx-core") (r "^0.18") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.18") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (f (quote ("zstd" "compression"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "05zlw1l8vv10kvk6zpc2hasmxbdsa9m8k197mlnwdciaimy2nz9w") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-container-0.19.0 (c (n "netidx-container") (v "0.19.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.19") (k 0)) (d (n "netidx-bscript") (r "^0.19") (k 0)) (d (n "netidx-core") (r "^0.18") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.19") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (f (quote ("zstd" "compression"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0i9w25cdhjmsf2s0qp0d512pd5snd2rgm6s5zibzr00454608066") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-container-0.19.1 (c (n "netidx-container") (v "0.19.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.19.5") (k 0)) (d (n "netidx-bscript") (r "^0.19") (k 0)) (d (n "netidx-core") (r "^0.18") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.19") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (f (quote ("zstd" "compression"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1rpjzmx63i7y0fhh441x65v1mvnagsgl8w2xjpy185caljigj72h") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-container-0.20.0 (c (n "netidx-container") (v "0.20.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.19.7") (k 0)) (d (n "netidx-bscript") (r "^0.19") (k 0)) (d (n "netidx-core") (r "^0.18") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.19") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1n2ax684i3qb8n2vad7gkbb5xxzyjp39v2a2aryvz2bg2qz1rfhd") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-container-0.21.0 (c (n "netidx-container") (v "0.21.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.19.7") (k 0)) (d (n "netidx-bscript") (r "^0.19") (k 0)) (d (n "netidx-core") (r "^0.18") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.20") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1153lv14m0jjpdkwvhsdx5fiskrimmm5d5xh8dl1nncj85v165z4") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-container-0.22.0 (c (n "netidx-container") (v "0.22.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.22.0") (k 0)) (d (n "netidx-bscript") (r "^0.22.0") (k 0)) (d (n "netidx-core") (r "^0.22.0") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.22.0") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1nq667zvwib3yv5d70i8yjd24wb66xjwpwyykqlbvlmw650bq7nw") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-container-0.23.0 (c (n "netidx-container") (v "0.23.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.22.0") (k 0)) (d (n "netidx-bscript") (r "^0.22.0") (k 0)) (d (n "netidx-core") (r "^0.22.0") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.23.0") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1nwm4j6ljkjas2d3pqx37g3akd7mca774af5qi0h77w9xp4gdhx5") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-container-0.24.0 (c (n "netidx-container") (v "0.24.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.24.0") (k 0)) (d (n "netidx-bscript") (r "^0.24.0") (k 0)) (d (n "netidx-core") (r "^0.22.0") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.24.0") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "18nw9akzdccvlawv11rppy977mdgmjh6dm88j2jm3jnaxm9mhydy") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-container-0.24.1 (c (n "netidx-container") (v "0.24.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.24.0") (k 0)) (d (n "netidx-bscript") (r "^0.24.0") (k 0)) (d (n "netidx-core") (r "^0.24.1") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.24.0") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0is3gd39wqzl7lhd59xlhpsijkwyshqxikg733cwi1ghd1lwyprk") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-container-0.24.2 (c (n "netidx-container") (v "0.24.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.24.0") (k 0)) (d (n "netidx-bscript") (r "^0.24.0") (k 0)) (d (n "netidx-core") (r "^0.24.1") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.24.0") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs" "sync" "process" "macros" "signal" "io-std"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0hyfg3xwzw96kgk3dwi9b3ih93yaw1glgxw5hk6zp2azlqdv8idk") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-container-0.25.0 (c (n "netidx-container") (v "0.25.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.25.0") (k 0)) (d (n "netidx-bscript") (r "^0.25.0") (k 0)) (d (n "netidx-core") (r "^0.25.0") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.25.0") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs" "sync" "process" "macros" "signal" "io-std"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0z4acc4863f1mb38pz763wp8gl3z32g081nvc1rw2909whcqzn45") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-container-0.26.0 (c (n "netidx-container") (v "0.26.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.26.0") (k 0)) (d (n "netidx-bscript") (r "^0.26.0") (k 0)) (d (n "netidx-core") (r "^0.26.0") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.26.0") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs" "sync" "process" "macros" "signal" "io-std"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1naayzswvvaw79675v8z9g5wv49bh2bc2gj75w8wizr9yk42cjgl") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

