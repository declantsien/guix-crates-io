(define-module (crates-io ne ti netidx-netproto) #:use-module (crates-io))

(define-public crate-netidx-netproto-0.6.0 (c (n "netidx-netproto") (v "0.6.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.6") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)))) (h "1l7666ff2s85z28vqgymqii45v569f2vfiqci69pcvkxjxws76g9")))

(define-public crate-netidx-netproto-0.7.0 (c (n "netidx-netproto") (v "0.7.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.7") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)))) (h "0gpv1kxc315b5kq4zk7kp0rhmrmcmfvxa5h6yivfl8kyi2i7cm0w")))

(define-public crate-netidx-netproto-0.8.0 (c (n "netidx-netproto") (v "0.8.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.7") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)))) (h "0kxxmkvhwls5y5hxcw3zwna1amnwd9i7b9f23c3bxxr8iz4x9lxq")))

(define-public crate-netidx-netproto-0.9.0 (c (n "netidx-netproto") (v "0.9.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.9") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)))) (h "0dqkj8r5ga9wzjnnp2l49kjznxwhwvw6hfza0m5z84yc6nwv8h75")))

(define-public crate-netidx-netproto-0.10.0 (c (n "netidx-netproto") (v "0.10.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "immutable-chunkmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.10") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0r264iydsqwwcjlh1m47lbvx3b2a0gaqws208bkw8vjr6drdxwsf")))

(define-public crate-netidx-netproto-0.10.1 (c (n "netidx-netproto") (v "0.10.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "immutable-chunkmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.10") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "039cfij2bq726283d1pdy1j62ifsnldwg2jby13dvcmbwkg6cy2m")))

(define-public crate-netidx-netproto-0.11.0 (c (n "netidx-netproto") (v "0.11.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.11") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "09xa4kib1idsmnw2w77f2d0wqminl6rxm4mbfrz1yckdz8qxykwh")))

(define-public crate-netidx-netproto-0.12.1 (c (n "netidx-netproto") (v "0.12.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.12.1") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "1kjzfx62jmwwksk3kg0142321ag32mn0camrxd5q33dqfl07hmgs")))

(define-public crate-netidx-netproto-0.15.0 (c (n "netidx-netproto") (v "0.15.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.20") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.15") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "1500046nagj4qxbb7wfd0y806g1ihnxlh0z8x8nmmlwivvx0lxdp")))

(define-public crate-netidx-netproto-0.16.0 (c (n "netidx-netproto") (v "0.16.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.16") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "1414xnx7nh45xf4hrzb7z7pzhk1ncc3328l3bgkfnbpqgyab8p4x")))

(define-public crate-netidx-netproto-0.16.1 (c (n "netidx-netproto") (v "0.16.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.16") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0hh8wn1mrzwilvmr9cx1igx8k7m5y3xnmpz7ch20qyhvrmflfmnr")))

(define-public crate-netidx-netproto-0.16.2 (c (n "netidx-netproto") (v "0.16.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.16") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.16") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0gknvlzzqgygm2x67mdp2lh0wrsmzmn5y5xivrvxxcimk39qcd4d")))

(define-public crate-netidx-netproto-0.16.3 (c (n "netidx-netproto") (v "0.16.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.16") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.16") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "1zqf3l1fkzb76j69ff5xp8gzwylr3hmrhr4l3g064vjgnp2r8jl4")))

(define-public crate-netidx-netproto-0.16.4 (c (n "netidx-netproto") (v "0.16.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.16") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.16") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "18fn111dmr9qr64wsnznicbnb9557dil6wzx11j9cz9vccjmf5df")))

(define-public crate-netidx-netproto-0.17.0 (c (n "netidx-netproto") (v "0.17.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.17") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.17") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics" "union"))) (d #t) (k 0)))) (h "1898cgfvmir6k3mzw6zc2xvwkrfk00dkhr36n82z5nlq41hq9h4s")))

(define-public crate-netidx-netproto-0.17.1 (c (n "netidx-netproto") (v "0.17.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.17") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.17") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics" "union"))) (d #t) (k 0)))) (h "05kxb6phavnpci3ahciclsp9xv7cggfxj5b9yv9z06cns9b7wi51")))

(define-public crate-netidx-netproto-0.17.3 (c (n "netidx-netproto") (v "0.17.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.17") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.17") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "1bqv4kk6x71l23fip9ffb6rkwcnky51l8cywc3spii5mldvs8b8c")))

(define-public crate-netidx-netproto-0.17.4 (c (n "netidx-netproto") (v "0.17.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.17") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.17") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "196az32xrnk8fa8bfpmzdpvba75wf7q1jzv41fjgg2232hhhvjkq")))

(define-public crate-netidx-netproto-0.18.0 (c (n "netidx-netproto") (v "0.18.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.18") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.18") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "0c7i1yzsam28y3xmaszdqq96n9239f2bsv2w8754gk7g3gzbmjf4")))

(define-public crate-netidx-netproto-0.18.1 (c (n "netidx-netproto") (v "0.18.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.18") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.18") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "13hxw153sfx9dgl96py087bs048sa7wsxm1annvhkimhcica1fga")))

(define-public crate-netidx-netproto-0.18.2 (c (n "netidx-netproto") (v "0.18.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.18") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.18") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "05i8scrvy3n30scr9znk1nh0vvj690xd5vdr1vvql02742dyk4dg")))

(define-public crate-netidx-netproto-0.18.3 (c (n "netidx-netproto") (v "0.18.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.18.5") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.18") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "0f915i4x6gvna8x3jskg33jr0898f3g7y3qlzhyjhnbj57vm77r3")))

(define-public crate-netidx-netproto-0.22.0 (c (n "netidx-netproto") (v "0.22.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.22.0") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.22.0") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "0wi57dh7w1p4gnwadjlxrxqcv6kn0i1f19ip85zsgks53xgi8b7a")))

(define-public crate-netidx-netproto-0.24.1 (c (n "netidx-netproto") (v "0.24.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.24.1") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.22.0") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (d #t) (k 0)))) (h "0x287yd6i44p8qwk377fg3pqwnxdaghp65fbiq34xdi8xhk55ckx")))

(define-public crate-netidx-netproto-0.24.2 (c (n "netidx-netproto") (v "0.24.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.24.1") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.22") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0qcrjkvjhk3gd1gzsh9j2icgsmxylb40h7rcrg21n6z4phd03ipy")))

(define-public crate-netidx-netproto-0.25.0 (c (n "netidx-netproto") (v "0.25.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.25.0") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.22") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1wja45p51x3k58ggnp5rfqmn1xs8vf1qglcl3jril8010i9y0qyx")))

(define-public crate-netidx-netproto-0.26.0 (c (n "netidx-netproto") (v "0.26.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.26.0") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.22") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "09ijspz7r35njz93cisa4bp88rav7wf4dd9h4a5msasn0sgc5lcf")))

(define-public crate-netidx-netproto-0.26.2 (c (n "netidx-netproto") (v "0.26.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "netidx-core") (r "^0.26.0") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.22") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (f (quote ("serde-with-float" "serde-with-str" "serde-with-arbitrary-precision"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics" "union"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0pj5jf47j2sdj57jbqzwxfxvjggqrp8l2a51p6v4naa8n4hv22hz")))

