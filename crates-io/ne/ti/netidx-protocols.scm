(define-module (crates-io ne ti netidx-protocols) #:use-module (crates-io))

(define-public crate-netidx-protocols-0.3.0 (c (n "netidx-protocols") (v "0.3.0") (d (list (d (n "netidx") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)))) (h "16g4cd2nlq8k4af44320pjwsrq6kqw4wpz1lq8yb2x5wfjz31k3v")))

(define-public crate-netidx-protocols-0.4.0 (c (n "netidx-protocols") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "netidx") (r "^0.4") (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)))) (h "118l4m3rymakkb6q6i13lyzzy6yaicp483ljp312nnav7fnk2b3d") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-protocols-0.4.2 (c (n "netidx-protocols") (v "0.4.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "netidx") (r "^0.4") (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)))) (h "12jjvmrrsr4d00xmhzih3ybc947lb7gz0575kn8gb9y9v2ss2l5j") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-protocols-0.5.0 (c (n "netidx-protocols") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^0.6") (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "netidx") (r "^0.5") (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)))) (h "12d12l447vf9f0y5zhgshsmha5accjkw9ff2zxprgr5z862d3jfw") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-protocols-0.6.0 (c (n "netidx-protocols") (v "0.6.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "diligent-date-parser") (r "^0.1") (d #t) (k 0)) (d (n "fs3") (r "^0.5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mapr") (r "^0.8") (d #t) (k 0)) (d (n "netidx") (r "^0.6") (k 0)) (d (n "packed_struct") (r "^0.4") (d #t) (k 0)) (d (n "packed_struct_codegen") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0bd9r2rc1fdl16kfwvm74110qjhncdrndd19nx9lm2flhp5i4qzq") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-protocols-0.6.1 (c (n "netidx-protocols") (v "0.6.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "diligent-date-parser") (r "^0.1") (d #t) (k 0)) (d (n "fs3") (r "^0.5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mapr") (r "^0.8") (d #t) (k 0)) (d (n "netidx") (r "^0.6") (k 0)) (d (n "packed_struct") (r "^0.4") (d #t) (k 0)) (d (n "packed_struct_codegen") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0c0hg6hffbqqwl0iyvs6bir12mg3m5jc4wplqhbgkpqcb18z1y10") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-protocols-0.6.2 (c (n "netidx-protocols") (v "0.6.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "diligent-date-parser") (r "^0.1") (d #t) (k 0)) (d (n "fs3") (r "^0.5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mapr") (r "^0.8") (d #t) (k 0)) (d (n "netidx") (r "^0.6") (k 0)) (d (n "packed_struct") (r "^0.4") (d #t) (k 0)) (d (n "packed_struct_codegen") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "14qdli1h869dr3rbv2lzlmxlz6cpkm0kj87v3v56fa7alg7i0bc0") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-protocols-0.7.0 (c (n "netidx-protocols") (v "0.7.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "diligent-date-parser") (r "^0.1") (d #t) (k 0)) (d (n "fs3") (r "^0.5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mapr") (r "^0.8") (d #t) (k 0)) (d (n "netidx") (r "^0.7") (k 0)) (d (n "netidx-core") (r "^0.7") (d #t) (k 0)) (d (n "packed_struct") (r "^0.5") (d #t) (k 0)) (d (n "packed_struct_codegen") (r "^0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "17vkg2z9cbdpgbafwflkkr6y1kaxd5a5879qcpkgbkkxgi9735gk") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-protocols-0.8.0 (c (n "netidx-protocols") (v "0.8.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.8") (k 0)) (d (n "netidx-bscript") (r "^0.8") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1w0l51f7mff94bznmicj8g1ahx9hslm9bcmp14nwkbsmdzf1dn6b") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-protocols-0.9.0 (c (n "netidx-protocols") (v "0.9.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.9") (k 0)) (d (n "netidx-bscript") (r "^0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0g6d6138k3s4f6068l3w7yb3mk1g6dsz98lbg07dk9mjk2364dfj") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-protocols-0.10.0 (c (n "netidx-protocols") (v "0.10.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.10") (k 0)) (d (n "netidx-bscript") (r "^0.10") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "085nz0bbagr4miyal5qan3hvl5h3860s1818qcyiv2590lgyiwj9") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-protocols-0.10.4 (c (n "netidx-protocols") (v "0.10.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.10") (k 0)) (d (n "netidx-bscript") (r "^0.10") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0fsmgdl6zmgrg5wsq6k883p164kxq1add2d4xk0r8hjfq8d8c9sm") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-protocols-0.10.5 (c (n "netidx-protocols") (v "0.10.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.10") (k 0)) (d (n "netidx-bscript") (r "^0.10") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "168zadjn2s1wa1x19bwyxaw31cz2fjm0zmsykyi71n5l0cka1mc2") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-protocols-0.11.0 (c (n "netidx-protocols") (v "0.11.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.11") (k 0)) (d (n "netidx-bscript") (r "^0.11") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1vnmxypjj1aybg3szmg7xrm25qjipasvh5j66y8rsw1p84skqv0g") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-protocols-0.12.1 (c (n "netidx-protocols") (v "0.12.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.12.1") (k 0)) (d (n "netidx-bscript") (r "^0.12.1") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0zjgmb3a07yf3imqnqvzllfdivk723c3bmmhf48knfw6wvn836bs") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-protocols-0.12.2 (c (n "netidx-protocols") (v "0.12.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.12.1") (k 0)) (d (n "netidx-bscript") (r "^0.13.0") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1m3bbcykbmqiqhy2chzw2h1h496kkms8wcm7agh13bclvqzc5hjk") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-protocols-0.12.3 (c (n "netidx-protocols") (v "0.12.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.12.1") (k 0)) (d (n "netidx-bscript") (r "^0.14.0") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0p2n0zli7pzqpwip55vrbssmsnyqxylxg44qidffikn5kmc8a8wz") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-protocols-0.15.0 (c (n "netidx-protocols") (v "0.15.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.15") (k 0)) (d (n "netidx-bscript") (r "^0.15") (k 0)) (d (n "netidx-core") (r "^0.15") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "10aq0jwyilcpgx8bgfyvygynnl738yrpphnvdcc9klarcwv8xxlb") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-protocols-0.16.0 (c (n "netidx-protocols") (v "0.16.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.16") (k 0)) (d (n "netidx-bscript") (r "^0.16") (k 0)) (d (n "netidx-core") (r "^0.16") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "011308rhkn74v73c5xaqbxjspmwqx5m960sbzvxsk3x7zf118hgk") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default" "krb5_iov"))))))

(define-public crate-netidx-protocols-0.16.1 (c (n "netidx-protocols") (v "0.16.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.16") (k 0)) (d (n "netidx-bscript") (r "^0.16") (k 0)) (d (n "netidx-core") (r "^0.16") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1pxp5kmxnnwwaphsi9b09wfrkk0bfmm08s4d0q1wsqjd1s2hdiv2") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.16.2 (c (n "netidx-protocols") (v "0.16.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.16") (k 0)) (d (n "netidx-bscript") (r "^0.16") (k 0)) (d (n "netidx-core") (r "^0.16") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0dvizgkha7d82prkvm6q44lnd6s8qivgkmdbdgb40zicxc798ji3") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.16.3 (c (n "netidx-protocols") (v "0.16.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.16") (k 0)) (d (n "netidx-bscript") (r "^0.16") (k 0)) (d (n "netidx-core") (r "^0.16") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0qz5h6dysyd280jiip9r4lxhw0z7m8nyh06r5y16q5l8lzfpy4z2") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.16.4 (c (n "netidx-protocols") (v "0.16.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.16") (k 0)) (d (n "netidx-bscript") (r "^0.16") (k 0)) (d (n "netidx-core") (r "^0.16") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0b46vj6msh33ccfb37vs0wkz5q5gqxqcf9n6cklkwhxg1spwamkq") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.16.5 (c (n "netidx-protocols") (v "0.16.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.16") (k 0)) (d (n "netidx-bscript") (r "^0.16") (k 0)) (d (n "netidx-core") (r "^0.16") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "19x553aphmdk8hpz7vdr307czv7jqi183r7g8bzk0lhx2nrgn08i") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.16.6 (c (n "netidx-protocols") (v "0.16.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.16") (k 0)) (d (n "netidx-bscript") (r "^0.16") (k 0)) (d (n "netidx-core") (r "^0.16") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "006gwcscfa2rds8l4r7z3yzzwhnp5mkfmc94bzbf80qh91syh4pa") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.17.0 (c (n "netidx-protocols") (v "0.17.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.17") (k 0)) (d (n "netidx-bscript") (r "^0.17") (k 0)) (d (n "netidx-core") (r "^0.17") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1r9cq2wkigcmhmys8b5fhpzn7viigikslv02c2v8gbbpcgklgn5z") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.18.0 (c (n "netidx-protocols") (v "0.18.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.18") (k 0)) (d (n "netidx-bscript") (r "^0.18") (k 0)) (d (n "netidx-core") (r "^0.18") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "09gvll4mb166vjsl8x4hnqxakh3pizwrv87xg9xmqhb0i9nbrmcp") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.18.1 (c (n "netidx-protocols") (v "0.18.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.18.1") (k 0)) (d (n "netidx-bscript") (r "^0.18") (k 0)) (d (n "netidx-core") (r "^0.18") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1x1nrwz6qys2sk9hckis1vsmank8jxjgy734i3960f01cchz02m1") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.18.2 (c (n "netidx-protocols") (v "0.18.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.18.1") (k 0)) (d (n "netidx-bscript") (r "^0.18") (k 0)) (d (n "netidx-core") (r "^0.18") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "05syimj151fr0czfym4pw4wlp1i31nkrn3zxmz6j1b59rq5jbmqb") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.19.0 (c (n "netidx-protocols") (v "0.19.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.19") (k 0)) (d (n "netidx-bscript") (r "^0.19") (k 0)) (d (n "netidx-core") (r "^0.18") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0jmfbzdzvap8f579vj4qf1fsh3n4mhwn2bmbvjixz6sqkz319hk6") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.19.1 (c (n "netidx-protocols") (v "0.19.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.19.5") (k 0)) (d (n "netidx-bscript") (r "^0.19") (k 0)) (d (n "netidx-core") (r "^0.18") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0ahbdj30f3b9l3gsghyq3sz3nxbkm6k3h9j5ykglabvpk7d237a7") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.19.3 (c (n "netidx-protocols") (v "0.19.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.19.7") (k 0)) (d (n "netidx-bscript") (r "^0.19") (k 0)) (d (n "netidx-core") (r "^0.18") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0zlmdchqvnmxsmb41cmqvaii9kc8bfv3p8j3shby8f6b8697ribb") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.19.4 (c (n "netidx-protocols") (v "0.19.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.19.7") (k 0)) (d (n "netidx-bscript") (r "^0.19") (k 0)) (d (n "netidx-core") (r "^0.18") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1w3qdjn3pkcjn9dmnfzc1i3cgm42vmcb1znbmxivfbpj1hpr3g7y") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.19.5 (c (n "netidx-protocols") (v "0.19.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.19.8") (k 0)) (d (n "netidx-bscript") (r "^0.19") (k 0)) (d (n "netidx-core") (r "^0.18") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1k2dn65ywhjra4llnjhyxnv1xp97ngfdv8j5sxz28a3abs8s7mqg") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.20.0 (c (n "netidx-protocols") (v "0.20.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.19.8") (k 0)) (d (n "netidx-bscript") (r "^0.19") (k 0)) (d (n "netidx-core") (r "^0.18.5") (k 0)) (d (n "netidx-netproto") (r "^0.18.3") (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0hjb1qvnkkcdwkjrbyqb4v210gzrs5y9a3czh11zivbq9aqi90lb") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.20.1 (c (n "netidx-protocols") (v "0.20.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.19.8") (k 0)) (d (n "netidx-bscript") (r "^0.19") (k 0)) (d (n "netidx-core") (r "^0.18.5") (k 0)) (d (n "netidx-netproto") (r "^0.18.3") (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0yr3z03i798yr6wmczl6f776i0hpfa1xriysf9p8mi35i5grfx4d") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.20.2 (c (n "netidx-protocols") (v "0.20.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.19.8") (k 0)) (d (n "netidx-bscript") (r "^0.19") (k 0)) (d (n "netidx-core") (r "^0.18.5") (k 0)) (d (n "netidx-netproto") (r "^0.18.3") (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1k3a4a8xpvilqaig6i6385jphmaa0pxzgdb5p59zk42n443665fs") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.22.0 (c (n "netidx-protocols") (v "0.22.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.22.0") (k 0)) (d (n "netidx-bscript") (r "^0.22.0") (k 0)) (d (n "netidx-core") (r "^0.22.0") (k 0)) (d (n "netidx-netproto") (r "^0.22.0") (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync" "macros"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0hs100nmx2d669q8q621a9r2lkpmlpy2bj0vpbhfwz92qj5ss7l2") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.22.4 (c (n "netidx-protocols") (v "0.22.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.22.0") (k 0)) (d (n "netidx-bscript") (r "^0.22.0") (k 0)) (d (n "netidx-core") (r "^0.22.0") (k 0)) (d (n "netidx-netproto") (r "^0.22.0") (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync" "macros"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1w432xfaqd3n69z7lvfb9n23vv5f0alxj688k3xvnh56cnwqp9dd") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.23.0 (c (n "netidx-protocols") (v "0.23.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.22.0") (k 0)) (d (n "netidx-bscript") (r "^0.22.0") (k 0)) (d (n "netidx-core") (r "^0.22.0") (k 0)) (d (n "netidx-netproto") (r "^0.22.0") (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync" "macros"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1hj902f4s4vxa5qdb9ddgg43ykm0hxnsm5s9wwnvxkli0j35v4yw") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.23.1 (c (n "netidx-protocols") (v "0.23.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.22.0") (k 0)) (d (n "netidx-bscript") (r "^0.22.0") (k 0)) (d (n "netidx-core") (r "^0.22.0") (k 0)) (d (n "netidx-netproto") (r "^0.22.0") (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync" "macros"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0wbk3j96yl4bljjdmfqfzykg247fn26vzxwymv2yz0ly8qccxf2s") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.23.2 (c (n "netidx-protocols") (v "0.23.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.22.0") (k 0)) (d (n "netidx-bscript") (r "^0.22.0") (k 0)) (d (n "netidx-core") (r "^0.22.0") (k 0)) (d (n "netidx-netproto") (r "^0.22.0") (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync" "macros"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1ignzvhwg5micj4751j1xg5cf80qkm4w555vz0c80k8fp5q4ghf9") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.24.0 (c (n "netidx-protocols") (v "0.24.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.24.0") (k 0)) (d (n "netidx-bscript") (r "^0.24.0") (k 0)) (d (n "netidx-core") (r "^0.22.0") (k 0)) (d (n "netidx-netproto") (r "^0.22.0") (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync" "macros"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0frajwpaydi3g4r4blfd80aay93vcalaifn1dw2lkqhj3ljqkg4f") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.24.1 (c (n "netidx-protocols") (v "0.24.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.24.0") (k 0)) (d (n "netidx-bscript") (r "^0.24.0") (k 0)) (d (n "netidx-core") (r "^0.24.1") (k 0)) (d (n "netidx-netproto") (r "^0.24.1") (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "sync" "macros"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "118ym6hk92rkaknc6lzbmc98ar2n5zynp1185n45b7v5siw7wvn7") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.24.2 (c (n "netidx-protocols") (v "0.24.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.24.0") (k 0)) (d (n "netidx-bscript") (r "^0.24.0") (k 0)) (d (n "netidx-core") (r "^0.24.1") (k 0)) (d (n "netidx-netproto") (r "^0.24.1") (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs" "sync" "process" "macros" "signal" "io-std"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "17kxfz4y93m1yr0nr83q5wahkf795vaszhzmp30lsxhipbyxnxaf") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.25.0 (c (n "netidx-protocols") (v "0.25.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.25.0") (k 0)) (d (n "netidx-bscript") (r "^0.25.0") (k 0)) (d (n "netidx-core") (r "^0.25.0") (k 0)) (d (n "netidx-netproto") (r "^0.25.0") (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs" "sync" "process" "macros" "signal" "io-std"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1zrisa5anbq8b3xblgggmhdrr0iizfnnf31c9ygxg2gkr3l0lz17") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.25.5 (c (n "netidx-protocols") (v "0.25.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.25.0") (k 0)) (d (n "netidx-bscript") (r "^0.25.0") (k 0)) (d (n "netidx-core") (r "^0.25.0") (k 0)) (d (n "netidx-netproto") (r "^0.25.0") (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs" "sync" "process" "macros" "signal" "io-std"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1n357lbbrhj4p44r4acq7fnpwymi6msy6n81azvk0q43ks29p4pa") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.26.0 (c (n "netidx-protocols") (v "0.26.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.26.0") (k 0)) (d (n "netidx-bscript") (r "^0.26.0") (k 0)) (d (n "netidx-core") (r "^0.26.0") (k 0)) (d (n "netidx-netproto") (r "^0.26.0") (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs" "sync" "process" "macros" "signal" "io-std"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0k8f1mwnyq2gzwb2phixz8wq8ik52hpjyx3l089jdxgj5xsbhas4") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-protocols-0.26.1 (c (n "netidx-protocols") (v "0.26.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.26.0") (k 0)) (d (n "netidx-bscript") (r "^0.26.0") (k 0)) (d (n "netidx-core") (r "^0.26.0") (k 0)) (d (n "netidx-netproto") (r "^0.26.0") (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs" "sync" "process" "macros" "signal" "io-std"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "02q0kmmkyzlxgjfqvqzcnd69r29ki3s5sgladjwxbwxgb0402ph6") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

