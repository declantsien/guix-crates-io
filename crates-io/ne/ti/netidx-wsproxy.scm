(define-module (crates-io ne ti netidx-wsproxy) #:use-module (crates-io))

(define-public crate-netidx-wsproxy-0.17.0 (c (n "netidx-wsproxy") (v "0.17.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.17") (k 0)) (d (n "netidx-core") (r "^0.17") (k 0)) (d (n "netidx-protocols") (r "^0.17") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls"))) (d #t) (k 0)))) (h "1xarz4v2rqk2c7rzp1hydm3sljk404f1a6mdns4vdbd77k8hbnml") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-wsproxy-0.17.1 (c (n "netidx-wsproxy") (v "0.17.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.17") (k 0)) (d (n "netidx-core") (r "^0.17") (k 0)) (d (n "netidx-protocols") (r "^0.17") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls"))) (d #t) (k 0)))) (h "0m2d3vlmwpwyf0880iah1zh4vwzq9nr1vrxhz2af3zvhmicvr8k4") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-wsproxy-0.17.2 (c (n "netidx-wsproxy") (v "0.17.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.17") (k 0)) (d (n "netidx-core") (r "^0.17") (k 0)) (d (n "netidx-protocols") (r "^0.17") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls"))) (d #t) (k 0)))) (h "0rg58c3sakd6k0lla2a9w4xr2vapsv0b4qjbylj8zk68vzya207k") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-wsproxy-0.17.3 (c (n "netidx-wsproxy") (v "0.17.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.17") (k 0)) (d (n "netidx-core") (r "^0.17") (k 0)) (d (n "netidx-protocols") (r "^0.17") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls"))) (d #t) (k 0)))) (h "0k317k50f39w827y89pm3lz913x7l33hyhjlcqyihmjyg1m4n4c2") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-wsproxy-0.17.4 (c (n "netidx-wsproxy") (v "0.17.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.17") (k 0)) (d (n "netidx-core") (r "^0.17") (k 0)) (d (n "netidx-protocols") (r "^0.17") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls"))) (d #t) (k 0)))) (h "1iqlg7q90g9qvm0w077bjvsdwfx9kg5jab373bf1vy4mjvxfxy92") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-wsproxy-0.18.0 (c (n "netidx-wsproxy") (v "0.18.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.18") (k 0)) (d (n "netidx-core") (r "^0.18") (k 0)) (d (n "netidx-protocols") (r "^0.18") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls"))) (d #t) (k 0)))) (h "060brsz9hsrrdi1vxlk1gsq8872aqassmxjgwpskwrqxlgvps6if") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-wsproxy-0.19.0 (c (n "netidx-wsproxy") (v "0.19.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.19") (k 0)) (d (n "netidx-core") (r "^0.18") (k 0)) (d (n "netidx-protocols") (r "^0.19") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls"))) (d #t) (k 0)))) (h "05s2ci55ijxpp5gmj0i9y5nbqpl8h4y83zicz6gv7yxiil1ab56h") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-wsproxy-0.19.1 (c (n "netidx-wsproxy") (v "0.19.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.19.5") (k 0)) (d (n "netidx-core") (r "^0.18") (k 0)) (d (n "netidx-protocols") (r "^0.19") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls"))) (d #t) (k 0)))) (h "02fzzzzq9d6khrya4x1z8kdwi5wi43svsk7mfk5l0gaij37l2i56") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-wsproxy-0.20.0 (c (n "netidx-wsproxy") (v "0.20.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.19.7") (k 0)) (d (n "netidx-core") (r "^0.18") (k 0)) (d (n "netidx-protocols") (r "^0.20") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls"))) (d #t) (k 0)))) (h "142048zda30pdvja927kh4vnv7ikgmx72gy1mmjc70h1rd6h4f5d") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-wsproxy-0.22.0 (c (n "netidx-wsproxy") (v "0.22.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.22.0") (k 0)) (d (n "netidx-core") (r "^0.22.0") (k 0)) (d (n "netidx-protocols") (r "^0.22.0") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls"))) (d #t) (k 0)))) (h "1xk46w1pwai2ksdwnh02gmwbvqxyf2bbj1z62k5sxjhvvd9hz7p8") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-wsproxy-0.23.0 (c (n "netidx-wsproxy") (v "0.23.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.22.0") (k 0)) (d (n "netidx-core") (r "^0.22.0") (k 0)) (d (n "netidx-protocols") (r "^0.23.0") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls"))) (d #t) (k 0)))) (h "1ma7m3228k4sjhg7isaism8rcsld9garmjc8mmxqlv1zfqkfhaj0") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-wsproxy-0.24.0 (c (n "netidx-wsproxy") (v "0.24.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.24.0") (k 0)) (d (n "netidx-core") (r "^0.22.0") (k 0)) (d (n "netidx-protocols") (r "^0.24.0") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls"))) (d #t) (k 0)))) (h "0ghgafjbkqkjpa6ci6ymfjcww62xv75y059p54wvxibg413va9fn") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-wsproxy-0.24.1 (c (n "netidx-wsproxy") (v "0.24.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.24.0") (k 0)) (d (n "netidx-core") (r "^0.24.1") (k 0)) (d (n "netidx-protocols") (r "^0.24.0") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls"))) (d #t) (k 0)))) (h "1l4fmp0l2wk3vs0gwsdc8wy743scas04dncwcyyl3i4lds2c6bsw") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-wsproxy-0.24.2 (c (n "netidx-wsproxy") (v "0.24.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.24.0") (k 0)) (d (n "netidx-core") (r "^0.24.1") (k 0)) (d (n "netidx-protocols") (r "^0.24.0") (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs" "sync" "process" "macros" "signal" "io-std"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls"))) (d #t) (k 0)))) (h "1mv615r5a8s2c0jk2nrdbbj2d11i9kb1lslfmkr6l2lzn6a6qh5h") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-wsproxy-0.25.0 (c (n "netidx-wsproxy") (v "0.25.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.25.0") (k 0)) (d (n "netidx-core") (r "^0.25.0") (k 0)) (d (n "netidx-protocols") (r "^0.25.0") (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs" "sync" "process" "macros" "signal" "io-std"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls"))) (d #t) (k 0)))) (h "0h7h1mpyhxj50dhs9j7n9dggy4npgipg7kdkly249cab2p0qjmkv") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-wsproxy-0.26.0 (c (n "netidx-wsproxy") (v "0.26.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.26.0") (k 0)) (d (n "netidx-core") (r "^0.26.0") (k 0)) (d (n "netidx-protocols") (r "^0.26.0") (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs" "sync" "process" "macros" "signal" "io-std"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls"))) (d #t) (k 0)))) (h "01b8r3i8m64xvlp60jms3kxwgz7gnz3an7rjv4hy55wgv9ljvrjs") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

(define-public crate-netidx-wsproxy-0.26.1 (c (n "netidx-wsproxy") (v "0.26.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.26.0") (k 0)) (d (n "netidx-core") (r "^0.26.0") (k 0)) (d (n "netidx-protocols") (r "^0.26.0") (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util" "fs" "sync" "process" "macros" "signal" "io-std"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls"))) (d #t) (k 0)))) (h "0pgdllnynvfvjavda2bw20lhhpv8nvlnbj4lw49g8dy03dh2d6mq") (f (quote (("krb5_iov" "netidx/krb5_iov") ("default"))))))

