(define-module (crates-io ne bu nebula-fbthrift-storage-v2) #:use-module (crates-io))

(define-public crate-nebula-fbthrift-storage-v2-0.1.1 (c (n "nebula-fbthrift-storage-v2") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "common") (r "^0.1") (k 0) (p "nebula-fbthrift-common-v2")) (d (n "fbthrift") (r "^0.0.1") (k 0) (p "fbthrift-git")) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "meta") (r "^0.1") (k 0) (p "nebula-fbthrift-meta-v2")))) (h "1pqyj2n7fi1c7hqknlk19nmxzs3i0js9xdg2xsn1marg5ldrpbnx")))

(define-public crate-nebula-fbthrift-storage-v2-0.1.2 (c (n "nebula-fbthrift-storage-v2") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "common") (r "^0.1") (k 0) (p "nebula-fbthrift-common-v2")) (d (n "fbthrift") (r "^0.0.2") (k 0) (p "fbthrift-git")) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "meta") (r "^0.1") (k 0) (p "nebula-fbthrift-meta-v2")))) (h "0d6fk4xmnm3rzys0qia3yl5p9v00cl8jcapkjfcllpnkml5ph78n")))

(define-public crate-nebula-fbthrift-storage-v2-0.1.3 (c (n "nebula-fbthrift-storage-v2") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "common") (r "^0.1") (k 0) (p "nebula-fbthrift-common-v2")) (d (n "fbthrift") (r "^0.0.3") (k 0) (p "fbthrift-git")) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "meta") (r "^0.1") (k 0) (p "nebula-fbthrift-meta-v2")))) (h "00yjn3c8qar8pwa8fbqmh1z7a41gjg59y839s91vpsksy4h0y94k")))

(define-public crate-nebula-fbthrift-storage-v2-0.1.4 (c (n "nebula-fbthrift-storage-v2") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "common") (r "^0.1") (k 0) (p "nebula-fbthrift-common-v2")) (d (n "const-cstr") (r "^0.3") (d #t) (k 0)) (d (n "fbthrift") (r "=0.0.4") (k 0) (p "fbthrift-git")) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "meta") (r "^0.1") (k 0) (p "nebula-fbthrift-meta-v2")))) (h "17wqgs3kd0kmrfpahxakh9hiv481namav2mdyncdn9fwxydc3br2")))

(define-public crate-nebula-fbthrift-storage-v2-0.1.5 (c (n "nebula-fbthrift-storage-v2") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "common") (r "^0.1") (k 0) (p "nebula-fbthrift-common-v2")) (d (n "const-cstr") (r "^0.3") (d #t) (k 0)) (d (n "fbthrift") (r "=0.0.5") (k 0) (p "fbthrift-git")) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "meta") (r "^0.1") (k 0) (p "nebula-fbthrift-meta-v2")))) (h "1lnw0k9rkrn8y6simda7cbkbm5kqwxpw8m4yd50sjsc7jcv10h7g")))

(define-public crate-nebula-fbthrift-storage-v2-0.2.0 (c (n "nebula-fbthrift-storage-v2") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "common") (r "=0.2.0") (k 0) (p "nebula-fbthrift-common-v2")) (d (n "const-cstr") (r "^0.3") (d #t) (k 0)) (d (n "fbthrift") (r "=0.0.6") (k 0) (p "fbthrift-git")) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "meta") (r "=0.2.0") (k 0) (p "nebula-fbthrift-meta-v2")))) (h "0w6m7cgjcl0qxsfrq9gsm8pidwl8ib4ibyb7pyrf9qw0bkycnm41")))

(define-public crate-nebula-fbthrift-storage-v2-0.3.0 (c (n "nebula-fbthrift-storage-v2") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "common") (r "=0.3.0") (k 0) (p "nebula-fbthrift-common-v2")) (d (n "const-cstr") (r "^0.3") (k 0)) (d (n "fbthrift") (r "=0.0.7") (k 0) (p "fbthrift-git")) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "meta") (r "=0.3.0") (k 0) (p "nebula-fbthrift-meta-v2")) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (k 0)))) (h "1kq28as0glxjrrj98sfb2yl306zbl7ic8m7fzm05alajdh4gabxf")))

