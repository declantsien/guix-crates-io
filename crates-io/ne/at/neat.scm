(define-module (crates-io ne at neat) #:use-module (crates-io))

(define-public crate-neat-0.0.0 (c (n "neat") (v "0.0.0") (d (list (d (n "fast_io") (r "^1.1.1") (d #t) (k 0)))) (h "1ag6f7bblfq4hgxg2halfa2z9918ln05zkly0zc05xp172i32z3n") (y #t)))

(define-public crate-neat-0.1.0 (c (n "neat") (v "0.1.0") (d (list (d (n "genetic-rs") (r "^0.2.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8.1") (o #t) (d #t) (k 0)))) (h "152bfsx2ws99ilf8cybi3q5mn825acczmpscfcas1j42mizlc01y") (f (quote (("max-index") ("default" "max-index")))) (s 2) (e (quote (("rayon" "genetic-rs/rayon" "dep:rayon"))))))

(define-public crate-neat-0.2.0 (c (n "neat") (v "0.2.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "genetic-rs") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "1rrz9gk9fg2yhjc5hrs56six0jxl54bl1jhhf4f3zbvijipwxbhy") (f (quote (("max-index") ("default" "max-index")))) (y #t) (s 2) (e (quote (("serde" "dep:serde" "dep:serde-big-array") ("rayon" "genetic-rs/rayon" "dep:rayon"))))))

(define-public crate-neat-0.2.1 (c (n "neat") (v "0.2.1") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "genetic-rs") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "1f3ma8cb5di5n7gi3wd4h5w4c41dy9gxk5p9zk4jsxhlqw9am58v") (f (quote (("max-index") ("default" "max-index")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde-big-array") ("rayon" "genetic-rs/rayon" "dep:rayon"))))))

(define-public crate-neat-0.3.0 (c (n "neat") (v "0.3.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "genetic-rs") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "092ncjc3l3ps5w2sz68is83r1m7gg3d72pfd7nn18d0j9x6cggik") (f (quote (("max-index") ("default" "max-index") ("crossover" "genetic-rs/crossover")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde-big-array") ("rayon" "genetic-rs/rayon" "dep:rayon"))))))

(define-public crate-neat-0.4.0 (c (n "neat") (v "0.4.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "genetic-rs") (r "^0.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "0xyb95gbxwalsij3inind1y13k27k7dam3d946s056dr9xf5qrfw") (f (quote (("max-index") ("default" "max-index") ("crossover" "genetic-rs/crossover")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde-big-array") ("rayon" "genetic-rs/rayon" "dep:rayon"))))))

(define-public crate-neat-0.5.0 (c (n "neat") (v "0.5.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "genetic-rs") (r "^0.5.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)))) (h "0glb1x6bfkc7757vs6244ql1z4wq7akmm782a807krjilck90qp1") (f (quote (("max-index") ("default" "max-index") ("crossover" "genetic-rs/crossover")))) (y #t) (s 2) (e (quote (("serde" "dep:serde" "dep:serde-big-array") ("rayon" "genetic-rs/rayon" "dep:rayon"))))))

(define-public crate-neat-0.5.1 (c (n "neat") (v "0.5.1") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "genetic-rs") (r "^0.5.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)))) (h "1264fsgdwik6bqjg9qk7h73wmhlqwraknh0xddq5h80mdl2mnny0") (f (quote (("max-index") ("default" "max-index") ("crossover" "genetic-rs/crossover")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde-big-array") ("rayon" "genetic-rs/rayon" "dep:rayon"))))))

