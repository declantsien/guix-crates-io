(define-module (crates-io ne o4 neo4j) #:use-module (crates-io))

(define-public crate-neo4j-0.0.1 (c (n "neo4j") (v "0.0.1") (d (list (d (n "atomic_refcell") (r "^0.1.9") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8.3") (d #t) (k 0)) (d (n "duplicate") (r "^1.0.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rustls") (r "^0.21.7") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (o #t) (d #t) (k 0)) (d (n "snowflaked") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.0") (d #t) (k 0)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "usize_cast") (r "^1.1.0") (d #t) (k 0)))) (h "0v3yrxvvlfjblfrn56vfw5g1nnzkwyymdsys8pagbxb0694ijs3m") (f (quote (("rustls_dangerous_configuration" "rustls/dangerous_configuration") ("_internal_testkit_backend" "base64" "env_logger" "flume" "serde" "serde_json" "snowflaked" "lazy-regex" "rustls_dangerous_configuration")))) (r "1.65")))

(define-public crate-neo4j-0.0.2 (c (n "neo4j") (v "0.0.2") (d (list (d (n "atomic_refcell") (r "^0.1.13") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8.4") (d #t) (k 0)) (d (n "duplicate") (r "^1.0.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "flume") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mockall") (r "^0.12.1") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rustls") (r "^0.22.1") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.7.0") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^2.0.0") (d #t) (k 0)) (d (n "rustls-pki-types") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (o #t) (d #t) (k 0)) (d (n "snowflaked") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "usize_cast") (r "^1.1.0") (d #t) (k 0)))) (h "0vxckzr5scr8c8yfrrvl7shzh46qqbzykrlbypd9qp60gngw0ijv") (f (quote (("_internal_testkit_backend" "base64" "env_logger" "flume" "serde" "serde_json" "snowflaked" "lazy-regex")))) (r "1.65")))

(define-public crate-neo4j-0.1.0 (c (n "neo4j") (v "0.1.0") (d (list (d (n "atomic_refcell") (r "^0.1.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4.37") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.9.0") (d #t) (k 0)) (d (n "duplicate") (r "^1.0.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.13") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.2") (d #t) (k 2)) (d (n "expect-test") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "mockall") (r "^0.12.1") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "public-api") (r "^0.33.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rustdoc-json") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.7.0") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^2.1.2") (d #t) (k 0)) (d (n "rustls-pki-types") (r "^1.4.1") (d #t) (k 0)) (d (n "rustup-toolchain") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "socket2") (r "^0.5.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "usize_cast") (r "^1.1.0") (d #t) (k 0)))) (h "1cqhblwin321adyk8y4jip8r78135agbpj3dc535iyzmkf1qjnv9") (f (quote (("_internal_testkit_backend") ("_internal_public_api" "public-api" "expect-test" "rustdoc-json" "rustup-toolchain")))) (r "1.70")))

