(define-module (crates-io ne tw network-interface) #:use-module (crates-io))

(define-public crate-network-interface-0.1.0-beta (c (n "network-interface") (v "0.1.0-beta") (d (list (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "windows") (r "^0.20.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.20.0") (d #t) (t "cfg(target_os = \"windows\")") (k 1)))) (h "1xdrc2697h9y3jakz1vyghmxlv1pzn0m8cfd7mll3c26ngyf3zf3")))

(define-public crate-network-interface-0.1.1-beta (c (n "network-interface") (v "0.1.1-beta") (d (list (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "windows") (r "^0.20.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.20.0") (d #t) (t "cfg(target_os = \"windows\")") (k 1)))) (h "0q2im8xzdac25s3ax6ybb4ybjp541rnd2xsn5062j29bhz6f5c72")))

(define-public crate-network-interface-0.1.2-beta (c (n "network-interface") (v "0.1.2-beta") (d (list (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "windows") (r "^0.20.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.20.0") (d #t) (t "cfg(target_os = \"windows\")") (k 1)))) (h "0lz16h1fpx2p70m25kg0a3hisjxplhqbwvz4zkf3q8ay2y8bvnjg")))

(define-public crate-network-interface-0.1.3-beta (c (n "network-interface") (v "0.1.3-beta") (d (list (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "windows") (r "^0.20.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.20.0") (d #t) (t "cfg(target_os = \"windows\")") (k 1)))) (h "0cp0zy1lwz8d5zrndyp2iy1i53hs0s6hnmxjb90q1x3s2swkijr9")))

(define-public crate-network-interface-0.1.0 (c (n "network-interface") (v "0.1.0") (d (list (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "windows") (r "^0.20.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.20.0") (d #t) (t "cfg(target_os = \"windows\")") (k 1)))) (h "159ngl2q8j08lsgzly3xy9si4kins4qfqbx6yc2pzaqh8rr7yc6z")))

(define-public crate-network-interface-0.1.1 (c (n "network-interface") (v "0.1.1") (d (list (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("Win32_Foundation" "Win32_Networking_WinSock" "Win32_NetworkManagement_IpHelper"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0j32y2ykx9c0idc6g2pyxbyhqlypylwicscw3ras0m5431dib3av")))

(define-public crate-network-interface-0.1.2 (c (n "network-interface") (v "0.1.2") (d (list (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("ws2def" "ws2ipdef" "netioapi" "iphlpapi" "iptypes" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1d6y35zl7m8v4irl0nb46pii7w2albcv9zy02ch6v7if6ya6hgp1")))

(define-public crate-network-interface-0.1.3 (c (n "network-interface") (v "0.1.3") (d (list (d (n "cc") (r "^1.0.73") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("ws2def" "ws2ipdef" "netioapi" "iphlpapi" "iptypes" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "03rli5jcms8lmcwk04w7ghwrm1smlvzqw63wd4bpclya4c9bddi1")))

(define-public crate-network-interface-0.1.4 (c (n "network-interface") (v "0.1.4") (d (list (d (n "cc") (r "^1.0.73") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("ws2def" "ws2ipdef" "netioapi" "iphlpapi" "iptypes" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1ick3z7p03gqsriffwd1lrs4nbrlqg3zls0912f2lz8carj7qcdd")))

(define-public crate-network-interface-0.1.5 (c (n "network-interface") (v "0.1.5") (d (list (d (n "cc") (r "^1.0.73") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("ws2def" "ws2ipdef" "netioapi" "iphlpapi" "iptypes" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "164khgmn91hyg98nwdyd71f36n0f3kickbdrcrvwfgmvqnvp88j9")))

(define-public crate-network-interface-0.1.6 (c (n "network-interface") (v "0.1.6") (d (list (d (n "cc") (r "^1.0.73") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("ws2def" "ws2ipdef" "netioapi" "iphlpapi" "iptypes" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0p79aigqmm2ghmm3x6pvv251fcdjjxxdvqlsb6rbi3jiqj049g6h")))

(define-public crate-network-interface-1.0.0 (c (n "network-interface") (v "1.0.0") (d (list (d (n "cc") (r "^1.0.73") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("ws2def" "ws2ipdef" "netioapi" "iphlpapi" "iptypes" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "03kynml7lwgph0448vnvkkz3sx539mdrsqfpb2q96a7l4zvxpi0h")))

(define-public crate-network-interface-1.0.1 (c (n "network-interface") (v "1.0.1") (d (list (d (n "cc") (r "^1.0.73") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("ws2def" "ws2ipdef" "netioapi" "iphlpapi" "iptypes" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0fgmzc0xnz92cg8rzhhbljpmi04xb3qgrca04wshwi5b7lcf4si9")))

(define-public crate-network-interface-1.0.2 (c (n "network-interface") (v "1.0.2") (d (list (d (n "cc") (r "^1.0.73") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0.183") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("ws2def" "ws2ipdef" "netioapi" "iphlpapi" "iptypes" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0ybx68zxmvvcj83nmpl0h7wqdd063gz4dwpjxlfgm5kcwfwv3dhs") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-network-interface-1.0.3 (c (n "network-interface") (v "1.0.3") (d (list (d (n "cc") (r "^1.0.73") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0.183") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("ws2def" "ws2ipdef" "netioapi" "iphlpapi" "iptypes" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "15jg0b69f3dcayc7nv171zjkk5zq9w9d639d4xfkw5wi6kwpin5g") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-network-interface-1.1.0 (c (n "network-interface") (v "1.1.0") (d (list (d (n "cc") (r "^1.0.73") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0.183") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("ws2def" "ws2ipdef" "netioapi" "iphlpapi" "iptypes" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0lxkvmjvqwrbq10y4c55wfdxz166147pm869b0m1a248xpni4h25") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-network-interface-1.1.1 (c (n "network-interface") (v "1.1.1") (d (list (d (n "cc") (r "^1.0.73") (d #t) (t "cfg(target_os = \"macos\")") (k 1)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0.183") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("ws2def" "ws2ipdef" "netioapi" "iphlpapi" "iptypes" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1rxazs5r2lk7x26drj145scjh7czq4v8gskrdzjcksbzz6g7as0d") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-network-interface-1.1.2 (c (n "network-interface") (v "1.1.2") (d (list (d (n "cc") (r "^1.0.73") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonfly\"))") (k 1)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonfly\"))") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0.183") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("ws2def" "ws2ipdef" "netioapi" "iphlpapi" "iptypes" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0b3lvd32l2653bw9n1n4r9sz0v9m4bxpqix7c8kpgryvipwj9rcf") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-network-interface-1.1.3 (c (n "network-interface") (v "1.1.3") (d (list (d (n "cc") (r "^1.0.73") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonfly\"))") (k 1)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonfly\"))") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0.183") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("ws2def" "ws2ipdef" "netioapi" "iphlpapi" "iptypes" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1c6z92pfl265iw8qksm9rdpl6c117g66mmh01jldsmbzpnfzswmf") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-network-interface-1.1.4 (c (n "network-interface") (v "1.1.4") (d (list (d (n "cc") (r "^1.0.73") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonfly\"))") (k 1)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonfly\"))") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0.183") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("ws2def" "ws2ipdef" "netioapi" "iphlpapi" "iptypes" "ntdef" "winerror"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1lf46yhy9jymbia8fp8p8xyhrmg2c6kyp3yz1csfsvkmpwwk9954") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-network-interface-2.0.0 (c (n "network-interface") (v "2.0.0") (d (list (d (n "cc") (r "^1.0.73") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonfly\"))") (k 1)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonfly\"))") (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0.183") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("ws2def" "ws2ipdef" "netioapi" "iphlpapi" "iptypes" "ntdef" "winerror"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1mcqv47pwi9hjckg168a5gcmh1jla8dkmiy6yajfr2rjk3w1jd23") (s 2) (e (quote (("serde" "dep:serde"))))))

