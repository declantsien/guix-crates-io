(define-module (crates-io ne te netem-trace) #:use-module (crates-io))

(define-public crate-netem-trace-0.1.0 (c (n "netem-trace") (v "0.1.0") (d (list (d (n "bandwidth") (r "^0.3.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.10") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "typetag") (r "^0.2.5") (o #t) (d #t) (k 0)))) (h "026hz13fm29qwhfnhz149c3gdw8k3mviy7m4a47wb9qf0hicr4m9") (f (quote (("model" "bw-model") ("default" "model")))) (s 2) (e (quote (("serde" "dep:serde" "dep:typetag" "bandwidth/serde") ("mahimahi" "dep:itertools") ("bw-model" "dep:rand" "dep:rand_distr" "dep:once_cell" "dep:dyn-clone"))))))

(define-public crate-netem-trace-0.2.0 (c (n "netem-trace") (v "0.2.0") (d (list (d (n "bandwidth") (r "^0.3.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.10") (o #t) (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "typetag") (r "^0.2.5") (o #t) (d #t) (k 0)))) (h "0gk8jb4gznm1ddwl5i0dpyp1iz5rki6q88siy9qygzxpa8kdy20p") (f (quote (("model" "bw-model") ("full" "model" "mahimahi" "human") ("default" "model")))) (s 2) (e (quote (("serde" "dep:serde" "dep:typetag" "bandwidth/serde") ("mahimahi" "dep:itertools") ("human" "serde" "dep:humantime-serde") ("bw-model" "dep:rand" "dep:rand_distr" "dep:once_cell" "dep:dyn-clone"))))))

(define-public crate-netem-trace-0.2.1 (c (n "netem-trace") (v "0.2.1") (d (list (d (n "bandwidth") (r "^0.3.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.10") (o #t) (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "typetag") (r "^0.2.5") (o #t) (d #t) (k 0)))) (h "19fvxfic3dj35qypbcj82jx8jgvyvp5grwwxpnjn33f4962rvf6n") (f (quote (("model" "bw-model" "delay-model" "loss-model") ("full" "model" "mahimahi" "human") ("default" "model")))) (s 2) (e (quote (("serde" "dep:serde" "dep:typetag" "bandwidth/serde") ("mahimahi" "dep:itertools") ("loss-model" "dep:dyn-clone") ("human" "serde" "dep:humantime-serde") ("delay-model" "dep:dyn-clone") ("bw-model" "dep:rand" "dep:rand_distr" "dep:once_cell" "dep:dyn-clone"))))))

(define-public crate-netem-trace-0.3.0 (c (n "netem-trace") (v "0.3.0") (d (list (d (n "bandwidth") (r "^0.3.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.10") (o #t) (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "typetag") (r "^0.2.5") (o #t) (d #t) (k 0)))) (h "0j6dxba89vv7wxsiwgq08yn1gnl7q9w3yr411xd7hldmijriwzak") (f (quote (("model" "bw-model" "delay-model" "loss-model") ("full" "model" "mahimahi" "human") ("default" "model")))) (s 2) (e (quote (("serde" "dep:serde" "dep:typetag" "bandwidth/serde") ("mahimahi" "dep:itertools") ("loss-model" "dep:dyn-clone") ("human" "serde" "dep:humantime-serde") ("delay-model" "dep:dyn-clone") ("bw-model" "dep:rand" "dep:rand_distr" "dep:once_cell" "dep:dyn-clone"))))))

(define-public crate-netem-trace-0.3.1 (c (n "netem-trace") (v "0.3.1") (d (list (d (n "bandwidth") (r "^0.3.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.10") (o #t) (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "typetag") (r "^0.2.5") (o #t) (d #t) (k 0)))) (h "1j7qwnhr3grza1b4lgnsagrivj4mcnxihncyq0z5gicj5yavkr3n") (f (quote (("model" "bw-model" "delay-model" "loss-model") ("full" "model" "mahimahi" "human") ("default" "model")))) (s 2) (e (quote (("serde" "dep:serde" "dep:typetag" "bandwidth/serde") ("mahimahi" "dep:itertools") ("loss-model" "dep:dyn-clone") ("human" "serde" "dep:humantime-serde") ("delay-model" "dep:dyn-clone") ("bw-model" "dep:rand" "dep:rand_distr" "dep:once_cell" "dep:dyn-clone"))))))

(define-public crate-netem-trace-0.3.2 (c (n "netem-trace") (v "0.3.2") (d (list (d (n "bandwidth") (r "^0.3.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.10") (o #t) (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "typetag") (r "^0.2.5") (o #t) (d #t) (k 0)))) (h "03kpja6rd3pww4g5hfsa41haj0ghg90fh8dxjqk2597brkh6k519") (f (quote (("model" "bw-model" "delay-model" "loss-model") ("full" "model" "mahimahi" "human") ("default" "model")))) (s 2) (e (quote (("serde" "dep:serde" "dep:typetag" "bandwidth/serde") ("mahimahi" "dep:itertools") ("loss-model" "dep:dyn-clone") ("human" "serde" "dep:humantime-serde") ("delay-model" "dep:dyn-clone") ("bw-model" "dep:rand" "dep:rand_distr" "dep:once_cell" "dep:dyn-clone"))))))

