(define-module (crates-io ne ce necessist-frameworks) #:use-module (crates-io))

(define-public crate-necessist-frameworks-0.1.0-beta.7 (c (n "necessist-frameworks") (v "0.1.0-beta.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 1)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 1)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.1.0-beta.7") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "^0.2") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.63") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "04yn7ir99wkj7h2n7l8s2cbvyl217micn7y7vanbmxa8bw9pd1pm")))

(define-public crate-necessist-frameworks-0.1.0-beta.8 (c (n "necessist-frameworks") (v "0.1.0-beta.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bstr") (r "^1.3") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 1)) (d (n "clap") (r "^4.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 1)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.1.0-beta.8") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.2.4") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.75") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "1ryhpgi2ba731ypx1kprq20r3ddw5gi1acb5ckghk0kynagwcvgl")))

(define-public crate-necessist-frameworks-0.1.0-beta.9 (c (n "necessist-frameworks") (v "0.1.0-beta.9") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.3") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 1)) (d (n "clap") (r "^4.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 1)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.1.0-beta.9") (d #t) (k 0)) (d (n "regex") (r "^1.8") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.2.4") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.75") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "05gwj4gspvqg7k5aa7sq88sb3ajp2jczhmppkmwlpih3ry1ipgmc")))

(define-public crate-necessist-frameworks-0.1.0-beta.10 (c (n "necessist-frameworks") (v "0.1.0-beta.10") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.3") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 1)) (d (n "clap") (r "^4.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 1)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.1.0-beta.10") (d #t) (k 0)) (d (n "regex") (r "^1.8") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.2.4") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.76") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "1vny067gdyjib2lh7my9mjaz6lh124h6f3fkbr47pia0lh9dva39")))

(define-public crate-necessist-frameworks-0.1.0 (c (n "necessist-frameworks") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.5") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 1)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 1)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.8") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.3.0") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.76") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "1svs3s46p0v8xyjjn1v5w7j8y6qm57bmm6j7lccii5n3lq3hj2hq")))

(define-public crate-necessist-frameworks-0.1.1 (c (n "necessist-frameworks") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.5") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 1)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 1)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.8") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.3.0") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.78") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "0a5978jk76dalwcqqfnjb6dzi4pgvc0532nprqhqyys5y90vkagg")))

(define-public crate-necessist-frameworks-0.1.2 (c (n "necessist-frameworks") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.5") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 1)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 1)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.1.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.8") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.79") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "0aqf64zwjd7pyjvvi8qlmwdiicrmikv6ixn2sz0d4y1g5c88g4fd")))

(define-public crate-necessist-frameworks-0.1.3 (c (n "necessist-frameworks") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.6") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 1)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 1)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.79") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "1c3kilzvdjbpr4x2vmn7lm4x78iwq8xry4l89f01hd7saig97gpz")))

(define-public crate-necessist-frameworks-0.2.0 (c (n "necessist-frameworks") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.6") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 1)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 1)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.79") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "toml_edit") (r "^0.19") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "1761bbrmk7y3dbjx1c0yq33blbw373nr0vclrnbhrsh1w9kblqwk")))

(define-public crate-necessist-frameworks-0.2.1 (c (n "necessist-frameworks") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.6") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.17") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.17") (d #t) (k 1)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 1)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.2.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.79") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "toml_edit") (r "^0.19") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "1fmchwmzvfd0k5js0vpw9fkr6hf00ra4jn4dvf7pzhbd95shkl65")))

(define-public crate-necessist-frameworks-0.2.2 (c (n "necessist-frameworks") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.6") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.17") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.17") (d #t) (k 1)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 1)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.2.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.79") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "toml_edit") (r "^0.19") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "19rk276wibhhw6k65ybpgzn9an0wrs6p8i0qn3sq7d1h17icw2fh")))

(define-public crate-necessist-frameworks-0.2.3 (c (n "necessist-frameworks") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.6") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 1)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 1)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.2.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.3.2") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.83") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "toml_edit") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)))) (h "0mfll52h67d2jansif8qjh06n8hvhcb0ssyq77sm3lm6xm6q9nqj")))

(define-public crate-necessist-frameworks-0.3.0 (c (n "necessist-frameworks") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.6") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 1)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 1)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.3.2") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.83") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "toml_edit") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)))) (h "1y3cgwibwjd8pbbzzx0kq7vnhwmjdlgwhpk4l1fyp4jhsbvg3k3x")))

(define-public crate-necessist-frameworks-0.3.1 (c (n "necessist-frameworks") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.6") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 1)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 1)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.3.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.3.2") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.84") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "toml_edit") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)))) (h "0w7xnwmm7brsyw8daw22ls0p1lvfpvvy009siwpq82azzn1pdvz2")))

(define-public crate-necessist-frameworks-0.3.2 (c (n "necessist-frameworks") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.7") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 1)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 1)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.3.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.3.2") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.86") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "toml_edit") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)))) (h "1zx0yd8pv0xwnwxrq3xrhcym0yx96as95gj94rfqck7apklks190")))

(define-public crate-necessist-frameworks-0.3.3 (c (n "necessist-frameworks") (v "0.3.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.8") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 1)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 1)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.3.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.86") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "toml_edit") (r "^0.21") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)))) (h "1qmjhxrmrpgzw5a75djd4xh960837aqwwqi2qsvch2iyx9sksfhj")))

(define-public crate-necessist-frameworks-0.3.4 (c (n "necessist-frameworks") (v "0.3.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.8") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 1)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 1)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.3.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.86") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "toml_edit") (r "^0.21") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)))) (h "1hm2rpzjd3sfi28a8670ym43jsjwyiygna67cxbg25dsr7gy1zmh")))

(define-public crate-necessist-frameworks-0.4.0 (c (n "necessist-frameworks") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.8") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 1)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 1)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.86") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "toml_edit") (r "^0.21") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)))) (h "1197m159bg5h0zp0x1dj5yzlfwv373lx875i36lmk5wpwd9awx1j")))

(define-public crate-necessist-frameworks-0.4.1 (c (n "necessist-frameworks") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.8") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 1)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 1)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.4.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.86") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "toml_edit") (r "^0.21") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)))) (h "01da74sk8bk3jh4jw2pbjx1harzck5bfb20cyp9rp16vaipgq99h")))

(define-public crate-necessist-frameworks-0.4.2 (c (n "necessist-frameworks") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.9") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 1)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 1)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.4.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.87") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "toml_edit") (r "^0.21") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)))) (h "1f2z1m6fimjca3k1kg0qz247hblwrxli3pvyq1cqn1jkzls1dfi3")))

(define-public crate-necessist-frameworks-0.4.3 (c (n "necessist-frameworks") (v "0.4.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.9") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 1)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 1)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.88") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "toml_edit") (r "^0.21") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)))) (h "0nlk9bzkwiyhkfn0r7p7qlk8w47rlvsri1fy75mlrazfjqzl1v51")))

(define-public crate-necessist-frameworks-0.4.4 (c (n "necessist-frameworks") (v "0.4.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.9") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.4.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.90") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "toml_edit") (r "^0.21") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)))) (h "031gkas0zmj5s2087di96n1gck6q3p58n9l2v6wbyr0rnlpzx5l1")))

(define-public crate-necessist-frameworks-0.4.5 (c (n "necessist-frameworks") (v "0.4.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.9") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.4.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.90") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "tempfile") (r "^3.10") (d #t) (k 2)) (d (n "toml_edit") (r "^0.22") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.5") (d #t) (k 0)))) (h "1bs4wvg4vimirnw64761wd8vcvm3sr21d1yppgm8z1jjkcxzl64v")))

(define-public crate-necessist-frameworks-0.4.6 (c (n "necessist-frameworks") (v "0.4.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.9") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.5") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.4.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.90") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "tempfile") (r "^3.10") (d #t) (k 2)) (d (n "toml_edit") (r "^0.22") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.5") (d #t) (k 0)))) (h "0zivm1zfgcpr1lmsv73vn23qnd29j62iy7vg2d28i6g0nx4nh981")))

(define-public crate-necessist-frameworks-0.4.7 (c (n "necessist-frameworks") (v "0.4.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.9") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.5") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.4.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.90") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "tempfile") (r "^3.10") (d #t) (k 2)) (d (n "toml_edit") (r "^0.22") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.22") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.21") (d #t) (k 0)) (d (n "walkdir") (r "^2.5") (d #t) (k 0)))) (h "1m8ik89c6wm7yk85yk586djqgk9zbas2lkgmxfhrz81bwnb83zjc")))

(define-public crate-necessist-frameworks-0.4.8 (c (n "necessist-frameworks") (v "0.4.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.9") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.5") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.4.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.91") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "tempfile") (r "^3.10") (d #t) (k 2)) (d (n "toml_edit") (r "^0.22") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.22") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.21") (d #t) (k 0)) (d (n "walkdir") (r "^2.5") (d #t) (k 0)))) (h "00yb58a6vkpihdmvl8ayr2lrr1wh06zz0qigjyi4pmzx6fjda2lg")))

(define-public crate-necessist-frameworks-0.4.9 (c (n "necessist-frameworks") (v "0.4.9") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "bstr") (r "^1.9") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 2)) (d (n "heck") (r "^0.5") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 1)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "necessist-core") (r "=0.4.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "remain") (r "^0.2") (d #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "subprocess") (r "^0.2") (d #t) (k 0)) (d (n "swc_core") (r "^0.92") (f (quote ("common" "ecma_ast" "ecma_parser" "ecma_visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "tempfile") (r "^3.10") (d #t) (k 2)) (d (n "toml_edit") (r "^0.22") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.22") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.21") (d #t) (k 0)) (d (n "walkdir") (r "^2.5") (d #t) (k 0)))) (h "0dwl4d8ycdypar9xp717401mq6lmd52my6pm5am16hmr9msb7354")))

