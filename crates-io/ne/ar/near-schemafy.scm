(define-module (crates-io ne ar near-schemafy) #:use-module (crates-io))

(define-public crate-near-schemafy-0.7.0 (c (n "near-schemafy") (v "0.7.0") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemafy_core") (r "^0.7.0") (d #t) (k 0) (p "near_schemafy_core")) (d (n "schemafy_core") (r "^0.7.0") (d #t) (k 1) (p "near_schemafy_core")) (d (n "schemafy_lib") (r "^0.7.0") (d #t) (k 0) (p "near_schemafy_lib")) (d (n "schemafy_lib") (r "^0.7.0") (d #t) (k 1) (p "near_schemafy_lib")) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)))) (h "1rz4gkl1ygc1hr4q4nsya1wcy9n124210isl0fjq7zmmkpm093lh") (f (quote (("tool" "anyhow" "structopt" "tempfile") ("internal-regenerate") ("generate-tests"))))))

