(define-module (crates-io ne ar near-vm-runner) #:use-module (crates-io))

(define-public crate-near-vm-runner-0.2.0 (c (n "near-vm-runner") (v "0.2.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "near-cached") (r "^0.8.0") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.2.0") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.2.0") (f (quote ("mocks"))) (d #t) (k 2)) (d (n "parity-wasm") (r "^0.31.3") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.7.0") (d #t) (k 0)) (d (n "wabt") (r "^0.7.4") (d #t) (k 2)) (d (n "wasmer-runtime") (r "^0.5.7") (f (quote ("singlepass"))) (d #t) (k 0)))) (h "0hwibssw6amz8m5p2jdy34iqvyp07p8r3v79hz5cy2q20d33vvks")))

(define-public crate-near-vm-runner-0.2.1 (c (n "near-vm-runner") (v "0.2.1") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.9.0") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.2.0") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.2.0") (f (quote ("mocks"))) (d #t) (k 2)) (d (n "parity-wasm") (r "^0.31.3") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.7.0") (d #t) (k 0)) (d (n "wabt") (r "^0.7.4") (d #t) (k 2)) (d (n "wasmer-runtime") (r "^0.5.7") (f (quote ("singlepass"))) (d #t) (k 0)))) (h "1pkm2d5gsw224bamd1q8mp7jjpscmri58d5ydy12aqalcbc09pjg")))

(define-public crate-near-vm-runner-0.2.2 (c (n "near-vm-runner") (v "0.2.2") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.9.0") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.2.1") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.2.0") (f (quote ("mocks"))) (d #t) (k 2)) (d (n "parity-wasm") (r "^0.31.3") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.7.0") (d #t) (k 0)) (d (n "wabt") (r "^0.7.4") (d #t) (k 2)) (d (n "wasmer-runtime") (r "^0.5.7") (f (quote ("singlepass"))) (d #t) (k 0)))) (h "06h2a5i853xfcislnlzdnr10h7m5grh85955sd684l7k98lvdmaq")))

(define-public crate-near-vm-runner-0.2.3 (c (n "near-vm-runner") (v "0.2.3") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.9.0") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.2.3") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.2.3") (f (quote ("mocks"))) (d #t) (k 2)) (d (n "parity-wasm") (r "^0.31.3") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.7.0") (d #t) (k 0)) (d (n "wabt") (r "^0.7.4") (d #t) (k 2)) (d (n "wasmer-runtime") (r "^0.5.7") (f (quote ("singlepass"))) (d #t) (k 0)))) (h "1m44j2bizwnddrhisiv32nc8yigw1r668172in2nr5756676pg84")))

(define-public crate-near-vm-runner-0.2.4 (c (n "near-vm-runner") (v "0.2.4") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.9.0") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.2.3") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.2.3") (f (quote ("mocks"))) (d #t) (k 2)) (d (n "parity-wasm") (r "^0.31.3") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.7.0") (d #t) (k 0)) (d (n "wabt") (r "^0.7.4") (d #t) (k 2)) (d (n "wasmer-runtime") (r "^0.5.7") (f (quote ("singlepass"))) (d #t) (k 0)))) (h "04gndxwmlqbd8iiba82l61sbb2j0vb08xfcib044hjgvli3dypxj")))

(define-public crate-near-vm-runner-0.2.5 (c (n "near-vm-runner") (v "0.2.5") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.9.0") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.2.5") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.2.5") (f (quote ("mocks"))) (d #t) (k 2)) (d (n "parity-wasm") (r "^0.31.3") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.7.0") (d #t) (k 0)) (d (n "wabt") (r "^0.7.4") (d #t) (k 2)) (d (n "wasmer-runtime") (r "^0.5.7") (f (quote ("singlepass"))) (d #t) (k 0)))) (h "0prvikrbs3km12k7ivpwqfhj56baaanxsd9bcfqhn5hwg4a8fggm")))

(define-public crate-near-vm-runner-0.3.1 (c (n "near-vm-runner") (v "0.3.1") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.9.0") (d #t) (k 0)) (d (n "near-vm-errors") (r "^0.3.1") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.3.1") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.3.0") (f (quote ("mocks"))) (d #t) (k 2)) (d (n "parity-wasm") (r "^0.40.1") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.11.0") (d #t) (k 0)) (d (n "wabt") (r "^0.7.4") (d #t) (k 2)) (d (n "wasmer-runtime") (r "^0.7.0") (f (quote ("singlepass"))) (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.7.0") (d #t) (k 0)))) (h "1gzp0yz1mrv1vcvsvgvprg5n884pmfds1rjl3y2qp3p651y26axx")))

(define-public crate-near-vm-runner-0.3.2 (c (n "near-vm-runner") (v "0.3.2") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.9.0") (d #t) (k 0)) (d (n "near-vm-errors") (r "^0.3.2") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.3.2") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.40.1") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.11.0") (d #t) (k 0)) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmer-runtime") (r "^0.7.0") (f (quote ("singlepass"))) (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.7.0") (d #t) (k 0)))) (h "14mgj89h4va6j9rb4bb6hhjdvhrb37v78rdqrz36rzl0zcr3mw9b")))

(define-public crate-near-vm-runner-0.4.1 (c (n "near-vm-runner") (v "0.4.1") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.9.0") (d #t) (k 0)) (d (n "near-runtime-fees") (r "^0.4.1") (d #t) (k 0)) (d (n "near-vm-errors") (r "^0.4.1") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.4.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.40.1") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.11.0") (d #t) (k 0)) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmer-runtime") (r "^0.9.0") (f (quote ("singlepass"))) (d #t) (k 0)) (d (n "wasmer-runtime-core") (r "^0.9.0") (d #t) (k 0)))) (h "0b755wg2m95wbl2m3p7irmrphbcfk6d88s4g440xdvblh0g5524k")))

(define-public crate-near-vm-runner-0.4.2 (c (n "near-vm-runner") (v "0.4.2") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.9.0") (d #t) (k 0)) (d (n "near-runtime-fees") (r "^0.4.2") (d #t) (k 0)) (d (n "near-vm-errors") (r "^0.4.2") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.4.2") (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12.0") (d #t) (k 0)) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmer-runtime") (r "^0.9.0") (f (quote ("default-backend-singlepass"))) (k 0)) (d (n "wasmer-runtime-core") (r "^0.9.0") (f (quote ("backend-singlepass"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.39.2") (d #t) (k 0)))) (h "0jh62s2byz3xni65srvn8mv4yrwwl26kg2v4c3a5jjlnwdhhlxlq") (f (quote (("default") ("costs_counting" "near-vm-logic/costs_counting"))))))

(define-public crate-near-vm-runner-0.4.3 (c (n "near-vm-runner") (v "0.4.3") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.11.0") (d #t) (k 0)) (d (n "near-runtime-fees") (r "^0.4.3") (d #t) (k 0)) (d (n "near-vm-errors") (r "^0.4.3") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.4.3") (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12.0") (d #t) (k 0)) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmer-runtime") (r "^0.11.0") (f (quote ("default-backend-singlepass"))) (k 0)) (d (n "wasmer-runtime-core") (r "^0.11.0") (f (quote ("backend-singlepass"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.44") (d #t) (k 0)))) (h "14lx6k1dj6r84kah35c980zzrpp75mlnkmffkxkfzj0pccv31z40") (f (quote (("default") ("costs_counting" "near-vm-logic/costs_counting"))))))

(define-public crate-near-vm-runner-0.4.4 (c (n "near-vm-runner") (v "0.4.4") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.11.0") (d #t) (k 0)) (d (n "near-runtime-fees") (r "^0.4.4") (d #t) (k 0)) (d (n "near-vm-errors") (r "^0.4.4") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.4.4") (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12.0") (d #t) (k 0)) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmer-runtime") (r "^0.11.0") (f (quote ("default-backend-singlepass"))) (k 0)) (d (n "wasmer-runtime-core") (r "^0.11.0") (f (quote ("backend-singlepass"))) (d #t) (k 0)) (d (n "wasmparser") (r "^0.44") (d #t) (k 0)))) (h "16f4ik0s3m6zpyi4ymlyc94niay2jv97f62k1k4iaa4zhhhpn9dp") (f (quote (("no_cache") ("default") ("costs_counting" "near-vm-logic/costs_counting"))))))

(define-public crate-near-vm-runner-0.4.5 (c (n "near-vm-runner") (v "0.4.5") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.11.0") (d #t) (k 0)) (d (n "near-runtime-fees") (r "^0.4.5") (d #t) (k 0)) (d (n "near-vm-errors") (r "^0.4.5") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.4.5") (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12.0") (d #t) (k 0)) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmer-runtime") (r "^0.13.1") (f (quote ("default-backend-singlepass"))) (k 0)) (d (n "wasmer-runtime-core") (r "^0.13.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.44") (d #t) (k 0)))) (h "1d7w0frrh1jblbvdh1r83fxcqjy96gvh9v5gz7syh09qxxn9lwcd") (f (quote (("no_cache") ("default") ("costs_counting" "near-vm-logic/costs_counting"))))))

(define-public crate-near-vm-runner-0.5.0 (c (n "near-vm-runner") (v "0.5.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.11.0") (d #t) (k 0)) (d (n "near-runtime-fees") (r "^0.5.0") (d #t) (k 0)) (d (n "near-vm-errors") (r "^0.5.0") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.5.0") (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12.0") (d #t) (k 0)) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmer-runtime") (r "^0.13.1") (f (quote ("default-backend-singlepass"))) (k 0)) (d (n "wasmer-runtime-core") (r "^0.13.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.44") (d #t) (k 0)))) (h "1cf7sigl4hgy3135s5lc95mh0qc360bbngd5wngldbvikkh3k7q7") (f (quote (("no_cache") ("default") ("costs_counting" "near-vm-logic/costs_counting"))))))

(define-public crate-near-vm-runner-0.6.0 (c (n "near-vm-runner") (v "0.6.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.11.0") (d #t) (k 0)) (d (n "near-runtime-fees") (r "^0.6.0") (d #t) (k 0)) (d (n "near-vm-errors") (r "^0.6.0") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.6.0") (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12.0") (d #t) (k 0)) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmer-runtime") (r "^0.13.1") (f (quote ("default-backend-singlepass"))) (k 0)) (d (n "wasmer-runtime-core") (r "^0.13.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.44") (d #t) (k 0)))) (h "1qfy1cik5cldr4a6h6hnbgf1fks5924m8bmcpplisdc1yzlzjbda") (f (quote (("no_cache") ("default") ("costs_counting" "near-vm-logic/costs_counting"))))))

(define-public crate-near-vm-runner-0.6.1 (c (n "near-vm-runner") (v "0.6.1") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.12.0") (d #t) (k 0)) (d (n "near-runtime-fees") (r "^0.6.1") (d #t) (k 0)) (d (n "near-vm-errors") (r "^0.6.1") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.6.1") (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12.0") (d #t) (k 0)) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmer-runtime") (r "^0.13.1") (f (quote ("default-backend-singlepass"))) (k 0)) (d (n "wasmer-runtime-core") (r "^0.13.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.44") (d #t) (k 0)))) (h "0kmq1mq6pndffczv08ki3xg3hhn5052ihw73n4xiad5ipcykwj1w") (f (quote (("no_cache") ("default") ("costs_counting" "near-vm-logic/costs_counting"))))))

(define-public crate-near-vm-runner-0.7.0 (c (n "near-vm-runner") (v "0.7.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.12.0") (d #t) (k 0)) (d (n "near-runtime-fees") (r "^0.7.0") (d #t) (k 0)) (d (n "near-vm-errors") (r "^0.7.0") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.7.0") (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12.0") (d #t) (k 0)) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmer-runtime") (r "^0.13.1") (f (quote ("default-backend-singlepass"))) (k 0)) (d (n "wasmer-runtime-core") (r "^0.13.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.44") (d #t) (k 0)))) (h "02v1vxjc6x1zdc4mg0mchkxwgvkk6rnn8w1bb7m4d296bqk8sfx9") (f (quote (("no_cache") ("default") ("costs_counting" "near-vm-logic/costs_counting"))))))

(define-public crate-near-vm-runner-0.7.1 (c (n "near-vm-runner") (v "0.7.1") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.12.0") (d #t) (k 0)) (d (n "near-runtime-fees") (r "^0.7.1") (d #t) (k 0)) (d (n "near-vm-errors") (r "^0.7.1") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.7.1") (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12.0") (d #t) (k 0)) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmer-runtime") (r "^0.13.1") (f (quote ("default-backend-singlepass"))) (k 0)) (d (n "wasmer-runtime-core") (r "^0.13.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.44") (d #t) (k 0)))) (h "1s96w02pk0831qk0ysj2z10lshkmxjqxlznjabdvdm6zsd4k5z5a") (f (quote (("no_cache") ("default") ("costs_counting" "near-vm-logic/costs_counting"))))))

(define-public crate-near-vm-runner-0.8.0 (c (n "near-vm-runner") (v "0.8.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.12.0") (d #t) (k 0)) (d (n "near-runtime-fees") (r "^0.8.0") (d #t) (k 0)) (d (n "near-vm-errors") (r "^0.8.0") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.8.0") (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12.0") (d #t) (k 0)) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmer-runtime") (r "^0.13.1") (f (quote ("default-backend-singlepass"))) (k 0)) (d (n "wasmer-runtime-core") (r "^0.13.1") (d #t) (k 0)) (d (n "wasmparser") (r "^0.44") (d #t) (k 0)))) (h "002c135bzxqjbpi4x6spqj42jndnn6qmvvkclnv0aihx4gh38bf3") (f (quote (("no_cache") ("default") ("costs_counting" "near-vm-logic/costs_counting"))))))

(define-public crate-near-vm-runner-0.9.0 (c (n "near-vm-runner") (v "0.9.0") (d (list (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.12") (d #t) (k 0)) (d (n "near-runtime-fees") (r "^0.9.0") (d #t) (k 0)) (d (n "near-vm-errors") (r "^0.9.0") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.9.0") (k 0)) (d (n "parity-wasm") (r "^0.41") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12") (d #t) (k 0)) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmer-runtime") (r "= 0.17.0") (f (quote ("default-backend-singlepass"))) (k 0)) (d (n "wasmer-runtime-core") (r "= 0.17.0") (d #t) (k 0)))) (h "0pip22zgh6l58vjzqq9gd5ykr86gzpl55w7clmqk4064vwmgd7pb") (f (quote (("no_cache") ("default") ("costs_counting" "near-vm-logic/costs_counting"))))))

(define-public crate-near-vm-runner-0.9.1 (c (n "near-vm-runner") (v "0.9.1") (d (list (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.12") (d #t) (k 0)) (d (n "near-runtime-fees") (r "^0.9.1") (d #t) (k 0)) (d (n "near-vm-errors") (r "^0.9.1") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.9.1") (k 0)) (d (n "parity-wasm") (r "^0.41") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12") (d #t) (k 0)) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmer-runtime") (r "= 0.17.0") (f (quote ("default-backend-singlepass"))) (k 0)) (d (n "wasmer-runtime-core") (r "= 0.17.0") (d #t) (k 0)))) (h "0h88fm1s2hws54r9g47whdxnm3mcrjcivh0613iyz9rj29d5c1n1") (f (quote (("no_cache") ("default") ("costs_counting" "near-vm-logic/costs_counting"))))))

(define-public crate-near-vm-runner-1.0.0 (c (n "near-vm-runner") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0.19") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.12") (d #t) (k 0)) (d (n "near-runtime-fees") (r "^1.0.0") (d #t) (k 0)) (d (n "near-vm-errors") (r "^1.0.0") (d #t) (k 0)) (d (n "near-vm-logic") (r "^1.0.0") (k 0)) (d (n "parity-wasm") (r "^0.41") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12") (d #t) (k 0)) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmer-runtime") (r "=0.17.1") (f (quote ("default-backend-singlepass"))) (k 0)) (d (n "wasmer-runtime-core") (r "=0.17.1") (d #t) (k 0)) (d (n "wasmtime") (r "^0.17.0") (f (quote ("lightbeam"))) (o #t) (k 0)))) (h "16wrmxbz7ndd8l9r34q4hcy8kisrz9wnnmz9n2h0bnvc9syxkmy6") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmtime_default" "wasmtime_vm") ("wasmer_default") ("no_cache") ("default" "wasmer_default") ("costs_counting" "near-vm-logic/costs_counting")))) (y #t)))

(define-public crate-near-vm-runner-1.1.0 (c (n "near-vm-runner") (v "1.1.0") (d (list (d (n "anyhow") (r "^1.0.19") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.12") (d #t) (k 0)) (d (n "near-runtime-fees") (r "^1.1.0") (d #t) (k 0)) (d (n "near-vm-errors") (r "^1.1.0") (d #t) (k 0)) (d (n "near-vm-logic") (r "^1.1.0") (k 0)) (d (n "parity-wasm") (r "^0.41") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12") (d #t) (k 0)) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmer-runtime") (r "=0.17.1") (f (quote ("default-backend-singlepass"))) (k 0)) (d (n "wasmer-runtime-core") (r "=0.17.1") (d #t) (k 0)) (d (n "wasmtime") (r "^0.17.0") (f (quote ("lightbeam"))) (o #t) (k 0)))) (h "1mnnbhbw8y9dn1frjcxm620lpyz8cyigl93ycyg1ifv8y2303snw") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmtime_default" "wasmtime_vm") ("wasmer_default") ("no_cache") ("default" "wasmer_default") ("costs_counting" "near-vm-logic/costs_counting")))) (y #t)))

(define-public crate-near-vm-runner-1.2.0 (c (n "near-vm-runner") (v "1.2.0") (d (list (d (n "anyhow") (r "^1.0.19") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.12") (d #t) (k 0)) (d (n "near-runtime-fees") (r "^1.2.0") (d #t) (k 0)) (d (n "near-vm-errors") (r "^1.2.0") (d #t) (k 0)) (d (n "near-vm-logic") (r "^1.2.0") (k 0)) (d (n "parity-wasm") (r "^0.41") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12") (d #t) (k 0)) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmer-runtime") (r "=0.17.1") (f (quote ("default-backend-singlepass"))) (k 0)) (d (n "wasmer-runtime-core") (r "=0.17.1") (d #t) (k 0)) (d (n "wasmtime") (r "^0.17.0") (f (quote ("lightbeam"))) (o #t) (k 0)))) (h "1hl8k5w02rmmfadzhwp1cargpzynvvvv5qrx3hx9vlpq1iwdm447") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmtime_default" "wasmtime_vm") ("wasmer_default") ("no_cache") ("default" "wasmer_default") ("costs_counting" "near-vm-logic/costs_counting")))) (y #t)))

(define-public crate-near-vm-runner-2.0.0 (c (n "near-vm-runner") (v "2.0.0") (d (list (d (n "anyhow") (r "^1.0.19") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.12") (d #t) (k 0)) (d (n "near-runtime-fees") (r "^2.0.0") (d #t) (k 0)) (d (n "near-vm-errors") (r "^2.0.0") (d #t) (k 0)) (d (n "near-vm-logic") (r "^2.0.0") (k 0)) (d (n "parity-wasm") (r "^0.41") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12") (d #t) (k 0)) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmer-runtime") (r "=0.17.1") (f (quote ("default-backend-singlepass"))) (k 0)) (d (n "wasmer-runtime-core") (r "=0.17.1") (d #t) (k 0)) (d (n "wasmtime") (r "^0.17.0") (f (quote ("lightbeam"))) (o #t) (k 0)))) (h "1d6z6idynrw1dppkxjphykvqar579cbifq4dxvdy3yb3cldy9dl2") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmtime_default" "wasmtime_vm") ("wasmer_default") ("no_cpu_compatibility_checks") ("no_cache") ("default" "wasmer_default") ("costs_counting" "near-vm-logic/costs_counting")))) (y #t)))

(define-public crate-near-vm-runner-2.2.0 (c (n "near-vm-runner") (v "2.2.0") (d (list (d (n "anyhow") (r "^1.0.19") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cached") (r "^0.12") (d #t) (k 0)) (d (n "near-runtime-fees") (r "^2.2.0") (d #t) (k 0)) (d (n "near-vm-errors") (r "^2.2.0") (d #t) (k 0)) (d (n "near-vm-logic") (r "^2.2.0") (k 0)) (d (n "parity-wasm") (r "^0.41") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12") (d #t) (k 0)) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmer-runtime") (r "=0.17.1") (f (quote ("default-backend-singlepass"))) (k 0)) (d (n "wasmer-runtime-core") (r "=0.17.1") (d #t) (k 0)) (d (n "wasmtime") (r "^0.17.0") (f (quote ("lightbeam"))) (o #t) (k 0)))) (h "1jrp25il8yvwlk8l0z8ppigj3lnqhg5ihh35n3zbf999casaf69a") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmtime_default" "wasmtime_vm") ("wasmer_default") ("no_cpu_compatibility_checks") ("no_cache") ("lightbeam" "wasmtime_vm") ("default" "wasmer_default") ("costs_counting" "near-vm-logic/costs_counting")))) (y #t)))

(define-public crate-near-vm-runner-4.0.0-pre.1 (c (n "near-vm-runner") (v "4.0.0-pre.1") (d (list (d (n "anyhow") (r "^1.0.19") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "cached") (r "^0.23.0") (d #t) (k 0)) (d (n "lazy-static-include") (r "^3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "near-primitives") (r "^0.1.0-pre.1") (d #t) (k 0)) (d (n "near-vm-errors") (r "^4.0.0-pre.1") (d #t) (k 0)) (d (n "near-vm-logic") (r "^4.0.0-pre.1") (k 0)) (d (n "parity-wasm") (r "^0.41") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "wabt") (r "^0.9") (d #t) (k 2)) (d (n "wasmer") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-compiler-singlepass") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "wasmer-runtime") (r "^0.17.1") (f (quote ("default-backend-singlepass"))) (o #t) (k 0) (p "wasmer-runtime-near")) (d (n "wasmer-runtime-core") (r "^0.17.1") (d #t) (k 0) (p "wasmer-runtime-core-near")) (d (n "wasmer-types") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "wasmtime") (r "^0.20.0") (o #t) (k 0)))) (h "0j4bhp1v1ggd9hlxfi69l1d43062fnlyzi2ccwlnmiifw6a6x9lk") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmer1_vm" "wasmer" "wasmer-types" "wasmer-compiler-singlepass") ("wasmer0_vm" "wasmer-runtime") ("protocol_feature_evm") ("protocol_feature_alt_bn128" "near-vm-logic/protocol_feature_alt_bn128" "near-primitives/protocol_feature_alt_bn128" "near-vm-errors/protocol_feature_alt_bn128") ("no_cpu_compatibility_checks") ("no_cache") ("lightbeam" "wasmtime/lightbeam") ("default" "wasmer0_vm" "wasmtime_vm" "wasmer1_vm")))) (y #t)))

(define-public crate-near-vm-runner-0.16.1 (c (n "near-vm-runner") (v "0.16.1") (d (list (d (n "anyhow") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bolero") (r "^0.8.0") (d #t) (k 2)) (d (n "borsh") (r "^0.10.2") (f (quote ("rc"))) (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "near-cache") (r "^0.16.1") (d #t) (k 0)) (d (n "near-primitives") (r "^0.16.1") (d #t) (k 0)) (d (n "near-stable-hasher") (r "^0.16.1") (d #t) (k 0)) (d (n "near-vm-errors") (r "^0.16.1") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.16.1") (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.42") (k 0)) (d (n "parity-wasm_41") (r "^0.41") (d #t) (k 0) (p "parity-wasm")) (d (n "pwasm-utils_12") (r "^0.12") (d #t) (k 0) (p "pwasm-utils")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "wasm-smith") (r "^0.10") (d #t) (k 2)) (d (n "wasmer-compiler") (r "=2.4.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-near")) (d (n "wasmer-compiler-singlepass") (r "=2.4.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-singlepass-near")) (d (n "wasmer-engine") (r "=2.4.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-near")) (d (n "wasmer-engine-universal") (r "=2.4.0") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-universal-near")) (d (n "wasmer-runtime") (r "^0.18.0") (f (quote ("default-backend-singlepass"))) (o #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-near")) (d (n "wasmer-runtime-core") (r "^0.18.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-core-near")) (d (n "wasmer-types") (r "=2.4.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-types-near")) (d (n "wasmer-vm") (r "=2.4.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-vm-near")) (d (n "wasmparser") (r "^0.78") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2") (d #t) (k 2)) (d (n "wasmtime") (r "^4.0.0") (f (quote ("cranelift"))) (o #t) (k 0)) (d (n "wat") (r "^1.0.40") (d #t) (k 2)))) (h "1ng5jq5csdv7a6aazhlcfa23jfplg3byrcpgd9xdch13x0g8h9z9") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmer2_vm" "wasmer-compiler" "wasmer-compiler-singlepass" "wasmer-engine" "wasmer-engine-universal" "wasmer-types" "wasmer-vm") ("wasmer0_vm" "wasmer-runtime" "wasmer-runtime-core") ("sandbox" "near-vm-logic/sandbox") ("protocol_feature_fix_contract_loading_cost" "near-primitives/protocol_feature_fix_contract_loading_cost" "near-vm-logic/protocol_feature_fix_contract_loading_cost") ("no_cpu_compatibility_checks") ("no_cache") ("nightly" "near-primitives/nightly" "protocol_feature_fix_contract_loading_cost") ("io_trace" "near-vm-logic/io_trace") ("force_wasmtime" "wasmtime_vm") ("force_wasmer2" "wasmer2_vm") ("force_wasmer0" "wasmer0_vm") ("default" "wasmer0_vm" "wasmtime_vm" "wasmer2_vm")))) (r "1.68.0")))

(define-public crate-near-vm-runner-0.17.0 (c (n "near-vm-runner") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bolero") (r "^0.8.0") (d #t) (k 2)) (d (n "borsh") (r "^0.10.2") (f (quote ("rc"))) (d #t) (k 0)) (d (n "clap") (r "^4.2.0") (f (quote ("derive" "env" "string"))) (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "finite-wasm") (r "^0.4.0") (f (quote ("instrument"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "near-cache") (r "^0.17.0") (d #t) (k 0)) (d (n "near-primitives") (r "^0.17.0") (d #t) (k 0)) (d (n "near-primitives-core") (r "^0.17.0") (d #t) (k 2)) (d (n "near-stable-hasher") (r "^0.17.0") (d #t) (k 0)) (d (n "near-vm-compiler") (r "^0.17.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-compiler-singlepass") (r "^0.17.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-engine") (r "^0.17.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-engine-universal") (r "^0.17.0") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-errors") (r "^0.17.0") (d #t) (k 0)) (d (n "near-vm-logic") (r "^0.17.0") (d #t) (k 0)) (d (n "near-vm-types") (r "^0.17.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-vm") (r "^0.17.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.42") (k 0)) (d (n "parity-wasm_41") (r "^0.41") (d #t) (k 0) (p "parity-wasm")) (d (n "prefix-sum-vec") (r "^0.1.2") (d #t) (k 0)) (d (n "pwasm-utils_12") (r "^0.12") (d #t) (k 0) (p "pwasm-utils")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "wasm-smith") (r "^0.10") (d #t) (k 2)) (d (n "wasmer-compiler") (r "=2.4.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-near")) (d (n "wasmer-compiler-singlepass") (r "=2.4.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-singlepass-near")) (d (n "wasmer-engine") (r "=2.4.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-near")) (d (n "wasmer-engine-universal") (r "=2.4.0") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-universal-near")) (d (n "wasmer-runtime") (r "^0.18.0") (f (quote ("default-backend-singlepass"))) (o #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-near")) (d (n "wasmer-runtime-core") (r "^0.18.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-core-near")) (d (n "wasmer-types") (r "=2.4.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-types-near")) (d (n "wasmer-vm") (r "=2.4.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-vm-near")) (d (n "wasmparser") (r "^0.78") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2") (d #t) (k 2)) (d (n "wasmtime") (r "^4.0.0") (f (quote ("cranelift"))) (o #t) (k 0)) (d (n "wat") (r "^1.0.40") (d #t) (k 2)))) (h "028rn7mjmw8l2rllz0zky9ihrdhf0faxwz3c06lz185glly0x4ia") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmer2_vm" "wasmer-compiler" "wasmer-compiler-singlepass" "wasmer-engine" "wasmer-engine-universal" "wasmer-types" "wasmer-vm") ("wasmer0_vm" "wasmer-runtime" "wasmer-runtime-core") ("sandbox" "near-vm-logic/sandbox") ("protocol_feature_fix_contract_loading_cost" "near-primitives/protocol_feature_fix_contract_loading_cost" "near-vm-logic/protocol_feature_fix_contract_loading_cost") ("no_cpu_compatibility_checks") ("no_cache") ("nightly" "near-primitives/nightly" "protocol_feature_fix_contract_loading_cost") ("near_vm" "near-vm-compiler" "near-vm-compiler-singlepass" "near-vm-engine" "near-vm-engine-universal" "near-vm-types" "near-vm-vm") ("io_trace" "near-vm-logic/io_trace") ("force_wasmtime" "wasmtime_vm") ("force_wasmer2" "wasmer2_vm") ("force_wasmer0" "wasmer0_vm") ("force_near_vm" "near_vm") ("default" "wasmer0_vm" "wasmtime_vm" "wasmer2_vm" "near_vm")))) (r "1.69.0")))

(define-public crate-near-vm-runner-0.19.0-pre.1 (c (n "near-vm-runner") (v "0.19.0-pre.1") (d (list (d (n "anyhow") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bn") (r "^0.5.11") (k 0) (p "zeropool-bn")) (d (n "bolero") (r "^0.10.0") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "borsh") (r "^1.0.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (f (quote ("hazmat" "rand_core"))) (k 0)) (d (n "enum-map") (r "^2.1.0") (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "finite-wasm") (r "^0.5.0") (f (quote ("instrument"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "near-crypto") (r "^0.19.0-pre.1") (d #t) (k 0)) (d (n "near-parameters") (r "^0.19.0-pre.1") (d #t) (k 0)) (d (n "near-primitives-core") (r "^0.19.0-pre.1") (d #t) (k 0)) (d (n "near-vm-compiler") (r "^0.19.0-pre.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-compiler-singlepass") (r "^0.19.0-pre.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-engine") (r "^0.19.0-pre.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-types") (r "^0.19.0-pre.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-vm") (r "^0.19.0-pre.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "num-rational") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.42") (k 0)) (d (n "parity-wasm_41") (r "^0.41") (d #t) (k 0) (p "parity-wasm")) (d (n "prefix-sum-vec") (r "^0.1.2") (d #t) (k 0)) (d (n "pwasm-utils_12") (r "^0.12") (d #t) (k 0) (p "pwasm-utils")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_with") (r "^3.0") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stdx") (r "^0.19.0-pre.1") (d #t) (k 0) (p "near-stdx")) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.10") (d #t) (k 2)) (d (n "wasmer-compiler") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-near")) (d (n "wasmer-compiler-singlepass") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-singlepass-near")) (d (n "wasmer-engine") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-near")) (d (n "wasmer-engine-universal") (r "=2.4.1") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-universal-near")) (d (n "wasmer-runtime") (r "^0.18.0") (f (quote ("default-backend-singlepass"))) (o #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-near")) (d (n "wasmer-runtime-core") (r "^0.18.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-core-near")) (d (n "wasmer-types") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-types-near")) (d (n "wasmer-vm") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-vm-near")) (d (n "wasmparser") (r "^0.78") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2") (d #t) (k 2)) (d (n "wasmtime") (r "^14.0.4") (f (quote ("cranelift"))) (o #t) (k 0)) (d (n "wat") (r "^1.0.40") (d #t) (k 2)))) (h "1nai3lfd4rgrnqvh9gvqx31ww6phfmm65pmsky9ahyfrly8cwdfb") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmer2_vm" "wasmer-compiler" "wasmer-compiler-singlepass" "wasmer-engine" "wasmer-engine-universal" "wasmer-types" "wasmer-vm") ("wasmer0_vm" "wasmer-runtime" "wasmer-runtime-core") ("sandbox") ("protocol_feature_fix_contract_loading_cost" "near-primitives-core/protocol_feature_fix_contract_loading_cost") ("no_cpu_compatibility_checks") ("no_cache") ("nightly_protocol" "near-parameters/nightly_protocol" "near-primitives-core/nightly_protocol") ("nightly" "nightly_protocol" "protocol_feature_fix_contract_loading_cost" "near-parameters/nightly" "near-primitives-core/nightly") ("near_vm" "near-vm-compiler" "near-vm-compiler-singlepass" "near-vm-engine" "near-vm-types" "near-vm-vm") ("io_trace") ("default" "wasmer0_vm" "wasmtime_vm" "wasmer2_vm" "near_vm") ("costs_counting"))))))

(define-public crate-near-vm-runner-0.19.0-pre.2 (c (n "near-vm-runner") (v "0.19.0-pre.2") (d (list (d (n "anyhow") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bn") (r "^0.5.11") (k 0) (p "zeropool-bn")) (d (n "bolero") (r "^0.10.0") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "borsh") (r "^1.0.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (f (quote ("hazmat" "rand_core"))) (k 0)) (d (n "enum-map") (r "^2.1.0") (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "finite-wasm") (r "^0.5.0") (f (quote ("instrument"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "near-crypto") (r "^0.19.0-pre.2") (d #t) (k 0)) (d (n "near-parameters") (r "^0.19.0-pre.2") (d #t) (k 0)) (d (n "near-primitives-core") (r "^0.19.0-pre.2") (d #t) (k 0)) (d (n "near-vm-compiler") (r "^0.19.0-pre.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-compiler-singlepass") (r "^0.19.0-pre.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-engine") (r "^0.19.0-pre.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-types") (r "^0.19.0-pre.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-vm") (r "^0.19.0-pre.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "num-rational") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.42") (k 0)) (d (n "parity-wasm_41") (r "^0.41") (d #t) (k 0) (p "parity-wasm")) (d (n "prefix-sum-vec") (r "^0.1.2") (d #t) (k 0)) (d (n "pwasm-utils_12") (r "^0.12") (d #t) (k 0) (p "pwasm-utils")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_with") (r "^3.0") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stdx") (r "^0.19.0-pre.2") (d #t) (k 0) (p "near-stdx")) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.10") (d #t) (k 2)) (d (n "wasmer-compiler") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-near")) (d (n "wasmer-compiler-singlepass") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-singlepass-near")) (d (n "wasmer-engine") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-near")) (d (n "wasmer-engine-universal") (r "=2.4.1") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-universal-near")) (d (n "wasmer-runtime") (r "^0.18.0") (f (quote ("default-backend-singlepass"))) (o #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-near")) (d (n "wasmer-runtime-core") (r "^0.18.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-core-near")) (d (n "wasmer-types") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-types-near")) (d (n "wasmer-vm") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-vm-near")) (d (n "wasmparser") (r "^0.78") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2") (d #t) (k 2)) (d (n "wasmtime") (r "^14.0.4") (f (quote ("cranelift"))) (o #t) (k 0)) (d (n "wat") (r "^1.0.40") (d #t) (k 2)))) (h "0drdslg5rkkvrh3kvn2flm1ifwwjjjs69z3crd2v4yvgyg2l8xh5") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmer2_vm" "wasmer-compiler" "wasmer-compiler-singlepass" "wasmer-engine" "wasmer-engine-universal" "wasmer-types" "wasmer-vm") ("wasmer0_vm" "wasmer-runtime" "wasmer-runtime-core") ("sandbox") ("protocol_feature_fix_contract_loading_cost" "near-primitives-core/protocol_feature_fix_contract_loading_cost") ("no_cpu_compatibility_checks") ("no_cache") ("nightly_protocol" "near-parameters/nightly_protocol" "near-primitives-core/nightly_protocol") ("nightly" "nightly_protocol" "protocol_feature_fix_contract_loading_cost" "near-parameters/nightly" "near-primitives-core/nightly") ("near_vm" "near-vm-compiler" "near-vm-compiler-singlepass" "near-vm-engine" "near-vm-types" "near-vm-vm") ("io_trace") ("default" "wasmer0_vm" "wasmtime_vm" "wasmer2_vm" "near_vm") ("costs_counting"))))))

(define-public crate-near-vm-runner-0.19.0 (c (n "near-vm-runner") (v "0.19.0") (d (list (d (n "anyhow") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bn") (r "^0.5.11") (k 0) (p "zeropool-bn")) (d (n "bolero") (r "^0.10.0") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "borsh") (r "^1.0.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (f (quote ("hazmat" "rand_core"))) (k 0)) (d (n "enum-map") (r "^2.1.0") (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "finite-wasm") (r "^0.5.0") (f (quote ("instrument"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "near-crypto") (r "^0.19.0") (d #t) (k 0)) (d (n "near-parameters") (r "^0.19.0") (d #t) (k 0)) (d (n "near-primitives-core") (r "^0.19.0") (d #t) (k 0)) (d (n "near-vm-compiler") (r "^0.19.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-compiler-singlepass") (r "^0.19.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-engine") (r "^0.19.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-types") (r "^0.19.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-vm") (r "^0.19.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "num-rational") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.42") (k 0)) (d (n "parity-wasm_41") (r "^0.41") (d #t) (k 0) (p "parity-wasm")) (d (n "prefix-sum-vec") (r "^0.1.2") (d #t) (k 0)) (d (n "pwasm-utils_12") (r "^0.12") (d #t) (k 0) (p "pwasm-utils")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_with") (r "^3.0") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stdx") (r "^0.19.0") (d #t) (k 0) (p "near-stdx")) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.10") (d #t) (k 2)) (d (n "wasmer-compiler") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-near")) (d (n "wasmer-compiler-singlepass") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-singlepass-near")) (d (n "wasmer-engine") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-near")) (d (n "wasmer-engine-universal") (r "=2.4.1") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-universal-near")) (d (n "wasmer-runtime") (r "^0.18.0") (f (quote ("default-backend-singlepass"))) (o #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-near")) (d (n "wasmer-runtime-core") (r "^0.18.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-core-near")) (d (n "wasmer-types") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-types-near")) (d (n "wasmer-vm") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-vm-near")) (d (n "wasmparser") (r "^0.78") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2") (d #t) (k 2)) (d (n "wasmtime") (r "^14.0.4") (f (quote ("cranelift"))) (o #t) (k 0)) (d (n "wat") (r "^1.0.40") (d #t) (k 2)))) (h "14v72nd6k7wyj15hgqgl93iz8grnj3gbm21akr715rdcqj455zr1") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmer2_vm" "wasmer-compiler" "wasmer-compiler-singlepass" "wasmer-engine" "wasmer-engine-universal" "wasmer-types" "wasmer-vm") ("wasmer0_vm" "wasmer-runtime" "wasmer-runtime-core") ("sandbox") ("protocol_feature_fix_contract_loading_cost" "near-primitives-core/protocol_feature_fix_contract_loading_cost") ("no_cpu_compatibility_checks") ("no_cache") ("nightly_protocol" "near-parameters/nightly_protocol" "near-primitives-core/nightly_protocol") ("nightly" "nightly_protocol" "protocol_feature_fix_contract_loading_cost" "near-parameters/nightly" "near-primitives-core/nightly") ("near_vm" "near-vm-compiler" "near-vm-compiler-singlepass" "near-vm-engine" "near-vm-types" "near-vm-vm") ("io_trace") ("default" "wasmer0_vm" "wasmtime_vm" "wasmer2_vm" "near_vm") ("costs_counting"))))))

(define-public crate-near-vm-runner-0.20.0 (c (n "near-vm-runner") (v "0.20.0") (d (list (d (n "anyhow") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bn") (r "^0.5.11") (k 0) (p "zeropool-bn")) (d (n "bolero") (r "^0.10.0") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "borsh") (r "^1.0.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (f (quote ("hazmat" "rand_core"))) (k 0)) (d (n "enum-map") (r "^2.1.0") (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "finite-wasm") (r "^0.5.0") (f (quote ("instrument"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "near-crypto") (r "^0.20.0") (d #t) (k 0)) (d (n "near-parameters") (r "^0.20.0") (d #t) (k 0)) (d (n "near-primitives-core") (r "^0.20.0") (d #t) (k 0)) (d (n "near-vm-compiler") (r "^0.20.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-compiler-singlepass") (r "^0.20.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-engine") (r "^0.20.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-types") (r "^0.20.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-vm") (r "^0.20.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "num-rational") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.42") (o #t) (k 0)) (d (n "parity-wasm_41") (r "^0.41") (o #t) (d #t) (k 0) (p "parity-wasm")) (d (n "prefix-sum-vec") (r "^0.1.2") (d #t) (k 0)) (d (n "pwasm-utils_12") (r "^0.12") (o #t) (d #t) (k 0) (p "pwasm-utils")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_with") (r "^3.0") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stdx") (r "^0.20.0") (d #t) (k 0) (p "near-stdx")) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "wasm-smith") (r "^0.10") (d #t) (k 2)) (d (n "wasmer-compiler") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-near")) (d (n "wasmer-compiler-singlepass") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-singlepass-near")) (d (n "wasmer-engine") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-near")) (d (n "wasmer-engine-universal") (r "=2.4.1") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-universal-near")) (d (n "wasmer-runtime") (r "^0.18.0") (f (quote ("default-backend-singlepass"))) (o #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-near")) (d (n "wasmer-runtime-core") (r "^0.18.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-core-near")) (d (n "wasmer-types") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-types-near")) (d (n "wasmer-vm") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-vm-near")) (d (n "wasmparser") (r "^0.78") (o #t) (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2") (d #t) (k 2)) (d (n "wasmtime") (r "^14.0.4") (f (quote ("cranelift"))) (o #t) (k 0)) (d (n "wat") (r "^1.0.40") (d #t) (k 2)))) (h "1pqcs0x8zg0pg8hic2ad5kd8f3c0l6nbb402g5kg09fbbk93xw96") (f (quote (("wasmtime_vm" "wasmtime" "anyhow" "prepare") ("wasmer2_vm" "wasmer-compiler" "wasmer-compiler-singlepass" "wasmer-engine" "wasmer-engine-universal" "wasmer-types" "wasmer-vm" "prepare") ("wasmer0_vm" "wasmer-runtime" "wasmer-runtime-core" "prepare") ("sandbox") ("protocol_feature_fix_contract_loading_cost" "near-primitives-core/protocol_feature_fix_contract_loading_cost") ("prepare" "finite-wasm" "wasm-encoder" "wasmparser" "parity-wasm" "parity-wasm_41" "pwasm-utils_12") ("no_cpu_compatibility_checks") ("no_cache") ("nightly_protocol" "near-parameters/nightly_protocol" "near-primitives-core/nightly_protocol") ("nightly" "nightly_protocol" "protocol_feature_fix_contract_loading_cost" "near-parameters/nightly" "near-primitives-core/nightly") ("near_vm" "near-vm-compiler" "near-vm-compiler-singlepass" "near-vm-engine" "near-vm-types" "near-vm-vm" "prepare") ("io_trace") ("costs_counting"))))))

(define-public crate-near-vm-runner-0.20.1 (c (n "near-vm-runner") (v "0.20.1") (d (list (d (n "anyhow") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bn") (r "^0.5.11") (k 0) (p "zeropool-bn")) (d (n "bolero") (r "^0.10.0") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "borsh") (r "^1.0.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (f (quote ("hazmat" "rand_core"))) (k 0)) (d (n "enum-map") (r "^2.1.0") (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "finite-wasm") (r "^0.5.0") (f (quote ("instrument"))) (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "near-crypto") (r "^0.20.1") (d #t) (k 0)) (d (n "near-parameters") (r "^0.20.1") (d #t) (k 0)) (d (n "near-primitives-core") (r "^0.20.1") (d #t) (k 0)) (d (n "near-vm-compiler") (r "^0.20.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-compiler-singlepass") (r "^0.20.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-engine") (r "^0.20.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-types") (r "^0.20.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-vm") (r "^0.20.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "num-rational") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.42") (o #t) (k 0)) (d (n "parity-wasm_41") (r "^0.41") (o #t) (d #t) (k 0) (p "parity-wasm")) (d (n "prefix-sum-vec") (r "^0.1.2") (d #t) (k 0)) (d (n "pwasm-utils_12") (r "^0.12") (o #t) (d #t) (k 0) (p "pwasm-utils")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_with") (r "^3.0") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stdx") (r "^0.20.1") (d #t) (k 0) (p "near-stdx")) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "wasm-smith") (r "^0.10") (d #t) (k 2)) (d (n "wasmer-compiler") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-near")) (d (n "wasmer-compiler-singlepass") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-singlepass-near")) (d (n "wasmer-engine") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-near")) (d (n "wasmer-engine-universal") (r "=2.4.1") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-universal-near")) (d (n "wasmer-runtime") (r "^0.18.0") (f (quote ("default-backend-singlepass"))) (o #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-near")) (d (n "wasmer-runtime-core") (r "^0.18.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-core-near")) (d (n "wasmer-types") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-types-near")) (d (n "wasmer-vm") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-vm-near")) (d (n "wasmparser") (r "^0.78") (o #t) (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2") (d #t) (k 2)) (d (n "wasmtime") (r "^14.0.4") (f (quote ("cranelift"))) (o #t) (k 0)) (d (n "wat") (r "^1.0.40") (d #t) (k 2)))) (h "198d5vzd0ljzy0xki4a98a6v75vi6w992snkkgshhj4mn6yq0v65") (f (quote (("wasmtime_vm" "wasmtime" "anyhow" "prepare") ("wasmer2_vm" "wasmer-compiler" "wasmer-compiler-singlepass" "wasmer-engine" "wasmer-engine-universal" "wasmer-types" "wasmer-vm" "prepare") ("wasmer0_vm" "wasmer-runtime" "wasmer-runtime-core" "prepare") ("sandbox") ("protocol_feature_fix_contract_loading_cost" "near-primitives-core/protocol_feature_fix_contract_loading_cost") ("prepare" "finite-wasm" "wasm-encoder" "wasmparser" "parity-wasm" "parity-wasm_41" "pwasm-utils_12") ("no_cpu_compatibility_checks") ("no_cache") ("nightly_protocol" "near-parameters/nightly_protocol" "near-primitives-core/nightly_protocol") ("nightly" "nightly_protocol" "protocol_feature_fix_contract_loading_cost" "near-parameters/nightly" "near-primitives-core/nightly") ("near_vm" "near-vm-compiler" "near-vm-compiler-singlepass" "near-vm-engine" "near-vm-types" "near-vm-vm" "prepare") ("io_trace") ("costs_counting"))))))

(define-public crate-near-vm-runner-0.21.0 (c (n "near-vm-runner") (v "0.21.0") (d (list (d (n "anyhow") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bn") (r "^0.5.11") (k 0) (p "zeropool-bn")) (d (n "bolero") (r "^0.10.0") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "borsh") (r "^1.0.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (f (quote ("hazmat" "rand_core"))) (k 0)) (d (n "enum-map") (r "^2.1.0") (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "finite-wasm") (r "^0.5.0") (f (quote ("instrument"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "near-crypto") (r "^0.21.0") (d #t) (k 0)) (d (n "near-parameters") (r "^0.21.0") (d #t) (k 0)) (d (n "near-primitives-core") (r "^0.21.0") (d #t) (k 0)) (d (n "near-vm-compiler") (r "^0.21.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-compiler-singlepass") (r "^0.21.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-engine") (r "^0.21.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-types") (r "^0.21.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-vm") (r "^0.21.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "num-rational") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.42") (k 0)) (d (n "parity-wasm_41") (r "^0.41") (d #t) (k 0) (p "parity-wasm")) (d (n "prefix-sum-vec") (r "^0.1.2") (d #t) (k 0)) (d (n "pwasm-utils_12") (r "^0.12") (d #t) (k 0) (p "pwasm-utils")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_with") (r "^3.0") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stdx") (r "^0.21.0") (d #t) (k 0) (p "near-stdx")) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.10") (d #t) (k 2)) (d (n "wasmer-compiler") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-near")) (d (n "wasmer-compiler-singlepass") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-singlepass-near")) (d (n "wasmer-engine") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-near")) (d (n "wasmer-engine-universal") (r "=2.4.1") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-universal-near")) (d (n "wasmer-runtime") (r "^0.18.0") (f (quote ("default-backend-singlepass"))) (o #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-near")) (d (n "wasmer-runtime-core") (r "^0.18.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-core-near")) (d (n "wasmer-types") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-types-near")) (d (n "wasmer-vm") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-vm-near")) (d (n "wasmparser") (r "^0.78") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2") (d #t) (k 2)) (d (n "wasmtime") (r "^14.0.4") (f (quote ("cranelift"))) (o #t) (k 0)) (d (n "wat") (r "^1.0.40") (d #t) (k 2)))) (h "0k06vz1znd09m0vwnvgv9d9r8m3kvkblmwfxv9f7q1xh2drmbv82") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmer2_vm" "wasmer-compiler" "wasmer-compiler-singlepass" "wasmer-engine" "wasmer-engine-universal" "wasmer-types" "wasmer-vm") ("wasmer0_vm" "wasmer-runtime" "wasmer-runtime-core") ("sandbox") ("protocol_feature_fix_contract_loading_cost" "near-primitives-core/protocol_feature_fix_contract_loading_cost") ("no_cpu_compatibility_checks") ("no_cache") ("nightly_protocol" "near-parameters/nightly_protocol" "near-primitives-core/nightly_protocol") ("nightly" "nightly_protocol" "protocol_feature_fix_contract_loading_cost" "near-parameters/nightly" "near-primitives-core/nightly") ("near_vm" "near-vm-compiler" "near-vm-compiler-singlepass" "near-vm-engine" "near-vm-types" "near-vm-vm") ("io_trace") ("default" "wasmer0_vm" "wasmtime_vm" "wasmer2_vm" "near_vm") ("costs_counting"))))))

(define-public crate-near-vm-runner-0.21.1 (c (n "near-vm-runner") (v "0.21.1") (d (list (d (n "anyhow") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bn") (r "^0.5.11") (k 0) (p "zeropool-bn")) (d (n "bolero") (r "^0.10.0") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "borsh") (r "^1.0.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (f (quote ("hazmat" "rand_core"))) (k 0)) (d (n "enum-map") (r "^2.1.0") (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "finite-wasm") (r "^0.5.0") (f (quote ("instrument"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "near-crypto") (r "^0.21.1") (d #t) (k 0)) (d (n "near-parameters") (r "^0.21.1") (d #t) (k 0)) (d (n "near-primitives-core") (r "^0.21.1") (d #t) (k 0)) (d (n "near-vm-compiler") (r "^0.21.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-compiler-singlepass") (r "^0.21.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-engine") (r "^0.21.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-types") (r "^0.21.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-vm") (r "^0.21.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "num-rational") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.42") (k 0)) (d (n "parity-wasm_41") (r "^0.41") (d #t) (k 0) (p "parity-wasm")) (d (n "prefix-sum-vec") (r "^0.1.2") (d #t) (k 0)) (d (n "pwasm-utils_12") (r "^0.12") (d #t) (k 0) (p "pwasm-utils")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_with") (r "^3.0") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stdx") (r "^0.21.1") (d #t) (k 0) (p "near-stdx")) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.10") (d #t) (k 2)) (d (n "wasmer-compiler") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-near")) (d (n "wasmer-compiler-singlepass") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-singlepass-near")) (d (n "wasmer-engine") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-near")) (d (n "wasmer-engine-universal") (r "=2.4.1") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-universal-near")) (d (n "wasmer-runtime") (r "^0.18.0") (f (quote ("default-backend-singlepass"))) (o #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-near")) (d (n "wasmer-runtime-core") (r "^0.18.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-core-near")) (d (n "wasmer-types") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-types-near")) (d (n "wasmer-vm") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-vm-near")) (d (n "wasmparser") (r "^0.78") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2") (d #t) (k 2)) (d (n "wasmtime") (r "^14.0.4") (f (quote ("cranelift"))) (o #t) (k 0)) (d (n "wat") (r "^1.0.40") (d #t) (k 2)))) (h "10xpvkzn4da3qviqwhxwqngh3hd8mmn0bvpmci1m2hmv6cfk7p51") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmer2_vm" "wasmer-compiler" "wasmer-compiler-singlepass" "wasmer-engine" "wasmer-engine-universal" "wasmer-types" "wasmer-vm") ("wasmer0_vm" "wasmer-runtime" "wasmer-runtime-core") ("sandbox") ("protocol_feature_fix_contract_loading_cost" "near-primitives-core/protocol_feature_fix_contract_loading_cost") ("no_cpu_compatibility_checks") ("no_cache") ("nightly_protocol" "near-parameters/nightly_protocol" "near-primitives-core/nightly_protocol") ("nightly" "nightly_protocol" "protocol_feature_fix_contract_loading_cost" "near-parameters/nightly" "near-primitives-core/nightly") ("near_vm" "near-vm-compiler" "near-vm-compiler-singlepass" "near-vm-engine" "near-vm-types" "near-vm-vm") ("io_trace") ("default" "wasmer0_vm" "wasmtime_vm" "wasmer2_vm" "near_vm") ("costs_counting"))))))

(define-public crate-near-vm-runner-0.21.2 (c (n "near-vm-runner") (v "0.21.2") (d (list (d (n "anyhow") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bn") (r "^0.5.11") (k 0) (p "zeropool-bn")) (d (n "bolero") (r "^0.10.0") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "borsh") (r "^1.0.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (f (quote ("hazmat" "rand_core"))) (k 0)) (d (n "enum-map") (r "^2.1.0") (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "finite-wasm") (r "^0.5.0") (f (quote ("instrument"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "near-cache") (r "^0.21.2") (d #t) (k 0)) (d (n "near-crypto") (r "^0.21.2") (d #t) (k 0)) (d (n "near-parameters") (r "^0.21.2") (d #t) (k 0)) (d (n "near-primitives-core") (r "^0.21.2") (d #t) (k 0)) (d (n "near-vm-compiler") (r "^0.21.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-compiler-singlepass") (r "^0.21.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-engine") (r "^0.21.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-types") (r "^0.21.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-vm") (r "^0.21.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "num-rational") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.42") (k 0)) (d (n "parity-wasm_41") (r "^0.41") (d #t) (k 0) (p "parity-wasm")) (d (n "prefix-sum-vec") (r "^0.1.2") (d #t) (k 0)) (d (n "pwasm-utils_12") (r "^0.12") (d #t) (k 0) (p "pwasm-utils")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_with") (r "^3.0") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stdx") (r "^0.21.2") (d #t) (k 0) (p "near-stdx")) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.10") (d #t) (k 2)) (d (n "wasmer-compiler") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-near")) (d (n "wasmer-compiler-singlepass") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-singlepass-near")) (d (n "wasmer-engine") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-near")) (d (n "wasmer-engine-universal") (r "=2.4.1") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-universal-near")) (d (n "wasmer-runtime") (r "^0.18.0") (f (quote ("default-backend-singlepass"))) (o #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-near")) (d (n "wasmer-runtime-core") (r "^0.18.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-core-near")) (d (n "wasmer-types") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-types-near")) (d (n "wasmer-vm") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-vm-near")) (d (n "wasmparser") (r "^0.78") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2") (d #t) (k 2)) (d (n "wasmtime") (r "^14.0.4") (f (quote ("cranelift"))) (o #t) (k 0)) (d (n "wat") (r "^1.0.40") (d #t) (k 2)))) (h "0q00z9k3n4c24n5z1ciq8969fyxzqwj9mnl1xp363qanr809ami0") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmer2_vm" "wasmer-compiler" "wasmer-compiler-singlepass" "wasmer-engine" "wasmer-engine-universal" "wasmer-types" "wasmer-vm") ("wasmer0_vm" "wasmer-runtime" "wasmer-runtime-core") ("sandbox") ("protocol_feature_fix_contract_loading_cost" "near-primitives-core/protocol_feature_fix_contract_loading_cost") ("no_cpu_compatibility_checks") ("no_cache") ("nightly_protocol" "near-parameters/nightly_protocol" "near-primitives-core/nightly_protocol") ("nightly" "nightly_protocol" "protocol_feature_fix_contract_loading_cost" "near-parameters/nightly" "near-primitives-core/nightly") ("near_vm" "near-vm-compiler" "near-vm-compiler-singlepass" "near-vm-engine" "near-vm-types" "near-vm-vm") ("io_trace") ("default" "wasmer0_vm" "wasmtime_vm" "wasmer2_vm" "near_vm") ("costs_counting"))))))

(define-public crate-near-vm-runner-0.22.0 (c (n "near-vm-runner") (v "0.22.0") (d (list (d (n "anyhow") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bn") (r "^0.5.11") (k 0) (p "zeropool-bn")) (d (n "bolero") (r "^0.10.0") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "borsh") (r "^1.0.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "cov-mark") (r "^2.0.0-pre.1") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.1.0") (f (quote ("hazmat" "rand_core"))) (k 0)) (d (n "enum-map") (r "^2.1.0") (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "finite-wasm") (r "^0.5.0") (f (quote ("instrument"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "lru") (r "^0.12.3") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "near-crypto") (r "^0.22.0") (d #t) (k 0)) (d (n "near-parameters") (r "^0.22.0") (d #t) (k 0)) (d (n "near-primitives-core") (r "^0.22.0") (d #t) (k 0)) (d (n "near-vm-compiler") (r "^0.22.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-compiler-singlepass") (r "^0.22.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-engine") (r "^0.22.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-types") (r "^0.22.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "near-vm-vm") (r "^0.22.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "num-rational") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.42") (k 0)) (d (n "parity-wasm_41") (r "^0.41") (d #t) (k 0) (p "parity-wasm")) (d (n "prefix-sum-vec") (r "^0.1.2") (d #t) (k 0)) (d (n "pwasm-utils_12") (r "^0.12") (d #t) (k 0) (p "pwasm-utils")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "rustix") (r "^0.38") (f (quote ("fs"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_with") (r "^3.0") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stdx") (r "^0.22.0") (d #t) (k 0) (p "near-stdx")) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.10") (d #t) (k 2)) (d (n "wasmer-compiler") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-near")) (d (n "wasmer-compiler-singlepass") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-singlepass-near")) (d (n "wasmer-engine") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-near")) (d (n "wasmer-engine-universal") (r "=2.4.1") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-universal-near")) (d (n "wasmer-runtime") (r "^0.18.0") (f (quote ("default-backend-singlepass"))) (o #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-near")) (d (n "wasmer-runtime-core") (r "^0.18.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-core-near")) (d (n "wasmer-types") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-types-near")) (d (n "wasmer-vm") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-vm-near")) (d (n "wasmparser") (r "^0.78") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2") (d #t) (k 2)) (d (n "wasmtime") (r "^14.0.4") (f (quote ("cranelift"))) (o #t) (k 0)) (d (n "wat") (r "^1.0.40") (d #t) (k 2)))) (h "11y68bcpqwmz08a73r5f2nn2f1v31fpwn074vz60v0m5x0d4bb2y") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmer2_vm" "wasmer-compiler" "wasmer-compiler-singlepass" "wasmer-engine" "wasmer-engine-universal" "wasmer-types" "wasmer-vm") ("wasmer0_vm" "wasmer-runtime" "wasmer-runtime-core") ("sandbox") ("protocol_feature_fix_contract_loading_cost" "near-primitives-core/protocol_feature_fix_contract_loading_cost") ("no_cpu_compatibility_checks") ("no_cache") ("nightly_protocol" "near-parameters/nightly_protocol" "near-primitives-core/nightly_protocol") ("nightly" "nightly_protocol" "protocol_feature_fix_contract_loading_cost" "near-parameters/nightly" "near-primitives-core/nightly") ("near_vm" "near-vm-compiler" "near-vm-compiler-singlepass" "near-vm-engine" "near-vm-types" "near-vm-vm") ("io_trace") ("default" "wasmer0_vm" "wasmtime_vm" "wasmer2_vm" "near_vm") ("costs_counting"))))))

