(define-module (crates-io ne ar near-store) #:use-module (crates-io))

(define-public crate-near-store-0.1.0-pre.1 (c (n "near-store") (v "0.1.0-pre.1") (d (list (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "borsh") (r "^0.8.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "cached") (r "^0.23") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "elastic-array") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "near-crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "near-primitives") (r "^0.1.0-pre.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.11") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rocksdb") (r "^0.15.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.20") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1m1y8ix0nvaxyh4i436dj1gld5g2h3ync0zal4f5mjm4v78q1s07") (f (quote (("protocol_feature_rectify_inflation") ("protocol_feature_block_header_v3") ("no_cache") ("nightly_protocol_features" "nightly_protocol" "protocol_feature_rectify_inflation" "protocol_feature_block_header_v3") ("nightly_protocol") ("default") ("adversarial"))))))

