(define-module (crates-io ub lo ublox-sockets) #:use-module (crates-io))

(define-public crate-ublox-sockets-0.1.0 (c (n "ublox-sockets") (v "0.1.0") (d (list (d (n "atat") (r "^0.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "defmt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.4") (d #t) (k 2)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "fugit") (r "^0.3") (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "hash32-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "no-std-net") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)))) (h "1ryxcp9133fx8walzdqnz3frndb7ixmwvsfykgpgsi2sl82xmza6") (f (quote (("socket-udp") ("socket-tcp") ("defmt-warn" "defmt") ("defmt-trace" "defmt") ("defmt-info" "defmt") ("defmt-error" "defmt") ("defmt-default" "defmt") ("defmt-debug" "defmt") ("default" "socket-udp" "socket-tcp"))))))

(define-public crate-ublox-sockets-0.2.0 (c (n "ublox-sockets") (v "0.2.0") (d (list (d (n "atat") (r "^0.15.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.6") (d #t) (k 2)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "fugit") (r "^0.3") (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "hash32-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "no-std-net") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)))) (h "0ysx21li3jixxqg9vkm90hvqfka9pxj6cdj6i2ny63y4p0pir4fj") (f (quote (("socket-udp") ("socket-tcp") ("default" "socket-udp" "socket-tcp"))))))

(define-public crate-ublox-sockets-0.3.0 (c (n "ublox-sockets") (v "0.3.0") (d (list (d (n "atat") (r "^0.16.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.6") (d #t) (k 2)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "fugit") (r "^0.3") (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "hash32-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "no-std-net") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)))) (h "18dr3ccc7qk5vpn8abfkbn8i47kvk5ymcvpp18w6vi59a6bk4d2k") (f (quote (("socket-udp") ("socket-tcp") ("default" "socket-udp" "socket-tcp"))))))

(define-public crate-ublox-sockets-0.4.0 (c (n "ublox-sockets") (v "0.4.0") (d (list (d (n "atat") (r "^0.17") (f (quote ("derive"))) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.8") (d #t) (k 2)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "fugit") (r "^0.3") (d #t) (k 0)) (d (n "fugit-timer") (r "^0.1.3") (d #t) (k 2)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "hash32-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "no-std-net") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)))) (h "173cggj70jc3nx8dm4dsmd973qx96y9hvj6rzhvkj4igyllly72g") (f (quote (("socket-udp") ("socket-tcp") ("default" "socket-udp" "socket-tcp"))))))

(define-public crate-ublox-sockets-0.4.1 (c (n "ublox-sockets") (v "0.4.1") (d (list (d (n "atat") (r "^0.17") (f (quote ("derive"))) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "fugit") (r "^0.3") (d #t) (k 0)) (d (n "fugit-timer") (r "^0.1.3") (d #t) (k 2)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "hash32-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "no-std-net") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)))) (h "03sw50q854dk1rq7fkjxzbyzfvh1nf2v3qrzlh683lh201pdqchf") (f (quote (("socket-udp") ("socket-tcp") ("default" "socket-udp" "socket-tcp"))))))

(define-public crate-ublox-sockets-0.5.0 (c (n "ublox-sockets") (v "0.5.0") (d (list (d (n "atat") (r "^0.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "fugit") (r "^0.3") (d #t) (k 0)) (d (n "fugit-timer") (r "^0.1.3") (d #t) (k 2)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "hash32-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "no-std-net") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)))) (h "0xl6g0igd5pr38lacsvw8wfdaijyhls3ip2kz52g81rp77i58yyp") (f (quote (("socket-udp") ("socket-tcp") ("default" "socket-udp" "socket-tcp"))))))

