(define-module (crates-io kv cl kvcli) #:use-module (crates-io))

(define-public crate-kvcli-0.0.2 (c (n "kvcli") (v "0.0.2") (d (list (d (n "anyhow") (r "^1.0.63") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.8") (d #t) (k 2)) (d (n "assert_fs") (r "^1.1.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock"))) (k 0)) (d (n "clap") (r "~4.4.2") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "confy") (r "^0.6.0") (d #t) (k 0)) (d (n "console") (r "^0.15.5") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.2") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (d #t) (k 0)) (d (n "human-panic") (r "^1.2.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.8") (d #t) (k 0)) (d (n "jsonxf") (r "^1.1.1") (d #t) (k 0)) (d (n "kv-rs") (r "^0.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logos") (r "^0.13") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "predicates") (r "^2.1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "rustyline") (r "^12.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.126") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.17") (d #t) (k 0)) (d (n "sqlformat") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3.13") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "tokio") (r "~1.35.1") (f (quote ("macros" "rt" "rt-multi-thread" "net" "io-util" "time" "sync"))) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)))) (h "1xx31dp3bm9myygx398jnvh1bvypkq6g9ykmdwxrrk07f7fpz6j5")))

(define-public crate-kvcli-0.0.3 (c (n "kvcli") (v "0.0.3") (d (list (d (n "anyhow") (r "^1.0.63") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.8") (d #t) (k 2)) (d (n "assert_fs") (r "^1.1.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock"))) (k 0)) (d (n "clap") (r "~4.4.2") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "confy") (r "^0.6.0") (d #t) (k 0)) (d (n "console") (r "^0.15.5") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.2") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (d #t) (k 0)) (d (n "human-panic") (r "^1.2.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.8") (d #t) (k 0)) (d (n "jsonxf") (r "^1.1.1") (d #t) (k 0)) (d (n "kv-rs") (r "^0.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logos") (r "^0.13") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "predicates") (r "^2.1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "rustyline") (r "^12.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.126") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.17") (d #t) (k 0)) (d (n "sqlformat") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3.13") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "tokio") (r "~1.35.1") (f (quote ("macros" "rt" "rt-multi-thread" "net" "io-util" "time" "sync"))) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)))) (h "12qwc5nn1kyrjrhpxg92ljk6k81vpkp2gx5f25sbk6yx7nwisavf")))

(define-public crate-kvcli-0.0.4 (c (n "kvcli") (v "0.0.4") (d (list (d (n "anyhow") (r "^1.0.63") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.8") (d #t) (k 2)) (d (n "assert_fs") (r "^1.1.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock"))) (k 0)) (d (n "clap") (r "~4.4.2") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "confy") (r "^0.6.0") (d #t) (k 0)) (d (n "console") (r "^0.15.5") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.2") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (d #t) (k 0)) (d (n "human-panic") (r "^1.2.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.8") (d #t) (k 0)) (d (n "jsonxf") (r "^1.1.1") (d #t) (k 0)) (d (n "kv-rs") (r "^0.0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logos") (r "^0.13") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "predicates") (r "^2.1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "rustyline") (r "^12.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.126") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.17") (d #t) (k 0)) (d (n "sqlformat") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3.13") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "tokio") (r "~1.35.1") (f (quote ("macros" "rt" "rt-multi-thread" "net" "io-util" "time" "sync"))) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)))) (h "1l6an81yjyrhb6f6hk24miglgmjd1nkwv42sby43dz20614qan5a")))

(define-public crate-kvcli-0.0.5 (c (n "kvcli") (v "0.0.5") (d (list (d (n "anyhow") (r "^1.0.63") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.8") (d #t) (k 2)) (d (n "assert_fs") (r "^1.1.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock"))) (k 0)) (d (n "clap") (r "~4.4.2") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "confy") (r "^0.6.0") (d #t) (k 0)) (d (n "console") (r "^0.15.5") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.2") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (d #t) (k 0)) (d (n "human-panic") (r "^1.2.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.8") (d #t) (k 0)) (d (n "jsonxf") (r "^1.1.1") (d #t) (k 0)) (d (n "kv-rs") (r "^0.0.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logos") (r "^0.13") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "predicates") (r "^2.1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "rustyline") (r "^12.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.126") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.17") (d #t) (k 0)) (d (n "sqlformat") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3.13") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "tokio") (r "~1.35.1") (f (quote ("macros" "rt" "rt-multi-thread" "net" "io-util" "time" "sync"))) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)))) (h "1ga30yklqyms2jjjn5ggy04pfz9d53q0qdpfbg2s3cpjg223w9fw")))

(define-public crate-kvcli-0.0.6 (c (n "kvcli") (v "0.0.6") (d (list (d (n "anyhow") (r "^1.0.63") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.8") (d #t) (k 2)) (d (n "assert_fs") (r "^1.1.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock"))) (k 0)) (d (n "clap") (r "~4.4.2") (f (quote ("cargo" "derive" "env"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "config") (r "^0.14.0") (d #t) (k 0)) (d (n "console") (r "^0.15.5") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.2") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("colored"))) (d #t) (k 0)) (d (n "human-panic") (r "^1.2.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.8") (d #t) (k 0)) (d (n "jsonxf") (r "^1.1.1") (d #t) (k 0)) (d (n "kv-rs") (r "^0.0.6") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logos") (r "^0.13") (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "predicates") (r "^2.1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "rustyline") (r "^12.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.126") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.17") (d #t) (k 0)) (d (n "sqlformat") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3.13") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "tokio") (r "~1.35.1") (f (quote ("macros" "rt" "rt-multi-thread" "net" "io-util" "time" "sync"))) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)))) (h "17n8026h6p9qg5qppgfgg2s3ilfkn1cg79h2x840rndzgy7q4fas")))

