(define-module (crates-io te o- teo-parser) #:use-module (crates-io))

(define-public crate-teo-parser-0.0.58 (c (n "teo-parser") (v "0.0.58") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.23") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "teo-teon") (r "^0.0.58") (d #t) (k 0)))) (h "12wy31v6v6qz6h7q6zj9b4blbg9k73dkb5vms676gswc8nhs6aml")))

(define-public crate-teo-parser-0.0.59 (c (n "teo-parser") (v "0.0.59") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.23") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "teo-teon") (r "^0.0.59") (d #t) (k 0)))) (h "1m62hgv6wxzy9d9vkc6582sfdf34m067vzsnsl4r33ihgpz1if4g")))

(define-public crate-teo-parser-0.0.60 (c (n "teo-parser") (v "0.0.60") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.23") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "teo-teon") (r "^0.0.60") (d #t) (k 0)))) (h "0q029zxbqi972xkaik0x0jcmj4y3bjj99gcmxmnfd32nx34qf9dk")))

(define-public crate-teo-parser-0.0.61 (c (n "teo-parser") (v "0.0.61") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.23") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "teo-teon") (r "^0.0.61") (d #t) (k 0)))) (h "1ncg3r34fmzvzfdglbb1pclrqzxzva8rryg6hwjg5m7bzzqlmf7h")))

(define-public crate-teo-parser-0.0.62 (c (n "teo-parser") (v "0.0.62") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.9") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "teo-teon") (r "^0.0.62") (d #t) (k 0)))) (h "1gvwy6f1b2g8j7cxwbbhdmpvd18xc1093i4n9s3ngsv20qy7syfw")))

(define-public crate-teo-parser-0.0.63 (c (n "teo-parser") (v "0.0.63") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.9") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "teo-teon") (r "^0.0.63") (d #t) (k 0)))) (h "04vr94lwj0ayii87j2f75mzy8khgc8wkrfw74ria2qgfknmf34qz")))

(define-public crate-teo-parser-0.0.64 (c (n "teo-parser") (v "0.0.64") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.9") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "teo-teon") (r "^0.0.64") (d #t) (k 0)))) (h "1lc06cmdlgwldb9zmqw8q306d0lqh84yd88qxa7k74kvn5scl59y")))

(define-public crate-teo-parser-0.0.65 (c (n "teo-parser") (v "0.0.65") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.9") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "teo-teon") (r "^0.0.65") (d #t) (k 0)))) (h "0aw4vpb2hxigv6szrivwvwpsg43ncdsa9yah56b0j0fhv2csvj2n")))

(define-public crate-teo-parser-0.1.0 (c (n "teo-parser") (v "0.1.0") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.9") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "teo-teon") (r "^0.1.0") (d #t) (k 0)))) (h "1vqf6q6minfa4l58sz1xrcnc5clsf079bh3qy2h8pblgygsvvrxx")))

(define-public crate-teo-parser-0.1.4 (c (n "teo-parser") (v "0.1.4") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.9") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.5") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "teo-teon") (r "^0.1.0") (d #t) (k 0)))) (h "1zbwzl3wfpzyd6jp6mxny6rwbkd5323kry3sx03s83i8j0ahkf3i")))

(define-public crate-teo-parser-0.1.5 (c (n "teo-parser") (v "0.1.5") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.11") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.6") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.6") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "teo-teon") (r "^0.1.0") (d #t) (k 0)))) (h "05rvbby22k56g2gf2yf8bmjvny66asw3838iwh8mynb6czkn5bry")))

(define-public crate-teo-parser-0.2.0 (c (n "teo-parser") (v "0.2.0") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.11") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.6") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.6") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "teo-teon") (r "^0.2.0") (d #t) (k 0)))) (h "1ih5amgnw1i4slvzbacf0i95hzbdljlabblh4l5y546bp5lr2vhf")))

(define-public crate-teo-parser-0.2.2 (c (n "teo-parser") (v "0.2.2") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.11") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.6") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.6") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "teo-teon") (r "^0.2.0") (d #t) (k 0)))) (h "19s8vrx0di498q7xf4nnmpyf5njsq5m6vkqy7hzcp3pmjx216vl2")))

(define-public crate-teo-parser-0.2.4 (c (n "teo-parser") (v "0.2.4") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.11") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.7") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.7") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "teo-teon") (r "^0.2.0") (d #t) (k 0)))) (h "1a1gdg1wgkvzwrdy3584l8glbags17b2vnsw5px4sp8wygcm0lsh")))

(define-public crate-teo-parser-0.2.8 (c (n "teo-parser") (v "0.2.8") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.11") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.7") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.7") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "teo-teon") (r "^0.2.8") (d #t) (k 0)))) (h "0svfr7347ygh7z50ki10iw9j483a5mc8vydl6fcjmapgp5vn4f49")))

(define-public crate-teo-parser-0.2.9 (c (n "teo-parser") (v "0.2.9") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.11") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.7") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.7") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "teo-teon") (r "^0.2.8") (d #t) (k 0)))) (h "0xzx5qhikh22r155kydl77kp9bynhwzg4fsdsyy9wycxhp2bn68k")))

(define-public crate-teo-parser-0.2.10 (c (n "teo-parser") (v "0.2.10") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.11") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.8") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "teo-teon") (r "^0.2.8") (d #t) (k 0)))) (h "1vjvidcdlzah7q3i6srh5nj8d3diax0rf3hyv8g8c9a8qfgml0dc")))

(define-public crate-teo-parser-0.2.12 (c (n "teo-parser") (v "0.2.12") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.11") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.8") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "teo-teon") (r "^0.2.8") (d #t) (k 0)))) (h "1c6lnjg1rc86maqjxb6k341pr6aw52c86nbzgfc5xq28my6lnn5a")))

(define-public crate-teo-parser-0.2.13 (c (n "teo-parser") (v "0.2.13") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.11") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.8") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "teo-teon") (r "^0.2.13") (d #t) (k 0)))) (h "1wp4q744dnm4lhm040y2axz5zbccgpl555chi3bx3fdan112c92f")))

(define-public crate-teo-parser-0.2.14 (c (n "teo-parser") (v "0.2.14") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.11") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.8") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "teo-teon") (r "^0.2.13") (d #t) (k 0)))) (h "168kis8pj1qxfxs7cc32hp183jbkcrr8x5n5qr5j4wdk40wvfcqm") (y #t)))

(define-public crate-teo-parser-0.2.15 (c (n "teo-parser") (v "0.2.15") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.11") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.8") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "teo-teon") (r "^0.2.13") (d #t) (k 0)))) (h "0nmnjfqw5fzjbnyajjzpdacryvai7f4y2hjw2m70qw1ffsfv3qa7")))

(define-public crate-teo-parser-0.2.16 (c (n "teo-parser") (v "0.2.16") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.11") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.8") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "teo-teon") (r "^0.2.13") (d #t) (k 0)))) (h "1w1igh03pgrr3js75ck48ypl6m9zvg0lh1rp95g0f29zkylyi502")))

(define-public crate-teo-parser-0.2.20 (c (n "teo-parser") (v "0.2.20") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "bigdecimal") (r "=0.3.1") (d #t) (k 0)) (d (n "bson") (r "^2.9.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (f (quote ("serde" "wasmbind"))) (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.11") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.8") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.8") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "teo-result") (r "^0.2.20") (d #t) (k 0)))) (h "024nz3s12iwx61m0j4rry3dhdfwkq7gxssp8j2pfd6j634wmxfc5")))

(define-public crate-teo-parser-0.2.21 (c (n "teo-parser") (v "0.2.21") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "bigdecimal") (r "=0.3.1") (d #t) (k 0)) (d (n "bson") (r "^2.9.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (f (quote ("serde" "wasmbind"))) (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.11") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.8") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.8") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "teo-result") (r "^0.2.21") (d #t) (k 0)))) (h "0why8fb76bh84pbc9nrk6hvx330bd4av5npgm3ya3h4wbf83s4h2")))

(define-public crate-teo-parser-0.2.23 (c (n "teo-parser") (v "0.2.23") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "bigdecimal") (r "=0.3.1") (d #t) (k 0)) (d (n "bson") (r "^2.9.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (f (quote ("serde" "wasmbind"))) (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.11") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.8") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.8") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "teo-result") (r "^0.2.21") (d #t) (k 0)))) (h "07m7n009h0hv0nnjry3cvclgnnh3hm4rf0nrcqmzl6hmdzbhznz7")))

(define-public crate-teo-parser-0.2.24 (c (n "teo-parser") (v "0.2.24") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "bigdecimal") (r "=0.3.1") (d #t) (k 0)) (d (n "bson") (r "^2.9.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (f (quote ("serde" "wasmbind"))) (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.11") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.8") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.8") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "teo-result") (r "^0.2.23") (d #t) (k 0)))) (h "1ix7jk241zwpp7b6jck43dnr5aag9pa66ql0kv6imn6zh04c0cgk")))

(define-public crate-teo-parser-0.2.25 (c (n "teo-parser") (v "0.2.25") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "bigdecimal") (r "=0.3.1") (d #t) (k 0)) (d (n "bson") (r "^2.9.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (f (quote ("serde" "wasmbind"))) (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.11") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.8") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.8") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "teo-result") (r "^0.2.23") (d #t) (k 0)))) (h "1ln1h468ah808cr2bk89c40a1i8465jxm457a3w3nz49yj4r8ybg")))

(define-public crate-teo-parser-0.2.28 (c (n "teo-parser") (v "0.2.28") (d (list (d (n "array_tool") (r "^1.0.3") (d #t) (k 0)) (d (n "backtrace-on-stack-overflow") (r "^0.3.0") (d #t) (k 2)) (d (n "bigdecimal") (r "=0.3.1") (d #t) (k 0)) (d (n "bson") (r "^2.10.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.38") (f (quote ("serde" "wasmbind"))) (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "educe") (r "^0.5.11") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.10") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.10") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snailquote") (r "^0.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "teo-result") (r "^0.2.23") (d #t) (k 0)))) (h "06qn6s9mbc18h00bhsisdbchsvvia0mrisjbl1ifbzbixdb5psw1")))

