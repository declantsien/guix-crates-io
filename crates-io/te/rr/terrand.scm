(define-module (crates-io te rr terrand) #:use-module (crates-io))

(define-public crate-terrand-1.0.0 (c (n "terrand") (v "1.0.0") (d (list (d (n "cosmwasm-schema") (r "^0.10.1") (d #t) (k 2)) (d (n "cosmwasm-std") (r "^0.10.1") (f (quote ("iterator"))) (d #t) (k 0)) (d (n "cosmwasm-storage") (r "^0.10.1") (f (quote ("iterator"))) (d #t) (k 0)) (d (n "fff") (r "^0.2.0") (d #t) (k 0)) (d (n "groupy") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3.1") (d #t) (k 2)) (d (n "paired") (r "^0.21") (d #t) (k 0)) (d (n "schemars") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.67") (o #t) (d #t) (k 0)))) (h "1yl0c5cf0s24ry1xmz3i6br3kv9my12hciskvvg9258fpix9csaz") (f (quote (("backtraces" "cosmwasm-std/backtraces")))) (y #t)))

(define-public crate-terrand-2.0.0 (c (n "terrand") (v "2.0.0") (d (list (d (n "cosmwasm-schema") (r "^0.14.0") (d #t) (k 2)) (d (n "cosmwasm-std") (r "^0.14.0") (f (quote ("iterator"))) (d #t) (k 0)) (d (n "cosmwasm-storage") (r "^0.14.0") (f (quote ("iterator"))) (d #t) (k 0)) (d (n "cw-storage-plus") (r "^0.6.0") (f (quote ("iterator"))) (d #t) (k 0)) (d (n "fff") (r "^0.2.0") (d #t) (k 0)) (d (n "groupy") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3.1") (d #t) (k 2)) (d (n "paired") (r "^0.21") (d #t) (k 0)) (d (n "schemars") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.67") (o #t) (d #t) (k 0)))) (h "0gzb4m4d8b5d9fdp9hidf5wgak1blb8sp56xkw34afsyna83c7mg") (f (quote (("backtraces" "cosmwasm-std/backtraces")))) (y #t)))

(define-public crate-terrand-3.2.1 (c (n "terrand") (v "3.2.1") (d (list (d (n "cosmwasm-schema") (r "^0.16.0") (d #t) (k 2)) (d (n "cosmwasm-std") (r "^0.16.0") (f (quote ("iterator"))) (d #t) (k 0)) (d (n "cosmwasm-storage") (r "^0.16.0") (f (quote ("iterator"))) (d #t) (k 0)) (d (n "cw-storage-plus") (r "^0.9.1") (f (quote ("iterator"))) (d #t) (k 0)) (d (n "fff") (r "^0.2.0") (d #t) (k 0)) (d (n "groupy") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3.1") (d #t) (k 2)) (d (n "paired") (r "^0.21") (d #t) (k 0)) (d (n "schemars") (r "^0.8.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.67") (o #t) (d #t) (k 0)))) (h "0pybjcahcs8jdww18yvl698j6hs0rmbq2xl5ljrkja826bgzffb0") (f (quote (("backtraces" "cosmwasm-std/backtraces")))) (y #t)))

(define-public crate-terrand-3.2.2 (c (n "terrand") (v "3.2.2") (d (list (d (n "cosmwasm-schema") (r "^0.16.0") (d #t) (k 2)) (d (n "cosmwasm-std") (r "^0.16.0") (f (quote ("iterator"))) (d #t) (k 0)) (d (n "cosmwasm-storage") (r "^0.16.0") (f (quote ("iterator"))) (d #t) (k 0)) (d (n "cw-storage-plus") (r "^0.9.1") (f (quote ("iterator"))) (d #t) (k 0)) (d (n "fff") (r "^0.2.0") (d #t) (k 0)) (d (n "groupy") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3.1") (d #t) (k 2)) (d (n "paired") (r "^0.21") (d #t) (k 0)) (d (n "schemars") (r "^0.8.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.67") (o #t) (d #t) (k 0)))) (h "13qd1xxp0p969g0jhb1931p7zcs0vncm9bm3ahlz24gjpyp1xnhv") (f (quote (("library") ("backtraces" "cosmwasm-std/backtraces"))))))

