(define-module (crates-io te rr terra) #:use-module (crates-io))

(define-public crate-terra-0.1.0 (c (n "terra") (v "0.1.0") (d (list (d (n "camera_controllers") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "curl") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "gfx") (r "^0.16") (d #t) (k 0)) (d (n "gfx_core") (r "^0.7") (d #t) (k 0)) (d (n "gfx_device_gl") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "piston_window") (r "^0.67") (o #t) (d #t) (k 0)) (d (n "pistoncore-sdl2_window") (r "^0.43") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "safe-transmute") (r "^0.3") (d #t) (k 0)) (d (n "shader_version") (r "^0.2.1") (d #t) (k 0)) (d (n "vecmath") (r "^0.3.0") (d #t) (k 0)) (d (n "zip") (r "^0.2") (d #t) (k 0)))) (h "1n2dgm21f91qxzwimdw743gnpkcq7j77abn9qaj2msmhmg1hhsw8") (f (quote (("preview" "piston_window" "camera_controllers" "pistoncore-sdl2_window" "gfx_device_gl") ("download" "curl") ("default" "download"))))))

(define-public crate-terra-0.2.0 (c (n "terra") (v "0.2.0") (d (list (d (n "bincode") (r "^0.8.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "camera_controllers") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "cgmath") (r "^0.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curl") (r "^0.4") (d #t) (k 0)) (d (n "gfx") (r "^0.16") (d #t) (k 0)) (d (n "gfx_core") (r "^0.7") (d #t) (k 0)) (d (n "image") (r "^0.15") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "lru-cache") (r "^0.1.1") (d #t) (k 0)) (d (n "memmap") (r "^0.5.2") (d #t) (k 0)) (d (n "notify") (r "^4.0") (d #t) (k 0)) (d (n "piston_window") (r "^0.67") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rshader") (r "^0.1.0") (d #t) (k 0)) (d (n "rustfft") (r "^2.0.0") (d #t) (k 0)) (d (n "safe-transmute") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "shader_version") (r "^0.2.1") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (k 0)) (d (n "vecmath") (r "^0.3.0") (d #t) (k 0)) (d (n "zip") (r "^0.2") (d #t) (k 0)))) (h "0gpxy1x8bm6w7i4gxxpw6z1k21vjdkzns4kcyyq2kaa0agjlg1hg") (f (quote (("preview" "piston_window" "camera_controllers") ("dynamic_shaders" "rshader/dynamic_shaders") ("default"))))))

