(define-module (crates-io te nd tendermint) #:use-module (crates-io))

(define-public crate-tendermint-0.0.0 (c (n "tendermint") (v "0.0.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.2") (d #t) (k 0)) (d (n "tai64") (r "^1") (f (quote ("chrono"))) (o #t) (d #t) (k 0)))) (h "0bha2mxla1yjij38xs3cqwwpflfxm7n857yq2i7q7z16qm0w886n") (f (quote (("serializers" "serde" "serde_derive") ("default" "serializers" "tai64"))))))

(define-public crate-tendermint-0.1.0 (c (n "tendermint") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hkdf") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "prost-amino") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (o #t) (k 0)) (d (n "signatory") (r "^0.10") (f (quote ("ed25519"))) (o #t) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.3.0-alpha1") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^1") (f (quote ("chrono"))) (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.3") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "zeroize") (r "^0.4") (o #t) (d #t) (k 0)))) (h "03d96wzqgyd9z630riwcw2b6vcjbw53bvwkci6vlls89gmsagyzr") (f (quote (("serializers" "serde" "serde_derive") ("secret-connection" "byteorder" "hkdf" "prost-amino" "prost-amino-derive" "rand" "ring" "signatory" "signatory-dalek" "sha2" "x25519-dalek" "zeroize") ("default" "secret-connection" "serializers" "tai64"))))))

(define-public crate-tendermint-0.1.1 (c (n "tendermint") (v "0.1.1") (d (list (d (n "byteorder") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hkdf") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "prost-amino") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (o #t) (k 0)) (d (n "signatory") (r "^0.10") (f (quote ("ed25519"))) (o #t) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.3.0-alpha1") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^1") (f (quote ("chrono"))) (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.3") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "zeroize") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0g1m1b76g9i2cm40xvxg6zzk2vr4ip92lbkzwy462w2al6p5q9v4") (f (quote (("serializers" "serde" "serde_derive") ("secret-connection" "byteorder" "hkdf" "prost-amino" "prost-amino-derive" "rand" "ring" "signatory" "signatory-dalek" "sha2" "x25519-dalek" "zeroize") ("default" "secret-connection" "serializers" "tai64"))))))

(define-public crate-tendermint-0.1.2 (c (n "tendermint") (v "0.1.2") (d (list (d (n "byteorder") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hkdf") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "prost-amino") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (o #t) (k 0)) (d (n "signatory") (r "^0.10") (f (quote ("ed25519"))) (o #t) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.3") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^1") (f (quote ("chrono"))) (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.3") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "zeroize") (r "^0.4") (o #t) (d #t) (k 0)))) (h "060qcwfc7jiljs347pmmi7qj8vd413i4g0b3z5jk68c28mbxs55a") (f (quote (("serializers" "serde" "serde_derive") ("secret-connection" "byteorder" "hkdf" "prost-amino" "prost-amino-derive" "rand" "ring" "signatory" "signatory-dalek" "sha2" "x25519-dalek" "zeroize") ("default" "secret-connection" "serializers" "tai64"))))))

(define-public crate-tendermint-0.1.3 (c (n "tendermint") (v "0.1.3") (d (list (d (n "byteorder") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hkdf") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "prost-amino") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (o #t) (k 0)) (d (n "signatory") (r "^0.10") (f (quote ("ed25519"))) (o #t) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.3") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^1") (f (quote ("chrono"))) (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.3") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "zeroize") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1sy2vf01gwyjk8qvvais1hpgv2ryngfgihcxwi2pr241w2ypw9z5") (f (quote (("serializers" "serde" "serde_derive") ("secret-connection" "byteorder" "hkdf" "prost-amino" "prost-amino-derive" "rand" "ring" "signatory" "signatory-dalek" "sha2" "x25519-dalek" "zeroize") ("default" "secret-connection" "serializers" "tai64"))))))

(define-public crate-tendermint-0.1.4 (c (n "tendermint") (v "0.1.4") (d (list (d (n "byteorder") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hkdf") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "prost-amino") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (o #t) (k 0)) (d (n "signatory") (r "^0.10") (f (quote ("ed25519"))) (o #t) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.3") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^1") (f (quote ("chrono"))) (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.3") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "zeroize") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1qscd08dqw8insp9axf6pz8ga0jr5a1wzgn444qqhr6nam28c94h") (f (quote (("serializers" "serde" "serde_derive") ("secret-connection" "byteorder" "hkdf" "prost-amino" "prost-amino-derive" "rand" "ring" "signatory" "signatory-dalek" "sha2" "x25519-dalek" "zeroize") ("default" "secret-connection" "serializers" "tai64"))))))

(define-public crate-tendermint-0.1.5 (c (n "tendermint") (v "0.1.5") (d (list (d (n "byteorder") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hkdf") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "prost-amino") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (o #t) (k 0)) (d (n "signatory") (r "^0.10") (f (quote ("ed25519"))) (o #t) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.3") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^1") (f (quote ("chrono"))) (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.3") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "zeroize") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1g7sm9wsqvn9s0a806rgnfgz0acg2wmfi2qmfsk4imm6ax775rwf") (f (quote (("serializers" "serde" "serde_derive") ("secret-connection" "byteorder" "hkdf" "prost-amino" "prost-amino-derive" "rand" "ring" "signatory" "signatory-dalek" "sha2" "x25519-dalek" "zeroize") ("default" "secret-connection" "serializers" "tai64"))))))

(define-public crate-tendermint-0.2.0 (c (n "tendermint") (v "0.2.0") (d (list (d (n "byteorder") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hkdf") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "prost-amino") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (o #t) (k 0)) (d (n "signatory") (r "^0.10") (f (quote ("ed25519"))) (o #t) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.3") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^1") (f (quote ("chrono"))) (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.4.4") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "zeroize") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1by08scxzh6056w2bgwm5a6g3b3gjkwsymwajrf2v75h2s3iia4n") (f (quote (("serializers" "serde" "serde_derive") ("secret-connection" "byteorder" "hkdf" "prost-amino" "prost-amino-derive" "rand" "ring" "signatory" "signatory-dalek" "sha2" "x25519-dalek" "zeroize") ("default" "secret-connection" "serializers" "tai64"))))))

(define-public crate-tendermint-0.3.0-beta1 (c (n "tendermint") (v "0.3.0-beta1") (d (list (d (n "byteorder") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hkdf") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "prost-amino") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rand_os") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (o #t) (k 0)) (d (n "signatory") (r "^0.11.1") (f (quote ("ed25519" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.3") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^1") (f (quote ("chrono"))) (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.4.4") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "zeroize") (r "^0.5.2") (o #t) (d #t) (k 0)))) (h "0xbn428fgjdhqhn26rgs1f6j6r7zrs3xz260bya42dds4vhrji9w") (f (quote (("serializers" "serde" "serde_derive") ("secret-connection" "byteorder" "hkdf" "prost-amino" "prost-amino-derive" "rand_os" "ring" "signatory" "signatory-dalek" "sha2" "x25519-dalek" "zeroize") ("default" "secret-connection" "serializers" "tai64"))))))

(define-public crate-tendermint-0.3.0 (c (n "tendermint") (v "0.3.0") (d (list (d (n "byteorder") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hkdf") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "prost-amino") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rand_os") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (o #t) (k 0)) (d (n "signatory") (r "^0.11.1") (f (quote ("ed25519" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.3") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^1") (f (quote ("chrono"))) (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.4.4") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "zeroize") (r "^0.5.2") (o #t) (d #t) (k 0)))) (h "03pqwfi426h6yb9pjkd6s67acm9r1jbxmcfw5ll5mvzbq6xkbgw6") (f (quote (("serializers" "serde" "serde_derive") ("secret-connection" "byteorder" "hkdf" "prost-amino" "prost-amino-derive" "rand_os" "ring" "signatory" "signatory-dalek" "sha2" "x25519-dalek" "zeroize") ("default" "secret-connection" "serializers" "tai64"))))))

(define-public crate-tendermint-0.5.0-alpha1 (c (n "tendermint") (v "0.5.0-alpha1") (d (list (d (n "byteorder") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hkdf") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "prost-amino") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rand_os") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (o #t) (k 0)) (d (n "signatory") (r "^0.11.2") (f (quote ("ed25519" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.3") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^1") (f (quote ("chrono"))) (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.4.4") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "zeroize") (r "^0.5.2") (o #t) (d #t) (k 0)))) (h "1nbdscy7j6vbnval89l24051pji86b12yx8185phv5p0rh110nmn") (f (quote (("serializers" "serde" "serde_derive") ("secret-connection" "byteorder" "hkdf" "prost-amino" "prost-amino-derive" "rand_os" "ring" "signatory" "signatory-dalek" "sha2" "x25519-dalek" "zeroize") ("default" "secret-connection" "serializers" "tai64"))))))

(define-public crate-tendermint-0.5.0 (c (n "tendermint") (v "0.5.0") (d (list (d (n "byteorder") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hkdf") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "prost-amino") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rand_os") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (o #t) (k 0)) (d (n "signatory") (r "^0.11.2") (f (quote ("ed25519" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2") (o #t) (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.3") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^1") (f (quote ("chrono"))) (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.4.4") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "zeroize") (r "^0.5.2") (o #t) (d #t) (k 0)))) (h "19h4r5z30iqs8rzn2177a22jh7pacbl17j2nppxzq7kvy9pw0asa") (f (quote (("serializers" "serde" "serde_derive") ("secret-connection" "byteorder" "hkdf" "prost-amino" "prost-amino-derive" "rand_os" "ring" "signatory" "signatory-dalek" "sha2" "subtle" "x25519-dalek" "zeroize") ("default" "secret-connection" "serializers" "tai64"))))))

(define-public crate-tendermint-0.6.0 (c (n "tendermint") (v "0.6.0") (d (list (d (n "byteorder") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hkdf") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "prost-amino") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rand_os") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "signatory") (r "^0.11.2") (f (quote ("ed25519" "ecdsa"))) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.3") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^1") (f (quote ("chrono"))) (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "zeroize") (r "^0.6") (o #t) (d #t) (k 0)))) (h "0xiw6mdrjj7wnb4mf4cqnqrvgpf9yw1whcqvlcl8y2w0hqgg6chs") (f (quote (("secret-connection" "amino-types" "byteorder" "hkdf" "rand_os" "ring" "signatory-dalek" "x25519-dalek" "zeroize") ("default" "serde" "tai64") ("amino-types" "prost-amino" "prost-amino-derive"))))))

(define-public crate-tendermint-0.7.0-alpha1 (c (n "tendermint") (v "0.7.0-alpha1") (d (list (d (n "byteorder") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hkdf") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "prost-amino") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rand_os") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "signatory") (r "^0.11.2") (f (quote ("ed25519" "ecdsa"))) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.3") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^1") (f (quote ("chrono"))) (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "zeroize") (r "^0.6") (o #t) (d #t) (k 0)))) (h "18xwqpw00bgb0xy8czqhqh771dz9agy4mbax3j112xbkvw84fdf6") (f (quote (("secret-connection" "amino-types" "byteorder" "hkdf" "rand_os" "ring" "signatory-dalek" "x25519-dalek" "zeroize") ("rpc" "serde" "serde_json") ("default" "serde" "tai64") ("amino-types" "prost-amino" "prost-amino-derive"))))))

(define-public crate-tendermint-0.7.0 (c (n "tendermint") (v "0.7.0") (d (list (d (n "byteorder") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hkdf") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "prost-amino") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rand_os") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "signatory") (r "^0.11.2") (f (quote ("ed25519" "ecdsa"))) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.3") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^1") (f (quote ("chrono"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (o #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "zeroize") (r "^0.6") (o #t) (d #t) (k 0)))) (h "0vn115qdp6najjvflwjwvc83kc96vbrba2bjh4ip5f2jg5p32izz") (f (quote (("secret-connection" "amino-types" "byteorder" "rand_os" "hkdf" "ring" "signatory-dalek" "x25519-dalek" "zeroize") ("rpc" "hyper" "rand_os" "serde" "serde_json" "uuid") ("integration") ("default" "serde" "tai64") ("amino-types" "prost-amino" "prost-amino-derive"))))))

(define-public crate-tendermint-0.8.0 (c (n "tendermint") (v "0.8.0") (d (list (d (n "byteorder") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hkdf") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "prost-amino") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rand_os") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "signatory") (r "^0.12") (f (quote ("ed25519" "ecdsa"))) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.3") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^2") (f (quote ("chrono"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (o #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "zeroize") (r "^0.9") (o #t) (d #t) (k 0)))) (h "03fs64jwhl96bn5zds7ln21gd6jvfjwaxzvdafsv0zjspc81fssr") (f (quote (("secret-connection" "amino-types" "byteorder" "rand_os" "hkdf" "ring" "signatory-dalek" "x25519-dalek" "zeroize") ("rpc" "hyper" "rand_os" "serde" "serde_json" "uuid") ("integration") ("default" "serde" "tai64") ("amino-types" "prost-amino" "prost-amino-derive"))))))

(define-public crate-tendermint-0.9.0 (c (n "tendermint") (v "0.9.0") (d (list (d (n "byteorder") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hkdf") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "prost-amino") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rand_os") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "signatory") (r "^0.12") (f (quote ("ed25519" "ecdsa"))) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.3") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^2") (f (quote ("chrono"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (o #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "zeroize") (r "^0.9") (o #t) (d #t) (k 0)))) (h "010k2jrzw3a8dqr501z0zzsplcw2l0klz8xj1mnpdb425zmwivrz") (f (quote (("secret-connection" "amino-types" "byteorder" "rand_os" "hkdf" "ring" "signatory-dalek" "x25519-dalek" "zeroize") ("rpc" "hyper" "rand_os" "serde" "serde_json" "uuid") ("integration") ("default" "serde" "tai64") ("amino-types" "prost-amino" "prost-amino-derive"))))))

(define-public crate-tendermint-0.10.0-rc0 (c (n "tendermint") (v "0.10.0-rc0") (d (list (d (n "byteorder") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hkdf") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "prost-amino") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rand_os") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "signatory") (r "^0.12") (f (quote ("ed25519" "ecdsa"))) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.3") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^2") (f (quote ("chrono"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (o #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "zeroize") (r "^0.9") (o #t) (d #t) (k 0)))) (h "0rs8shjsjxrkj5q9sv06y4llc1swsyllkkywl2wgjk6wkhkcvhwa") (f (quote (("secret-connection" "amino-types" "byteorder" "rand_os" "hkdf" "ring" "signatory-dalek" "x25519-dalek" "zeroize") ("rpc" "hyper" "rand_os" "serde" "serde_json" "uuid") ("default" "serde" "tai64") ("config" "serde" "serde_json" "toml") ("amino-types" "prost-amino" "prost-amino-derive"))))))

(define-public crate-tendermint-0.10.0-rc1 (c (n "tendermint") (v "0.10.0-rc1") (d (list (d (n "byteorder") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hkdf") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "prost-amino") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rand_os") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "signatory") (r "^0.12") (f (quote ("ed25519" "ecdsa"))) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.3") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^2") (f (quote ("chrono"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (o #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "zeroize") (r "^0.9") (o #t) (d #t) (k 0)))) (h "125mn49gj13mif0m7ikr3hy99z10sy51yidjd5wkwbxb4pp8m1m3") (f (quote (("secret-connection" "amino-types" "byteorder" "rand_os" "hkdf" "ring" "signatory-dalek" "x25519-dalek" "zeroize") ("rpc" "hyper" "rand_os" "serde" "serde_json" "uuid") ("keys" "signatory-dalek") ("default" "serde" "tai64") ("config" "serde" "serde_json" "toml" "zeroize") ("amino-types" "prost-amino" "prost-amino-derive"))))))

(define-public crate-tendermint-0.10.0 (c (n "tendermint") (v "0.10.0") (d (list (d (n "byteorder") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hkdf") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "prost-amino") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rand_os") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "signatory") (r "^0.12") (f (quote ("ed25519" "ecdsa"))) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.3") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^2") (f (quote ("chrono"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (o #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "zeroize") (r "^0.9") (o #t) (d #t) (k 0)))) (h "17czymamn51hnxgfxq9ldy937mdw0wsl3fhbib0lj8qa45d95dap") (f (quote (("secret-connection" "amino-types" "byteorder" "rand_os" "hkdf" "ring" "signatory-dalek" "x25519-dalek" "zeroize") ("rpc" "hyper" "rand_os" "serde" "serde_json" "uuid") ("keys" "signatory-dalek") ("default" "serde" "tai64") ("config" "serde" "serde_json" "toml" "zeroize") ("amino-types" "prost-amino" "prost-amino-derive"))))))

(define-public crate-tendermint-0.10.1 (c (n "tendermint") (v "0.10.1") (d (list (d (n "byteorder") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hkdf") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "prost-amino") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rand_os") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "signatory") (r "^0.12") (f (quote ("ed25519" "ecdsa"))) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.3") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^2") (f (quote ("chrono"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (o #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "zeroize") (r "^0.9") (o #t) (d #t) (k 0)))) (h "04ggqbfj5f3b1s6glnikpp5g6lb7wnnvdgzxlb1y6v3l214bdn1b") (f (quote (("secret-connection" "amino-types" "byteorder" "rand_os" "hkdf" "ring" "signatory-dalek" "x25519-dalek" "zeroize") ("rpc" "hyper" "rand_os" "serde" "serde_json" "uuid") ("keys" "signatory-dalek") ("default" "serde" "tai64") ("config" "serde" "serde_json" "toml" "zeroize") ("amino-types" "prost-amino" "prost-amino-derive"))))))

(define-public crate-tendermint-0.11.0 (c (n "tendermint") (v "0.11.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "bytes_0_5") (r "^0.5") (d #t) (k 0) (p "bytes")) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.1") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "prost-amino") (r "^0.4.0") (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "signatory") (r "^0.17") (f (quote ("ed25519" "ecdsa"))) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.17") (d #t) (k 0)) (d (n "signatory-secp256k1") (r "^0.17") (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^3") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1wi9wxzzqasvkwp9xc21xi1a1w5xw6z5kh1iqi50dvvnnahlx51g")))

(define-public crate-tendermint-0.12.0-rc0 (c (n "tendermint") (v "0.12.0-rc0") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.1") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "prost-amino") (r "^0.5") (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "signatory") (r "^0.18") (f (quote ("ed25519" "ecdsa"))) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.18") (d #t) (k 0)) (d (n "signatory-secp256k1") (r "^0.18") (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^3") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1kp7kdvrfbvwyvqzb9xyzhs95a2idlyf4cwia270ikv6a33il9i6")))

(define-public crate-tendermint-0.12.0 (c (n "tendermint") (v "0.12.0") (d (list (d (n "anomaly") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.1") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "once_cell") (r "^1.3") (d #t) (k 0)) (d (n "prost-amino") (r "^0.5") (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "signatory") (r "^0.18") (f (quote ("ed25519" "ecdsa"))) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.18") (d #t) (k 0)) (d (n "signatory-secp256k1") (r "^0.18") (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^3") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0r3fd88iq3jmxbx6dzcm0d837kxd41d82qg7bjdcc0fl7jif7cal")))

(define-public crate-tendermint-0.13.0 (c (n "tendermint") (v "0.13.0") (d (list (d (n "anomaly") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.1") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "once_cell") (r "^1.3") (d #t) (k 0)) (d (n "prost-amino") (r "^0.5") (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.5") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "signatory") (r "^0.19") (f (quote ("ed25519" "ecdsa"))) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.19") (d #t) (k 0)) (d (n "signatory-secp256k1") (r "^0.19") (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^3") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1bbbpzj2rgagkv65hcrnynk6f5i36hzfxgjpkwpcybllfx4y7i39")))

(define-public crate-tendermint-0.14.0 (c (n "tendermint") (v "0.14.0") (d (list (d (n "anomaly") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.3") (d #t) (k 0)) (d (n "prost-amino") (r "^0.5") (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.5") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signatory") (r "^0.20") (f (quote ("ed25519" "ecdsa"))) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.20") (d #t) (k 0)) (d (n "signatory-secp256k1") (r "^0.20") (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^3") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "133cmjghcr4gy973vjs41qb79w1x18lcsq8h6lb57ya51yb280bw")))

(define-public crate-tendermint-0.14.1 (c (n "tendermint") (v "0.14.1") (d (list (d (n "anomaly") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.3") (d #t) (k 0)) (d (n "prost-amino") (r "^0.6") (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.6") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signatory") (r "^0.20") (f (quote ("ed25519" "ecdsa"))) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.20") (d #t) (k 0)) (d (n "signatory-secp256k1") (r "^0.20") (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^3") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "12pn5v6mkgp3n7dckcvfrgbywhwjyzgymjzl96cyz8v0l671pypw")))

(define-public crate-tendermint-0.15.0 (c (n "tendermint") (v "0.15.0") (d (list (d (n "anomaly") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.3") (d #t) (k 0)) (d (n "prost-amino") (r "^0.6") (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.6") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signatory") (r "^0.20") (f (quote ("ed25519" "ecdsa"))) (d #t) (k 0)) (d (n "signatory-dalek") (r "^0.20") (d #t) (k 0)) (d (n "signatory-secp256k1") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^3") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "098pawz8k7lh0j7m7flkkcgnfwqfma7hijflbv8vqf1pfywj0f9v") (f (quote (("secp256k1" "signatory-secp256k1" "ripemd160"))))))

(define-public crate-tendermint-0.16.0 (c (n "tendermint") (v "0.16.0") (d (list (d (n "anomaly") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ed25519") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "k256") (r "^0.4") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3") (d #t) (k 0)) (d (n "prost-amino") (r "^0.6") (d #t) (k 0)) (d (n "prost-amino-derive") (r "^0.6") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tai64") (r "^3") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0zmjjmi901n8s2p5lfdw033yhrayyk9d0ahi8girs12xzbbpypml") (f (quote (("secp256k1" "k256" "ripemd160"))))))

(define-public crate-tendermint-0.17.0-rc1 (c (n "tendermint") (v "0.17.0-rc1") (d (list (d (n "anomaly") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ed25519") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "k256") (r "^0.5") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.3") (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tendermint-proto") (r "^0.17.0-rc1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "00a8iqyj0r6vak3zq12mj1615dvy1796ciay73l1x7gwidayfrpc") (f (quote (("secp256k1" "k256" "ripemd160"))))))

(define-public crate-tendermint-0.17.0-rc2 (c (n "tendermint") (v "0.17.0-rc2") (d (list (d (n "anomaly") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ed25519") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "k256") (r "^0.5") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3") (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tendermint-proto") (r "^0.17.0-rc2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0wxq40kwm24dg56swa5gzjlqpjsilsfd9z3v7cxm9rnb4y8j4gsp") (f (quote (("secp256k1" "k256" "ripemd160"))))))

(define-public crate-tendermint-0.17.0-rc3 (c (n "tendermint") (v "0.17.0-rc3") (d (list (d (n "anomaly") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ed25519") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "k256") (r "^0.5") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3") (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tendermint-proto") (r "^0.17.0-rc3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0108qy1jpaggmh80klr12gvvqgndwywmsiz2d1gy2sjg1vcp7726") (f (quote (("secp256k1" "k256" "ripemd160"))))))

(define-public crate-tendermint-0.17.0 (c (n "tendermint") (v "0.17.0") (d (list (d (n "anomaly") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ed25519") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3") (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tendermint-proto") (r "^0.17.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1s3lakmhxj71bq4hngc9fww902zw40l78vynyihyvmrfqjadc05p") (f (quote (("secp256k1" "k256" "ripemd160"))))))

(define-public crate-tendermint-0.17.1 (c (n "tendermint") (v "0.17.1") (d (list (d (n "anomaly") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ed25519") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3") (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tendermint-proto") (r "^0.17.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1b1ifbjclbdfknd2mhhj84vvlgypgnwmcxkbd4qxra022m44pkny") (f (quote (("secp256k1" "k256" "ripemd160"))))))

(define-public crate-tendermint-0.18.0 (c (n "tendermint") (v "0.18.0") (d (list (d (n "anomaly") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ed25519") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3") (d #t) (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tendermint-proto") (r "^0.18.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1ic7yi7cr69brvg70injnw2gsyir4a8k0i3d5gz08nvk80cb6d8k") (f (quote (("secp256k1" "k256" "ripemd160"))))))

(define-public crate-tendermint-0.18.1 (c (n "tendermint") (v "0.18.1") (d (list (d (n "anomaly") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ed25519") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3") (d #t) (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tendermint-proto") (r "^0.18.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "16bpqb9grf06m5janid4f67caffipljb8prcww7sa2yq8w2cin5i") (f (quote (("secp256k1" "k256" "ripemd160"))))))

(define-public crate-tendermint-0.19.0 (c (n "tendermint") (v "0.19.0") (d (list (d (n "anomaly") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ed25519") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "funty") (r "=1.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tendermint-proto") (r "^0.19.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1dli2dh8fqlf9wi7gla43awhsirwdxwngc5gz33gdik5ivr8c543") (f (quote (("secp256k1" "k256" "ripemd160"))))))

(define-public crate-tendermint-0.20.0 (c (n "tendermint") (v "0.20.0") (d (list (d (n "anomaly") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ed25519") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "k256") (r "^0.9") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tendermint-proto") (r "^0.20.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0aql2mimdqwj8ia38w156y5dk0s9ifs0a20khix1qpifv7sk1lz7") (f (quote (("secp256k1" "k256" "ripemd160"))))))

(define-public crate-tendermint-0.21.0 (c (n "tendermint") (v "0.21.0") (d (list (d (n "anomaly") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ed25519") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "k256") (r "^0.9") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tendermint-proto") (r "^0.21.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "06ck9qr1pkkxrz7nn9iafrmmdfp9cjz46bp92ik924mnb67q0lh7") (f (quote (("secp256k1" "k256" "ripemd160"))))))

(define-public crate-tendermint-0.22.0 (c (n "tendermint") (v "0.22.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ed25519") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "flex-error") (r "^0.4.1") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "k256") (r "^0.9") (f (quote ("ecdsa"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (d #t) (k 0)) (d (n "tendermint-proto") (r "^0.22.0") (d #t) (k 0)) (d (n "time") (r "^0.1.40") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1qfpgc15x81gpkbb5mnrmsxy3d7wkaqwzf80n3rqpg9vrkgm8lzs") (f (quote (("std" "flex-error/std") ("secp256k1" "k256" "ripemd160") ("eyre_tracer" "flex-error/eyre_tracer") ("default" "std" "eyre_tracer"))))))

(define-public crate-tendermint-0.23.0-internal (c (n "tendermint") (v "0.23.0-internal") (d (list (d (n "async-trait") (r "^0.1") (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (k 0)) (d (n "ed25519") (r "^1") (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("u64_backend"))) (k 0)) (d (n "flex-error") (r "^0.4.3") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.9") (f (quote ("ecdsa" "sha256"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "prost") (r "^0.8.1") (k 0) (p "informalsystems-prost")) (d (n "prost-types") (r "^0.8.1") (k 0) (p "informalsystems-prost-types")) (d (n "ripemd160") (r "^0.9") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.23.0-internal") (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "0wlq42gdkmbp2przk0c14wn321ddmvqg1pv5r0fwgxkib23b1qjd") (f (quote (("std" "flex-error/std") ("secp256k1" "k256" "ripemd160") ("eyre_tracer" "flex-error/eyre_tracer") ("default" "std" "eyre_tracer"))))))

(define-public crate-tendermint-0.23.0 (c (n "tendermint") (v "0.23.0") (d (list (d (n "async-trait") (r "^0.1") (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (k 0)) (d (n "ed25519") (r "^1") (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("u64_backend"))) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.9") (f (quote ("ecdsa" "sha256"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.9") (k 0)) (d (n "prost-types") (r "^0.9") (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.23.0") (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "0lincsvpp19r0aadqi09j7yi5r03cmbd2bjsndxb3v3b4fqcvlah") (f (quote (("secp256k1" "k256" "ripemd160") ("default" "flex-error/std" "flex-error/eyre_tracer"))))))

(define-public crate-tendermint-0.23.1 (c (n "tendermint") (v "0.23.1") (d (list (d (n "async-trait") (r "^0.1") (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (k 0)) (d (n "ed25519") (r "^1") (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("u64_backend"))) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.9") (f (quote ("ecdsa" "sha256"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.9") (k 0)) (d (n "prost-types") (r "^0.9") (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.23.1") (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "06w498pf12j3f9aab9rp373ndq75vfkh1cwwh3gcg7g8y0wh7202") (f (quote (("secp256k1" "k256" "ripemd160") ("default" "flex-error/std" "flex-error/eyre_tracer"))))))

(define-public crate-tendermint-0.23.2 (c (n "tendermint") (v "0.23.2") (d (list (d (n "async-trait") (r "^0.1") (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "ed25519") (r "^1.3") (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("u64_backend"))) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.9") (f (quote ("ecdsa" "sha256"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.9") (k 0)) (d (n "prost-types") (r "^0.9") (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.23.2") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "0ad3b2mzpkbyilg5b59y8a4pqly85sxw52fbgpwviybln3mgs5ch") (f (quote (("secp256k1" "k256" "ripemd160") ("default" "flex-error/std" "flex-error/eyre_tracer"))))))

(define-public crate-tendermint-0.23.3 (c (n "tendermint") (v "0.23.3") (d (list (d (n "async-trait") (r "^0.1") (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "ed25519") (r "^1.3") (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("u64_backend"))) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.10") (f (quote ("ecdsa" "sha256"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.9") (k 0)) (d (n "prost-types") (r "^0.9") (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.23.3") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "1f80b25k9fp6v1wz8p804c5hj1w6knf9iw410l6madndirmnivx9") (f (quote (("secp256k1" "k256" "ripemd160") ("default" "flex-error/std" "flex-error/eyre_tracer"))))))

(define-public crate-tendermint-0.23.4 (c (n "tendermint") (v "0.23.4") (d (list (d (n "async-trait") (r "^0.1") (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "ed25519") (r "^1.3") (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("u64_backend"))) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.10") (f (quote ("ecdsa" "sha256"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.9") (k 0)) (d (n "prost-types") (r "^0.9") (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.23.4") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "1wwc4wfiyzbfifwxr9d0mpkvf2m9vgj3z0pzw16akys7jir84blx") (f (quote (("secp256k1" "k256" "ripemd160") ("default" "flex-error/std" "flex-error/eyre_tracer"))))))

(define-public crate-tendermint-0.23.5 (c (n "tendermint") (v "0.23.5") (d (list (d (n "async-trait") (r "^0.1") (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "ed25519") (r "^1.3") (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("u64_backend"))) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.10") (f (quote ("ecdsa" "sha256"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.9") (k 0)) (d (n "prost-types") (r "^0.9") (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.23.5") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "1czpzww5yns43n59ypac45qwy3nl4hw8kx76dnnhwh3gcg5m10fz") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd160") ("default" "std") ("clock" "time/std"))))))

(define-public crate-tendermint-0.24.0-pre.1 (c (n "tendermint") (v "0.24.0-pre.1") (d (list (d (n "async-trait") (r "^0.1") (k 0)) (d (n "bytes") (r "^1.0") (f (quote ("serde"))) (k 0)) (d (n "ed25519") (r "^1.3") (k 0)) (d (n "ed25519-consensus") (r "^1.2") (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.10") (f (quote ("ecdsa" "sha256"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.9") (k 0)) (d (n "prost-types") (r "^0.9") (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.24.0-pre.1") (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "07xfrr10sq0k0vs3gbm42l55w8wp1acjxcpyqgq1g2b795cv730x") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd160") ("default" "std") ("clock" "time/std"))))))

(define-public crate-tendermint-0.23.6 (c (n "tendermint") (v "0.23.6") (d (list (d (n "async-trait") (r "^0.1") (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "ed25519") (r "^1.3") (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("u64_backend"))) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.10") (f (quote ("ecdsa" "sha256"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.9") (k 0)) (d (n "prost-types") (r "^0.9") (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.23.6") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "0hxi1ks1s63l858bisiwgmg0bx8vhcxm5wabgsq5ay98vcbxd8qn") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd160") ("default" "std") ("clock" "time/std"))))))

(define-public crate-tendermint-0.23.7 (c (n "tendermint") (v "0.23.7") (d (list (d (n "async-trait") (r "^0.1") (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "ed25519") (r "^1.3") (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("u64_backend"))) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.10") (f (quote ("ecdsa" "sha256"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.10") (k 0)) (d (n "prost-types") (r "^0.10") (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.23.7") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "0jbrmyxa3lbk9vz37a759fx4j5fcr3xyffzi6iiv9lpd9px83a1w") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd160") ("default" "std") ("clock" "time/std"))))))

(define-public crate-tendermint-0.24.0-pre.2 (c (n "tendermint") (v "0.24.0-pre.2") (d (list (d (n "async-trait") (r "^0.1") (k 0)) (d (n "bytes") (r "^1.0") (f (quote ("serde"))) (k 0)) (d (n "ed25519") (r "^1.3") (k 0)) (d (n "ed25519-consensus") (r "^1.2") (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.10") (f (quote ("ecdsa" "sha256"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.10") (k 0)) (d (n "prost-types") (r "^0.10") (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.24.0-pre.2") (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "014dwnm8m7dr2w6sdfj4mqprjfjyykc9972x1k52nxzvpl8z88f3") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd160") ("default" "std") ("clock" "time/std"))))))

(define-public crate-tendermint-0.23.8-pre.1 (c (n "tendermint") (v "0.23.8-pre.1") (d (list (d (n "async-trait") (r "^0.1") (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "ed25519") (r "^1.3") (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("u64_backend"))) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.10") (f (quote ("ecdsa" "sha256"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.10") (k 0)) (d (n "prost-types") (r "^0.10") (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1.2") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.23.8-pre.1") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "1ai8yvqsgcn4xbb2k9fpa6g65sxaj9l10in36rxfpra1wflg4g01") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd160") ("default" "std") ("clock" "time/std"))))))

(define-public crate-tendermint-0.23.8 (c (n "tendermint") (v "0.23.8") (d (list (d (n "async-trait") (r "^0.1") (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "ed25519") (r "^1.3") (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("u64_backend"))) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.11") (f (quote ("ecdsa" "sha256"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.10") (k 0)) (d (n "prost-types") (r "^0.10") (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.23.8") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "1n2a8n525jaqqzn19x408b0vv84yv7dmj2hf1pmhmfk60f7536d1") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd160") ("default" "std") ("clock" "time/std"))))))

(define-public crate-tendermint-0.23.9 (c (n "tendermint") (v "0.23.9") (d (list (d (n "async-trait") (r "^0.1") (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "ed25519") (r "^1.3") (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("u64_backend"))) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.11") (f (quote ("ecdsa" "sha256"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-types") (r "^0.11") (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.23.9") (k 0)) (d (n "time") (r ">=0.3, <0.3.12") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "1x2ig3c9kgmf9c3hfz7g2c1qm6kvnz0a0wqjgqswvszfilbq4zs6") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd160") ("default" "std") ("clock" "time/std"))))))

(define-public crate-tendermint-0.25.0 (c (n "tendermint") (v "0.25.0") (d (list (d (n "async-trait") (r "^0.1") (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "ed25519") (r "^1.3") (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("u64_backend"))) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.11") (f (quote ("ecdsa" "sha256"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-types") (r "^0.11") (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.25.0") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "1nf5704z9jjh8hj8y2ildpicbvnwqblacbp996s82szfg808xcd8") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd160") ("default" "std") ("clock" "time/std"))))))

(define-public crate-tendermint-0.26.0 (c (n "tendermint") (v "0.26.0") (d (list (d (n "async-trait") (r "^0.1") (k 0)) (d (n "bytes") (r "^1.0") (f (quote ("serde"))) (k 0)) (d (n "ed25519") (r "^1.3") (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("u64_backend"))) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.11") (f (quote ("ecdsa" "sha256"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-types") (r "^0.11") (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.26.0") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "0wv0nb0fwjpnvy48x4mspy12mvbqbvpdpw4ns6kinlqvxk8d58ds") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd160") ("default" "std") ("clock" "time/std"))))))

(define-public crate-tendermint-0.27.0 (c (n "tendermint") (v "0.27.0") (d (list (d (n "bytes") (r "^1.0") (f (quote ("serde"))) (k 0)) (d (n "ed25519") (r "^1.3") (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("u64_backend"))) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.11") (f (quote ("ecdsa" "sha256"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-types") (r "^0.11") (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.27.0") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "0xqfdm36fr708k5a8zwfk7nh0g4dbqxcd4dw70y1m7xw570zkdpf") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd160") ("default" "std") ("clock" "time/std"))))))

(define-public crate-tendermint-0.28.0 (c (n "tendermint") (v "0.28.0") (d (list (d (n "bytes") (r "^1.0") (f (quote ("serde"))) (k 0)) (d (n "ed25519") (r "^1.3") (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("u64_backend"))) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.11") (f (quote ("ecdsa" "sha256"))) (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-types") (r "^0.11") (k 0)) (d (n "ripemd160") (r "^0.9") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "signature") (r "^1") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.28.0") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "0wjdg0mbp53m0v431ilamryzvp3fwjd1aclsdw6z29b82j1c0665") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd160") ("default" "std") ("clock" "time/std"))))))

(define-public crate-tendermint-0.29.0 (c (n "tendermint") (v "0.29.0") (d (list (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (k 0)) (d (n "digest") (r "^0.10") (k 0)) (d (n "ed25519") (r "^1.5") (k 0)) (d (n "ed25519-consensus") (r "^2") (o #t) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.11") (f (quote ("ecdsa"))) (o #t) (k 0)) (d (n "k256") (r "^0.11") (f (quote ("ecdsa"))) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-types") (r "^0.11") (k 0)) (d (n "ripemd") (r "^0.1.3") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "signature") (r "^1") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.29.0") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "0hah4f7wrgj3g0sh5dig9vfrzgyx9g782zn3nx0kgbr5afmn3dhb") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd") ("rust-crypto" "sha2" "ed25519-consensus") ("default" "std" "rust-crypto") ("clock" "time/std"))))))

(define-public crate-tendermint-0.29.1 (c (n "tendermint") (v "0.29.1") (d (list (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (k 0)) (d (n "digest") (r "^0.10") (k 0)) (d (n "ed25519") (r "^1.5") (k 0)) (d (n "ed25519-consensus") (r "^2") (o #t) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.11") (f (quote ("ecdsa"))) (o #t) (k 0)) (d (n "k256") (r "^0.11") (f (quote ("ecdsa"))) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-types") (r "^0.11") (k 0)) (d (n "ripemd") (r "^0.1.3") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "signature") (r "^1") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.29.1") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "1svm1hd6pkkznnnqn47400nfzbrldyji0k69vyf7cxvm8j2kr9fd") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd") ("rust-crypto" "sha2" "ed25519-consensus") ("default" "std" "rust-crypto") ("clock" "time/std"))))))

(define-public crate-tendermint-0.30.0 (c (n "tendermint") (v "0.30.0") (d (list (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (k 0)) (d (n "digest") (r "^0.10") (k 0)) (d (n "ed25519") (r "^1.5") (k 0)) (d (n "ed25519-consensus") (r "^2") (o #t) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.11") (f (quote ("ecdsa"))) (o #t) (k 0)) (d (n "k256") (r "^0.11") (f (quote ("ecdsa"))) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-types") (r "^0.11") (k 0)) (d (n "ripemd") (r "^0.1.3") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "signature") (r "^1") (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.30.0") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "0p266w2170gz3axbkm1kqx8f4v66wijyg733y7q5299m68g3q35r") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd") ("rust-crypto" "sha2" "ed25519-consensus") ("default" "std" "rust-crypto") ("clock" "time/std"))))))

(define-public crate-tendermint-0.31.0 (c (n "tendermint") (v "0.31.0") (d (list (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (k 0)) (d (n "digest") (r "^0.10") (k 0)) (d (n "ed25519") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "ed25519-consensus") (r "^2") (o #t) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.13") (f (quote ("alloc" "ecdsa"))) (o #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-types") (r "^0.11") (k 0)) (d (n "ripemd") (r "^0.1.3") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "signature") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.31.0") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "0mvhv739d5f918yvsxhndm46jij5yghp0jrk90i4cmi9d1pk9gbf") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd") ("rust-crypto" "sha2" "ed25519-consensus") ("default" "std" "rust-crypto") ("clock" "time/std"))))))

(define-public crate-tendermint-0.31.1 (c (n "tendermint") (v "0.31.1") (d (list (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (k 0)) (d (n "digest") (r "^0.10") (k 0)) (d (n "ed25519") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "ed25519-consensus") (r "^2") (o #t) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.13") (f (quote ("alloc" "ecdsa"))) (o #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-types") (r "^0.11") (k 0)) (d (n "ripemd") (r "^0.1.3") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "signature") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.31.1") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "05pg2g4bq414lhq42q0pcda35fhjb5fmil3bicdn58j4dkdqpdd1") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd") ("rust-crypto" "sha2" "ed25519-consensus") ("default" "std" "rust-crypto") ("clock" "time/std"))))))

(define-public crate-tendermint-0.32.0 (c (n "tendermint") (v "0.32.0") (d (list (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (k 0)) (d (n "digest") (r "^0.10") (k 0)) (d (n "ed25519") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "ed25519-consensus") (r "^2") (o #t) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.13") (f (quote ("alloc" "ecdsa"))) (o #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-types") (r "^0.11") (k 0)) (d (n "ripemd") (r "^0.1.3") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "signature") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.32.0") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "01d7i07ql9vay81bjcsqagif2kyn14fy3yigd2mrg002bfrccvm4") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd") ("rust-crypto" "sha2" "ed25519-consensus") ("default" "std" "rust-crypto") ("clock" "time/std"))))))

(define-public crate-tendermint-0.32.1 (c (n "tendermint") (v "0.32.1") (d (list (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (k 0)) (d (n "digest") (r "^0.10") (k 0)) (d (n "ed25519") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "ed25519-consensus") (r "^2") (o #t) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.13") (f (quote ("alloc" "ecdsa"))) (o #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-types") (r "^0.11") (k 0)) (d (n "ripemd") (r "^0.1.3") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "signature") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.32.1") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "1gkkidgdcmwvxck1zgkvayjc07nngxh9jvns0a7d2896rkb23dka") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd") ("rust-crypto" "sha2" "ed25519-consensus") ("default" "std" "rust-crypto") ("clock" "time/std"))))))

(define-public crate-tendermint-0.32.2 (c (n "tendermint") (v "0.32.2") (d (list (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (k 0)) (d (n "digest") (r "^0.10") (k 0)) (d (n "ed25519") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "ed25519-consensus") (r "^2") (o #t) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.13") (f (quote ("alloc" "ecdsa"))) (o #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-types") (r "^0.11") (k 0)) (d (n "ripemd") (r "^0.1.3") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "signature") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.32.2") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "1w67p9yjzj9m47zazm3al5cx2y65rdaxv3kz6f14flkqrw2ps2iz") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd") ("rust-crypto" "sha2" "ed25519-consensus") ("default" "std" "rust-crypto") ("clock" "time/std"))))))

(define-public crate-tendermint-0.33.0 (c (n "tendermint") (v "0.33.0") (d (list (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (k 0)) (d (n "digest") (r "^0.10") (k 0)) (d (n "ed25519") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "ed25519-consensus") (r "^2") (o #t) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.13") (f (quote ("alloc" "ecdsa"))) (o #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-types") (r "^0.11") (k 0)) (d (n "ripemd") (r "^0.1.3") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "signature") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.33.0") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "08c3pv0i8jz6czqv6zy3i721n612xh0l7g5yrgmw9gnn0bdm1mgn") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd") ("rust-crypto" "sha2" "ed25519-consensus") ("default" "std" "rust-crypto") ("clock" "time/std"))))))

(define-public crate-tendermint-0.33.1 (c (n "tendermint") (v "0.33.1") (d (list (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (k 0)) (d (n "digest") (r "^0.10") (k 0)) (d (n "ed25519") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "ed25519-consensus") (r "^2") (o #t) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.13") (f (quote ("alloc" "ecdsa"))) (o #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-types") (r "^0.11") (k 0)) (d (n "ripemd") (r "^0.1.3") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "signature") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.33.1") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "0sxhl3jbl47dznbbg7ab1gmbaz4xm2iq8rg2phldgfhkdsxwv4y2") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd") ("rust-crypto" "sha2" "ed25519-consensus") ("default" "std" "rust-crypto") ("clock" "time/std"))))))

(define-public crate-tendermint-0.33.2 (c (n "tendermint") (v "0.33.2") (d (list (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (k 0)) (d (n "digest") (r "^0.10") (k 0)) (d (n "ed25519") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "ed25519-consensus") (r "^2") (o #t) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.13") (f (quote ("alloc" "ecdsa"))) (o #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.11") (k 0)) (d (n "prost-types") (r "^0.11") (k 0)) (d (n "ripemd") (r "^0.1.3") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "signature") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.33.2") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "0injxkx9k5p1fdfygk73lvrc03n4vcb29hhl31biaxsas97zwdbw") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd") ("rust-crypto" "sha2" "ed25519-consensus") ("default" "std" "rust-crypto") ("clock" "time/std"))))))

(define-public crate-tendermint-0.34.0 (c (n "tendermint") (v "0.34.0") (d (list (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (k 0)) (d (n "digest") (r "^0.10") (k 0)) (d (n "ed25519") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "ed25519-consensus") (r "^2") (o #t) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.13") (f (quote ("alloc" "ecdsa"))) (o #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.12") (k 0)) (d (n "prost-types") (r "^0.12") (k 0)) (d (n "ripemd") (r "^0.1.3") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "signature") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.34.0") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "12d70g7iszra15qmf9dsq84hlba72n8sb6vswa7592vwcvx988mw") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd") ("rust-crypto" "sha2" "ed25519-consensus") ("default" "std" "rust-crypto") ("clock" "time/std"))))))

(define-public crate-tendermint-0.34.1 (c (n "tendermint") (v "0.34.1") (d (list (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (k 0)) (d (n "digest") (r "^0.10") (k 0)) (d (n "ed25519") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "ed25519-consensus") (r "^2") (o #t) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.13") (f (quote ("alloc" "ecdsa"))) (o #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.12") (k 0)) (d (n "prost-types") (r "^0.12") (k 0)) (d (n "ripemd") (r "^0.1.3") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "signature") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.34.1") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "0jx0l5849lzxp8c7spzr7xhacsm7sraa0pb1mi4svlnh4l58zaqm") (f (quote (("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd") ("rust-crypto" "sha2" "ed25519-consensus") ("default" "std" "rust-crypto") ("clock" "time/std"))))))

(define-public crate-tendermint-0.35.0 (c (n "tendermint") (v "0.35.0") (d (list (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (k 0)) (d (n "digest") (r "^0.10") (k 0)) (d (n "ed25519") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "ed25519-consensus") (r "^2") (o #t) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.13") (f (quote ("alloc" "ecdsa"))) (o #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.12") (k 0)) (d (n "prost-types") (r "^0.12") (k 0)) (d (n "ripemd") (r "^0.1.3") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "signature") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.35.0") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "00k83acba6s4v8cq9rn0bkz9ll8jbbnj6bi41apw99yh0l0s3y23") (f (quote (("std" "flex-error/std" "clock") ("secp256k1" "k256" "ripemd") ("rust-crypto" "sha2" "ed25519-consensus") ("default" "std" "rust-crypto") ("clock" "time/std"))))))

(define-public crate-tendermint-0.36.0 (c (n "tendermint") (v "0.36.0") (d (list (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (k 0)) (d (n "digest") (r "^0.10") (k 0)) (d (n "ed25519") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "ed25519-consensus") (r "^2") (o #t) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "k256") (r "^0.13") (f (quote ("alloc" "ecdsa"))) (o #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.12") (k 0)) (d (n "prost-types") (r "^0.12") (k 0)) (d (n "ripemd") (r "^0.1.3") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "signature") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "tendermint-proto") (r "^0.36.0") (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "13dngy857jwpxdf15mn7sh27hk9psfwbandd968l5hr4xkkall4b") (f (quote (("std" "flex-error/std" "clock") ("secp256k1" "k256" "ripemd") ("rust-crypto" "sha2" "ed25519-consensus") ("default" "std" "rust-crypto") ("clock" "time/std"))))))

