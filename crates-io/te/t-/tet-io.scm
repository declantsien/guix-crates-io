(define-module (crates-io te t- tet-io) #:use-module (crates-io))

(define-public crate-tet-io-0.0.0 (c (n "tet-io") (v "0.0.0") (h "1hydljab7mx8ji6bk1gy2fp2gl38v8mmxsbyg86j15f82fd89k41") (y #t)))

(define-public crate-tet-io-2.0.1 (c (n "tet-io") (v "2.0.1") (d (list (d (n "codec") (r "^2.0.1") (k 0) (p "tetsy-scale-codec")) (d (n "externalities") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("thread-pool"))) (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "tet-core") (r "^2.0.1") (k 0)) (d (n "tetcore-std") (r "^2.0.1") (k 0)) (d (n "tetcore-tracing") (r "^2.0.1") (k 0)) (d (n "tetcore-wasm-interface") (r "^2.0.1") (k 0)) (d (n "tetsy-hash-db") (r "^0.15.2") (k 0)) (d (n "tp-keystore") (r "^0.8.0") (o #t) (k 0)) (d (n "tp-runtime-interface") (r "^2.0.1") (k 0)) (d (n "tp-state-machine") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "tp-trie") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.22") (k 0)) (d (n "tracing-core") (r "^0.1.17") (k 0)))) (h "12jj74rd3cj2igz2lrirsf12mw7pjpw4j4nxxa4iygagydpyn29c") (f (quote (("with-tracing" "tetcore-tracing/with-tracing") ("std" "tet-core/std" "tp-keystore" "codec/std" "tetcore-std/std" "tetsy-hash-db/std" "tp-trie" "tp-state-machine" "libsecp256k1" "tp-runtime-interface/std" "externalities" "tetcore-wasm-interface/std" "tetcore-tracing/std" "tracing/std" "tracing-core/std" "log" "futures" "parking_lot") ("disable_panic_handler") ("disable_oom") ("disable_allocator") ("default" "std"))))))

(define-public crate-tet-io-2.0.2 (c (n "tet-io") (v "2.0.2") (d (list (d (n "codec") (r "^2.0.1") (k 0) (p "tetsy-scale-codec")) (d (n "externalities") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("thread-pool"))) (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "tet-core") (r "^2.0.2") (k 0)) (d (n "tetcore-std") (r "^2.0.2") (k 0)) (d (n "tetcore-tracing") (r "^2.0.2") (k 0)) (d (n "tetcore-wasm-interface") (r "^2.0.2") (k 0)) (d (n "tetsy-hash-db") (r "^0.15.2") (k 0)) (d (n "tp-keystore") (r "^0.8.1") (o #t) (k 0)) (d (n "tp-runtime-interface") (r "^2.0.2") (k 0)) (d (n "tp-state-machine") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "tp-trie") (r "^2.0.2") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.22") (k 0)) (d (n "tracing-core") (r "^0.1.17") (k 0)))) (h "0nsfd7ny1k9plnnvj17cfkihm82w3zib7305a9wy1d9yd9qwska9") (f (quote (("with-tracing" "tetcore-tracing/with-tracing") ("std" "tet-core/std" "tp-keystore" "codec/std" "tetcore-std/std" "tetsy-hash-db/std" "tp-trie" "tp-state-machine" "libsecp256k1" "tp-runtime-interface/std" "externalities" "tetcore-wasm-interface/std" "tetcore-tracing/std" "tracing/std" "tracing-core/std" "log" "futures" "parking_lot") ("disable_panic_handler") ("disable_oom") ("disable_allocator") ("default" "std"))))))

(define-public crate-tet-io-2.1.2 (c (n "tet-io") (v "2.1.2") (d (list (d (n "codec") (r "^2.0.1") (k 0) (p "tetsy-scale-codec")) (d (n "externalities") (r "^2.1.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("thread-pool"))) (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "tet-core") (r "^2.1.2") (k 0)) (d (n "tetcore-std") (r "^2.1.2") (k 0)) (d (n "tetcore-tracing") (r "^2.1.2") (k 0)) (d (n "tetcore-wasm-interface") (r "^2.1.2") (k 0)) (d (n "tetsy-hash-db") (r "^0.15.2") (k 0)) (d (n "tp-keystore") (r "^2.1.2") (o #t) (k 0)) (d (n "tp-runtime-interface") (r "^2.1.2") (k 0)) (d (n "tp-state-machine") (r "^2.1.2") (o #t) (d #t) (k 0)) (d (n "tp-trie") (r "^2.1.2") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.22") (k 0)) (d (n "tracing-core") (r "^0.1.17") (k 0)))) (h "1f3hdjz9jmhr8j7gpy1caa4dd2wj70avi52gyqcy0zy311lnwdq5") (f (quote (("with-tracing" "tetcore-tracing/with-tracing") ("std" "tet-core/std" "tp-keystore" "tet-core/std" "codec/std" "tetcore-std/std" "tetsy-hash-db/std" "tp-trie" "tp-state-machine" "libsecp256k1" "tp-runtime-interface/std" "externalities" "tetcore-wasm-interface/std" "tetcore-tracing/std" "tracing/std" "tracing-core/std" "log" "futures" "parking_lot") ("disable_panic_handler") ("disable_oom") ("disable_allocator") ("default" "std"))))))

