(define-module (crates-io te xt text_ext) #:use-module (crates-io))

(define-public crate-text_ext-0.1.0 (c (n "text_ext") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arboard") (r "^3.2") (d #t) (k 0)) (d (n "derive-getters") (r "^0.2") (d #t) (k 0)) (d (n "device_query") (r "^1.1") (d #t) (k 0)) (d (n "enigo") (r "^0.0") (d #t) (k 0)) (d (n "fake") (r "^2.5") (f (quote ("dummy" "uuid"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("nightly" "deadlock_detection"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0awm1539sz3prqn7f795xd59m84zz9aq1d7davxm3ij5b2p97lqm")))

(define-public crate-text_ext-0.1.1 (c (n "text_ext") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arboard") (r "^3.2") (d #t) (k 0)) (d (n "derive-getters") (r "^0.2") (d #t) (k 0)) (d (n "device_query") (r "^1.1") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "enigo") (r "^0.0") (d #t) (k 0)) (d (n "fake") (r "^2.5") (f (quote ("dummy" "uuid"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("nightly" "deadlock_detection"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1kvca6y0i3gw3q9d28dp6yjamd8fqk0s7lgzzi3p2wnwsi2j7lpf")))

(define-public crate-text_ext-0.1.2 (c (n "text_ext") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arboard") (r "^3.2") (d #t) (k 0)) (d (n "derive-getters") (r "^0.2") (d #t) (k 0)) (d (n "device_query") (r "^1.1") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "enigo") (r "^0.0") (d #t) (k 0)) (d (n "fake") (r "^2.5") (f (quote ("dummy" "uuid"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("nightly" "deadlock_detection"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0251mn2lgyz2cs9hgwxkz4yq4rxvri8czlb8a33k1dhsc90jf9p8")))

