(define-module (crates-io te le telemetry-rust) #:use-module (crates-io))

(define-public crate-telemetry-rust-0.1.0 (c (n "telemetry-rust") (v "0.1.0") (d (list (d (n "axum-tracing-opentelemetry") (r "^0.9.0") (f (quote ("otlp" "zipkin"))) (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (k 0)))) (h "0rk0ckicnlvfhyw9clni5d2m0i9lq8c90shjikyjd8pxyfxc1szi")))

(define-public crate-telemetry-rust-0.1.1 (c (n "telemetry-rust") (v "0.1.1") (d (list (d (n "axum-tracing-opentelemetry") (r "^0.9.0") (f (quote ("otlp" "zipkin"))) (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (k 0)))) (h "0rds877wm4p53jj54zzlj9wnd62f183cddk7ia923raygs63vn9z")))

(define-public crate-telemetry-rust-0.2.0 (c (n "telemetry-rust") (v "0.2.0") (d (list (d (n "axum-tracing-opentelemetry") (r "^0.9.0") (f (quote ("otlp" "zipkin"))) (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (k 0)))) (h "1m1wjjx29wvlp42xvj7a1q8yfwjsz8v28n06jha48i5pjkj3h9zr")))

(define-public crate-telemetry-rust-0.2.1 (c (n "telemetry-rust") (v "0.2.1") (d (list (d (n "axum-tracing-opentelemetry") (r "^0.9.0") (f (quote ("otlp" "zipkin"))) (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (k 0)))) (h "1yz0r2zl79lz3w62wz520rk3q7xi27wk3g4rclrmnfgvia680jh5")))

(define-public crate-telemetry-rust-0.2.2 (c (n "telemetry-rust") (v "0.2.2") (d (list (d (n "axum-tracing-opentelemetry") (r "^0.10.0") (f (quote ("otlp" "zipkin"))) (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16") (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.19.0") (f (quote ("testing"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (k 0)))) (h "13m34165pxsrbv07g20g205z8gsmfvgh372xs7yqgzff8zyal9p2") (f (quote (("integration_test" "serde" "serde_json" "opentelemetry_api" "rand") ("full" "integration_test") ("default"))))))

(define-public crate-telemetry-rust-0.2.3 (c (n "telemetry-rust") (v "0.2.3") (d (list (d (n "axum-tracing-opentelemetry") (r "^0.10.0") (f (quote ("otlp" "zipkin"))) (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16") (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.19.0") (f (quote ("testing"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (k 0)))) (h "0cgdnka2yj599d3vgjj6iz6mscb07mlr7p2xnisq8zznb8plh81d") (f (quote (("integration_test" "serde" "serde_json" "opentelemetry_api" "rand") ("full" "integration_test") ("default"))))))

(define-public crate-telemetry-rust-0.2.4 (c (n "telemetry-rust") (v "0.2.4") (d (list (d (n "axum-tracing-opentelemetry") (r "^0.10.0") (f (quote ("otlp" "zipkin"))) (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16") (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.19.0") (f (quote ("testing"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (k 0)))) (h "0m0df34qa93n8nfl4mc9yvvgjxrgph3jnp52adj2qmjqndcd9vgl") (f (quote (("integration_test" "serde" "serde_json" "opentelemetry_api" "rand" "hyper") ("full" "integration_test") ("default"))))))

(define-public crate-telemetry-rust-0.2.5 (c (n "telemetry-rust") (v "0.2.5") (d (list (d (n "axum-tracing-opentelemetry") (r "^0.9.0") (f (quote ("otlp" "zipkin"))) (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16") (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.19.0") (f (quote ("testing"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (k 0)))) (h "1jyx2y0693ldghxayrlg92y8cknszvbwl29l5rxzj6lsks49j4nj") (f (quote (("integration_test" "serde" "serde_json" "opentelemetry_api" "rand" "hyper") ("full" "integration_test") ("default"))))))

(define-public crate-telemetry-rust-0.3.0 (c (n "telemetry-rust") (v "0.3.0") (d (list (d (n "axum-tracing-opentelemetry") (r "^0.9.0") (f (quote ("otlp" "zipkin"))) (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.16") (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.19.0") (f (quote ("testing"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (k 0)))) (h "1fg94kdmwcgcfslmd03ck25rvizmsmb3196q4x7yxjbw4kdg7f0y") (f (quote (("integration_test" "serde" "serde_json" "opentelemetry_api" "rand" "hyper") ("full" "integration_test") ("default"))))))

(define-public crate-telemetry-rust-1.0.0 (c (n "telemetry-rust") (v "1.0.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "axum") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^1.1.0") (f (quote ("http1" "client"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21.0") (f (quote ("trace"))) (k 0)) (d (n "opentelemetry-http") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("http-proto"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (f (quote ("testing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (k 0)) (d (n "pin-project-lite") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (d #t) (k 0)) (d (n "tracing-opentelemetry-instrumentation-sdk") (r "^0.16.0") (f (quote ("http"))) (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt" "json" "ansi"))) (k 0)))) (h "1mr5bi3594ivb6czrwslcxjyya27iykd187wlfaappy9r53lb9ar") (f (quote (("full" "integration_test") ("default" "otlp" "zipkin")))) (s 2) (e (quote (("zipkin" "dep:opentelemetry-zipkin") ("tracer" "dep:opentelemetry-semantic-conventions") ("otlp" "opentelemetry-otlp/http-proto" "tracer" "dep:tracing-opentelemetry-instrumentation-sdk") ("integration_test" "axum" "dep:serde" "dep:serde_json" "dep:opentelemetry_api" "dep:rand" "dep:hyper" "dep:http-body-util") ("axum" "dep:axum" "dep:tower" "dep:futures-util" "dep:pin-project-lite" "dep:tracing-opentelemetry-instrumentation-sdk"))))))

(define-public crate-telemetry-rust-1.0.1 (c (n "telemetry-rust") (v "1.0.1") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "axum") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^1.1.0") (f (quote ("http1" "client"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21.0") (f (quote ("trace"))) (k 0)) (d (n "opentelemetry-http") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("http-proto"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (f (quote ("testing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (k 0)) (d (n "pin-project-lite") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (d #t) (k 0)) (d (n "tracing-opentelemetry-instrumentation-sdk") (r "^0.16.0") (f (quote ("http"))) (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt" "json" "ansi"))) (k 0)))) (h "0dnj3h072plk6q7gxhvfxwnzmsmmzsa04lhc7y8vd7dg9vk0znpq") (f (quote (("full" "integration_test") ("default" "otlp" "zipkin")))) (s 2) (e (quote (("zipkin" "dep:opentelemetry-zipkin") ("tracer" "dep:opentelemetry-semantic-conventions") ("otlp" "opentelemetry-otlp/http-proto" "tracer" "dep:tracing-opentelemetry-instrumentation-sdk") ("integration_test" "axum" "dep:serde" "dep:serde_json" "dep:opentelemetry_api" "dep:rand" "dep:hyper" "dep:http-body-util") ("axum" "dep:axum" "dep:tower" "dep:futures-util" "dep:pin-project-lite" "dep:tracing-opentelemetry-instrumentation-sdk"))))))

(define-public crate-telemetry-rust-1.1.0 (c (n "telemetry-rust") (v "1.1.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "axum") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http1" "client"))) (o #t) (k 0)) (d (n "hyper-v1") (r "^1.1") (f (quote ("http1" "client"))) (o #t) (k 0) (p "hyper")) (d (n "opentelemetry") (r "^0.21.0") (f (quote ("trace"))) (k 0)) (d (n "opentelemetry-http") (r "^0.10.0") (f (quote ("hyper" "tokio"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("http-proto"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (f (quote ("testing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (k 0)) (d (n "pin-project-lite") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (d #t) (k 0)) (d (n "tracing-opentelemetry-instrumentation-sdk") (r "^0.16.0") (f (quote ("http"))) (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt" "json" "ansi"))) (k 0)))) (h "0qx4gkgyn6627nvxl95wh5k2nqij3z5irdqcfzf2zcq5hlc28cxq") (f (quote (("full" "test") ("default" "otlp" "zipkin")))) (s 2) (e (quote (("zipkin" "dep:opentelemetry-zipkin") ("tracer" "dep:opentelemetry-semantic-conventions") ("test" "axum" "dep:serde" "dep:serde_json" "dep:opentelemetry_api" "dep:rand" "dep:hyper") ("otlp" "opentelemetry-otlp/http-proto" "tracer" "dep:tracing-opentelemetry-instrumentation-sdk" "dep:opentelemetry-http" "dep:hyper") ("hyper-v1" "dep:hyper-v1" "dep:http-body-util") ("axum" "dep:axum" "dep:tower" "dep:futures-util" "dep:pin-project-lite" "dep:tracing-opentelemetry-instrumentation-sdk"))))))

(define-public crate-telemetry-rust-1.2.0 (c (n "telemetry-rust") (v "1.2.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "axum") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http1" "client"))) (o #t) (k 0)) (d (n "hyper-v1") (r "^1.1") (f (quote ("http1" "client"))) (o #t) (k 0) (p "hyper")) (d (n "opentelemetry") (r "^0.21.0") (f (quote ("trace"))) (k 0)) (d (n "opentelemetry-http") (r "^0.10.0") (f (quote ("hyper" "tokio"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("http-proto"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (f (quote ("testing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (k 0)) (d (n "pin-project-lite") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (d #t) (k 0)) (d (n "tracing-opentelemetry-instrumentation-sdk") (r "^0.16.0") (f (quote ("http"))) (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt" "json" "ansi"))) (k 0)))) (h "06rxaz4wzfnnpin7l3yl4qfa7cn3n8iqk05pzm12q7s9mapnznyl") (f (quote (("full" "test") ("default" "otlp" "zipkin")))) (s 2) (e (quote (("zipkin" "dep:opentelemetry-zipkin") ("tracer" "dep:opentelemetry-semantic-conventions") ("test" "axum" "dep:serde" "dep:serde_json" "dep:opentelemetry_api" "dep:rand" "dep:hyper") ("otlp" "opentelemetry-otlp/http-proto" "tracer" "dep:tracing-opentelemetry-instrumentation-sdk" "dep:opentelemetry-http" "dep:hyper") ("hyper-v1" "dep:hyper-v1" "dep:http-body-util") ("axum" "dep:axum" "dep:tower" "dep:futures-util" "dep:pin-project-lite" "dep:tracing-opentelemetry-instrumentation-sdk"))))))

(define-public crate-telemetry-rust-1.3.0 (c (n "telemetry-rust") (v "1.3.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "axum") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http1" "client"))) (k 0)) (d (n "hyper-v1") (r "^1.1") (f (quote ("http1" "client"))) (o #t) (k 0) (p "hyper")) (d (n "opentelemetry") (r "^0.21.0") (f (quote ("trace"))) (k 0)) (d (n "opentelemetry-http") (r "^0.10.0") (f (quote ("hyper" "tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("http-proto"))) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (f (quote ("testing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (k 0)) (d (n "pin-project-lite") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (d #t) (k 0)) (d (n "tracing-opentelemetry-instrumentation-sdk") (r "^0.16.0") (f (quote ("http"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt" "json" "ansi"))) (k 0)))) (h "1hhjq6czcbfx96ydv4m6yy6ar01g04ndxh6zmg6b2k0w9bhy3i2z") (f (quote (("full" "test") ("default" "zipkin")))) (s 2) (e (quote (("zipkin" "dep:opentelemetry-zipkin") ("test" "axum" "dep:serde" "dep:serde_json" "dep:opentelemetry_api" "dep:rand") ("hyper-v1" "dep:hyper-v1" "dep:http-body-util") ("axum" "dep:axum" "dep:tower" "dep:futures-util" "dep:pin-project-lite"))))))

(define-public crate-telemetry-rust-1.4.0 (c (n "telemetry-rust") (v "1.4.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "aws-types") (r "^1") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http1" "client"))) (k 0)) (d (n "hyper-v1") (r "^1.1") (f (quote ("http1" "client"))) (o #t) (k 0) (p "hyper")) (d (n "opentelemetry") (r "^0.21.0") (f (quote ("trace"))) (k 0)) (d (n "opentelemetry-http") (r "^0.10.0") (f (quote ("hyper" "tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("http-proto"))) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (f (quote ("testing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (k 0)) (d (n "pin-project-lite") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (d #t) (k 0)) (d (n "tracing-opentelemetry-instrumentation-sdk") (r "^0.16.0") (f (quote ("http"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt" "json" "ansi"))) (k 0)))) (h "1fgl1dcxq4xq1ax672w12yky9by3058dnynp6kx80f23plvnw0qm") (f (quote (("full" "aws" "test") ("default" "zipkin")))) (s 2) (e (quote (("zipkin" "dep:opentelemetry-zipkin") ("test" "axum" "dep:serde" "dep:serde_json" "dep:opentelemetry_api" "dep:rand") ("hyper-v1" "dep:hyper-v1" "dep:http-body-util") ("axum" "dep:axum" "dep:tower" "dep:futures-util" "dep:pin-project-lite") ("aws" "dep:aws-types"))))))

(define-public crate-telemetry-rust-1.5.0 (c (n "telemetry-rust") (v "1.5.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.77") (o #t) (d #t) (k 0)) (d (n "aws-types") (r "^1") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http1" "client"))) (k 0)) (d (n "hyper-v1") (r "^1.1") (f (quote ("http1" "client"))) (o #t) (k 0) (p "hyper")) (d (n "opentelemetry") (r "^0.21.0") (f (quote ("trace"))) (k 0)) (d (n "opentelemetry-http") (r "^0.10.0") (f (quote ("hyper" "tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("http-proto"))) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (f (quote ("testing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (k 0)) (d (n "pin-project-lite") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (d #t) (k 0)) (d (n "tracing-opentelemetry-instrumentation-sdk") (r "^0.16.0") (f (quote ("http"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt" "json" "ansi"))) (k 0)))) (h "1fjk0cal5g49rcvd4mzh56pis8rpfc7caj63fy0cmqs9j7qx8mh4") (f (quote (("full" "aws" "test") ("default" "zipkin") ("aws" "aws-span" "aws-instrumentation")))) (s 2) (e (quote (("zipkin" "dep:opentelemetry-zipkin") ("test" "axum" "dep:serde" "dep:serde_json" "dep:opentelemetry_api" "dep:rand") ("hyper-v1" "dep:hyper-v1" "dep:http-body-util") ("axum" "dep:axum" "dep:tower" "dep:futures-util" "dep:pin-project-lite") ("aws-span" "dep:aws-types") ("aws-instrumentation" "dep:async-trait" "dep:futures-util"))))))

(define-public crate-telemetry-rust-2.0.0 (c (n "telemetry-rust") (v "2.0.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.77") (o #t) (d #t) (k 0)) (d (n "aws-types") (r "^1") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http1" "client"))) (k 0)) (d (n "hyper-v1") (r "^1.1") (f (quote ("http1" "client"))) (o #t) (k 0) (p "hyper")) (d (n "opentelemetry") (r "^0.21.0") (f (quote ("trace"))) (k 0)) (d (n "opentelemetry-http") (r "^0.10.0") (f (quote ("hyper" "tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("http-proto"))) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (f (quote ("testing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (k 0)) (d (n "paste") (r "^1.0.14") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (d #t) (k 0)) (d (n "tracing-opentelemetry-instrumentation-sdk") (r "^0.16.0") (f (quote ("http"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt" "json" "ansi"))) (k 0)))) (h "0xpzn0wzlfn3nmbnnsym9vvng18462qfbwk82zk4d354nz67szvc") (f (quote (("full" "aws" "test") ("default" "zipkin") ("aws" "aws-span" "aws-instrumentation")))) (s 2) (e (quote (("zipkin" "dep:opentelemetry-zipkin") ("test" "axum" "dep:serde" "dep:serde_json" "dep:opentelemetry_api" "dep:rand") ("hyper-v1" "dep:hyper-v1" "dep:http-body-util") ("axum" "dep:axum" "dep:tower" "dep:futures-util" "dep:pin-project-lite") ("aws-span" "dep:aws-types" "dep:paste") ("aws-instrumentation" "dep:async-trait" "dep:futures-util"))))))

(define-public crate-telemetry-rust-3.0.0 (c (n "telemetry-rust") (v "3.0.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.80") (o #t) (d #t) (k 0)) (d (n "aws-types") (r "^1") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7.5") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (k 0)) (d (n "http") (r "^1.1.0") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http1" "client"))) (k 0)) (d (n "hyper-v1") (r "^1.3") (f (quote ("http1" "client"))) (o #t) (k 0) (p "hyper")) (d (n "opentelemetry") (r "^0.22") (f (quote ("trace"))) (k 0)) (d (n "opentelemetry-http") (r "^0.11") (f (quote ("hyper" "tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15") (f (quote ("http-proto"))) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (f (quote ("testing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22") (f (quote ("rt-tokio"))) (k 0)) (d (n "paste") (r "^1.0.14") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.19") (d #t) (k 2)) (d (n "serde") (r "^1.0.198") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (o #t) (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (k 0)) (d (n "tracing-opentelemetry") (r "^0.23") (d #t) (k 0)) (d (n "tracing-opentelemetry-instrumentation-sdk") (r "^0.18") (f (quote ("http"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt" "json" "ansi"))) (k 0)))) (h "0p2a0n9p7aglq115rp4j4j0qkxv97qxdxabr10xghpzfshj8h68v") (f (quote (("full" "aws" "test") ("default" "zipkin") ("aws" "aws-span" "aws-instrumentation")))) (s 2) (e (quote (("zipkin" "dep:opentelemetry-zipkin") ("test" "axum" "dep:serde" "dep:serde_json" "dep:opentelemetry_api" "dep:rand") ("hyper-v1" "dep:hyper-v1" "dep:http-body-util") ("axum" "dep:axum" "dep:tower" "dep:futures-util" "dep:pin-project-lite") ("aws-span" "dep:aws-types" "dep:paste") ("aws-instrumentation" "dep:async-trait" "dep:futures-util"))))))

(define-public crate-telemetry-rust-3.1.0 (c (n "telemetry-rust") (v "3.1.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "aws-types") (r "^1") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7.5") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (k 0)) (d (n "http") (r "^1.1.0") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http1" "client"))) (k 0)) (d (n "hyper-v1") (r "^1.3") (f (quote ("http1" "client"))) (o #t) (k 0) (p "hyper")) (d (n "lambda_runtime") (r "^0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22") (f (quote ("trace"))) (k 0)) (d (n "opentelemetry-http") (r "^0.11") (f (quote ("hyper" "tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15") (f (quote ("http-proto"))) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.20.0") (f (quote ("testing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22") (f (quote ("rt-tokio"))) (k 0)) (d (n "paste") (r "^1.0.14") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.19") (d #t) (k 2)) (d (n "serde") (r "^1.0.200") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (d #t) (k 2)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (k 0)) (d (n "tracing-opentelemetry") (r "^0.23") (d #t) (k 0)) (d (n "tracing-opentelemetry-instrumentation-sdk") (r "^0.18") (f (quote ("http"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt" "json" "ansi"))) (k 0)))) (h "0l1v70qyx8xxrdp5k5xs6z7mv5671axflpsryn5pvcp5v25gpm9r") (f (quote (("full" "aws-full" "test") ("default" "zipkin") ("aws-instrumentation" "future") ("aws-full" "aws" "aws-lambda") ("aws" "aws-span" "aws-instrumentation")))) (s 2) (e (quote (("zipkin" "dep:opentelemetry-zipkin") ("test" "axum" "dep:serde" "dep:serde_json" "dep:opentelemetry_api" "dep:rand") ("hyper-v1" "dep:hyper-v1" "dep:http-body-util") ("future" "dep:pin-project-lite") ("axum" "dep:axum" "dep:tower" "dep:futures-util" "dep:pin-project-lite") ("aws-span" "dep:aws-types" "dep:paste") ("aws-lambda" "dep:tower" "dep:lambda_runtime" "future"))))))

