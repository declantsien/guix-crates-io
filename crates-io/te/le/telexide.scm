(define-module (crates-io te le telexide) #:use-module (crates-io))

(define-public crate-telexide-0.1.0 (c (n "telexide") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "paste") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "telexide_proc_macros") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "tcp" "time" "macros" "sync"))) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (d #t) (k 0)))) (h "1zncmm7g8l8z6mqin7ykc0y4pxma561fwwmdx9dnl9qzbpg7k1i9")))

(define-public crate-telexide-0.1.1 (c (n "telexide") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "paste") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "telexide_proc_macros") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "tcp" "time" "macros" "sync"))) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (d #t) (k 0)))) (h "1qhwll5dn25rj1rvh7s790m44yjanlfy55091gq4jlb31pqahjdb")))

(define-public crate-telexide-0.1.2 (c (n "telexide") (v "0.1.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "paste") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "telexide_proc_macros") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "tcp" "time" "macros" "sync" "signal"))) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (d #t) (k 0)))) (h "1jqk42n1v9lcz0q865nsl4bnb50lxg3p1njiydsimpakradas6pr")))

(define-public crate-telexide-0.1.3 (c (n "telexide") (v "0.1.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "paste") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "telexide_proc_macros") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "tcp" "time" "macros" "sync" "signal"))) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (d #t) (k 0)))) (h "0158p7ykqmvympkqfa0x65gfqydh7a72pawiklah8cjvaya9pjx5")))

(define-public crate-telexide-0.1.4 (c (n "telexide") (v "0.1.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "paste") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "telexide_proc_macros") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "tcp" "time" "macros" "sync" "signal"))) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (d #t) (k 0)))) (h "15haj8wpqddx4nf038zlskw9i62f5m4ydd4pglbbsq7yxxdapa8z")))

(define-public crate-telexide-0.1.5 (c (n "telexide") (v "0.1.5") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http2" "client" "server"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "paste") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "telexide_proc_macros") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("rt" "net" "time" "macros" "sync" "signal" "rt-multi-thread"))) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (d #t) (k 0)))) (h "110i3dqd31h03cih4ixrbpwg8d8z6wflk2gvpwb1i1jz2ysmz5f5")))

(define-public crate-telexide-0.1.6 (c (n "telexide") (v "0.1.6") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http2" "client" "server"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "telexide_proc_macros") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("rt" "net" "time" "macros" "sync" "signal" "rt-multi-thread"))) (d #t) (k 0)) (d (n "typemap") (r "^0.3") (d #t) (k 0)))) (h "0bs2829nr45ryvibsv9js0g7pp6bg7niw1vj6pgm6afqjhxkbfdb")))

(define-public crate-telexide-0.1.7 (c (n "telexide") (v "0.1.7") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http2" "client" "server"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "telexide_proc_macros") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("rt" "net" "time" "macros" "sync" "signal" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (f (quote ("tls-roots"))) (d #t) (k 0)) (d (n "typemap_rev") (r "^0.2") (d #t) (k 0)))) (h "17pgyci4w60vxpwhi2zm6c6s4y4cr2mhk2xq51fd3daxzzhd4zf2")))

(define-public crate-telexide-0.1.8 (c (n "telexide") (v "0.1.8") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http2" "client" "server"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "telexide_proc_macros") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("rt" "net" "time" "macros" "sync" "signal" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (f (quote ("tls-roots"))) (d #t) (k 0)) (d (n "typemap_rev") (r "^0.2") (d #t) (k 0)))) (h "07vkvr1z0664qvkqiq29vcsyfg717ljmzsrlcmbc1clw8m3l8lhx")))

(define-public crate-telexide-0.1.9 (c (n "telexide") (v "0.1.9") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http2" "client" "server"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "telexide_proc_macros") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("rt" "net" "time" "macros" "sync" "signal" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (f (quote ("tls-roots"))) (d #t) (k 0)) (d (n "typemap_rev") (r "^0.2") (d #t) (k 0)))) (h "1pj2dj02l93hsrjg70ymsfcyv921cxaq0shi1n7vfsnjq4glrh37")))

(define-public crate-telexide-0.1.10 (c (n "telexide") (v "0.1.10") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http2" "client" "server"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "telexide_proc_macros") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("rt" "net" "time" "macros" "sync" "signal" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (f (quote ("tls-roots"))) (d #t) (k 0)) (d (n "typemap_rev") (r "^0.3") (d #t) (k 0)))) (h "0f8igpay9qg3klq5inm1ggq3fdkclcsx6y11icdhh921dm578mcg")))

(define-public crate-telexide-0.1.11 (c (n "telexide") (v "0.1.11") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http2" "client" "server"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "telexide_proc_macros") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("rt" "net" "time" "macros" "sync" "signal" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (f (quote ("tls-roots"))) (d #t) (k 0)) (d (n "typemap_rev") (r "^0.3") (d #t) (k 0)))) (h "0xpnmhx17pvch0fs9mxrj3dd1idfh7msvjsf3prsxlyy61fsrskw")))

(define-public crate-telexide-0.1.12 (c (n "telexide") (v "0.1.12") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http2" "client" "server"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "telexide_proc_macros") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("rt" "net" "time" "macros" "sync" "signal" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (f (quote ("tls-roots"))) (d #t) (k 0)) (d (n "typemap_rev") (r "^0.3") (d #t) (k 0)))) (h "0g57x7ikz3v5kwsdzg8gnf4v170k6n52i9ia2gsbz6z2xzs5plvq")))

(define-public crate-telexide-0.1.13 (c (n "telexide") (v "0.1.13") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http2" "client" "server"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "telexide_proc_macros") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("rt" "net" "time" "macros" "sync" "signal" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (f (quote ("tls-roots"))) (d #t) (k 0)) (d (n "typemap_rev") (r "^0.3") (d #t) (k 0)))) (h "0hnzz9mjjwnrjx3xvl0v1smly48k0m123bb3gcbjvqnh3pbniq2l") (f (quote (("default" "rustls")))) (s 2) (e (quote (("rustls" "dep:hyper-rustls") ("native-tls" "dep:hyper-tls"))))))

(define-public crate-telexide-0.1.14 (c (n "telexide") (v "0.1.14") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http2" "client" "server"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "telexide_proc_macros") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("rt" "net" "time" "macros" "sync" "signal" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (f (quote ("tls-roots"))) (d #t) (k 0)) (d (n "typemap_rev") (r "^0.3") (d #t) (k 0)))) (h "04f9d7jmx9bs69qf3ax3cihn2wqbry9hnnwkygh41vgxwkag8ll3") (f (quote (("default" "rustls")))) (s 2) (e (quote (("rustls" "dep:hyper-rustls") ("native-tls" "dep:hyper-tls"))))))

(define-public crate-telexide-0.1.15 (c (n "telexide") (v "0.1.15") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http2" "client" "server"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "telexide_proc_macros") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("rt" "net" "time" "macros" "sync" "signal" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9") (f (quote ("tls-roots"))) (d #t) (k 0)) (d (n "typemap_rev") (r "^0.3") (d #t) (k 0)))) (h "0na9jiqpl6wb8kn6ldqqqpis78fzz45kwf489xaadyc6k3jyfq8s") (f (quote (("default" "rustls")))) (y #t) (s 2) (e (quote (("rustls" "dep:hyper-rustls") ("native-tls" "dep:hyper-tls"))))))

(define-public crate-telexide-0.1.16 (c (n "telexide") (v "0.1.16") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http2" "client" "server"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "telexide_proc_macros") (r "^0.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("rt" "net" "time" "macros" "sync" "signal" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9") (f (quote ("tls-roots"))) (d #t) (k 0)) (d (n "typemap_rev") (r "^0.3") (d #t) (k 0)))) (h "1ldqxpcdl4zpxsvhrd56wxdwri05fw5qf18jng0jqgxwsyij6dz6") (f (quote (("default" "rustls")))) (s 2) (e (quote (("rustls" "dep:hyper-rustls") ("native-tls" "dep:hyper-tls"))))))

(define-public crate-telexide-0.1.17 (c (n "telexide") (v "0.1.17") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "http") (r "^0.2.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http2" "client" "server"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "telexide_proc_macros") (r "^0.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("rt" "net" "time" "macros" "sync" "signal" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10") (f (quote ("tls-roots"))) (d #t) (k 0)) (d (n "typemap_rev") (r "^0.3") (d #t) (k 0)))) (h "14sfgv1r9k3kkdj6qay0v2544r0km928kanqs9zsqrnzssvqrwhk") (f (quote (("default" "rustls")))) (s 2) (e (quote (("rustls" "dep:hyper-rustls") ("native-tls" "dep:hyper-tls"))))))

