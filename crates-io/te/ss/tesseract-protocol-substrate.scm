(define-module (crates-io te ss tesseract-protocol-substrate) #:use-module (crates-io))

(define-public crate-tesseract-protocol-substrate-0.5.5 (c (n "tesseract-protocol-substrate") (v "0.5.5") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "pallet-contracts-primitives") (r "^8.0.0") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sp-weights") (r "^5.0.0") (d #t) (k 2)) (d (n "subxt") (r "^0.25.0") (d #t) (k 2)) (d (n "tesseract-one") (r "^0.5.5") (d #t) (k 0)) (d (n "tesseract-one") (r "^0.5.5") (f (quote ("transport-plt"))) (d #t) (k 2)) (d (n "tokio") (r "^1.20.1") (f (quote ("rt-multi-thread"))) (d #t) (k 2)))) (h "0m2r168aj0c8cvhfc1vxgiydkhwzj7nzw3lwbixywdb594a8d970") (f (quote (("service" "tesseract-one/service") ("client" "tesseract-one/client"))))))

(define-public crate-tesseract-protocol-substrate-0.5.6 (c (n "tesseract-protocol-substrate") (v "0.5.6") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "pallet-contracts-primitives") (r "^8.0.0") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "scale-info") (r "^2.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sp-weights") (r "^5.0.0") (d #t) (k 2)) (d (n "subxt") (r "^0.25.0") (d #t) (k 2)) (d (n "tesseract-one") (r "^0.5.6") (d #t) (k 0)) (d (n "tesseract-one") (r "^0.5.6") (f (quote ("transport-plt"))) (d #t) (k 2)) (d (n "tokio") (r "^1.20.1") (f (quote ("rt-multi-thread"))) (d #t) (k 2)))) (h "1h7rhv2h8039c82rggzb3c7l61609xsm89zaa58xs1834bv8ql5a") (f (quote (("service" "tesseract-one/service") ("client" "tesseract-one/client"))))))

