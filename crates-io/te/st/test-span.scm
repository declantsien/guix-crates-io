(define-module (crates-io te st test-span) #:use-module (crates-io))

(define-public crate-test-span-0.1.0 (c (n "test-span") (v "0.1.0") (d (list (d (n "daggy") (r "^0.8.0") (f (quote ("serde-1" "stable_dag"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.19") (d #t) (k 2)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5.4") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.131") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-span-macro") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.14.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.21") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (d #t) (k 0)))) (h "18c4zx3vqvfsnxrqw3baixch1hf231c0qg5az1rakl3lsy3ivlgn")))

(define-public crate-test-span-0.1.1 (c (n "test-span") (v "0.1.1") (d (list (d (n "daggy") (r "^0.8.0") (f (quote ("serde-1" "stable_dag"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.19") (d #t) (k 2)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5.4") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.131") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-span-macro") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.14.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.21") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (d #t) (k 0)))) (h "0nfzrvqn03md7agirsk627hyy8bz8lgj7ravn9g5d4hp9z9qb7qf")))

(define-public crate-test-span-0.2.0 (c (n "test-span") (v "0.2.0") (d (list (d (n "daggy") (r "^0.8.0") (f (quote ("serde-1" "stable_dag"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.19") (d #t) (k 2)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5.4") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.131") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-span-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "tokio") (r "^1.14.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.21") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.6") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "0dfgkyp6h7dv36mc6h1iy0yibc7r4ml1f1cgsbfdlzh5phdznqq2")))

(define-public crate-test-span-0.3.0 (c (n "test-span") (v "0.3.0") (d (list (d (n "daggy") (r "^0.8.0") (f (quote ("serde-1" "stable_dag"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.19") (d #t) (k 2)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5.4") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.131") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-span-macro") (r "^0.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.14.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.21") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.6") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "0hyj30zk6ih0vsgfgf6h7q0nkm12ny1hc5d1qlgmik1xsjagqlq2")))

(define-public crate-test-span-0.4.0 (c (n "test-span") (v "0.4.0") (d (list (d (n "daggy") (r "^0.8.0") (f (quote ("serde-1" "stable_dag"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.19") (d #t) (k 2)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5.4") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.131") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-span-macro") (r "^0.4") (d #t) (k 0)) (d (n "tokio") (r "^1.14.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.21") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.6") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1zd2wfzqi3ifgihgrrbzkhcxg0rbiyrbi0nqbs5yy8vqp4kj68dr")))

(define-public crate-test-span-0.5.0 (c (n "test-span") (v "0.5.0") (d (list (d (n "daggy") (r "^0.8.0") (f (quote ("serde-1" "stable_dag"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.19") (d #t) (k 2)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5.4") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.131") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-span-macro") (r "^0.5.0") (d #t) (k 0)) (d (n "tokio") (r "^1.14.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.21") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.6") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "10gfxrd3wzqg7ayksfsxr2pp8wy3a9rdmghr357qi4ayamwqx6yy")))

(define-public crate-test-span-0.6.0 (c (n "test-span") (v "0.6.0") (d (list (d (n "daggy") (r "^0.8.0") (f (quote ("serde-1" "stable_dag"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.19") (d #t) (k 2)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5.4") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.131") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-span-macro") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.14.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.21") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.6") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "105i310py90yi1zwzvsarlgw5slc59jwjkqvi9xryhl4m4glx4lk")))

(define-public crate-test-span-0.7.0 (c (n "test-span") (v "0.7.0") (d (list (d (n "daggy") (r "^0.8.0") (f (quote ("serde-1" "stable_dag"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.19") (d #t) (k 2)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5.4") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.131") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-span-macro") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1.14.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.21") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.6") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "04pdazhfm3ca4k12bw4raf7k2pappz52j2l7p7j8l5pwfq82xhc8")))

(define-public crate-test-span-0.8.0 (c (n "test-span") (v "0.8.0") (d (list (d (n "daggy") (r "^0.8.0") (f (quote ("serde-1" "stable_dag"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.19") (d #t) (k 2)) (d (n "indexmap") (r "^2.2.0") (d #t) (k 0)) (d (n "insta") (r "^1.8.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5.4") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.131") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (d #t) (k 0)) (d (n "test-span-macro") (r "^0.8.0") (d #t) (k 0)) (d (n "tokio") (r "^1.14.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.21") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.6") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "15hw7gag8s9waqy8mvpy3pvgjzlaark5mah6wqi0aimpvvcaib9r") (f (quote (("default" "serde_json/preserve_order"))))))

