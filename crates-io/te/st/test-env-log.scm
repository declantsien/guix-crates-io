(define-module (crates-io te st test-env-log) #:use-module (crates-io))

(define-public crate-test-env-log-0.1.0 (c (n "test-env-log") (v "0.1.0") (d (list (d (n "env_logger") (r "^0.6") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.15") (f (quote ("full"))) (d #t) (k 0)))) (h "04rpr2aw43dmmp5aj4szy69crh5hd69c0rdqr95j20z26lj526yy")))

(define-public crate-test-env-log-0.1.1 (c (n "test-env-log") (v "0.1.1") (d (list (d (n "env_logger") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)))) (h "12ii7ji2zxrspaliv8j7h903skaan1nvfp396gs5gl5ir6l64nai")))

(define-public crate-test-env-log-0.2.0 (c (n "test-env-log") (v "0.2.0") (d (list (d (n "env_logger") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (k 2)))) (h "1xy5lrj44qk3zmjbs6f9k7lpk92g2acrihgryrpkf39h3b3j2j77")))

(define-public crate-test-env-log-0.2.1 (c (n "test-env-log") (v "0.2.1") (d (list (d (n "env_logger") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (k 2)))) (h "0sql4sn0902j8n66wiwd125s3lhz9wib1a7ym572yrnldh5ym5ws")))

(define-public crate-test-env-log-0.2.2 (c (n "test-env-log") (v "0.2.2") (d (list (d (n "env_logger") (r "^0.7") (k 2)) (d (n "logging") (r "^0.4") (d #t) (k 2) (p "log")) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (k 2)) (d (n "tracing") (r "^0.1") (k 2)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future"))) (k 2)) (d (n "tracing-subscriber") (r "^0.1.6") (f (quote ("env-filter" "fmt"))) (k 2)))) (h "1gw7z3lakhagvragwhms8ms4ms0sp12l2js17bjc812hv952117r") (f (quote (("trace") ("log") ("default" "log"))))))

(define-public crate-test-env-log-0.2.3 (c (n "test-env-log") (v "0.2.3") (d (list (d (n "env_logger") (r "^0.8") (k 2)) (d (n "logging") (r "^0.4") (d #t) (k 2) (p "log")) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^0.3") (f (quote ("rt" "macros"))) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future"))) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "fmt"))) (k 2)))) (h "060zfmzs4i1in3j5nb22fj6zqcf9z7gkw6gsgz72pzik8ibxsv1m") (f (quote (("trace") ("log") ("default" "log"))))))

(define-public crate-test-env-log-0.2.4 (c (n "test-env-log") (v "0.2.4") (d (list (d (n "env_logger") (r "^0.8") (k 2)) (d (n "logging") (r "^0.4") (d #t) (k 2) (p "log")) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros"))) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future"))) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "fmt"))) (k 2)))) (h "08igmnn3v1j6h49sqxmwlmzar0cfrg77w7jzd1k9p3qxv9wdj3p0") (f (quote (("trace") ("log") ("default" "log"))))))

(define-public crate-test-env-log-0.2.5 (c (n "test-env-log") (v "0.2.5") (d (list (d (n "env_logger") (r "^0.8") (k 2)) (d (n "logging") (r "^0.4") (d #t) (k 2) (p "log")) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros"))) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future"))) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "fmt"))) (k 2)))) (h "0w1nmavjiywvvihj83f0cyd53dy074h742gqwgznq58j4dqsf0mp") (f (quote (("trace") ("log") ("default" "log"))))))

(define-public crate-test-env-log-0.2.6 (c (n "test-env-log") (v "0.2.6") (d (list (d (n "env_logger") (r "^0.8") (k 2)) (d (n "logging") (r "^0.4") (d #t) (k 2) (p "log")) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros"))) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future"))) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "fmt"))) (k 2)))) (h "1bg6cwj700w0i3z3x4nj4snzsca7w4lvkk3cj7jqaa9bjmv826z6") (f (quote (("trace") ("log") ("default" "log"))))))

(define-public crate-test-env-log-0.2.7 (c (n "test-env-log") (v "0.2.7") (d (list (d (n "env_logger") (r "^0.8") (k 2)) (d (n "logging") (r "^0.4") (d #t) (k 2) (p "log")) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros"))) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future"))) (k 2)) (d (n "tracing-subscriber") (r "^0.2.17") (f (quote ("env-filter" "fmt"))) (k 2)))) (h "0i151j7r14j65lrv753s138g7pkslq6l1jyg0q6qmk1hlqrb3r5k") (f (quote (("trace") ("log") ("default" "log"))))))

(define-public crate-test-env-log-0.2.8 (c (n "test-env-log") (v "0.2.8") (d (list (d (n "env_logger") (r "^0.8") (k 2)) (d (n "logging") (r "^0.4") (d #t) (k 2) (p "log")) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros"))) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future"))) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)))) (h "12jgf169r87q5kaa44rw2hx8n63cbl86hhgrbvv6j60hh3b8jwc7") (f (quote (("trace") ("log") ("default" "log"))))))

