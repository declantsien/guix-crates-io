(define-module (crates-io te st test-generation) #:use-module (crates-io))

(define-public crate-test-generation-0.1.4 (c (n "test-generation") (v "0.1.4") (d (list (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "module-generation") (r "^0.1.0") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.1.0") (d #t) (k 0)) (d (n "move-vm-test-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-compiler") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-stdlib") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-vm-runtime") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-vm-types") (r "^0.1.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1nqip71yk3dznx3ysbwilb8hs390jh30z10jh4f1bjvk5wn32a5j") (f (quote (("mirai-contracts")))) (y #t)))

(define-public crate-test-generation-0.1.5 (c (n "test-generation") (v "0.1.5") (d (list (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "module-generation") (r "^0.1.0") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.1.0") (d #t) (k 0)) (d (n "move-vm-test-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-compiler") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-stdlib") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-vm-runtime") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-vm-types") (r "^0.1.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "07ri663417jfg3a7zkba062znnnc6pmqdlqfm9a3hn0ghrdijkqb") (f (quote (("mirai-contracts")))) (y #t)))

(define-public crate-test-generation-0.1.6 (c (n "test-generation") (v "0.1.6") (d (list (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "module-generation") (r "^0.1.0") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.1.0") (d #t) (k 0)) (d (n "move-vm-test-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-compiler") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-stdlib") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-vm-runtime") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-vm-types") (r "^0.1.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "13qmxam14640858i7lxbr2najis461p7y0hifdpxz6hr9krp32ff") (f (quote (("mirai-contracts")))) (y #t)))

(define-public crate-test-generation-0.2.0 (c (n "test-generation") (v "0.2.0") (d (list (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "module-generation") (r "^0.2.0") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.2.0") (d #t) (k 0)) (d (n "move-vm-test-utils") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-compiler") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-stdlib") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-vm-runtime") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-vm-types") (r "^0.2.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "0jy3h7p3d70n7bi9vqvlqqd3avwrfj7i8ickqvjzllgab1966j4y") (f (quote (("mirai-contracts")))) (y #t)))

(define-public crate-test-generation-0.2.1 (c (n "test-generation") (v "0.2.1") (d (list (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "module-generation") (r "^0.2.0") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.2.0") (d #t) (k 0)) (d (n "move-vm-test-utils") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-compiler") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-stdlib") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-vm-runtime") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-vm-types") (r "^0.2.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "0h702xar6kksj4vvpapha488kdgzwhixqjc7zwxbfmzhfvfdrlwa") (f (quote (("mirai-contracts")))) (y #t)))

(define-public crate-test-generation-0.3.0 (c (n "test-generation") (v "0.3.0") (d (list (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "module-generation") (r "^0.3.0") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.3.0") (d #t) (k 0)) (d (n "move-vm-test-utils") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-compiler") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-stdlib") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-vm-runtime") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-vm-types") (r "^0.3.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.15") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1jw5farqf8w8x4slhbk9fyxvavvwjx39vymwi964yjniq1cbmzf5") (f (quote (("mirai-contracts")))) (y #t)))

(define-public crate-test-generation-0.3.1 (c (n "test-generation") (v "0.3.1") (d (list (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "module-generation") (r "^0.3.0") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.3.0") (d #t) (k 0)) (d (n "move-vm-test-utils") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-compiler") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-stdlib") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-vm-runtime") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-vm-types") (r "^0.3.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.15") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "17kmdba3764nynwcgwsqq4rn7va2mq9xc1xblj9a92xrpwjf0c3k") (f (quote (("mirai-contracts")))) (y #t)))

(define-public crate-test-generation-0.3.2 (c (n "test-generation") (v "0.3.2") (d (list (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "module-generation") (r "^0.3.0") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.3.0") (d #t) (k 0)) (d (n "move-vm-test-utils") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-compiler") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-stdlib") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-vm-runtime") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-vm-types") (r "^0.3.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.15") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "0g1aph5ba93ar5i559yqw24rqb1s9qmcljra4dh97rhdsx1d6qlv") (f (quote (("mirai-contracts")))) (y #t)))

