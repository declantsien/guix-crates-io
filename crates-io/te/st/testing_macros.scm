(define-module (crates-io te st testing_macros) #:use-module (crates-io))

(define-public crate-testing_macros-0.0.0 (c (n "testing_macros") (v "0.0.0") (d (list (d (n "pmutil") (r "^0.5.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "swc_macros_common") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("fold" "parsing" "full"))) (d #t) (k 0)))) (h "1y1pqpk86mvwkcd0d3vcp87pwnlqxzqlyy2yf1vpi6f1ccbx2wjd")))

(define-public crate-testing_macros-0.1.0 (c (n "testing_macros") (v "0.1.0") (d (list (d (n "anyhow") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "glob") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "pmutil") (r ">=0.5.1, <0.6.0") (d #t) (k 0)) (d (n "proc-macro2") (r ">=1.0.24, <2.0.0") (d #t) (k 0)) (d (n "quote") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "regex") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "relative-path") (r ">=1.3.2, <2.0.0") (d #t) (k 0)) (d (n "syn") (r ">=1.0.0, <2.0.0") (f (quote ("fold" "parsing" "full" "extra-traits"))) (d #t) (k 0)))) (h "1xsz3fsgqy3kpykv9b12812rs9a52443xz56p3cm1pikh8axrajj")))

(define-public crate-testing_macros-0.1.1 (c (n "testing_macros") (v "0.1.1") (d (list (d (n "anyhow") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "glob") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "pmutil") (r ">=0.5.1, <0.6.0") (d #t) (k 0)) (d (n "proc-macro2") (r ">=1.0.24, <2.0.0") (d #t) (k 0)) (d (n "quote") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "regex") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "relative-path") (r ">=1.3.2, <2.0.0") (d #t) (k 0)) (d (n "syn") (r ">=1.0.0, <2.0.0") (f (quote ("fold" "parsing" "full" "extra-traits"))) (d #t) (k 0)))) (h "0h5rimb9qkl3j0h35sh2chwjaw1x58i5fs3n07grss76rgmgphfn")))

(define-public crate-testing_macros-0.1.2 (c (n "testing_macros") (v "0.1.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "pmutil") (r "^0.5.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "relative-path") (r "^1.3.2") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("fold" "parsing" "full" "extra-traits"))) (d #t) (k 0)))) (h "08if5mfypdwdc8xjrwmwyx0bxsba1iyg6bvhm99zhn2b4mbvc3dg")))

(define-public crate-testing_macros-0.2.0 (c (n "testing_macros") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "pmutil") (r "^0.5.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "relative-path") (r "^1.3.2") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("fold" "parsing" "full" "extra-traits"))) (d #t) (k 0)))) (h "18x8n9qlykixj3cl5wc0qxqqnk4d4rg0l4shrhv4rg8v70y57prq")))

(define-public crate-testing_macros-0.2.1 (c (n "testing_macros") (v "0.2.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "pmutil") (r "^0.5.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "relative-path") (r "^1.3.2") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("fold" "parsing" "full" "extra-traits"))) (d #t) (k 0)))) (h "16ajrfvpxz1frx0kd2ys0yfakc3v95l96fvcpbw24qqq5336rjcj")))

(define-public crate-testing_macros-0.2.2 (c (n "testing_macros") (v "0.2.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "pmutil") (r "^0.5.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "relative-path") (r "^1.3.2") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("fold" "parsing" "full" "extra-traits"))) (d #t) (k 0)))) (h "079xa3mjijgrlbpmq0zkc904r1bm26nw2nzd5z2fm6kgbi37l8iq")))

(define-public crate-testing_macros-0.2.3 (c (n "testing_macros") (v "0.2.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "pmutil") (r "^0.5.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "relative-path") (r "^1.3.2") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("fold" "parsing" "full" "extra-traits"))) (d #t) (k 0)))) (h "1cqgcdfwahhhd69adry9s8i8fy7ik5f6a4flxv8zxi7mm86cwbwi")))

(define-public crate-testing_macros-0.2.4 (c (n "testing_macros") (v "0.2.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "pmutil") (r "^0.5.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "relative-path") (r "^1.3.2") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("fold" "parsing" "full" "extra-traits"))) (d #t) (k 0)))) (h "1hkb6kkhwp6d9i0rvvf17gaq48w8kq7cx7gjpraqglgzynv7csfw")))

(define-public crate-testing_macros-0.2.5 (c (n "testing_macros") (v "0.2.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "pmutil") (r "^0.5.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "relative-path") (r "^1.3.2") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("fold" "parsing" "full" "extra-traits"))) (d #t) (k 0)))) (h "1hqi3yk0j7j17bwb8r0vka6ryfwyh49l10l0ls53znx4bhw2dyxd") (f (quote (("rust-analyzer"))))))

(define-public crate-testing_macros-0.2.6 (c (n "testing_macros") (v "0.2.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "pmutil") (r "^0.5.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "relative-path") (r "^1.3.2") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("fold" "parsing" "full" "extra-traits"))) (d #t) (k 0)))) (h "0g97mjpwdifbmj5v35x1gc0dylg29w87yaqzwciwb4qw5d3m00jh") (f (quote (("rust-analyzer"))))))

(define-public crate-testing_macros-0.2.7 (c (n "testing_macros") (v "0.2.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pmutil") (r "^0.5.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "relative-path") (r "^1.3.2") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("fold" "parsing" "full" "extra-traits"))) (d #t) (k 0)))) (h "1680hik7sw15bbgbq9y3w84afdgxv1zfnrzz82hpwjsd5nfz0kz7") (f (quote (("rust-analyzer"))))))

(define-public crate-testing_macros-0.2.8 (c (n "testing_macros") (v "0.2.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pmutil") (r "^0.5.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "relative-path") (r "^1.3.2") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("fold" "parsing" "full" "extra-traits"))) (d #t) (k 0)))) (h "1ylxay5riyy9v48qs8ffkyz9ac5jc9q4xgvzykw5jz6lfv3kdmg6") (f (quote (("rust-analyzer"))))))

(define-public crate-testing_macros-0.2.9 (c (n "testing_macros") (v "0.2.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pmutil") (r "^0.5.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "relative-path") (r "^1.3.2") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("fold" "parsing" "full" "extra-traits"))) (d #t) (k 0)))) (h "14c8wjmsl9q95isp8nfb8gfm5hb2vqbbd448i6lf2br6ly2mlcd5") (f (quote (("rust-analyzer"))))))

(define-public crate-testing_macros-0.2.10 (c (n "testing_macros") (v "0.2.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "pmutil") (r "^0.6.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "relative-path") (r "^1.3.2") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("fold" "parsing" "full" "extra-traits"))) (d #t) (k 0)))) (h "1vswcji7fv33vmmbw83alm96jx96wqky6i6hv50rp8jb4nn91wz1") (f (quote (("rust-analyzer"))))))

(define-public crate-testing_macros-0.2.11 (c (n "testing_macros") (v "0.2.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pmutil") (r "^0.6.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "relative-path") (r "^1.3.2") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("fold" "parsing" "full" "extra-traits"))) (d #t) (k 0)))) (h "19g6jalk33ggf78wj46ml02kz260rbh5wsdcy43il195c1wmphfi") (f (quote (("rust-analyzer"))))))

(define-public crate-testing_macros-0.2.12 (c (n "testing_macros") (v "0.2.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "relative-path") (r "^1.3.2") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("fold" "parsing" "full" "extra-traits"))) (d #t) (k 0)))) (h "0whgdngxvpz8rjrizmjc179yidmk0jim2nk450a9qml4856qdlzr") (f (quote (("rust-analyzer"))))))

(define-public crate-testing_macros-0.2.13 (c (n "testing_macros") (v "0.2.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "relative-path") (r "^1.3.2") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("fold" "parsing" "full" "extra-traits"))) (d #t) (k 0)))) (h "0wx7j53x6gq0in80mljjx685awfa3rf3nvdhcij9c777mwfxbn1j") (f (quote (("rust-analyzer"))))))

