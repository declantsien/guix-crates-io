(define-module (crates-io te ns tensor-rs) #:use-module (crates-io))

(define-public crate-tensor-rs-0.3.4 (c (n "tensor-rs") (v "0.3.4") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 2)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.11") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_distr") (r "^0.2") (d #t) (k 0)) (d (n "tensorboard-rs") (r "^0.2.2") (d #t) (k 2)))) (h "15vs6kbfx6cg9jsn46501amazr9ypb5z6dki3k48g0cnwmpcb5zq")))

(define-public crate-tensor-rs-0.3.5 (c (n "tensor-rs") (v "0.3.5") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 2)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.11") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_distr") (r "^0.2") (d #t) (k 0)) (d (n "tensorboard-rs") (r "^0.2.2") (d #t) (k 2)))) (h "01f9b9sazzcx9pnlics2q7199xdz9142m6kiklixkihl15fnvca9")))

(define-public crate-tensor-rs-0.3.6 (c (n "tensor-rs") (v "0.3.6") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 2)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.11") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_distr") (r "^0.2") (d #t) (k 0)) (d (n "tensorboard-rs") (r "^0.2.2") (d #t) (k 2)))) (h "0rbhbsi2glnm802v51a9lf455fn8vg3g1j0kg0ww9wd9mpax1apn") (f (quote (("use-cuda") ("use-blas" "blas") ("default"))))))

(define-public crate-tensor-rs-0.3.7 (c (n "tensor-rs") (v "0.3.7") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 2)) (d (n "cuda11-cudart-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.11") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_distr") (r "^0.2") (d #t) (k 0)) (d (n "tensorboard-rs") (r "^0.2.2") (d #t) (k 2)))) (h "0sn7v5d05dpvf5h7inpvpwl9wbv3mxdnky0w0m2kryzx4yfpxhk5") (f (quote (("use-cuda" "cuda11-cudart-sys") ("use-blas" "blas") ("default"))))))

(define-public crate-tensor-rs-0.3.8 (c (n "tensor-rs") (v "0.3.8") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 2)) (d (n "cuda11-cudart-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cuda11-cutensor-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.11") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_distr") (r "^0.2") (d #t) (k 0)) (d (n "tensorboard-rs") (r "^0.2.2") (d #t) (k 2)))) (h "1vfpk0y8f0hlmd9n2qw2bkqyy1zcgywfk6fffiiqcnshivwkbb3q") (f (quote (("use-cuda" "cuda11-cudart-sys" "cuda11-cutensor-sys") ("use-blas" "blas" "openblas-src") ("default"))))))

(define-public crate-tensor-rs-0.3.9 (c (n "tensor-rs") (v "0.3.9") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 2)) (d (n "cuda11-cudart-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cuda11-cutensor-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.11") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_distr") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "tensorboard-rs") (r "^0.2.2") (d #t) (k 2)))) (h "18my7mpzskrnl0fcydidkili4030lxs6dnlcql7671a0zjwykxqn") (f (quote (("use-serde" "serde" "serde-pickle") ("use-cuda" "cuda11-cudart-sys" "cuda11-cutensor-sys") ("use-blas" "blas" "openblas-src") ("default"))))))

(define-public crate-tensor-rs-0.5.0 (c (n "tensor-rs") (v "0.5.0") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 2)) (d (n "cuda11-cudart-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cuda11-cutensor-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.11") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_distr") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "tensorboard-rs") (r "^0.2.2") (d #t) (k 2)))) (h "04wkf4960j8f94k6z4fa5x5d2dyzyn18xk70anzpwwf2isvgixi9") (f (quote (("use-serde" "serde" "serde-pickle") ("use-cuda" "cuda11-cudart-sys" "cuda11-cutensor-sys") ("use-blas" "blas" "openblas-src") ("default"))))))

(define-public crate-tensor-rs-0.5.1 (c (n "tensor-rs") (v "0.5.1") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 2)) (d (n "cuda11-cudart-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cuda11-cutensor-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.11") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_distr") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "tensorboard-rs") (r "^0.2.2") (d #t) (k 2)))) (h "17x3gabg5rlwrvgfhkagfc0qx4wfgv9clmv9fii8pvp7k57rfkhq") (f (quote (("use-serde" "serde" "serde-pickle") ("use-cuda" "cuda11-cudart-sys" "cuda11-cutensor-sys") ("use-blas" "blas" "openblas-src") ("default"))))))

(define-public crate-tensor-rs-0.5.2 (c (n "tensor-rs") (v "0.5.2") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 2)) (d (n "cuda11-cudart-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cuda11-cutensor-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.11") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "tensorboard-rs") (r "^0.2.2") (d #t) (k 2)))) (h "0qi30g6qh95sbynd8ajs6apwjwy9ip8gnhcfbyxjg1mx3991nbak") (f (quote (("use-usize") ("use-u8") ("use-serde" "serde" "serde-pickle") ("use-f64") ("use-f32") ("use-cuda" "cuda11-cudart-sys" "cuda11-cutensor-sys") ("use-blas" "blas" "openblas-src") ("default" "use-f64"))))))

(define-public crate-tensor-rs-0.5.3 (c (n "tensor-rs") (v "0.5.3") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 2)) (d (n "cuda11-cudart-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cuda11-cutensor-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.11") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "tensorboard-rs") (r "^0.2.2") (d #t) (k 2)))) (h "07ixdailm2nd9zddw2fzi19wgppn17bfs72h0f1k96vqzhka8mbs") (f (quote (("use-usize") ("use-u8") ("use-serde" "serde" "serde-pickle") ("use-f64") ("use-f32") ("use-cuda" "cuda11-cudart-sys" "cuda11-cutensor-sys") ("use-blas" "blas" "openblas-src") ("default" "use-f64"))))))

(define-public crate-tensor-rs-0.5.4 (c (n "tensor-rs") (v "0.5.4") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 2)) (d (n "cuda11-cudart-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cuda11-cutensor-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.11") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "tensorboard-rs") (r "^0.2.2") (d #t) (k 2)))) (h "12v9n2rvn2d360j630fqsd5af4hqdib7346s6hirrqsmgzd2c51a") (f (quote (("use-usize") ("use-u8") ("use-serde" "serde" "serde-pickle") ("use-f64") ("use-f32") ("use-cuda" "cuda11-cudart-sys" "cuda11-cutensor-sys") ("use-blas" "blas" "openblas-src") ("default" "use-f64"))))))

(define-public crate-tensor-rs-0.5.5 (c (n "tensor-rs") (v "0.5.5") (d (list (d (n "blas") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 2)) (d (n "cuda11-cudart-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cuda11-cutensor-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lapack") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.11") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "tensorboard-rs") (r "^0.2.2") (d #t) (k 2)))) (h "07jl73lkp06cjjvzhx0kiys9hv7dq6kvxfd8n6gijf0dsnjm59zg") (f (quote (("use-usize") ("use-u8") ("use-serde" "serde" "serde-pickle") ("use-f64") ("use-f32") ("use-cuda" "cuda11-cudart-sys" "cuda11-cutensor-sys") ("use-blas-lapack" "blas" "blas-src" "lapack" "lapack-src") ("default" "use-f64" "use-blas-lapack"))))))

(define-public crate-tensor-rs-0.5.6 (c (n "tensor-rs") (v "0.5.6") (d (list (d (n "blas") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 2)) (d (n "cuda11-cudart-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cuda11-cutensor-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lapack") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.11") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "tensorboard-rs") (r "^0.2.2") (d #t) (k 2)))) (h "0p3w8x79nywqw09r4g291xhdj573rg021xm2vyv01jhfrnim7dqg") (f (quote (("use-usize") ("use-u8") ("use-serde" "serde" "serde-pickle") ("use-f64") ("use-f32") ("use-cuda" "cuda11-cudart-sys" "cuda11-cutensor-sys") ("use-blas-lapack" "blas" "blas-src" "lapack" "lapack-src") ("default" "use-f64" "use-blas-lapack"))))))

(define-public crate-tensor-rs-0.5.7 (c (n "tensor-rs") (v "0.5.7") (d (list (d (n "blas") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 2)) (d (n "cuda11-cudart-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cuda11-cutensor-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lapack") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.6") (d #t) (k 2)) (d (n "tensorboard-rs") (r "^0.5.7") (d #t) (k 2)))) (h "0md85z93vvxk3z5mp0krajcm8qm9q7l63rp7xiry430f761bnfhm") (f (quote (("use-usize") ("use-u8") ("use-serde" "serde") ("use-f64") ("use-f32") ("use-cuda" "cuda11-cudart-sys" "cuda11-cutensor-sys") ("use-blas-lapack" "blas" "blas-src" "lapack" "lapack-src") ("default" "use-f64" "use-blas-lapack" "use-serde"))))))

(define-public crate-tensor-rs-0.5.8 (c (n "tensor-rs") (v "0.5.8") (d (list (d (n "blas") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 2)) (d (n "cuda11-cudart-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cuda11-cutensor-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lapack") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.6") (d #t) (k 2)) (d (n "tensorboard-rs") (r "^0.5.8") (d #t) (k 2)))) (h "08vqfhj16484fa7l3n5c9mvdfxc57ry281sp4ifp5j8s43dxgvj1") (f (quote (("use-usize") ("use-u8") ("use-serde" "serde") ("use-f64") ("use-f32") ("use-cuda" "cuda11-cudart-sys" "cuda11-cutensor-sys") ("use-blas-lapack" "blas" "blas-src" "lapack" "lapack-src") ("default" "use-f64" "use-blas-lapack" "use-serde"))))))

(define-public crate-tensor-rs-0.5.9 (c (n "tensor-rs") (v "0.5.9") (d (list (d (n "blas") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 2)) (d (n "cuda11-cudart-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cuda11-cutensor-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lapack") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-pickle") (r "^0.6") (d #t) (k 2)) (d (n "tensorboard-rs") (r "^0.5.9") (d #t) (k 2)))) (h "0wamnbn5i7l54qdg7nv41vjriawrn8ffnqmfzjby9dglxgin3pri") (f (quote (("use-usize") ("use-u8") ("use-serde" "serde") ("use-f64") ("use-f32") ("use-cuda" "cuda11-cudart-sys" "cuda11-cutensor-sys") ("use-blas-lapack" "blas" "blas-src" "lapack" "lapack-src") ("default" "use-f64" "use-blas-lapack" "use-serde"))))))

