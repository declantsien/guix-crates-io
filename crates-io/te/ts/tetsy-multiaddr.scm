(define-module (crates-io te ts tetsy-multiaddr) #:use-module (crates-io))

(define-public crate-tetsy-multiaddr-0.0.0 (c (n "tetsy-multiaddr") (v "0.0.0") (h "00h9kq6ds3pqngk947p4y6xqfi68z5qs6z4xygzmqlvpvyspd1li") (y #t)))

(define-public crate-tetsy-multiaddr-0.11.1 (c (n "tetsy-multiaddr") (v "0.11.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "multihash") (r "^0.13") (f (quote ("std" "multihash-impl" "identity"))) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "0d44k0i0nwz2kfh6r2rs6arc8fdipvddwmk44sqf6sjbs1chwym0") (f (quote (("default" "url"))))))

(define-public crate-tetsy-multiaddr-0.11.0 (c (n "tetsy-multiaddr") (v "0.11.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "multihash") (r "^0.13") (f (quote ("std" "multihash-impl" "identity"))) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.6") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "0ym6qi0zh4r7mx1czx807n6cx672pnd14ch15fddai394zc9p3vx") (f (quote (("default" "url"))))))

(define-public crate-tetsy-multiaddr-0.11.2 (c (n "tetsy-multiaddr") (v "0.11.2") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "multihash") (r "^0.13") (f (quote ("std" "multihash-impl" "identity"))) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.6") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "1xknxjf8av2i50hxf299r9gprsvm92bkc26r682vv0076mw81jd5") (f (quote (("default" "url"))))))

