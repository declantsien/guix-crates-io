(define-module (crates-io te rn ternoa-cli) #:use-module (crates-io))

(define-public crate-ternoa-cli-0.1.0 (c (n "ternoa-cli") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.39") (d #t) (k 0)) (d (n "clap") (r "^4.0.32") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codec") (r "^3.0.0") (f (quote ("derive" "full" "bitvec"))) (k 0) (p "parity-scale-codec")) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "sp-keyring") (r "^7.0.0") (d #t) (k 0)) (d (n "subxt") (r "^0.25.0") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 0)))) (h "1gd3gxlm48rfg0bkaawmma7daw2ybn788gkngwqrcmxm956nn82w") (f (quote (("command"))))))

(define-public crate-ternoa-cli-0.1.1 (c (n "ternoa-cli") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.39") (d #t) (k 0)) (d (n "clap") (r "^4.0.32") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codec") (r "^3.0.0") (f (quote ("derive" "full" "bitvec"))) (k 0) (p "parity-scale-codec")) (d (n "futures") (r "^0.3.13") (d #t) (k 0)) (d (n "graphql_client") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "sp-keyring") (r "^7.0.0") (d #t) (k 0)) (d (n "subxt") (r "^0.25.0") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 0)))) (h "1rpgb3kmk6phx79ws1xw0jqd70r1dd9spj77k5z3dad5lyhwz93p") (f (quote (("command"))))))

