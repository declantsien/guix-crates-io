(define-module (crates-io te gr tegra-rcm) #:use-module (crates-io))

(define-public crate-tegra-rcm-0.1.0 (c (n "tegra-rcm") (v "0.1.0") (d (list (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "nix") (r "^0.24.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rusb") (r "^0.9.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1bzz0skikgal3p7265z09bpk67hs66p4ngr3sh0wvlmakbv5h4ig")))

(define-public crate-tegra-rcm-0.2.0 (c (n "tegra-rcm") (v "0.2.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libusbk") (r "^0.1.0") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "nix") (r "^0.24.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rusb") (r "^0.9.1") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("ioapiset" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0m6q68gmhyynjph6fynigwy7mblqprbpg5q3xd3fi0w7746xg026")))

(define-public crate-tegra-rcm-0.3.0 (c (n "tegra-rcm") (v "0.3.0") (d (list (d (n "criterion") (r "^0.3.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libusbk") (r "^0.1.1") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "nix") (r "^0.24.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rusb") (r "^0.9.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("ioapiset" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "07cyh18fr0i6p7q2sligjar1qbpi3qx30h0q7g0kjlb2gd0higq2")))

(define-public crate-tegra-rcm-0.4.0 (c (n "tegra-rcm") (v "0.4.0") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libusbk") (r "^0.1.2") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "nix") (r "^0.26.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rusb") (r "^0.9.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("ioapiset" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "111yg9kngily4a2rc9fylv3q7l4favjfjn911rarj038xy18vvlz")))

(define-public crate-tegra-rcm-0.5.0 (c (n "tegra-rcm") (v "0.5.0") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "glob") (r "^0.3.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libusbk") (r "^0.1.2") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rusb") (r "^0.9.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("ioapiset" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "14jqvvhs3ffkq65qf7kv25nirqfp94av87ivhr0h960l9p0zkmgb")))

(define-public crate-tegra-rcm-0.6.0 (c (n "tegra-rcm") (v "0.6.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "glob") (r "^0.3.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libusbk") (r "^0.1.2") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nix") (r "^0.27.1") (f (quote ("ioctl"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rusb") (r "^0.9.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("ioapiset" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0250vpm1xdzw5apfh9cbc4vahs2lrmxsd22c4xjcihl58pkjkcvl")))

