(define-module (crates-io te a- tea-actorx-runtime) #:use-module (crates-io))

(define-public crate-tea-actorx-runtime-0.2.0-dev.1 (c (n "tea-actorx-runtime") (v "0.2.0-dev.1") (d (list (d (n "bincode") (r "^1.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tea-actorx-core") (r "^0.2.0-dev.1") (d #t) (k 0)) (d (n "tea-actorx-host") (r "^0.2.0-dev.1") (o #t) (d #t) (k 0)) (d (n "tea-codec") (r "^0.2.0-dev.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt" "macros"))) (d #t) (k 0)))) (h "0wq0brp7pzp24dwdgirgz7xmvqbmf8882hrci6s3zacwxwlm52r9") (f (quote (("no-mock") ("mock" "tea-actorx-host") ("checked" "tea-codec/checked") ("analyzer" "no-mock"))))))

(define-public crate-tea-actorx-runtime-0.2.0-dev.2 (c (n "tea-actorx-runtime") (v "0.2.0-dev.2") (d (list (d (n "bincode") (r "^1.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tea-actorx-core") (r "^0.2.0-dev.2") (d #t) (k 0)) (d (n "tea-actorx-host") (r "^0.2.0-dev.2") (o #t) (d #t) (k 0)) (d (n "tea-codec") (r "^0.2.0-dev.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt" "macros"))) (d #t) (k 0)))) (h "1yww7jrm30mh557pd1fy2jykrbm7nhg3agxd4qjj6c7x35d7cya3") (f (quote (("no-mock") ("mock" "tea-actorx-host") ("checked" "tea-codec/checked") ("analyzer" "no-mock"))))))

(define-public crate-tea-actorx-runtime-0.2.0-dev.3 (c (n "tea-actorx-runtime") (v "0.2.0-dev.3") (d (list (d (n "bincode") (r "^1.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tea-actorx-core") (r "^0.2.0-dev.3") (d #t) (k 0)) (d (n "tea-actorx-host") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "tea-codec") (r "^0.2.0-dev.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt" "macros"))) (d #t) (k 0)))) (h "096z5k9xzr96i8ymmmc89lgf346s0llyg370592vjvi3y2z1dn01") (f (quote (("no-mock") ("mock" "tea-actorx-host") ("checked" "tea-codec/checked") ("analyzer" "no-mock"))))))

(define-public crate-tea-actorx-runtime-0.2.0-dev.4 (c (n "tea-actorx-runtime") (v "0.2.0-dev.4") (d (list (d (n "bincode") (r "^1.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tea-actorx-core") (r "^0.2.0-dev.4") (d #t) (k 0)) (d (n "tea-actorx-host") (r "^0.2.0-dev.4") (o #t) (d #t) (k 0)) (d (n "tea-codec") (r "^0.2.0-dev.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt" "macros"))) (d #t) (k 0)))) (h "1a3rp00cphc8qwhlmjr0gy9rs2728fnfpxr3jfp5p0sr3wbdyy2h") (f (quote (("no-mock") ("mock" "tea-actorx-host") ("checked" "tea-codec/checked") ("analyzer" "no-mock"))))))

(define-public crate-tea-actorx-runtime-0.2.0-dev.5 (c (n "tea-actorx-runtime") (v "0.2.0-dev.5") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tea-actorx-core") (r "^0.2.0-dev.5") (d #t) (k 0)) (d (n "tea-actorx-host") (r "^0.2.0-dev.5") (o #t) (d #t) (k 0)) (d (n "tea-codec") (r "^0.2.0-dev.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "macros"))) (d #t) (k 0)))) (h "1mvm3w21mshd1n283l7vvm12rq6dhmnl2nln5nvz6z0716cj2dp3") (f (quote (("no-mock") ("mock" "tea-actorx-host") ("checked" "tea-codec/checked") ("analyzer" "no-mock"))))))

(define-public crate-tea-actorx-runtime-0.2.0-dev.6 (c (n "tea-actorx-runtime") (v "0.2.0-dev.6") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tea-actorx-core") (r "^0.2.0-dev.6") (d #t) (k 0)) (d (n "tea-actorx-host") (r "^0.2.0-dev.6") (o #t) (d #t) (k 0)) (d (n "tea-codec") (r "^0.2.0-dev.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "macros"))) (d #t) (k 0)))) (h "031jlg0k06669vvv6fmh6y5j7vjm1v3xzb1mlg80s728x08g3snm") (f (quote (("no-mock") ("mock" "tea-actorx-host") ("checked" "tea-codec/checked") ("analyzer" "no-mock"))))))

(define-public crate-tea-actorx-runtime-0.2.0-dev.7 (c (n "tea-actorx-runtime") (v "0.2.0-dev.7") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tea-actorx-core") (r "^0.2.0-dev.7") (d #t) (k 0)) (d (n "tea-actorx-host") (r "^0.2.0-dev.7") (o #t) (d #t) (k 0)) (d (n "tea-codec") (r "^0.2.0-dev.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "macros"))) (d #t) (k 0)))) (h "11m2m231jri5ylxfrra50jws3irj6r5b2cs6xqsfsj2m1kmr484d") (f (quote (("no-mock") ("mock" "tea-actorx-host") ("checked" "tea-codec/checked") ("analyzer" "no-mock"))))))

(define-public crate-tea-actorx-runtime-0.2.0-dev.8 (c (n "tea-actorx-runtime") (v "0.2.0-dev.8") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tea-actorx-core") (r "^0.2.0-dev.8") (d #t) (k 0)) (d (n "tea-actorx-host") (r "^0.2.0-dev.8") (o #t) (d #t) (k 0)) (d (n "tea-codec") (r "^0.2.0-dev.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "macros"))) (d #t) (k 0)))) (h "1aww6xx61rj4zg23d5zyq4v0c4dzbblw864yfys4kiaf6gwyr77b") (f (quote (("no-mock") ("mock" "tea-actorx-host") ("checked" "tea-codec/checked") ("analyzer" "no-mock"))))))

(define-public crate-tea-actorx-runtime-0.2.0-dev.9 (c (n "tea-actorx-runtime") (v "0.2.0-dev.9") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tea-actorx-core") (r "^0.2.0-dev.9") (d #t) (k 0)) (d (n "tea-actorx-host") (r "^0.2.0-dev.9") (o #t) (d #t) (k 0)) (d (n "tea-codec") (r "^0.2.0-dev.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "macros"))) (d #t) (k 0)))) (h "16karqqyv3kbrq87ps6cmlladwchigkinvl2jh9p712wabvwd11v") (f (quote (("no-mock") ("mock" "tea-actorx-host") ("checked" "tea-codec/checked") ("analyzer" "no-mock"))))))

(define-public crate-tea-actorx-runtime-0.2.0-dev.10 (c (n "tea-actorx-runtime") (v "0.2.0-dev.10") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tea-actorx-core") (r "^0.2.0-dev.10") (d #t) (k 0)) (d (n "tea-actorx-host") (r "^0.2.0-dev.10") (o #t) (d #t) (k 0)) (d (n "tea-codec") (r "^0.2.0-dev.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "macros"))) (d #t) (k 0)))) (h "13j8y9bbvpkrdzb99mra86s6fby2kpdcb78sybn22lmgqz22bwph") (f (quote (("no-mock") ("mock" "tea-actorx-host") ("checked" "tea-codec/checked") ("analyzer" "no-mock"))))))

(define-public crate-tea-actorx-runtime-0.2.0-dev.11 (c (n "tea-actorx-runtime") (v "0.2.0-dev.11") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tea-actorx-core") (r "^0.2.0-dev.11") (d #t) (k 0)) (d (n "tea-actorx-host") (r "^0.2.0-dev.11") (o #t) (d #t) (k 0)) (d (n "tea-codec") (r "^0.2.0-dev.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "macros"))) (d #t) (k 0)))) (h "0xfhazhap5lwgbiczvinbgrkw3y964cani3q41vdd3fsx780im0x") (f (quote (("no-mock") ("mock" "tea-actorx-host") ("checked" "tea-codec/checked") ("analyzer" "no-mock"))))))

(define-public crate-tea-actorx-runtime-0.2.0-dev.12 (c (n "tea-actorx-runtime") (v "0.2.0-dev.12") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tea-actorx-core") (r "^0.2.0-dev.12") (d #t) (k 0)) (d (n "tea-actorx-host") (r "^0.2.0-dev.12") (o #t) (d #t) (k 0)) (d (n "tea-codec") (r "^0.2.0-dev.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "macros"))) (d #t) (k 0)))) (h "08prqzy9hsrkbnifbd283bzz687rcxnpp5a3gq4fjrh0va24iw6r") (f (quote (("no-mock") ("mock" "tea-actorx-host") ("checked" "tea-codec/checked") ("analyzer" "no-mock"))))))

(define-public crate-tea-actorx-runtime-0.2.0-dev.13 (c (n "tea-actorx-runtime") (v "0.2.0-dev.13") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tea-actorx-core") (r "^0.2.0-dev.13") (d #t) (k 0)) (d (n "tea-actorx-host") (r "^0.2.0-dev.13") (o #t) (d #t) (k 0)) (d (n "tea-codec") (r "^0.2.0-dev.13") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "macros"))) (d #t) (k 0)))) (h "0kzjxjlncw78z7dayjrsv2krwh3mnlm398sq47ddllcnd3va80qn") (f (quote (("no-mock") ("mock" "tea-actorx-host") ("checked" "tea-codec/checked") ("analyzer" "no-mock"))))))

(define-public crate-tea-actorx-runtime-0.2.0-dev.14 (c (n "tea-actorx-runtime") (v "0.2.0-dev.14") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tea-actorx-core") (r "^0.2.0-dev.14") (d #t) (k 0)) (d (n "tea-actorx-host") (r "^0.2.0-dev.14") (o #t) (d #t) (k 0)) (d (n "tea-codec") (r "^0.2.0-dev.14") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "macros"))) (d #t) (k 0)))) (h "0hriqfpzprrvdj60rvd10ql6yh35914031is518fzxby1sfxdcw4") (f (quote (("no-mock") ("mock" "tea-actorx-host") ("checked" "tea-codec/checked") ("analyzer" "no-mock"))))))

(define-public crate-tea-actorx-runtime-0.2.0-dev.15 (c (n "tea-actorx-runtime") (v "0.2.0-dev.15") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tea-actorx-core") (r "^0.2.0-dev.15") (d #t) (k 0)) (d (n "tea-actorx-host") (r "^0.2.0-dev.15") (o #t) (d #t) (k 0)) (d (n "tea-codec") (r "^0.2.0-dev.15") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "macros"))) (d #t) (k 0)))) (h "0vm0crl11a2lz94rss67ffv1kzfqpfqp3lnr8vni4m893d61v03p") (f (quote (("no-mock") ("mock" "tea-actorx-host") ("checked" "tea-codec/checked") ("analyzer" "no-mock"))))))

(define-public crate-tea-actorx-runtime-0.2.0-dev.16 (c (n "tea-actorx-runtime") (v "0.2.0-dev.16") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tea-actorx-core") (r "^0.2.0-dev.16") (d #t) (k 0)) (d (n "tea-actorx-host") (r "^0.2.0-dev.16") (o #t) (d #t) (k 0)) (d (n "tea-codec") (r "^0.2.0-dev.16") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "macros"))) (d #t) (k 0)))) (h "0qfwf4111gv2qzp70zhf72j0vcljfnpr6hha7wwwp0l56ad04q9y") (f (quote (("no-mock") ("mock" "tea-actorx-host") ("checked" "tea-codec/checked") ("analyzer" "no-mock"))))))

(define-public crate-tea-actorx-runtime-0.2.0-dev.17 (c (n "tea-actorx-runtime") (v "0.2.0-dev.17") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tea-actorx-core") (r "^0.2.0-dev.17") (d #t) (k 0)) (d (n "tea-actorx-host") (r "^0.2.0-dev.17") (o #t) (d #t) (k 0)) (d (n "tea-codec") (r "^0.2.0-dev.17") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "macros"))) (d #t) (k 0)))) (h "1vp2x8d5ryh6scb11byzz43jcdksfa0alzg6k5j024r9ydagib4v") (f (quote (("no-mock") ("mock" "tea-actorx-host") ("checked" "tea-codec/checked") ("analyzer" "no-mock"))))))

(define-public crate-tea-actorx-runtime-0.2.0-dev.18 (c (n "tea-actorx-runtime") (v "0.2.0-dev.18") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tea-actorx-core") (r "^0.2.0-dev.18") (d #t) (k 0)) (d (n "tea-actorx-host") (r "^0.2.0-dev.18") (o #t) (d #t) (k 0)) (d (n "tea-codec") (r "^0.2.0-dev.18") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "macros"))) (d #t) (k 0)))) (h "1minara27rckwzlkg2liwj8akg38b1vpdax09b45javyhm3nz8iy") (f (quote (("no-mock") ("mock" "tea-actorx-host") ("checked" "tea-codec/checked") ("analyzer" "no-mock"))))))

(define-public crate-tea-actorx-runtime-0.2.0-dev.19 (c (n "tea-actorx-runtime") (v "0.2.0-dev.19") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tea-actorx-core") (r "^0.2.0-dev.19") (d #t) (k 0)) (d (n "tea-actorx-host") (r "^0.2.0-dev.19") (o #t) (d #t) (k 0)) (d (n "tea-codec") (r "^0.2.0-dev.19") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "macros"))) (d #t) (k 0)))) (h "0p4mwgy0ds1k0zysayf5g76l6gcvdcqvv298mr09bffszcqa4af1") (f (quote (("no-mock") ("mock" "tea-actorx-host") ("checked" "tea-codec/checked") ("analyzer" "no-mock"))))))

(define-public crate-tea-actorx-runtime-0.2.0-dev.20 (c (n "tea-actorx-runtime") (v "0.2.0-dev.20") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tea-actorx-core") (r "^0.2.0-dev.20") (d #t) (k 0)) (d (n "tea-actorx-host") (r "^0.2.0-dev.20") (o #t) (d #t) (k 0)) (d (n "tea-codec") (r "^0.2.0-dev.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "macros"))) (d #t) (k 0)))) (h "1f9zv96p1zcdcchhik93lk04i6ykyji8zvgkd42pv0czp6lrcsy0") (f (quote (("no-mock") ("mock" "tea-actorx-host") ("checked" "tea-codec/checked") ("analyzer" "no-mock"))))))

(define-public crate-tea-actorx-runtime-0.2.0-dev.21 (c (n "tea-actorx-runtime") (v "0.2.0-dev.21") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tea-actorx-core") (r "^0.2.0-dev.21") (d #t) (k 0)) (d (n "tea-actorx-host") (r "^0.2.0-dev.21") (o #t) (d #t) (k 0)) (d (n "tea-codec") (r "^0.2.0-dev.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "macros"))) (d #t) (k 0)))) (h "1ig2rn9rzv6rlql2pnkgyf8m7ncmanb4bgc4n80hgjl89frpkf9d") (f (quote (("no-mock") ("mock" "tea-actorx-host") ("checked" "tea-codec/checked") ("analyzer" "no-mock"))))))

(define-public crate-tea-actorx-runtime-0.2.0-dev.22 (c (n "tea-actorx-runtime") (v "0.2.0-dev.22") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tea-actorx-core") (r "^0.2.0-dev.22") (d #t) (k 0)) (d (n "tea-actorx-host") (r "^0.2.0-dev.22") (o #t) (d #t) (k 0)) (d (n "tea-codec") (r "^0.2.0-dev.22") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "macros"))) (d #t) (k 0)))) (h "1famiynmbhd499fym089vak5yjxkjs79ibkqx3zw9dw72ih1qs53") (f (quote (("no-mock") ("mock" "tea-actorx-host") ("checked" "tea-codec/checked") ("analyzer" "no-mock"))))))

