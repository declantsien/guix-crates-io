(define-module (crates-io te a- tea-codec) #:use-module (crates-io))

(define-public crate-tea-codec-0.1.0 (c (n "tea-codec") (v "0.1.0") (d (list (d (n "base64") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.3") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)))) (h "0jy9m2rm8j40m43svv6wdgm6hggwpy5jx1fks5ib4n674sk1x0k9")))

(define-public crate-tea-codec-0.1.1 (c (n "tea-codec") (v "0.1.1") (d (list (d (n "base64") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.3") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)))) (h "0f6dhwh5jazxqb7fnn6ipfpg1zznr513s27gr5dv8400hcqcsgf3")))

(define-public crate-tea-codec-0.2.0-dev.1 (c (n "tea-codec") (v "0.2.0-dev.1") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.2.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.3") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.9.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.2.0-dev.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1wlrh35hd27zlm1c8x45w9wn5c75cvngikp580rm18g94ndscja7") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.2.0-dev.2 (c (n "tea-codec") (v "0.2.0-dev.2") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.2.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.3") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.9.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.2.0-dev.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "070x7vsc5iv0isl0x0yq9w0d0h9ldvs33clim1ib220rv5pknq2k") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.2.0-dev.3 (c (n "tea-codec") (v "0.2.0-dev.3") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.2.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.3") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.9.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.2.0-dev.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1akghcjgchd3iv3mhv9i62ivjkskccra3i6qyf06nld5vkgyf7l9") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.2.0-dev.4 (c (n "tea-codec") (v "0.2.0-dev.4") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.2.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.3") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.9.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.2.0-dev.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0whbxxgah2k9lks23yy21f9i1xag4alivsbq7s4p7wqd6sn5jpsh") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.2.0-dev.5 (c (n "tea-codec") (v "0.2.0-dev.5") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.2.0-dev.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0a17xhqp0966ivhbl2rzs9fh8cncjkpwb035rx78n2nkglmqa2jc") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.2.0-dev.6 (c (n "tea-codec") (v "0.2.0-dev.6") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.2.0-dev.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "12c15qlvzaccf4846qrbbazwpwjikfyfh38a09rkb56svzlfa35n") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.2.0-dev.7 (c (n "tea-codec") (v "0.2.0-dev.7") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.2.0-dev.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "17b7az2x7q26wwkrjm8dpcdq4b333dxkqa5dwlmc4hc6npczz7gx") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.2.0-dev.8 (c (n "tea-codec") (v "0.2.0-dev.8") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.2.0-dev.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0y1b3bg9nanswvla6cm61kbs4hz6fv39xdm9530yj8x0ngnm9ipd") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.2.0-dev.9 (c (n "tea-codec") (v "0.2.0-dev.9") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.2.0-dev.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1lw7kgjxrcjlk0c0f74qbnm2957vlwnycbwh9wnk7m9wn1s7xga7") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.2.0-dev.10 (c (n "tea-codec") (v "0.2.0-dev.10") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.2.0-dev.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1v7dkv9k04gbmc3isml2fbw2d5hf99p8xvlymndwnad2n8abs6xh") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.2.0-dev.11 (c (n "tea-codec") (v "0.2.0-dev.11") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.2.0-dev.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "09zq92r9ylwmihgm9h5r0r5bzhjnl8s3mkz7j6f19n0i55cnhkpj") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.2.0-dev.12 (c (n "tea-codec") (v "0.2.0-dev.12") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.2.0-dev.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0av1v0p7jrhlyaagyh69gl2kcz4bg0mvq0b8l40bdwmdicfqn4i4") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.2.0-dev.13 (c (n "tea-codec") (v "0.2.0-dev.13") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.2.0-dev.13") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0shbhn61vg11pcr2xwqv58w5n2yrnky34hw8wb57dzvwyvhgh11b") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.2.0-dev.14 (c (n "tea-codec") (v "0.2.0-dev.14") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.2.0-dev.14") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "10khs9xp2vq6k99vgl891wlicvx0778y5zzsh5ljd1balwskqn4q") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.2.0-dev.15 (c (n "tea-codec") (v "0.2.0-dev.15") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.2.0-dev.15") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1q553vn7rn5k2m73mff4vj1bg200r8d3fgizjjza0cddkbf2fscv") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.2.0-dev.16 (c (n "tea-codec") (v "0.2.0-dev.16") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.2.0-dev.16") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "05lqk7x49zvwf4zs31hikdhs1kni6h33xw3kafbfclnlfrpdv38a") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.2.0-dev.17 (c (n "tea-codec") (v "0.2.0-dev.17") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.2.0-dev.17") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "12cjr43prqrhqar66xxyybkm40n17vxygkfpgfnnwyzq6cf4cwd7") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.2.0-dev.18 (c (n "tea-codec") (v "0.2.0-dev.18") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.2.0-dev.18") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1g3q5zpwxbbcndjzv56xg146zg590if3cl1p74r1jwkr1diafzms") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.2.0-dev.19 (c (n "tea-codec") (v "0.2.0-dev.19") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.2.0-dev.19") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0ygld6ha1arr3gmsanfqrgw492rh9vckg25kvl7qb3jfjfn80sbh") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.2.0-dev.20 (c (n "tea-codec") (v "0.2.0-dev.20") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.2.0-dev.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1yyhy1qrfbwp2bkx0g3fb6ljyagqmjfr8l922b8qszljq2wnfv7k") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.2.0-dev.21 (c (n "tea-codec") (v "0.2.0-dev.21") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.2.0-dev.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "05x37zrrw7kmrzlxr7qw6zilalyflhvb67zzz2r6636m8y6caykq") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.2.0-dev.22 (c (n "tea-codec") (v "0.2.0-dev.22") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.2.0-dev.22") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0p1mfivhi91lyky9s46b75q04infkh5f8j91929ri4lfsv3xccfr") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.3.0-dev.1 (c (n "tea-codec") (v "0.3.0-dev.1") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.3.0-dev.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "02dshj2xvsx6chpwzd6a7y6g1kkam3ln3h4is4is0j6ddnxkjgsg") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.3.0-dev.2 (c (n "tea-codec") (v "0.3.0-dev.2") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.3.0-dev.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "02rl3fpq4jnxvrf5sbzxqbp7fil217xfjizrfm0gv0cc79l3xyc7") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.3.0-dev.3 (c (n "tea-codec") (v "0.3.0-dev.3") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.3.0-dev.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0pynlxzl9pc1ajkfax308dwm3h7j4q3032rzqxic554cbr9imybg") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.3.0-dev.4 (c (n "tea-codec") (v "0.3.0-dev.4") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.3.0-dev.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0ahh7i8g46cfz45hzghackykxx86wvjr1a8kbfkl5awf5rq6kbcl") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.3.0-dev.5 (c (n "tea-codec") (v "0.3.0-dev.5") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.3.0-dev.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1fg3f0v8kwczb51svk5wb728kn59zsr0ah3rqbmj06v5imhxayww") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.3.0-dev.6 (c (n "tea-codec") (v "0.3.0-dev.6") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.3.0-dev.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "119zywa81abg5scgfng1ajh8spg0fz6q4mihamfy0zcsgpr8mrd8") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

(define-public crate-tea-codec-0.3.0-dev.7 (c (n "tea-codec") (v "0.3.0-dev.7") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std" "serde"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "prost") (r "^0.11.8") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.153") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde" "write" "union" "const_generics" "const_new"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.12") (d #t) (k 2)) (d (n "tea-codec-macros") (r "^0.3.0-dev.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0n8a94c0ci597dg8ba8vz3vfgqlipx9h3zhr81d5f09xbiavdckd") (f (quote (("runtime" "tokio" "lazy_static") ("default") ("checked") ("backtrace"))))))

