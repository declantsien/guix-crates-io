(define-module (crates-io az al azalea) #:use-module (crates-io))

(define-public crate-azalea-0.1.0 (c (n "azalea") (v "0.1.0") (h "1sjb7qn49n240j6w159v70zzyib1jcsvnirlx9fpvdwa7w0had9a")))

(define-public crate-azalea-0.2.0 (c (n "azalea") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "azalea-client") (r "^0.2.0") (d #t) (k 0)) (d (n "azalea-protocol") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (d #t) (k 2)))) (h "1y80rv57ji45kzhjp5s29i27kcadl6xiclnn26sdsm9jr0lj08k7")))

(define-public crate-azalea-0.2.1 (c (n "azalea") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "azalea-client") (r "^0.2.0") (d #t) (k 0)) (d (n "azalea-protocol") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (d #t) (k 2)))) (h "1zpm6sjm7fxkah6qci5ck3v6glm6lkncsydbda5l86p1f8ibkag1")))

(define-public crate-azalea-0.2.2 (c (n "azalea") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "azalea-client") (r "^0.2.0") (d #t) (k 0)) (d (n "azalea-protocol") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (d #t) (k 2)))) (h "1n8zvzjsmx47xiwh3c94pxrvazwinh01wdk7ng66lxmai7a0jj1f")))

(define-public crate-azalea-0.2.3 (c (n "azalea") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "azalea-client") (r "^0.2.1") (d #t) (k 0)) (d (n "azalea-protocol") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (d #t) (k 2)))) (h "0fv3zq1khmm5shbba969hil2x4rh4rr1ym3dskrixdd0wgby9m9d")))

(define-public crate-azalea-0.2.4 (c (n "azalea") (v "0.2.4") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "azalea-client") (r "^0.2.2") (d #t) (k 0)) (d (n "azalea-protocol") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (d #t) (k 2)))) (h "0021jn1ibhnkncdkad8ql1jrh6cc7v3fghxh9kdlj9z8b823r2nm")))

(define-public crate-azalea-0.3.0 (c (n "azalea") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "azalea-client") (r "^0.3.0") (d #t) (k 0)) (d (n "azalea-protocol") (r "^0.3.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (d #t) (k 2)))) (h "0svy52f867kk9p1kh2d5ngh6c2w6lc1ms0n4j5qqbvjr8jbvms8c")))

(define-public crate-azalea-0.4.0 (c (n "azalea") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "azalea-block") (r "^0.4.0") (d #t) (k 0)) (d (n "azalea-client") (r "^0.4.0") (d #t) (k 0)) (d (n "azalea-core") (r "^0.4.0") (d #t) (k 0)) (d (n "azalea-physics") (r "^0.4.0") (d #t) (k 0)) (d (n "azalea-protocol") (r "^0.4.0") (d #t) (k 0)) (d (n "azalea-world") (r "^0.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "priority-queue") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (d #t) (k 2)))) (h "0z98sb75351qifrz6a2d5ndkzcjv3lih9cgjrlvgd1i97ggdhw6b")))

(define-public crate-azalea-0.5.0 (c (n "azalea") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "azalea-block") (r "^0.5.0") (d #t) (k 0)) (d (n "azalea-chat") (r "^0.5.0") (d #t) (k 0)) (d (n "azalea-client") (r "^0.5.0") (d #t) (k 0)) (d (n "azalea-core") (r "^0.5.0") (d #t) (k 0)) (d (n "azalea-physics") (r "^0.5.0") (d #t) (k 0)) (d (n "azalea-protocol") (r "^0.5.0") (d #t) (k 0)) (d (n "azalea-world") (r "^0.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "priority-queue") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (d #t) (k 2)) (d (n "uuid") (r "^1.2.2") (d #t) (k 0)))) (h "0xafbvbg0c1g4dbb5wl143yg72cfjjgijsnvxzjp6l4afa57ri4q")))

(define-public crate-azalea-0.6.0 (c (n "azalea") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "azalea-block") (r "^0.6.0") (d #t) (k 0)) (d (n "azalea-chat") (r "^0.6.0") (d #t) (k 0)) (d (n "azalea-client") (r "^0.6.0") (d #t) (k 0)) (d (n "azalea-core") (r "^0.6.0") (d #t) (k 0)) (d (n "azalea-ecs") (r "^0.6.0") (d #t) (k 0)) (d (n "azalea-physics") (r "^0.6.0") (d #t) (k 0)) (d (n "azalea-protocol") (r "^0.6.0") (d #t) (k 0)) (d (n "azalea-registry") (r "^0.6.0") (d #t) (k 0)) (d (n "azalea-world") (r "^0.6.0") (d #t) (k 0)) (d (n "bevy_tasks") (r "^0.9.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("deref" "deref_mut"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 0)) (d (n "iyes_loopless") (r "^0.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "priority-queue") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (d #t) (k 0)))) (h "0kfyj2i30z7zpbg80r06p0p6p4599j4ih0xyr5m97a02ksih46ir")))

(define-public crate-azalea-0.7.0 (c (n "azalea") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "azalea-auth") (r "^0.7.0") (d #t) (k 0)) (d (n "azalea-block") (r "^0.7.0") (d #t) (k 0)) (d (n "azalea-brigadier") (r "^0.7.0") (d #t) (k 0)) (d (n "azalea-chat") (r "^0.7.0") (d #t) (k 0)) (d (n "azalea-client") (r "^0.7.0") (d #t) (k 0)) (d (n "azalea-core") (r "^0.7.0") (d #t) (k 0)) (d (n "azalea-inventory") (r "^0.7.0") (d #t) (k 0)) (d (n "azalea-physics") (r "^0.7.0") (d #t) (k 0)) (d (n "azalea-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "azalea-registry") (r "^0.7.0") (d #t) (k 0)) (d (n "azalea-world") (r "^0.7.0") (d #t) (k 0)) (d (n "bevy_app") (r "^0.10.0") (d #t) (k 0)) (d (n "bevy_ecs") (r "^0.10.0") (d #t) (k 0)) (d (n "bevy_log") (r "^0.10.1") (d #t) (k 0)) (d (n "bevy_tasks") (r "^0.10.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("deref" "deref_mut"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "priority-queue") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (d #t) (k 0)))) (h "1fv6g5rkqp9mbnk4q53m8l6lwjd3hb568v0rn2s1anq4b6ad74wf")))

(define-public crate-azalea-0.8.0 (c (n "azalea") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "azalea-auth") (r "^0.8.0") (d #t) (k 0)) (d (n "azalea-block") (r "^0.8.0") (d #t) (k 0)) (d (n "azalea-brigadier") (r "^0.8.0") (d #t) (k 0)) (d (n "azalea-chat") (r "^0.8.0") (d #t) (k 0)) (d (n "azalea-client") (r "^0.8.0") (d #t) (k 0)) (d (n "azalea-core") (r "^0.8.0") (d #t) (k 0)) (d (n "azalea-entity") (r "^0.8.0") (d #t) (k 0)) (d (n "azalea-inventory") (r "^0.8.0") (d #t) (k 0)) (d (n "azalea-physics") (r "^0.8.0") (d #t) (k 0)) (d (n "azalea-protocol") (r "^0.8.0") (d #t) (k 0)) (d (n "azalea-registry") (r "^0.8.0") (d #t) (k 0)) (d (n "azalea-world") (r "^0.8.0") (d #t) (k 0)) (d (n "bevy_app") (r "^0.11.2") (d #t) (k 0)) (d (n "bevy_ecs") (r "^0.11.2") (d #t) (k 0)) (d (n "bevy_log") (r "^0.11.2") (d #t) (k 0)) (d (n "bevy_tasks") (r "^0.11.2") (d #t) (k 0)) (d (n "bevy_time") (r "^0.11.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("deref" "deref_mut"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-lite") (r "^1.13.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "priority-queue") (r "^1.3.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (d #t) (k 0)))) (h "1sf5j1gkljjiy61fx4i07zvki9wapjhzwkvq5z5lym2rmnxrgn3d") (f (quote (("log" "azalea-client/log") ("default" "log"))))))

(define-public crate-azalea-0.9.0 (c (n "azalea") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "azalea-auth") (r "^0.9.0") (d #t) (k 0)) (d (n "azalea-block") (r "^0.9.0") (d #t) (k 0)) (d (n "azalea-brigadier") (r "^0.9.0") (d #t) (k 0)) (d (n "azalea-buf") (r "^0.9.0") (d #t) (k 0)) (d (n "azalea-chat") (r "^0.9.0") (d #t) (k 0)) (d (n "azalea-client") (r "^0.9.0") (k 0)) (d (n "azalea-core") (r "^0.9.0") (d #t) (k 0)) (d (n "azalea-entity") (r "^0.9.0") (d #t) (k 0)) (d (n "azalea-inventory") (r "^0.9.0") (d #t) (k 0)) (d (n "azalea-physics") (r "^0.9.0") (d #t) (k 0)) (d (n "azalea-protocol") (r "^0.9.0") (d #t) (k 0)) (d (n "azalea-registry") (r "^0.9.0") (d #t) (k 0)) (d (n "azalea-world") (r "^0.9.0") (d #t) (k 0)) (d (n "bevy_app") (r "^0.12.1") (d #t) (k 0)) (d (n "bevy_ecs") (r "^0.12.1") (d #t) (k 0)) (d (n "bevy_log") (r "^0.12.1") (d #t) (k 0)) (d (n "bevy_tasks") (r "^0.12.1") (f (quote ("multi-threaded"))) (d #t) (k 0)) (d (n "bevy_time") (r "^0.12.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (f (quote ("deref" "deref_mut"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "futures-lite") (r "^2.1.0") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "priority-queue") (r "^1.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (d #t) (k 0)))) (h "136gzfqgaakrdbwqf8q6qakgb1xigcg0fj3hh456wwdrm8r806k9") (f (quote (("log" "azalea-client/log") ("default" "log"))))))

(define-public crate-azalea-0.9.1 (c (n "azalea") (v "0.9.1") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "azalea-auth") (r "^0.9.0") (d #t) (k 0)) (d (n "azalea-block") (r "^0.9.0") (d #t) (k 0)) (d (n "azalea-brigadier") (r "^0.9.0") (d #t) (k 0)) (d (n "azalea-buf") (r "^0.9.0") (d #t) (k 0)) (d (n "azalea-chat") (r "^0.9.0") (d #t) (k 0)) (d (n "azalea-client") (r "^0.9.0") (k 0)) (d (n "azalea-core") (r "^0.9.0") (d #t) (k 0)) (d (n "azalea-entity") (r "^0.9.0") (d #t) (k 0)) (d (n "azalea-inventory") (r "^0.9.0") (d #t) (k 0)) (d (n "azalea-physics") (r "^0.9.0") (d #t) (k 0)) (d (n "azalea-protocol") (r "^0.9.0") (d #t) (k 0)) (d (n "azalea-registry") (r "^0.9.0") (d #t) (k 0)) (d (n "azalea-world") (r "^0.9.0") (d #t) (k 0)) (d (n "bevy_app") (r "^0.13.0") (d #t) (k 0)) (d (n "bevy_ecs") (r "^0.13.0") (d #t) (k 0)) (d (n "bevy_log") (r "^0.13.0") (d #t) (k 0)) (d (n "bevy_tasks") (r "^0.13.0") (f (quote ("multi-threaded"))) (d #t) (k 0)) (d (n "bevy_time") (r "^0.13.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (f (quote ("deref" "deref_mut"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-lite") (r "^2.2.0") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "priority-queue") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (d #t) (k 0)))) (h "1bcmjxjg57dy24bjrrzs9im9cr6kmi3hkzljx6rss7vn1n2467jw") (f (quote (("log" "azalea-client/log") ("default" "log"))))))

