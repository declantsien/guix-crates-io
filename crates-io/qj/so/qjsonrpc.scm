(define-module (crates-io qj so qjsonrpc) #:use-module (crates-io))

(define-public crate-qjsonrpc-0.0.9 (c (n "qjsonrpc") (v "0.0.9") (d (list (d (n "dirs-next") (r "^1.0.1") (d #t) (k 0)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "log") (r "~0.4.8") (d #t) (k 0)) (d (n "quinn") (r "~0.6.1") (f (quote ("tls-rustls"))) (k 0)) (d (n "rand") (r "~0.7.3") (d #t) (k 0)) (d (n "rcgen") (r "~0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "09y8mjizjqz2fbc5rmx5d0p920cf68s4gw34gy2d0c1vi3hrqn5c")))

(define-public crate-qjsonrpc-0.0.10 (c (n "qjsonrpc") (v "0.0.10") (d (list (d (n "dirs-next") (r "^1.0.1") (d #t) (k 0)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "log") (r "~0.4.8") (d #t) (k 0)) (d (n "quinn") (r "~0.6.1") (f (quote ("tls-rustls"))) (k 0)) (d (n "rand") (r "~0.7.3") (d #t) (k 0)) (d (n "rcgen") (r "~0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1rfsckz6nml48c8md7ha855bs2ibz2fy5h13cqwxxk7c44h7bqs4")))

(define-public crate-qjsonrpc-0.1.0 (c (n "qjsonrpc") (v "0.1.0") (d (list (d (n "dirs-next") (r "^1.0.1") (d #t) (k 0)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "log") (r "~0.4.8") (d #t) (k 0)) (d (n "quinn") (r "~0.6.1") (f (quote ("tls-rustls"))) (k 0)) (d (n "rand") (r "~0.7.3") (d #t) (k 0)) (d (n "rcgen") (r "~0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1shy6qb4a50r1mz23248c7yxrkwg1da4lw4yyzvc15if9hjmc8cy")))

(define-public crate-qjsonrpc-0.1.1 (c (n "qjsonrpc") (v "0.1.1") (d (list (d (n "futures") (r "~0.3.12") (d #t) (k 0)) (d (n "log") (r "~0.4.14") (d #t) (k 0)) (d (n "quinn") (r "~0.6.1") (f (quote ("tls-rustls"))) (k 0)) (d (n "rand") (r "~0.7.3") (d #t) (k 0)) (d (n "rcgen") (r "~0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tokio") (r "~0.2.25") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (d #t) (k 0)))) (h "1lqi369gl35a4brvdb7jrkijprkqw6pj021r8y1l8blbwyzv70j4")))

(define-public crate-qjsonrpc-0.1.2 (c (n "qjsonrpc") (v "0.1.2") (d (list (d (n "futures") (r "~0.3.12") (d #t) (k 0)) (d (n "log") (r "~0.4.14") (d #t) (k 0)) (d (n "quinn") (r "~0.6.1") (f (quote ("tls-rustls"))) (k 0)) (d (n "rand") (r "~0.7.3") (d #t) (k 0)) (d (n "rcgen") (r "~0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tokio") (r "~0.2.25") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (d #t) (k 0)))) (h "1zbf87mj5dfvgzyhvzxbg80ys0aw1yag8ikwhfc0bknj2kk8vxiw")))

(define-public crate-qjsonrpc-0.2.0 (c (n "qjsonrpc") (v "0.2.0") (d (list (d (n "futures") (r "~0.3.12") (d #t) (k 0)) (d (n "log") (r "~0.4.14") (d #t) (k 0)) (d (n "quinn") (r "~0.7.0") (f (quote ("tls-rustls"))) (k 0)) (d (n "rand") (r "~0.7.3") (d #t) (k 0)) (d (n "rcgen") (r "~0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tokio") (r "^1.3.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (d #t) (k 0)))) (h "1h0q3859x3q0pg77nj3nl5sl210zmq7fcs8d41jfbh91c6lwf3gh")))

(define-public crate-qjsonrpc-0.2.2 (c (n "qjsonrpc") (v "0.2.2") (d (list (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "quinn") (r "~0.7") (f (quote ("tls-rustls"))) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 0)) (d (n "rcgen") (r "~0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tokio") (r "^1.3.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (d #t) (k 0)))) (h "1p7dknbsbcwsmibjdlwpwm1qp8k2bna95pxiah9xq1ziihjikyls")))

(define-public crate-qjsonrpc-0.2.3 (c (n "qjsonrpc") (v "0.2.3") (d (list (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "quinn") (r "~0.7") (f (quote ("tls-rustls"))) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 0)) (d (n "rcgen") (r "~0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tokio") (r "^1.3.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (d #t) (k 0)))) (h "07kb5n1krzwgwfznykjysgi8syybmxn6cdgv6hsq4rmzg7w1cb0v")))

(define-public crate-qjsonrpc-0.3.0 (c (n "qjsonrpc") (v "0.3.0") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "color-eyre") (r "~0.6") (d #t) (k 2)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "quinn") (r "^0.8.0") (f (quote ("tls-rustls" "ring"))) (k 0)) (d (n "quinn-proto") (r "^0.8.0") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 0)) (d (n "rcgen") (r "~0.7") (d #t) (k 0)) (d (n "rustls") (r "^0.20.2") (f (quote ("quic" "dangerous_configuration"))) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2.0") (d #t) (k 0)) (d (n "webpki") (r "~0.21.3") (d #t) (k 0)))) (h "1ahh3wmgi8248y12vv7jkhl6gry9j8l45i2f7yqym6w2dyjsiz6v")))

(define-public crate-qjsonrpc-0.4.0 (c (n "qjsonrpc") (v "0.4.0") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "color-eyre") (r "~0.6") (d #t) (k 2)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "quinn") (r "^0.8.0") (f (quote ("tls-rustls" "ring"))) (k 0)) (d (n "quinn-proto") (r "^0.8.0") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 0)) (d (n "rcgen") (r "~0.7") (d #t) (k 0)) (d (n "rustls") (r "^0.20.2") (f (quote ("quic" "dangerous_configuration"))) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "~0.1.26") (d #t) (k 2)) (d (n "tracing-subscriber") (r "~0.2.15") (d #t) (k 2)) (d (n "url") (r "^2.2.0") (d #t) (k 0)) (d (n "webpki") (r "~0.21.3") (d #t) (k 0)))) (h "0j6w7rl86gmr94rfn1aj6n9i3irvcyib335g8grfaxiqjd2jcwr4")))

(define-public crate-qjsonrpc-0.4.1 (c (n "qjsonrpc") (v "0.4.1") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "color-eyre") (r "~0.6") (d #t) (k 2)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "quinn") (r "^0.8.0") (f (quote ("tls-rustls" "ring"))) (k 0)) (d (n "quinn-proto") (r "^0.8.0") (d #t) (k 0)) (d (n "rand") (r "~0.7") (d #t) (k 0)) (d (n "rcgen") (r "~0.9") (d #t) (k 0)) (d (n "rustls") (r "^0.20.2") (f (quote ("quic" "dangerous_configuration"))) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "~0.1.26") (d #t) (k 2)) (d (n "tracing-subscriber") (r "~0.2.15") (d #t) (k 2)) (d (n "url") (r "^2.2.0") (d #t) (k 0)) (d (n "webpki") (r "~0.21.3") (d #t) (k 0)))) (h "18l7z8dw4j68a3pb7n6dm72009888hbwkqhmn9gr6v0acbqvfcpl")))

(define-public crate-qjsonrpc-0.4.2 (c (n "qjsonrpc") (v "0.4.2") (d (list (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "quinn") (r "^0.8.0") (f (quote ("tls-rustls" "ring"))) (k 0)) (d (n "quinn-proto") (r "^0.8.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rcgen") (r "~0.9") (d #t) (k 0)) (d (n "rustls") (r "^0.20.2") (f (quote ("quic" "dangerous_configuration"))) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "url") (r "^2.2.0") (d #t) (k 0)) (d (n "webpki") (r "~0.21.3") (d #t) (k 0)) (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "color-eyre") (r "~0.6") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tokio") (r "^1.17.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "~0.1.26") (d #t) (k 2)) (d (n "tracing-subscriber") (r "~0.2.15") (d #t) (k 2)))) (h "1mrzgkp4prmbllgff15h5q2bn8yf8y91vl6xn6rdiv1swjdhqp1a")))

(define-public crate-qjsonrpc-0.5.0 (c (n "qjsonrpc") (v "0.5.0") (d (list (d (n "log") (r "~0.4.17") (d #t) (k 0)) (d (n "quinn") (r "^0.9.3") (f (quote ("tls-rustls" "ring"))) (k 0)) (d (n "quinn-proto") (r "^0.9.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rcgen") (r "~0.10.0") (d #t) (k 0)) (d (n "rustls") (r "^0.20.8") (f (quote ("quic" "dangerous_configuration"))) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "webpki") (r "~0.22.0") (d #t) (k 0)) (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "color-eyre") (r "~0.6") (d #t) (k 2)) (d (n "quinn") (r "^0.9.3") (f (quote ("tls-rustls" "ring" "runtime-tokio"))) (k 2)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "tokio") (r "^1.26.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "~0.1.37") (d #t) (k 2)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0bc8n9n7cns338kkgn4gq45k7klfbcmf87snvvh62pkfzk4sagnw")))

