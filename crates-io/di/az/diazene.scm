(define-module (crates-io di az diazene) #:use-module (crates-io))

(define-public crate-diazene-0.2.0 (c (n "diazene") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.8") (f (quote ("v4"))) (d #t) (k 2)))) (h "13517ahbnad760gzsxb1yfs7qzji530546hwwscmqhcskqkqzika")))

(define-public crate-diazene-0.2.1 (c (n "diazene") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.8") (f (quote ("v4"))) (d #t) (k 2)))) (h "1vycy3fbyxxrh3w7gac4mylcqh8jwhki7k5yn8iff7i1ylr5rllw")))

(define-public crate-diazene-0.3.1 (c (n "diazene") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 2)) (d (n "anyid") (r "^0.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.8") (f (quote ("v4"))) (d #t) (k 2)))) (h "0677n3myxzvg1b50hs0ws881d4w741flwmphplylw1m9r0g29mpa")))

(define-public crate-diazene-0.4.1 (c (n "diazene") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 2)) (d (n "anyid") (r "^0.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "uuid") (r "^1.8") (f (quote ("v4"))) (d #t) (k 2)))) (h "0ch2aiv6rdahj44gc183fm5v4m0bd28wvpg85b1qp3n0k1qlfkn1") (f (quote (("system-v2") ("persistence" "serde"))))))

(define-public crate-diazene-1.4.1 (c (n "diazene") (v "1.4.1") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 2)) (d (n "anyid") (r "^0.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "uuid") (r "^1.8") (f (quote ("v4" "v7" "serde"))) (d #t) (k 2)))) (h "0w0qhy84wdw7irb7161pgncavnwayxy8zdn36yi8vfq2z2kxda65") (f (quote (("unstable") ("persistence" "serde"))))))

