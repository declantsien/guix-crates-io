(define-module (crates-io di dk didkit) #:use-module (crates-io))

(define-public crate-didkit-0.1.0 (c (n "didkit") (v "0.1.0") (h "127brh90l4cb8wnajr5l5dxnr7ann3ngm3m292hal5l92cxhvfad")))

(define-public crate-didkit-0.2.0 (c (n "didkit") (v "0.2.0") (d (list (d (n "did-ethr") (r "^0.0.1") (d #t) (k 0)) (d (n "did-method-key") (r "^0.1") (d #t) (k 0)) (d (n "did-onion") (r "^0.1") (d #t) (k 0)) (d (n "did-pkh") (r "^0.0.1") (d #t) (k 0)) (d (n "did-sol") (r "^0.0.1") (d #t) (k 0)) (d (n "did-tz") (r "^0.1") (k 0)) (d (n "did-web") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "ssi") (r "^0.2") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1njwrzjxyz7n2h3fjhia4x1wf7y1cx53ljfls5v037j1v2n9g6dh") (f (quote (("wasm") ("secp256k1" "ssi/libsecp256k1" "did-tz/secp256k1" "did-method-key/secp256k1") ("ring" "ssi/ring") ("p256" "ssi/p256" "did-tz/p256" "did-method-key/p256") ("http-did" "ssi/http-did") ("default" "ring" "secp256k1" "p256"))))))

(define-public crate-didkit-0.2.1 (c (n "didkit") (v "0.2.1") (d (list (d (n "did-ethr") (r "^0.0.1") (d #t) (k 0)) (d (n "did-method-key") (r "^0.1") (d #t) (k 0)) (d (n "did-onion") (r "^0.1") (d #t) (k 0)) (d (n "did-pkh") (r "^0.0.1") (d #t) (k 0)) (d (n "did-sol") (r "^0.0.1") (d #t) (k 0)) (d (n "did-tz") (r "^0.1") (k 0)) (d (n "did-web") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "ssi") (r "^0.2") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0si75mcm9anj57y48njlifz1avbp14qy8lmpp857yk5gv6m0m0fa") (f (quote (("wasm") ("secp256k1" "ssi/libsecp256k1" "did-tz/secp256k1" "did-method-key/secp256k1") ("ring" "ssi/ring") ("p256" "ssi/p256" "did-tz/p256" "did-method-key/p256") ("http-did" "ssi/http-did") ("default" "ring" "secp256k1" "p256"))))))

(define-public crate-didkit-0.3.0 (c (n "didkit") (v "0.3.0") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "did-ethr") (r "^0.1") (d #t) (k 0)) (d (n "did-method-key") (r "^0.1.2") (d #t) (k 0)) (d (n "did-onion") (r "^0.1.1") (d #t) (k 0)) (d (n "did-pkh") (r "^0.1") (d #t) (k 0)) (d (n "did-tz") (r "^0.1.1") (k 0)) (d (n "did-web") (r "^0.1.1") (d #t) (k 0)) (d (n "did-webkey") (r "^0.1") (d #t) (k 0)) (d (n "jni") (r "^0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sshkeys") (r "^0.3") (d #t) (k 0)) (d (n "ssi") (r "^0.3") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1470a9ycdjbswfy0p30ahhkkb76y2crkyj01agpcaygnryl3jm3c") (f (quote (("wasm") ("secp256k1" "ssi/libsecp256k1" "did-tz/secp256k1" "did-method-key/secp256k1") ("ring" "ssi/ring") ("p256" "ssi/secp256r1" "did-tz/p256" "did-webkey/p256" "did-method-key/secp256r1") ("http-did" "ssi/http-did") ("default" "ring" "secp256k1" "p256"))))))

(define-public crate-didkit-0.4.0 (c (n "didkit") (v "0.4.0") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "did-ethr") (r "^0.1") (k 0)) (d (n "did-ion") (r "^0.1.0") (k 0)) (d (n "did-method-key") (r "^0.1.2") (k 0)) (d (n "did-onion") (r "^0.1.1") (k 0)) (d (n "did-pkh") (r "^0.1") (k 0)) (d (n "did-tz") (r "^0.1.1") (k 0)) (d (n "did-web") (r "^0.1.1") (k 0)) (d (n "did-webkey") (r "^0.1") (k 0)) (d (n "jni") (r "^0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sshkeys") (r "^0.3") (d #t) (k 0)) (d (n "ssi") (r "^0.4") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "04rcjd6pvypbv5c2vvygqj0k0bxm8l5hsf904jqw69cybqklz48s") (f (quote (("wasm") ("secp256k1" "ssi/libsecp256k1" "did-tz/secp256k1" "did-method-key/secp256k1") ("ring" "ssi/ring") ("p256" "ssi/secp256r1" "did-tz/p256" "did-webkey/p256" "did-method-key/secp256r1") ("no-ring" "ssi/ed25519-dalek" "ssi/sha2" "ssi/rsa" "ssi/rand") ("http-did" "ssi/http-did") ("default" "ring" "secp256k1" "p256"))))))

(define-public crate-didkit-0.3.1 (c (n "didkit") (v "0.3.1") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "did-ethr") (r "=0.1.0") (d #t) (k 0)) (d (n "did-method-key") (r "=0.1.2") (d #t) (k 0)) (d (n "did-onion") (r "=0.1.1") (d #t) (k 0)) (d (n "did-pkh") (r "=0.1.0") (d #t) (k 0)) (d (n "did-tz") (r "=0.1.1") (k 0)) (d (n "did-web") (r "=0.1.1") (d #t) (k 0)) (d (n "did-webkey") (r "=0.1.0") (d #t) (k 0)) (d (n "jni") (r "^0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sshkeys") (r "^0.3") (d #t) (k 0)) (d (n "ssi") (r "^0.3") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1i9zyfzg3v3vc1c5bj44bh9ifml2a5kfdj94qxlmnx4bq9d1sshc") (f (quote (("wasm") ("secp256k1" "ssi/libsecp256k1" "did-tz/secp256k1" "did-method-key/secp256k1") ("ring" "ssi/ring") ("p256" "ssi/secp256r1" "did-tz/p256" "did-webkey/p256" "did-method-key/secp256r1") ("http-did" "ssi/http-did") ("default" "ring" "secp256k1" "p256"))))))

(define-public crate-didkit-0.5.0 (c (n "didkit") (v "0.5.0") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "did-ethr") (r "^0.2") (k 0)) (d (n "did-ion") (r "^0.2.0") (k 0)) (d (n "did-jwk") (r "^0.1.0") (k 0)) (d (n "did-method-key") (r "^0.2.0") (k 0)) (d (n "did-onion") (r "^0.2.0") (k 0)) (d (n "did-pkh") (r "^0.2") (d #t) (k 0)) (d (n "did-tz") (r "^0.2.0") (d #t) (k 0)) (d (n "did-web") (r "^0.2.0") (k 0)) (d (n "did-webkey") (r "^0.2") (k 0)) (d (n "jni") (r "^0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sshkeys") (r "^0.3") (d #t) (k 0)) (d (n "ssi") (r "^0.6") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "08g7vixwf3qq56fgp0a8cr82z52v6y4a6ya8w750mpfsn495n37m") (f (quote (("w3c" "ssi/w3c" "secp256r1" "secp256k1") ("tezos" "ssi/tezos") ("solana" "ssi/solana") ("secp384r1" "ssi/secp384r1" "did-method-key/secp384r1") ("secp256r1" "ssi/secp256r1" "did-method-key/secp256r1") ("secp256k1" "ssi/secp256k1" "did-method-key/secp256k1") ("rsa" "ssi/rsa") ("ripemd-160" "ssi/ripemd-160") ("ring" "ssi/ring") ("http-did" "ssi/http-did") ("eip" "ssi/eip") ("ed25519" "ssi/ed25519") ("default" "w3c" "ed25519" "rsa" "ripemd-160" "eip" "tezos") ("aleo" "ssi/aleo"))))))

(define-public crate-didkit-0.6.0 (c (n "didkit") (v "0.6.0") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "did-ethr") (r "^0.2") (k 0)) (d (n "did-ion") (r "^0.2.0") (k 0)) (d (n "did-jwk") (r "^0.1.0") (k 0)) (d (n "did-method-key") (r "^0.2.0") (k 0)) (d (n "did-onion") (r "^0.2.0") (k 0)) (d (n "did-pkh") (r "^0.2") (d #t) (k 0)) (d (n "did-tz") (r "^0.2.0") (d #t) (k 0)) (d (n "did-web") (r "^0.2.0") (k 0)) (d (n "did-webkey") (r "^0.2") (k 0)) (d (n "jni") (r "^0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sshkeys") (r "^0.3") (d #t) (k 0)) (d (n "ssi") (r "^0.7.0") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0br06aw5c4i0lsry0kgfhav4k2jm8ia0hsb76w4y41fg9dxsyn8v") (f (quote (("w3c" "ssi/w3c" "secp256r1" "secp256k1") ("tezos" "ssi/tezos") ("solana" "ssi/solana") ("secp384r1" "ssi/secp384r1" "did-method-key/secp384r1") ("secp256r1" "ssi/secp256r1" "did-method-key/secp256r1") ("secp256k1" "ssi/secp256k1" "did-method-key/secp256k1") ("rsa" "ssi/rsa") ("ripemd-160" "ssi/ripemd-160") ("ring" "ssi/ring") ("http-did" "ssi/http-did") ("eip" "ssi/eip") ("ed25519" "ssi/ed25519") ("default" "w3c" "ed25519" "rsa" "ripemd-160" "eip" "tezos") ("aleo" "ssi/aleo"))))))

