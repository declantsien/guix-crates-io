(define-module (crates-io di vo divoom) #:use-module (crates-io))

(define-public crate-divoom-0.1.0 (c (n "divoom") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "contracts") (r "^0.6.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mockito") (r "^0.31.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.11") (d #t) (k 0)) (d (n "rgb") (r "^0.8.33") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.70") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.13.0") (f (quote ("rt-multi-thread" "time" "sync" "macros" "net" "io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log"))) (d #t) (k 0)))) (h "0b84ymz5vh1m2q50f7mwjpkkmk5vc2bi0wyhirp75q8l1in5w2w0")))

(define-public crate-divoom-0.1.1 (c (n "divoom") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "contracts") (r "^0.6.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mockito") (r "^0.31.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.11") (d #t) (k 0)) (d (n "rgb") (r "^0.8.33") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.70") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.13.0") (f (quote ("rt-multi-thread" "time" "sync" "macros" "net" "io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log"))) (d #t) (k 0)))) (h "0n2b17ial7jhk9v2zms471fiafxv2s13kr8iwdpbz6qfjkwjisfq")))

(define-public crate-divoom-0.1.2 (c (n "divoom") (v "0.1.2") (d (list (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "contracts") (r "^0.6.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mockito") (r "^0.31.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.11") (d #t) (k 0)) (d (n "rgb") (r "^0.8.33") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.70") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.13.0") (f (quote ("rt-multi-thread" "time" "sync" "macros" "net" "io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log"))) (d #t) (k 0)))) (h "0iwing2frgwn9kqh0mmkjxik2sg85jfj9zlabdcik3sf1yxcw3sf")))

(define-public crate-divoom-0.1.9 (c (n "divoom") (v "0.1.9") (d (list (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "contracts") (r "^0.6.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mockito") (r "^0.31.0") (d #t) (k 2)) (d (n "openssl") (r "^0.10.29") (f (quote ("vendored"))) (d #t) (t "cfg(unix)") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.11") (d #t) (k 0)) (d (n "rgb") (r "^0.8.33") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.70") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.13.0") (f (quote ("rt-multi-thread" "time" "sync" "macros" "net" "io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log"))) (d #t) (k 0)))) (h "0inrnii96p9vpfhgn9ackmkrwrq53lvib1p456xp1r04swx8zks4")))

(define-public crate-divoom-0.1.10 (c (n "divoom") (v "0.1.10") (d (list (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "contracts") (r "^0.6.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mockito") (r "^0.31.0") (d #t) (k 2)) (d (n "openssl") (r "^0.10.29") (f (quote ("vendored"))) (d #t) (t "cfg(unix)") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.11") (d #t) (k 0)) (d (n "rgb") (r "^0.8.33") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.70") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.13.0") (f (quote ("rt-multi-thread" "time" "sync" "macros" "net" "io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log"))) (d #t) (k 0)))) (h "14lx12lq8n4rvcy45fyri392fjg82vhrxhj08475bsmzykmhhbkg")))

(define-public crate-divoom-0.1.13 (c (n "divoom") (v "0.1.13") (d (list (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "contracts") (r "^0.6.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gif") (r "^0.11.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mockito") (r "^0.31.0") (d #t) (k 2)) (d (n "openssl") (r "^0.10.29") (f (quote ("vendored"))) (d #t) (t "cfg(unix)") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.11") (d #t) (k 0)) (d (n "rgb") (r "^0.8.33") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.70") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tiny-skia") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.13.0") (f (quote ("rt-multi-thread" "time" "sync" "macros" "net" "io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log"))) (d #t) (k 0)))) (h "080cmmfcvafahrxkyygr7w2ylr64ihcx7f2x2xmf2kay26hzmhpp") (f (quote (("default" "animation-builder")))) (s 2) (e (quote (("animation-builder" "dep:gif" "dep:tiny-skia"))))))

(define-public crate-divoom-0.1.17 (c (n "divoom") (v "0.1.17") (d (list (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "contracts") (r "^0.6.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "gif") (r "^0.11.4") (o #t) (d #t) (k 0)) (d (n "jpeg-decoder") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mockito") (r "^0.31.0") (d #t) (k 2)) (d (n "openssl") (r "^0.10.29") (f (quote ("vendored"))) (d #t) (t "cfg(unix)") (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.11") (d #t) (k 0)) (d (n "rgb") (r "^0.8.33") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.70") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tiny-skia") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.13.0") (f (quote ("rt-multi-thread" "time" "sync" "macros" "net" "io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log"))) (d #t) (k 0)))) (h "1y5c3y26abrlp4w641fk8d9w7clq0sjn37w7m9yvaxyql0n9g81g") (f (quote (("resource-loader-full" "resource-loader-gif" "resource-loader-jpeg") ("default" "animation-builder" "resource-loader-full")))) (s 2) (e (quote (("resource-loader-jpeg" "dep:tiny-skia" "dep:jpeg-decoder") ("resource-loader-gif" "dep:tiny-skia" "dep:gif") ("animation-builder" "dep:tiny-skia" "dep:png"))))))

(define-public crate-divoom-0.1.23 (c (n "divoom") (v "0.1.23") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "contracts") (r "^0.6.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "image") (r "^0.24.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mockito") (r "^0.31.0") (d #t) (k 2)) (d (n "openssl") (r "^0.10.29") (f (quote ("vendored"))) (d #t) (t "cfg(unix)") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.11") (d #t) (k 0)) (d (n "rgb") (r "^0.8.33") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.70") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tiny-skia") (r "^0.7.0") (f (quote ("std" "simd"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.13.0") (f (quote ("rt-multi-thread" "time" "sync" "macros" "net" "io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log"))) (d #t) (k 0)))) (h "1ik64mcfr5y5ncya3gm5rx9g6yanlc0fgdhcc6r4l4ns3fsjy70p") (f (quote (("default" "animation-builder")))) (s 2) (e (quote (("animation-builder" "dep:tiny-skia" "dep:image"))))))

(define-public crate-divoom-0.1.25 (c (n "divoom") (v "0.1.25") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "contracts") (r "^0.6.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "image") (r "^0.24.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mockito") (r "^0.31.0") (d #t) (k 2)) (d (n "openssl") (r "^0.10.29") (f (quote ("vendored"))) (d #t) (t "cfg(unix)") (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.11") (d #t) (k 0)) (d (n "rgb") (r "^0.8.33") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.70") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tiny-skia") (r "^0.7.0") (f (quote ("std" "simd"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.13.0") (f (quote ("rt-multi-thread" "time" "sync" "macros" "net" "io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log"))) (d #t) (k 0)))) (h "0ig0qbvcy9l56mjqq88zinljv322vg93ic2wkrkq811m159imkvb") (f (quote (("default" "animation-builder")))) (s 2) (e (quote (("animation-builder" "dep:tiny-skia" "dep:image"))))))

(define-public crate-divoom-0.1.35 (c (n "divoom") (v "0.1.35") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "clap") (r "^3.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "openssl") (r "^0.10.29") (f (quote ("vendored"))) (d #t) (t "cfg(unix)") (k 0)) (d (n "pretty_assertions") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "resvg") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "rgb") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "shellwords") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-skia") (r "^0.6") (f (quote ("std" "simd"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.13") (f (quote ("rt-multi-thread" "time" "sync" "macros" "net" "io-util"))) (d #t) (k 0)) (d (n "tokio-cron-scheduler") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "usvg") (r "^0.23") (o #t) (d #t) (k 0)))) (h "0ccxdr1abdm8cr82x8ixqbix53ndyhx1i9qi7z090j5g5kwl5sv1") (f (quote (("default" "animation-builder")))) (s 2) (e (quote (("animation-builder" "dep:tiny-skia" "dep:image" "dep:resvg" "dep:usvg" "dep:regex"))))))

(define-public crate-divoom-0.1.38 (c (n "divoom") (v "0.1.38") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "clap") (r "^3.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "openssl") (r "^0.10.29") (f (quote ("vendored"))) (d #t) (t "cfg(unix)") (k 0)) (d (n "pretty_assertions") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "resvg") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "rgb") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "shellwords") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-skia") (r "^0.6") (f (quote ("std" "simd"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.13") (f (quote ("rt-multi-thread" "time" "sync" "macros" "net" "io-util"))) (d #t) (k 0)) (d (n "tokio-cron-scheduler") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "usvg") (r "^0.23") (o #t) (d #t) (k 0)))) (h "00id3r2wrq294mhjymjgpgqrw4zscm2cl3p5p5k02ildgzsg5iw4") (f (quote (("default" "animation-builder")))) (s 2) (e (quote (("animation-builder" "dep:tiny-skia" "dep:image" "dep:resvg" "dep:usvg" "dep:regex"))))))

(define-public crate-divoom-0.1.39 (c (n "divoom") (v "0.1.39") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "clap") (r "^3.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "openssl") (r "^0.10.29") (f (quote ("vendored"))) (d #t) (t "cfg(unix)") (k 0)) (d (n "pretty_assertions") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "resvg") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "rgb") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "shellwords") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-skia") (r "^0.6") (f (quote ("std" "simd"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.13") (f (quote ("rt-multi-thread" "time" "sync" "macros" "net" "io-util"))) (d #t) (k 0)) (d (n "tokio-cron-scheduler") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "usvg") (r "^0.23") (o #t) (d #t) (k 0)))) (h "0xa08860c96nyw188m20wm9mlqvwlm8jw8krx16s6vnjc1ykwn1i") (f (quote (("default" "animation-builder")))) (s 2) (e (quote (("animation-builder" "dep:tiny-skia" "dep:image" "dep:resvg" "dep:usvg" "dep:regex"))))))

(define-public crate-divoom-0.1.42 (c (n "divoom") (v "0.1.42") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "clap") (r "^3.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "contracts") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "openssl") (r "^0.10.29") (f (quote ("vendored"))) (d #t) (t "cfg(unix)") (k 0)) (d (n "pretty_assertions") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "resvg") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "rgb") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "shellwords") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-skia") (r "^0.6") (f (quote ("std" "simd"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.13") (f (quote ("rt-multi-thread" "time" "sync" "macros" "net" "io-util"))) (d #t) (k 0)) (d (n "tokio-cron-scheduler") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "usvg") (r "^0.23") (o #t) (d #t) (k 0)))) (h "0vnwphxqgl6m176pf3dafi8fvjwpxzm4hn1x9bz11i1d4p26h5jv") (f (quote (("default" "animation-builder")))) (s 2) (e (quote (("animation-builder" "dep:tiny-skia" "dep:image" "dep:resvg" "dep:usvg" "dep:regex"))))))

