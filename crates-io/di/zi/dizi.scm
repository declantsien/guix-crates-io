(define-module (crates-io di zi dizi) #:use-module (crates-io))

(define-public crate-dizi-0.3.0 (c (n "dizi") (v "0.3.0") (d (list (d (n "alphanumeric-sort") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cpal") (r "^0") (f (quote ("jack"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "cpal") (r "^0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "cpal") (r "^0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "crossbeam") (r "^0") (d #t) (k 0)) (d (n "dirs-next") (r "^2") (d #t) (k 0)) (d (n "env_logger") (r "^0") (d #t) (k 0)) (d (n "globset") (r "^0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0") (d #t) (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "m3u") (r "^1") (d #t) (k 0)) (d (n "phf") (r "^0") (f (quote ("macros"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 0)) (d (n "rustyline") (r "^4") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "shell-words") (r "^1") (d #t) (k 0)) (d (n "shellexpand") (r "^2") (d #t) (k 0)) (d (n "signal-hook") (r "^0") (d #t) (k 0)) (d (n "skim") (r "^0") (d #t) (k 0)) (d (n "strfmt") (r "^0") (d #t) (k 0)) (d (n "symphonia") (r "^0") (f (quote ("all"))) (d #t) (k 0)) (d (n "termion") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0") (d #t) (k 0)) (d (n "tui") (r "^0") (f (quote ("termion"))) (k 0)) (d (n "unicode-segmentation") (r "^1") (d #t) (k 0)) (d (n "unicode-width") (r "^0") (d #t) (k 0)) (d (n "uuid") (r "^0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "xdg") (r "^2") (d #t) (k 0)))) (h "03p4k8fzj7znlk4s82ygf878j9s0q4llm6iil5h7v1nzv0dpshd3") (f (quote (("devicons" "phf") ("default" "devicons"))))))

