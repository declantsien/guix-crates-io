(define-module (crates-io di co dicom-object) #:use-module (crates-io))

(define-public crate-dicom-object-0.1.0 (c (n "dicom-object") (v "0.1.0") (d (list (d (n "byteordered") (r "^0.4.0") (d #t) (k 0)) (d (n "dicom-core") (r "^0.1.0") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.1.0") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.1.0") (d #t) (k 0)) (d (n "dicom-parser") (r "^0.1.0") (d #t) (k 0)) (d (n "dicom-transfer-syntax-registry") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^0.6.7") (d #t) (k 0)))) (h "176626hx1pfijfiphf0wivxczka8ia1j092zyy54jb0n9n4arz7a")))

(define-public crate-dicom-object-0.2.0 (c (n "dicom-object") (v "0.2.0") (d (list (d (n "byteordered") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-core") (r "^0.2.0") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.2.0") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.2.0") (d #t) (k 0)) (d (n "dicom-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "dicom-transfer-syntax-registry") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)))) (h "1v5yvs7l63107dv8b611fxjq880ccpi14aga5l2lsyw220nn9q78") (f (quote (("inventory-registry" "dicom-encoding/inventory-registry" "dicom-transfer-syntax-registry/inventory-registry") ("default"))))))

(define-public crate-dicom-object-0.3.0 (c (n "dicom-object") (v "0.3.0") (d (list (d (n "byteordered") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-core") (r "^0.3.0") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.3.0") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.3.0") (d #t) (k 0)) (d (n "dicom-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "dicom-test-files") (r "^0.2.0") (d #t) (k 2)) (d (n "dicom-transfer-syntax-registry") (r "^0.3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "snafu") (r "^0.6.8") (d #t) (k 0)))) (h "0v93k80ccxvkjn9gjz1xk3mlj13si7r5j871j5rhqypsl9qmfmd2") (f (quote (("inventory-registry" "dicom-encoding/inventory-registry" "dicom-transfer-syntax-registry/inventory-registry") ("default") ("backtraces" "snafu/backtraces"))))))

(define-public crate-dicom-object-0.4.0 (c (n "dicom-object") (v "0.4.0") (d (list (d (n "byteordered") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-core") (r "^0.4.0") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.4.0") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.4.0") (d #t) (k 0)) (d (n "dicom-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "dicom-test-files") (r "^0.2.0") (d #t) (k 2)) (d (n "dicom-transfer-syntax-registry") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "snafu") (r "^0.6.8") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)))) (h "139psnp4ll3xa0blzf720rgxs9qgmg4h6040iq9q89nc8g9rw8ch") (f (quote (("inventory-registry" "dicom-encoding/inventory-registry" "dicom-transfer-syntax-registry/inventory-registry") ("default") ("backtraces" "snafu/backtraces"))))))

(define-public crate-dicom-object-0.5.0-rc.1 (c (n "dicom-object") (v "0.5.0-rc.1") (d (list (d (n "byteordered") (r "^0.6") (d #t) (k 0)) (d (n "dicom-core") (r "^0.5.0-rc.1") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.5.0-rc.1") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.5.0-rc.1") (d #t) (k 0)) (d (n "dicom-parser") (r "^0.5.0-rc.1") (d #t) (k 0)) (d (n "dicom-test-files") (r "^0.2.0") (d #t) (k 2)) (d (n "dicom-transfer-syntax-registry") (r "^0.5.0-rc.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "snafu") (r "^0.6.8") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)))) (h "1r1ly71cp6icbxqzjik8g1bir367n6mjgnq7kiiv47y9hl4579fm") (f (quote (("inventory-registry" "dicom-encoding/inventory-registry" "dicom-transfer-syntax-registry/inventory-registry") ("default") ("backtraces" "snafu/backtraces")))) (y #t)))

(define-public crate-dicom-object-0.5.0-rc.2 (c (n "dicom-object") (v "0.5.0-rc.2") (d (list (d (n "byteordered") (r "^0.6") (d #t) (k 0)) (d (n "dicom-core") (r "^0.5.0-rc.2") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.5.0-rc.2") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.5.0-rc.2") (d #t) (k 0)) (d (n "dicom-parser") (r "^0.5.0-rc.2") (d #t) (k 0)) (d (n "dicom-test-files") (r "^0.2.0") (d #t) (k 2)) (d (n "dicom-transfer-syntax-registry") (r "^0.5.0-rc.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)))) (h "1vpd5ynsmbwgbqdcrmnp6bmmfrd09p992da2b5q153qlk9h90d4r") (f (quote (("inventory-registry" "dicom-encoding/inventory-registry" "dicom-transfer-syntax-registry/inventory-registry") ("default") ("backtraces" "snafu/backtraces")))) (y #t)))

(define-public crate-dicom-object-0.5.0 (c (n "dicom-object") (v "0.5.0") (d (list (d (n "byteordered") (r "^0.6") (d #t) (k 0)) (d (n "dicom-core") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-parser") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-transfer-syntax-registry") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)))) (h "1q8sw9vawa66ckgzc0ywdm8bvl940qf9drrh03s63zdhgy37ygfz") (f (quote (("inventory-registry" "dicom-encoding/inventory-registry" "dicom-transfer-syntax-registry/inventory-registry") ("default") ("backtraces" "snafu/backtraces")))) (y #t)))

(define-public crate-dicom-object-0.5.1 (c (n "dicom-object") (v "0.5.1") (d (list (d (n "byteordered") (r "^0.6") (d #t) (k 0)) (d (n "dicom-core") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-parser") (r "^0.5.1") (d #t) (k 0)) (d (n "dicom-transfer-syntax-registry") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)))) (h "0wdvpgdjw0irqba0595dqmmphxwjxjcaxzg483c185c720hywlym") (f (quote (("inventory-registry" "dicom-encoding/inventory-registry" "dicom-transfer-syntax-registry/inventory-registry") ("default") ("backtraces" "snafu/backtraces")))) (y #t)))

(define-public crate-dicom-object-0.5.2 (c (n "dicom-object") (v "0.5.2") (d (list (d (n "byteordered") (r "^0.6") (d #t) (k 0)) (d (n "dicom-core") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-parser") (r "^0.5.1") (d #t) (k 0)) (d (n "dicom-transfer-syntax-registry") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)))) (h "0xs29xbr3jc17jf079s2lak9466n01qwrnn2najl4kw85ivkr46z") (f (quote (("inventory-registry" "dicom-encoding/inventory-registry" "dicom-transfer-syntax-registry/inventory-registry") ("default") ("backtraces" "snafu/backtraces"))))))

(define-public crate-dicom-object-0.5.3 (c (n "dicom-object") (v "0.5.3") (d (list (d (n "byteordered") (r "^0.6") (d #t) (k 0)) (d (n "dicom-core") (r "^0.5.2") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.5.2") (d #t) (k 0)) (d (n "dicom-parser") (r "^0.5.2") (d #t) (k 0)) (d (n "dicom-test-files") (r "^0.2.1") (d #t) (k 2)) (d (n "dicom-transfer-syntax-registry") (r "^0.5.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "snafu") (r "^0.7.3") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)))) (h "1hjvlqhxvn4j64mlfzilhlhlvkg9fp98scm5jbr95jd6hn0i0rdm") (f (quote (("inventory-registry" "dicom-encoding/inventory-registry" "dicom-transfer-syntax-registry/inventory-registry") ("default") ("backtraces" "snafu/backtraces"))))))

(define-public crate-dicom-object-0.5.4 (c (n "dicom-object") (v "0.5.4") (d (list (d (n "byteordered") (r "^0.6") (d #t) (k 0)) (d (n "dicom-core") (r "^0.5.3") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.5.3") (d #t) (k 0)) (d (n "dicom-parser") (r "^0.5.3") (d #t) (k 0)) (d (n "dicom-test-files") (r "^0.2.1") (d #t) (k 2)) (d (n "dicom-transfer-syntax-registry") (r "^0.5.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "snafu") (r "^0.7.3") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)))) (h "1k1p3x960d1x2p3lp3qvpxwfp2b9pzk1na6pp4pfr2calsbkhgav") (f (quote (("inventory-registry" "dicom-encoding/inventory-registry" "dicom-transfer-syntax-registry/inventory-registry") ("default") ("backtraces" "snafu/backtraces"))))))

(define-public crate-dicom-object-0.6.0 (c (n "dicom-object") (v "0.6.0") (d (list (d (n "byteordered") (r "^0.6") (d #t) (k 0)) (d (n "dicom-core") (r "^0.6.0") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.6.0") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.6.0") (d #t) (k 0)) (d (n "dicom-parser") (r "^0.6.0") (d #t) (k 0)) (d (n "dicom-test-files") (r "^0.2.1") (d #t) (k 2)) (d (n "dicom-transfer-syntax-registry") (r "^0.6.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "snafu") (r "^0.7.3") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)))) (h "1b2czh2bcvi2p0aij85an0pkj88wwkalxmx4hfisn6d3mglr4252") (f (quote (("inventory-registry" "dicom-encoding/inventory-registry" "dicom-transfer-syntax-registry/inventory-registry") ("default") ("backtraces" "snafu/backtraces"))))))

(define-public crate-dicom-object-0.6.1 (c (n "dicom-object") (v "0.6.1") (d (list (d (n "byteordered") (r "^0.6") (d #t) (k 0)) (d (n "dicom-core") (r "^0.6.1") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.6.0") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.6.0") (d #t) (k 0)) (d (n "dicom-parser") (r "^0.6.0") (d #t) (k 0)) (d (n "dicom-test-files") (r "^0.2.1") (d #t) (k 2)) (d (n "dicom-transfer-syntax-registry") (r "^0.6.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "snafu") (r "^0.7.3") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)))) (h "03qh2cjqigm4vs9g3wfmisxy7himq49i5w7vd0kw00xhcq3yys94") (f (quote (("inventory-registry" "dicom-encoding/inventory-registry" "dicom-transfer-syntax-registry/inventory-registry") ("default") ("backtraces" "snafu/backtraces"))))))

(define-public crate-dicom-object-0.6.2 (c (n "dicom-object") (v "0.6.2") (d (list (d (n "byteordered") (r "^0.6") (d #t) (k 0)) (d (n "dicom-core") (r "^0.6.2") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.6.1") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.6.1") (d #t) (k 0)) (d (n "dicom-parser") (r "^0.6.0") (d #t) (k 0)) (d (n "dicom-test-files") (r "^0.2.1") (d #t) (k 2)) (d (n "dicom-transfer-syntax-registry") (r "^0.6.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "snafu") (r "^0.7.3") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)))) (h "1ic79nj6gdfk01dj1hacjxj3hb2s5j3npj3n1s8xk63grdhk43yf") (f (quote (("inventory-registry" "dicom-encoding/inventory-registry" "dicom-transfer-syntax-registry/inventory-registry") ("default") ("backtraces" "snafu/backtraces"))))))

(define-public crate-dicom-object-0.6.3 (c (n "dicom-object") (v "0.6.3") (d (list (d (n "byteordered") (r "^0.6") (d #t) (k 0)) (d (n "dicom-core") (r "^0.6.3") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.6.1") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.6.1") (d #t) (k 0)) (d (n "dicom-parser") (r "^0.6.0") (d #t) (k 0)) (d (n "dicom-test-files") (r "^0.2.1") (d #t) (k 2)) (d (n "dicom-transfer-syntax-registry") (r "^0.6.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "snafu") (r "^0.7.3") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)))) (h "1k8pxcjg0c82k81fmif0wyhafxj8plk9kcxms62wybn7cw63hsc9") (f (quote (("inventory-registry" "dicom-encoding/inventory-registry" "dicom-transfer-syntax-registry/inventory-registry") ("default") ("backtraces" "snafu/backtraces"))))))

(define-public crate-dicom-object-0.7.0 (c (n "dicom-object") (v "0.7.0") (d (list (d (n "byteordered") (r "^0.6") (d #t) (k 0)) (d (n "dicom-core") (r "^0.7.0") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.7.0") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.7.0") (d #t) (k 0)) (d (n "dicom-parser") (r "^0.7.0") (d #t) (k 0)) (d (n "dicom-test-files") (r "^0.3") (d #t) (k 2)) (d (n "dicom-transfer-syntax-registry") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "snafu") (r "^0.8") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)))) (h "1csycy6sv0xnpsxpqn8yyg2yipx4v1kpdrnhj87xk1d9x0cr1hxf") (f (quote (("inventory-registry" "dicom-encoding/inventory-registry" "dicom-transfer-syntax-registry/inventory-registry") ("default"))))))

