(define-module (crates-io di co dicom-json) #:use-module (crates-io))

(define-public crate-dicom-json-0.1.0 (c (n "dicom-json") (v "0.1.0") (d (list (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "dicom-core") (r "^0.6.0") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.6.0") (d #t) (k 0)) (d (n "dicom-object") (r "^0.6.0") (d #t) (k 0)) (d (n "dicom-test-files") (r "^0.2.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "11188xnpp8k59gx0q4q9hi4nq1r47cnwkmbgnf630sbjp9pkf8vm")))

(define-public crate-dicom-json-0.1.1 (c (n "dicom-json") (v "0.1.1") (d (list (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "dicom-core") (r "^0.6.3") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.6.1") (d #t) (k 0)) (d (n "dicom-object") (r "^0.6.3") (d #t) (k 0)) (d (n "dicom-test-files") (r "^0.2.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0w049ghd4j5jbfbqcm715gb3ldrk0q9mxlj4ql9cw2iwmja7swsi")))

(define-public crate-dicom-json-0.7.0 (c (n "dicom-json") (v "0.7.0") (d (list (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "dicom-core") (r "^0.7.0") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.7.0") (d #t) (k 0)) (d (n "dicom-object") (r "^0.7.0") (d #t) (k 0)) (d (n "dicom-test-files") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)))) (h "0x6m5c0k9rgr6w0qwyx4lnbmbjqh0k9r10q2dvwrzzh3zwv0v7hg")))

