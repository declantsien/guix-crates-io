(define-module (crates-io di co dicom-dictionary-builder) #:use-module (crates-io))

(define-public crate-dicom-dictionary-builder-0.1.0 (c (n "dicom-dictionary-builder") (v "0.1.0") (d (list (d (n "clap") (r "^2.18.0") (d #t) (k 0)) (d (n "futures") (r "~0.1.21") (d #t) (k 0)) (d (n "hyper") (r "^0.12.33") (d #t) (k 0)) (d (n "quick-xml") (r "^0.16.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.55") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.10") (d #t) (k 0)))) (h "05wmdiwhyvm2s1r9f284xicldzgybkvm5zcrl6pgvj10s3239pms")))

(define-public crate-dicom-dictionary-builder-0.1.1 (c (n "dicom-dictionary-builder") (v "0.1.1") (d (list (d (n "clap") (r "^2.18.0") (d #t) (k 0)) (d (n "futures") (r "~0.1.21") (d #t) (k 0)) (d (n "hyper") (r "^0.12.33") (d #t) (k 0)) (d (n "quick-xml") (r "^0.16.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.55") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.10") (d #t) (k 0)))) (h "1m2cvnjf4dhjmjqvh5zysgdiczjjhnjyrqw9aafbjm23hjrj6hdn")))

(define-public crate-dicom-dictionary-builder-0.1.2 (c (n "dicom-dictionary-builder") (v "0.1.2") (d (list (d (n "clap") (r "^2.18.0") (d #t) (k 0)) (d (n "futures") (r "~0.1.21") (d #t) (k 0)) (d (n "hyper") (r "^0.12.33") (d #t) (k 0)) (d (n "quick-xml") (r "^0.16.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.55") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1.10") (d #t) (k 0)))) (h "0yagzgjzlzqrqfr5wpva07i5x19d4lqp3gfzn43az5cwzmn04zz8")))

(define-public crate-dicom-dictionary-builder-0.2.0 (c (n "dicom-dictionary-builder") (v "0.2.0") (d (list (d (n "clap") (r "^2.18.0") (d #t) (k 0)) (d (n "heck") (r "^0.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.55") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "0xhys88c53dprbvy2nqm8dsl58amdg4lqr4xgz167w7dvcbpksy8")))

(define-public crate-dicom-dictionary-builder-0.3.0-rc.1 (c (n "dicom-dictionary-builder") (v "0.3.0-rc.1") (d (list (d (n "clap") (r "^2.18.0") (d #t) (k 0)) (d (n "heck") (r "^0.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.55") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "16q4nxszp9dxc483bwwlxyrg61dmccq79bzrnsv9danl3ni1bjdn")))

(define-public crate-dicom-dictionary-builder-0.3.0-rc.2 (c (n "dicom-dictionary-builder") (v "0.3.0-rc.2") (d (list (d (n "clap") (r "^2.18.0") (d #t) (k 0)) (d (n "heck") (r "^0.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.55") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "0ffg7330xys2079bvr6zbw7mh5lh2vrfigs08f7613k9zamd1ayy")))

(define-public crate-dicom-dictionary-builder-0.3.0 (c (n "dicom-dictionary-builder") (v "0.3.0") (d (list (d (n "clap") (r "^2.18.0") (d #t) (k 0)) (d (n "heck") (r "^0.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (f (quote ("std" "perf" "unicode-case" "unicode-perl"))) (k 0)) (d (n "serde") (r "^1.0.55") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)) (d (n "ureq") (r "^2.4.0") (d #t) (k 0)))) (h "101bqj6kxyfqpqpgdvk6gvwlxjakqbj9wczyk97mg8b56nwbd8kb")))

(define-public crate-dicom-dictionary-builder-0.3.1 (c (n "dicom-dictionary-builder") (v "0.3.1") (d (list (d (n "clap") (r "^2.18.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (f (quote ("std" "perf" "unicode-case" "unicode-perl"))) (k 0)) (d (n "serde") (r "^1.0.55") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)) (d (n "ureq") (r "^2.4.0") (d #t) (k 0)))) (h "1wq8d9x4naavcx59p1awhj7dgk5swrp9v8g30fdnlsyw7d15hdzd")))

(define-public crate-dicom-dictionary-builder-0.3.2 (c (n "dicom-dictionary-builder") (v "0.3.2") (d (list (d (n "clap") (r "^2.18.0") (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (f (quote ("std" "perf" "unicode-case" "unicode-perl"))) (k 0)) (d (n "serde") (r "^1.0.55") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)) (d (n "ureq") (r "^2.4.0") (d #t) (k 0)))) (h "0gdqq6kgc1p24pcfxiy20fkdqlrh8y52hanq9f922ldazz6qc703")))

(define-public crate-dicom-dictionary-builder-0.4.0 (c (n "dicom-dictionary-builder") (v "0.4.0") (d (list (d (n "clap") (r "^4.0.18") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (f (quote ("std" "perf" "unicode-case" "unicode-perl"))) (k 0)) (d (n "serde") (r "^1.0.55") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)) (d (n "sxd-document") (r "^0.3.2") (d #t) (k 0)) (d (n "sxd-xpath") (r "^0.4.2") (d #t) (k 0)) (d (n "ureq") (r "^2.4.0") (d #t) (k 0)))) (h "12x212d1x71xqbz2pg4l0iarbk0dx8q0kdix7arp25xwfvsyddcn")))

(define-public crate-dicom-dictionary-builder-0.7.0 (c (n "dicom-dictionary-builder") (v "0.7.0") (d (list (d (n "clap") (r "^4.0.18") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.12") (d #t) (k 0)) (d (n "heck") (r "^0.5.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (f (quote ("std" "perf" "unicode-case" "unicode-perl"))) (k 0)) (d (n "serde") (r "^1.0.55") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)) (d (n "sxd-document") (r "^0.3.2") (d #t) (k 0)) (d (n "sxd-xpath") (r "^0.4.2") (d #t) (k 0)) (d (n "ureq") (r "^2.4.0") (d #t) (k 0)))) (h "175k6v7wf32b6czkz8hs8dqam39d7zkq02rjd9ahgqykimqd1jqp")))

