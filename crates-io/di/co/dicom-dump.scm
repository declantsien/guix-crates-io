(define-module (crates-io di co dicom-dump) #:use-module (crates-io))

(define-public crate-dicom-dump-0.5.0-rc.1 (c (n "dicom-dump") (v "0.5.0-rc.1") (d (list (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dicom") (r "^0.5.0-rc.1") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "snafu") (r "^0.6.8") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "term_size") (r "^0.3.2") (d #t) (k 0)))) (h "1fiwz82vx9igdkdaj6sph40x05j9xaz4dw5prh922dgvy8ai3q6a") (f (quote (("default" "dicom/inventory-registry" "dicom/backtraces"))))))

(define-public crate-dicom-dump-0.5.0-rc.2 (c (n "dicom-dump") (v "0.5.0-rc.2") (d (list (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dicom") (r "^0.5.0-rc.2") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "term_size") (r "^0.3.2") (d #t) (k 0)))) (h "0vfh0xh6i6yqw4v84h1iqghra02rhclq8ymdh5s9c5gqgha4pm68") (f (quote (("default" "dicom/inventory-registry" "dicom/backtraces"))))))

(define-public crate-dicom-dump-0.5.0 (c (n "dicom-dump") (v "0.5.0") (d (list (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dicom-core") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-object") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-transfer-syntax-registry") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "term_size") (r "^0.3.2") (d #t) (k 0)))) (h "1rcnzbjy9w5xax9s1z4dsjva3h3nm67z7da2djn7ji5yg5sh4114") (f (quote (("default" "cli") ("cli" "structopt" "dicom-transfer-syntax-registry/inventory-registry" "dicom-object/backtraces"))))))

(define-public crate-dicom-dump-0.5.1 (c (n "dicom-dump") (v "0.5.1") (d (list (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dicom-core") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-object") (r "^0.5.1") (d #t) (k 0)) (d (n "dicom-transfer-syntax-registry") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "term_size") (r "^0.3.2") (d #t) (k 0)))) (h "0ygplh8znsmahka04kmxppxnvhb9w4lh8bqdlxykrr1yypdkfbri") (f (quote (("default" "cli") ("cli" "structopt" "dicom-transfer-syntax-registry/inventory-registry" "dicom-object/backtraces"))))))

(define-public crate-dicom-dump-0.5.2 (c (n "dicom-dump") (v "0.5.2") (d (list (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dicom-core") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-object") (r "^0.5.2") (d #t) (k 0)) (d (n "dicom-transfer-syntax-registry") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "snafu") (r "^0.7.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "term_size") (r "^0.3.2") (d #t) (k 0)))) (h "1513dmmiw9lcqybj22pxq6hqryaqlpc1am2qkh8n9y6z4ycqgih8") (f (quote (("default" "cli") ("cli" "structopt" "dicom-transfer-syntax-registry/inventory-registry" "dicom-object/backtraces"))))))

(define-public crate-dicom-dump-0.5.3 (c (n "dicom-dump") (v "0.5.3") (d (list (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dicom-core") (r "^0.5.2") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.5.2") (d #t) (k 0)) (d (n "dicom-object") (r "^0.5.3") (d #t) (k 0)) (d (n "dicom-transfer-syntax-registry") (r "^0.5.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "snafu") (r "^0.7.3") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "term_size") (r "^0.3.2") (d #t) (k 0)))) (h "0hyyb84l4gx4wj07a7l4s854v6z626903dx8v9s9789pipahylff") (f (quote (("default" "cli") ("cli" "structopt" "dicom-transfer-syntax-registry/inventory-registry" "dicom-object/backtraces"))))))

(define-public crate-dicom-dump-0.5.4 (c (n "dicom-dump") (v "0.5.4") (d (list (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dicom-core") (r "^0.5.3") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.5.0") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.5.3") (d #t) (k 0)) (d (n "dicom-object") (r "^0.5.4") (d #t) (k 0)) (d (n "dicom-transfer-syntax-registry") (r "^0.5.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "snafu") (r "^0.7.3") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "term_size") (r "^0.3.2") (d #t) (k 0)))) (h "1msnzhhdkq14z56l87i4r8yjnbw6i2jshymdl8is40n3mhc2sbr3") (f (quote (("default" "cli") ("cli" "structopt" "dicom-transfer-syntax-registry/inventory-registry" "dicom-object/backtraces"))))))

(define-public crate-dicom-dump-0.6.0 (c (n "dicom-dump") (v "0.6.0") (d (list (d (n "clap") (r "^4.0.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "dicom-core") (r "^0.6.0") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.6.0") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.6.0") (d #t) (k 0)) (d (n "dicom-object") (r "^0.6.0") (d #t) (k 0)) (d (n "dicom-transfer-syntax-registry") (r "^0.6.0") (k 0)) (d (n "owo-colors") (r "^3.5.0") (f (quote ("supports-colors"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.3") (d #t) (k 0)) (d (n "term_size") (r "^0.3.2") (d #t) (k 0)))) (h "1zzsmdmpiknxbj46c2qalm9r2g5gdk8x84qc9dyxcqgkc172f8fj") (f (quote (("sop-class" "dicom-dictionary-std/sop-class") ("default" "cli" "sop-class") ("cli" "clap" "dicom-transfer-syntax-registry/inventory-registry" "dicom-object/backtraces"))))))

(define-public crate-dicom-dump-0.6.1 (c (n "dicom-dump") (v "0.6.1") (d (list (d (n "clap") (r "^4.0.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "dicom-core") (r "^0.6.1") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.6.0") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.6.0") (d #t) (k 0)) (d (n "dicom-object") (r "^0.6.1") (d #t) (k 0)) (d (n "dicom-transfer-syntax-registry") (r "^0.6.0") (k 0)) (d (n "owo-colors") (r "^3.5.0") (f (quote ("supports-colors"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.3") (d #t) (k 0)) (d (n "term_size") (r "^0.3.2") (d #t) (k 0)))) (h "1x3yjk52fvvwfc1pjbk5wl6db9ggqfzb8qhy14qk0fmqiff9q3rn") (f (quote (("sop-class" "dicom-dictionary-std/sop-class") ("default" "cli" "sop-class") ("cli" "clap" "dicom-transfer-syntax-registry/inventory-registry" "dicom-object/backtraces"))))))

(define-public crate-dicom-dump-0.6.2 (c (n "dicom-dump") (v "0.6.2") (d (list (d (n "clap") (r "^4.0.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "dicom-core") (r "^0.6.3") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.6.1") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.6.1") (d #t) (k 0)) (d (n "dicom-object") (r "^0.6.3") (d #t) (k 0)) (d (n "dicom-transfer-syntax-registry") (r "^0.6.2") (k 0)) (d (n "owo-colors") (r "^4.0.0-rc.1") (f (quote ("supports-colors"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.3") (d #t) (k 0)) (d (n "term_size") (r "^0.3.2") (d #t) (k 0)))) (h "01spl55d4sx8nzlcw5wy9qz226rk5kf9c337q6fb6ww4glbcg446") (f (quote (("sop-class" "dicom-dictionary-std/sop-class") ("default" "cli" "sop-class") ("cli" "clap" "dicom-transfer-syntax-registry/inventory-registry" "dicom-object/backtraces"))))))

(define-public crate-dicom-dump-0.7.0 (c (n "dicom-dump") (v "0.7.0") (d (list (d (n "clap") (r "^4.0.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "dicom-core") (r "^0.7.0") (d #t) (k 0)) (d (n "dicom-dictionary-std") (r "^0.7.0") (d #t) (k 0)) (d (n "dicom-encoding") (r "^0.7.0") (d #t) (k 0)) (d (n "dicom-object") (r "^0.7.0") (d #t) (k 0)) (d (n "dicom-transfer-syntax-registry") (r "^0.7.0") (k 0)) (d (n "owo-colors") (r "^4.0.0-rc.1") (f (quote ("supports-colors"))) (d #t) (k 0)) (d (n "snafu") (r "^0.8") (d #t) (k 0)) (d (n "terminal_size") (r "^0.3.0") (d #t) (k 0)))) (h "0bb8p76ifij535q89shf84bj4b2hmyvq5dr6l16djmfp5gqnid4g") (f (quote (("sop-class" "dicom-dictionary-std/sop-class") ("default" "cli" "sop-class") ("cli" "clap" "dicom-transfer-syntax-registry/inventory-registry"))))))

