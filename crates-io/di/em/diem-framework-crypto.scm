(define-module (crates-io di em diem-framework-crypto) #:use-module (crates-io))

(define-public crate-diem-framework-crypto-0.1.2 (c (n "diem-framework-crypto") (v "0.1.2") (d (list (d (n "aes-gcm") (r "^0.8.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.19.4") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "curve25519-dalek-fiat")) (d (n "diem-framework-crypto-derive") (r "^0.1.2") (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^0.1.0") (f (quote ("std" "serde"))) (k 0) (p "ed25519-dalek-fiat")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.10.0") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (k 0)) (d (n "ripemd160") (r "^0.9.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "sha2") (r "^0.9.3") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.41") (d #t) (k 2)) (d (n "x25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "x25519-dalek-fiat")))) (h "1c9y9s2mcgpb2szf7zwayvlb3ch89k5vnz5swmr6zxkgan6cb2pn") (f (quote (("u64" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend" "x25519-dalek/u64_backend") ("u32" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend" "x25519-dalek/u32_backend") ("fuzzing" "proptest" "proptest-derive" "cloneable-private-keys") ("fiat" "curve25519-dalek/fiat_u64_backend" "ed25519-dalek/fiat_u64_backend" "x25519-dalek/fiat_u64_backend") ("default" "fiat") ("cloneable-private-keys") ("assert-private-keys-not-cloneable")))) (y #t)))

(define-public crate-diem-framework-crypto-0.1.4 (c (n "diem-framework-crypto") (v "0.1.4") (d (list (d (n "aes-gcm") (r "^0.8.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.19.4") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "curve25519-dalek-fiat")) (d (n "diem-framework-crypto-derive") (r "^0.1.2") (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^0.1.0") (f (quote ("std" "serde"))) (k 0) (p "ed25519-dalek-fiat")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.10.0") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (k 0)) (d (n "ripemd160") (r "^0.9.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "sha2") (r "^0.9.3") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.41") (d #t) (k 2)) (d (n "x25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "x25519-dalek-fiat")))) (h "1iza1idkw1nxabahc8hxcfbryfsbr9jirg1javbiymlm294chycp") (f (quote (("u64" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend" "x25519-dalek/u64_backend") ("u32" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend" "x25519-dalek/u32_backend") ("fuzzing" "proptest" "proptest-derive" "cloneable-private-keys") ("fiat" "curve25519-dalek/fiat_u64_backend" "ed25519-dalek/fiat_u64_backend" "x25519-dalek/fiat_u64_backend") ("default" "fiat") ("cloneable-private-keys") ("assert-private-keys-not-cloneable")))) (y #t)))

(define-public crate-diem-framework-crypto-0.1.5 (c (n "diem-framework-crypto") (v "0.1.5") (d (list (d (n "aes-gcm") (r "^0.8.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.19.4") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "curve25519-dalek-fiat")) (d (n "diem-framework-crypto-derive") (r "^0.1.2") (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^0.1.0") (f (quote ("std" "serde"))) (k 0) (p "ed25519-dalek-fiat")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.10.0") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (k 0)) (d (n "ripemd160") (r "^0.9.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "sha2") (r "^0.9.3") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.41") (d #t) (k 2)) (d (n "x25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "x25519-dalek-fiat")))) (h "0hj06vrvwkdwhinkfcrll2jcxf1087xflwgf8cnndxdzlm2y7fqz") (f (quote (("u64" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend" "x25519-dalek/u64_backend") ("u32" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend" "x25519-dalek/u32_backend") ("fuzzing" "proptest" "proptest-derive" "cloneable-private-keys") ("fiat" "curve25519-dalek/fiat_u64_backend" "ed25519-dalek/fiat_u64_backend" "x25519-dalek/fiat_u64_backend") ("default" "fiat") ("cloneable-private-keys") ("assert-private-keys-not-cloneable")))) (y #t)))

(define-public crate-diem-framework-crypto-0.1.6 (c (n "diem-framework-crypto") (v "0.1.6") (d (list (d (n "aes-gcm") (r "^0.8.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.19.4") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "curve25519-dalek-fiat")) (d (n "diem-framework-crypto-derive") (r "^0.1.2") (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^0.1.0") (f (quote ("std" "serde"))) (k 0) (p "ed25519-dalek-fiat")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.10.0") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (k 0)) (d (n "ripemd160") (r "^0.9.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "sha2") (r "^0.9.3") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.41") (d #t) (k 2)) (d (n "x25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "x25519-dalek-fiat")))) (h "060sg8hcri29wpckdrgmrp70a41jx440mvhxkszr1jk190vx7pn6") (f (quote (("u64" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend" "x25519-dalek/u64_backend") ("u32" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend" "x25519-dalek/u32_backend") ("fuzzing" "proptest" "proptest-derive" "cloneable-private-keys") ("fiat" "curve25519-dalek/fiat_u64_backend" "ed25519-dalek/fiat_u64_backend" "x25519-dalek/fiat_u64_backend") ("default" "fiat") ("cloneable-private-keys") ("assert-private-keys-not-cloneable")))) (y #t)))

(define-public crate-diem-framework-crypto-0.2.0 (c (n "diem-framework-crypto") (v "0.2.0") (d (list (d (n "aes-gcm") (r "^0.8.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.19.4") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "curve25519-dalek-fiat")) (d (n "diem-framework-crypto-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^0.1.0") (f (quote ("std" "serde"))) (k 0) (p "ed25519-dalek-fiat")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.10.0") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (k 0)) (d (n "ripemd160") (r "^0.9.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "sha2") (r "^0.9.3") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.41") (d #t) (k 2)) (d (n "x25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "x25519-dalek-fiat")))) (h "1cs7xgfw2x25x3xwj7s8nlmf0v24azfaf1jaiixd617ax6z4qhxd") (f (quote (("u64" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend" "x25519-dalek/u64_backend") ("u32" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend" "x25519-dalek/u32_backend") ("fuzzing" "proptest" "proptest-derive" "cloneable-private-keys") ("fiat" "curve25519-dalek/fiat_u64_backend" "ed25519-dalek/fiat_u64_backend" "x25519-dalek/fiat_u64_backend") ("default" "fiat") ("cloneable-private-keys") ("assert-private-keys-not-cloneable")))) (y #t)))

(define-public crate-diem-framework-crypto-0.2.1 (c (n "diem-framework-crypto") (v "0.2.1") (d (list (d (n "aes-gcm") (r "^0.8.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.19.4") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "curve25519-dalek-fiat")) (d (n "diem-framework-crypto-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^0.1.0") (f (quote ("std" "serde"))) (k 0) (p "ed25519-dalek-fiat")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.10.0") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (k 0)) (d (n "ripemd160") (r "^0.9.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "sha2") (r "^0.9.3") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.41") (d #t) (k 2)) (d (n "x25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "x25519-dalek-fiat")))) (h "0i5fjid2l4zqvcf6vifwdbqppcg9sa1a1gh2kl36h4pgns35inb0") (f (quote (("u64" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend" "x25519-dalek/u64_backend") ("u32" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend" "x25519-dalek/u32_backend") ("fuzzing" "proptest" "proptest-derive" "cloneable-private-keys") ("fiat" "curve25519-dalek/fiat_u64_backend" "ed25519-dalek/fiat_u64_backend" "x25519-dalek/fiat_u64_backend") ("default" "fiat") ("cloneable-private-keys") ("assert-private-keys-not-cloneable")))) (y #t)))

(define-public crate-diem-framework-crypto-0.3.0 (c (n "diem-framework-crypto") (v "0.3.0") (d (list (d (n "aes-gcm") (r "^0.8.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.19.4") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "curve25519-dalek-fiat")) (d (n "diem-framework-crypto-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^0.1.0") (f (quote ("std" "serde"))) (k 0) (p "ed25519-dalek-fiat")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.10.0") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (k 0)) (d (n "ripemd160") (r "^0.9.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "sha2") (r "^0.9.3") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "trybuild") (r "=1.0.53") (d #t) (k 2)) (d (n "x25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "x25519-dalek-fiat")))) (h "0q3xfsirssjpysyjnr6mknks7xsqdc53kr6g11m7sl1h6gqggrjy") (f (quote (("u64" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend" "x25519-dalek/u64_backend") ("u32" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend" "x25519-dalek/u32_backend") ("fuzzing" "proptest" "proptest-derive" "cloneable-private-keys") ("fiat" "curve25519-dalek/fiat_u64_backend" "ed25519-dalek/fiat_u64_backend" "x25519-dalek/fiat_u64_backend") ("default" "fiat") ("cloneable-private-keys") ("assert-private-keys-not-cloneable")))) (y #t)))

(define-public crate-diem-framework-crypto-0.3.1 (c (n "diem-framework-crypto") (v "0.3.1") (d (list (d (n "aes-gcm") (r "^0.8.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.19.4") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "curve25519-dalek-fiat")) (d (n "diem-framework-crypto-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^0.1.0") (f (quote ("std" "serde"))) (k 0) (p "ed25519-dalek-fiat")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.10.0") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (k 0)) (d (n "ripemd160") (r "^0.9.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "sha2") (r "^0.9.3") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "trybuild") (r "=1.0.53") (d #t) (k 2)) (d (n "x25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "x25519-dalek-fiat")))) (h "0ji5qbkb956i61lpy8kjpnv7q8czqiicg0p63782j87chbh8ndm5") (f (quote (("u64" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend" "x25519-dalek/u64_backend") ("u32" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend" "x25519-dalek/u32_backend") ("fuzzing" "proptest" "proptest-derive" "cloneable-private-keys") ("fiat" "curve25519-dalek/fiat_u64_backend" "ed25519-dalek/fiat_u64_backend" "x25519-dalek/fiat_u64_backend") ("default" "fiat") ("cloneable-private-keys") ("assert-private-keys-not-cloneable")))) (y #t)))

(define-public crate-diem-framework-crypto-0.3.2 (c (n "diem-framework-crypto") (v "0.3.2") (d (list (d (n "aes-gcm") (r "^0.8.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.19.4") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "curve25519-dalek-fiat")) (d (n "diem-framework-crypto-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^0.1.0") (f (quote ("std" "serde"))) (k 0) (p "ed25519-dalek-fiat")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.10.0") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (k 0)) (d (n "ripemd160") (r "^0.9.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "sha2") (r "^0.9.3") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "trybuild") (r "=1.0.53") (d #t) (k 2)) (d (n "x25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "x25519-dalek-fiat")))) (h "1sa340fykcwd8f1wkx0r75paq7rfz56jwjakq139bw0q5jig8dbh") (f (quote (("u64" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend" "x25519-dalek/u64_backend") ("u32" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend" "x25519-dalek/u32_backend") ("fuzzing" "proptest" "proptest-derive" "cloneable-private-keys") ("fiat" "curve25519-dalek/fiat_u64_backend" "ed25519-dalek/fiat_u64_backend" "x25519-dalek/fiat_u64_backend") ("default" "fiat") ("cloneable-private-keys") ("assert-private-keys-not-cloneable")))) (y #t)))

