(define-module (crates-io di em diem-crypto) #:use-module (crates-io))

(define-public crate-diem-crypto-0.0.0 (c (n "diem-crypto") (v "0.0.0") (h "14514bjbmx63qq7b56crdv3b49qzn0qr4fams1hcspwhhqx0hnmb")))

(define-public crate-diem-crypto-0.0.1 (c (n "diem-crypto") (v "0.0.1") (d (list (d (n "aes-gcm") (r "^0.8.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.19.4") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.2") (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "curve25519-dalek-fiat")) (d (n "diem-crypto-derive") (r "^0.0.1") (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^0.1.0") (f (quote ("std" "serde"))) (k 0) (p "ed25519-dalek-fiat")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.10.0") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (k 0)) (d (n "ripemd160") (r "^0.9.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "sha2") (r "^0.9.3") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.41") (d #t) (k 2)) (d (n "x25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "x25519-dalek-fiat")))) (h "14jk4ld1ry1rfziq557xkm75szci2ghcc5w0ik19nidb31vrdzsx") (f (quote (("u64" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend" "x25519-dalek/u64_backend") ("u32" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend" "x25519-dalek/u32_backend") ("fuzzing" "proptest" "proptest-derive" "cloneable-private-keys") ("fiat" "curve25519-dalek/fiat_u64_backend" "ed25519-dalek/fiat_u64_backend" "x25519-dalek/fiat_u64_backend") ("default" "fiat") ("cloneable-private-keys") ("assert-private-keys-not-cloneable"))))))

(define-public crate-diem-crypto-0.0.2 (c (n "diem-crypto") (v "0.0.2") (d (list (d (n "aes-gcm") (r "^0.8.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.19.4") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "curve25519-dalek-fiat")) (d (n "diem-crypto-derive") (r "^0.0.2") (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^0.1.0") (f (quote ("std" "serde"))) (k 0) (p "ed25519-dalek-fiat")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.10.0") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (k 0)) (d (n "ripemd160") (r "^0.9.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "sha2") (r "^0.9.3") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.41") (d #t) (k 2)) (d (n "x25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "x25519-dalek-fiat")))) (h "0syfgnn9cmghwz5gqdym2iw87ki9vdf481ffs81fw1wrvcmhkvb7") (f (quote (("u64" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend" "x25519-dalek/u64_backend") ("u32" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend" "x25519-dalek/u32_backend") ("fuzzing" "proptest" "proptest-derive" "cloneable-private-keys") ("fiat" "curve25519-dalek/fiat_u64_backend" "ed25519-dalek/fiat_u64_backend" "x25519-dalek/fiat_u64_backend") ("default" "fiat") ("cloneable-private-keys") ("assert-private-keys-not-cloneable"))))))

(define-public crate-diem-crypto-0.0.3 (c (n "diem-crypto") (v "0.0.3") (d (list (d (n "aes-gcm") (r "^0.8.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.19.4") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "curve25519-dalek-fiat")) (d (n "diem-crypto-derive") (r "^0.0.3") (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^0.1.0") (f (quote ("std" "serde"))) (k 0) (p "ed25519-dalek-fiat")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.10.0") (d #t) (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.2") (k 0)) (d (n "ripemd160") (r "^0.9.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-name") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "sha2") (r "^0.9.3") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.41") (d #t) (k 2)) (d (n "x25519-dalek") (r "^0.1.0") (f (quote ("std"))) (k 0) (p "x25519-dalek-fiat")))) (h "04hdck2h414npnd6l0k6qalxn1jjrh9jf35h9v6hmb980qrkrrsb") (f (quote (("u64" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend" "x25519-dalek/u64_backend") ("u32" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend" "x25519-dalek/u32_backend") ("fuzzing" "proptest" "proptest-derive" "cloneable-private-keys") ("fiat" "curve25519-dalek/fiat_u64_backend" "ed25519-dalek/fiat_u64_backend" "x25519-dalek/fiat_u64_backend") ("default" "fiat") ("cloneable-private-keys") ("assert-private-keys-not-cloneable"))))))

