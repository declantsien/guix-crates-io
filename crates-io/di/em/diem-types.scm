(define-module (crates-io di em diem-types) #:use-module (crates-io))

(define-public crate-diem-types-0.0.0 (c (n "diem-types") (v "0.0.0") (h "07cwyvqzvy8d4gs7av5zcvb5mgnnrs5ficyg9hc45jjq5gyjyhj8")))

(define-public crate-diem-types-0.0.1 (c (n "diem-types") (v "0.0.1") (d (list (d (n "aes-gcm") (r "^0.8.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 0)) (d (n "diem-crypto") (r "^0.0.1") (d #t) (k 0)) (d (n "diem-crypto-derive") (r "^0.0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "move-core-types") (r "^0.0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (k 0)))) (h "151d9yg0hykd06lrf5di38giw3p6j0gczjpdf664pr0y8lmwz17b") (f (quote (("fuzzing" "proptest" "proptest-derive" "diem-crypto/fuzzing" "move-core-types/fuzzing") ("default"))))))

(define-public crate-diem-types-0.0.2 (c (n "diem-types") (v "0.0.2") (d (list (d (n "aes-gcm") (r "^0.8.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 0)) (d (n "diem-crypto") (r "^0.0.2") (d #t) (k 0)) (d (n "diem-crypto-derive") (r "^0.0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "move-core-types") (r "^0.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (k 0)))) (h "08qyl4irnyii7k1z4armbp60536cyr87fwjp50m3nbcva08w0djn") (f (quote (("fuzzing" "proptest" "proptest-derive" "diem-crypto/fuzzing" "move-core-types/fuzzing") ("default"))))))

(define-public crate-diem-types-0.0.3 (c (n "diem-types") (v "0.0.3") (d (list (d (n "aes-gcm") (r "^0.8.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "bcs") (r "^0.1.2") (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 0)) (d (n "diem-crypto") (r "^0.0.3") (d #t) (k 0)) (d (n "diem-crypto-derive") (r "^0.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (k 0)) (d (n "mirai-annotations") (r "^1.10.1") (d #t) (k 0)) (d (n "move-core-types") (r "^0.0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.124") (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (k 0)))) (h "1achqlqdkk59n5cvmv61wwg6p68cz41kbpyk2c8mgjhi5nahn4w8") (f (quote (("fuzzing" "proptest" "proptest-derive" "diem-crypto/fuzzing" "move-core-types/fuzzing") ("default"))))))

