(define-module (crates-io di am diamond-types) #:use-module (crates-io))

(define-public crate-diamond-types-0.1.0 (c (n "diamond-types") (v "0.1.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "humansize") (r "^1.1.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "ropey") (r "^1.1.0") (d #t) (k 0)) (d (n "serde_crate") (r "^1.0.126") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)))) (h "1rbmmhxdgsj9vfy590w4ihk066fkrl2mp42d4w9mnb0agnmkbidc") (f (quote (("serde" "serde_crate" "smallvec/serde" "smartstring/serde") ("memusage") ("inlinerope"))))))

(define-public crate-diamond-types-1.0.0 (c (n "diamond-types") (v "1.0.0") (d (list (d (n "content-tree") (r "^0.2.0") (d #t) (k 0)) (d (n "crc") (r "^2.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "humansize") (r "^1.1.1") (d #t) (k 0)) (d (n "jumprope") (r "^1.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.5.6") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rle") (r "^0.2.0") (d #t) (k 0)) (d (n "serde_crate") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "smallvec") (r "^1.8.0") (f (quote ("union" "const_generics"))) (d #t) (k 0)) (d (n "smartstring") (r "^1.0.0") (d #t) (k 0)) (d (n "str_indices") (r "^0.3.1") (d #t) (k 0)))) (h "1zb6l52qmcf18qsnsygs9vx4ri8xzab0j5rmk7jd9kz6yx6h5v6l") (f (quote (("wchar_conversion" "jumprope/wchar_conversion") ("serde" "serde_crate" "smallvec/serde" "smartstring/serde") ("lz4" "lz4_flex") ("inlinerope") ("dot_export") ("default" "lz4"))))))

