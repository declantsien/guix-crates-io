(define-module (crates-io di ff diffsitter) #:use-module (crates-io))

(define-public crate-diffsitter-0.0.1 (c (n "diffsitter") (v "0.0.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "colour") (r "^0.5") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 1)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.16.1") (d #t) (k 0)))) (h "0587hwncdnch2smrz5cwq03qqgm3bqsmj61nh4g9pvkcdsfng0v6")))

(define-public crate-diffsitter-0.1.0 (c (n "diffsitter") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "paw") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("paw"))) (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)))) (h "0khg29hpsvhh65cjfhl2qvxvldzjv6cnwikqc0jkmqyzsq8drzly")))

(define-public crate-diffsitter-0.1.1 (c (n "diffsitter") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "paw") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("paw"))) (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)))) (h "142xbax2cr8jqdi8a5sqyxcj37hhh7k367lvgfvqkmvwx7q2xi42")))

(define-public crate-diffsitter-0.1.2 (c (n "diffsitter") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "paw") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("paw"))) (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)))) (h "05zjapz02rz4flf5ck609dahc1r93rlk0j2l7sy3vnhniyv7rqvv")))

(define-public crate-diffsitter-0.1.3 (c (n "diffsitter") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "paw") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("paw"))) (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)))) (h "01v8b4a0f8nd2ar5z50h29lj38yi1zlcp7640vs66lgipay8z4vi")))

(define-public crate-diffsitter-0.1.4 (c (n "diffsitter") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "paw") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("paw"))) (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)))) (h "1z17krxrwpahgr5hkckdqw6zny9nkfvy894zcsa6yyi5cm34mby1")))

(define-public crate-diffsitter-0.1.5 (c (n "diffsitter") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "paw") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("paw"))) (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)))) (h "00c5r4far44y8kj24z5g3xzrjf84h8a4szy39mg7jsbjpnc1smxh")))

(define-public crate-diffsitter-0.1.6 (c (n "diffsitter") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "paw") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("paw"))) (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)))) (h "06wy17yph8gbw476w7bsr26jvifk8wmc2kzxh50s2nkfnj8i0jgm")))

(define-public crate-diffsitter-0.2.0 (c (n "diffsitter") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "paw") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("paw"))) (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)))) (h "1qyhxyh7fyacsgf9cbnrlf5yrj6n7ra48dfqh74iwm2xj6xnwdfh")))

(define-public crate-diffsitter-0.3.0 (c (n "diffsitter") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "logging_timer") (r "^1.0") (d #t) (k 0)) (d (n "paw") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("paw"))) (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)))) (h "156dki79kxs4zmjzday192n46angkfipygmzbv9l81izhxa5hbr6")))

(define-public crate-diffsitter-0.4.0 (c (n "diffsitter") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "logging_timer") (r "^1.0") (d #t) (k 0)) (d (n "paw") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("paw"))) (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)))) (h "032cvg7fqjsbij45xgy9if8ax13nrra8p5kswgw5fqmvssnk6nic")))

(define-public crate-diffsitter-0.5.0 (c (n "diffsitter") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "logging_timer") (r "^1.0") (d #t) (k 0)) (d (n "paw") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("paw"))) (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)))) (h "1j08gsg50bk42s0dlyahpirdajv1fp4n0azw8h5jjqn9i1zky0dh")))

(define-public crate-diffsitter-0.6.0 (c (n "diffsitter") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "cargo-husky") (r "^1") (f (quote ("prepush-hook" "run-cargo-test" "run-cargo-clippy" "run-cargo-fmt"))) (d #t) (k 2)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "logging_timer") (r "^1.0") (d #t) (k 0)) (d (n "paw") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("paw"))) (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)))) (h "11rgnyv3hyjp8dc197p54hcy1rwlpd4mw4x708chx5rwmarycw6a")))

(define-public crate-diffsitter-0.6.1 (c (n "diffsitter") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "cargo-husky") (r "^1") (f (quote ("prepush-hook" "run-cargo-test" "run-cargo-clippy" "run-cargo-fmt"))) (d #t) (k 2)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "logging_timer") (r "^1.0") (d #t) (k 0)) (d (n "paw") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("paw"))) (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)))) (h "15bwbp746yxs5ph9xhlvw92a1175a4492p0hlgygqcrrb8jgm1zb")))

(define-public crate-diffsitter-0.6.2 (c (n "diffsitter") (v "0.6.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "cargo-husky") (r "^1") (f (quote ("prepush-hook" "run-cargo-test" "run-cargo-clippy" "run-cargo-fmt"))) (d #t) (k 2)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories-next") (r "^2.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "logging_timer") (r "^1.0") (d #t) (k 0)) (d (n "paw") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("paw"))) (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)))) (h "029x32z2r9cw6div2rarkxv437nhqi085cp90c0lwfcjc10vp379")))

(define-public crate-diffsitter-0.6.3 (c (n "diffsitter") (v "0.6.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "cargo-husky") (r "^1") (f (quote ("prepush-hook" "run-cargo-test" "run-cargo-clippy" "run-cargo-fmt"))) (d #t) (k 2)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories-next") (r "^2.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "logging_timer") (r "^1.0") (d #t) (k 0)) (d (n "paw") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("paw"))) (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)))) (h "0pzcmydgg9yaxv7hxq81y492ckj3wq59akjialiyyc9hrsz4h1k6")))

(define-public crate-diffsitter-0.6.4 (c (n "diffsitter") (v "0.6.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "cargo-husky") (r "^1") (f (quote ("prepush-hook" "run-cargo-test" "run-cargo-clippy" "run-cargo-fmt"))) (d #t) (k 2)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories-next") (r "^2.0") (d #t) (k 0)) (d (n "json5") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "logging_timer") (r "^1.0") (d #t) (k 0)) (d (n "paw") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("paw"))) (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)))) (h "0jws9yxf7rz8clcpqs4p63n6d15zak0l85qj7zc99g7wg6ma50qj")))

(define-public crate-diffsitter-0.6.5 (c (n "diffsitter") (v "0.6.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories-next") (r "^2.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "json5") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "logging_timer") (r "^1.0") (d #t) (k 0)) (d (n "paw") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("paw"))) (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.17") (d #t) (k 0)) (d (n "xdg") (r "^2.2") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)))) (h "0mpsfrn4k594rhvx6p7y1v40vvl1p1rcmdfwz3kmr30p42xlxv49")))

(define-public crate-diffsitter-0.6.6 (c (n "diffsitter") (v "0.6.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "cargo-emit") (r "^0.1") (d #t) (k 1)) (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories-next") (r "^2.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "json5") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "logging_timer") (r "^1.0") (d #t) (k 0)) (d (n "paw") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("paw"))) (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.19") (d #t) (k 0)) (d (n "xdg") (r "^2.2") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)))) (h "1bbq2ni8y26ndnbzrbc9kkana2s1yys5wp9q9mv0appml353ixpk")))

(define-public crate-diffsitter-0.6.7 (c (n "diffsitter") (v "0.6.7") (d (list (d (n "anyhow") (r "^1.0.48") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.48") (d #t) (k 1)) (d (n "build-info") (r "^0.0.24") (o #t) (d #t) (k 0)) (d (n "build-info-build") (r "^0.0.24") (o #t) (d #t) (k 1)) (d (n "cargo-emit") (r "^0.2.1") (d #t) (k 1)) (d (n "cc") (r "^1.0.72") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "console") (r "^0.15.0") (d #t) (k 0)) (d (n "directories-next") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "insta") (r "^1.8.0") (f (quote ("backtrace"))) (d #t) (k 2)) (d (n "jemallocator") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "libloading") (r "^0.7.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("std"))) (d #t) (k 0)) (d (n "logging_timer") (r "^1.0.0") (d #t) (k 0)) (d (n "paw") (r "^1.0.0") (d #t) (k 0)) (d (n "phf") (r "^0.10.0") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.10.0") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 1)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (f (quote ("paw"))) (d #t) (k 0)) (d (n "strum") (r "^0.23.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.23.1") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 1)) (d (n "tree-sitter") (r "^0.20.1") (d #t) (k 0)) (d (n "xdg") (r "^2.4.0") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)))) (h "1msiip1sngqp9aysnri7bjxrxql2n381hysiimw4jwyrsiq6z81m") (f (quote (("static-grammar-libs") ("dynamic-grammar-libs") ("default" "static-grammar-libs") ("better-build-info" "build-info" "build-info-build"))))))

(define-public crate-diffsitter-0.6.8 (c (n "diffsitter") (v "0.6.8") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.51") (d #t) (k 1)) (d (n "build-info") (r "^0.0.24") (o #t) (d #t) (k 0)) (d (n "build-info-build") (r "^0.0.24") (o #t) (d #t) (k 1)) (d (n "cargo-emit") (r "^0.2.1") (d #t) (k 1)) (d (n "cc") (r "^1.0.72") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "console") (r "^0.15.0") (d #t) (k 0)) (d (n "directories-next") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "insta") (r "^1.8.0") (f (quote ("backtrace"))) (d #t) (k 2)) (d (n "jemallocator") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "libloading") (r "^0.7.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("std"))) (d #t) (k 0)) (d (n "logging_timer") (r "^1.0.0") (d #t) (k 0)) (d (n "paw") (r "^1.0.0") (d #t) (k 0)) (d (n "phf") (r "^0.10.0") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.10.0") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 1)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (f (quote ("paw"))) (d #t) (k 0)) (d (n "strum") (r "^0.23.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.23.1") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 1)) (d (n "tree-sitter") (r "^0.20.1") (d #t) (k 0)) (d (n "xdg") (r "^2.4.0") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)))) (h "13qg82acjvgaxwq05bdc4djkimh29r1z9adsffd57f2kid3xixhg") (f (quote (("static-grammar-libs") ("dynamic-grammar-libs") ("default" "static-grammar-libs") ("better-build-info" "build-info" "build-info-build"))))))

(define-public crate-diffsitter-0.6.9 (c (n "diffsitter") (v "0.6.9") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.52") (d #t) (k 1)) (d (n "build-info") (r "^0.0.24") (o #t) (d #t) (k 0)) (d (n "build-info-build") (r "^0.0.24") (o #t) (d #t) (k 1)) (d (n "cargo-emit") (r "^0.2.1") (d #t) (k 1)) (d (n "cc") (r "^1.0.72") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "console") (r "^0.15.0") (d #t) (k 0)) (d (n "directories-next") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "insta") (r "^1.9.0") (f (quote ("backtrace"))) (d #t) (k 2)) (d (n "jemallocator") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "libloading") (r "^0.7.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("std"))) (d #t) (k 0)) (d (n "logging_timer") (r "^1.0.0") (d #t) (k 0)) (d (n "paw") (r "^1.0.0") (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 1)) (d (n "serde") (r "^1.0.132") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.73") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (f (quote ("paw"))) (d #t) (k 0)) (d (n "strum") (r "^0.23.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.23.1") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 1)) (d (n "tree-sitter") (r "^0.20.2") (d #t) (k 0)) (d (n "xdg") (r "^2.4.0") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)))) (h "1gqg770ad482yknjsf6r4lz47q2bkf37f6cih1vi0yxsm87i8z40") (f (quote (("static-grammar-libs") ("dynamic-grammar-libs") ("default" "static-grammar-libs") ("better-build-info" "build-info" "build-info-build"))))))

(define-public crate-diffsitter-0.7.0 (c (n "diffsitter") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 1)) (d (n "build-info") (r "^0.0.26") (o #t) (d #t) (k 0)) (d (n "build-info-build") (r "^0.0.26") (o #t) (d #t) (k 1)) (d (n "cargo-emit") (r "^0.2.1") (d #t) (k 1)) (d (n "cc") (r "^1.0.73") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "clap") (r "^3.1.9") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3.1.1") (d #t) (k 0)) (d (n "console") (r "^0.15.0") (d #t) (k 0)) (d (n "directories-next") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "insta") (r "^1.14.0") (f (quote ("backtrace"))) (d #t) (k 2)) (d (n "jemallocator") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "libloading") (r "^0.7.3") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (f (quote ("std"))) (d #t) (k 0)) (d (n "logging_timer") (r "^1.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.2") (d #t) (k 1)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "test-case") (r "^2.0.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 1)) (d (n "tree-sitter") (r "^0.20.6") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "xdg") (r "^2.4.1") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)))) (h "1cahyxlijfwags5hdg3wjlscp5brq07f28q3sp734gnm84vzzvha") (f (quote (("static-grammar-libs") ("dynamic-grammar-libs") ("default" "static-grammar-libs") ("better-build-info" "build-info" "build-info-build"))))))

(define-public crate-diffsitter-0.7.1 (c (n "diffsitter") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 1)) (d (n "build-info") (r "^0.0.26") (o #t) (d #t) (k 0)) (d (n "build-info-build") (r "^0.0.26") (o #t) (d #t) (k 1)) (d (n "cargo-emit") (r "^0.2.1") (d #t) (k 1)) (d (n "cc") (r "^1.0.73") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "clap") (r "^3.1.18") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3.1.4") (d #t) (k 0)) (d (n "console") (r "^0.15.0") (d #t) (k 0)) (d (n "directories-next") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "insta") (r "^1.14.0") (f (quote ("backtrace"))) (d #t) (k 2)) (d (n "jemallocator") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "libloading") (r "^0.7.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std"))) (d #t) (k 0)) (d (n "logging_timer") (r "^1.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.2") (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "test-case") (r "^2.0.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 1)) (d (n "tree-sitter") (r "^0.20.6") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "xdg") (r "^2.4.1") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)))) (h "05dv0db0vw1v1wfmma7cl7l389xjhslm3397dg3dwhfa0176f8yn") (f (quote (("static-grammar-libs") ("dynamic-grammar-libs") ("default" "static-grammar-libs") ("better-build-info" "build-info" "build-info-build"))))))

(define-public crate-diffsitter-0.7.2 (c (n "diffsitter") (v "0.7.2") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 1)) (d (n "cargo-emit") (r "^0.2.1") (d #t) (k 1)) (d (n "cc") (r "^1.0.77") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "clap") (r "^4.0.27") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (d #t) (k 0)) (d (n "console") (r "^0.15.2") (d #t) (k 0)) (d (n "directories-next") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "insta") (r "^1.21.2") (d #t) (k 2)) (d (n "jemallocator") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "libloading") (r "^0.7.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std"))) (d #t) (k 0)) (d (n "logging_timer") (r "^1.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.6.0") (d #t) (k 1)) (d (n "serde") (r "^1.0.148") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "shadow-rs") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "shadow-rs") (r "^0.18.0") (o #t) (d #t) (k 1)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 1)) (d (n "tree-sitter") (r "^0.20.9") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (k 0)) (d (n "xdg") (r "^2.4.1") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)))) (h "1sry0h58a8a4v4vf70ipqjjr00nygipf9dhi2fpv5valbpzp324k") (f (quote (("static-grammar-libs") ("dynamic-grammar-libs") ("default" "static-grammar-libs") ("better-build-info" "shadow-rs"))))))

(define-public crate-diffsitter-0.7.3 (c (n "diffsitter") (v "0.7.3") (d (list (d (n "anyhow") (r "^1.0.67") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.67") (d #t) (k 1)) (d (n "cargo-emit") (r "^0.2.1") (d #t) (k 1)) (d (n "cc") (r "^1.0.78") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "clap") (r "^4.0.29") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.6") (d #t) (k 0)) (d (n "console") (r "^0.15.2") (d #t) (k 0)) (d (n "directories-next") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "insta") (r "^1.23.0") (d #t) (k 2)) (d (n "jemallocator") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "libloading") (r "^0.7.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std"))) (d #t) (k 0)) (d (n "logging_timer") (r "^1.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (d #t) (k 1)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.90") (d #t) (k 0)) (d (n "shadow-rs") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "shadow-rs") (r "^0.19.0") (o #t) (d #t) (k 1)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 1)) (d (n "tree-sitter") (r "^0.20.9") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (k 0)) (d (n "xdg") (r "^2.4.1") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)))) (h "1fpzccp5cp6afhpqz7iap77asgr3si19vwsrn95sqbgk6mj8hgn1") (f (quote (("static-grammar-libs") ("dynamic-grammar-libs") ("default" "static-grammar-libs") ("better-build-info" "shadow-rs"))))))

(define-public crate-diffsitter-0.8.0 (c (n "diffsitter") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 1)) (d (n "cargo-emit") (r "^0.2.1") (d #t) (k 1)) (d (n "cc") (r "^1.0.79") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "clap") (r "^4.2.7") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.2.2") (d #t) (k 0)) (d (n "console") (r "^0.15.5") (d #t) (k 0)) (d (n "directories-next") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "enum_dispatch") (r "^0.3.11") (d #t) (k 0)) (d (n "human-panic") (r "^1.1.4") (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (d #t) (k 2)) (d (n "jemallocator") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("std"))) (d #t) (k 0)) (d (n "logging_timer") (r "^1.1.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "shadow-rs") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "shadow-rs") (r "^0.21.0") (o #t) (d #t) (k 1)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 1)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "xdg") (r "^2.5.0") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)))) (h "0i4lrg1fib0h2za74mr7pfrqq4xlz3kxji661jp98mv9m7n2y29l") (f (quote (("static-grammar-libs") ("dynamic-grammar-libs") ("default" "static-grammar-libs") ("better-build-info" "shadow-rs"))))))

(define-public crate-diffsitter-0.8.1 (c (n "diffsitter") (v "0.8.1") (d (list (d (n "anyhow") (r "^1.0.72") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 1)) (d (n "cargo-emit") (r "^0.2.1") (d #t) (k 1)) (d (n "cc") (r "^1.0.79") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "clap") (r "^4.3.12") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.3.2") (d #t) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "directories-next") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "human-panic") (r "^1.1.5") (d #t) (k 0)) (d (n "insta") (r "^1.31.0") (d #t) (k 2)) (d (n "jemallocator") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (f (quote ("std"))) (d #t) (k 0)) (d (n "logging_timer") (r "^1.1.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "serde") (r "^1.0.171") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (d #t) (k 0)) (d (n "shadow-rs") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "shadow-rs") (r "^0.23.0") (o #t) (d #t) (k 1)) (d (n "strum") (r "^0.25.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.1") (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 1)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "xdg") (r "^2.5.0") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)))) (h "037qlg396sm5qhz1cfkj8mllln9qlhz0l6ay2n0fvnk61r8i3gqh") (f (quote (("static-grammar-libs") ("dynamic-grammar-libs") ("default" "static-grammar-libs") ("better-build-info" "shadow-rs"))))))

(define-public crate-diffsitter-0.8.2 (c (n "diffsitter") (v "0.8.2") (d (list (d (n "anyhow") (r "^1.0.79") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 1)) (d (n "cargo-emit") (r "^0.2.1") (d #t) (k 1)) (d (n "cc") (r "^1.0.83") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "clap") (r "^4.4.16") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.4.6") (d #t) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "directories-next") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "human-panic") (r "^1.2.3") (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (d #t) (k 2)) (d (n "jemallocator") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.8.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("std"))) (d #t) (k 0)) (d (n "logging_timer") (r "^1.1.0") (d #t) (k 0)) (d (n "mockall") (r "^0.12.1") (d #t) (k 2)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 1)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "shadow-rs") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "shadow-rs") (r "^0.26.0") (o #t) (d #t) (k 1)) (d (n "strum") (r "^0.25.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 1)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "xdg") (r "^2.5.2") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)))) (h "0j3s413p8bbisg9l0hansszngsrr75ibf183bqblx89plblv3ziv") (f (quote (("static-grammar-libs" "lazy_static") ("dynamic-grammar-libs") ("default" "static-grammar-libs") ("better-build-info" "shadow-rs"))))))

(define-public crate-diffsitter-0.8.3 (c (n "diffsitter") (v "0.8.3") (d (list (d (n "anyhow") (r "^1.0.82") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.82") (d #t) (k 1)) (d (n "cargo-emit") (r "^0.2.1") (d #t) (k 1)) (d (n "cc") (r "^1.0.95") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "clap") (r "^4.5.4") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.5.2") (d #t) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "directories-next") (r "^2.0.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "enum_dispatch") (r "^0.3.13") (d #t) (k 0)) (d (n "human-panic") (r "^2.0.0") (d #t) (k 0)) (d (n "insta") (r "^1.38.0") (d #t) (k 2)) (d (n "jemallocator") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.8.3") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (f (quote ("std"))) (d #t) (k 0)) (d (n "logging_timer") (r "^1.1.1") (d #t) (k 0)) (d (n "mockall") (r "^0.12.1") (d #t) (k 2)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 1)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 1)) (d (n "serde") (r "^1.0.198") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "shadow-rs") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "shadow-rs") (r "^0.27.1") (o #t) (d #t) (k 1)) (d (n "strum") (r "^0.26.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.2") (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.59") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.59") (d #t) (k 1)) (d (n "tree-sitter") (r "^0.22.5") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.11.0") (d #t) (k 0)) (d (n "xdg") (r "^2.5.2") (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)))) (h "0rizqafk617vbn7660vyzfw7lk6r1i9vfb4ci4rpj91vyd24q1mq") (f (quote (("static-grammar-libs" "lazy_static") ("dynamic-grammar-libs") ("default" "static-grammar-libs") ("better-build-info" "shadow-rs"))))))

