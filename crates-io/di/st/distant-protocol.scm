(define-module (crates-io di st distant-protocol) #:use-module (crates-io))

(define-public crate-distant-protocol-0.20.0-alpha.7 (c (n "distant-protocol") (v "0.20.0-alpha.7") (d (list (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant"))) (k 0)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "rmp") (r "^0.8.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "0jsg0r406rkp16nj7mbqzd6cbwq0q895w40si0qhk4xb5kk4jiyw") (f (quote (("tests") ("default"))))))

(define-public crate-distant-protocol-0.20.0-alpha.8 (c (n "distant-protocol") (v "0.20.0-alpha.8") (d (list (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant"))) (k 0)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "rmp") (r "^0.8.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "188v1znrh4zx0r7hqdkjgyqwb97gb59m28pvzgk5zl356bdn0vc5") (f (quote (("tests") ("default"))))))

(define-public crate-distant-protocol-0.20.0-alpha.9 (c (n "distant-protocol") (v "0.20.0-alpha.9") (d (list (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant"))) (k 0)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "rmp") (r "^0.8.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "1685q1zif01g9w0lyj2r14xyi07pa2h7pnb02lqbifkfk6yvnyva") (f (quote (("tests") ("default"))))))

(define-public crate-distant-protocol-0.20.0-alpha.10 (c (n "distant-protocol") (v "0.20.0-alpha.10") (d (list (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant"))) (k 0)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "rmp") (r "^0.8.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "1309xd4hr96982k3pcvvw7cjkzc5s9flr644rpv43lvwlp2v97ja") (f (quote (("tests") ("default"))))))

(define-public crate-distant-protocol-0.20.0-alpha.11 (c (n "distant-protocol") (v "0.20.0-alpha.11") (d (list (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant"))) (k 0)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "rmp") (r "^0.8.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "1b8k58glcfasghnrqsfll39gwm4hkps3j9hhrhp0wgk8jamdwiwp") (f (quote (("tests") ("default"))))))

(define-public crate-distant-protocol-0.20.0-alpha.12 (c (n "distant-protocol") (v "0.20.0-alpha.12") (d (list (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant"))) (k 0)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "rmp") (r "^0.8.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "0c5cjc6xcwgh0babh26l2mbpyhmih8l3pkixkz0km418r83pwqsp") (f (quote (("tests") ("default"))))))

(define-public crate-distant-protocol-0.20.0-alpha.13 (c (n "distant-protocol") (v "0.20.0-alpha.13") (d (list (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "const-str") (r "^0.5.6") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant"))) (k 0)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "rmp") (r "^0.8.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.1") (d #t) (k 2)) (d (n "semver") (r "^1.0.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "10xwpa50rzmxpa865hlxr1bw9zbc0w9fdp7zakw1hhz81nrhx16w") (f (quote (("tests") ("default"))))))

(define-public crate-distant-protocol-0.20.0 (c (n "distant-protocol") (v "0.20.0") (d (list (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "const-str") (r "^0.5.6") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant"))) (k 0)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "rmp") (r "^0.8.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.1") (d #t) (k 2)) (d (n "semver") (r "^1.0.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "11hb49l1d3w9i5x24c46j3cklr0ry3r74l90xivlr91ykynwn5qx") (f (quote (("tests") ("default"))))))

