(define-module (crates-io di st distant-core) #:use-module (crates-io))

(define-public crate-distant-core-0.13.0 (c (n "distant-core") (v "0.13.0") (d (list (d (n "assert_fs") (r "^1.0.4") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.16") (f (quote ("display" "from" "error" "is_variant"))) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "k256") (r "^0.9.6") (f (quote ("ecdh"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "orion") (r "^0.16.0") (d #t) (k 0)) (d (n "predicates") (r "^2.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "structopt") (r "^0.3.22") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.9.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "066q5w1j8gkxag2l4vssdvn89s4jaskm3cfpkkx1wnn71ihy2c9j")))

(define-public crate-distant-core-0.13.1 (c (n "distant-core") (v "0.13.1") (d (list (d (n "assert_fs") (r "^1.0.4") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.16") (f (quote ("display" "from" "error" "is_variant"))) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "k256") (r "^0.9.6") (f (quote ("ecdh"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "orion") (r "^0.16.0") (d #t) (k 0)) (d (n "predicates") (r "^2.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "structopt") (r "^0.3.22") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.9.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "1g0q88fgcds0whfyr64s1vhiyzlcv1xr1hhw3l2z86w747ypvjqm")))

(define-public crate-distant-core-0.14.0 (c (n "distant-core") (v "0.14.0") (d (list (d (n "assert_fs") (r "^1.0.4") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.9.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.16") (f (quote ("display" "from" "error" "is_variant"))) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "predicates") (r "^2.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "structopt") (r "^0.3.22") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.9.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "1fp4k06j612k50qzcwk23habgksll7g5259dd25v5ajyn0sqvd0f")))

(define-public crate-distant-core-0.14.1 (c (n "distant-core") (v "0.14.1") (d (list (d (n "assert_fs") (r "^1.0.4") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.9.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.16") (f (quote ("display" "from" "error" "is_variant"))) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "predicates") (r "^2.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "structopt") (r "^0.3.22") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.9.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0p1l665g7x50l6n4h2nljp62fipiblb02g9h3nx4krg8ihw7zn8v")))

(define-public crate-distant-core-0.14.2 (c (n "distant-core") (v "0.14.2") (d (list (d (n "assert_fs") (r "^1.0.4") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.9.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.16") (f (quote ("display" "from" "error" "is_variant"))) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "predicates") (r "^2.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "structopt") (r "^0.3.22") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.9.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0cjz7w555i6wj1kp1shlg90lpj58hlv4wdg2nypbv85lsz6al5xy")))

(define-public crate-distant-core-0.15.0-alpha.1 (c (n "distant-core") (v "0.15.0-alpha.1") (d (list (d (n "assert_fs") (r "^1.0.4") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.9.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.16") (f (quote ("display" "from" "error" "is_variant"))) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "predicates") (r "^2.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "ssh2") (r "^0.9.1") (f (quote ("vendored-openssl"))) (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.22") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "159h5ilh0whw6qbvdfb58dcrqinbikcq8piszrwbx493mlc91m5l") (f (quote (("native-ssh2" "rpassword" "ssh2"))))))

(define-public crate-distant-core-0.15.0-alpha.2 (c (n "distant-core") (v "0.15.0-alpha.2") (d (list (d (n "assert_fs") (r "^1.0.4") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.9.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.16") (f (quote ("display" "from" "error" "is_variant"))) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "predicates") (r "^2.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "ssh2") (r "^0.9.1") (f (quote ("vendored-openssl"))) (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.22") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0352vlpxyn4aj08fbln33zys8271w1klbvbm12lmz3rihx5gvnnb") (f (quote (("native-ssh2" "rpassword" "ssh2"))))))

(define-public crate-distant-core-0.15.0-alpha.3 (c (n "distant-core") (v "0.15.0-alpha.3") (d (list (d (n "assert_fs") (r "^1.0.4") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.9.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.16") (f (quote ("display" "from" "error" "is_variant"))) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "predicates") (r "^2.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "structopt") (r "^0.3.22") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "1cvj1qa4jbk8fj0hb0gnkhfbksnp6c7hbw061y7vmzm6pyys1i73")))

(define-public crate-distant-core-0.15.0-alpha.4 (c (n "distant-core") (v "0.15.0-alpha.4") (d (list (d (n "assert_fs") (r "^1.0.4") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.9.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.16") (f (quote ("display" "from" "error" "is_variant"))) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "predicates") (r "^2.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "structopt") (r "^0.3.22") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "1y33j8vwhqmq7k2xs3zbyfq6n2sf8n3mlgkhn4dh0vnqhrhkavsf")))

(define-public crate-distant-core-0.15.0-alpha.5 (c (n "distant-core") (v "0.15.0-alpha.5") (d (list (d (n "assert_fs") (r "^1.0.4") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.9.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.16") (f (quote ("display" "from" "error" "is_variant"))) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "predicates") (r "^2.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "structopt") (r "^0.3.22") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0fv6ysvgb02g9blf3yazn4wlm5hbsz2wxs553is5bnfqpp89jssw")))

(define-public crate-distant-core-0.15.0-alpha.6 (c (n "distant-core") (v "0.15.0-alpha.6") (d (list (d (n "assert_fs") (r "^1.0.4") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.9.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.16") (f (quote ("display" "from" "error" "is_variant"))) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "predicates") (r "^2.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "structopt") (r "^0.3.22") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "1yq4c2f4zq73jr8jfng91ij34vlsr96dx6y73phwgfcq1cpsfjkq")))

(define-public crate-distant-core-0.15.0 (c (n "distant-core") (v "0.15.0") (d (list (d (n "assert_fs") (r "^1.0.4") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.9.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.16") (f (quote ("display" "from" "error" "is_variant"))) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "predicates") (r "^2.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "structopt") (r "^0.3.22") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "1jb8m95fg5rlydady9dbw3syhibzp95m5p5gx9n0bwdwzcga4fxw")))

(define-public crate-distant-core-0.15.1 (c (n "distant-core") (v "0.15.1") (d (list (d (n "assert_fs") (r "^1.0.4") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.9.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.16") (f (quote ("display" "from" "error" "is_variant"))) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "predicates") (r "^2.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "structopt") (r "^0.3.22") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "1lcc7ccnpzk0nvfmx3pzsxfz1p79fns9j61yscrj74kg4gkkx1pj")))

(define-public crate-distant-core-0.16.0 (c (n "distant-core") (v "0.16.0") (d (list (d (n "assert_fs") (r "^1.0.4") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.9.0") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.16") (f (quote ("deref" "deref_mut" "display" "from" "error" "into_iterator" "is_variant"))) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "normpath") (r "^0.3.2") (d #t) (k 0)) (d (n "notify") (r "^5.0.0-pre.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "predicates") (r "^2.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "structopt") (r "^0.3.22") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0p38nkqj6ws4d3ww1jh72qvm3rjm6nzjbqbn8lvfx0zxxxs14drq")))

(define-public crate-distant-core-0.16.1 (c (n "distant-core") (v "0.16.1") (d (list (d (n "assert_fs") (r "^1.0.4") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.9.0") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.16") (f (quote ("deref" "deref_mut" "display" "from" "error" "into_iterator" "is_variant"))) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "normpath") (r "^0.3.2") (d #t) (k 0)) (d (n "notify") (r "^5.0.0-pre.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "predicates") (r "^2.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "structopt") (r "^0.3.22") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0vna0sdh27fdj0crimf7gfcp12pm67mfh1wjqrj7axhylx6ccbj3")))

(define-public crate-distant-core-0.16.2 (c (n "distant-core") (v "0.16.2") (d (list (d (n "assert_fs") (r "^1.0.4") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.9.0") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.16") (f (quote ("deref" "deref_mut" "display" "from" "error" "into_iterator" "is_variant"))) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "normpath") (r "^0.3.2") (d #t) (k 0)) (d (n "notify") (r "^5.0.0-pre.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "predicates") (r "^2.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "structopt") (r "^0.3.22") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "07bwyz667gr0mribahrqk8mfbg3qqn9lfdfh7c4y6s8ssxjwr2lg")))

(define-public crate-distant-core-0.16.3 (c (n "distant-core") (v "0.16.3") (d (list (d (n "assert_fs") (r "^1.0.4") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.9.0") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.16") (f (quote ("deref" "deref_mut" "display" "from" "error" "into_iterator" "is_variant"))) (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "normpath") (r "^0.3.2") (d #t) (k 0)) (d (n "notify") (r "^5.0.0-pre.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "predicates") (r "^2.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "structopt") (r "^0.3.22") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "02v8nic82kdqqvlkcfyv1jff4zg5i9447nx55ad252chnigkz6qz")))

(define-public crate-distant-core-0.16.4 (c (n "distant-core") (v "0.16.4") (d (list (d (n "assert_fs") (r "^1.0.4") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.9.0") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.16") (f (quote ("deref" "deref_mut" "display" "from" "error" "into_iterator" "is_variant"))) (k 0)) (d (n "flexi_logger") (r "^0.22.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "normpath") (r "^0.3.2") (d #t) (k 0)) (d (n "notify") (r "^5.0.0-pre.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "predicates") (r "^2.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "rstest") (r "^0.13.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "structopt") (r "^0.3.22") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0ssf2wcky372yjj5jqgwgm98wif8iykxhkplzk5gaizrhwfaqpj9")))

(define-public crate-distant-core-0.17.0 (c (n "distant-core") (v "0.17.0") (d (list (d (n "assert_fs") (r "^1.0.7") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("as_mut" "as_ref" "deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant" "try_into"))) (k 0)) (d (n "distant-net") (r "=0.17.0") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.23.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.7") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "notify") (r "^5.0.0-pre.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.142") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.3") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "winsplit") (r "^0.1.0") (d #t) (k 0)))) (h "0w0w3nbcv0xf5w3i1g74cyg116f6h2blzpj7kbllp4gzn33z9klw") (s 2) (e (quote (("schemars" "dep:schemars" "distant-net/schemars"))))))

(define-public crate-distant-core-0.17.1 (c (n "distant-core") (v "0.17.1") (d (list (d (n "assert_fs") (r "^1.0.7") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("as_mut" "as_ref" "deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant" "try_into"))) (k 0)) (d (n "distant-net") (r "=0.17.1") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.23.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.7") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "notify") (r "=5.0.0-pre.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.142") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.3") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "winsplit") (r "^0.1.0") (d #t) (k 0)))) (h "0l10qc7ryzjvjs2l5ghxfhn2qjib2dj4amd271n93sd0jhi0652z") (s 2) (e (quote (("schemars" "dep:schemars" "distant-net/schemars"))))))

(define-public crate-distant-core-0.17.2 (c (n "distant-core") (v "0.17.2") (d (list (d (n "assert_fs") (r "^1.0.7") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("as_mut" "as_ref" "deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant" "try_into"))) (k 0)) (d (n "distant-net") (r "=0.17.2") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.23.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.7") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "notify") (r "=5.0.0-pre.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.142") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.3") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "winsplit") (r "^0.1.0") (d #t) (k 0)))) (h "0r00qwy82ifa9y5lwrpm33picy122x2psk2qawvi1l5xf1xhxncp") (s 2) (e (quote (("schemars" "dep:schemars" "distant-net/schemars"))))))

(define-public crate-distant-core-0.17.3 (c (n "distant-core") (v "0.17.3") (d (list (d (n "assert_fs") (r "^1.0.7") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("as_mut" "as_ref" "deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant" "try_into"))) (k 0)) (d (n "distant-net") (r "=0.17.3") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.23.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.7") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "notify") (r "=5.0.0-pre.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.142") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.3") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "winsplit") (r "^0.1.0") (d #t) (k 0)))) (h "0wmswh05xhpafq7gkjwf7spixbqmg0mlp81a0zn9pwjs2297c29y") (s 2) (e (quote (("schemars" "dep:schemars" "distant-net/schemars"))))))

(define-public crate-distant-core-0.17.4 (c (n "distant-core") (v "0.17.4") (d (list (d (n "assert_fs") (r "^1.0.7") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("as_mut" "as_ref" "deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant" "try_into"))) (k 0)) (d (n "distant-net") (r "=0.17.4") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.23.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.7") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "notify") (r "=5.0.0-pre.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.142") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.3") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "winsplit") (r "^0.1.0") (d #t) (k 0)))) (h "02fjcykzq2mf5awaaqywkwl4nc7mlsyy42bn9a333g6s7f4wddiq") (s 2) (e (quote (("schemars" "dep:schemars" "distant-net/schemars"))))))

(define-public crate-distant-core-0.17.5 (c (n "distant-core") (v "0.17.5") (d (list (d (n "assert_fs") (r "^1.0.7") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("as_mut" "as_ref" "deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant" "try_into"))) (k 0)) (d (n "distant-net") (r "=0.17.5") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.23.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.7") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "notify") (r "=5.0.0-pre.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.142") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.3") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "winsplit") (r "^0.1.0") (d #t) (k 0)))) (h "0n9lc4nxs0bkxjdi99isvzmf5k24anq547xmj3yibg1hjak35b3h") (s 2) (e (quote (("schemars" "dep:schemars" "distant-net/schemars"))))))

(define-public crate-distant-core-0.17.6 (c (n "distant-core") (v "0.17.6") (d (list (d (n "assert_fs") (r "^1.0.7") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("as_mut" "as_ref" "deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant" "try_into"))) (k 0)) (d (n "distant-net") (r "=0.17.6") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.23.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.7") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "notify") (r "=5.0.0-pre.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.142") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.3") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "winsplit") (r "^0.1.0") (d #t) (k 0)))) (h "10hg3rm8qy585fhav9rki1awqf1mgs9ac5l4y971j58qyxi9ri25") (s 2) (e (quote (("schemars" "dep:schemars" "distant-net/schemars"))))))

(define-public crate-distant-core-0.18.0 (c (n "distant-core") (v "0.18.0") (d (list (d (n "assert_fs") (r "^1.0.7") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("as_mut" "as_ref" "deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant" "try_into"))) (k 0)) (d (n "distant-net") (r "=0.18.0") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.23.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.7") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "notify") (r "=5.0.0-pre.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.142") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.3") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "winsplit") (r "^0.1.0") (d #t) (k 0)))) (h "0vif72hbjgjmc7d0p2jh1qxiw6lp04ckrq0f7vlkwan4h9q2x2w3") (s 2) (e (quote (("schemars" "dep:schemars" "distant-net/schemars"))))))

(define-public crate-distant-core-0.19.0 (c (n "distant-core") (v "0.19.0") (d (list (d (n "assert_fs") (r "^1.0.7") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("as_mut" "as_ref" "deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant" "try_into"))) (k 0)) (d (n "distant-net") (r "=0.19.0") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.23.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "grep") (r "^0.2.10") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.7") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "notify") (r "=5.0.0-pre.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.142") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.3") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "whoami") (r "^1.2.1") (d #t) (k 0)) (d (n "winsplit") (r "^0.1.0") (d #t) (k 0)))) (h "0g1ahyy3z03p51rmcp0bw37ddns4q986w9w8mldgz16bnkwiksqh") (s 2) (e (quote (("schemars" "dep:schemars" "distant-net/schemars"))))))

(define-public crate-distant-core-0.20.0-alpha.1 (c (n "distant-core") (v "0.20.0-alpha.1") (d (list (d (n "assert_fs") (r "^1.0.7") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("as_mut" "as_ref" "deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant" "try_into"))) (k 0)) (d (n "distant-net") (r "=0.20.0-alpha.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "grep") (r "^0.2.10") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "ignore") (r "^0.4.18") (d #t) (k 0)) (d (n "indoc") (r "^1.0.7") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "notify") (r "^5.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.142") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.3") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "whoami") (r "^1.2.1") (d #t) (k 0)) (d (n "winsplit") (r "^0.1.0") (d #t) (k 0)))) (h "1nsgalr79ddjifqzpfzhzc4cwwsgiw2ra1zy7lmpy7r0m8h2cgkk") (s 2) (e (quote (("schemars" "dep:schemars" "distant-net/schemars"))))))

(define-public crate-distant-core-0.20.0-alpha.2 (c (n "distant-core") (v "0.20.0-alpha.2") (d (list (d (n "assert_fs") (r "^1.0.9") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^4.0.26") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("as_mut" "as_ref" "deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant" "try_into"))) (k 0)) (d (n "distant-net") (r "=0.20.0-alpha.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "grep") (r "^0.2.10") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "ignore") (r "^0.4.18") (d #t) (k 0)) (d (n "indoc") (r "^1.0.7") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "notify") (r "^5.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.14.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "predicates") (r "^2.1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.88") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "tokio") (r "^1.22.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.4") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "whoami") (r "^1.2.3") (d #t) (k 0)) (d (n "winsplit") (r "^0.1.0") (d #t) (k 0)))) (h "17chnqfchq2n7zjqda6c5z7rpf9wihm6j13yzkkj63lj030b2jyb") (s 2) (e (quote (("schemars" "dep:schemars" "distant-net/schemars"))))))

(define-public crate-distant-core-0.20.0-alpha.3 (c (n "distant-core") (v "0.20.0-alpha.3") (d (list (d (n "assert_fs") (r "^1.0.9") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^4.0.26") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("as_mut" "as_ref" "deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant" "try_into"))) (k 0)) (d (n "distant-net") (r "=0.20.0-alpha.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "grep") (r "^0.2.10") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "ignore") (r "^0.4.18") (d #t) (k 0)) (d (n "indoc") (r "^1.0.7") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "notify") (r "^5.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.14.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "predicates") (r "^2.1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.88") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "tokio") (r "^1.22.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.4") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "whoami") (r "^1.2.3") (d #t) (k 0)) (d (n "winsplit") (r "^0.1.0") (d #t) (k 0)))) (h "1xrsnv9pl2g003cryrf57gprxv70hmxin4b6lz1gwzakjc9igikl") (s 2) (e (quote (("schemars" "dep:schemars" "distant-net/schemars"))))))

(define-public crate-distant-core-0.20.0-alpha.4 (c (n "distant-core") (v "0.20.0-alpha.4") (d (list (d (n "assert_fs") (r "^1.0.12") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bitflags") (r "^2.0.2") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "clap") (r "^4.2.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("as_mut" "as_ref" "deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant" "try_into"))) (k 0)) (d (n "distant-net") (r "=0.20.0-alpha.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "grep") (r "^0.2.11") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "portable-pty") (r "^0.8.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)) (d (n "whoami") (r "^1.4.0") (d #t) (k 0)) (d (n "winsplit") (r "^0.1.0") (d #t) (k 0)))) (h "0gbyfl58m3z64w1vgff2wcm4bjpyrca6y56rj8p5bjgscbq0vnzx") (s 2) (e (quote (("schemars" "dep:schemars" "distant-net/schemars"))))))

(define-public crate-distant-core-0.20.0-alpha.5 (c (n "distant-core") (v "0.20.0-alpha.5") (d (list (d (n "assert_fs") (r "^1.0.12") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bitflags") (r "^2.0.2") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("as_mut" "as_ref" "deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant" "try_into"))) (k 0)) (d (n "distant-net") (r "=0.20.0-alpha.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "grep") (r "^0.2.11") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "portable-pty") (r "^0.8.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)) (d (n "whoami") (r "^1.4.0") (d #t) (k 0)) (d (n "winsplit") (r "^0.1.0") (d #t) (k 0)))) (h "0c5ipp1cf576a4yl9ymldvvi4xxkshi3zmq23b2mqdkw0i0cdg6l") (s 2) (e (quote (("schemars" "dep:schemars" "distant-net/schemars"))))))

(define-public crate-distant-core-0.20.0-alpha.6 (c (n "distant-core") (v "0.20.0-alpha.6") (d (list (d (n "assert_fs") (r "^1.0.12") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bitflags") (r "^2.0.2") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("as_mut" "as_ref" "deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant" "try_into"))) (k 0)) (d (n "distant-net") (r "=0.20.0-alpha.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "grep") (r "^0.2.11") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "portable-pty") (r "^0.8.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "shell-words") (r "^1.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)) (d (n "whoami") (r "^1.4.0") (d #t) (k 0)) (d (n "winsplit") (r "^0.1.0") (d #t) (k 0)))) (h "1k63z2a8nic0impgz0l00hzpjnv0kdds2fxgw3330y43jr8z6jw0") (s 2) (e (quote (("schemars" "dep:schemars" "distant-net/schemars"))))))

(define-public crate-distant-core-0.20.0-alpha.7 (c (n "distant-core") (v "0.20.0-alpha.7") (d (list (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("as_mut" "as_ref" "deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant" "try_into"))) (k 0)) (d (n "distant-net") (r "=0.20.0-alpha.7") (d #t) (k 0)) (d (n "distant-protocol") (r "=0.20.0-alpha.7") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)))) (h "1mla4a08yb7b9fmlcx0q4dyfcx3yvkld82sqqmsr4shmga71ispr")))

(define-public crate-distant-core-0.20.0-alpha.8 (c (n "distant-core") (v "0.20.0-alpha.8") (d (list (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("as_mut" "as_ref" "deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant" "try_into"))) (k 0)) (d (n "distant-net") (r "=0.20.0-alpha.8") (d #t) (k 0)) (d (n "distant-protocol") (r "=0.20.0-alpha.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)))) (h "1r1v1awxlyczq1dqizy6gnn1975sfi9azw5dq889py3x056lg7r7")))

(define-public crate-distant-core-0.20.0-alpha.9 (c (n "distant-core") (v "0.20.0-alpha.9") (d (list (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("as_mut" "as_ref" "deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant" "try_into"))) (k 0)) (d (n "distant-net") (r "=0.20.0-alpha.9") (d #t) (k 0)) (d (n "distant-protocol") (r "=0.20.0-alpha.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)))) (h "1c6i6kjb5xigw53xlp6rinyhkwidbbzs7zclbp3v9myq263vz8p2")))

(define-public crate-distant-core-0.20.0-alpha.10 (c (n "distant-core") (v "0.20.0-alpha.10") (d (list (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("as_mut" "as_ref" "deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant" "try_into"))) (k 0)) (d (n "distant-net") (r "=0.20.0-alpha.10") (d #t) (k 0)) (d (n "distant-protocol") (r "=0.20.0-alpha.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)))) (h "0zvx5h9axfzbiwx0fbicd0fzcrr294x61fxs90n91xxzf2a4b6pc")))

(define-public crate-distant-core-0.20.0-alpha.11 (c (n "distant-core") (v "0.20.0-alpha.11") (d (list (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("as_mut" "as_ref" "deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant" "try_into"))) (k 0)) (d (n "distant-net") (r "=0.20.0-alpha.11") (d #t) (k 0)) (d (n "distant-protocol") (r "=0.20.0-alpha.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)))) (h "0w3klzfbzh9l0b247w0czq0dxrqqn1d3jhn31ibnfrr7wq9pz8dq")))

(define-public crate-distant-core-0.20.0-alpha.12 (c (n "distant-core") (v "0.20.0-alpha.12") (d (list (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("as_mut" "as_ref" "deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant" "try_into"))) (k 0)) (d (n "distant-net") (r "=0.20.0-alpha.12") (d #t) (k 0)) (d (n "distant-protocol") (r "=0.20.0-alpha.12") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)))) (h "0xp1g7fsn3hcvm16hmd5qk8gjmn5ssi6ic4mz8h5656lrl137jg6")))

(define-public crate-distant-core-0.20.0-alpha.13 (c (n "distant-core") (v "0.20.0-alpha.13") (d (list (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("as_mut" "as_ref" "deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant" "try_into"))) (k 0)) (d (n "distant-net") (r "=0.20.0-alpha.13") (d #t) (k 0)) (d (n "distant-protocol") (r "=0.20.0-alpha.13") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)))) (h "07aqvi43zk4dwbdsv3wpsgv655g1b9h4gxwi7cmqsmcslxwi2wkp")))

(define-public crate-distant-core-0.20.0 (c (n "distant-core") (v "0.20.0") (d (list (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("as_mut" "as_ref" "deref" "deref_mut" "display" "from" "error" "into" "into_iterator" "is_variant" "try_into"))) (k 0)) (d (n "distant-net") (r "=0.20.0") (d #t) (k 0)) (d (n "distant-protocol") (r "=0.20.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)))) (h "1pscfyz5c381kqqx5c111az1y7h558i3nl9a2dv638zx6x8d5232")))

