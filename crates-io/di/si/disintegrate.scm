(define-module (crates-io di si disintegrate) #:use-module (crates-io))

(define-public crate-disintegrate-0.1.0 (c (n "disintegrate") (v "0.1.0") (d (list (d (n "assert2") (r "^0.3.10") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "disintegrate-macros") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "disintegrate-serde") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)))) (h "0dzi0slb5gbc2fjgcfcijwji32dqma03ss88iq7z9zpvqcm64kq2") (f (quote (("serde-protobuf" "serde" "disintegrate-serde/protobuf") ("serde-prost" "serde" "disintegrate-serde/prost") ("serde-json" "serde" "disintegrate-serde/json") ("serde-avro" "serde" "disintegrate-serde/avro") ("serde" "disintegrate-serde") ("macros" "disintegrate-macros"))))))

(define-public crate-disintegrate-0.2.0 (c (n "disintegrate") (v "0.2.0") (d (list (d (n "assert2") (r "^0.3.10") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "disintegrate-macros") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "disintegrate-serde") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)))) (h "0lkx6mymhk58f4z6bz9d7ilqxqwmwb3fsw2hf5lg5cvii0wn5s8c") (f (quote (("serde-protobuf" "serde" "disintegrate-serde/protobuf") ("serde-prost" "serde" "disintegrate-serde/prost") ("serde-json" "serde" "disintegrate-serde/json") ("serde-avro" "serde" "disintegrate-serde/avro") ("serde" "disintegrate-serde") ("macros" "disintegrate-macros"))))))

(define-public crate-disintegrate-0.3.0 (c (n "disintegrate") (v "0.3.0") (d (list (d (n "assert2") (r "^0.3.10") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "disintegrate-macros") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "disintegrate-serde") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)))) (h "10ikaf0xv3f0qpxxps1554fzpykjli5249a6zn5bkcvdh1ngrv11") (f (quote (("serde-protobuf" "serde" "disintegrate-serde/protobuf") ("serde-prost" "serde" "disintegrate-serde/prost") ("serde-json" "serde" "disintegrate-serde/json") ("serde-avro" "serde" "disintegrate-serde/avro") ("serde" "disintegrate-serde") ("macros" "disintegrate-macros"))))))

(define-public crate-disintegrate-0.4.0 (c (n "disintegrate") (v "0.4.0") (d (list (d (n "assert2") (r "^0.3.10") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "disintegrate-macros") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "disintegrate-serde") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)))) (h "10k2b1zxcapfh4r9gj2013yws9dq8q1sq44ya1z77rnp6mpqsczj") (f (quote (("serde-protobuf" "serde" "disintegrate-serde/protobuf") ("serde-prost" "serde" "disintegrate-serde/prost") ("serde-json" "serde" "disintegrate-serde/json") ("serde-avro" "serde" "disintegrate-serde/avro") ("serde" "disintegrate-serde") ("macros" "disintegrate-macros"))))))

(define-public crate-disintegrate-0.5.0 (c (n "disintegrate") (v "0.5.0") (d (list (d (n "assert2") (r "^0.3.10") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "disintegrate-macros") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "disintegrate-serde") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "regex") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)))) (h "0v7nbkl26bry9rp53x894p36p15ln4klgj7yhd63dqcc0833c07i") (f (quote (("serde-protobuf" "serde" "disintegrate-serde/protobuf") ("serde-prost" "serde" "disintegrate-serde/prost") ("serde-json" "serde" "disintegrate-serde/json") ("serde-avro" "serde" "disintegrate-serde/avro") ("serde" "disintegrate-serde") ("macros" "disintegrate-macros"))))))

(define-public crate-disintegrate-0.5.1 (c (n "disintegrate") (v "0.5.1") (d (list (d (n "assert2") (r "^0.3.10") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "disintegrate-macros") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "disintegrate-serde") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "regex") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "19viqdsgv5y7hl0m1kba4kmncqr3nnh51430y6v9f8j3abr20v9h") (f (quote (("serde-protobuf" "serde" "disintegrate-serde/protobuf") ("serde-prost" "serde" "disintegrate-serde/prost") ("serde-json" "serde" "disintegrate-serde/json") ("serde-avro" "serde" "disintegrate-serde/avro") ("serde" "disintegrate-serde") ("macros" "disintegrate-macros"))))))

(define-public crate-disintegrate-0.6.0 (c (n "disintegrate") (v "0.6.0") (d (list (d (n "assert2") (r "^0.3.11") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "disintegrate-macros") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "disintegrate-serde") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "regex") (r "^1.9.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "032hjhq82v0zfjwyki5rl1pl1i6kghq6dimcdrb33sma1hgx09j3") (f (quote (("serde-protobuf" "serde" "disintegrate-serde/protobuf") ("serde-prost" "serde" "disintegrate-serde/prost") ("serde-json" "serde" "disintegrate-serde/json") ("serde-avro" "serde" "disintegrate-serde/avro") ("serde" "disintegrate-serde") ("macros" "disintegrate-macros"))))))

(define-public crate-disintegrate-0.7.0 (c (n "disintegrate") (v "0.7.0") (d (list (d (n "assert2") (r "^0.3.11") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "disintegrate-macros") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "disintegrate-serde") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 2)))) (h "0xv03w5zdgc77nkd3mzphg0nfh57slwgxiq6in7if3cszm074qpm") (f (quote (("serde-protobuf" "serde" "disintegrate-serde/protobuf") ("serde-prost" "serde" "disintegrate-serde/prost") ("serde-json" "serde" "disintegrate-serde/json") ("serde-avro" "serde" "disintegrate-serde/avro") ("serde" "disintegrate-serde") ("macros" "disintegrate-macros"))))))

(define-public crate-disintegrate-0.7.1 (c (n "disintegrate") (v "0.7.1") (d (list (d (n "assert2") (r "^0.3.11") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "disintegrate-macros") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "disintegrate-serde") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 2)))) (h "0kvxz19f2lzbp1jb8pa5rs29jrky327hs0g9n0kjx5f4myxndhyq") (f (quote (("serde-protobuf" "serde" "disintegrate-serde/protobuf") ("serde-prost" "serde" "disintegrate-serde/prost") ("serde-json" "serde" "disintegrate-serde/json") ("serde-avro" "serde" "disintegrate-serde/avro") ("serde" "disintegrate-serde") ("macros" "disintegrate-macros"))))))

(define-public crate-disintegrate-0.7.2 (c (n "disintegrate") (v "0.7.2") (d (list (d (n "assert2") (r "^0.3.11") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "disintegrate-macros") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "disintegrate-serde") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 2)))) (h "06a9hysx3xqnlpi7kjjdxilqhvd3qas06nxd3jkh5vx199aw54k5") (f (quote (("serde-protobuf" "serde" "disintegrate-serde/protobuf") ("serde-prost" "serde" "disintegrate-serde/prost") ("serde-json" "serde" "disintegrate-serde/json") ("serde-avro" "serde" "disintegrate-serde/avro") ("serde" "disintegrate-serde") ("macros" "disintegrate-macros"))))))

(define-public crate-disintegrate-0.7.3 (c (n "disintegrate") (v "0.7.3") (d (list (d (n "assert2") (r "^0.3.14") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "disintegrate-macros") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "disintegrate-serde") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mockall") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("v4"))) (d #t) (k 2)))) (h "0qycb35ap3smhfz1xhajmxy8gagbsy2j4asf43s6ky3c218nfk4a") (f (quote (("serde-protobuf" "serde" "disintegrate-serde/protobuf") ("serde-prost" "serde" "disintegrate-serde/prost") ("serde-json" "serde" "disintegrate-serde/json") ("serde-avro" "serde" "disintegrate-serde/avro") ("serde" "disintegrate-serde") ("macros" "disintegrate-macros"))))))

(define-public crate-disintegrate-0.8.0 (c (n "disintegrate") (v "0.8.0") (d (list (d (n "assert2") (r "^0.3.14") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "disintegrate-macros") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "disintegrate-serde") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mockall") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("v4"))) (d #t) (k 2)))) (h "15pfm9z1ka4hkp3jpx0vcsj3jwdxgmjjibzfia96n8zbrkn4iv31") (f (quote (("serde-protobuf" "serde" "disintegrate-serde/protobuf") ("serde-prost" "serde" "disintegrate-serde/prost") ("serde-json" "serde" "disintegrate-serde/json") ("serde-avro" "serde" "disintegrate-serde/avro") ("serde" "disintegrate-serde") ("macros" "disintegrate-macros"))))))

