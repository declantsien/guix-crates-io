(define-module (crates-io di ha dihardts_omicstools) #:use-module (crates-io))

(define-public crate-dihardts_omicstools-0.1.0 (c (n "dihardts_omicstools") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 1)) (d (n "askama") (r "^0.12.0") (d #t) (k 1)) (d (n "csv") (r "^1.2.2") (d #t) (k 1)))) (h "1d2qd3nd55y6fnknzxkcyk10c1al7mg17q5nffnsjidv60ggpmby")))

(define-public crate-dihardts_omicstools-1.0.1 (c (n "dihardts_omicstools") (v "1.0.1") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 1)) (d (n "askama") (r "^0.12.0") (d #t) (k 1)) (d (n "csv") (r "^1.2.2") (d #t) (k 1)))) (h "1a100crc3ayd0ir041a5n7mzacr9mq7qxzqla7x3d5n9fcv6jl66")))

(define-public crate-dihardts_omicstools-1.1.0 (c (n "dihardts_omicstools") (v "1.1.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 1)) (d (n "askama") (r "^0.12.0") (d #t) (k 1)) (d (n "csv") (r "^1.2.2") (d #t) (k 1)))) (h "17p0f2zmqk9hsh1ymy126674p2v6hqx13bbfr2dldrmaj9cxlhn2")))

(define-public crate-dihardts_omicstools-1.2.0 (c (n "dihardts_omicstools") (v "1.2.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 1)) (d (n "askama") (r "^0.12.0") (d #t) (k 1)) (d (n "csv") (r "^1.2.2") (d #t) (k 1)))) (h "192gmr8blmgc60s1nhfn1cg99819xwh7znqqrhyfk45wm5zqy940")))

(define-public crate-dihardts_omicstools-1.3.0 (c (n "dihardts_omicstools") (v "1.3.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 1)) (d (n "askama") (r "^0.12.0") (d #t) (k 1)) (d (n "csv") (r "^1.2.2") (d #t) (k 1)))) (h "1cq5x9hx0mr9cl7qa9sg7fkwim59hcr985lziqpha7xzk3kb1775")))

(define-public crate-dihardts_omicstools-1.4.0 (c (n "dihardts_omicstools") (v "1.4.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 1)) (d (n "askama") (r "^0.12.0") (d #t) (k 1)) (d (n "csv") (r "^1.2.2") (d #t) (k 1)))) (h "0rqd0njphkiwa3zchwavlq1dygb217cd2jf8xh3xiwb402afbzsy")))

(define-public crate-dihardts_omicstools-1.5.0 (c (n "dihardts_omicstools") (v "1.5.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 1)) (d (n "askama") (r "^0.12.0") (d #t) (k 1)) (d (n "csv") (r "^1.2.2") (d #t) (k 1)))) (h "07kr8flzbx4wr5gr5vwndw3b7a9f70khwwc52n1g92khqvqhdj2b")))

(define-public crate-dihardts_omicstools-1.6.0 (c (n "dihardts_omicstools") (v "1.6.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 1)) (d (n "askama") (r "^0.12.0") (d #t) (k 1)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "csv") (r "^1.2.2") (d #t) (k 1)) (d (n "flate2") (r "^1.0.28") (f (quote ("zlib"))) (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)))) (h "0fxn2l7k66gl20ipicqrynpyp2jgq6nkb88ibc13x392fwr0gs44")))

(define-public crate-dihardts_omicstools-1.7.0 (c (n "dihardts_omicstools") (v "1.7.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 1)) (d (n "askama") (r "^0.12.0") (d #t) (k 1)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "csv") (r "^1.2.2") (d #t) (k 1)) (d (n "flate2") (r "^1.0.28") (f (quote ("zlib"))) (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)))) (h "0h2rg44nwj4hlp6v6rz562812yybqjcbq4v94cqw3hxkn16fvkc7")))

(define-public crate-dihardts_omicstools-1.8.0 (c (n "dihardts_omicstools") (v "1.8.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 1)) (d (n "askama") (r "^0.12.0") (d #t) (k 1)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "csv") (r "^1.2.2") (d #t) (k 1)) (d (n "flate2") (r "^1.0.28") (f (quote ("zlib"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (d #t) (k 0)))) (h "0dzb3hycnfn5d5415zlmm2lqpnmkgxkgss7x5c1dq59gqmx798z8")))

(define-public crate-dihardts_omicstools-1.9.0 (c (n "dihardts_omicstools") (v "1.9.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 1)) (d (n "askama") (r "^0.12.0") (d #t) (k 1)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "csv") (r "^1.2.2") (d #t) (k 1)) (d (n "fallible-iterator") (r "^0.3.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.12.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (f (quote ("zlib"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (d #t) (k 0)))) (h "0bxdzvli4bzg5l5f6lgjpc75bwrv08hj5zfh9w1fqq1a7f2hsl48")))

(define-public crate-dihardts_omicstools-1.10.0 (c (n "dihardts_omicstools") (v "1.10.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 1)) (d (n "askama") (r "^0.12.0") (d #t) (k 1)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "csv") (r "^1.2.2") (d #t) (k 1)) (d (n "fallible-iterator") (r "^0.3.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.12.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (f (quote ("zlib"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (d #t) (k 0)))) (h "0wf5qmf4fqzg8mf7ddi626n350rcmgjsc4vx93ql104h97yam1jb")))

(define-public crate-dihardts_omicstools-1.11.0 (c (n "dihardts_omicstools") (v "1.11.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 1)) (d (n "askama") (r "^0.12.0") (d #t) (k 1)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "csv") (r "^1.2.2") (d #t) (k 1)) (d (n "fallible-iterator") (r "^0.3.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.12.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (f (quote ("zlib"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (d #t) (k 0)))) (h "0lr7n87zz3z870gzq5ylri55xdyhq34d9vac73b2qgplc4pn95qv")))

