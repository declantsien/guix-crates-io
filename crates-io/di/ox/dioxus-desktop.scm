(define-module (crates-io di ox dioxus-desktop) #:use-module (crates-io))

(define-public crate-dioxus-desktop-0.1.1 (c (n "dioxus-desktop") (v "0.1.1") (d (list (d (n "argh") (r "^0.1.4") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.1.3") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.1.4") (d #t) (k 0)) (d (n "dioxus-html") (r "^0.1.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.13") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("sync" "rt-multi-thread" "rt" "time"))) (o #t) (k 0)) (d (n "wry") (r "^0.12.2") (d #t) (k 0)))) (h "0pf9dyya76mddy0zfl75zrp8alzv7dvbafpramqfrya23qlkwa5j") (f (quote (("tokio_runtime" "tokio") ("default" "tokio_runtime"))))))

(define-public crate-dioxus-desktop-0.1.2 (c (n "dioxus-desktop") (v "0.1.2") (d (list (d (n "argh") (r "^0.1.4") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.1.3") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.1.4") (d #t) (k 0)) (d (n "dioxus-html") (r "^0.1.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.13") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("sync" "rt-multi-thread" "rt" "time"))) (o #t) (k 0)) (d (n "wry") (r "^0.12.2") (d #t) (k 0)))) (h "1jsfsv1h7cl57r1qvw6dzd0nzzd553s5axkymvv7f8749khaaii1") (f (quote (("tokio_runtime" "tokio") ("default" "tokio_runtime"))))))

(define-public crate-dioxus-desktop-0.1.3 (c (n "dioxus-desktop") (v "0.1.3") (d (list (d (n "argh") (r "^0.1.4") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.1.6") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.1.4") (d #t) (k 0)) (d (n "dioxus-html") (r "^0.1.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.13") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("sync" "rt-multi-thread" "rt" "time"))) (o #t) (k 0)) (d (n "wry") (r "^0.12.2") (d #t) (k 0)))) (h "0gd67d64b7j8v1gfj7a0gpx5awga2mzb2jvcm20r59394n17y1k2") (f (quote (("tokio_runtime" "tokio") ("default" "tokio_runtime"))))))

(define-public crate-dioxus-desktop-0.1.4 (c (n "dioxus-desktop") (v "0.1.4") (d (list (d (n "argh") (r "^0.1.4") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.1.6") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.1.4") (d #t) (k 0)) (d (n "dioxus-html") (r "^0.1.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.13") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("sync" "rt-multi-thread" "rt" "time"))) (o #t) (k 0)) (d (n "wry") (r "^0.12.2") (d #t) (k 0)))) (h "087hv24yzdn1r5mffcgxsb41b6fnh6mrs68ld4j77wbngv09ig75") (f (quote (("tokio_runtime" "tokio") ("default" "tokio_runtime"))))))

(define-public crate-dioxus-desktop-0.1.5 (c (n "dioxus-desktop") (v "0.1.5") (d (list (d (n "argh") (r "^0.1.4") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.1.7") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.1.6") (d #t) (k 0)) (d (n "dioxus-html") (r "^0.1.4") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.13") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("sync" "rt-multi-thread" "rt" "time"))) (o #t) (k 0)) (d (n "wry") (r "^0.12.2") (d #t) (k 0)))) (h "010fi8ymdnhd4hf9lb1cc1944wq4q87ala89mgm2pgjr5a0x64cq") (f (quote (("tokio_runtime" "tokio") ("default" "tokio_runtime"))))))

(define-public crate-dioxus-desktop-0.1.6 (c (n "dioxus-desktop") (v "0.1.6") (d (list (d (n "argh") (r "^0.1.4") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.1.9") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.1.7") (d #t) (k 0)) (d (n "dioxus-html") (r "^0.1.6") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "html-escape") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.13") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("sync" "rt-multi-thread" "rt" "time"))) (o #t) (k 0)) (d (n "webbrowser") (r "^0.5.5") (d #t) (k 0)) (d (n "wry") (r "^0.12.2") (d #t) (k 0)))) (h "076xgxqprkzm0vd2nix2kv7kp6fx8r7gdpfvlmfgaq3jsz5s4b6k") (f (quote (("tokio_runtime" "tokio") ("default" "tokio_runtime"))))))

(define-public crate-dioxus-desktop-0.2.0 (c (n "dioxus-desktop") (v "0.2.0") (d (list (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dioxus-core") (r "^0.2.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.1.7") (d #t) (k 2)) (d (n "dioxus-html") (r "^0.1.6") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-interpreter-js") (r "^0.1.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.21") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("sync" "rt-multi-thread" "rt" "time"))) (o #t) (k 0)) (d (n "webbrowser") (r "^0.6.0") (d #t) (k 0)) (d (n "wry") (r "^0.13.1") (d #t) (k 0)))) (h "08fsfdjncrglp5r23z0ivv4x8618zwx6f4gcc71d1wsb1mhz6hmm") (f (quote (("tray" "wry/tray") ("transparent" "wry/transparent") ("tokio_runtime" "tokio") ("fullscreen" "wry/fullscreen") ("devtool" "wry/devtool") ("default" "tokio_runtime") ("ayatana" "wry/ayatana"))))))

(define-public crate-dioxus-desktop-0.2.1 (c (n "dioxus-desktop") (v "0.2.1") (d (list (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dioxus-core") (r "^0.2.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.1.7") (d #t) (k 2)) (d (n "dioxus-html") (r "^0.2.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-interpreter-js") (r "^0.1.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.21") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("sync" "rt-multi-thread" "rt" "time"))) (o #t) (k 0)) (d (n "webbrowser") (r "^0.6.0") (d #t) (k 0)) (d (n "wry") (r "^0.13.1") (d #t) (k 0)))) (h "0akk4ck76wpkcby76862nl8a9b1fwpl0m9dssnmwh7q5lja7bp2y") (f (quote (("tray" "wry/tray") ("transparent" "wry/transparent") ("tokio_runtime" "tokio") ("fullscreen" "wry/fullscreen") ("devtool" "wry/devtool") ("default" "tokio_runtime") ("ayatana" "wry/ayatana"))))))

(define-public crate-dioxus-desktop-0.2.2 (c (n "dioxus-desktop") (v "0.2.2") (d (list (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dioxus-core") (r "^0.2.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.1.7") (d #t) (k 2)) (d (n "dioxus-html") (r "^0.2.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-interpreter-js") (r "^0.2.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.21") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("sync" "rt-multi-thread" "rt" "time"))) (o #t) (k 0)) (d (n "webbrowser") (r "^0.6.0") (d #t) (k 0)) (d (n "wry") (r "^0.13.1") (d #t) (k 0)))) (h "181g8xya1j7250gxm97360agx8yn4rplymfjv8rf6lmb870n9qa4") (f (quote (("tray" "wry/tray") ("transparent" "wry/transparent") ("tokio_runtime" "tokio") ("fullscreen" "wry/fullscreen") ("devtool" "wry/devtool") ("default" "tokio_runtime") ("ayatana" "wry/ayatana"))))))

(define-public crate-dioxus-desktop-0.2.3 (c (n "dioxus-desktop") (v "0.2.3") (d (list (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dioxus-core") (r "^0.2.1") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-html") (r "^0.2.1") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-interpreter-js") (r "^0.2.1") (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.21") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("sync" "rt-multi-thread" "rt" "time"))) (o #t) (k 0)) (d (n "webbrowser") (r "^0.6.0") (d #t) (k 0)) (d (n "wry") (r "^0.13.1") (d #t) (k 0)))) (h "0088ixyz701ysbc7i8y12ng5sn6fa7mcy1859xwqxplgm30n8x18") (f (quote (("tray" "wry/tray") ("transparent" "wry/transparent") ("tokio_runtime" "tokio") ("fullscreen" "wry/fullscreen") ("devtool" "wry/devtool") ("default" "tokio_runtime") ("ayatana" "wry/ayatana"))))))

(define-public crate-dioxus-desktop-0.3.0 (c (n "dioxus-desktop") (v "0.3.0") (d (list (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dioxus-core") (r "^0.3.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-html") (r "^0.3.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-interpreter-js") (r "^0.3.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.25") (d #t) (k 0)) (d (n "infer") (r "^0.11.0") (d #t) (k 0)) (d (n "interprocess") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("sync" "rt-multi-thread" "rt" "time" "macros"))) (o #t) (k 0)) (d (n "webbrowser") (r "^0.8.0") (d #t) (k 0)) (d (n "wry") (r "^0.23.4") (d #t) (k 0)))) (h "18jzkq8in4ghd2lj9ldvi9n2z1a78wnc58yk2nmlmkahdipmx6ma") (f (quote (("tray" "wry/tray") ("transparent" "wry/transparent") ("tokio_runtime" "tokio") ("hot-reload" "interprocess") ("fullscreen" "wry/fullscreen") ("default" "tokio_runtime" "hot-reload"))))))

(define-public crate-dioxus-desktop-0.4.0 (c (n "dioxus-desktop") (v "0.4.0") (d (list (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dioxus") (r "^0.4.0") (d #t) (k 2)) (d (n "dioxus-core") (r "^0.4.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.4.0") (d #t) (k 2)) (d (n "dioxus-hooks") (r "^0.4.0") (d #t) (k 2)) (d (n "dioxus-hot-reload") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "dioxus-html") (r "^0.4.0") (f (quote ("serialize" "native-bind"))) (d #t) (k 0)) (d (n "dioxus-interpreter-js") (r "^0.4.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 2)) (d (n "futures-channel") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "infer") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "rfd") (r "^0.11.3") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"macos\", target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "scraper") (r "^0.16.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("sync" "rt-multi-thread" "rt" "time" "macros" "fs"))) (o #t) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "webbrowser") (r "^0.8.0") (d #t) (k 0)) (d (n "wry") (r "^0.28.0") (d #t) (k 0)))) (h "1jdmxiblms3a5qyhhwrad12dcfbsln6kygaf13m2m7zdnrrngzcw") (f (quote (("tray" "wry/tray") ("transparent" "wry/transparent") ("tokio_runtime" "tokio") ("hot-reload" "dioxus-hot-reload") ("fullscreen" "wry/fullscreen") ("default" "tokio_runtime" "hot-reload"))))))

(define-public crate-dioxus-desktop-0.4.3 (c (n "dioxus-desktop") (v "0.4.3") (d (list (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dioxus-core") (r "^0.4.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-hot-reload") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "dioxus-html") (r "^0.4.0") (f (quote ("serialize" "native-bind"))) (d #t) (k 0)) (d (n "dioxus-interpreter-js") (r "^0.4.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "infer") (r "^0.11.0") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "rfd") (r "^0.11.3") (d #t) (t "cfg(any(target_os = \"windows\",target_os = \"macos\",target_os = \"linux\",target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("sync" "rt-multi-thread" "rt" "time" "macros" "fs"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "webbrowser") (r "^0.8.0") (d #t) (k 0)) (d (n "wry") (r "^0.28.0") (f (quote ("protocol" "file-drop"))) (k 0)))) (h "1jyi80xpvzq67vwvy4zkxj4lr46zhlwyrmvk7ss5fhg6ysqs0gmz") (f (quote (("tray" "wry/tray") ("transparent" "wry/transparent") ("tokio_runtime" "tokio") ("hot-reload" "dioxus-hot-reload") ("fullscreen" "wry/fullscreen") ("dox" "wry/dox") ("devtools" "wry/devtools") ("default" "tokio_runtime" "hot-reload" "wry/objc-exception"))))))

(define-public crate-dioxus-desktop-0.5.0-alpha.0 (c (n "dioxus-desktop") (v "0.5.0-alpha.0") (d (list (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "dioxus-cli-config") (r "^0.5.0-alpha.0") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.5.0-alpha.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-hooks") (r "^0.5.0-alpha.0") (d #t) (k 0)) (d (n "dioxus-hot-reload") (r "^0.5.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "dioxus-html") (r "^0.5.0-alpha.0") (f (quote ("serialize" "native-bind" "mounted" "eval"))) (d #t) (k 0)) (d (n "dioxus-interpreter-js") (r "^0.5.0-alpha.0") (f (quote ("binary-protocol"))) (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "generational-box") (r "^0.5.0-alpha.0") (d #t) (k 0)) (d (n "global-hotkey") (r "^0.4.1") (d #t) (t "cfg(any(target_os = \"windows\",target_os = \"macos\",target_os = \"linux\",target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "infer") (r "^0.11.0") (d #t) (k 0)) (d (n "muda") (r "^0.11.3") (d #t) (t "cfg(any(target_os = \"windows\",target_os = \"macos\",target_os = \"linux\",target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "rfd") (r "^0.12") (d #t) (t "cfg(any(target_os = \"windows\",target_os = \"macos\",target_os = \"linux\",target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tao") (r "^0.24.0") (f (quote ("rwh_05"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("sync" "rt-multi-thread" "rt" "time" "macros" "fs"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "webbrowser") (r "^0.8.0") (d #t) (k 0)) (d (n "wry") (r "^0.35.0") (f (quote ("os-webview" "protocol" "file-drop"))) (k 0)))) (h "0nwllgjkpdxnb42ny801qndhak4nr9jxswh08nm49g0nwwmcc090") (f (quote (("transparent" "wry/transparent") ("tokio_runtime" "tokio") ("hot-reload" "dioxus-hot-reload") ("gnu") ("fullscreen" "wry/fullscreen") ("devtools" "wry/devtools") ("default" "tokio_runtime" "hot-reload" "wry/objc-exception"))))))

(define-public crate-dioxus-desktop-0.5.0-alpha.1 (c (n "dioxus-desktop") (v "0.5.0-alpha.1") (d (list (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dioxus-cli-config") (r "^0.5.0-alpha.0") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.5.0-alpha.1") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-hooks") (r "^0.5.0-alpha.0") (d #t) (k 0)) (d (n "dioxus-hot-reload") (r "^0.5.0-alpha.0") (o #t) (d #t) (t "cfg(any(target_os = \"windows\",target_os = \"macos\",target_os = \"linux\",target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "dioxus-html") (r "^0.5.0-alpha.0") (f (quote ("serialize" "native-bind" "mounted" "eval"))) (d #t) (k 0)) (d (n "dioxus-interpreter-js") (r "^0.5.0-alpha.0") (f (quote ("binary-protocol"))) (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "generational-box") (r "^0.5.0-alpha.0") (d #t) (k 0)) (d (n "global-hotkey") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"windows\",target_os = \"macos\",target_os = \"linux\",target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "infer") (r "^0.11.0") (d #t) (k 0)) (d (n "muda") (r "^0.11.3") (d #t) (t "cfg(any(target_os = \"windows\",target_os = \"macos\",target_os = \"linux\",target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "rfd") (r "^0.12") (d #t) (t "cfg(any(target_os = \"windows\",target_os = \"macos\",target_os = \"linux\",target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tao") (r "^0.26.1") (f (quote ("rwh_05"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("sync" "rt-multi-thread" "rt" "time" "macros" "fs"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "webbrowser") (r "^0.8.0") (d #t) (k 0)) (d (n "wry") (r "^0.37.0") (f (quote ("os-webview" "protocol" "file-drop"))) (k 0)))) (h "1vcsw08aw71yzdbnw0in68cd6n2sdrh5v6kl4n6qkqzyjhk3xxkk") (f (quote (("transparent" "wry/transparent") ("tokio_runtime" "tokio") ("hot-reload" "dioxus-hot-reload") ("gnu") ("fullscreen" "wry/fullscreen") ("devtools" "wry/devtools") ("default" "tokio_runtime" "wry/objc-exception" "hot-reload"))))))

(define-public crate-dioxus-desktop-0.5.0-alpha.2 (c (n "dioxus-desktop") (v "0.5.0-alpha.2") (d (list (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dioxus-cli-config") (r "^0.5.0-alpha.2") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.5.0-alpha.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-hooks") (r "^0.5.0-alpha.2") (d #t) (k 0)) (d (n "dioxus-hot-reload") (r "^0.5.0-alpha.2") (o #t) (d #t) (t "cfg(any(target_os = \"windows\",target_os = \"macos\",target_os = \"linux\",target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "dioxus-html") (r "^0.5.0-alpha.2") (f (quote ("serialize" "native-bind" "mounted" "eval"))) (d #t) (k 0)) (d (n "dioxus-interpreter-js") (r "^0.5.0-alpha.2") (f (quote ("binary-protocol"))) (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "generational-box") (r "^0.5.0-alpha.2") (d #t) (k 0)) (d (n "global-hotkey") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"windows\",target_os = \"macos\",target_os = \"linux\",target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "infer") (r "^0.11.0") (d #t) (k 0)) (d (n "muda") (r "^0.11.3") (d #t) (t "cfg(any(target_os = \"windows\",target_os = \"macos\",target_os = \"linux\",target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "rfd") (r "^0.12") (d #t) (t "cfg(any(target_os = \"windows\",target_os = \"macos\",target_os = \"linux\",target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tao") (r "^0.26.1") (f (quote ("rwh_05"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("sync" "rt-multi-thread" "rt" "time" "macros" "fs"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "webbrowser") (r "^0.8.0") (d #t) (k 0)) (d (n "wry") (r "^0.37.0") (f (quote ("os-webview" "protocol" "file-drop"))) (k 0)))) (h "134i25xzyzbp4by07q1q1w6mjn6q3ay29lln5qjn1czzrafldgd5") (f (quote (("transparent" "wry/transparent") ("tokio_runtime" "tokio") ("hot-reload" "dioxus-hot-reload") ("gnu") ("fullscreen" "wry/fullscreen") ("devtools" "wry/devtools") ("default" "tokio_runtime" "wry/objc-exception" "hot-reload"))))))

(define-public crate-dioxus-desktop-0.5.0 (c (n "dioxus-desktop") (v "0.5.0") (d (list (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dioxus-cli-config") (r "^0.5.0") (f (quote ("read-config"))) (k 0)) (d (n "dioxus-core") (r "^0.5.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-hooks") (r "^0.5.0") (d #t) (k 0)) (d (n "dioxus-hot-reload") (r "^0.5.0") (o #t) (d #t) (t "cfg(any(target_os = \"windows\",target_os = \"macos\",target_os = \"linux\",target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "dioxus-html") (r "^0.5.0") (f (quote ("serialize" "native-bind" "mounted" "eval"))) (d #t) (k 0)) (d (n "dioxus-interpreter-js") (r "^0.5.0") (f (quote ("binary-protocol"))) (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "generational-box") (r "^0.5.0") (d #t) (k 0)) (d (n "global-hotkey") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"windows\",target_os = \"macos\",target_os = \"linux\",target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "infer") (r "^0.11.0") (d #t) (k 0)) (d (n "muda") (r "^0.11.3") (d #t) (t "cfg(any(target_os = \"windows\",target_os = \"macos\",target_os = \"linux\",target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "rfd") (r "^0.12") (d #t) (t "cfg(any(target_os = \"windows\",target_os = \"macos\",target_os = \"linux\",target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.17") (d #t) (t "cfg(unix)") (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tao") (r "^0.26.1") (f (quote ("rwh_05"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("sync" "rt-multi-thread" "rt" "time" "macros" "fs"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "webbrowser") (r "^0.8.0") (d #t) (k 0)) (d (n "wry") (r "^0.37.0") (f (quote ("os-webview" "protocol" "file-drop"))) (k 0)))) (h "1r99rvpl9rfmz4wihm6cxdr4ngxlin9mx36b44g9v1akxbg4gbla") (f (quote (("transparent" "wry/transparent") ("tokio_runtime" "tokio") ("hot-reload" "dioxus-hot-reload") ("gnu") ("fullscreen" "wry/fullscreen") ("devtools" "wry/devtools") ("default" "tokio_runtime" "wry/objc-exception" "hot-reload"))))))

(define-public crate-dioxus-desktop-0.5.1 (c (n "dioxus-desktop") (v "0.5.1") (d (list (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dioxus-cli-config") (r "^0.5.0") (f (quote ("read-config"))) (k 0)) (d (n "dioxus-core") (r "^0.5.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-hooks") (r "^0.5.0") (d #t) (k 0)) (d (n "dioxus-hot-reload") (r "^0.5.0") (o #t) (d #t) (t "cfg(any(target_os = \"windows\",target_os = \"macos\",target_os = \"linux\",target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "dioxus-html") (r "^0.5.0") (f (quote ("serialize" "native-bind" "mounted" "eval"))) (d #t) (k 0)) (d (n "dioxus-interpreter-js") (r "^0.5.0") (f (quote ("binary-protocol"))) (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "generational-box") (r "^0.5.0") (d #t) (k 0)) (d (n "global-hotkey") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"windows\",target_os = \"macos\",target_os = \"linux\",target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "infer") (r "^0.11.0") (d #t) (k 0)) (d (n "muda") (r "^0.11.3") (d #t) (t "cfg(any(target_os = \"windows\",target_os = \"macos\",target_os = \"linux\",target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "rfd") (r "^0.14") (d #t) (t "cfg(any(target_os = \"windows\",target_os = \"macos\",target_os = \"linux\",target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.17") (d #t) (t "cfg(unix)") (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "tao") (r "^0.26.1") (f (quote ("rwh_05"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("sync" "rt-multi-thread" "rt" "time" "macros" "fs"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "webbrowser") (r "^0.8.0") (d #t) (k 0)) (d (n "wry") (r "^0.37.0") (f (quote ("os-webview" "protocol" "file-drop"))) (k 0)))) (h "15n2imaj56mha7r2r29qqp629r42gq1xhiyrap91s3lmpq450pyq") (f (quote (("transparent" "wry/transparent") ("tokio_runtime" "tokio") ("hot-reload" "dioxus-hot-reload") ("gnu") ("fullscreen" "wry/fullscreen") ("devtools" "wry/devtools") ("default" "tokio_runtime" "wry/objc-exception" "hot-reload" "devtools"))))))

