(define-module (crates-io di ox dioxus-ssr) #:use-module (crates-io))

(define-public crate-dioxus-ssr-0.1.0 (c (n "dioxus-ssr") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "argh") (r "^0.1.4") (d #t) (k 2)) (d (n "dioxus-core") (r "^0.1.3") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (f (quote ("colored"))) (d #t) (k 2)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "log") (r "^0.4.13") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 2)))) (h "1h8jripvlj1f0nbfjnd25z4rpsd07ygx1gc98hgq11awrvkw72pc")))

(define-public crate-dioxus-ssr-0.1.1 (c (n "dioxus-ssr") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "argh") (r "^0.1.4") (d #t) (k 2)) (d (n "dioxus-core") (r "^0.1.3") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (f (quote ("colored"))) (d #t) (k 2)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "log") (r "^0.4.13") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 2)))) (h "10g4kxm03bj583hvvfwllw9qklhqigixy077lxfqp2d6137i6603")))

(define-public crate-dioxus-ssr-0.1.2 (c (n "dioxus-ssr") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "argh") (r "^0.1.4") (d #t) (k 2)) (d (n "dioxus-core") (r "^0.1.7") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (f (quote ("colored"))) (d #t) (k 2)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "log") (r "^0.4.13") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 2)))) (h "1w5cvaqsmlh2bgg28q47sc7jm3r6j4pgx9rlzrr4l4sr22h48c9g")))

(define-public crate-dioxus-ssr-0.1.3 (c (n "dioxus-ssr") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "argh") (r "^0.1.4") (d #t) (k 2)) (d (n "dioxus-core") (r "^0.1.8") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (f (quote ("colored"))) (d #t) (k 2)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "log") (r "^0.4.13") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 2)))) (h "16khyl2syh1l8pjbfa0vam7lpa0h4br5zpbavx25sknqjcfgd5nh")))

(define-public crate-dioxus-ssr-0.2.0 (c (n "dioxus-ssr") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "argh") (r "^0.1.4") (d #t) (k 2)) (d (n "dioxus-core") (r "^0.2.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (f (quote ("colored"))) (d #t) (k 2)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "log") (r "^0.4.13") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 2)))) (h "1g5d22gs6xwv39alrpkiislqar1w8czxlb2hq00by3l6h20yv7la")))

(define-public crate-dioxus-ssr-0.2.1 (c (n "dioxus-ssr") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "argh") (r "^0.1.4") (d #t) (k 2)) (d (n "dioxus-core") (r "^0.2.1") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (f (quote ("colored"))) (d #t) (k 2)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "log") (r "^0.4.13") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 2)))) (h "0vmlfn5329rxzx24xxbcky8rh7i04zk3n601dz1hc0zflbqhd9si")))

(define-public crate-dioxus-ssr-0.3.0 (c (n "dioxus-ssr") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "argh") (r "^0.1.4") (d #t) (k 2)) (d (n "dioxus") (r "^0.3.0") (d #t) (k 2)) (d (n "dioxus-core") (r "^0.3.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (f (quote ("colored"))) (d #t) (k 2)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "log") (r "^0.4.13") (d #t) (k 2)) (d (n "serde") (r "^1.0.120") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 2)))) (h "10d3hps7f9mll2nvih4n7k2wiqxhbnah78lfxy2w5ccm12a1aryn")))

(define-public crate-dioxus-ssr-0.4.0 (c (n "dioxus-ssr") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "argh") (r "^0.1.4") (d #t) (k 2)) (d (n "askama_escape") (r "^0.10.3") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.4.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (f (quote ("colored"))) (d #t) (k 2)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.13") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 2)) (d (n "lru") (r "^0.10.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 2)) (d (n "tokio") (r "^1.28") (f (quote ("full"))) (d #t) (k 0)))) (h "19fjyrva7w3ja3aliqyjdhj653p50wc86m9nqlv7w4mzxrisfp8h")))

(define-public crate-dioxus-ssr-0.4.3 (c (n "dioxus-ssr") (v "0.4.3") (d (list (d (n "askama_escape") (r "^0.10.3") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.4.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "lru") (r "^0.10.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0xgpcr3k2115b285qm6n9w0dh7zqa9yicqv2zjmdkl1cxdph0b6k") (f (quote (("default" "incremental")))) (s 2) (e (quote (("incremental" "dep:tokio"))))))

(define-public crate-dioxus-ssr-0.5.0-alpha.0 (c (n "dioxus-ssr") (v "0.5.0-alpha.0") (d (list (d (n "askama_escape") (r "^0.10.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "chrono") (r "^0.4.34") (o #t) (d #t) (k 0)) (d (n "dioxus-core") (r "^0.5.0-alpha.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-html") (r "^0.5.0-alpha.0") (f (quote ("eval"))) (d #t) (k 0)) (d (n "generational-box") (r "^0.5.0-alpha.0") (d #t) (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("fs" "io-util"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("io-util"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0zrcd473q8kxbcm282mvyphrl2cy71hjs03n4r8x7ll5mq5q4ivh") (f (quote (("default")))) (s 2) (e (quote (("incremental" "dep:tokio" "chrono"))))))

(define-public crate-dioxus-ssr-0.5.0-alpha.1 (c (n "dioxus-ssr") (v "0.5.0-alpha.1") (d (list (d (n "askama_escape") (r "^0.10.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "chrono") (r "^0.4.34") (o #t) (d #t) (k 0)) (d (n "dioxus-core") (r "^0.5.0-alpha.1") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-html") (r "^0.5.0-alpha.1") (f (quote ("eval"))) (d #t) (k 0)) (d (n "generational-box") (r "^0.5.0-alpha.1") (d #t) (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("fs" "io-util"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("io-util"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0p2w4qvs37vpkgphdkh8ppfqd3yq61b4sv2b4i6grmzchlz4f3ly") (f (quote (("default")))) (s 2) (e (quote (("incremental" "dep:tokio" "chrono"))))))

(define-public crate-dioxus-ssr-0.5.0-alpha.2 (c (n "dioxus-ssr") (v "0.5.0-alpha.2") (d (list (d (n "askama_escape") (r "^0.10.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "chrono") (r "^0.4.34") (o #t) (d #t) (k 0)) (d (n "dioxus-core") (r "^0.5.0-alpha.2") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-html") (r "^0.5.0-alpha.2") (f (quote ("eval"))) (d #t) (k 0)) (d (n "generational-box") (r "^0.5.0-alpha.2") (d #t) (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("fs" "io-util"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("io-util"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0pxmizh47100pw04h3mcf77h6mbc545gj9261dmn8pa5nk5g9mbl") (f (quote (("default")))) (s 2) (e (quote (("incremental" "dep:tokio" "chrono"))))))

(define-public crate-dioxus-ssr-0.5.0 (c (n "dioxus-ssr") (v "0.5.0") (d (list (d (n "askama_escape") (r "^0.10.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "chrono") (r "^0.4.34") (o #t) (d #t) (k 0)) (d (n "dioxus-core") (r "^0.5.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-html") (r "^0.5.0") (f (quote ("eval"))) (d #t) (k 0)) (d (n "generational-box") (r "^0.5.0") (d #t) (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("fs" "io-util"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("io-util"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0r6h6bm77yc6hbk0mcx9fr2azs6gxx5nx0s6lniz71ppll2qgwg7") (f (quote (("default")))) (s 2) (e (quote (("incremental" "dep:tokio" "chrono"))))))

(define-public crate-dioxus-ssr-0.5.1 (c (n "dioxus-ssr") (v "0.5.1") (d (list (d (n "askama_escape") (r "^0.10.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "chrono") (r "^0.4.34") (o #t) (d #t) (k 0)) (d (n "dioxus-core") (r "^0.5.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "dioxus-html") (r "^0.5.0") (f (quote ("eval"))) (d #t) (k 0)) (d (n "generational-box") (r "^0.5.0") (d #t) (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 0)) (d (n "lru") (r "^0.12.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("fs" "io-util"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("io-util"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0777lhs37lhcjbi17899vywh614ibi83jjl13nk59qf7ncb8xfih") (f (quote (("default")))) (s 2) (e (quote (("incremental" "dep:tokio" "chrono"))))))

