(define-module (crates-io di sa disarray-core) #:use-module (crates-io))

(define-public crate-disarray-core-0.1.1 (c (n "disarray-core") (v "0.1.1") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "disaronno") (r "^0.1.5") (f (quote ("macros"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)))) (h "0dmhwkqj3hy75srh8ib3g86h2nybrnsz0sh7gnxdglm3y80alsw9") (f (quote (("default"))))))

(define-public crate-disarray-core-0.1.4 (c (n "disarray-core") (v "0.1.4") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.137") (f (quote ("derive"))) (d #t) (k 0)))) (h "10avab6ak1m830v91mly5vj1q4ck08bd9zz6zvhqsmcwkl536h42")))

(define-public crate-disarray-core-0.1.5 (c (n "disarray-core") (v "0.1.5") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.46.1") (f (quote ("dns-tokio"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)))) (h "1nrwsmjh9r510c4wnab464rk8zrrncnvhz2h0j5f752g5x3jmmm7")))

(define-public crate-disarray-core-0.1.6 (c (n "disarray-core") (v "0.1.6") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.46.1") (f (quote ("dns-tokio"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)))) (h "1v7hpa7g1m0szdkp29rcwa02jm7a7kxglbyp2r71yg3lb5030hmp")))

(define-public crate-disarray-core-0.1.7 (c (n "disarray-core") (v "0.1.7") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.46.1") (f (quote ("dns-tokio"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)))) (h "0sshdphj06nn1n064ssai3c6drp356lp4bc4zffxand29r325v7q")))

(define-public crate-disarray-core-0.1.8 (c (n "disarray-core") (v "0.1.8") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.46.1") (f (quote ("dns-tokio" "tcp-tokio" "wasm-bindgen"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)))) (h "1m60r9r85jl1ms82yi52j1k8xkgzvjb9bdzijdnp9dq74pnbrm70")))

(define-public crate-disarray-core-0.1.9 (c (n "disarray-core") (v "0.1.9") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.46.1") (f (quote ("dns-tokio" "tcp-tokio" "wasm-bindgen"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)))) (h "10k9h6a3v8cyly108qnh7dzcnx8ihr1vd8avj5n1ldazqnbvkjca")))

(define-public crate-disarray-core-0.1.10 (c (n "disarray-core") (v "0.1.10") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "scsys") (r "^0.1.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "113k2dvqxq1p086a6p2kv9kaca1fr7cj1bh61wh3g2anhk9x962q")))

(define-public crate-disarray-core-0.1.11 (c (n "disarray-core") (v "0.1.11") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "multihash") (r "^0.16.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "scsys") (r "^0.1.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "1z90f28w06sffw35r98ldab376w62l8i2zc7rljdzy8rysgbhvyg")))

(define-public crate-disarray-core-0.1.12 (c (n "disarray-core") (v "0.1.12") (d (list (d (n "bson") (r "^2.4.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (d #t) (k 0)) (d (n "config") (r "^0.13.2") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 0)) (d (n "scsys") (r "^0.1.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "sha2") (r "^0.10.5") (d #t) (k 0)))) (h "1gf4m1ijqnljjj0zmhjis4gpq4zhk49l373ysw097nmpv2xsp9cw")))

(define-public crate-disarray-core-0.1.20 (c (n "disarray-core") (v "0.1.20") (d (list (d (n "scsys") (r "^0.1.26") (f (quote ("full"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)))) (h "08y2zlxjlnxvr2xd2qg6lpvxjav6v3hrf4pyrmxc8lsp20fmfwin") (f (quote (("full") ("default"))))))

