(define-module (crates-io di sa disarray) #:use-module (crates-io))

(define-public crate-disarray-0.1.2 (c (n "disarray") (v "0.1.2") (d (list (d (n "acme") (r "^0.1.25") (f (quote ("full"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.2.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "contained") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "libp2p") (r "^0.45.1") (f (quote ("dns-tokio" "tcp-tokio"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 0)))) (h "0ikjbm3m5b6d9qifkqawms5l55g8jq546c9mb88lnc5sazd7hpnh") (f (quote (("default" "core") ("core" "contained"))))))

(define-public crate-disarray-0.1.3 (c (n "disarray") (v "0.1.3") (d (list (d (n "acme") (r "^0.1.25") (f (quote ("full"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.2.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "contained") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "libp2p") (r "^0.45.1") (f (quote ("dns-tokio" "tcp-tokio"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 0)))) (h "07ihfhixjfpcvc78akgfrnba5kznxg8pxfib4g2g4cvfxy1r7lr8") (f (quote (("default" "core") ("core" "contained"))))))

(define-public crate-disarray-0.1.4 (c (n "disarray") (v "0.1.4") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "disarray-core") (r ">=0.1.0") (o #t) (d #t) (k 0)) (d (n "disarray-derive") (r ">=0.1.0") (o #t) (d #t) (k 0)) (d (n "disarray-macros") (r ">=0.1.0") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.137") (f (quote ("derive"))) (d #t) (k 0)))) (h "0dv3px3yhifdx988hq94zbkxrbwqdggpvyr84kc19jx42iq5cfrk") (f (quote (("macros" "disarray-macros") ("full" "default" "derive" "macros") ("external" "bson/default" "bson/chrono-0_4" "bson/serde_with" "serde/derive") ("derive" "disarray-derive") ("default" "core" "external") ("core" "disarray-core"))))))

(define-public crate-disarray-0.1.5 (c (n "disarray") (v "0.1.5") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "disarray-core") (r ">=0.1.0") (o #t) (d #t) (k 0)) (d (n "disarray-derive") (r ">=0.1.0") (o #t) (d #t) (k 0)) (d (n "disarray-macros") (r ">=0.1.0") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.137") (f (quote ("derive"))) (d #t) (k 0)))) (h "0p0h8j2802j10j33dqbavxk1i96pdc0lg74y8vqli9iy3wr3w46z") (f (quote (("macros" "disarray-macros") ("full" "default" "derive" "macros") ("external" "bson/default" "bson/chrono-0_4" "bson/serde_with" "serde/derive") ("derive" "disarray-derive") ("default" "core" "external") ("core" "disarray-core"))))))

(define-public crate-disarray-0.1.6 (c (n "disarray") (v "0.1.6") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "disarray-core") (r ">=0.1.0") (o #t) (d #t) (k 0)) (d (n "disarray-derive") (r ">=0.1.0") (o #t) (d #t) (k 0)) (d (n "disarray-macros") (r ">=0.1.0") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.137") (f (quote ("derive"))) (d #t) (k 0)))) (h "1z6ci26fg4xi0zlpil2i983hapamibbbdfazcfgchbqrfk6rb6rg") (f (quote (("macros" "disarray-macros") ("full" "default" "derive" "macros") ("external" "bson/default" "bson/chrono-0_4" "bson/serde_with" "serde/derive") ("derive" "disarray-derive") ("default" "core" "external") ("core" "disarray-core"))))))

(define-public crate-disarray-0.1.7 (c (n "disarray") (v "0.1.7") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "disarray-core") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "disarray-derive") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "disarray-macros") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)))) (h "0v18wsqlgsgpj48njq4hyzz7aypxrw0xsg8dscwxnahrk16izr74") (f (quote (("macros" "disarray-macros") ("full" "default" "derive" "macros") ("external" "bson/default" "bson/chrono-0_4" "bson/serde_with" "serde/derive") ("derive" "disarray-derive") ("default" "core" "external") ("core" "disarray-core"))))))

(define-public crate-disarray-0.1.8 (c (n "disarray") (v "0.1.8") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "disarray-core") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "disarray-derive") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "disarray-macros") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "090j741zb3y6awkf78iff2vkhwpjkwghgbm59b97l3w9dy73r2ag") (f (quote (("macros" "disarray-macros") ("full" "default" "derive" "macros") ("external" "bson/default" "bson/chrono-0_4" "bson/serde_with" "serde/derive") ("derive" "disarray-derive") ("default" "core" "external") ("core" "disarray-core"))))))

(define-public crate-disarray-0.1.9 (c (n "disarray") (v "0.1.9") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "disarray-core") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "disarray-derive") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "disarray-macros") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "1yddr86fpgy7f3dhf2qx9zbabprkybmrgqk9jshpsmir5wzhjnld") (f (quote (("macros" "disarray-macros") ("full" "default" "derive" "macros") ("external" "bson/default" "bson/chrono-0_4" "bson/serde_with" "serde/derive") ("derive" "disarray-derive") ("default" "core" "external") ("core" "disarray-core"))))))

(define-public crate-disarray-0.1.10 (c (n "disarray") (v "0.1.10") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "disarray-derive") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "disarray-macros") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.20") (f (quote ("full"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.46.1") (f (quote ("dns-tokio" "tcp-tokio"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (d #t) (k 0)))) (h "0lgwnnkr8vj0azak1mshj12rirjszy9lwc8dhjw1gdgf40rlzbpy") (f (quote (("macros" "disarray-macros") ("full" "default" "derive" "macros") ("external" "bson/default" "bson/chrono-0_4" "bson/serde_with" "chrono/default" "config/default" "libp2p/default" "serde/derive") ("derive" "disarray-derive") ("default" "external"))))))

(define-public crate-disarray-0.1.11 (c (n "disarray") (v "0.1.11") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "disarray-derive") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "disarray-macros") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.20") (f (quote ("full"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.46.1") (f (quote ("dns-tokio" "tcp-tokio"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (d #t) (k 0)))) (h "1nrfj1sxlf3pwylh0blgkh6rp2c0qg11kzs5sgalm03mpznvdkmr") (f (quote (("macros" "disarray-macros") ("full" "default" "derive" "macros") ("external" "bson/default" "bson/chrono-0_4" "bson/serde_with" "chrono/default" "config/default" "libp2p/default" "serde/derive") ("derive" "disarray-derive") ("default" "external"))))))

(define-public crate-disarray-0.1.12 (c (n "disarray") (v "0.1.12") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "disarray-derive") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "disarray-macros") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.20") (f (quote ("full"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.46.1") (f (quote ("dns-tokio" "tcp-tokio"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "scsys") (r "^0.1.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (d #t) (k 0)))) (h "12gks75gqq0rv51l0fwhywn6avjb0nijv79i2zvdbsgajhizplwp") (f (quote (("macros" "disarray-macros") ("full" "core" "default") ("external" "libp2p/default" "libp2p/dns-tokio" "libp2p/tcp-tokio") ("derive" "disarray-derive") ("default" "external") ("core" "macros" "derive"))))))

(define-public crate-disarray-0.1.13 (c (n "disarray") (v "0.1.13") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "disarray-derive") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "disarray-macros") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.20") (f (quote ("full"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.46.1") (f (quote ("dns-tokio" "tcp-tokio"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "scsys") (r "^0.1.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (d #t) (k 0)))) (h "14j3v0ypx34mc3xiw7b43jbpbgibhdadffqkhgh6a6fql272zr6j") (f (quote (("macros" "disarray-macros") ("full" "core" "default") ("external" "libp2p/default" "libp2p/dns-tokio" "libp2p/tcp-tokio") ("derive" "disarray-derive") ("default" "external") ("core" "macros" "derive"))))))

(define-public crate-disarray-0.1.14 (c (n "disarray") (v "0.1.14") (d (list (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "disarray-derive") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "disarray-macros") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.20") (f (quote ("full"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.46.1") (f (quote ("dns-tokio" "tcp-tokio"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "scsys") (r "^0.1.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (d #t) (k 0)))) (h "16m05mk7yc754s8plss70bjxqbyy5isd0f6qpsqy1ji56khjwmcx") (f (quote (("macros" "disarray-macros") ("full" "core" "default") ("external" "libp2p/default" "libp2p/dns-tokio" "libp2p/tcp-tokio") ("derive" "disarray-derive") ("default" "external") ("core" "macros" "derive"))))))

(define-public crate-disarray-0.1.15 (c (n "disarray") (v "0.1.15") (d (list (d (n "disarray-core") (r ">=0.1.10") (o #t) (d #t) (k 0)) (d (n "disarray-derive") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "disarray-macros") (r ">=0.1.6") (o #t) (d #t) (k 0)) (d (n "disarray-network") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "155l9v3ij4wjq1nn30b25r4s8cxsprclzbqhbq1i6qicn8gw2fl7") (f (quote (("network" "disarray-network") ("macros" "disarray-macros") ("full" "core" "derive" "macros" "network") ("derive" "disarray-derive") ("default" "core") ("core" "disarray-core"))))))

(define-public crate-disarray-0.1.16 (c (n "disarray") (v "0.1.16") (d (list (d (n "disarray-core") (r ">=0.1.10") (o #t) (d #t) (k 0)) (d (n "disarray-derive") (r ">=0.1.10") (o #t) (d #t) (k 0)) (d (n "disarray-macros") (r ">=0.1.10") (o #t) (d #t) (k 0)) (d (n "disarray-network") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "17mrqrlhp6ja1hzjzgy4k5x1q8mbbnmdrs3hgf2fpr1q9bhpj6ym") (f (quote (("network" "disarray-network") ("macros" "disarray-macros") ("full" "core" "derive" "macros" "network") ("derive" "disarray-derive") ("default" "core") ("core" "disarray-core"))))))

(define-public crate-disarray-0.1.18 (c (n "disarray") (v "0.1.18") (d (list (d (n "disarray-core") (r ">=0.1.11") (o #t) (d #t) (k 0)) (d (n "disarray-derive") (r ">=0.1.11") (o #t) (d #t) (k 0)) (d (n "disarray-macros") (r ">=0.1.11") (o #t) (d #t) (k 0)) (d (n "disarray-network") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "19fgpjxj1zzciki51rrxfx2ap7qpx2mpl9971jazk4bxjxlcl05r") (f (quote (("network" "disarray-network") ("macros" "disarray-macros") ("full" "core" "derive" "macros" "network") ("derive" "disarray-derive") ("default" "core") ("core" "disarray-core"))))))

(define-public crate-disarray-0.1.19 (c (n "disarray") (v "0.1.19") (d (list (d (n "disarray-core") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "disarray-derive") (r "^0.1.13") (o #t) (d #t) (k 0)) (d (n "disarray-macros") (r "^0.1.13") (o #t) (d #t) (k 0)) (d (n "disarray-network") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "1axliq758x9cqb0qhbrqlfpq12j9r73s11fg3zrqa2m3l9s88hf5") (f (quote (("network" "disarray-network") ("macros" "disarray-macros") ("full" "core" "derive" "macros" "network") ("derive" "disarray-derive") ("default" "core") ("core" "disarray-core"))))))

(define-public crate-disarray-0.1.20 (c (n "disarray") (v "0.1.20") (d (list (d (n "disarray-core") (r "^0.1.20") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "disarray-ledger") (r "^0.1.20") (o #t) (d #t) (k 0)) (d (n "disarray-network") (r "^0.1.20") (o #t) (d #t) (k 0)) (d (n "disarray-runtime") (r "^0.1.20") (o #t) (d #t) (k 0)))) (h "0ak0p00vx383isgsz7jf12s9ppa08iaisrp88qfz0h4x3vp6ih5r") (f (quote (("runtime" "disarray-runtime") ("network" "disarray-network") ("ledger" "disarray-ledger") ("full" "core" "ledger" "network" "runtime") ("default" "core" "ledger" "network" "runtime") ("core" "disarray-core/default" "disarray-core/full"))))))

