(define-module (crates-io tr ot trotp) #:use-module (crates-io))

(define-public crate-trotp-0.1.1 (c (n "trotp") (v "0.1.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cli-clipboard") (r "^0.2.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossterm") (r "^0.23") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ctrlc") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.1.1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rpassword") (r "^2.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tiny_http") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "totp-rs") (r "^2.0.0") (d #t) (k 0)) (d (n "tui") (r "^0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "urlencoding") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "11dwlmqbk097bb72fmnfqvz3xhmgxlbfjafs34kmjgyrfsw32b20") (f (quote (("default" "cli-clipboard"))))))

(define-public crate-trotp-1.0.0 (c (n "trotp") (v "1.0.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cli-clipboard") (r "^0.2.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossterm") (r "^0.25.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ctrlc") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.1.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "openssl") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "passwords") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "r2d2") (r "^0.8.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "r2d2_sqlite") (r "^0.21.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rpassword") (r "^7.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rusqlite_migration") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tiny_http") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "totp-rs") (r "^2.0.0") (d #t) (k 0)) (d (n "tui") (r "^0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "urlencoding") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0a4009vlbvqfhzqxrdpkymxjik9q1q07rf89sa8y1lb425y3zh2b") (f (quote (("default" "cli-clipboard"))))))

(define-public crate-trotp-1.0.1 (c (n "trotp") (v "1.0.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cli-clipboard") (r "^0.2.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossterm") (r "^0.25.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ctrlc") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.1.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "openssl") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "passwords") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "r2d2") (r "^0.8.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "r2d2_sqlite") (r "^0.21.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rpassword") (r "^7.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rusqlite_migration") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tiny_http") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "totp-rs") (r "^2.0.0") (d #t) (k 0)) (d (n "tui") (r "^0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "urlencoding") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1bikmf5vawdqr0xk5087sp8fs33c8abfdqybh8kg2m76n91s1vji") (f (quote (("default" "cli-clipboard"))))))

(define-public crate-trotp-1.0.2 (c (n "trotp") (v "1.0.2") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cli-clipboard") (r "^0.2.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossterm") (r "^0.25.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ctrlc") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.1.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "openssl") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "passwords") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "r2d2") (r "^0.8.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "r2d2_sqlite") (r "^0.21.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rpassword") (r "^7.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rusqlite_migration") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tiny_http") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "totp-rs") (r "^2.0.0") (d #t) (k 0)) (d (n "tui") (r "^0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "urlencoding") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "13za946wngxwbh2sz30ikm7x49fky31zskp9n3g1a3nrxjlax26l") (f (quote (("default" "cli-clipboard"))))))

(define-public crate-trotp-1.0.3 (c (n "trotp") (v "1.0.3") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cli-clipboard") (r "^0.2.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossterm") (r "^0.25.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ctrlc") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.1.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "openssl") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "passwords") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "r2d2") (r "^0.8.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "r2d2_sqlite") (r "^0.21.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rpassword") (r "^7.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rusqlite_migration") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tiny_http") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "totp-rs") (r "^2.0.0") (d #t) (k 0)) (d (n "tui") (r "^0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "urlencoding") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "0bjv7a58v1i2dz6p54319r5rakjr4ljxa67vc2iiy73nazv6w48k") (f (quote (("default" "cli-clipboard"))))))

(define-public crate-trotp-1.0.4 (c (n "trotp") (v "1.0.4") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cli-clipboard") (r "^0.2.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossterm") (r "^0.25.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ctrlc") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.1.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "openssl") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "passwords") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "r2d2") (r "^0.8.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "r2d2_sqlite") (r "^0.21.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rpassword") (r "^7.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rusqlite_migration") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tiny_http") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "totp-rs") (r "^2") (d #t) (k 0)) (d (n "tui") (r "^0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "urlencoding") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1jcv9sacwka3f3g8r0n6dfj45jgsb3kaw96qp7jm2isanpw4s5la") (f (quote (("default" "cli-clipboard"))))))

(define-public crate-trotp-1.0.5 (c (n "trotp") (v "1.0.5") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cli-clipboard") (r "^0.2.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossterm") (r "^0.25.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ctrlc") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.1.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "openssl") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "passwords") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "r2d2") (r "^0.8.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "r2d2_sqlite") (r "^0.21.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rpassword") (r "^7.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rusqlite_migration") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tiny_http") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "totp-rs") (r "^2") (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "urlencoding") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1hg4gzbbja6rsm8hq9804n71sljv7cb22xpjpzsv6bw8h43cp5y3") (f (quote (("default" "cli-clipboard"))))))

(define-public crate-trotp-1.1.0 (c (n "trotp") (v "1.1.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cli-clipboard") (r "^0.2.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossterm") (r "^0.25.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ctrlc") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "data-encoding") (r "^2.1.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "openssl") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "passwords") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "r2d2") (r "^0.8.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "r2d2_sqlite") (r "^0.21.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rpassword") (r "^7.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rusqlite_migration") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tiny_http") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "totp-rs") (r "^3.1.0") (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "urlencoding") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)))) (h "1zz41v0yr5zljiis3qwd9f7svxm8b5l0szk0jk8626qricnd31vg") (f (quote (("default" "cli-clipboard"))))))

