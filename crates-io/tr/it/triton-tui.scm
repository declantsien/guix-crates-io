(define-module (crates-io tr it triton-tui) #:use-module (crates-io))

(define-public crate-triton-tui-0.1.0 (c (n "triton-tui") (v "0.1.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "better-panic") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo" "wrap_help" "unicode" "string"))) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo" "wrap_help" "unicode" "string"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.4") (d #t) (k 1)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "config") (r "^0.13") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("serde" "event-stream"))) (d #t) (k 0)) (d (n "derive_deref") (r "^1") (d #t) (k 0)) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "directories") (r "^5") (d #t) (k 1)) (d (n "fs-err") (r "^2.11") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "human-panic") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.4") (d #t) (k 2)) (d (n "proptest-arbitrary-interop") (r "^0.1") (d #t) (k 2)) (d (n "ratatui") (r "^0.25") (f (quote ("serde" "macros"))) (d #t) (k 0)) (d (n "rexpect") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2") (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "serde"))) (d #t) (k 0)) (d (n "triton-vm") (r "^0.36") (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)))) (h "1cv6n21jvm8n19kmpvc4xba7nww4zjqm2xz3rkws62qrif1m1db4")))

(define-public crate-triton-tui-0.2.0 (c (n "triton-tui") (v "0.2.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "better-panic") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo" "wrap_help" "unicode" "string"))) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo" "wrap_help" "unicode" "string"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.5") (d #t) (k 1)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "config") (r "^0.14") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("serde" "event-stream"))) (d #t) (k 0)) (d (n "derive_deref") (r "^1") (d #t) (k 0)) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "directories") (r "^5") (d #t) (k 1)) (d (n "fs-err") (r "^2.11") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "human-panic") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.4") (d #t) (k 2)) (d (n "proptest-arbitrary-interop") (r "^0.1") (d #t) (k 2)) (d (n "ratatui") (r "^0.26") (f (quote ("serde" "macros"))) (d #t) (k 0)) (d (n "rexpect") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2") (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "serde"))) (d #t) (k 0)) (d (n "triton-vm") (r "^0.38") (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)))) (h "07j17z4k7k6pq4gpdwmjlnmqwrzbnfz9z6a7sla9pq3jkcq1m7iq") (f (quote (("integration-tests" "rexpect") ("default"))))))

(define-public crate-triton-tui-0.2.1 (c (n "triton-tui") (v "0.2.1") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "better-panic") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo" "wrap_help" "unicode" "string"))) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo" "wrap_help" "unicode" "string"))) (d #t) (k 1)) (d (n "clap_complete") (r "^4.5") (d #t) (k 1)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "config") (r "^0.14") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("serde" "event-stream"))) (d #t) (k 0)) (d (n "derive_deref") (r "^1") (d #t) (k 0)) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "directories") (r "^5") (d #t) (k 1)) (d (n "fs-err") (r "^2.11") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "human-panic") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.4") (d #t) (k 2)) (d (n "proptest-arbitrary-interop") (r "^0.1") (d #t) (k 2)) (d (n "ratatui") (r "^0.26") (f (quote ("serde" "macros"))) (d #t) (k 0)) (d (n "rexpect") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2") (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "serde"))) (d #t) (k 0)) (d (n "triton-vm") (r "^0.38.2") (d #t) (k 0)) (d (n "tui-textarea") (r "^0.4") (d #t) (k 0)))) (h "14xlqq87sv4vrsnrazjylfy181dzhp4w5m0c5bw2av11x45r0cg3") (f (quote (("integration-tests" "rexpect") ("default"))))))

