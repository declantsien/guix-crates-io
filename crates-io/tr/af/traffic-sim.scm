(define-module (crates-io tr af traffic-sim) #:use-module (crates-io))

(define-public crate-traffic-sim-0.1.0 (c (n "traffic-sim") (v "0.1.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "bson") (r "^2.2.0") (d #t) (k 0)) (d (n "cgmath") (r "^0.18.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.5.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "0s1z25i0phjsbllw7dc416zpvdb2hlm4k318ma208vm3fphwyix6")))

(define-public crate-traffic-sim-0.1.1 (c (n "traffic-sim") (v "0.1.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "cgmath") (r "^0.18.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.5.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "0zh6j8hvmbaklz445fhxavphzg3222a5pbrv7xvz6hwkjcm5rcnf")))

