(define-module (crates-io tr ay tray-item) #:use-module (crates-io))

(define-public crate-tray-item-0.3.0-alpha (c (n "tray-item") (v "0.3.0-alpha") (d (list (d (n "gtk") (r "^0.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libappindicator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "padlock") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("shellapi" "libloaderapi" "errhandlingapi" "impl-default"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0w5n36ay3ms3jvpb0nyf9p153c1syfmh5phq0lnls0vxwpkna5lg")))

(define-public crate-tray-item-0.4.0-alpha (c (n "tray-item") (v "0.4.0-alpha") (d (list (d (n "cocoa") (r "^0.20") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gtk") (r "^0.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libappindicator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "padlock") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("shellapi" "libloaderapi" "errhandlingapi" "impl-default"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1an0k54akkkm82kw5zvvcl2ynz7h6j7k8sv65jhlwblx905jnkli")))

(define-public crate-tray-item-0.5.0-alpha (c (n "tray-item") (v "0.5.0-alpha") (d (list (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libappindicator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "padlock") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("shellapi" "libloaderapi" "errhandlingapi" "impl-default"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "11bdlxasbyjb1fwc4z6yg75z0w13ilwcb561klkvpg4h89v46cbg")))

(define-public crate-tray-item-0.5.1 (c (n "tray-item") (v "0.5.1") (d (list (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gtk") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libappindicator") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "padlock") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("shellapi" "libloaderapi" "errhandlingapi" "impl-default"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1z50m8kis2g599yd07sb15i1ps49lgphkyljs58sirxf8r6ys2jv")))

(define-public crate-tray-item-0.6.0 (c (n "tray-item") (v "0.6.0") (d (list (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gtk") (r "^0.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libappindicator") (r "^0.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "padlock") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("shellapi" "libloaderapi" "errhandlingapi" "impl-default"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "172gsvmbnd67ymxbzkl7h8h8mzlni24hc0pkb6mvrqrzankb83i4")))

(define-public crate-tray-item-0.7.0 (c (n "tray-item") (v "0.7.0") (d (list (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libappindicator") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "padlock") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("shellapi" "libloaderapi" "errhandlingapi" "impl-default"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0fyg9k6njs8615vjc5s63f0q5ykyg1x427rnv97xcbl4yxskb1kn")))

(define-public crate-tray-item-0.7.1 (c (n "tray-item") (v "0.7.1") (d (list (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gtk") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libappindicator") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "padlock") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("shellapi" "libloaderapi" "errhandlingapi" "impl-default"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "03vxijwz9rld4y4jrq6ajifwf43bxb2gkfbch10i5xg800pbc509")))

(define-public crate-tray-item-0.8.0 (c (n "tray-item") (v "0.8.0") (d (list (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gtk") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ksni") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "libappindicator") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "padlock") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-sys") (r "^0.48.0") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_LibraryLoader" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0q7pwgy7d0rwd9llg27g5sbk3ybkvmn5klclm3r52d6dgbbpvs3n") (s 2) (e (quote (("libappindicator" "dep:libappindicator" "dep:gtk") ("ksni" "dep:ksni"))))))

(define-public crate-tray-item-0.9.0 (c (n "tray-item") (v "0.9.0") (d (list (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "gtk") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "ksni") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libappindicator") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "padlock") (r "^0.2") (d #t) (t "cfg(target_os=\"windows\")") (k 0)) (d (n "windows-sys") (r "^0.48.0") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_LibraryLoader" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os=\"windows\")") (k 0)))) (h "03pq7dgcx2c30d5mfzg55a1sdwih2zbdg88w2ld1j8asrd17g7kn") (s 2) (e (quote (("libappindicator" "dep:libappindicator" "dep:gtk") ("ksni" "dep:ksni"))))))

(define-public crate-tray-item-0.10.0 (c (n "tray-item") (v "0.10.0") (d (list (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "gtk") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "ksni") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libappindicator") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "padlock") (r "^0.2") (d #t) (t "cfg(target_os=\"windows\")") (k 0)) (d (n "windows-sys") (r "^0.52.0") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_LibraryLoader" "Win32_UI_Shell" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(target_os=\"windows\")") (k 0)))) (h "0lqk36i2d76cmwiijfrckfpvx1d0czfbmcxb1v1hssbhc50bvm2r") (s 2) (e (quote (("libappindicator" "dep:libappindicator" "dep:gtk") ("ksni" "dep:ksni"))))))

