(define-module (crates-io tr in trinket_m0) #:use-module (crates-io))

(define-public crate-trinket_m0-0.2.1 (c (n "trinket_m0") (v "0.2.1") (d (list (d (n "atsamd-hal") (r "~0.4") (k 0)) (d (n "cortex-m") (r "~0.5") (d #t) (k 0)) (d (n "cortex-m-rt") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "~0.2") (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "panic-halt") (r "~0.2") (d #t) (k 2)))) (h "023sbyvxj69pi7qi6y3wqyfkixp92v178l8djxd20slvc99xikwk") (f (quote (("use_semihosting") ("unproven" "atsamd-hal/unproven") ("rt" "cortex-m-rt" "atsamd-hal/samd21e18a-rt") ("default" "rt" "atsamd-hal/samd21e18a"))))))

(define-public crate-trinket_m0-0.3.0 (c (n "trinket_m0") (v "0.3.0") (d (list (d (n "atsamd-hal") (r "~0.5") (k 0)) (d (n "cortex-m") (r "~0.5") (d #t) (k 0)) (d (n "cortex-m-rt") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "~0.2") (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "panic-halt") (r "~0.2") (d #t) (k 2)))) (h "0apyz0450b6zdqy52vli5773pijrx4apvgp1ahdzpibcns6amkfl") (f (quote (("use_semihosting") ("unproven" "atsamd-hal/unproven") ("rt" "cortex-m-rt" "atsamd-hal/samd21e18a-rt") ("default" "rt" "atsamd-hal/samd21e18a"))))))

(define-public crate-trinket_m0-0.5.0 (c (n "trinket_m0") (v "0.5.0") (d (list (d (n "atsamd-hal") (r "~0.7") (k 0)) (d (n "cortex-m") (r "~0.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "~0.2") (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "panic-halt") (r "~0.2") (d #t) (k 2)))) (h "0ikjl7qxd1hc5qv7zx85pm4q0wjwa4il4bfy1hv3l123s53j7g2f") (f (quote (("use_semihosting") ("unproven" "atsamd-hal/unproven") ("rt" "cortex-m-rt" "atsamd-hal/samd21e18a-rt") ("default" "rt" "atsamd-hal/samd21e18a"))))))

(define-public crate-trinket_m0-0.6.0 (c (n "trinket_m0") (v "0.6.0") (d (list (d (n "atsamd-hal") (r "~0.8") (k 0)) (d (n "cortex-m") (r "~0.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "~0.2") (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "panic-halt") (r "~0.2") (d #t) (k 2)))) (h "0pj73drvmbwvs1m7rnyq54cb0cmlsn4w7j8wjdyp3hrqkh21i1i3") (f (quote (("use_semihosting") ("unproven" "atsamd-hal/unproven") ("rt" "cortex-m-rt" "atsamd-hal/samd21e18a-rt") ("default" "rt" "atsamd-hal/samd21e18a"))))))

(define-public crate-trinket_m0-0.7.0 (c (n "trinket_m0") (v "0.7.0") (d (list (d (n "atsamd-hal") (r "~0.9") (k 0)) (d (n "cortex-m") (r "~0.6.2") (d #t) (k 0)) (d (n "cortex-m-rt") (r "~0.6.12") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "~0.2.3") (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "panic-halt") (r "~0.2") (d #t) (k 2)) (d (n "usb-device") (r "~0.2") (o #t) (d #t) (k 0)) (d (n "usbd-serial") (r "~0.1") (o #t) (d #t) (k 0)))) (h "0qskaz45rk48qyl0s0cmrh90lqfrcnm2w7k4lai7fjc01pvxpvmr") (f (quote (("use_semihosting") ("usb" "atsamd-hal/usb" "usb-device" "usbd-serial") ("unproven" "atsamd-hal/unproven") ("rt" "cortex-m-rt" "atsamd-hal/samd21e18a-rt") ("default" "rt" "atsamd-hal/samd21e18a"))))))

(define-public crate-trinket_m0-0.7.1 (c (n "trinket_m0") (v "0.7.1") (d (list (d (n "apa102-spi") (r "^0.3") (d #t) (k 0)) (d (n "atsamd-hal") (r "^0.10") (k 0)) (d (n "bitbang-hal") (r "^0.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.2") (d #t) (k 0)) (d (n "cortex-m-rt") (r "~0.6.12") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2") (d #t) (k 2)) (d (n "smart-leds") (r "^0.3") (d #t) (k 0)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "usbd-serial") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1c0yas19ajs0m5daapal6rl48mbckfk1ajjfsqhbnalqwc196jq8") (f (quote (("use_semihosting") ("usb" "atsamd-hal/usb" "usb-device" "usbd-serial") ("unproven" "atsamd-hal/unproven") ("rt" "cortex-m-rt" "atsamd-hal/samd21e-rt") ("default" "rt" "atsamd-hal/samd21e"))))))

(define-public crate-trinket_m0-0.8.0 (c (n "trinket_m0") (v "0.8.0") (d (list (d (n "apa102-spi") (r "^0.3") (d #t) (k 0)) (d (n "atsamd-hal") (r "^0.11") (k 0)) (d (n "bitbang-hal") (r "^0.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.2") (d #t) (k 0)) (d (n "cortex-m-rt") (r "~0.6.12") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2") (d #t) (k 2)) (d (n "smart-leds") (r "^0.3") (d #t) (k 0)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "usbd-serial") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1iq0gxglabmrzhlbslmxsm41g7h7drnpnvxchrl81nih40h3pv9p") (f (quote (("use_semihosting") ("usb" "atsamd-hal/usb" "usb-device" "usbd-serial") ("unproven" "atsamd-hal/unproven") ("rt" "cortex-m-rt" "atsamd-hal/samd21e-rt") ("default" "rt" "atsamd-hal/samd21e"))))))

(define-public crate-trinket_m0-0.9.0 (c (n "trinket_m0") (v "0.9.0") (d (list (d (n "apa102-spi") (r "^0.3") (d #t) (k 0)) (d (n "atsamd-hal") (r "^0.12") (k 0)) (d (n "bitbang-hal") (r "^0.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.2") (d #t) (k 0)) (d (n "cortex-m-rt") (r "~0.6.12") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2") (d #t) (k 2)) (d (n "smart-leds") (r "^0.3") (d #t) (k 0)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "usbd-serial") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1bwxwl6q5qvkgqqdhaz133r9q2djblk9zxp99vv7j7c2cpc6hpgn") (f (quote (("use_semihosting") ("usb" "atsamd-hal/usb" "usb-device" "usbd-serial") ("unproven" "atsamd-hal/unproven") ("rt" "cortex-m-rt" "atsamd-hal/samd21e-rt") ("default" "rt" "atsamd-hal/samd21e"))))))

(define-public crate-trinket_m0-0.10.0 (c (n "trinket_m0") (v "0.10.0") (d (list (d (n "apa102-spi") (r "^0.3") (d #t) (k 0)) (d (n "atsamd-hal") (r "^0.13") (k 0)) (d (n "bitbang-hal") (r "^0.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.2") (d #t) (k 0)) (d (n "cortex-m-rt") (r "~0.6.12") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2") (d #t) (k 2)) (d (n "smart-leds") (r "^0.3") (d #t) (k 0)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "usbd-serial") (r "^0.1") (o #t) (d #t) (k 0)))) (h "167497m64x2yyjxfqyrlglib1agv15mc8yrr1zs193dp17bmq7hg") (f (quote (("use_semihosting") ("usb" "atsamd-hal/usb" "usb-device" "usbd-serial") ("unproven" "atsamd-hal/unproven") ("rt" "cortex-m-rt" "atsamd-hal/samd21e-rt") ("default" "rt" "atsamd-hal/samd21e"))))))

(define-public crate-trinket_m0-0.11.0 (c (n "trinket_m0") (v "0.11.0") (d (list (d (n "apa102-spi") (r "^0.3") (d #t) (k 0)) (d (n "atsamd-hal") (r "^0.14") (k 0)) (d (n "bitbang-hal") (r "^0.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "panic-halt") (r "^0.2") (d #t) (k 2)) (d (n "smart-leds") (r "^0.3") (d #t) (k 0)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "usbd-serial") (r "^0.1") (d #t) (k 2)))) (h "1a99jv5plf6as3k7fnp95nnim8lhmcnp4axs4nls56igybvli98l") (f (quote (("use_semihosting") ("usb" "atsamd-hal/usb" "usb-device") ("unproven" "atsamd-hal/unproven") ("rt" "cortex-m-rt" "atsamd-hal/samd21e-rt") ("default" "rt" "atsamd-hal/samd21e"))))))

