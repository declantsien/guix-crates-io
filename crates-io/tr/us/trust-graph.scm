(define-module (crates-io tr us trust-graph) #:use-module (crates-io))

(define-public crate-trust-graph-0.0.1 (c (n "trust-graph") (v "0.0.1") (d (list (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "exitfailure") (r "^0.5.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.16.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parity-multiaddr") (r "^0.7.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)))) (h "1xplw416cwlfwi67mq1qvgd86qxx2labgji352dal641kj0vxvdl")))

(define-public crate-trust-graph-0.1.0 (c (n "trust-graph") (v "0.1.0") (d (list (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.3") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.20.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "ref-cast") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)))) (h "08xbs2fndjfgdjy5dm5xwvx6cxlzzap19i8q0zmrjvzqzk78dpg9")))

(define-public crate-trust-graph-0.2.0 (c (n "trust-graph") (v "0.2.0") (d (list (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.3") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.26.0") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "ref-cast") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)))) (h "11z8x2vw8byw5zjippx36l9aacb47hhl2v0hp70hfpasb20slrgp")))

(define-public crate-trust-graph-0.2.1 (c (n "trust-graph") (v "0.2.1") (d (list (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "fluence-identity") (r "^0.2.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "=1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (d #t) (k 0)) (d (n "signature") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "0d41dj731305nhm727369g5k1bn53r11g3pldadmmb3327ldv668")))

(define-public crate-trust-graph-0.2.2 (c (n "trust-graph") (v "0.2.2") (d (list (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "fluence-identity") (r "^0.2.1") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "=1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (d #t) (k 0)) (d (n "signature") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "03c6bfyj5wzi0i5ka3d9blwdmr48j30nk6vp1rs5z41jz6g6pa4a")))

(define-public crate-trust-graph-0.2.3 (c (n "trust-graph") (v "0.2.3") (d (list (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "fluence-identity") (r "^0.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "=1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (d #t) (k 0)) (d (n "signature") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "17lbq3s3axxr0x86r38c6igv8rjbv8yb9d9y84i0m01ba2ghl5g0")))

(define-public crate-trust-graph-0.2.4 (c (n "trust-graph") (v "0.2.4") (d (list (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "fluence-identity") (r "^0.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "=1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (d #t) (k 0)) (d (n "signature") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "185s8hcc4k6bhmyywjmcb1b1dbfkf7p795f7yhb041ywbsqkk510")))

(define-public crate-trust-graph-0.2.5 (c (n "trust-graph") (v "0.2.5") (d (list (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "fluence-identity") (r "^0.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "=1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (d #t) (k 0)) (d (n "signature") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "1db02dclpaakhzgas2r6zpgw6sdrzan95ssn5mi2kcc4p906nc7w")))

(define-public crate-trust-graph-0.2.6 (c (n "trust-graph") (v "0.2.6") (d (list (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "fluence-identity") (r "^0.2") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.1") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "=1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (d #t) (k 0)) (d (n "signature") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "0fvksdcxzqhsz28dnxgpzraflgi84v2v504ryjmd73bksa0ihrb7")))

(define-public crate-trust-graph-0.2.7 (c (n "trust-graph") (v "0.2.7") (d (list (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "fluence-identity") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.27.2") (d #t) (k 0) (p "fluence-fork-libp2p-core")) (d (n "libsecp256k1") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.2") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "=1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (d #t) (k 0)) (d (n "signature") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "0lsmjzga786qjrhchli9ffzvqf7pgbsk9nh3qrjsx0kvd0xzlx7j")))

(define-public crate-trust-graph-0.4.0 (c (n "trust-graph") (v "0.4.0") (d (list (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "fluence-keypair") (r "^0.7.0") (d #t) (k 0)) (d (n "libp2p-core") (r "^0.32") (f (quote ("secp256k1"))) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nonempty") (r "^0.7.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "signature") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "1gnf5kvkkfl7hg54p769fwhs0ggnp53m9f3gnwmcpwxq6z0h21fk")))

(define-public crate-trust-graph-0.3.0 (c (n "trust-graph") (v "0.3.0") (d (list (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "fluence-keypair") (r "^0.8.1") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nonempty") (r "^0.7.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "signature") (r "^1.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "123pdqs2qjk8blrz91di5g7w74jxxpalqq8x85k91j62rjrx6099")))

(define-public crate-trust-graph-0.4.1 (c (n "trust-graph") (v "0.4.1") (d (list (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "fluence-keypair") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nonempty") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "18cmrmklsiil2ixb0fhsy12g71h625jhj9zkxlbrx3kpsaaf10ij")))

(define-public crate-trust-graph-0.4.2 (c (n "trust-graph") (v "0.4.2") (d (list (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "fluence-keypair") (r "^0.10.1") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nonempty") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "1n0bbqfvh9cqmp69hak6wvxryngg1kp8xi3462890sr53mibd66a")))

(define-public crate-trust-graph-0.4.3 (c (n "trust-graph") (v "0.4.3") (d (list (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "fluence-keypair") (r "^0.10.1") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nonempty") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "1mm1yk3nm44hfxgkgy62lhhml540p998g9k3dn963qkba7z5fvfj")))

(define-public crate-trust-graph-0.4.4 (c (n "trust-graph") (v "0.4.4") (d (list (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "fluence-keypair") (r "^0.10.1") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nonempty") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "0d07lc0sj6yjp7cwk3nqp85q5hv0jah4zpgvqkbly6f5z5f0xvn2")))

(define-public crate-trust-graph-0.4.5 (c (n "trust-graph") (v "0.4.5") (d (list (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "fluence-keypair") (r "^0.10.1") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nonempty") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "0x0yrizj4hl9xw3pavfaxhgl0f17n7g2lhh1027nli3zxdvqhpdx")))

(define-public crate-trust-graph-0.4.6 (c (n "trust-graph") (v "0.4.6") (d (list (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "fluence-keypair") (r "^0.10.2") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nonempty") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "03y8vxcncf0jz8zg1rzhmb0argrjk3vqcqwjnf60g3j788n4y1jg")))

(define-public crate-trust-graph-0.4.7 (c (n "trust-graph") (v "0.4.7") (d (list (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "fluence-keypair") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nonempty") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "08a0wbhzx2dfa1jxdc0dhfwi70g5j3l4xijvpnrdc1403gnnqsg2")))

(define-public crate-trust-graph-0.4.8 (c (n "trust-graph") (v "0.4.8") (d (list (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "fluence-keypair") (r "^0.10.4") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nonempty") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "1nv8rz1ib9vns9kw176dci88lr464nv9z1x82892cw85yv9j3d45")))

(define-public crate-trust-graph-0.4.9 (c (n "trust-graph") (v "0.4.9") (d (list (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "fluence-keypair") (r "^0.10.4") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nonempty") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "1nrbsl34dy615mif3jn5aipk0zc46j5klskdngvk6v3a2f0ah7bc")))

(define-public crate-trust-graph-0.4.10 (c (n "trust-graph") (v "0.4.10") (d (list (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "fluence-keypair") (r "^0.10.4") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nonempty") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "0b6bkafw826j0207zns8dhcjd9rcbi02cqyv1p22iad8zal0l9m7")))

(define-public crate-trust-graph-0.4.11 (c (n "trust-graph") (v "0.4.11") (d (list (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "fluence-keypair") (r "^0.10.4") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nonempty") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)))) (h "0gb3blbj67nfyd49w4yn0z0ain26xf2gnz5hvsv2jjr8svz0fw7v")))

