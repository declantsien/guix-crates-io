(define-module (crates-io tr ee tree-sitter-grep) #:use-module (crates-io))

(define-public crate-tree-sitter-grep-0.1.0-dev.0 (c (n "tree-sitter-grep") (v "0.1.0-dev.0") (d (list (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "bstr") (r "^1.1.0") (d #t) (k 0)) (d (n "bytecount") (r "^0.6") (d #t) (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.14") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1.6") (d #t) (k 0)) (d (n "escargot") (r "^0.5.7") (d #t) (k 2)) (d (n "ignore") (r "^0.4.20-dev.0") (d #t) (k 0) (p "tree_sitter_grep_ignore")) (d (n "libc") (r "^0.2.144") (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "memchr") (r "^2.1") (d #t) (k 0)) (d (n "memmap") (r "^0.5.3") (d #t) (k 0) (p "memmap2")) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "proc_macros") (r "^0.1.0-dev.0") (d #t) (k 0) (p "tree_sitter_grep_proc_macros")) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.8.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.77") (f (quote ("derive"))) (d #t) (k 0)) (d (n "shlex") (r "^1.1.0") (d #t) (k 2)) (d (n "termcolor") (r "^1.2.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (d #t) (k 0)) (d (n "tree-sitter-dockerfile") (r "^0.1.0") (d #t) (k 0)) (d (n "tree-sitter-elisp") (r "^1.3.0") (d #t) (k 0)) (d (n "tree-sitter-elm") (r "^5.6.4") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.19.0") (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.18") (d #t) (k 0)) (d (n "tree-sitter-objc") (r "^1.1.0") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (d #t) (k 0)) (d (n "tree-sitter-query") (r "^0.1.0") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3-dev.0") (d #t) (k 0) (p "tree_sitter_grep_tree-sitter-rust")) (d (n "tree-sitter-swift") (r "^0.3.6") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)))) (h "1wvl5697lyb0dkbn42s00gf7x77fykvs4734y1h61rxy4jzr6614") (f (quote (("default" "bytecount/runtime-dispatch-simd")))) (r "1.70")))

(define-public crate-tree-sitter-grep-0.1.0 (c (n "tree-sitter-grep") (v "0.1.0") (d (list (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "bstr") (r "^1.1.0") (d #t) (k 0)) (d (n "bytecount") (r "^0.6") (d #t) (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.14") (d #t) (k 0)) (d (n "encoding_rs_io") (r "^0.1.6") (d #t) (k 0)) (d (n "escargot") (r "^0.5.7") (d #t) (k 2)) (d (n "ignore") (r "^0.4.20-dev.0") (d #t) (k 0) (p "tree_sitter_grep_ignore")) (d (n "libc") (r "^0.2.144") (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "memchr") (r "^2.1") (d #t) (k 0)) (d (n "memmap") (r "^0.5.3") (d #t) (k 0) (p "memmap2")) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "proc_macros") (r "^0.1.0") (d #t) (k 0) (p "tree_sitter_grep_proc_macros")) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.8.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.77") (f (quote ("derive"))) (d #t) (k 0)) (d (n "shlex") (r "^1.1.0") (d #t) (k 2)) (d (n "strum_macros") (r "^0.25.1") (d #t) (k 0)) (d (n "termcolor") (r "^1.2.0") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (d #t) (k 0)) (d (n "tree-sitter-dockerfile") (r "^0.1.0") (d #t) (k 0)) (d (n "tree-sitter-elisp") (r "^1.3.0") (d #t) (k 0)) (d (n "tree-sitter-elm") (r "^5.6.4") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (d #t) (k 0)) (d (n "tree-sitter-html") (r "^0.19.0") (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.19.0") (d #t) (k 0)) (d (n "tree-sitter-kotlin") (r "^0.2.11") (d #t) (k 0)) (d (n "tree-sitter-lua") (r "^0.0.18") (d #t) (k 0)) (d (n "tree-sitter-objc") (r "^1.1.0") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (d #t) (k 0)) (d (n "tree-sitter-query") (r "^0.1.0") (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3-dev.0") (d #t) (k 0) (p "tree_sitter_grep_tree-sitter-rust")) (d (n "tree-sitter-swift") (r "^0.3.6") (d #t) (k 0)) (d (n "tree-sitter-toml") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)))) (h "1xacvdv0yax9l4sa07shb5bffxcsm8kpyimsxhjdjpb55cpjdfn8") (f (quote (("default" "bytecount/runtime-dispatch-simd")))) (r "1.70")))

