(define-module (crates-io tr ee tree-sitter-facade-sg) #:use-module (crates-io))

(define-public crate-tree-sitter-facade-sg-0.9.0 (c (n "tree-sitter-facade-sg") (v "0.9.0") (d (list (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("strict-macro"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-tree-sitter") (r "^1.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0) (p "web-tree-sitter-sg")))) (h "1vc88ngqgfdsh14zafkq8lm1vl5yxv8q3dw27l7y57pxrzb07cbj")))

(define-public crate-tree-sitter-facade-sg-0.9.1 (c (n "tree-sitter-facade-sg") (v "0.9.1") (d (list (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("strict-macro"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-tree-sitter") (r "^1.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0) (p "web-tree-sitter-sg")))) (h "01l77zxm4lssimbmv9jgb5zhjhn69b3m4ysafkadwhf6hd126p14")))

(define-public crate-tree-sitter-facade-sg-0.9.2 (c (n "tree-sitter-facade-sg") (v "0.9.2") (d (list (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("strict-macro"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-tree-sitter") (r "^1.3.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0) (p "web-tree-sitter-sg")))) (h "12r2jzyzpc7g1z5x843zbbzcaww45m88760c6sqhpcwrlqv40nmz")))

(define-public crate-tree-sitter-facade-sg-0.21.0 (c (n "tree-sitter-facade-sg") (v "0.21.0") (d (list (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tree-sitter") (r "^0.21.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("strict-macro"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-tree-sitter-sg") (r "^0.21.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0r7m0a72y6kwgglmk8z5xs2iwflc6sbprcxshnf25nqccdv7iad7")))

(define-public crate-tree-sitter-facade-sg-0.21.1 (c (n "tree-sitter-facade-sg") (v "0.21.1") (d (list (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tree-sitter") (r "^0.21.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("strict-macro"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-tree-sitter-sg") (r "^0.21.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "06r6689wwnqhqyv2rvs4x7gcnx75hqz4f2mmm2n2ymxrfw4q2g7n")))

(define-public crate-tree-sitter-facade-sg-0.21.2 (c (n "tree-sitter-facade-sg") (v "0.21.2") (d (list (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tree-sitter") (r "^0.21.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("strict-macro"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-tree-sitter-sg") (r "^0.21.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1r91px968jzl0afdbarssapw147c22fj4ynjnlwq4y39na6fq68v")))

(define-public crate-tree-sitter-facade-sg-0.21.3 (c (n "tree-sitter-facade-sg") (v "0.21.3") (d (list (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tree-sitter") (r "^0.21.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("strict-macro"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-tree-sitter-sg") (r "^0.21.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "148906qsyjnk5al70a5j70c6z4wvj982bicwrjrvy2q8hak02sym")))

(define-public crate-tree-sitter-facade-sg-0.21.4 (c (n "tree-sitter-facade-sg") (v "0.21.4") (d (list (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tree-sitter") (r "^0.21.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("strict-macro"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-tree-sitter-sg") (r "^0.21.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "036d32ycbg1kk7czha1clbk3rf35nc8z9n9p93d31111j6l51jp7")))

(define-public crate-tree-sitter-facade-sg-0.21.5 (c (n "tree-sitter-facade-sg") (v "0.21.5") (d (list (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tree-sitter") (r "^0.21.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("strict-macro"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-tree-sitter-sg") (r "^0.21.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "08yja3s3696pri6q190hb23xxgj5491rdxcaqc6bnpajjkfr6r4h")))

