(define-module (crates-io tr ac tracing-modality) #:use-module (crates-io))

(define-public crate-tracing-modality-0.1.0 (c (n "tracing-modality") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.27") (d #t) (k 0)) (d (n "tracing-serde-modality-ingest") (r "^0.1") (d #t) (k 0)) (d (n "tracing-serde-subscriber") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "07jyy9g8gkkhx3nal6zkjqy6ckpynnz875af2zjdj4wg8vbhzqcw")))

(define-public crate-tracing-modality-0.1.1 (c (n "tracing-modality") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.27") (d #t) (k 0)) (d (n "tracing-serde-modality-ingest") (r "^0.1") (d #t) (k 0)) (d (n "tracing-serde-subscriber") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "0q1jal97k8j4969c3x7a6v1ma30865jgf9i2qaxp4m6ff4ky43hy")))

(define-public crate-tracing-modality-0.2.0 (c (n "tracing-modality") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.2") (d #t) (k 2)) (d (n "dirs") (r "^4") (d #t) (k 0)) (d (n "duplicate") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "modality-ingest-client") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "net" "sync" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0ln03wp1gpyprq370aj24zbgg3frbh5lsghgk9z9bmmr0qhlnwd3") (f (quote (("default" "async" "blocking") ("blocking") ("async"))))))

(define-public crate-tracing-modality-0.2.1 (c (n "tracing-modality") (v "0.2.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.2") (d #t) (k 2)) (d (n "dirs") (r "^4") (d #t) (k 0)) (d (n "duplicate") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "modality-ingest-client") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "net" "sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0gwgvicqdhkyp8s4a0v1ix5cs0ykndrlngg51ml4h31pk0qalagi") (f (quote (("default" "async" "blocking") ("blocking") ("async"))))))

(define-public crate-tracing-modality-0.3.0 (c (n "tracing-modality") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "auxon-sdk") (r "^1.0") (f (quote ("modality"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.2") (d #t) (k 2)) (d (n "dirs") (r "^4") (d #t) (k 0)) (d (n "duplicate") (r "^0.4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "net" "sync" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "193j3v4bn6jb5aiwmb1pf455nari7l20yx4q27wrzr3x4d9qv19m") (f (quote (("default" "async" "blocking") ("blocking") ("async"))))))

