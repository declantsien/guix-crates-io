(define-module (crates-io tr ac tract-core) #:use-module (crates-io))

(define-public crate-tract-core-0.1.0 (c (n "tract-core") (v "0.1.0") (d (list (d (n "accelerate-src") (r "^0.3") (o #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "blas-src") (r "^0.2") (o #t) (k 0)) (d (n "blis-src") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "image") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "insideout") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.6") (f (quote ("static"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "1v3spqri0ps6y7khm0avwikja6qbi4jvmm6cdh21zb15w713r3h1") (f (quote (("serialize" "serde" "serde_derive" "num/serde" "smallvec/serde" "half/serde") ("openblas" "blas" "openblas-src" "blas-src/openblas") ("image_ops" "image") ("default") ("blis" "blas" "blis-src") ("blas" "ndarray/blas" "blas-src") ("accelerate" "blas" "accelerate-src" "blas-src/accelerate"))))))

(define-public crate-tract-core-0.1.1 (c (n "tract-core") (v "0.1.1") (d (list (d (n "accelerate-src") (r "^0.3") (o #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "blas-src") (r "^0.2") (o #t) (k 0)) (d (n "blis-src") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "image") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "insideout") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.6") (f (quote ("static"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "1d4pfm5byrqhpgi2vp0gzpkzlybr14x3nadrygvp6w7vv1cbpszq") (f (quote (("serialize" "serde" "serde_derive" "num/serde" "smallvec/serde" "half/serde") ("openblas" "blas" "openblas-src" "blas-src/openblas") ("image_ops" "image") ("default") ("blis" "blas" "blis-src") ("blas" "ndarray/blas" "blas-src") ("accelerate" "blas" "accelerate-src" "blas-src/accelerate"))))))

(define-public crate-tract-core-0.2.0 (c (n "tract-core") (v "0.2.0") (d (list (d (n "accelerate-src") (r "^0.3") (o #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "blas-src") (r "^0.2") (o #t) (k 0)) (d (n "blis-src") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "custom_debug_derive") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "image") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "insideout") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2") (d #t) (k 2)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.6") (f (quote ("static"))) (o #t) (k 0)) (d (n "proptest") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.2.0") (d #t) (k 0)))) (h "1ghrk3xiam0qhh3k9g1x6xia9cp55kjiv251y4r5svcrfp4n2d3d") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("openblas" "blas" "openblas-src" "blas-src/openblas") ("image_ops" "image") ("default") ("blis" "blas" "blis-src") ("blas" "ndarray/blas" "blas-src") ("accelerate" "blas" "accelerate-src" "blas-src/accelerate"))))))

(define-public crate-tract-core-0.2.1 (c (n "tract-core") (v "0.2.1") (d (list (d (n "accelerate-src") (r "^0.3") (o #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "blas-src") (r "^0.2") (o #t) (k 0)) (d (n "blis-src") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "custom_debug_derive") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "image") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "insideout") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2") (d #t) (k 2)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.6") (f (quote ("static"))) (o #t) (k 0)) (d (n "proptest") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.2.1") (d #t) (k 0)))) (h "1q8lh2gnlg3r9qabplvydqhiknl18g6j2gqx2hz6b9k6ca7rngb4") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("openblas" "blas" "openblas-src" "blas-src/openblas") ("image_ops" "image") ("default") ("blis" "blas" "blis-src") ("blas" "ndarray/blas" "blas-src") ("accelerate" "blas" "accelerate-src" "blas-src/accelerate"))))))

(define-public crate-tract-core-0.2.2 (c (n "tract-core") (v "0.2.2") (d (list (d (n "accelerate-src") (r "^0.3") (o #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "blas-src") (r "^0.2") (o #t) (k 0)) (d (n "blis-src") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "custom_debug_derive") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "image") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "insideout") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2") (d #t) (k 2)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.6") (f (quote ("static"))) (o #t) (k 0)) (d (n "proptest") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.2.2") (d #t) (k 0)))) (h "0rhysjlw4qdhbwlj1iic5bx7lv061n8kg46i2c1l9v3xsssfvmv8") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("openblas" "blas" "openblas-src" "blas-src/openblas") ("image_ops" "image") ("default") ("blis" "blas" "blis-src") ("blas" "ndarray/blas" "blas-src") ("accelerate" "blas" "accelerate-src" "blas-src/accelerate"))))))

(define-public crate-tract-core-0.2.4 (c (n "tract-core") (v "0.2.4") (d (list (d (n "accelerate-src") (r "^0.3") (o #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "blas-src") (r "^0.2") (o #t) (k 0)) (d (n "blis-src") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "custom_debug_derive") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "image") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "insideout") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2") (d #t) (k 2)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.6") (f (quote ("static"))) (o #t) (k 0)) (d (n "proptest") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.2.4") (d #t) (k 0)))) (h "1izcw08y6d0c7zd3cm418dm9vc7idw6s55px81alqigagwa6y3mv") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("openblas" "blas" "openblas-src" "blas-src/openblas") ("image_ops" "image") ("default") ("blis" "blas" "blis-src") ("blas" "ndarray/blas" "blas-src") ("accelerate" "blas" "accelerate-src" "blas-src/accelerate"))))))

(define-public crate-tract-core-0.2.5 (c (n "tract-core") (v "0.2.5") (d (list (d (n "accelerate-src") (r "^0.3") (o #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "blas-src") (r "^0.2") (o #t) (k 0)) (d (n "blis-src") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "custom_debug_derive") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "image") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "insideout") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2") (d #t) (k 2)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.6") (f (quote ("static"))) (o #t) (k 0)) (d (n "proptest") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.2.5") (d #t) (k 0)))) (h "05i6z5jsixhv9mq36lzw6pz9ff1m0njkk8zgmh99mayhykd028xi") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("openblas" "blas" "openblas-src" "blas-src/openblas") ("image_ops" "image") ("default") ("blis" "blas" "blis-src") ("blas" "ndarray/blas" "blas-src") ("accelerate" "blas" "accelerate-src" "blas-src/accelerate"))))))

(define-public crate-tract-core-0.2.7 (c (n "tract-core") (v "0.2.7") (d (list (d (n "accelerate-src") (r "^0.3") (o #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "blas-src") (r "^0.2") (o #t) (k 0)) (d (n "blis-src") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "custom_debug_derive") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "image") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "insideout") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2") (d #t) (k 2)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.6") (f (quote ("static"))) (o #t) (k 0)) (d (n "proptest") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.2.7") (d #t) (k 0)))) (h "1sh8drbmblavzfi24d2mv5kvqna0dvp2lz09396kb3x8b8wcpnsp") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("openblas" "blas" "openblas-src" "blas-src/openblas") ("image_ops" "image") ("default") ("blis" "blas" "blis-src") ("blas" "ndarray/blas" "blas-src") ("accelerate" "blas" "accelerate-src" "blas-src/accelerate"))))))

(define-public crate-tract-core-0.2.8 (c (n "tract-core") (v "0.2.8") (d (list (d (n "accelerate-src") (r "^0.3") (o #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "blas-src") (r "^0.2") (o #t) (k 0)) (d (n "blis-src") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "custom_debug_derive") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "image") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "insideout") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2") (d #t) (k 2)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.6") (f (quote ("static"))) (o #t) (k 0)) (d (n "proptest") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.2.8") (d #t) (k 0)))) (h "0y06hgk9gzqpl7fl79izyprlhrkzzvq7xzivqzf5g4wcpgnlp6hm") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("openblas" "blas" "openblas-src" "blas-src/openblas") ("image_ops" "image") ("default") ("blis" "blas" "blis-src") ("blas" "ndarray/blas" "blas-src") ("accelerate" "blas" "accelerate-src" "blas-src/accelerate"))))))

(define-public crate-tract-core-0.2.9 (c (n "tract-core") (v "0.2.9") (d (list (d (n "accelerate-src") (r "^0.3") (o #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "blas-src") (r "^0.2") (o #t) (k 0)) (d (n "blis-src") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "custom_debug_derive") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "image") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "insideout") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2") (d #t) (k 2)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.6") (f (quote ("static"))) (o #t) (k 0)) (d (n "proptest") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.5") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.2.9") (d #t) (k 0)))) (h "1hgrbgsqd2wvvpkl75nm77fync066h7l328bfz62fz8srj6405v3") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("openblas" "blas" "openblas-src" "blas-src/openblas") ("image_ops" "image") ("default") ("blis" "blas" "blis-src") ("blas" "ndarray/blas" "blas-src") ("accelerate" "blas" "accelerate-src" "blas-src/accelerate"))))))

(define-public crate-tract-core-0.3.0 (c (n "tract-core") (v "0.3.0") (d (list (d (n "accelerate-src") (r "^0.3") (o #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "blas-src") (r "^0.2") (o #t) (k 0)) (d (n "blis-src") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "custom_debug_derive") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "image") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "insideout") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "no-panic") (r "^0.1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.6") (f (quote ("static"))) (o #t) (k 0)) (d (n "proptest") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.3.0") (d #t) (k 0)))) (h "0gaijgmqwvd15x5fgyakyx2a2axah1xf3251s2ymryp91fvjx58c") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("openblas" "blas" "openblas-src" "blas-src/openblas") ("image_ops" "image") ("default") ("blis" "blas" "blis-src") ("blas" "ndarray/blas" "blas-src") ("accelerate" "blas" "accelerate-src" "blas-src/accelerate"))))))

(define-public crate-tract-core-0.3.1 (c (n "tract-core") (v "0.3.1") (d (list (d (n "accelerate-src") (r "^0.3") (o #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "blas-src") (r "^0.2") (o #t) (k 0)) (d (n "blis-src") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "custom_debug_derive") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "image") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "insideout") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "no-panic") (r "^0.1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.6") (f (quote ("static"))) (o #t) (k 0)) (d (n "proptest") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.3.1") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "0zpxfwrfrrpy1l79kwx5pdvydpwxqhw54891rnfc6c782k138j0f") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("openblas" "blas" "openblas-src" "blas-src/openblas") ("image_ops" "image") ("default") ("blis" "blas" "blis-src") ("blas" "ndarray/blas" "blas-src") ("accelerate" "blas" "accelerate-src" "blas-src/accelerate"))))))

(define-public crate-tract-core-0.3.2 (c (n "tract-core") (v "0.3.2") (d (list (d (n "accelerate-src") (r "^0.3") (o #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "blas-src") (r "^0.2") (o #t) (k 0)) (d (n "blis-src") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "custom_debug_derive") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "image") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "no-panic") (r "^0.1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.6") (f (quote ("static"))) (o #t) (k 0)) (d (n "proptest") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.3.2") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "102ncvkfi6x0sczva21b58hlbj5wb6qrdzkfm1b36w78yk6hl8nk") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("openblas" "blas" "openblas-src" "blas-src/openblas") ("image_ops" "image") ("default") ("blis" "blas" "blis-src") ("blas" "ndarray/blas" "blas-src") ("accelerate" "blas" "accelerate-src" "blas-src/accelerate"))))))

(define-public crate-tract-core-0.3.3 (c (n "tract-core") (v "0.3.3") (d (list (d (n "accelerate-src") (r "^0.3") (o #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "blas-src") (r "^0.2") (o #t) (k 0)) (d (n "blis-src") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "custom_debug_derive") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "image") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "no-panic") (r "^0.1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.6") (f (quote ("static"))) (o #t) (k 0)) (d (n "proptest") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.3.3") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "15mhalp7jjns67nmgf42ansy7ljlhd6k3lr0pjqayxc1vz7d5f4x") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("openblas" "blas" "openblas-src" "blas-src/openblas") ("image_ops" "image") ("default") ("blis" "blas" "blis-src") ("blas" "ndarray/blas" "blas-src") ("accelerate" "blas" "accelerate-src" "blas-src/accelerate"))))))

(define-public crate-tract-core-0.4.0 (c (n "tract-core") (v "0.4.0") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "custom_debug_derive") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "no-panic") (r "^0.1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.4.0") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "1q1lkv0yzmh7l54zajx4xw24lg8fdbi2ahbgq0fm5bc8ya764wjn") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("default"))))))

(define-public crate-tract-core-0.4.1 (c (n "tract-core") (v "0.4.1") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "no-panic") (r "^0.1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.4.1") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "1x30kn7hm0mv1d723byiqa2na83zmmg5fm68bw0lh4zap4hkg8x2") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("default")))) (y #t)))

(define-public crate-tract-core-0.4.2 (c (n "tract-core") (v "0.4.2") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "no-panic") (r "^0.1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.4.2") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "12j8mr5bgilmkxvnfnqp4zg2k6qmszzbjywbkxjvwl8m4a76gxh4") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("default"))))))

(define-public crate-tract-core-0.5.0 (c (n "tract-core") (v "0.5.0") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "no-panic") (r "^0.1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.5.0") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "026ih54h6i174r5lvrflny78ilipaw7ax1d87fwa7lwf7yhg5vml") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("default"))))))

(define-public crate-tract-core-0.5.1 (c (n "tract-core") (v "0.5.1") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.5.1") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "1dg2fzvfgs4abn62g7ngwgwbjlzpfh3zlc71dk7hgk5ilryh6gp9") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("default"))))))

(define-public crate-tract-core-0.5.3 (c (n "tract-core") (v "0.5.3") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.5.3") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "1zrjgr2f7plya328jrmvx304bpkdqaysk77q25pk8ybh0aqq2ras") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("default")))) (y #t)))

(define-public crate-tract-core-0.5.4 (c (n "tract-core") (v "0.5.4") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.5.4") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "1xi3pzlgn5415iqbvnb6ivk09dz4kwb1s2i8qrlmq00vbv51mpr7") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("default"))))))

(define-public crate-tract-core-0.5.5 (c (n "tract-core") (v "0.5.5") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.5.5") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "0c4q8wxmv2bnw9fl1vkaynaqqgbb5ygw233pwbxq2v92726zj9wm") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("default"))))))

(define-public crate-tract-core-0.5.6 (c (n "tract-core") (v "0.5.6") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.5.6") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "17ac3257wi7mywkrqwphcmyjimwri1rwbdrcl9yjr6l35b442qbv") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("default"))))))

(define-public crate-tract-core-0.5.7 (c (n "tract-core") (v "0.5.7") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.5.7") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "0as34vfmg3wq5mrlxzd180n5cgq7q8cvvw4813rsv2jhvx1yma81") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("default"))))))

(define-public crate-tract-core-0.5.8 (c (n "tract-core") (v "0.5.8") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objekt") (r "^0.1.1") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.5.8") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "13mc8dcgrgzk7qw19svf25fjq66x2csm4di1dq1370m3xjjfiy9n") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("default"))))))

(define-public crate-tract-core-0.5.9 (c (n "tract-core") (v "0.5.9") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.5.9") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "1213j4pbhxmq72c8415vixrarf2fkfscx11m7bdjbwk7l2gnapq9") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("default"))))))

(define-public crate-tract-core-0.5.10 (c (n "tract-core") (v "0.5.10") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.5.10") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "0lq42ka4rmd5savg9gwdssf9b2s4w82dl1xzw90fzfjb7q2xdpxb") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("default"))))))

(define-public crate-tract-core-0.5.11 (c (n "tract-core") (v "0.5.11") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.5.11") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "16v0sr36lcicm7xf084fx5r734n14vjxwn5g9b3n4pq7g3fbmmyk") (f (quote (("serialize" "serde" "serde_derive" "smallvec/serde" "half/serde") ("default"))))))

(define-public crate-tract-core-0.6.0 (c (n "tract-core") (v "0.6.0") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.6.0") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "0vc06kw9sl6fx01a141j7nd3dp4158kr0ymfzfzmb8c9bv5bwii0") (f (quote (("default"))))))

(define-public crate-tract-core-0.6.1 (c (n "tract-core") (v "0.6.1") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.6.1") (d #t) (k 0)))) (h "1jmkqpc734b8chz9ndc3ywl0isgxfs1zipl1zdmszff8aii8c1x3") (f (quote (("default"))))))

(define-public crate-tract-core-0.6.2 (c (n "tract-core") (v "0.6.2") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.6.2") (d #t) (k 0)))) (h "0na6c3wx60icn0njdrhmyxk4islh33nyqmy52lww4sbr9d3afyf8") (f (quote (("default"))))))

(define-public crate-tract-core-0.6.3 (c (n "tract-core") (v "0.6.3") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "= 0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.6.3") (d #t) (k 0)))) (h "1ayqsm3hsw68wxqylw0rg53w1wrnx943ppd39w9fdblw6j99jbdb") (f (quote (("default"))))))

(define-public crate-tract-core-0.7.0 (c (n "tract-core") (v "0.7.0") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.7.0") (d #t) (k 0)))) (h "0l5zzdr7m3f582fqgk9n0q5pnzv4jl1cy9lsgxaikf0n8rddljw1") (f (quote (("default"))))))

(define-public crate-tract-core-0.8.0 (c (n "tract-core") (v "0.8.0") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.8.0") (d #t) (k 0)))) (h "1hg742m7z63mja23dzaggwp3qqw9kz6bjr241yw1zzlaqkki73nc") (f (quote (("default"))))))

(define-public crate-tract-core-0.9.0 (c (n "tract-core") (v "0.9.0") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.9.0") (d #t) (k 0)))) (h "1jsq9gn0n8r03rdywnvsgc8slli31l3pigjjb8yiqrp844kclw0f") (f (quote (("default"))))))

(define-public crate-tract-core-0.9.1 (c (n "tract-core") (v "0.9.1") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.9.1") (d #t) (k 0)))) (h "18k26bbcapqszna9bxfc6kbi5vcxll3f1sxz7j61ld44y0ymcmxn") (f (quote (("default"))))))

(define-public crate-tract-core-0.9.2 (c (n "tract-core") (v "0.9.2") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.9.2") (d #t) (k 0)))) (h "0npgklcl4h36af7g8mwd7wfx4rk1pvalchwl52714zrh1yfc74y1") (f (quote (("default"))))))

(define-public crate-tract-core-0.10.0 (c (n "tract-core") (v "0.10.0") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "=0.4.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.10.0") (d #t) (k 0)))) (h "1if12bk13mm3cdchqqxqv7qhnhsfdg8pyr0ik7zgchqlfqfxg3yc") (f (quote (("default"))))))

(define-public crate-tract-core-0.10.2 (c (n "tract-core") (v "0.10.2") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "=0.4.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.10.2") (d #t) (k 0)))) (h "0sawfjmfq09km69kqafbsdq5jc79baqrwpq0s9yxjqqmss7hp70y") (f (quote (("default"))))))

(define-public crate-tract-core-0.10.3 (c (n "tract-core") (v "0.10.3") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "=0.4.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.10.3") (d #t) (k 0)))) (h "1d0g2c9kgdxczyim4piwqnzswqhnjllr7dnybzwl8b0xsjm7j4pj") (f (quote (("default"))))))

(define-public crate-tract-core-0.10.4 (c (n "tract-core") (v "0.10.4") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "=0.4.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.10.4") (d #t) (k 0)))) (h "1c2crlsraqdn3029lhv37q959spj8hnzz2rsrvzhzl6l3280m9fq") (f (quote (("default"))))))

(define-public crate-tract-core-0.10.5 (c (n "tract-core") (v "0.10.5") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "=0.4.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.10.5") (d #t) (k 0)))) (h "1b1kb2qgnd5k3c2646vazklzbjjkaf0mlhip3rkqs7bwn5dxnsph") (f (quote (("default"))))))

(define-public crate-tract-core-0.10.6 (c (n "tract-core") (v "0.10.6") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "=0.4.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.10.6") (d #t) (k 0)))) (h "1w0jz5m53vxa2lld1nlbzak8rskvmca9rdi5pqqbz2k31w730fn1") (f (quote (("default"))))))

(define-public crate-tract-core-0.10.7 (c (n "tract-core") (v "0.10.7") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "=0.4.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.10.7") (d #t) (k 0)))) (h "01ffa9947wc0li5aqfwpd3wxnc98w9rwxfq6zv8ma7g6rikxsxv7") (f (quote (("default"))))))

(define-public crate-tract-core-0.10.8 (c (n "tract-core") (v "0.10.8") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "=0.4.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.10.8") (d #t) (k 0)))) (h "18xln7cz3bs0drv1557j8iz1yhmksqjaiyi5vs76w4dxhapcl81q") (f (quote (("default")))) (y #t)))

(define-public crate-tract-core-0.10.9 (c (n "tract-core") (v "0.10.9") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "=0.4.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.10.9") (d #t) (k 0)))) (h "1zzyrdjx96fdb5gnc4l3ldwzk0j4znn4d91afd3y78q0lzl9i6kc") (f (quote (("default"))))))

(define-public crate-tract-core-0.10.10 (c (n "tract-core") (v "0.10.10") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "=0.4.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.10.10") (d #t) (k 0)))) (h "1k4wzydxlnnnqzqq3bl1m2piclffhihpv25q2yvmns7n9dwkmaql") (f (quote (("default"))))))

(define-public crate-tract-core-0.11.0 (c (n "tract-core") (v "0.11.0") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "=0.4.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.11.0") (d #t) (k 0)))) (h "155fkjpb7j70y46xr17yxwcbzwij5kvyihjlgnsq2gpmqg78y1l8") (f (quote (("default"))))))

(define-public crate-tract-core-0.11.1 (c (n "tract-core") (v "0.11.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "=0.4.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.11.1") (d #t) (k 0)))) (h "06dfcc5b1y7axdj7sffsri08rl4i934jgczblpfs6p9463sswyqy") (f (quote (("default"))))))

(define-public crate-tract-core-0.11.2 (c (n "tract-core") (v "0.11.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "=0.4.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-data") (r "^0.11.2") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.11.2") (d #t) (k 0)))) (h "02f3is05z5df6g0q0wcy54vkhzp2zl2lsdwvqhds6xh9fcbirvj6") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.12.0 (c (n "tract-core") (v "0.12.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "=0.4.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-data") (r "^0.12.0") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.12.0") (d #t) (k 0)))) (h "19m5lfax7syac386mq5mxmzvxzlgdriws73fxscy4j01hlcf4679") (f (quote (("paranoid_assertions") ("default")))) (y #t)))

(define-public crate-tract-core-0.12.1 (c (n "tract-core") (v "0.12.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "=0.4.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-data") (r "^0.12.1") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.12.1") (d #t) (k 0)))) (h "055q1nmnfwr3waaklnpw9g6kqw6almj7myrwl0v3a9hw7ydg3m74") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.12.2 (c (n "tract-core") (v "0.12.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "=0.4.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-data") (r "^0.12.2") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.12.2") (d #t) (k 0)))) (h "0bx6svz86l8zpv49bayl0r96ly22hg04jwz5n2xldwrbsz9fl978") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.12.3 (c (n "tract-core") (v "0.12.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "=0.4.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-data") (r "^0.12.3") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.12.3") (d #t) (k 0)))) (h "1j1blsqddlh3pv5wbnwfl8j44pvfv3wdq89jwh9xbqhzixasm0k2") (f (quote (("paranoid_assertions") ("default")))) (y #t)))

(define-public crate-tract-core-0.12.4 (c (n "tract-core") (v "0.12.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "=0.4.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-data") (r "^0.12.4") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.12.4") (d #t) (k 0)))) (h "13xswrvxyl2kzm4vc5d2jkmwrqnv1klm8jcd5y7c3nmy4hs1xmmp") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.12.5 (c (n "tract-core") (v "0.12.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "=0.4.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-data") (r "^0.12.5") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.12.5") (d #t) (k 0)))) (h "076sm8sbnzaw3m89pxwx6056n55zy4ynr0q0fwwgb4lfy66q99q2") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.13.0 (c (n "tract-core") (v "0.13.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "=0.4.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-data") (r "=0.13.0") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.13.0") (d #t) (k 0)))) (h "07c74dzdmwvs2g6d75y80lllf7gsrykkk72brmyh7hzpjvl9vnrm") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.13.1 (c (n "tract-core") (v "0.13.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "=0.4.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-data") (r "=0.13.1") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.13.1") (d #t) (k 0)))) (h "0phs3h8drm84d4k9wyhhz41y4q8gfdkm0a2z764jd1x7xwsk92ss") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.13.2 (c (n "tract-core") (v "0.13.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "=0.4.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "=0.13.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-data") (r "=0.13.2") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.13.2") (d #t) (k 0)))) (h "0dsdg4728m44zjm7z5rafxnfi0icikypkxywa2afz034k4s1srp8") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.14.0 (c (n "tract-core") (v "0.14.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-data") (r "=0.14.0") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.14.0") (d #t) (k 0)))) (h "0jqr8xdv5725gk84c9m74wdhcx4ryaar7n6x9qxh6l0s9d36b58l") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.14.1 (c (n "tract-core") (v "0.14.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-data") (r "=0.14.1") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.14.1") (d #t) (k 0)))) (h "1c0hffw2kal29pjsp11jmf8ig23siw1gkg3q2s7nvi1w207im009") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.14.2 (c (n "tract-core") (v "0.14.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-data") (r "=0.14.2") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.14.2") (d #t) (k 0)))) (h "1m7zpsn8bza8kaby105a7f1jgdy1z3npqbiyp9hcpzxnjf13r461") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.15.0 (c (n "tract-core") (v "0.15.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-data") (r "=0.15.0") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.15.0") (d #t) (k 0)))) (h "0cg3j3p1d34g2w9r77p682sqj6w8x20mzh9b89hhl7p1na1x6r37") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.15.1 (c (n "tract-core") (v "0.15.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-data") (r "=0.15.1") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.15.1") (d #t) (k 0)))) (h "0jmpblganfiqzfknk44mphc2ank4023l5xp9gmnzijmq79ahfz5q") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.15.2 (c (n "tract-core") (v "0.15.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-data") (r "=0.15.2") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.15.2") (d #t) (k 0)))) (h "07dbz3cdda1xdkwlac2zm4hbb4fsk85n413xvsjpbx8fpyx6g1f6") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.15.3 (c (n "tract-core") (v "0.15.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "half") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "tract-data") (r "=0.15.3") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.15.3") (d #t) (k 0)))) (h "0cvw95i7vifybrayqjvm8n0h6fc7g7i4pkhkapbqylcllv7c5swy") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.15.4 (c (n "tract-core") (v "0.15.4") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "half") (r "^1.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.15.4") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.15.4") (d #t) (k 0)))) (h "1dn81a8i1ysm4prrbhdn6dvqbynwq3l5mpsxfqnkp9qna6d0n5fd") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.15.5 (c (n "tract-core") (v "0.15.5") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "half") (r "^1.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.15.5") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.15.5") (d #t) (k 0)))) (h "1hr6730cc26wvgjfm5f0z44vx0jlapsz2bnnhq18nbcylvqgg2xy") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.15.7 (c (n "tract-core") (v "0.15.7") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "half") (r "^1.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.15.7") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.15.7") (d #t) (k 0)))) (h "1jj825zn6glcr542zfwc2z55x43y4yxcx5k0hblpbgnmy1kwrsga") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.15.8 (c (n "tract-core") (v "0.15.8") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "half") (r "^1.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.15.8") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.15.8") (d #t) (k 0)))) (h "0yf8r6371656nj7zlz05g4sfawin6aa1kclk1dx8bc38fvkj9hhf") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.16.0 (c (n "tract-core") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.16.0") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.16.0") (d #t) (k 0)))) (h "036raw305r4gidv4inwaivmvxsk0ql0kfpqakxa2z7bdqmz9cmkj") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.16.1 (c (n "tract-core") (v "0.16.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.16.1") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.16.1") (d #t) (k 0)))) (h "07hp0s7nsmxh2zvs9d4dr08b41izsf8vdh3dr0wl9skdh47fknm3") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.16.2 (c (n "tract-core") (v "0.16.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.16.2") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.16.2") (d #t) (k 0)))) (h "06gjlikizmp6jb18aq8h5ljvwb7p9ml4mghj5zmmmqr0vbgxysia") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.16.3 (c (n "tract-core") (v "0.16.3") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.16.3") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.16.3") (d #t) (k 0)))) (h "05i5vnh4lw6zv3q67zf2cwhpwr7vb81vvss8ic8y7s22kr7pb54m") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.16.4 (c (n "tract-core") (v "0.16.4") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.16.4") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.16.4") (d #t) (k 0)))) (h "1y3r70drjwf2f3i6lj32smai0dmimhsd87z4c3r25bd9j7pdiwkl") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.16.5 (c (n "tract-core") (v "0.16.5") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.16.5") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.16.5") (d #t) (k 0)))) (h "1f1l7d2d6sri3y6dq8c8iw3wrgxbngrmfkylbzhb02jrgz0fld0l") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.16.6 (c (n "tract-core") (v "0.16.6") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.16.6") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.16.6") (d #t) (k 0)))) (h "1d3szwqilyzh0dzc6ihiqgjzmngbjbv51h1ah6vqfnql45g3zrks") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.16.7 (c (n "tract-core") (v "0.16.7") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.16.7") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.16.7") (d #t) (k 0)))) (h "0d70jj65a9z3s3n0ykz32hgrj0zw9d2irad9r76k1dwlf43yf9br") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.16.8 (c (n "tract-core") (v "0.16.8") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.16.8") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.16.8") (d #t) (k 0)))) (h "11ll69w3bv1c7grbl8gw3iyndv8zl8ffn0lxk6yid4jrzdhr2wqq") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.16.9 (c (n "tract-core") (v "0.16.9") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.16.9") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.16.9") (d #t) (k 0)))) (h "1hyd8kzmypnnc9imb6zjab8sv1sgb1ifhwmw43k1xa7lfp9dw25x") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.17.0 (c (n "tract-core") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.17.0") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.17.0") (d #t) (k 0)))) (h "05nki1hsvagzr1ff2rr2nyj4wmqr0z4qyr18kxks7wvv0hly15zx") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.17.1 (c (n "tract-core") (v "0.17.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.17.1") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.17.1") (d #t) (k 0)))) (h "1hw1ckhhi761ddlhjcns2fyrigwaq35ybmp3vakk9rw429hnm750") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.17.2 (c (n "tract-core") (v "0.17.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.17.2") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.17.2") (d #t) (k 0)))) (h "1hfxrbnwbp92d4kaqkb3yviz9r21znpg33lik4hwgiqbadnhc8rw") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.17.3 (c (n "tract-core") (v "0.17.3") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.17.3") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.17.3") (d #t) (k 0)))) (h "0ls5wz2af5d0wnbq9rlfc2bl6kjz8j79r7cn4wi22jfydpl498d3") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.17.4 (c (n "tract-core") (v "0.17.4") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.17.4") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.17.4") (d #t) (k 0)))) (h "0kqmk43dfxbsmnrq757qjclfkjsa87bq70bnc7lyqjfn44j75y44") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.17.7 (c (n "tract-core") (v "0.17.7") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.17.7") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.17.7") (d #t) (k 0)))) (h "05k0fb7apdaz8h7haxcyxlrxjx38inl2h1m0zfmr1csrq8l4jmci") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.18.0 (c (n "tract-core") (v "0.18.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.18.0") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.18.0") (d #t) (k 0)))) (h "17l7f63jpb7myfybv7kwd92mmzh0f87kvr39azx288zdyxrmq8g7") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.17.8 (c (n "tract-core") (v "0.17.8") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.17.8") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.17.8") (d #t) (k 0)))) (h "09pjvnajpn17px1lc7f4phrmlnlp6hbwlc3p65kr4rj9rljxj1w6") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.17.9 (c (n "tract-core") (v "0.17.9") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.17.9") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.17.9") (d #t) (k 0)))) (h "0n1r7z78gdqykr7fs8l6w4wg4q9dyqz8218y3a5bbnj4nyxc2blm") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.18.1 (c (n "tract-core") (v "0.18.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.18.1") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.18.1") (d #t) (k 0)))) (h "0q52pnar3lalqbpgk93mp1ifw7jxx1sxk8i3g0dhcvpmyvj8sp7g") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.18.2 (c (n "tract-core") (v "0.18.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.18.2") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.18.2") (d #t) (k 0)))) (h "0gy3scjfpa3ja7f60hzfy6mnhgsngmyjpyydim7a9lwy6bcikgvj") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.18.3 (c (n "tract-core") (v "0.18.3") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.18.3") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.18.3") (d #t) (k 0)))) (h "09afy5zd551ff4k2pm25sd2i65prha6a8hi2cf80n35803fhi43l") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.18.4 (c (n "tract-core") (v "0.18.4") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.18.4") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.18.4") (d #t) (k 0)))) (h "126xsz399q6ax5yj9bh2li3dly4vdnpa86mahhpyvrxcrrfxplmb") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.18.5 (c (n "tract-core") (v "0.18.5") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.18.5") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.18.5") (d #t) (k 0)))) (h "1qgvmfnpdi454snbqrk5yyprdpxa1vs11w1gwlsf40hgz921y67a") (f (quote (("paranoid_assertions") ("default"))))))

(define-public crate-tract-core-0.19.0-alpha.8 (c (n "tract-core") (v "0.19.0-alpha.8") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.19.0-alpha.8") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.19.0-alpha.8") (d #t) (k 0)))) (h "0386035wk43jpc1r8xz7dmdgi6013sdr81iw2r8fkgabkxwi02r3") (f (quote (("paranoid_assertions") ("default" "paranoid_assertions")))) (r "1.65")))

(define-public crate-tract-core-0.19.0-alpha.14 (c (n "tract-core") (v "0.19.0-alpha.14") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "^0.19.0-alpha.14") (d #t) (k 0)) (d (n "tract-linalg") (r "^0.19.0-alpha.14") (d #t) (k 0)))) (h "0gbk93jnsqxgmvf8m1bbq1j7bhvjxn5h2ap74radl0wzchxrscpa") (f (quote (("paranoid_assertions") ("default" "paranoid_assertions")))) (r "1.65")))

(define-public crate-tract-core-0.19.0-alpha.17 (c (n "tract-core") (v "0.19.0-alpha.17") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.19.0-alpha.17") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.19.0-alpha.17") (d #t) (k 0)))) (h "0aniikkm4mqrmy0bslhkzg1frd5h28bzv15mjr9zysay7j2ajq18") (f (quote (("paranoid_assertions") ("default" "paranoid_assertions")))) (r "1.65")))

(define-public crate-tract-core-0.19.0-alpha.18 (c (n "tract-core") (v "0.19.0-alpha.18") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.19.0-alpha.18") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.19.0-alpha.18") (d #t) (k 0)))) (h "01g7q9d85jayf2wpm4qwwd66h8whnny7vip67fixhb2967qvmahs") (f (quote (("paranoid_assertions") ("default" "paranoid_assertions")))) (r "1.65")))

(define-public crate-tract-core-0.19.0-alpha.19 (c (n "tract-core") (v "0.19.0-alpha.19") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.19.0-alpha.19") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.19.0-alpha.19") (d #t) (k 0)))) (h "17w23byjh0d6xi5y2843z1wqfki7cwr9zh2rrfr0pyx27fi1avsd") (f (quote (("paranoid_assertions") ("default" "paranoid_assertions")))) (r "1.65")))

(define-public crate-tract-core-0.19.0 (c (n "tract-core") (v "0.19.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.19.0") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.19.0") (d #t) (k 0)))) (h "1q8g4snkp94fcddi5a45ggi96n33is4i17iaccrk8ndrvf4qacb9") (f (quote (("paranoid_assertions") ("default" "paranoid_assertions")))) (r "1.65")))

(define-public crate-tract-core-0.19.1 (c (n "tract-core") (v "0.19.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.19.1") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.19.1") (d #t) (k 0)))) (h "0sqrmmr210krzyypl3gi1x3m2dmb8clncmpdcjj8g9chdp0p77my") (f (quote (("paranoid_assertions") ("default" "paranoid_assertions")))) (r "1.65")))

(define-public crate-tract-core-0.19.2 (c (n "tract-core") (v "0.19.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.19.2") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.19.2") (d #t) (k 0)))) (h "1sl62x7xrm68xkdff4m9circ3k5wl3nk9ipnl4jpr0sqs20lk8ig") (f (quote (("paranoid_assertions") ("default" "paranoid_assertions")))) (r "1.65")))

(define-public crate-tract-core-0.19.3 (c (n "tract-core") (v "0.19.3") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.19.3") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.19.3") (d #t) (k 0)))) (h "1j2372aal71mpdymsfwnb1wfy925qbrga45pgr4mr59b7l1qm61z") (f (quote (("paranoid_assertions") ("default" "paranoid_assertions")))) (y #t) (r "1.65")))

(define-public crate-tract-core-0.19.5 (c (n "tract-core") (v "0.19.5") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.19.5") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.19.5") (d #t) (k 0)))) (h "1x9jd36533a6qvcwlbvj5sj76wapj2v3pij89iy49b4bc6ypbf6l") (f (quote (("paranoid_assertions") ("default" "paranoid_assertions")))) (r "1.65")))

(define-public crate-tract-core-0.19.6 (c (n "tract-core") (v "0.19.6") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.19.6") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.19.6") (d #t) (k 0)))) (h "0p1mnpb35bfqh1a3c06rx2m5h24fanj8130l5ph45iwx3mdimaij") (f (quote (("paranoid_assertions") ("default" "paranoid_assertions")))) (y #t) (r "1.65")))

(define-public crate-tract-core-0.19.7 (c (n "tract-core") (v "0.19.7") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.19.7") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.19.7") (d #t) (k 0)))) (h "1636f2bws5xa6pn4pzbwsln7a63byf2452zd9pxnd031ljzw2s8c") (f (quote (("paranoid_assertions") ("default" "paranoid_assertions")))) (r "1.65")))

(define-public crate-tract-core-0.19.8 (c (n "tract-core") (v "0.19.8") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.19.8") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.19.8") (d #t) (k 0)))) (h "1hvl56093nkvpgg2s6f0wa66z8fixqvjh0gqxr7y553xsq8yqfiy") (f (quote (("paranoid_assertions") ("default" "paranoid_assertions")))) (r "1.65")))

(define-public crate-tract-core-0.19.9 (c (n "tract-core") (v "0.19.9") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.19.9") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.19.9") (d #t) (k 0)))) (h "1q6b83qdzszaspiyikqmxnbnnz21780ishwjprdbfj05pp31103f") (f (quote (("paranoid_assertions") ("default" "paranoid_assertions")))) (y #t) (r "1.65")))

(define-public crate-tract-core-0.19.10 (c (n "tract-core") (v "0.19.10") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.19.10") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.19.10") (d #t) (k 0)))) (h "0yajvkv4mzrcy7rrbwpl2ywr13m2scvwzlcf44yaif7977d5b0ac") (f (quote (("paranoid_assertions") ("default" "paranoid_assertions")))) (r "1.65")))

(define-public crate-tract-core-0.19.11 (c (n "tract-core") (v "0.19.11") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.19.11") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.19.11") (d #t) (k 0)))) (h "1hk9fnw7pwj99s8v8ql9f687ky6v04rag4lsj6w4rpd33iaf9ffb") (f (quote (("paranoid_assertions") ("default" "paranoid_assertions")))) (r "1.65")))

(define-public crate-tract-core-0.19.12 (c (n "tract-core") (v "0.19.12") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.19.12") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.19.12") (d #t) (k 0)))) (h "018fi5y794qqszrqwd9wshxlcdhznspvms7cndjl32pns4jv6nrl") (f (quote (("paranoid_assertions") ("default" "paranoid_assertions")))) (r "1.65")))

(define-public crate-tract-core-0.19.13 (c (n "tract-core") (v "0.19.13") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.19.13") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.19.13") (d #t) (k 0)))) (h "1a3zcpvy8xqrygaml0l9ya3lxir0gga6fhffyrzc0bq7gq209ymj") (f (quote (("paranoid_assertions") ("default" "paranoid_assertions")))) (r "1.65")))

(define-public crate-tract-core-0.19.14 (c (n "tract-core") (v "0.19.14") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.19.14") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.19.14") (d #t) (k 0)))) (h "04vk8dz5mbrvqp074nifr296l8lnlpzcpy9p47kwlzqx5nlziad1") (f (quote (("paranoid_assertions") ("default" "paranoid_assertions")))) (r "1.65")))

(define-public crate-tract-core-0.19.15 (c (n "tract-core") (v "0.19.15") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.19.15") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.19.15") (d #t) (k 0)))) (h "1i7pzy6c20v9pd2vi4k4dkfrbqi13c2dhnmn3h5vja0bll0pqhdz") (f (quote (("paranoid_assertions") ("default" "paranoid_assertions")))) (r "1.65")))

(define-public crate-tract-core-0.20.0 (c (n "tract-core") (v "0.20.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.20.0") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.20.0") (d #t) (k 0)))) (h "0mnchr2izbdwclb6393z1jrqncrib2iflvbm7vjn3l5327pljfi6") (f (quote (("paranoid_assertions") ("default") ("complex" "tract-data/complex" "tract-linalg/complex")))) (r "1.65")))

(define-public crate-tract-core-0.20.2 (c (n "tract-core") (v "0.20.2") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.20.2") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.20.2") (d #t) (k 0)))) (h "1gqbn9zk2d5gqhqsxxgh522bq36gndqm971x9zjfhf58hlpkrbi1") (f (quote (("paranoid_assertions") ("default") ("complex" "tract-data/complex" "tract-linalg/complex")))) (r "1.65")))

(define-public crate-tract-core-0.20.3 (c (n "tract-core") (v "0.20.3") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.20.3") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.20.3") (d #t) (k 0)))) (h "0z6sbhmyvm9brqdqlm1nl7bc0pxbz5c1zbijn13d4pbxpaj00m11") (f (quote (("paranoid_assertions") ("default") ("complex" "tract-data/complex" "tract-linalg/complex")))) (r "1.65")))

(define-public crate-tract-core-0.20.4 (c (n "tract-core") (v "0.20.4") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.20.4") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.20.4") (d #t) (k 0)))) (h "1pdr3d7v2irwwav4s6smaxi0xlzxdjhgjdd5cgzwzcx1lm35h4gr") (f (quote (("paranoid_assertions") ("default") ("complex" "tract-data/complex" "tract-linalg/complex")))) (r "1.65")))

(define-public crate-tract-core-0.20.5 (c (n "tract-core") (v "0.20.5") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.20.5") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.20.5") (d #t) (k 0)))) (h "1znxiyvc2n9icdhs8r07fjvh93zcnqpwrmf0mzwaab0zwj8d5q72") (f (quote (("paranoid_assertions") ("default") ("complex" "tract-data/complex" "tract-linalg/complex")))) (r "1.65")))

(define-public crate-tract-core-0.20.6 (c (n "tract-core") (v "0.20.6") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.20.6") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.20.6") (d #t) (k 0)))) (h "05w2df6kmkyparsnvhpi4zjpdlkpv0j0w1hz715mm5vm1vapgrj2") (f (quote (("paranoid_assertions") ("default") ("complex" "tract-data/complex" "tract-linalg/complex")))) (r "1.65")))

(define-public crate-tract-core-0.19.16 (c (n "tract-core") (v "0.19.16") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "educe") (r "^0.4.18") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.19.16") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.19.16") (d #t) (k 0)))) (h "140vycrm76gcpna2xi4bvv13a3bqq3bs3qnwajhwb0dghr21xsfs") (f (quote (("paranoid_assertions") ("default" "paranoid_assertions")))) (r "1.65")))

(define-public crate-tract-core-0.20.7 (c (n "tract-core") (v "0.20.7") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.20.7") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.20.7") (d #t) (k 0)))) (h "07fgjd3gsxwrs3yjlyfbhklgwirp3p3xjnbnvrm34n0jp311h58x") (f (quote (("paranoid_assertions") ("default") ("complex" "tract-data/complex" "tract-linalg/complex")))) (r "1.65")))

(define-public crate-tract-core-0.20.8 (c (n "tract-core") (v "0.20.8") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.20.8") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.20.8") (d #t) (k 0)))) (h "1q0v5nryv3503qxwrpjghz8cv7v3m71js00hii9ncjza1p7md75f") (f (quote (("paranoid_assertions") ("default") ("complex" "tract-data/complex" "tract-linalg/complex")))) (r "1.65")))

(define-public crate-tract-core-0.20.10 (c (n "tract-core") (v "0.20.10") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.20.10") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.20.10") (d #t) (k 0)))) (h "1bw03qwqyg5an2klsgzvgcja30sisa4908kd071fpd7rl1g13j4b") (f (quote (("paranoid_assertions") ("default") ("complex" "tract-data/complex" "tract-linalg/complex")))) (r "1.65")))

(define-public crate-tract-core-0.20.11 (c (n "tract-core") (v "0.20.11") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.20.11") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.20.11") (d #t) (k 0)))) (h "06x11fra9q8bqbbcxb7ffvaph9vznahyyh5gpkm6ldnb2hfbbzwi") (f (quote (("paranoid_assertions") ("default") ("complex" "tract-data/complex" "tract-linalg/complex")))) (r "1.65")))

(define-public crate-tract-core-0.20.12 (c (n "tract-core") (v "0.20.12") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.20.12") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.20.12") (d #t) (k 0)))) (h "18s0jjv25bmpnl81iwknwrr1c3b2whx43n5359a6l3pgsv08lrvs") (f (quote (("paranoid_assertions") ("default") ("complex" "tract-data/complex" "tract-linalg/complex")))) (r "1.65")))

(define-public crate-tract-core-0.20.13 (c (n "tract-core") (v "0.20.13") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.20.13") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.20.13") (d #t) (k 0)))) (h "1fpdr42vqd96zmhrs83wd7jrqdl8bxmqs9mm0p2phk5y1d2k5g7z") (f (quote (("paranoid_assertions") ("default") ("complex" "tract-data/complex" "tract-linalg/complex")))) (r "1.65")))

(define-public crate-tract-core-0.20.14 (c (n "tract-core") (v "0.20.14") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.20.14") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.20.14") (d #t) (k 0)))) (h "1abf0kyx5nzszki0km3gs7sz419s8q0n391f35qnswnhq5v02irm") (f (quote (("paranoid_assertions") ("default") ("complex" "tract-data/complex" "tract-linalg/complex")))) (r "1.65")))

(define-public crate-tract-core-0.20.15 (c (n "tract-core") (v "0.20.15") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.20.15") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.20.15") (d #t) (k 0)))) (h "0bq9n917xm98aa8i34ik1b3nggra438zigrm5mpiryyz0ndx3c5h") (f (quote (("paranoid_assertions") ("default") ("complex" "tract-data/complex" "tract-linalg/complex")))) (r "1.65")))

(define-public crate-tract-core-0.20.16 (c (n "tract-core") (v "0.20.16") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.20.16") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.20.16") (d #t) (k 0)))) (h "1rv4is8xzf4awrzw7cjj237x2kl0p09gm78bh2np01i6nv37x5l8") (f (quote (("paranoid_assertions") ("default") ("complex" "tract-data/complex" "tract-linalg/complex")))) (r "1.65")))

(define-public crate-tract-core-0.20.17 (c (n "tract-core") (v "0.20.17") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.20.17") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.20.17") (d #t) (k 0)))) (h "1sqca0m0202c4r7kxgfg6y7kas627zaasmbyqn1sdg9bng7hhsqq") (f (quote (("paranoid_assertions") ("default") ("complex" "tract-data/complex" "tract-linalg/complex")))) (r "1.65")))

(define-public crate-tract-core-0.20.18 (c (n "tract-core") (v "0.20.18") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.20.18") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.20.18") (d #t) (k 0)))) (h "1hafdvssv1h96kr0bjhb6684wwm72fs84vc42m99q21fxwjkzp7f") (f (quote (("paranoid_assertions") ("default") ("complex" "tract-data/complex" "tract-linalg/complex")))) (r "1.65")))

(define-public crate-tract-core-0.20.19 (c (n "tract-core") (v "0.20.19") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.20.19") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.20.19") (d #t) (k 0)))) (h "0jf2dhny5jq5lk6pfkdbp5gfcg2jkpx5idjmcfhvpkh2812ydla1") (f (quote (("paranoid_assertions") ("default") ("complex" "tract-data/complex" "tract-linalg/complex")))) (r "1.65")))

(define-public crate-tract-core-0.20.20 (c (n "tract-core") (v "0.20.20") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.20.20") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.20.20") (d #t) (k 0)))) (h "0xri16s3ikiviy26154xsqqxvcxyr4mcsmw6skm8l7i3xq7lgngh") (f (quote (("paranoid_assertions") ("default") ("complex" "tract-data/complex" "tract-linalg/complex")))) (r "1.65")))

(define-public crate-tract-core-0.20.21 (c (n "tract-core") (v "0.20.21") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.20.21") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.20.21") (d #t) (k 0)))) (h "1zncy98kxwz4jfn1jhpsr4ji77y5j47w798pr2jzx057nh2xylzz") (f (quote (("paranoid_assertions") ("default") ("complex" "tract-data/complex" "tract-linalg/complex")))) (r "1.65")))

(define-public crate-tract-core-0.20.22 (c (n "tract-core") (v "0.20.22") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.20.22") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.20.22") (d #t) (k 0)))) (h "1c49lks1czhpda5gghmwgc74y2b36bx9lcd6ywz5111sb4h2zfk0") (f (quote (("paranoid_assertions") ("default") ("complex" "tract-data/complex" "tract-linalg/complex")))) (r "1.65")))

(define-public crate-tract-core-0.21.0 (c (n "tract-core") (v "0.21.0") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.21.0") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.21.0") (d #t) (k 0)))) (h "07b3739ym80h0f9qdp0k9kj077zhilpac7f23d0kl6ls2di1d7l6") (f (quote (("paranoid_assertions") ("default") ("complex" "tract-data/complex" "tract-linalg/complex")))) (r "1.75")))

(define-public crate-tract-core-0.21.1 (c (n "tract-core") (v "0.21.1") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.21.1") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.21.1") (d #t) (k 0)))) (h "16c6n6zb5mc243vd9i9y7myrrk3qhnprshd0zxf3i89ndgzjq7xn") (f (quote (("paranoid_assertions") ("default") ("complex" "tract-data/complex" "tract-linalg/complex")))) (r "1.75")))

(define-public crate-tract-core-0.21.2 (c (n "tract-core") (v "0.21.2") (d (list (d (n "accelerate-src") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "blis-src") (r "^0.2") (f (quote ("static" "pthreads"))) (o #t) (d #t) (k 0)) (d (n "cblas") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10") (f (quote ("static"))) (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.21.2") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.21.2") (d #t) (k 0)))) (h "0sim32pfig1spay5526m039lfq42pv644wpsyyjg9b2qdxw7pz3j") (f (quote (("paranoid_assertions") ("openblas" "blas" "openblas-src") ("default") ("complex" "tract-data/complex" "tract-linalg/complex") ("blis" "blas" "blis-src") ("blas" "cblas") ("accelerate" "blas" "accelerate-src")))) (y #t) (r "1.75")))

(define-public crate-tract-core-0.21.3 (c (n "tract-core") (v "0.21.3") (d (list (d (n "accelerate-src") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "blis-src") (r "^0.2") (f (quote ("static" "pthreads"))) (o #t) (d #t) (k 0)) (d (n "cblas") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10") (f (quote ("static"))) (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.21.3") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.21.3") (d #t) (k 0)))) (h "1vfkzxb46hg8fnbii6qq4bhmzd62na71vmd51jzf8d2fbl23fi1n") (f (quote (("paranoid_assertions") ("openblas" "blas" "openblas-src") ("default") ("complex" "tract-data/complex" "tract-linalg/complex") ("blis" "blas" "blis-src") ("blas" "cblas") ("accelerate" "blas" "accelerate-src")))) (r "1.75")))

(define-public crate-tract-core-0.21.4 (c (n "tract-core") (v "0.21.4") (d (list (d (n "accelerate-src") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "blis-src") (r "^0.2") (f (quote ("static" "pthreads"))) (o #t) (d #t) (k 0)) (d (n "cblas") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10") (f (quote ("static"))) (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.21.4") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.21.4") (d #t) (k 0)))) (h "0zfbi1s416mhz8b99121v2zk8mwyrhyqmrqig008vs4l5lgkxvwq") (f (quote (("paranoid_assertions") ("openblas" "blas" "openblas-src") ("default") ("complex" "tract-data/complex" "tract-linalg/complex") ("blis" "blas" "blis-src") ("blas" "cblas") ("accelerate" "blas" "accelerate-src")))) (r "1.75")))

(define-public crate-tract-core-0.21.5 (c (n "tract-core") (v "0.21.5") (d (list (d (n "accelerate-src") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "bit-set") (r "^0.5.2") (d #t) (k 0)) (d (n "blis-src") (r "^0.2") (f (quote ("static" "pthreads"))) (o #t) (d #t) (k 0)) (d (n "cblas") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10") (f (quote ("static"))) (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rustfft") (r "^6.1") (f (quote ("neon"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tract-data") (r "=0.21.5") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.21.5") (d #t) (k 0)))) (h "0pnq74wx7jvy50q0qcm78nlzvxy4iwv3mdk1yvgz519xbzgdaliw") (f (quote (("paranoid_assertions") ("openblas" "blas" "openblas-src") ("default") ("complex" "tract-data/complex" "tract-linalg/complex") ("blis" "blas" "blis-src") ("blas" "cblas") ("accelerate" "blas" "accelerate-src")))) (r "1.75")))

