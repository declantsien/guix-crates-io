(define-module (crates-io tr ac tracing-aliyun-sls) #:use-module (crates-io))

(define-public crate-tracing-aliyun-sls-0.1.0 (c (n "tracing-aliyun-sls") (v "0.1.0") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "miniz_oxide") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 0)))) (h "09j2fjghp5ps2x6xfsx3p9wdlbj5awk7dihrysppzgb4m8229jwg") (f (quote (("lz4" "lz4_flex") ("deflate" "miniz_oxide")))) (y #t)))

(define-public crate-tracing-aliyun-sls-0.1.1 (c (n "tracing-aliyun-sls") (v "0.1.1") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "miniz_oxide") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 0)))) (h "0xvx2hs079zdhvdniw8gimmq0dm3f4qhhm3q65c3915f2z85mmw0") (f (quote (("lz4" "lz4_flex") ("deflate" "miniz_oxide")))) (y #t)))

(define-public crate-tracing-aliyun-sls-0.1.2 (c (n "tracing-aliyun-sls") (v "0.1.2") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "miniz_oxide") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 0)))) (h "0j34gghjfraab9yzagxzgllgf6jphkdx65lj4xkqi5c6wzq8iwzh") (f (quote (("lz4" "lz4_flex") ("deflate" "miniz_oxide"))))))

(define-public crate-tracing-aliyun-sls-0.2.0 (c (n "tracing-aliyun-sls") (v "0.2.0") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "blake3") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "miniz_oxide") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 0)))) (h "0svfn0wii2bjirj55gxa28zf1sykjdbggh9s11q5x923v77jhnrq") (f (quote (("rustls" "reqwest/rustls-tls") ("lz4" "lz4_flex") ("log-comp" "log" "tracing-log") ("derive-key" "blake3") ("deflate" "miniz_oxide") ("default" "reqwest/default-tls"))))))

