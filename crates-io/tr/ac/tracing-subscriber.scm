(define-module (crates-io tr ac tracing-subscriber) #:use-module (crates-io))

(define-public crate-tracing-subscriber-0.0.0 (c (n "tracing-subscriber") (v "0.0.0") (h "0076d58dsan34lp4y37iz5kxjlcm67rrinjl0ci4l0wsmn29609g")))

(define-public crate-tracing-subscriber-0.0.1-alpha.1 (c (n "tracing-subscriber") (v "0.0.1-alpha.1") (d (list (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)))) (h "0bvphm3g2s32vi28xybc67qsg08qxp04vw4gzpg92n3ysbv93hxk")))

(define-public crate-tracing-subscriber-0.0.1-alpha.2 (c (n "tracing-subscriber") (v "0.0.1-alpha.2") (d (list (d (n "crossbeam-utils") (r "^0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-fmt") (r "^0.0.1-alpha.2") (d #t) (k 2)))) (h "1ih4x96k0r9barvri69ccg3pmxpghmykjc0n1rdp5a6wf4blw2nh") (f (quote (("filter" "matchers" "regex" "lazy_static") ("default" "filter" "smallvec"))))))

(define-public crate-tracing-subscriber-0.0.1-alpha.4 (c (n "tracing-subscriber") (v "0.0.1-alpha.4") (d (list (d (n "ansi_term") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "owning_ref") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">= 0.7, < 0.10") (f (quote ("owning_ref"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.0.1-alpha.1") (o #t) (d #t) (k 0)))) (h "1lz0j0r77zjf25f1ssalkd370l5s460g9kmcqhl0s4h3rd53lv5a") (f (quote (("fmt" "owning_ref" "parking_lot") ("filter" "matchers" "regex" "lazy_static") ("default" "filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.1.0 (c (n "tracing-subscriber") (v "0.1.0") (d (list (d (n "ansi_term") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "owning_ref") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">= 0.7, < 0.10") (f (quote ("owning_ref"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (o #t) (k 0)))) (h "0ijmh02c095lp2hhiasc4afv5cg2i3xzr30hxmsnpxkx1zarrzix") (f (quote (("fmt" "owning_ref" "parking_lot") ("filter" "matchers" "regex" "lazy_static") ("default" "filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.1.1 (c (n "tracing-subscriber") (v "0.1.1") (d (list (d (n "ansi_term") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "owning_ref") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">= 0.7, < 0.10") (f (quote ("owning_ref"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (o #t) (k 0)))) (h "18dahqps97z7hb6ckk8sk7dwksq6nd0kzfys563xxg0zh9qvjar1") (f (quote (("fmt" "owning_ref" "parking_lot") ("filter" "matchers" "regex" "lazy_static") ("default" "filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.1.2 (c (n "tracing-subscriber") (v "0.1.2") (d (list (d (n "ansi_term") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "owning_ref") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">= 0.7, < 0.10") (f (quote ("owning_ref"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)))) (h "1prjb7vkjxhwp77k6pvfl7mwpaj5jwzcjggh4w8xm9kkib41xw4h") (f (quote (("fmt" "owning_ref") ("filter" "env-filter") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.1.3 (c (n "tracing-subscriber") (v "0.1.3") (d (list (d (n "ansi_term") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "owning_ref") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">= 0.7, < 0.10") (f (quote ("owning_ref"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)))) (h "0m2i4ga7gr524xsifk36x1za5b69zhf7bvy092ipm6fg15wwrwgh") (f (quote (("fmt" "owning_ref") ("filter" "env-filter") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.1.4 (c (n "tracing-subscriber") (v "0.1.4") (d (list (d (n "ansi_term") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "owning_ref") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">= 0.7, < 0.10") (f (quote ("owning_ref"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)))) (h "0bn6911zky2wg8ndvrj38v02hml0hpk0g49h0d3kf52klxqiffy6") (f (quote (("fmt" "owning_ref") ("filter" "env-filter") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.1.5 (c (n "tracing-subscriber") (v "0.1.5") (d (list (d (n "ansi_term") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "owning_ref") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">= 0.7, < 0.10") (f (quote ("owning_ref"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)))) (h "0k9finzhcaqkvq35a7knr1n53hncdf9lz29v1cxhpwcr599bprk3") (f (quote (("fmt" "owning_ref") ("filter" "env-filter") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.1.6 (c (n "tracing-subscriber") (v "0.1.6") (d (list (d (n "ansi_term") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "owning_ref") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">= 0.7, < 0.10") (f (quote ("owning_ref"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.1") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.1") (d #t) (k 2)))) (h "0i9fhlyz8mn2znpgmi5bv9y24pwpkkgfxs0rwcf6dl6djmjs2b0r") (f (quote (("fmt" "owning_ref") ("filter" "env-filter") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.0-alpha.1 (c (n "tracing-subscriber") (v "0.2.0-alpha.1") (d (list (d (n "ansi_term") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">= 0.7, < 0.10") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.0.6") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "03xdn9i96q6cd6pkm8dpgnslmybnpgcj72m6j3nb58lp4nw4fyl5") (f (quote (("registry" "sharded-slab") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.0-alpha.2 (c (n "tracing-subscriber") (v "0.2.0-alpha.2") (d (list (d (n "ansi_term") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">= 0.7, < 0.10") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "1s509ka6drzaszish4rv2hgv80qfxfq59hbxdr4gilb80ismhzjb") (f (quote (("registry" "sharded-slab") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.0-alpha.3 (c (n "tracing-subscriber") (v "0.2.0-alpha.3") (d (list (d (n "ansi_term") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">= 0.7, < 0.10") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "19pwjyspan6aar08a6x4i1bxharqd6blpr505p24wnbx4cbxnnx6") (f (quote (("registry" "sharded-slab") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term")))) (y #t)))

(define-public crate-tracing-subscriber-0.2.0-alpha.4 (c (n "tracing-subscriber") (v "0.2.0-alpha.4") (d (list (d (n "ansi_term") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">= 0.7, < 0.10") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "0qb3dp6mdgm0x910bx26rk6iax3mahymzb0gbaxyzpms5vgqrv2i") (f (quote (("registry" "sharded-slab") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.0-alpha.5 (c (n "tracing-subscriber") (v "0.2.0-alpha.5") (d (list (d (n "ansi_term") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">= 0.7, < 0.10") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "15pcv42752is18dn6im7vhf58y9mmd8vq0xj5yh4hn8sv0lz6ma0") (f (quote (("registry" "sharded-slab") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.0-alpha.6 (c (n "tracing-subscriber") (v "0.2.0-alpha.6") (d (list (d (n "ansi_term") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">= 0.7, < 0.10") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "10mlwmpdhk5nqx96vrlr8pb4h2zv2xrixdfd3x1wswmfq9jsny41") (f (quote (("registry" "sharded-slab") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.0 (c (n "tracing-subscriber") (v "0.2.0") (d (list (d (n "ansi_term") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">= 0.7, < 0.10") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "1x588fjv3k93jf9f8i8my12snkzcnl2qmbmrri3j64clfzj3dp15") (f (quote (("registry" "sharded-slab") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.1 (c (n "tracing-subscriber") (v "0.2.1") (d (list (d (n "ansi_term") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">= 0.7, < 0.10") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "02ddpl5nxbdhdkjkmls672d95w9hyzblppxhi68n9687mgszrfy6") (f (quote (("registry" "sharded-slab") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.2 (c (n "tracing-subscriber") (v "0.2.2") (d (list (d (n "ansi_term") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">= 0.7, < 0.10") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "04bi341hbk9fmab0ywqyb4z9hxby5xackdc00zpwy59mgflw3zzy") (f (quote (("registry" "sharded-slab") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.3 (c (n "tracing-subscriber") (v "0.2.3") (d (list (d (n "ansi_term") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">= 0.7, < 0.10") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "082cy7516dvcq672wnj0q202aw5fm3314fmbdcfjc0ivh7svrpny") (f (quote (("registry" "sharded-slab") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.4 (c (n "tracing-subscriber") (v "0.2.4") (d (list (d (n "ansi_term") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">= 0.7, < 0.10") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "033gvl3dy9yp4bfgagy8diyjq3m6vqbcp6f36pghlvxy8pr0vifg") (f (quote (("registry" "sharded-slab") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.5 (c (n "tracing-subscriber") (v "0.2.5") (d (list (d (n "ansi_term") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">= 0.7, < 0.10") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.0.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "1li6g1hw2q3wz39c5g9kvw1q9jl6d3r87x0zsapcjsdai42c8lqx") (f (quote (("registry" "sharded-slab") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.6 (c (n "tracing-subscriber") (v "0.2.6") (d (list (d (n "ansi_term") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <0.10") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.0.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "06d1lb92zknb4isd1xc993a12ahlykzbm05mw7v8zqq9j52ip884") (f (quote (("registry" "sharded-slab") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.7 (c (n "tracing-subscriber") (v "0.2.7") (d (list (d (n "ansi_term") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.0.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "0n8nnwg77g99h1ak74f5m2l3fi97wid1l0adc7przmjfxkrqqb67") (f (quote (("registry" "sharded-slab") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.8 (c (n "tracing-subscriber") (v "0.2.8") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.0.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "0m6h9w6mwgg1847v0q7yx67r94pa2xddfs5lrb336m1zjjdqkzna") (f (quote (("registry" "sharded-slab") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.9 (c (n "tracing-subscriber") (v "0.2.9") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.0.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "1fn7267kx96bfd62ng5w88szp19hwn6irmxy7ixinj62jmqdvxg4") (f (quote (("registry" "sharded-slab") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.10 (c (n "tracing-subscriber") (v "0.2.10") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.0.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.12") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "1p4gynll95hrfbydlk7f5dvzf91aqkclc9n1g0vhrazj5s5kzczp") (f (quote (("registry" "sharded-slab") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.11 (c (n "tracing-subscriber") (v "0.2.11") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.0.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.12") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.1") (o #t) (d #t) (k 0)))) (h "0h2gb161ij08r6m823fvh9hq7psnfyipgk0immasbmy43hqnbldb") (f (quote (("registry" "sharded-slab" "thread_local") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.12 (c (n "tracing-subscriber") (v "0.2.12") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.0.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.16") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "042cy0f29c3rh6rc42vkij3vk7sjbj5dp63ihch8chvnm9wm1fw2") (f (quote (("registry" "sharded-slab" "thread_local") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.13 (c (n "tracing-subscriber") (v "0.2.13") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.0.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.17") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "1pgfqclbxny0wsqj696mmbyk0r4vp96a9hzszcx31akpakhsbw2f") (f (quote (("registry" "sharded-slab" "thread_local") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static" "tracing") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.14 (c (n "tracing-subscriber") (v "0.2.14") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.17") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "17fpp46sakn4rwv0fp9f2rm9lx352x0adaqc2ifqj62vkl5nc418") (f (quote (("registry" "sharded-slab" "thread_local") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static" "tracing") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.15 (c (n "tracing-subscriber") (v "0.2.15") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.17") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "009lxq14kmakv16sh6r7fy0264xbvs81kg6yr57lwnaciw68zym1") (f (quote (("registry" "sharded-slab" "thread_local") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static" "tracing") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.16 (c (n "tracing-subscriber") (v "0.2.16") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.16") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.17") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "15mvk1fh9aag0h14r80xnys6zpcprihr76gp85hi49yaqdm9df4a") (f (quote (("registry" "sharded-slab" "thread_local") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static" "tracing") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.17 (c (n "tracing-subscriber") (v "0.2.17") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.16") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.17") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "1ajv10w2k16aprdb8mxk672xmnwxh80sm9jpsfjqxxivz339cl3h") (f (quote (("registry" "sharded-slab" "thread_local") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static" "tracing") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.18 (c (n "tracing-subscriber") (v "0.2.18") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.16") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.17") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "1mfwc3xz8zzi5kvizhxgcqdx8swj55f0hfs9psf7rfl312zm6mda") (f (quote (("registry" "sharded-slab" "thread_local") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static" "tracing") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.19 (c (n "tracing-subscriber") (v "0.2.19") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.16") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.17") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "0j6yg01c5zir4x6qmz9k491vaa254msjnbf6wf5xk97w86bh2sdb") (f (quote (("registry" "sharded-slab" "thread_local") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static" "tracing") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.20 (c (n "tracing-subscriber") (v "0.2.20") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.16") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.17") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "1zjckpawpmvrrvpiv0b3f0x4iac2llh05qjxrq05kqx75xxfijxr") (f (quote (("registry" "sharded-slab" "thread_local") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static" "tracing") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.21 (c (n "tracing-subscriber") (v "0.2.21") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.16") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.20") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "0r9sm0vrl7m3js3kap1viamikd140v8hzihb8cbp3ldwaq7rrlpp") (f (quote (("registry" "sharded-slab" "thread_local") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static" "tracing") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term")))) (y #t)))

(define-public crate-tracing-subscriber-0.2.22 (c (n "tracing-subscriber") (v "0.2.22") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.16") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.20") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "0srpswabh0ngh0q8y5hj58mnm3avygai5fp3drvxb2mq21i9dbv2") (f (quote (("registry" "sharded-slab" "thread_local") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static" "tracing") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.23 (c (n "tracing-subscriber") (v "0.2.23") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.16") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.20") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "0s8695g30fgwypl1f2v6k62wbwyc6yhqk0x8nv9d8xyjm5rjxi2n") (f (quote (("registry" "sharded-slab" "thread_local") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static" "tracing") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.24 (c (n "tracing-subscriber") (v "0.2.24") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.16") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.20") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "1qvbz1s1vc4lz2ld5imyav6q23fa5frx423ric2ggfp3py6mdl7x") (f (quote (("registry" "sharded-slab" "thread_local") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static" "tracing") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.2.25 (c (n "tracing-subscriber") (v "0.2.25") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.16") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.20") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "0wcc3sqckjsxaahd9jnc4cwa13m623lhk8fg8way9hn3k6m2w38f") (f (quote (("registry" "sharded-slab" "thread_local") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry") ("env-filter" "matchers" "regex" "lazy_static" "tracing") ("default" "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json") ("ansi" "fmt" "ansi_term"))))))

(define-public crate-tracing-subscriber-0.3.0 (c (n "tracing-subscriber") (v "0.3.0") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros"))) (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.20") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "114wj3saxbxj7sy3gihqmql319qnwr1lh76454x513n3vnsnby2w") (f (quote (("std" "alloc" "tracing-core/std") ("registry" "sharded-slab" "thread_local" "std") ("local-time" "time/local-offset") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry" "std") ("env-filter" "matchers" "regex" "lazy_static" "tracing" "std") ("default" "smallvec" "fmt" "ansi" "tracing-log" "std") ("ansi" "fmt" "ansi_term") ("alloc"))))))

(define-public crate-tracing-subscriber-0.3.1 (c (n "tracing-subscriber") (v "0.3.1") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros"))) (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.20") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "0lnadwzxby5g4xn7vxxhwryk62f3q9pwybh6k2iqs79if3gdv940") (f (quote (("std" "alloc" "tracing-core/std") ("registry" "sharded-slab" "thread_local" "std") ("local-time" "time/local-offset") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry" "std") ("env-filter" "matchers" "regex" "lazy_static" "tracing" "std") ("default" "smallvec" "fmt" "ansi" "tracing-log" "std") ("ansi" "fmt" "ansi_term") ("alloc"))))))

(define-public crate-tracing-subscriber-0.3.2 (c (n "tracing-subscriber") (v "0.3.2") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros"))) (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.20") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "0gb1q5k1pixig50gspkr3c1qi6h62dxwanybrh3xz7401xifq1vm") (f (quote (("std" "alloc" "tracing-core/std") ("registry" "sharded-slab" "thread_local" "std") ("local-time" "time/local-offset") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry" "std") ("env-filter" "matchers" "regex" "lazy_static" "tracing" "std") ("default" "smallvec" "fmt" "ansi" "tracing-log" "std") ("ansi" "fmt" "ansi_term") ("alloc"))))))

(define-public crate-tracing-subscriber-0.3.3 (c (n "tracing-subscriber") (v "0.3.3") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros"))) (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.20") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "1lxl7ksj72mb0xa5g357sazg32bpnm6312s17ygp5i3zrjaacp94") (f (quote (("std" "alloc" "tracing-core/std") ("registry" "sharded-slab" "thread_local" "std") ("local-time" "time/local-offset") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry" "std") ("env-filter" "matchers" "regex" "lazy_static" "tracing" "std") ("default" "smallvec" "fmt" "ansi" "tracing-log" "std") ("ansi" "fmt" "ansi_term") ("alloc")))) (r "1.42.0")))

(define-public crate-tracing-subscriber-0.3.4 (c (n "tracing-subscriber") (v "0.3.4") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros"))) (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.20") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "0vy33cn5bjkr3pz4ivhvdb7mbbq37s44qy6rw2crc1z1k5ki7rnm") (f (quote (("std" "alloc" "tracing-core/std") ("registry" "sharded-slab" "thread_local" "std") ("local-time" "time/local-offset") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry" "std") ("env-filter" "matchers" "regex" "lazy_static" "tracing" "std") ("default" "smallvec" "fmt" "ansi" "tracing-log" "std") ("ansi" "fmt" "ansi_term") ("alloc")))) (r "1.42.0")))

(define-public crate-tracing-subscriber-0.3.5 (c (n "tracing-subscriber") (v "0.3.5") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros"))) (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.20") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "157mz6q0ljpragrj4hsv5rchyabsbfc7r0sb0g5rik142jlbz0ax") (f (quote (("std" "alloc" "tracing-core/std") ("registry" "sharded-slab" "thread_local" "std") ("local-time" "time/local-offset") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry" "std") ("env-filter" "matchers" "regex" "lazy_static" "tracing" "std") ("default" "smallvec" "fmt" "ansi" "tracing-log" "std") ("ansi" "fmt" "ansi_term") ("alloc")))) (r "1.42.0")))

(define-public crate-tracing-subscriber-0.3.6 (c (n "tracing-subscriber") (v "0.3.6") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros"))) (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.20") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "1kxfkxf00n2s1ak0131z7lbkicz7pwkz4h3k9a9vpvjfbi26dgkp") (f (quote (("std" "alloc" "tracing-core/std") ("registry" "sharded-slab" "thread_local" "std") ("local-time" "time/local-offset") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry" "std") ("env-filter" "matchers" "regex" "lazy_static" "tracing" "std") ("default" "smallvec" "fmt" "ansi" "tracing-log" "std") ("ansi" "fmt" "ansi_term") ("alloc")))) (r "1.42.0")))

(define-public crate-tracing-subscriber-0.3.7 (c (n "tracing-subscriber") (v "0.3.7") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.1.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros"))) (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.20") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "08mwd8ldfcihsd5mmkf493rd1jjc3z56qnjz85vy521mzqjz64jk") (f (quote (("std" "alloc" "tracing-core/std") ("registry" "sharded-slab" "thread_local" "std") ("local-time" "time/local-offset") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry" "std") ("env-filter" "matchers" "regex" "lazy_static" "tracing" "std") ("default" "smallvec" "fmt" "ansi" "tracing-log" "std") ("ansi" "fmt" "ansi_term") ("alloc")))) (r "1.42.0")))

(define-public crate-tracing-subscriber-0.3.8 (c (n "tracing-subscriber") (v "0.3.8") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.7, <=0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.1.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros"))) (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.22") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (t "cfg(tracing_unstable)") (k 0)) (d (n "valuable_crate") (r "^0.1.0") (o #t) (t "cfg(tracing_unstable)") (k 0) (p "valuable")))) (h "1anrcqwhh6785483zv18fdf6vr7v32bysyllzqggbz1k6gj6qy3l") (f (quote (("valuable" "tracing-core/valuable" "valuable_crate" "valuable-serde" "tracing-serde/valuable") ("std" "alloc" "tracing-core/std") ("registry" "sharded-slab" "thread_local" "std") ("local-time" "time/local-offset") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry" "std") ("env-filter" "matchers" "regex" "lazy_static" "tracing" "std") ("default" "smallvec" "fmt" "ansi" "tracing-log" "std") ("ansi" "fmt" "ansi_term") ("alloc")))) (r "1.42.0")))

(define-public crate-tracing-subscriber-0.3.9 (c (n "tracing-subscriber") (v "0.3.9") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.1.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros"))) (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.22") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (t "cfg(tracing_unstable)") (k 0)) (d (n "valuable_crate") (r "^0.1.0") (o #t) (t "cfg(tracing_unstable)") (k 0) (p "valuable")))) (h "1kjx2pfdvbga9aw60vrf9h1x1a5qm763lgx7zf3ml0v2r6yvf2ly") (f (quote (("valuable" "tracing-core/valuable" "valuable_crate" "valuable-serde" "tracing-serde/valuable") ("std" "alloc" "tracing-core/std") ("registry" "sharded-slab" "thread_local" "std") ("local-time" "time/local-offset") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry" "std") ("env-filter" "matchers" "regex" "lazy_static" "tracing" "std") ("default" "smallvec" "fmt" "ansi" "tracing-log" "std") ("ansi" "fmt" "ansi_term") ("alloc")))) (r "1.49.0")))

(define-public crate-tracing-subscriber-0.3.10 (c (n "tracing-subscriber") (v "0.3.10") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.1.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros"))) (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.22") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (t "cfg(tracing_unstable)") (k 0)) (d (n "valuable_crate") (r "^0.1.0") (o #t) (t "cfg(tracing_unstable)") (k 0) (p "valuable")))) (h "0lmwxd1f35k1sgbs5s95bxmlh1ffz2q0dpfr00sd0ffh6yq9ipxr") (f (quote (("valuable" "tracing-core/valuable" "valuable_crate" "valuable-serde" "tracing-serde/valuable") ("std" "alloc" "tracing-core/std") ("registry" "sharded-slab" "thread_local" "std") ("local-time" "time/local-offset") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry" "std") ("env-filter" "matchers" "regex" "lazy_static" "tracing" "std" "thread_local") ("default" "smallvec" "fmt" "ansi" "tracing-log" "std") ("ansi" "fmt" "ansi_term") ("alloc")))) (r "1.49.0")))

(define-public crate-tracing-subscriber-0.3.11 (c (n "tracing-subscriber") (v "0.3.11") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.1.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros"))) (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.22") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (t "cfg(tracing_unstable)") (k 0)) (d (n "valuable_crate") (r "^0.1.0") (o #t) (t "cfg(tracing_unstable)") (k 0) (p "valuable")))) (h "15i5pyxb0y2y9jhfhd4wlhkmyq51rws3vx76cizh6f7zpa9qzhjb") (f (quote (("valuable" "tracing-core/valuable" "valuable_crate" "valuable-serde" "tracing-serde/valuable") ("std" "alloc" "tracing-core/std") ("registry" "sharded-slab" "thread_local" "std") ("local-time" "time/local-offset") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry" "std") ("env-filter" "matchers" "regex" "lazy_static" "tracing" "std" "thread_local") ("default" "smallvec" "fmt" "ansi" "tracing-log" "std") ("ansi" "fmt" "ansi_term") ("alloc")))) (r "1.49.0")))

(define-public crate-tracing-subscriber-0.3.12 (c (n "tracing-subscriber") (v "0.3.12") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.1.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.22") (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (t "cfg(tracing_unstable)") (k 0)) (d (n "valuable_crate") (r "^0.1.0") (o #t) (t "cfg(tracing_unstable)") (k 0) (p "valuable")))) (h "1np424jvihnbymgj8ivypmxhr6aci4xl23i0yks5c2yjr9swxfyg") (f (quote (("valuable" "tracing-core/valuable" "valuable_crate" "valuable-serde" "tracing-serde/valuable") ("std" "alloc" "tracing-core/std") ("registry" "sharded-slab" "thread_local" "std") ("local-time" "time/local-offset") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry" "std") ("env-filter" "matchers" "regex" "once_cell" "tracing" "std" "thread_local") ("default" "smallvec" "fmt" "ansi" "tracing-log" "std") ("ansi" "fmt" "ansi_term") ("alloc")))) (y #t) (r "1.49.0")))

(define-public crate-tracing-subscriber-0.3.13 (c (n "tracing-subscriber") (v "0.3.13") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.1.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.28") (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (t "cfg(tracing_unstable)") (k 0)) (d (n "valuable_crate") (r "^0.1.0") (o #t) (t "cfg(tracing_unstable)") (k 0) (p "valuable")))) (h "1bx9m3cnsgw73pvmrjdswr0dyg74fvnyri0r5j8g2fvbwpppz850") (f (quote (("valuable" "tracing-core/valuable" "valuable_crate" "valuable-serde" "tracing-serde/valuable") ("std" "alloc" "tracing-core/std") ("registry" "sharded-slab" "thread_local" "std") ("local-time" "time/local-offset") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry" "std") ("env-filter" "matchers" "regex" "once_cell" "tracing" "std" "thread_local") ("default" "smallvec" "fmt" "ansi" "tracing-log" "std") ("ansi" "fmt" "ansi_term") ("alloc")))) (y #t) (r "1.49.0")))

(define-public crate-tracing-subscriber-0.3.14 (c (n "tracing-subscriber") (v "0.3.14") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.1.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.28") (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (t "cfg(tracing_unstable)") (k 0)) (d (n "valuable_crate") (r "^0.1.0") (o #t) (t "cfg(tracing_unstable)") (k 0) (p "valuable")))) (h "0n9a28g3pdvvw4z81pwkldlinzqischkfy3pfmmncnia6hhk8w9s") (f (quote (("valuable" "tracing-core/valuable" "valuable_crate" "valuable-serde" "tracing-serde/valuable") ("std" "alloc" "tracing-core/std") ("registry" "sharded-slab" "thread_local" "std") ("local-time" "time/local-offset") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry" "std") ("env-filter" "matchers" "regex" "once_cell" "tracing" "std" "thread_local") ("default" "smallvec" "fmt" "ansi" "tracing-log" "std") ("ansi" "fmt" "ansi_term") ("alloc")))) (r "1.49.0")))

(define-public crate-tracing-subscriber-0.3.15 (c (n "tracing-subscriber") (v "0.3.15") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matchers") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.1.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.28") (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.2") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.2") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (t "cfg(tracing_unstable)") (k 0)) (d (n "valuable_crate") (r "^0.1.0") (o #t) (t "cfg(tracing_unstable)") (k 0) (p "valuable")))) (h "0swfmg310n4688n2qi2wdbfyf8zacpzazn9ajm01n6fs481qdnv0") (f (quote (("valuable" "tracing-core/valuable" "valuable_crate" "valuable-serde" "tracing-serde/valuable") ("std" "alloc" "tracing-core/std") ("registry" "sharded-slab" "thread_local" "std") ("local-time" "time/local-offset") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry" "std") ("env-filter" "matchers" "regex" "once_cell" "tracing" "std" "thread_local") ("default" "smallvec" "fmt" "ansi" "tracing-log" "std") ("ansi" "fmt" "ansi_term") ("alloc")))) (r "1.49.0")))

(define-public crate-tracing-subscriber-0.3.16 (c (n "tracing-subscriber") (v "0.3.16") (d (list (d (n "criterion") (r "^0.3.6") (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "matchers") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0.140") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.9.0") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.1.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3.2") (f (quote ("formatting"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3.2") (f (quote ("formatting" "macros"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (o #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.30") (k 0)) (d (n "tracing-futures") (r "^0.2.0") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.3") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (t "cfg(tracing_unstable)") (k 0)) (d (n "valuable_crate") (r "^0.1.0") (o #t) (t "cfg(tracing_unstable)") (k 0) (p "valuable")))) (h "0w2sdf97g1ynbmk3j4q6sxmjgaalgf4pg4vl374x0w6x4sp6w5x6") (f (quote (("valuable" "tracing-core/valuable" "valuable_crate" "valuable-serde" "tracing-serde/valuable") ("std" "alloc" "tracing-core/std") ("registry" "sharded-slab" "thread_local" "std") ("local-time" "time/local-offset") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry" "std") ("env-filter" "matchers" "regex" "once_cell" "tracing" "std" "thread_local") ("default" "smallvec" "fmt" "ansi" "tracing-log" "std") ("ansi" "fmt" "nu-ansi-term") ("alloc")))) (r "1.50.0")))

(define-public crate-tracing-subscriber-0.3.17 (c (n "tracing-subscriber") (v "0.3.17") (d (list (d (n "criterion") (r "^0.3.6") (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "matchers") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (f (quote ("std" "unicode-case" "unicode-perl"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0.140") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.9.0") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.1.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3.2") (f (quote ("formatting"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3.2") (f (quote ("formatting" "macros"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (o #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.30") (k 0)) (d (n "tracing-futures") (r "^0.2.0") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.1.3") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (t "cfg(tracing_unstable)") (k 0)) (d (n "valuable_crate") (r "^0.1.0") (o #t) (t "cfg(tracing_unstable)") (k 0) (p "valuable")))) (h "0xvwfpmb943hdy4gzyn7a2azgigf30mfd1kx10gyh5gr6yy539ih") (f (quote (("valuable" "tracing-core/valuable" "valuable_crate" "valuable-serde" "tracing-serde/valuable") ("std" "alloc" "tracing-core/std") ("registry" "sharded-slab" "thread_local" "std") ("local-time" "time/local-offset") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry" "std") ("env-filter" "matchers" "regex" "once_cell" "tracing" "std" "thread_local") ("default" "smallvec" "fmt" "ansi" "tracing-log" "std") ("ansi" "fmt" "nu-ansi-term") ("alloc")))) (r "1.56.0")))

(define-public crate-tracing-subscriber-0.3.18 (c (n "tracing-subscriber") (v "0.3.18") (d (list (d (n "chrono") (r "^0.4.26") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3.6") (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "matchers") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (f (quote ("std" "unicode-case" "unicode-perl"))) (o #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 2)) (d (n "serde") (r "^1.0.140") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (o #t) (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.9.0") (o #t) (d #t) (k 0)) (d (n "thread_local") (r "^1.1.4") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3.2") (f (quote ("formatting"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3.2") (f (quote ("formatting" "macros"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (o #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.30") (k 0)) (d (n "tracing-futures") (r "^0.2.0") (f (quote ("std-future" "std"))) (k 2)) (d (n "tracing-log") (r "^0.2.0") (f (quote ("log-tracer" "std"))) (o #t) (k 0)) (d (n "tracing-log") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-serde") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (t "cfg(tracing_unstable)") (k 0)) (d (n "valuable_crate") (r "^0.1.0") (o #t) (t "cfg(tracing_unstable)") (k 0) (p "valuable")))) (h "12vs1bwk4kig1l2qqjbbn2nm5amwiqmkcmnznylzmnfvjy6083xd") (f (quote (("valuable" "tracing-core/valuable" "valuable_crate" "valuable-serde" "tracing-serde/valuable") ("std" "alloc" "tracing-core/std") ("registry" "sharded-slab" "thread_local" "std") ("local-time" "time/local-offset") ("json" "tracing-serde" "serde" "serde_json") ("fmt" "registry" "std") ("env-filter" "matchers" "regex" "once_cell" "tracing" "std" "thread_local") ("default" "smallvec" "fmt" "ansi" "tracing-log" "std") ("ansi" "fmt" "nu-ansi-term") ("alloc")))) (r "1.63.0")))

