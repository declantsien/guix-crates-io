(define-module (crates-io tr ac tracing-stackdriver) #:use-module (crates-io))

(define-public crate-tracing-stackdriver-0.0.1 (c (n "tracing-stackdriver") (v "0.0.1") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.13") (f (quote ("std" "attributes" "async-await"))) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "1ka42gs3ykda967bnjp3gw3xwdwd230ixbxiivr69jv221q7r96q")))

(define-public crate-tracing-stackdriver-0.1.0 (c (n "tracing-stackdriver") (v "0.1.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.10") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "0vmndj1ys34a9zbw06x7q0d6gz6rj1j94hhzgrq0yh1gmmwgr9zh")))

(define-public crate-tracing-stackdriver-0.2.0 (c (n "tracing-stackdriver") (v "0.2.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.26") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.10") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "0226hxiwra1jqw12hqnp2i3f72p05pbqhnlgnlj1kcskwdk4qf1z")))

(define-public crate-tracing-stackdriver-0.3.0 (c (n "tracing-stackdriver") (v "0.3.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.31") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.22") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("json"))) (d #t) (k 0)))) (h "0hqbidqn69x7p527ymllck0f7s0f2w3syvqiabp19vczdgbf6xwi")))

(define-public crate-tracing-stackdriver-0.4.0 (c (n "tracing-stackdriver") (v "0.4.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.11") (k 0)) (d (n "time") (r "^0.3.11") (f (quote ("serde" "serde-well-known"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.28") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (o #t) (d #t) (k 0)) (d (n "valuable") (r "^0.1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "1k5brigzk3s0v4nmpvmr0fmzw5rnhpw9m8589nq6apng6lqxdr58") (y #t) (s 2) (e (quote (("valuable" "dep:valuable" "valuable-serde" "http" "url"))))))

(define-public crate-tracing-stackdriver-0.4.1 (c (n "tracing-stackdriver") (v "0.4.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.11") (k 0)) (d (n "time") (r "^0.3.11") (f (quote ("serde" "serde-well-known"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.28") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (o #t) (d #t) (k 0)) (d (n "valuable") (r "^0.1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "049yqpcb4b3xm71yzl3slb5ln17512019n8m1a9binsc3n52fqw1") (y #t) (s 2) (e (quote (("valuable" "dep:valuable" "valuable-serde" "http" "url"))))))

(define-public crate-tracing-stackdriver-0.4.2 (c (n "tracing-stackdriver") (v "0.4.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.11") (f (quote ("formatting"))) (k 0)) (d (n "time") (r "^0.3.11") (f (quote ("serde" "serde-well-known" "formatting"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.28") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (o #t) (d #t) (k 0)) (d (n "valuable") (r "^0.1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "1z9wmgsy3m48z4jn1d5nry5hywfa2ygjvj13qjb7dayl32jbjiiv") (s 2) (e (quote (("valuable" "dep:valuable" "valuable-serde" "http" "url"))))))

(define-public crate-tracing-stackdriver-0.5.0 (c (n "tracing-stackdriver") (v "0.5.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.11") (f (quote ("formatting"))) (k 0)) (d (n "time") (r "^0.3.11") (f (quote ("serde" "serde-well-known" "formatting"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.28") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.15") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (o #t) (d #t) (k 0)) (d (n "valuable") (r "^0.1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "1rqm1w2g3da57zm6jhlrlispqxl6afrn72jyf6ka4pf52fmm0l33") (s 2) (e (quote (("valuable" "dep:valuable" "valuable-serde" "http" "url"))))))

(define-public crate-tracing-stackdriver-0.6.0 (c (n "tracing-stackdriver") (v "0.6.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "time") (r "^0.3.17") (f (quote ("formatting"))) (k 0)) (d (n "time") (r "^0.3.17") (f (quote ("serde" "serde-well-known" "formatting"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.22") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "valuable") (r "^0.1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "0jiql35lq3c2c27lkgr4w275wm6linhiynlfgk3w75kwrw441d1s") (s 2) (e (quote (("valuable" "dep:valuable" "valuable-serde" "http" "url") ("opentelemetry" "dep:opentelemetry" "tracing-opentelemetry"))))))

(define-public crate-tracing-stackdriver-0.6.1 (c (n "tracing-stackdriver") (v "0.6.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "time") (r "^0.3.17") (f (quote ("formatting"))) (k 0)) (d (n "time") (r "^0.3.17") (f (quote ("serde" "serde-well-known" "formatting"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.22") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "valuable") (r "^0.1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "0kj43y9cm8y1ziql587l2kn2kp4kl9sh3z9khnc4xqavnb4qjraa") (s 2) (e (quote (("valuable" "dep:valuable" "valuable-serde" "http" "url") ("opentelemetry" "dep:opentelemetry" "tracing-opentelemetry"))))))

(define-public crate-tracing-stackdriver-0.6.2 (c (n "tracing-stackdriver") (v "0.6.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "time") (r "^0.3.17") (f (quote ("formatting"))) (k 0)) (d (n "time") (r "^0.3.17") (f (quote ("serde" "serde-well-known" "formatting"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.22") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "valuable") (r "^0.1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "0jaccwr1h0p49gx84yvbcpm7gddvchfkmpd3frqp41qyfs8xvygg") (s 2) (e (quote (("valuable" "dep:valuable" "valuable-serde" "http" "url") ("opentelemetry" "dep:opentelemetry" "tracing-opentelemetry"))))))

(define-public crate-tracing-stackdriver-0.7.0 (c (n "tracing-stackdriver") (v "0.7.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("testing" "trace"))) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("formatting"))) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("serde" "serde-well-known" "formatting"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.22") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "valuable") (r "^0.1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "19ijk07zxxkisidhhgc4c7ns0y0nni53a196vfiz446qvfb13mwr") (s 2) (e (quote (("valuable" "dep:valuable" "valuable-serde" "http" "url") ("opentelemetry" "dep:opentelemetry" "tracing-opentelemetry"))))))

(define-public crate-tracing-stackdriver-0.7.1 (c (n "tracing-stackdriver") (v "0.7.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("testing" "trace"))) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("formatting"))) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("serde" "serde-well-known" "formatting"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.22") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "valuable") (r "^0.1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "0i557jjrvmc6xmzrvx65jajpfl50f43wa0ls7gay4wmlnpwdnyfs") (s 2) (e (quote (("valuable" "dep:valuable" "valuable-serde" "http" "url") ("opentelemetry" "dep:opentelemetry" "tracing-opentelemetry"))))))

(define-public crate-tracing-stackdriver-0.7.2 (c (n "tracing-stackdriver") (v "0.7.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (f (quote ("testing" "trace"))) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("formatting"))) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("serde" "serde-well-known" "formatting"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.22") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "valuable") (r "^0.1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "0y004v64qm5q0zzw530mwncirqbhp4ix4ljam3b13k48libyg65c") (s 2) (e (quote (("valuable" "dep:valuable" "valuable-serde" "http" "url") ("opentelemetry" "dep:opentelemetry" "tracing-opentelemetry"))))))

(define-public crate-tracing-stackdriver-0.8.0 (c (n "tracing-stackdriver") (v "0.8.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("testing" "trace"))) (k 2)) (d (n "opentelemetry-stdout") (r "^0.1.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("formatting"))) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("serde" "serde-well-known" "formatting"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.22") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "valuable") (r "^0.1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "1ylsi6zffg5iai8nsdv22hhiv1gd1iyfpzcvsid953h7kcl02hk4") (s 2) (e (quote (("valuable" "dep:valuable" "valuable-serde" "http" "url") ("opentelemetry" "dep:opentelemetry" "tracing-opentelemetry"))))))

(define-public crate-tracing-stackdriver-0.9.0 (c (n "tracing-stackdriver") (v "0.9.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.21.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21.0") (f (quote ("testing" "trace"))) (k 2)) (d (n "opentelemetry-stdout") (r "^0.2.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry_sdk") (r "^0.21.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting"))) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("serde" "serde-well-known" "formatting"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.22") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "valuable") (r "^0.1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "06gid7j4355ycxmrxvalqfkw324s4zbrj674hz9ni3j438gxcxhw") (s 2) (e (quote (("valuable" "dep:valuable" "valuable-serde" "http" "url") ("opentelemetry" "dep:opentelemetry" "tracing-opentelemetry"))))))

(define-public crate-tracing-stackdriver-0.10.0 (c (n "tracing-stackdriver") (v "0.10.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.22.0") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (f (quote ("testing" "trace"))) (k 2)) (d (n "opentelemetry-stdout") (r "^0.3.0") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry_sdk") (r "^0.22.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("formatting"))) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("serde" "serde-well-known" "formatting"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.22") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "valuable") (r "^0.1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "valuable-serde") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "1h9sls6bkvfpsb10v71qpxanjivgqjfdc09garcg1q80w0v8h140") (s 2) (e (quote (("valuable" "dep:valuable" "valuable-serde" "http" "url") ("opentelemetry" "dep:opentelemetry" "tracing-opentelemetry"))))))

