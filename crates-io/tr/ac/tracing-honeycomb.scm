(define-module (crates-io tr ac tracing-honeycomb) #:use-module (crates-io))

(define-public crate-tracing-honeycomb-0.1.0-alpha-1 (c (n "tracing-honeycomb") (v "0.1.0-alpha-1") (d (list (d (n "futures-preview") (r "^0.3.0-alpha.19") (f (quote ("compat"))) (d #t) (k 2)) (d (n "libhoney-rust") (r "^0.1.3") (d #t) (k 0)) (d (n "proptest") (r "^0.9.5") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.12") (d #t) (k 0)) (d (n "tracing-attributes") (r "^0.1.5") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.9") (d #t) (k 0)) (d (n "tracing-distributed") (r "^0.1.0-alpha-1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.0") (d #t) (k 2)))) (h "044cahczgyq9yijywc3d9hbrfdjwc0vm10xmjw3dgc948khlmw0f")))

(define-public crate-tracing-honeycomb-0.1.0 (c (n "tracing-honeycomb") (v "0.1.0") (d (list (d (n "futures-preview") (r "^0.3.0-alpha.19") (f (quote ("compat"))) (d #t) (k 2)) (d (n "libhoney-rust") (r "^0.1.3") (d #t) (k 0)) (d (n "proptest") (r "^0.9.5") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.12") (d #t) (k 0)) (d (n "tracing-attributes") (r "^0.1.5") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.9") (d #t) (k 0)) (d (n "tracing-distributed") (r "^0.1.0") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.0") (d #t) (k 2)))) (h "0gijbcxnazlvj59ccnd1px0hp716k0d679p6xr0y3myc1a8njird")))

(define-public crate-tracing-honeycomb-0.3.0 (c (n "tracing-honeycomb") (v "0.3.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha.19") (f (quote ("compat"))) (d #t) (k 2)) (d (n "libhoney-rust") (r "^0.1.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.9.5") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "sha-1") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.12") (d #t) (k 0)) (d (n "tracing-attributes") (r "^0.1.5") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.9") (d #t) (k 0)) (d (n "tracing-distributed") (r "^0.3") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1072bisl803yh4j8xbhdqv0nsdi9ypdfl8yhspmpswy9jhavrkyr") (f (quote (("use_parking_lot" "parking_lot" "tracing-distributed/use_parking_lot"))))))

(define-public crate-tracing-honeycomb-0.4.0 (c (n "tracing-honeycomb") (v "0.4.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha.19") (f (quote ("compat"))) (d #t) (k 2)) (d (n "libhoney-rust") (r "^0.1.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.9.5") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "sha-1") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.12") (d #t) (k 0)) (d (n "tracing-attributes") (r "^0.1.5") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.9") (d #t) (k 0)) (d (n "tracing-distributed") (r "^0.3") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "06sb9d3h4mli0jhnmymz7paarnzgpdpzxdfqlk5176y4xaq683j8") (f (quote (("use_parking_lot" "parking_lot" "tracing-distributed/use_parking_lot")))) (y #t)))

(define-public crate-tracing-honeycomb-0.4.1 (c (n "tracing-honeycomb") (v "0.4.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha.19") (f (quote ("compat"))) (d #t) (k 2)) (d (n "libhoney-rust") (r "^0.1.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.9.5") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha-1") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.12") (d #t) (k 0)) (d (n "tracing-attributes") (r "^0.1.5") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.9") (d #t) (k 0)) (d (n "tracing-distributed") (r "^0.3") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "043ki4fs0rdsv9jqbr9xid2ihqr364zsxw8a5qj8yldwgpyacx5d") (f (quote (("use_parking_lot" "parking_lot" "tracing-distributed/use_parking_lot"))))))

(define-public crate-tracing-honeycomb-0.4.2 (c (n "tracing-honeycomb") (v "0.4.2") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha.19") (f (quote ("compat"))) (d #t) (k 2)) (d (n "libhoney-rust") (r "^0.1.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.9.5") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha-1") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.12") (d #t) (k 0)) (d (n "tracing-attributes") (r "^0.1.5") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.9") (d #t) (k 0)) (d (n "tracing-distributed") (r "^0.3") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1wg9b0rc6izjs3w9cd58ay15xbfa7n4ybay4pvwvi81rpjn0cka1") (f (quote (("use_parking_lot" "parking_lot" "tracing-distributed/use_parking_lot"))))))

(define-public crate-tracing-honeycomb-0.4.3 (c (n "tracing-honeycomb") (v "0.4.3") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha.19") (f (quote ("compat"))) (d #t) (k 2)) (d (n "libhoney-rust") (r "^0.1.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.9.5") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha-1") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.12") (d #t) (k 0)) (d (n "tracing-attributes") (r "^0.1.5") (d #t) (k 2)) (d (n "tracing-core") (r "^0.1.9") (d #t) (k 0)) (d (n "tracing-distributed") (r ">=0.3, <0.5") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1piiv1f85vfy3d20x6igvk0h14ggdqjmz428dlz4qv12qwdmivfc") (f (quote (("use_parking_lot" "parking_lot" "tracing-distributed/use_parking_lot"))))))

