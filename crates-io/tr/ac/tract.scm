(define-module (crates-io tr ac tract) #:use-module (crates-io))

(define-public crate-tract-0.1.1 (c (n "tract") (v "0.1.1") (d (list (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colored") (r "^1.6") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "insideout") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "open") (r "^1.2") (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.7") (d #t) (k 0)) (d (n "textwrap") (r "^0.10") (d #t) (k 0)) (d (n "tract-core") (r "^0.1.1") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.1.1") (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.1.1") (d #t) (k 0)))) (h "01r3za0yk4gaw6lp6s8q4rh9hg04mjacx09kmvszjm1253vkm3yc") (f (quote (("default") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.2.1 (c (n "tract") (v "0.2.1") (d (list (d (n "ansi_term") (r "^0.11.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.5") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "insideout") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.7") (d #t) (k 0)) (d (n "textwrap") (r "^0.10") (d #t) (k 0)) (d (n "tract-core") (r "^0.2.1") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.2.1") (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.2.1") (d #t) (k 0)))) (h "143zafvmvl435d81ca9r9bq11vipz52nhcbdr70cii4fiz4fh5pl") (f (quote (("default") ("conform" "tract-tensorflow/conform") ("blis" "tract-core/blis"))))))

(define-public crate-tract-0.2.2 (c (n "tract") (v "0.2.2") (d (list (d (n "ansi_term") (r "^0.11.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.5") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "insideout") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.7") (d #t) (k 0)) (d (n "textwrap") (r "^0.10") (d #t) (k 0)) (d (n "tract-core") (r "^0.2.2") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.2.2") (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.2.2") (d #t) (k 0)))) (h "1jcg0v4b3jd75plknghdz3n3ixcf1kllsgdwcw2zgkvld7fn16px") (f (quote (("default") ("conform" "tract-tensorflow/conform") ("blis" "tract-core/blis"))))))

(define-public crate-tract-0.2.4 (c (n "tract") (v "0.2.4") (d (list (d (n "ansi_term") (r "^0.11.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.5") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "insideout") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.7") (d #t) (k 0)) (d (n "textwrap") (r "^0.10") (d #t) (k 0)) (d (n "tract-core") (r "^0.2.4") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.2.4") (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.2.4") (d #t) (k 0)))) (h "11jyzkm1ysbaha65j722jn6bdc8l5sbmn0v0y43gjwxbvvq97fs6") (f (quote (("default") ("conform" "tract-tensorflow/conform") ("blis" "tract-core/blis"))))))

(define-public crate-tract-0.2.5 (c (n "tract") (v "0.2.5") (d (list (d (n "ansi_term") (r "^0.11.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.5") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "insideout") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.7") (d #t) (k 0)) (d (n "textwrap") (r "^0.10") (d #t) (k 0)) (d (n "tract-core") (r "^0.2.5") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.2.5") (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.2.5") (d #t) (k 0)))) (h "0kx5ricc6kqnp5q0pmzgzw7c10ij6dizxmxadnf6fgidprc7qd9v") (f (quote (("default") ("conform" "tract-tensorflow/conform") ("blis" "tract-core/blis"))))))

(define-public crate-tract-0.2.7 (c (n "tract") (v "0.2.7") (d (list (d (n "ansi_term") (r "^0.11.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.5") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "insideout") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.7") (d #t) (k 0)) (d (n "textwrap") (r "^0.10") (d #t) (k 0)) (d (n "tract-core") (r "^0.2.7") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.2.7") (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.2.7") (d #t) (k 0)))) (h "0xw6n3m03jjw39hb6w4dd5gc6krmii16y40zbswkbv87dwisn5dv") (f (quote (("default") ("conform" "tract-tensorflow/conform") ("blis" "tract-core/blis"))))))

(define-public crate-tract-0.2.8 (c (n "tract") (v "0.2.8") (d (list (d (n "ansi_term") (r "^0.11.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.5") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "insideout") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.7") (d #t) (k 0)) (d (n "textwrap") (r "^0.10") (d #t) (k 0)) (d (n "tract-core") (r "^0.2.8") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.2.8") (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.2.8") (d #t) (k 0)))) (h "0z6qhbiai0y2my49zm8szpyzkhy64s8jg4ad4171disbwjy84qq8") (f (quote (("default") ("conform" "tract-tensorflow/conform") ("blis" "tract-core/blis"))))))

(define-public crate-tract-0.2.9 (c (n "tract") (v "0.2.9") (d (list (d (n "ansi_term") (r "^0.11.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.5") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "insideout") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.7") (d #t) (k 0)) (d (n "textwrap") (r "^0.10") (d #t) (k 0)) (d (n "tract-core") (r "^0.2.9") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.2.9") (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.2.9") (d #t) (k 0)))) (h "16wim2gw1p9mvykkahjp3i8xgsbnihy88gv91gsah6d61c6z4w09") (f (quote (("default") ("conform" "tract-tensorflow/conform") ("blis" "tract-core/blis"))))))

(define-public crate-tract-0.3.0 (c (n "tract") (v "0.3.0") (d (list (d (n "ansi_term") (r "^0.11.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "insideout") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.7") (d #t) (k 0)) (d (n "textwrap") (r "^0.10") (d #t) (k 0)) (d (n "tract-core") (r "^0.3") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1w7af455xp29f7v8vr62jckzkn36jw35vw9r522yl75v8lfkhk2l") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("default" "tf" "onnx") ("conform" "tract-tensorflow/conform") ("blis" "tract-core/blis"))))))

(define-public crate-tract-0.3.1 (c (n "tract") (v "0.3.1") (d (list (d (n "ansi_term") (r "^0.11.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "insideout") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.7") (d #t) (k 0)) (d (n "textwrap") (r "^0.10") (d #t) (k 0)) (d (n "tract-core") (r "^0.3.1") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "0xz8r7vkgh30jdbs4k73imbrzxhl5zdm16gd3a59yy2cbxgci6yd") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("default" "tf" "onnx") ("conform" "tract-tensorflow/conform") ("blis" "tract-core/blis"))))))

(define-public crate-tract-0.3.2 (c (n "tract") (v "0.3.2") (d (list (d (n "ansi_term") (r "^0.11.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.7") (d #t) (k 0)) (d (n "textwrap") (r "^0.10") (d #t) (k 0)) (d (n "tract-core") (r "^0.3.2") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.3.2") (o #t) (d #t) (k 0)))) (h "1ycp31liv3i26jmrqm4gbdfh0vdh31d1mk3fgbvm2pwy6i8jw4vc") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("default" "tf" "onnx") ("conform" "tract-tensorflow/conform") ("blis" "tract-core/blis"))))))

(define-public crate-tract-0.3.3 (c (n "tract") (v "0.3.3") (d (list (d (n "ansi_term") (r "^0.11.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.7") (d #t) (k 0)) (d (n "textwrap") (r "^0.10") (d #t) (k 0)) (d (n "tract-core") (r "^0.3.3") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.3.3") (o #t) (d #t) (k 0)))) (h "165qjlkqy22sh6j6iy3gz8l34mxlfkb67r20xc7dz0bsfih291wa") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("default" "tf" "onnx") ("conform" "tract-tensorflow/conform") ("blis" "tract-core/blis"))))))

(define-public crate-tract-0.4.0 (c (n "tract") (v "0.4.0") (d (list (d (n "ansi_term") (r "^0.11.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.4") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "tract-core") (r "^0.4.0") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.4.0") (o #t) (d #t) (k 0)))) (h "0rz832db6hmjrca35k8pjd8dz8w1c09p4gfcng4g39k6aklx8n8m") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.4.1 (c (n "tract") (v "0.4.1") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.4") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "tract-core") (r "^0.4.1") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.4.1") (o #t) (d #t) (k 0)))) (h "12z9vygmcilq7mk8kzwzl5gfjxl4rwp7xggdxkgj1p44fdg135cp") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform")))) (y #t)))

(define-public crate-tract-0.4.2 (c (n "tract") (v "0.4.2") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.4") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "tract-core") (r "^0.4.2") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.4.2") (o #t) (d #t) (k 0)))) (h "0w7cs2ksbk05bb9b40758yk5fvzbbcay9lczvqggvxxjkyhbbsri") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.5.0 (c (n "tract") (v "0.5.0") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.4") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "tract-core") (r "^0.5.0") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.5.0") (o #t) (d #t) (k 0)))) (h "0gsfrfjr0sni0vkgsi5jx99x3y3vhd1qfhfj7vxh602f2rndqpik") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.5.1 (c (n "tract") (v "0.5.1") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.4") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "tract-core") (r "^0.5.1") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (d #t) (k 0)))) (h "0bi7109yjhzbibfi4dyvaaw53h5jdjcansxr8nwi9snjkjzfw2gs") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.5.3 (c (n "tract") (v "0.5.3") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.4") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "ndarray_0_12") (r "^0.12") (d #t) (k 0) (p "ndarray")) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "tract-core") (r "^0.5.3") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (d #t) (k 0)))) (h "043zmgyz48sqkrsb62bsi8vdkhjv7wlfrdqhn5qq3cnm8lci3dvy") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform")))) (y #t)))

(define-public crate-tract-0.5.4 (c (n "tract") (v "0.5.4") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.4") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "ndarray_0_12") (r "^0.12") (d #t) (k 0) (p "ndarray")) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "tract-core") (r "^0.5.4") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (d #t) (k 0)))) (h "1gaw74vx3pj87cyk0ps1qcvjgsldr7q2qygzmm94gj81a6rva4dy") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.5.5 (c (n "tract") (v "0.5.5") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.4") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "ndarray_0_12") (r "^0.12") (d #t) (k 0) (p "ndarray")) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "tract-core") (r "^0.5.5") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.5.5") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.5.5") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.5.5") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (d #t) (k 0)))) (h "07azly5dh6qknzys1p8355a67x8ng96yybq0civdawj27p1r4w3r") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.5.6 (c (n "tract") (v "0.5.6") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.4") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "ndarray_0_12") (r "^0.12") (d #t) (k 0) (p "ndarray")) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "tract-core") (r "^0.5.6") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.5.6") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.5.6") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.5.6") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (d #t) (k 0)))) (h "0qd9y4il4l8zqnipp3wf8i0mii2fqk7k1af2lxjjaqib1hwh8gfz") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.5.7 (c (n "tract") (v "0.5.7") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.4") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "ndarray_0_12") (r "^0.12") (d #t) (k 0) (p "ndarray")) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "tract-core") (r "^0.5.7") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.5.7") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.5.7") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.5.7") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (d #t) (k 0)))) (h "0vx9ckqry6g464gzwbdbywpa63ni82625nf8lgz9pzbwwf52vmj7") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.5.8 (c (n "tract") (v "0.5.8") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.4") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "ndarray_0_12") (r "^0.12") (d #t) (k 0) (p "ndarray")) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "tract-core") (r "^0.5.8") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (d #t) (k 0)))) (h "098ridp0pmrp32rpsfwd70sj7znv578mdscmf1xxfl2rxwfrr5w2") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.5.9 (c (n "tract") (v "0.5.9") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "tract-core") (r "^0.5.9") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.5.9") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.5.9") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.5.9") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (d #t) (k 0)))) (h "0r61mgcn0gin6qrf7pdbymr2zwbvb87f366i00dpnms4s22f735z") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.5.10 (c (n "tract") (v "0.5.10") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "tract-core") (r "^0.5.10") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (d #t) (k 0)))) (h "0xrcrcyspyh8l3ibkdh1inqvbwcv9n1m11s7lrq24rrmqg82y9bl") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.5.11 (c (n "tract") (v "0.5.11") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "tract-core") (r "^0.5.11") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.5.11") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.5.11") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.5.11") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (d #t) (k 0)))) (h "1fsac9bwhsn1zfpvx6i9v456gshd9jxj2d8kk7sk4yhi3l3g4hw6") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.6.0 (c (n "tract") (v "0.6.0") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "tract-core") (r "^0.6.0") (d #t) (k 0)) (d (n "tract-hir") (r "^0.6.0") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (d #t) (k 0)))) (h "08ivrc4zimzx9a8kl6bm7xaz8imcqyc7pflcqridb7pa7dhfnzka") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.6.1 (c (n "tract") (v "0.6.1") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "tract-core") (r "^0.6.1") (d #t) (k 0)) (d (n "tract-hir") (r "^0.6.1") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (d #t) (k 0)))) (h "14qbm2am7spjy99r2j3hbrvzfsijg6d8zv36q748dq8pg8rc2132") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.6.2 (c (n "tract") (v "0.6.2") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "tract-core") (r "^0.6.2") (d #t) (k 0)) (d (n "tract-hir") (r "^0.6.2") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.6.2") (o #t) (d #t) (k 0)))) (h "1wpd7f997v7f8ydq1p54zzp3r4yywfvxfqsjd0ba0pcypswnk2j0") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.6.3 (c (n "tract") (v "0.6.3") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "tract-core") (r "^0.6.3") (d #t) (k 0)) (d (n "tract-hir") (r "^0.6.3") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.6.3") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.6.3") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.6.3") (o #t) (d #t) (k 0)))) (h "03hs1cr246ip3fbi1h5dxx7zkjabqcfmzsa54x0gi38kay02p34j") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.7.0 (c (n "tract") (v "0.7.0") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "=1.3.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.7.0") (d #t) (k 0)) (d (n "tract-hir") (r "^0.7.0") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.7.0") (o #t) (d #t) (k 0)))) (h "1azrvydx42c4yfngnx11qwy64gp7r2agzim0kg6cy888cdqdw6lm") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.8.0 (c (n "tract") (v "0.8.0") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.8.0") (d #t) (k 0)) (d (n "tract-hir") (r "^0.8.0") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.8.0") (o #t) (d #t) (k 0)))) (h "1fmrbkdjbfrxr6bmnsmsm3hmcwrfp3b69x7vs36x1zxk7iizcd9d") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.9.0 (c (n "tract") (v "0.9.0") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.9.0") (d #t) (k 0)) (d (n "tract-hir") (r "^0.9.0") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "1v07gjysk18c5f8p70bwddh0s34gkhkvls061880vc7xxdb6av23") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.9.1 (c (n "tract") (v "0.9.1") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.9.1") (d #t) (k 0)) (d (n "tract-hir") (r "^0.9.1") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.9.1") (o #t) (d #t) (k 0)))) (h "0f0zq9jbixd9s1681dqcxqwcasbhlmayb56q3skq8h1j8s862a3b") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.9.2 (c (n "tract") (v "0.9.2") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.9.2") (d #t) (k 0)) (d (n "tract-hir") (r "^0.9.2") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.9.2") (o #t) (d #t) (k 0)))) (h "0fq52apn4ff6z9kvrjmydy4hl7n9mdf9vb1w82dphs7m5i8wa8f7") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.10.0 (c (n "tract") (v "0.10.0") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.10.0") (d #t) (k 0)) (d (n "tract-hir") (r "^0.10.0") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.10.0") (o #t) (d #t) (k 0)))) (h "11kzpxjdy9l46qr8wmhdscv1m2l2hfzwlrsydydjphrxyr1mhfm7") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.10.2 (c (n "tract") (v "0.10.2") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.10.2") (d #t) (k 0)) (d (n "tract-hir") (r "^0.10.2") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.10.2") (o #t) (d #t) (k 0)))) (h "1cpaghdgb6pkwjvdqwi98bv0j57nphn95vcz1nl3rj1zrdwj6cwr") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("nnef" "tract-nnef") ("kaldi" "tract-kaldi") ("default" "kaldi" "nnef" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.10.3 (c (n "tract") (v "0.10.3") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.10.3") (d #t) (k 0)) (d (n "tract-hir") (r "^0.10.3") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.10.3") (o #t) (d #t) (k 0)))) (h "1lik0l7kx8xng3w477ba7yvfr4spkyc3lf94q8l9wxggf754fjyf") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("nnef" "tract-nnef") ("kaldi" "tract-kaldi") ("default" "kaldi" "nnef" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.10.4 (c (n "tract") (v "0.10.4") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.10.4") (d #t) (k 0)) (d (n "tract-hir") (r "^0.10.4") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.10.4") (o #t) (d #t) (k 0)))) (h "1b55rrnjmf196dp839cd1vfxiqais6zh7wq1m6prg66y2c8qgad4") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("nnef" "tract-nnef") ("kaldi" "tract-kaldi") ("default" "kaldi" "nnef" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.10.5 (c (n "tract") (v "0.10.5") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.10.5") (d #t) (k 0)) (d (n "tract-hir") (r "^0.10.5") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.10.5") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "^0.10.5") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.10.5") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.10.5") (o #t) (d #t) (k 0)))) (h "0rpcnqhyra5kqih5bxaa5ifyd4i0xc6czmh7ak77a00i00rqzpjf") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("nnef" "tract-nnef") ("kaldi" "tract-kaldi") ("default" "kaldi" "nnef" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.10.6 (c (n "tract") (v "0.10.6") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.10.6") (d #t) (k 0)) (d (n "tract-hir") (r "^0.10.6") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.10.6") (o #t) (d #t) (k 0)))) (h "0jqpp1z01nigxbppcydwqib7rya8gyffmsn7rba8hbnir7c5w1h9") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("nnef" "tract-nnef") ("kaldi" "tract-kaldi") ("default" "kaldi" "nnef" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.10.7 (c (n "tract") (v "0.10.7") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.10.7") (d #t) (k 0)) (d (n "tract-hir") (r "^0.10.7") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.10.7") (o #t) (d #t) (k 0)))) (h "1rq4rbyhslafm9mnvfrnb9ymq3yg1qgs38jsgdqk935iqvp09lyy") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("nnef" "tract-nnef") ("kaldi" "tract-kaldi") ("default" "kaldi" "nnef" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.10.8 (c (n "tract") (v "0.10.8") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.10.8") (d #t) (k 0)) (d (n "tract-hir") (r "^0.10.8") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.10.8") (o #t) (d #t) (k 0)))) (h "028ys0kckn932g891g1ylll77qv6s3v586mh7xxidg3fll3mf6i6") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("nnef" "tract-nnef") ("kaldi" "tract-kaldi") ("default" "kaldi" "nnef" "onnx" "tf") ("conform" "tract-tensorflow/conform")))) (y #t)))

(define-public crate-tract-0.10.9 (c (n "tract") (v "0.10.9") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.10.9") (d #t) (k 0)) (d (n "tract-hir") (r "^0.10.9") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.10.9") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "^0.10.9") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.10.9") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.10.9") (o #t) (d #t) (k 0)))) (h "171hcvzs9f79rmi4n3jpsj8h5va9pbbyr7a2i306yhch7jpirl3n") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("nnef" "tract-nnef") ("kaldi" "tract-kaldi") ("default" "kaldi" "nnef" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.10.10 (c (n "tract") (v "0.10.10") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.5") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.10.10") (d #t) (k 0)) (d (n "tract-hir") (r "^0.10.10") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.10.10") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "^0.10.10") (o #t) (d #t) (k 0)) (d (n "tract-onnx") (r "^0.10.10") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.10.10") (o #t) (d #t) (k 0)))) (h "1cnzgqayarlkkl4y37l09xvl7aqyy91c59lh7bf7higqwy1hglg6") (f (quote (("tf" "tract-tensorflow") ("onnx" "tract-onnx") ("nnef" "tract-nnef") ("kaldi" "tract-kaldi") ("default" "kaldi" "nnef" "onnx" "tf") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.11.0 (c (n "tract") (v "0.11.0") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.6") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.11.0") (d #t) (k 0)) (d (n "tract-hir") (r "^0.11.0") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "^0.11.0") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.11.0") (o #t) (d #t) (k 0)))) (h "0lfw9sk7hvmycd8qlfrdp7ia84hcm6iq53jlm4xp9yz4v0k1qqra") (f (quote (("tf" "tract-tensorflow") ("pulse" "tract-pulse") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.11.1 (c (n "tract") (v "0.11.1") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.6") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.11.1") (d #t) (k 0)) (d (n "tract-hir") (r "^0.11.1") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "^0.11.1") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.11.1") (o #t) (d #t) (k 0)))) (h "1cs07cqvn5a2x9h417n06hnhbirzldwa9w91gbwzfzr03rhv1cqp") (f (quote (("tf" "tract-tensorflow") ("pulse" "tract-pulse") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.11.2 (c (n "tract") (v "0.11.2") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.6") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.11.2") (d #t) (k 0)) (d (n "tract-hir") (r "^0.11.2") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "^0.11.2") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.11.2") (o #t) (d #t) (k 0)))) (h "1x9ncgz5jdlvcckhwm55ia41ynbgcsaqdd7vwcf5ys5wlnssqq7a") (f (quote (("tf" "tract-tensorflow") ("pulse" "tract-pulse") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.12.0 (c (n "tract") (v "0.12.0") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.6") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.12.0") (d #t) (k 0)) (d (n "tract-hir") (r "^0.12.0") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "^0.12.0") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.12.0") (o #t) (d #t) (k 0)))) (h "11ipjmb75dz5zmlv788rpk75n25ibly9gkwj4f81j304nwkjhck0") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform")))) (y #t)))

(define-public crate-tract-0.12.1 (c (n "tract") (v "0.12.1") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.6") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.12.1") (d #t) (k 0)) (d (n "tract-hir") (r "^0.12.1") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "^0.12.1") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.12.1") (o #t) (d #t) (k 0)))) (h "024jxriiph8l42d4fd5qmfb3bh554j0pxrjp6jw19rvalbknlyr0") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.12.2 (c (n "tract") (v "0.12.2") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.6") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.12.2") (d #t) (k 0)) (d (n "tract-hir") (r "^0.12.2") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "^0.12.2") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.12.2") (o #t) (d #t) (k 0)))) (h "1av06xq2srf7vim8zfs9a90g8c66jx1hcll1cpksblqr4rac1ibs") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.12.3 (c (n "tract") (v "0.12.3") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.6") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.12.3") (d #t) (k 0)) (d (n "tract-hir") (r "^0.12.3") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "^0.12.3") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.12.3") (o #t) (d #t) (k 0)))) (h "0dyp65r637gqn90gcp9lyp476s5a2798qrd0c8zyc7wr5rdv2pvj") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform")))) (y #t)))

(define-public crate-tract-0.12.4 (c (n "tract") (v "0.12.4") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.6") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.12.4") (d #t) (k 0)) (d (n "tract-hir") (r "^0.12.4") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.12.4") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "^0.12.4") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.12.4") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "^0.12.4") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "^0.12.4") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.12.4") (o #t) (d #t) (k 0)))) (h "0cdd7r9daky5ml1f137mdw1n8j94fk7m69fbwas7vrqy2gj7by1x") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.12.5 (c (n "tract") (v "0.12.5") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.6") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "^0.12.5") (d #t) (k 0)) (d (n "tract-hir") (r "^0.12.5") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.12.5") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "^0.12.5") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.12.5") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "^0.12.5") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "^0.12.5") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.12.5") (o #t) (d #t) (k 0)))) (h "1wdyxwpdbmj69rl2msd817hsxfi9hiqibfyrjsrbw7vz9kbclcq9") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.13.0 (c (n "tract") (v "0.13.0") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.6") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "=0.13.0") (d #t) (k 0)) (d (n "tract-hir") (r "=0.13.0") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.13.0") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.13.0") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.13.0") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.13.0") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.13.0") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.13.0") (o #t) (d #t) (k 0)))) (h "0y5khpn6idydp3dmypjsgd0zpks8qvpxwbm0ypavy80m690bqhx0") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.13.1 (c (n "tract") (v "0.13.1") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.6") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "=0.13.1") (d #t) (k 0)) (d (n "tract-hir") (r "=0.13.1") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.13.1") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.13.1") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.13.1") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.13.1") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.13.1") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.13.1") (o #t) (d #t) (k 0)))) (h "1948v8vxfy72gv5zynagcwsm5r6lhl08kny67kb17xz0q33vyz9g") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.13.2 (c (n "tract") (v "0.13.2") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.6") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "=0.13.2") (d #t) (k 0)) (d (n "tract-hir") (r "=0.13.2") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.13.2") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.13.2") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.13.2") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.13.2") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.13.2") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.13.2") (o #t) (d #t) (k 0)))) (h "13zm0zvczdmg22j2qx83a6hbrdmj9dn3i69pq39qxhrqzn3rd7xb") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.14.0 (c (n "tract") (v "0.14.0") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "cast") (r "^0.2.5") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "=0.14.0") (d #t) (k 0)) (d (n "tract-hir") (r "=0.14.0") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.14.0") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.14.0") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.14.0") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.14.0") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.14.0") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.14.0") (o #t) (d #t) (k 0)))) (h "0245cxbs7i1v7cjwnp6bl0iajwahfmznvj3pjvjq7rr6yd2l3amh") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.14.1 (c (n "tract") (v "0.14.1") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "cast") (r "^0.2.5") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "=0.14.1") (d #t) (k 0)) (d (n "tract-hir") (r "=0.14.1") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.14.1") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.14.1") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.14.1") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.14.1") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.14.1") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.14.1") (o #t) (d #t) (k 0)))) (h "1vvcijqndhm4zyxply6s7cdlms1yvadw397wcg9r4p6901dbgy2d") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.14.2 (c (n "tract") (v "0.14.2") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "cast") (r "^0.2.5") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "=0.14.2") (d #t) (k 0)) (d (n "tract-hir") (r "=0.14.2") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.14.2") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.14.2") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.14.2") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.14.2") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.14.2") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.14.2") (o #t) (d #t) (k 0)))) (h "08vgwjcnhlhr9fqr08zysvfsnnsa4jjsa8lvjzijwhamf7bml3xs") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.15.0 (c (n "tract") (v "0.15.0") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "cast") (r "^0.2.5") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "=0.15.0") (d #t) (k 0)) (d (n "tract-hir") (r "=0.15.0") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.15.0") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.15.0") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.15.0") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.15.0") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.15.0") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.15.0") (o #t) (d #t) (k 0)))) (h "12mjnd7zi01iyq6rdlcikm61inn3g98b7zs90krh005h1m375ymp") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.15.1 (c (n "tract") (v "0.15.1") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "cast") (r "^0.2.5") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "=0.15.1") (d #t) (k 0)) (d (n "tract-hir") (r "=0.15.1") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.15.1") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.15.1") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.15.1") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.15.1") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.15.1") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.15.1") (o #t) (d #t) (k 0)))) (h "17x07pfn9r37d4ccb9mpinxg71l5rhr8b49gj4inc93mv87qninz") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.15.2 (c (n "tract") (v "0.15.2") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "cast") (r "^0.2.5") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "=0.15.2") (d #t) (k 0)) (d (n "tract-hir") (r "=0.15.2") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.15.2") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.15.2") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.15.2") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.15.2") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.15.2") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.15.2") (o #t) (d #t) (k 0)))) (h "0fqsac31mi4brnb4r9qp6hz6b51xgpm31fc185jhmzjl51iz0ngl") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.15.3 (c (n "tract") (v "0.15.3") (d (list (d (n "ansi_term") (r "^0.12.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1") (d #t) (k 0)) (d (n "cast") (r "^0.2.5") (d #t) (k 0)) (d (n "clap") (r "^2.31") (d #t) (k 0)) (d (n "colorous") (r "^1.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "tract-core") (r "=0.15.3") (d #t) (k 0)) (d (n "tract-hir") (r "=0.15.3") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.15.3") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.15.3") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.15.3") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.15.3") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.15.3") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.15.3") (o #t) (d #t) (k 0)))) (h "08i9zdz9glc2pg84dwzygcnsfpyg632n8rd83kpx3xim9s4f8f1y") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.15.4 (c (n "tract") (v "0.15.4") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.15.4") (d #t) (k 0)) (d (n "tract-hir") (r "=0.15.4") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.15.4") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.15.4") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.15.4") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.15.4") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.15.4") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.15.4") (o #t) (d #t) (k 0)))) (h "13r5y8qsn7pfsqi2gz9djsyhsc7mnnczm9ncv7f9b9xf48sc60vp") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.15.5 (c (n "tract") (v "0.15.5") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.15.5") (d #t) (k 0)) (d (n "tract-hir") (r "=0.15.5") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.15.5") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.15.5") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.15.5") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.15.5") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.15.5") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.15.5") (o #t) (d #t) (k 0)))) (h "030j3bbpf40bgdpk0hps7wbmp7z817yzvmhilsxkichny1v3arfz") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.15.7 (c (n "tract") (v "0.15.7") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.15.7") (d #t) (k 0)) (d (n "tract-hir") (r "=0.15.7") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.15.7") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.15.7") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.15.7") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.15.7") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.15.7") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.15.7") (o #t) (d #t) (k 0)))) (h "18l6r6y0fkk96s5jdrz7irz5fy5c9lz870cmcrjyj4sdr0n71ljk") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.15.8 (c (n "tract") (v "0.15.8") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.15.8") (d #t) (k 0)) (d (n "tract-hir") (r "=0.15.8") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.15.8") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.15.8") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.15.8") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.15.8") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.15.8") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.15.8") (o #t) (d #t) (k 0)))) (h "0q7r86n57fqikgnp6dbdr8hsbj0dq8677gavw3s8z1phycf1dfn9") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.16.0 (c (n "tract") (v "0.16.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "=0.20.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.16.0") (d #t) (k 0)) (d (n "tract-hir") (r "=0.16.0") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.16.0") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.16.0") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.16.0") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.16.0") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.16.0") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.16.0") (o #t) (d #t) (k 0)))) (h "1l19k05hn1bc9hqyhdlzrdyhjanzhs1qgxwzlp245w4hkjyhgmm4") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.16.1 (c (n "tract") (v "0.16.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "=0.20.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.16.1") (d #t) (k 0)) (d (n "tract-hir") (r "=0.16.1") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.16.1") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.16.1") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.16.1") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.16.1") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.16.1") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.16.1") (o #t) (d #t) (k 0)))) (h "03rdxqmigdsakbh8jc80sidqn65gzvhd43ky87fh7d3fwrc36vzc") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.16.2 (c (n "tract") (v "0.16.2") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^3.1.3") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.16.2") (d #t) (k 0)) (d (n "tract-hir") (r "=0.16.2") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.16.2") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.16.2") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.16.2") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.16.2") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.16.2") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.16.2") (o #t) (d #t) (k 0)))) (h "0ap91wlagwp4v9xj35cnx4dzcdjik14x1qrq81fxafwczl79iq4r") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.16.3 (c (n "tract") (v "0.16.3") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^3.1.3") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.16.3") (d #t) (k 0)) (d (n "tract-hir") (r "=0.16.3") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.16.3") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.16.3") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.16.3") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.16.3") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.16.3") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.16.3") (o #t) (d #t) (k 0)))) (h "1jbsk3bdl3lfv4fg9jj6nlibgy94zg2rfwiiq7dgd0pmdk123nqa") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.16.4 (c (n "tract") (v "0.16.4") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^3.1.3") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.16.4") (d #t) (k 0)) (d (n "tract-hir") (r "=0.16.4") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.16.4") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.16.4") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.16.4") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.16.4") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.16.4") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.16.4") (o #t) (d #t) (k 0)))) (h "1ryc0adjx4d6hik8kvpy15cnw212ajjmcili5f7lfrwzy7x11nxk") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.16.5 (c (n "tract") (v "0.16.5") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^3.1.3") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.16.5") (d #t) (k 0)) (d (n "tract-hir") (r "=0.16.5") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.16.5") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.16.5") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.16.5") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.16.5") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.16.5") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.16.5") (o #t) (d #t) (k 0)))) (h "089azjq9j3asjmqxz6606x0gbnf4j9nwhzy2mnygyf8kd4qmmiza") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.16.6 (c (n "tract") (v "0.16.6") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^3.1.3") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.16.6") (d #t) (k 0)) (d (n "tract-hir") (r "=0.16.6") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.16.6") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.16.6") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.16.6") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.16.6") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.16.6") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.16.6") (o #t) (d #t) (k 0)))) (h "0hxwzpgypmhc7ngdjha8ji8ybzn4f2fwk1h9djfq1r05yfqdy51l") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.16.7 (c (n "tract") (v "0.16.7") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^3.1.3") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.16.7") (d #t) (k 0)) (d (n "tract-hir") (r "=0.16.7") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.16.7") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.16.7") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.16.7") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.16.7") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.16.7") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.16.7") (o #t) (d #t) (k 0)))) (h "1hzb2rkp5dr7nwzrqrbnnjzhgrb2vwmsqn3q2j3b5hk0mdmww5lr") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.16.8 (c (n "tract") (v "0.16.8") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^3.1.3") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.16.8") (d #t) (k 0)) (d (n "tract-hir") (r "=0.16.8") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.16.8") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.16.8") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.16.8") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.16.8") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.16.8") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.16.8") (o #t) (d #t) (k 0)))) (h "0dvzqw8w73fh3dmpcgrwsf50z0zmi93kbjzv507flh60b2204id3") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.16.9 (c (n "tract") (v "0.16.9") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^3.1.3") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.16.9") (d #t) (k 0)) (d (n "tract-hir") (r "=0.16.9") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.16.9") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.16.9") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.16.9") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.16.9") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.16.9") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.16.9") (o #t) (d #t) (k 0)))) (h "1zmw6ycq784ylcc7rjs2kl9jw3mqj9167d93isahiwsddbazyag4") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.17.0 (c (n "tract") (v "0.17.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^3.1.3") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.17.0") (d #t) (k 0)) (d (n "tract-hir") (r "=0.17.0") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.17.0") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.17.0") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.17.0") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.17.0") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.17.0") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.17.0") (o #t) (d #t) (k 0)))) (h "1mawfnyghbr4dj20xfid4i59pbr8n0cw2001k7bsqpviy2pa1qrw") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.17.1 (c (n "tract") (v "0.17.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.17.1") (d #t) (k 0)) (d (n "tract-hir") (r "=0.17.1") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.17.1") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.17.1") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.17.1") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.17.1") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.17.1") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.17.1") (o #t) (d #t) (k 0)))) (h "1gn54jwql70mx2xz6x2rnhfqggfl6bhh0mf14m6fbq82k5vbq6v1") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.17.2 (c (n "tract") (v "0.17.2") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.17.2") (d #t) (k 0)) (d (n "tract-hir") (r "=0.17.2") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.17.2") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.17.2") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.17.2") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.17.2") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.17.2") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.17.2") (o #t) (d #t) (k 0)))) (h "1qlji55nknhgnl0b7dvlwiaz3wwdp65cmrs3331j0053775m88c2") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.17.3 (c (n "tract") (v "0.17.3") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.17.3") (d #t) (k 0)) (d (n "tract-hir") (r "=0.17.3") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.17.3") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.17.3") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.17.3") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.17.3") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.17.3") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.17.3") (o #t) (d #t) (k 0)))) (h "1byk3zr9jqvsmq2fw3s65xg4k6h10pli7f16mg6rs3xnxyhs8ffr") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.17.4 (c (n "tract") (v "0.17.4") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.17.4") (d #t) (k 0)) (d (n "tract-hir") (r "=0.17.4") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.17.4") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.17.4") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.17.4") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.17.4") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.17.4") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.17.4") (o #t) (d #t) (k 0)))) (h "0rhk5clywywrwb6r3948z77r9q5kjpcrzv8aanmx11b73w1722bf") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.17.7 (c (n "tract") (v "0.17.7") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.17.7") (d #t) (k 0)) (d (n "tract-hir") (r "=0.17.7") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.17.7") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.17.7") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.17.7") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.17.7") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.17.7") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.17.7") (o #t) (d #t) (k 0)))) (h "1qia5ganph50q5rqan42k27lrbl4156sq8bzjws6xri3726j2gsr") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.18.0 (c (n "tract") (v "0.18.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.18.0") (d #t) (k 0)) (d (n "tract-hir") (r "=0.18.0") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.18.0") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.18.0") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.18.0") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.18.0") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.18.0") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.18.0") (o #t) (d #t) (k 0)))) (h "0m5b959c1j8w5chag8zz8yzwscgv723nair0vhlhjzm08gmrdz41") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.17.8 (c (n "tract") (v "0.17.8") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.17.8") (d #t) (k 0)) (d (n "tract-hir") (r "=0.17.8") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.17.8") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.17.8") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.17.8") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.17.8") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.17.8") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.17.8") (o #t) (d #t) (k 0)))) (h "1hr7c5pgp2xfph79w4fhv7a1x3samjy2b52f3s60sli0hh6zfrzw") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.17.9 (c (n "tract") (v "0.17.9") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.17.9") (d #t) (k 0)) (d (n "tract-hir") (r "=0.17.9") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.17.9") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.17.9") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.17.9") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.17.9") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.17.9") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.17.9") (o #t) (d #t) (k 0)))) (h "0q5zvvsksxi6fhk0ck87mf6gc9pkddwvg8cr8a9n7nikakq8711q") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.18.1 (c (n "tract") (v "0.18.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.18.1") (d #t) (k 0)) (d (n "tract-hir") (r "=0.18.1") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.18.1") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.18.1") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.18.1") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.18.1") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.18.1") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.18.1") (o #t) (d #t) (k 0)))) (h "1akm3zlvpcn3cccgvaiqjnjj74yxr0j4qxn34lis8272qxnh9c5w") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.18.2 (c (n "tract") (v "0.18.2") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.18.2") (d #t) (k 0)) (d (n "tract-hir") (r "=0.18.2") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.18.2") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.18.2") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.18.2") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.18.2") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.18.2") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.18.2") (o #t) (d #t) (k 0)))) (h "0klq7n9v8q4zkpk4xisbgfl83rxfaxagqpjwspgf015lng3zzajp") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.18.3 (c (n "tract") (v "0.18.3") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.18.3") (d #t) (k 0)) (d (n "tract-hir") (r "=0.18.3") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.18.3") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.18.3") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.18.3") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.18.3") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.18.3") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.18.3") (o #t) (d #t) (k 0)))) (h "0ndw0wv6g6p92dk1h6bwbd6qrn94ngaxi1p5r87vhjj8a8z8lmfk") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.18.4 (c (n "tract") (v "0.18.4") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.18.4") (d #t) (k 0)) (d (n "tract-hir") (r "=0.18.4") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.18.4") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.18.4") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.18.4") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.18.4") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.18.4") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.18.4") (o #t) (d #t) (k 0)))) (h "018ggvzjjb56nl9zc6cc8by1yzsgah57wxx14nkpybfjbwxm7bxh") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.18.5 (c (n "tract") (v "0.18.5") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "cast") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tract-core") (r "=0.18.5") (d #t) (k 0)) (d (n "tract-hir") (r "=0.18.5") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.18.5") (o #t) (d #t) (k 0)) (d (n "tract-nnef") (r "=0.18.5") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.18.5") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.18.5") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.18.5") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.18.5") (o #t) (d #t) (k 0)))) (h "0k4mpsqd0c1pgffg94l1isslp4dbvdrjvhbv7262i7n0rynmwwh6") (f (quote (("tf" "tract-tensorflow") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx") ("kaldi" "tract-kaldi") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.19.0-alpha.8 (c (n "tract") (v "0.19.0-alpha.8") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "^0.19.0-alpha.8") (d #t) (k 0)) (d (n "tract-hir") (r "^0.19.0-alpha.8") (d #t) (k 0)) (d (n "tract-kaldi") (r "^0.19.0-alpha.8") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "^0.19.0-alpha.8") (d #t) (k 0)) (d (n "tract-nnef") (r "^0.19.0-alpha.8") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.19.0-alpha.8") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "^0.19.0-alpha.8") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "^0.19.0-alpha.8") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.19.0-alpha.8") (o #t) (d #t) (k 0)))) (h "1snjkm6zccmb8ja33n5q7py9nh9d3ljbwr68dqynjvkrldf9aq8v") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.19.0-alpha.17 (c (n "tract") (v "0.19.0-alpha.17") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.19.0-alpha.17") (d #t) (k 0)) (d (n "tract-hir") (r "=0.19.0-alpha.17") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.19.0-alpha.17") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.19.0-alpha.17") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.19.0-alpha.17") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.19.0-alpha.17") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.19.0-alpha.17") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.19.0-alpha.17") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.19.0-alpha.17") (o #t) (d #t) (k 0)))) (h "0w7yp8h74523wbqizf9zw0q3n6hkcb9x7fgdfr9z9z1zd06ky79x") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.19.0-alpha.18 (c (n "tract") (v "0.19.0-alpha.18") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.19.0-alpha.18") (d #t) (k 0)) (d (n "tract-hir") (r "=0.19.0-alpha.18") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.19.0-alpha.18") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.19.0-alpha.18") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.19.0-alpha.18") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.19.0-alpha.18") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.19.0-alpha.18") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.19.0-alpha.18") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.19.0-alpha.18") (o #t) (d #t) (k 0)))) (h "1rb7kf7gyr8xaf11vk0z0ghinn61f0v0jgp8dnajs7j2sdgybd0l") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.19.0-alpha.19 (c (n "tract") (v "0.19.0-alpha.19") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.19.0-alpha.19") (d #t) (k 0)) (d (n "tract-hir") (r "=0.19.0-alpha.19") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.19.0-alpha.19") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.19.0-alpha.19") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.19.0-alpha.19") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.19.0-alpha.19") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.19.0-alpha.19") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.19.0-alpha.19") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.19.0-alpha.19") (o #t) (d #t) (k 0)))) (h "0zw77771b9yqynxlnwxlbxcglrkm8s9krl8lb1n8wd03gjlpp6sy") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.19.0 (c (n "tract") (v "0.19.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.19.0") (d #t) (k 0)) (d (n "tract-hir") (r "=0.19.0") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.19.0") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.19.0") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.19.0") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.19.0") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.19.0") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.19.0") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.19.0") (o #t) (d #t) (k 0)))) (h "06hfh8i79bx7g2iymrsi77q7g2rjnc665irjqm29ddml4anq6zjg") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.19.1 (c (n "tract") (v "0.19.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.19.1") (d #t) (k 0)) (d (n "tract-hir") (r "=0.19.1") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.19.1") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.19.1") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.19.1") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.19.1") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.19.1") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.19.1") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.19.1") (o #t) (d #t) (k 0)))) (h "104d713fzh00cq98yfl7d8wlr04gpfn8ps730li536vjscas5n0a") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.19.2 (c (n "tract") (v "0.19.2") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.19.2") (d #t) (k 0)) (d (n "tract-hir") (r "=0.19.2") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.19.2") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.19.2") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.19.2") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.19.2") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.19.2") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.19.2") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.19.2") (o #t) (d #t) (k 0)))) (h "1llvzzvmxpr649fzmxgzlygn1ca2icaincd6v99l8lk06jj36njw") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.19.3 (c (n "tract") (v "0.19.3") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.19.3") (d #t) (k 0)) (d (n "tract-hir") (r "=0.19.3") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.19.3") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.19.3") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.19.3") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.19.3") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.19.3") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.19.3") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.19.3") (o #t) (d #t) (k 0)))) (h "0wq4rdh6wfdbpnmzp64cf8gfi0v9h09v1dmhc7j0v8h1v2nv33ks") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform")))) (y #t)))

(define-public crate-tract-0.19.5 (c (n "tract") (v "0.19.5") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.19.5") (d #t) (k 0)) (d (n "tract-hir") (r "=0.19.5") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.19.5") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.19.5") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.19.5") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.19.5") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.19.5") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.19.5") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.19.5") (o #t) (d #t) (k 0)))) (h "1b4qd3c74cwxhq0yb3bk3svik1agxfpq38nknbdlw4s2x7zbvpxm") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.19.6 (c (n "tract") (v "0.19.6") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.19.6") (d #t) (k 0)) (d (n "tract-hir") (r "=0.19.6") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.19.6") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.19.6") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.19.6") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.19.6") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.19.6") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.19.6") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.19.6") (o #t) (d #t) (k 0)))) (h "1ihcahhpl6qlbdjnw5sdgi9nrqp04gwpm616qmxcy5a09s24vh4m") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform")))) (y #t)))

(define-public crate-tract-0.19.7 (c (n "tract") (v "0.19.7") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.19.7") (d #t) (k 0)) (d (n "tract-hir") (r "=0.19.7") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.19.7") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.19.7") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.19.7") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.19.7") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.19.7") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.19.7") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.19.7") (o #t) (d #t) (k 0)))) (h "0ab3cgilmqj86z3442w6cif9ss6plq81v2kclwbxy7bfc26kaj81") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.19.8 (c (n "tract") (v "0.19.8") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.19.8") (d #t) (k 0)) (d (n "tract-hir") (r "=0.19.8") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.19.8") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.19.8") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.19.8") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.19.8") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.19.8") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.19.8") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.19.8") (o #t) (d #t) (k 0)))) (h "11n1q56md8vm01vjjcbgl9sw4qdhy60pbr2vv29309ljw4jzqy9g") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.19.10 (c (n "tract") (v "0.19.10") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.19.10") (d #t) (k 0)) (d (n "tract-hir") (r "=0.19.10") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.19.10") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.19.10") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.19.10") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.19.10") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.19.10") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.19.10") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.19.10") (o #t) (d #t) (k 0)))) (h "0sg44g84r702wjzv2virgqbw06r5cnk19d1vdyhcrza0nw2aajyw") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.19.11 (c (n "tract") (v "0.19.11") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.19.11") (d #t) (k 0)) (d (n "tract-hir") (r "=0.19.11") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.19.11") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.19.11") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.19.11") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.19.11") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.19.11") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.19.11") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.19.11") (o #t) (d #t) (k 0)))) (h "1hjqffiq630i7q1mkdfhx85p4404n86ar8if5gigi2f0ng64c2q1") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.19.12 (c (n "tract") (v "0.19.12") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.19.12") (d #t) (k 0)) (d (n "tract-hir") (r "=0.19.12") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.19.12") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.19.12") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.19.12") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.19.12") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.19.12") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.19.12") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.19.12") (o #t) (d #t) (k 0)))) (h "18mm81d01yi5zn8zv5291i60yj2ylfwzm43r1ic2zl6ci8i9xdym") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.19.13 (c (n "tract") (v "0.19.13") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.19.13") (d #t) (k 0)) (d (n "tract-hir") (r "=0.19.13") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.19.13") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.19.13") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.19.13") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.19.13") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.19.13") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.19.13") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.19.13") (o #t) (d #t) (k 0)))) (h "0pwvkhi3xg8byyaqf5ic4yramrkb9f8kmjkdvd1w2nm6jj8bq8hd") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.19.14 (c (n "tract") (v "0.19.14") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.19.14") (d #t) (k 0)) (d (n "tract-hir") (r "=0.19.14") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.19.14") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.19.14") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.19.14") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.19.14") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.19.14") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.19.14") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.19.14") (o #t) (d #t) (k 0)))) (h "1ycmf9j3wa97al2sgcm8bhfgbmp3gh8n4lbdxzd6g94hh99haian") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.19.15 (c (n "tract") (v "0.19.15") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.19.15") (d #t) (k 0)) (d (n "tract-hir") (r "=0.19.15") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.19.15") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.19.15") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.19.15") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.19.15") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.19.15") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.19.15") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.19.15") (o #t) (d #t) (k 0)))) (h "0wg947p8cr5nr4b3ha1sa3w49dydzhfq0awahhzdbd147pa15znc") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.20.0 (c (n "tract") (v "0.20.0") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.20.0") (d #t) (k 0)) (d (n "tract-hir") (r "=0.20.0") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.20.0") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.20.0") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.20.0") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.20.0") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.20.0") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.20.0") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.20.0") (o #t) (d #t) (k 0)))) (h "0dfpq0k71rpyyck09pgvw4w4c4ff91nx53az4wbm36miywc83rc0") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.20.2 (c (n "tract") (v "0.20.2") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.20.2") (d #t) (k 0)) (d (n "tract-hir") (r "=0.20.2") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.20.2") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.20.2") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.20.2") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.20.2") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.20.2") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.20.2") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.20.2") (o #t) (d #t) (k 0)))) (h "1vwi2b0nm8vafb2al181c2faj64my3qh46afw9n4ban15x3wncxl") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.20.3 (c (n "tract") (v "0.20.3") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.20.3") (d #t) (k 0)) (d (n "tract-hir") (r "=0.20.3") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.20.3") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.20.3") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.20.3") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.20.3") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.20.3") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.20.3") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.20.3") (o #t) (d #t) (k 0)))) (h "08lcdg1k8vln28i9ghsi6s0nnwa28agh3nhmaj0s70nwh4lc1xjq") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.20.4 (c (n "tract") (v "0.20.4") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.20.4") (d #t) (k 0)) (d (n "tract-hir") (r "=0.20.4") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.20.4") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.20.4") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.20.4") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.20.4") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.20.4") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.20.4") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.20.4") (o #t) (d #t) (k 0)))) (h "0fldj6v56ds7n4mla8p9z6ax75ajnph2z7r7jd27n3spsld6lyf5") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.20.5 (c (n "tract") (v "0.20.5") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.20.5") (d #t) (k 0)) (d (n "tract-hir") (r "=0.20.5") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.20.5") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.20.5") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.20.5") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.20.5") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.20.5") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.20.5") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.20.5") (o #t) (d #t) (k 0)))) (h "129jsv7mampkzifiwld2p7qywyg26rsdd5swlkxjb7jyxq8albbx") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.20.6 (c (n "tract") (v "0.20.6") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.20.6") (d #t) (k 0)) (d (n "tract-hir") (r "=0.20.6") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.20.6") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.20.6") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.20.6") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.20.6") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.20.6") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.20.6") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.20.6") (o #t) (d #t) (k 0)))) (h "16avy8jhvfdqwdf0w7ycz5h45dp1l0h7b8qqggn5flw15jqblmcg") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.19.16 (c (n "tract") (v "0.19.16") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.19.16") (d #t) (k 0)) (d (n "tract-hir") (r "=0.19.16") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.19.16") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.19.16") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.19.16") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.19.16") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.19.16") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.19.16") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.19.16") (o #t) (d #t) (k 0)))) (h "00xq1i22gc33h0cijj7m9b3g394n48cprj22jpzm3cajzjb5zmxa") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.20.7 (c (n "tract") (v "0.20.7") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.20.7") (d #t) (k 0)) (d (n "tract-hir") (r "=0.20.7") (d #t) (k 0)) (d (n "tract-kaldi") (r "=0.20.7") (o #t) (d #t) (k 0)) (d (n "tract-libcli") (r "=0.20.7") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.20.7") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.20.7") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.20.7") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.20.7") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.20.7") (o #t) (d #t) (k 0)))) (h "1jqi54a9ns08bys96w8jld6hg78wq35famp4a6nhdzsc7iw3n2pm") (f (quote (("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("kaldi" "tract-kaldi" "tract-libcli/hir") ("default" "kaldi" "onnx" "tf" "pulse" "pulse-opl") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.20.18 (c (n "tract") (v "0.20.18") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls-tls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.20.18") (d #t) (k 0)) (d (n "tract-hir") (r "=0.20.18") (d #t) (k 0)) (d (n "tract-libcli") (r "=0.20.18") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.20.18") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.20.18") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.20.18") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.20.18") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.20.18") (o #t) (d #t) (k 0)) (d (n "tract-tflite") (r "=0.20.18") (o #t) (d #t) (k 0)))) (h "1iwpawd12ip504svjyz20gjw4j75g1k4xq6i4838rhsxqd8l79i1") (f (quote (("tflite" "tract-tflite") ("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("default" "onnx" "tf" "pulse" "pulse-opl" "tflite") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.20.19 (c (n "tract") (v "0.20.19") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls-tls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.20.19") (d #t) (k 0)) (d (n "tract-extra") (r "=0.20.19") (o #t) (d #t) (k 0)) (d (n "tract-hir") (r "=0.20.19") (d #t) (k 0)) (d (n "tract-libcli") (r "=0.20.19") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.20.19") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.20.19") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.20.19") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.20.19") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.20.19") (o #t) (d #t) (k 0)) (d (n "tract-tflite") (r "=0.20.19") (o #t) (d #t) (k 0)))) (h "1z6aif2zjc979rmi0hillwm8pfxj03zl57rjl0dz2wg7jf7v1m83") (f (quote (("tflite" "tract-tflite") ("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("extra" "tract-extra") ("default" "onnx" "tf" "pulse" "pulse-opl" "tflite" "extra") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.20.20 (c (n "tract") (v "0.20.20") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls-tls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.20.20") (d #t) (k 0)) (d (n "tract-extra") (r "=0.20.20") (o #t) (d #t) (k 0)) (d (n "tract-hir") (r "=0.20.20") (d #t) (k 0)) (d (n "tract-libcli") (r "=0.20.20") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.20.20") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.20.20") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.20.20") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.20.20") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.20.20") (o #t) (d #t) (k 0)) (d (n "tract-tflite") (r "=0.20.20") (o #t) (d #t) (k 0)))) (h "0x1x1l2hb5zrkkgy5lxy205767435sdhvv8h9dbjzkwzlcvx6jgx") (f (quote (("tflite" "tract-tflite") ("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("extra" "tract-extra") ("default" "onnx" "tf" "pulse" "pulse-opl" "tflite" "extra") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.20.21 (c (n "tract") (v "0.20.21") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls-tls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.20.21") (d #t) (k 0)) (d (n "tract-extra") (r "=0.20.21") (o #t) (d #t) (k 0)) (d (n "tract-hir") (r "=0.20.21") (d #t) (k 0)) (d (n "tract-libcli") (r "=0.20.21") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.20.21") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.20.21") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.20.21") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.20.21") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.20.21") (o #t) (d #t) (k 0)) (d (n "tract-tflite") (r "=0.20.21") (o #t) (d #t) (k 0)))) (h "1vhxh0wjzdipvmkhhh14d960lq56wrl3mqc7qy9cy3rkj17p05hx") (f (quote (("tflite" "tract-tflite") ("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("extra" "tract-extra") ("default" "onnx" "tf" "pulse" "pulse-opl" "tflite" "extra") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.20.22 (c (n "tract") (v "0.20.22") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls-tls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.20.22") (d #t) (k 0)) (d (n "tract-extra") (r "=0.20.22") (o #t) (d #t) (k 0)) (d (n "tract-hir") (r "=0.20.22") (d #t) (k 0)) (d (n "tract-libcli") (r "=0.20.22") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.20.22") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.20.22") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.20.22") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.20.22") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.20.22") (o #t) (d #t) (k 0)) (d (n "tract-tflite") (r "=0.20.22") (o #t) (d #t) (k 0)))) (h "1hvm21i47vpfizv8g12rrmgkwlq242ri5pa97ad3qsxii6kkqsvm") (f (quote (("tflite" "tract-tflite") ("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("extra" "tract-extra") ("default" "onnx" "tf" "pulse" "pulse-opl" "tflite" "extra") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.21.0 (c (n "tract") (v "0.21.0") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls-tls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.21.0") (d #t) (k 0)) (d (n "tract-extra") (r "=0.21.0") (o #t) (d #t) (k 0)) (d (n "tract-hir") (r "=0.21.0") (d #t) (k 0)) (d (n "tract-libcli") (r "=0.21.0") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.21.0") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.21.0") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.21.0") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.21.0") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.21.0") (o #t) (d #t) (k 0)) (d (n "tract-tflite") (r "=0.21.0") (o #t) (d #t) (k 0)))) (h "090bznl8xz0dcl1fab2a1lhl7vsa3p0pcf2b18f67qnmz3lqjkl3") (f (quote (("tflite" "tract-tflite") ("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("extra" "tract-extra") ("default" "onnx" "tf" "pulse" "pulse-opl" "tflite" "extra") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.21.1 (c (n "tract") (v "0.21.1") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls-tls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.21.1") (d #t) (k 0)) (d (n "tract-extra") (r "=0.21.1") (o #t) (d #t) (k 0)) (d (n "tract-hir") (r "=0.21.1") (d #t) (k 0)) (d (n "tract-libcli") (r "=0.21.1") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.21.1") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.21.1") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.21.1") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.21.1") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.21.1") (o #t) (d #t) (k 0)) (d (n "tract-tflite") (r "=0.21.1") (o #t) (d #t) (k 0)))) (h "0ad8z64jz3g15yiipvvjry2hwq78b4ks6m0253z6ipnwg89vbjjr") (f (quote (("tflite" "tract-tflite") ("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("extra" "tract-extra") ("default" "onnx" "tf" "pulse" "pulse-opl" "tflite" "extra") ("conform" "tract-tensorflow/conform"))))))

(define-public crate-tract-0.21.2 (c (n "tract") (v "0.21.2") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls-tls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.21.2") (d #t) (k 0)) (d (n "tract-extra") (r "=0.21.2") (o #t) (d #t) (k 0)) (d (n "tract-hir") (r "=0.21.2") (d #t) (k 0)) (d (n "tract-libcli") (r "=0.21.2") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.21.2") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.21.2") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.21.2") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.21.2") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.21.2") (o #t) (d #t) (k 0)) (d (n "tract-tflite") (r "=0.21.2") (o #t) (d #t) (k 0)))) (h "0mk2pidbamci80ydqi80zkm5qikc1dw4zrzf445yq9p11fvnmjcp") (f (quote (("tflite" "tract-tflite") ("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("extra" "tract-extra") ("default" "onnx" "tf" "pulse" "pulse-opl" "tflite" "extra") ("conform" "tract-tensorflow/conform")))) (y #t)))

(define-public crate-tract-0.21.3 (c (n "tract") (v "0.21.3") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls-tls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.21.3") (d #t) (k 0)) (d (n "tract-extra") (r "=0.21.3") (o #t) (d #t) (k 0)) (d (n "tract-hir") (r "=0.21.3") (d #t) (k 0)) (d (n "tract-libcli") (r "=0.21.3") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.21.3") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.21.3") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.21.3") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.21.3") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.21.3") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.21.3") (o #t) (d #t) (k 0)) (d (n "tract-tflite") (r "=0.21.3") (o #t) (d #t) (k 0)))) (h "1nr4fz8b29gcxk6m9a56chhplcmadylkjhm4swl7c77v0w40w857") (f (quote (("tflite" "tract-tflite") ("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("extra" "tract-extra") ("default" "onnx" "tf" "pulse" "pulse-opl" "tflite" "extra") ("conform" "tract-tensorflow/conform") ("apple-amx-ios" "tract-linalg/apple-amx-ios"))))))

(define-public crate-tract-0.21.4 (c (n "tract") (v "0.21.4") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls-tls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.21.4") (d #t) (k 0)) (d (n "tract-extra") (r "=0.21.4") (o #t) (d #t) (k 0)) (d (n "tract-hir") (r "=0.21.4") (d #t) (k 0)) (d (n "tract-libcli") (r "=0.21.4") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.21.4") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.21.4") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.21.4") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.21.4") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.21.4") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.21.4") (o #t) (d #t) (k 0)) (d (n "tract-tflite") (r "=0.21.4") (o #t) (d #t) (k 0)))) (h "0qk9y0wc1dbx4g4bcg25nvfjks7miws2s92dwfza2sigzrwfql6s") (f (quote (("tflite" "tract-tflite") ("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("extra" "tract-extra") ("default" "onnx" "tf" "pulse" "pulse-opl" "tflite" "extra") ("conform" "tract-tensorflow/conform") ("apple-amx-ios" "tract-linalg/apple-amx-ios"))))))

(define-public crate-tract-0.21.5 (c (n "tract") (v "0.21.5") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "box_drawing") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8.0") (f (quote ("compressed_npz"))) (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.46") (d #t) (k 0)) (d (n "py_literal") (r "^0.4.0") (d #t) (k 0)) (d (n "readings-probe") (r "^0.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("blocking" "rustls-tls"))) (k 0)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "scan_fmt") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "=0.21.5") (d #t) (k 0)) (d (n "tract-extra") (r "=0.21.5") (o #t) (d #t) (k 0)) (d (n "tract-hir") (r "=0.21.5") (d #t) (k 0)) (d (n "tract-libcli") (r "=0.21.5") (d #t) (k 0)) (d (n "tract-linalg") (r "=0.21.5") (d #t) (k 0)) (d (n "tract-nnef") (r "=0.21.5") (d #t) (k 0)) (d (n "tract-onnx") (r "=0.21.5") (o #t) (d #t) (k 0)) (d (n "tract-pulse") (r "=0.21.5") (o #t) (d #t) (k 0)) (d (n "tract-pulse-opl") (r "=0.21.5") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "=0.21.5") (o #t) (d #t) (k 0)) (d (n "tract-tflite") (r "=0.21.5") (o #t) (d #t) (k 0)))) (h "0ww5vlg69jv4gsamp7m05lxy0rf4p3mp9k2nd7qbbdp6q6v3ic4a") (f (quote (("tflite" "tract-tflite") ("tf" "tract-tensorflow" "tract-libcli/hir") ("pulse-opl" "tract-pulse-opl") ("pulse" "tract-pulse" "tract-pulse-opl") ("onnx" "tract-onnx" "tract-libcli/hir" "tract-libcli/onnx") ("extra" "tract-extra") ("default" "onnx" "tf" "pulse" "pulse-opl" "tflite" "extra") ("conform" "tract-tensorflow/conform") ("apple-amx-ios" "tract-linalg/apple-amx-ios"))))))

