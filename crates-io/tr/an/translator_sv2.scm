(define-module (crates-io tr an translator_sv2) #:use-module (crates-io))

(define-public crate-translator_sv2-0.1.0 (c (n "translator_sv2") (v "0.1.0") (d (list (d (n "async-channel") (r "^1.5.1") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3.2") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "binary_sv2") (r "^1.0.0") (d #t) (k 0)) (d (n "buffer_sv2") (r "^1.0.0") (d #t) (k 0)) (d (n "codec_sv2") (r "^1.0.1") (f (quote ("noise_sv2" "with_buffer_pool"))) (d #t) (k 0)) (d (n "error_handling") (r "^1.0.0") (d #t) (k 0)) (d (n "framing_sv2") (r "^1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "key-utils") (r "^1.0.0") (d #t) (k 0)) (d (n "network_helpers_sv2") (r "^1.0.0") (f (quote ("async_std" "with_buffer_pool"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "roles_logic_sv2") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive" "alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("alloc"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 2)) (d (n "stratum-common") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("codec"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 0)) (d (n "v1") (r "^1.0.0") (d #t) (k 0) (p "sv1_api")))) (h "069dz23s2pncmn3798yvx75qnz7h0s4msfx8rcwy2ppn6jzkylhi") (f (quote (("with_serde"))))))

(define-public crate-translator_sv2-0.1.1 (c (n "translator_sv2") (v "0.1.1") (d (list (d (n "async-channel") (r "^1.5.1") (d #t) (k 0)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3.2") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "binary_sv2") (r "^1.0.0") (d #t) (k 0)) (d (n "buffer_sv2") (r "^1.0.0") (d #t) (k 0)) (d (n "codec_sv2") (r "^1.0.1") (f (quote ("noise_sv2" "with_buffer_pool"))) (d #t) (k 0)) (d (n "error_handling") (r "^1.0.0") (d #t) (k 0)) (d (n "framing_sv2") (r "^1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "key-utils") (r "^1.0.0") (d #t) (k 0)) (d (n "network_helpers_sv2") (r "^2.0.0") (f (quote ("async_std" "with_buffer_pool"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "roles_logic_sv2") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive" "alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("alloc"))) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 2)) (d (n "stratum-common") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("codec"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 0)) (d (n "v1") (r "^1.0.0") (d #t) (k 0) (p "sv1_api")))) (h "0rjw787bbm6y0k4g20avgwh95nsl4x7fvil8qjdx42rhzwyszak4") (f (quote (("with_serde"))))))

