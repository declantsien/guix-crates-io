(define-module (crates-io tr an trans-gen) #:use-module (crates-io))

(define-public crate-trans-gen-0.1.0 (c (n "trans-gen") (v "0.1.0") (d (list (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "trans") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-core") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-cpp") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-csharp") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-dlang") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-fsharp") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-go") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-java") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-javascript") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-kotlin") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-python") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-ruby") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-rust") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-scala") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-schema") (r "^0.1.0") (d #t) (k 0)))) (h "0cp26bkcrami16bkyvm0yqzxkl60191k2nsb04xffp1sjpli1mvk")))

(define-public crate-trans-gen-0.1.1 (c (n "trans-gen") (v "0.1.1") (d (list (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "trans-gen-core") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-cpp") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-csharp") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-dlang") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-fsharp") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-go") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-java") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-javascript") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-kotlin") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-python") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-ruby") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-rust") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-gen-scala") (r "^0.1.0") (d #t) (k 0)) (d (n "trans-schema") (r "^0.1.0") (d #t) (k 0)))) (h "0rkkxw92gw3lbpkf0aq68i9i65l62kjpcli274r0c8ppq7acaw1f")))

(define-public crate-trans-gen-0.3.0-alpha.0 (c (n "trans-gen") (v "0.3.0-alpha.0") (d (list (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "trans-gen-core") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-cpp") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-csharp") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-dlang") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-fsharp") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-go") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-java") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-javascript") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-kotlin") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-python") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-ruby") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-rust") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-scala") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-schema") (r "^0.3.0-alpha") (d #t) (k 0)))) (h "09f4zdg8xrab4cfgx6fn92mh43wdhk8qrqhsq32zxfmzjf9q1xz0")))

(define-public crate-trans-gen-0.3.0-alpha.1 (c (n "trans-gen") (v "0.3.0-alpha.1") (d (list (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "trans-gen-core") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-cpp") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-csharp") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-dlang") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-fsharp") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-go") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-java") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-javascript") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-kotlin") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-python") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-ruby") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-rust") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-gen-scala") (r "^0.3.0-alpha") (d #t) (k 0)) (d (n "trans-schema") (r "^0.3.0-alpha") (d #t) (k 0)))) (h "13zz041wv67ijx55fixmdr814ap4vv9mcl7wx42rrxdlpjilrfr4")))

(define-public crate-trans-gen-0.3.0-alpha.2 (c (n "trans-gen") (v "0.3.0-alpha.2") (d (list (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "trans") (r "^0.3.0-alpha") (d #t) (k 0)))) (h "0qcaaz41bk9gk9qm5j6867i839kw3kk2z6j6w9ixv19l8z0iazjv")))

(define-public crate-trans-gen-0.3.0 (c (n "trans-gen") (v "0.3.0") (d (list (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "trans") (r "^0.3.0") (d #t) (k 0)))) (h "12fjn0zn0srb6qyi4vcl9pq9zdny1pv1xfaxiqsfcg18s8p7454h")))

(define-public crate-trans-gen-0.4.0-alpha.0 (c (n "trans-gen") (v "0.4.0-alpha.0") (d (list (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "trans") (r "^0.4.0-alpha") (d #t) (k 0)))) (h "0x8jaraarply7n2n8r6804bggif6kldflr2livvyd54czvmh6hrk")))

(define-public crate-trans-gen-0.4.0-alpha.1 (c (n "trans-gen") (v "0.4.0-alpha.1") (d (list (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "trans") (r "^0.4.0-alpha") (d #t) (k 0)))) (h "01fdfkwl95s9xz61h8dmcpb8r5crcw7wd4r8szsnd61y22prfspd")))

(define-public crate-trans-gen-0.4.0-alpha.2 (c (n "trans-gen") (v "0.4.0-alpha.2") (d (list (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "trans") (r "^0.4.0-alpha") (d #t) (k 0)))) (h "0xkyw3xh40g28d9bqx0gn1f84k0bvdzaysy1qhdx0d4z9gghpmjc")))

(define-public crate-trans-gen-0.4.0-alpha.3 (c (n "trans-gen") (v "0.4.0-alpha.3") (d (list (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "trans") (r "^0.4.0-alpha") (d #t) (k 0)))) (h "1g2ydfhmk3nh4j2d9gq7r4m1i0g3yrqn8qr6828c3r4f6sywb1br")))

(define-public crate-trans-gen-0.4.0-alpha.4 (c (n "trans-gen") (v "0.4.0-alpha.4") (d (list (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "trans") (r "^0.4.0-alpha") (d #t) (k 0)))) (h "08rr9d2fa1vr3zk5vspkgjjwbkz63x506b7976mzl6zmcr4n4kiy")))

(define-public crate-trans-gen-0.4.0-alpha.5 (c (n "trans-gen") (v "0.4.0-alpha.5") (d (list (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "trans") (r "^0.4.0-alpha") (d #t) (k 0)))) (h "091flpx42qs1pygp66scf95ajylr8by3f85gwdqndkvq9xva9d8q")))

(define-public crate-trans-gen-0.4.0-alpha.6 (c (n "trans-gen") (v "0.4.0-alpha.6") (d (list (d (n "serde") (r ">=1.0.0, <2.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r ">=3.0.0, <4.0.0") (d #t) (k 2)) (d (n "trans") (r ">=0.4.0-alpha, <0.5.0") (d #t) (k 0)))) (h "14j54l4w58s01cvghk1nybkjcqnhkcjk3z7yl9n7dvcsr8g0q1d2")))

(define-public crate-trans-gen-0.4.0-alpha.7 (c (n "trans-gen") (v "0.4.0-alpha.7") (d (list (d (n "serde") (r ">=1.0.0, <2.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r ">=3.0.0, <4.0.0") (d #t) (k 2)) (d (n "trans") (r ">=0.4.0-alpha, <0.5.0") (d #t) (k 0)))) (h "0j4d897ran6q5dq2979j6jnqilmmycmwiyycmp7wdm46njlgds7j")))

(define-public crate-trans-gen-0.4.0-alpha.8 (c (n "trans-gen") (v "0.4.0-alpha.8") (d (list (d (n "serde") (r ">=1.0.0, <2.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r ">=3.0.0, <4.0.0") (d #t) (k 2)) (d (n "trans") (r ">=0.4.0-alpha, <0.5.0") (d #t) (k 0)))) (h "1zwcm6l2jgdrjq78bw9ainswq0q6dfxrp68cv8njxnv2ayzigjwf")))

(define-public crate-trans-gen-0.4.0-alpha.9 (c (n "trans-gen") (v "0.4.0-alpha.9") (d (list (d (n "serde") (r ">=1.0.0, <2.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r ">=3.0.0, <4.0.0") (d #t) (k 2)) (d (n "trans") (r ">=0.4.0-alpha, <0.5.0") (d #t) (k 0)))) (h "1x0r01fgrj0xzqhfvml6w1whj5a76zh593xvizyskx3g4apwwwgg")))

(define-public crate-trans-gen-0.4.0 (c (n "trans-gen") (v "0.4.0") (d (list (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "trans") (r "^0.4.0") (d #t) (k 0)))) (h "1zrjzxwsby1vslv7c4ddfljqkxx4mb0wffvypfbc595abkqpbiiz")))

(define-public crate-trans-gen-0.5.0-alpha.0 (c (n "trans-gen") (v "0.5.0-alpha.0") (d (list (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "trans") (r "^0.5.0-alpha") (d #t) (k 0)))) (h "0zg762pv71zn6zqx1h79ddm5zx9aa6w5xh90zvs5ddhs027vvyfd")))

