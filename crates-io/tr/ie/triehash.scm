(define-module (crates-io tr ie triehash) #:use-module (crates-io))

(define-public crate-triehash-0.1.0 (c (n "triehash") (v "0.1.0") (d (list (d (n "ethcore-bigint") (r "^0.2.1") (d #t) (k 0)) (d (n "keccak-hash") (r "^0.1") (d #t) (k 0)) (d (n "rlp") (r "^0.2.1") (d #t) (k 0)))) (h "1mxbqycanjmljlb8yxq3009588rqzcm4dpc7w2smhj74zbqcg4cj")))

(define-public crate-triehash-0.1.2 (c (n "triehash") (v "0.1.2") (d (list (d (n "elastic-array") (r "^0.10") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.3") (d #t) (k 0)) (d (n "keccak-hash") (r "^0.1.1") (d #t) (k 0)) (d (n "rlp") (r "^0.2.2") (d #t) (k 0)) (d (n "trie-standardmap") (r "^0.1.0") (d #t) (k 2)))) (h "1kn7wfxkff2az35xf6677s8jqyhavhv6rjirlzcffw1wh4x8jcr0")))

(define-public crate-triehash-0.1.1 (c (n "triehash") (v "0.1.1") (d (list (d (n "elastic-array") (r "^0.10") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.3") (d #t) (k 0)) (d (n "keccak-hash") (r "^0.1") (d #t) (k 0)) (d (n "rlp") (r "^0.2.1") (d #t) (k 0)) (d (n "trie-standardmap") (r "^0.1") (d #t) (k 2)))) (h "0czf0r08sv8rzqdf04w0n3fb4p309idy7n37v2syrngjwnd2k9s8")))

(define-public crate-triehash-0.2.0 (c (n "triehash") (v "0.2.0") (d (list (d (n "elastic-array") (r "^0.10") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.3") (d #t) (k 0)) (d (n "hashdb") (r "^0.2") (d #t) (k 0)) (d (n "keccak-hasher") (r "^0.1") (d #t) (k 2)) (d (n "rlp") (r "^0.2.1") (d #t) (k 0)) (d (n "trie-standardmap") (r "^0.1") (d #t) (k 2)))) (h "0p4dcxyvkrq19n5q6q54m6jlm1byziwskjly68r5fhaab80vcp5s")))

(define-public crate-triehash-0.2.1 (c (n "triehash") (v "0.2.1") (d (list (d (n "elastic-array") (r "^0.10") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.3.2") (d #t) (k 2)) (d (n "hashdb") (r "^0.2") (k 0)) (d (n "keccak-hasher") (r "^0.1") (d #t) (k 2)) (d (n "rlp") (r "^0.2") (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.1") (d #t) (k 2)))) (h "1m751lbfin56rqb66rqryw3sfnj2r1n785h4i7f7fwfy5h9qjrbl")))

(define-public crate-triehash-0.2.2 (c (n "triehash") (v "0.2.2") (d (list (d (n "elastic-array") (r "^0.10") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.4") (d #t) (k 2)) (d (n "hashdb") (r "^0.2") (k 0)) (d (n "keccak-hasher") (r "^0.1") (d #t) (k 2)) (d (n "rlp") (r "^0.2.3") (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.1") (d #t) (k 2)))) (h "05gaq78ggczil33wi4nyx7sxghm2pvys58kghgypgwkw5rs21gf3") (f (quote (("ethereum" "rlp/ethereum"))))))

(define-public crate-triehash-0.2.3 (c (n "triehash") (v "0.2.3") (d (list (d (n "elastic-array") (r "^0.10") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.4") (d #t) (k 2)) (d (n "hashdb") (r "^0.2") (k 0)) (d (n "keccak-hasher") (r "^0.1") (d #t) (k 2)) (d (n "rlp") (r "^0.2.4") (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.1") (d #t) (k 2)))) (h "1b69jippr7gjmlzxlc41zjkj5mcrbmkwgwjkkiv4ib4br317v9rx") (f (quote (("ethereum" "rlp/ethereum"))))))

(define-public crate-triehash-0.3.0-beta.0 (c (n "triehash") (v "0.3.0-beta.0") (d (list (d (n "ethereum-types") (r "^0.4") (d #t) (k 2)) (d (n "hashdb") (r "^0.3.0-beta") (k 0)) (d (n "keccak-hasher") (r "^0.1") (d #t) (k 2)) (d (n "rlp") (r "^0.3.0-beta") (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.1") (d #t) (k 2)))) (h "0n6as11bgmii9w6gymj2ycxgpas7sv5ywv14w701hwx3pwcc9b2a") (f (quote (("ethereum" "rlp/ethereum"))))))

(define-public crate-triehash-0.3.0 (c (n "triehash") (v "0.3.0") (d (list (d (n "ethereum-types") (r "^0.4") (d #t) (k 2)) (d (n "hashdb") (r "^0.3.0") (k 0)) (d (n "keccak-hasher") (r "^0.1") (d #t) (k 2)) (d (n "rlp") (r "^0.3.0") (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.1") (d #t) (k 2)))) (h "1w8k0w114qjbxvfwa0nrjfvrsh0r7ca8fh7qnnhik6nx4skb776d") (f (quote (("ethereum" "rlp/ethereum"))))))

(define-public crate-triehash-0.4.0 (c (n "triehash") (v "0.4.0") (d (list (d (n "ethereum-types") (r "^0.4") (d #t) (k 2)) (d (n "hash-db") (r "^0.11.0") (k 0)) (d (n "keccak-hasher") (r "^0.11.0") (d #t) (k 2)) (d (n "rlp") (r "^0.3.0") (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.1") (d #t) (k 2)))) (h "0ima4x18n77g1arhx7bv1lsvwq9hvj06b6nw13y70y7qvnsfy9hd") (f (quote (("ethereum" "rlp/ethereum"))))))

(define-public crate-triehash-0.5.0 (c (n "triehash") (v "0.5.0") (d (list (d (n "ethereum-types") (r "^0.5") (d #t) (k 2)) (d (n "hash-db") (r "^0.11.0") (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.11.0") (d #t) (k 2)) (d (n "rlp") (r "^0.4") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (d #t) (k 2)))) (h "1a29yjxyl3d10macwkbjbshc4rp22kvwbqy9r0dzgvsmim6qn54j")))

(define-public crate-triehash-0.6.0 (c (n "triehash") (v "0.6.0") (d (list (d (n "ethereum-types") (r "^0.6") (d #t) (k 2)) (d (n "hash-db") (r "^0.12.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.12.3") (d #t) (k 2)) (d (n "rlp") (r "^0.4") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (d #t) (k 2)))) (h "0mkblmfmmz73cs3xghl7rrg9zp4sqb4mfjmngy4rc5c7r4zssidn")))

(define-public crate-triehash-0.7.0 (c (n "triehash") (v "0.7.0") (d (list (d (n "ethereum-types") (r "^0.6") (d #t) (k 2)) (d (n "hash-db") (r "^0.14") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.14") (d #t) (k 2)) (d (n "rlp") (r "^0.4") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (d #t) (k 2)))) (h "0whz1bzmlqkay3ybh3yl724xvma443fy9c4dwr1d6g0642g6rffy")))

(define-public crate-triehash-0.8.0 (c (n "triehash") (v "0.8.0") (d (list (d (n "ethereum-types") (r "^0.7") (d #t) (k 2)) (d (n "hash-db") (r "^0.15") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.15") (d #t) (k 2)) (d (n "rlp") (r "^0.4") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (d #t) (k 2)))) (h "0d0ihlrnv9vcbcqp4kl2dhxxcsyg2kmfhh36h6vpwb21l9psdl31")))

(define-public crate-triehash-0.8.1 (c (n "triehash") (v "0.8.1") (d (list (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.8.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2.1") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.15.2") (d #t) (k 2)) (d (n "rlp") (r "^0.4") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "1qn5l9h1pxj928g114qn0037gxpdpv6f1qi97l8dd9sk9bz3ybc6")))

(define-public crate-triehash-0.8.2 (c (n "triehash") (v "0.8.2") (d (list (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.8.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hex-literal") (r "^0.2.1") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.15.2") (d #t) (k 2)) (d (n "rlp") (r "^0.4") (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "1ncycfyyl7l3nfrrk34x29xx0rspfapmszgxp9xxc7srs87c2655") (f (quote (("std" "hash-db/std" "rlp/std") ("default" "std"))))))

(define-public crate-triehash-0.8.3 (c (n "triehash") (v "0.8.3") (d (list (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.9.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hex-literal") (r "^0.2.1") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.15.2") (d #t) (k 2)) (d (n "rlp") (r "^0.4") (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "1724lld0pzvz0idjq4dmmwxg9rz389z00b24pbg7xl74lixam47l") (f (quote (("std" "hash-db/std" "rlp/std") ("default" "std"))))))

(define-public crate-triehash-0.8.4 (c (n "triehash") (v "0.8.4") (d (list (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.10.0") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hex-literal") (r "^0.3.1") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.15.2") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "0p4zgg47x9hhpplnq6d3cbi0h989r27a2p78s9ivacdh3qh1nqx1") (f (quote (("std" "hash-db/std" "rlp/std") ("default" "std"))))))

