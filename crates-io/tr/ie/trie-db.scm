(define-module (crates-io tr ie trie-db) #:use-module (crates-io))

(define-public crate-trie-db-0.9.0 (c (n "trie-db") (v "0.9.0") (d (list (d (n "criterion") (r "^0.1.2") (d #t) (k 2)) (d (n "elastic-array") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "hash-db") (r "^0.9.0") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.2.0") (d #t) (k 2)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "memory-db") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "trie-root") (r "^0.9.0") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.9.0") (d #t) (k 2)))) (h "03pbj5yqzm0dwhdfywz21v8ibfpdvwbrq51w7ygsgs9lkjml3kkg")))

(define-public crate-trie-db-0.9.1 (c (n "trie-db") (v "0.9.1") (d (list (d (n "criterion") (r "^0.2.8") (d #t) (k 2)) (d (n "elastic-array") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "hash-db") (r "^0.9.0") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.2.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memory-db") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "trie-root") (r "^0.9.1") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.9.1") (d #t) (k 2)))) (h "1f6vnalc7g6af5p43qkix1qcyjhhnpbrbypnvk75k4vlmnqwxily")))

(define-public crate-trie-db-0.11.0 (c (n "trie-db") (v "0.11.0") (d (list (d (n "criterion") (r "^0.2.8") (d #t) (k 2)) (d (n "elastic-array") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "hash-db") (r "^0.11.0") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.11.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memory-db") (r "^0.11.0") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "trie-root") (r "^0.11.0") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.11.0") (d #t) (k 2)))) (h "126pb0101h5d5k4r05dzb28l2nznyy1aci6rb5rz55d2iki1jwrw")))

(define-public crate-trie-db-0.12.0 (c (n "trie-db") (v "0.12.0") (d (list (d (n "criterion") (r "^0.2.8") (d #t) (k 2)) (d (n "elastic-array") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "hash-db") (r "^0.12.0") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memory-db") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "reference-trie") (r "^0.12.0") (d #t) (k 2)) (d (n "trie-root") (r "^0.12.0") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.12.0") (d #t) (k 2)))) (h "0ili1qlvp5k2xgk80aprlm59xap2rfhcmncwm3dxn6r5646268vz")))

(define-public crate-trie-db-0.12.1 (c (n "trie-db") (v "0.12.1") (d (list (d (n "criterion") (r "^0.2.8") (d #t) (k 2)) (d (n "elastic-array") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "hash-db") (r "^0.12.0") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memory-db") (r "^0.12.0") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "reference-trie") (r "^0.12.0") (d #t) (k 2)) (d (n "trie-root") (r "^0.12.0") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.12.0") (d #t) (k 2)))) (h "0b8fbh7afgq2qxw8dbbpwbsm68r7r75g7vb1v6f9331sp89g2fl4")))

(define-public crate-trie-db-0.12.2 (c (n "trie-db") (v "0.12.2") (d (list (d (n "criterion") (r "^0.2.8") (d #t) (k 2)) (d (n "elastic-array") (r "^0.10") (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "hash-db") (r "^0.12.2") (k 0)) (d (n "hashmap_core") (r "^0.1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.12.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memory-db") (r "^0.12.2") (d #t) (k 2)) (d (n "rand") (r "^0.6") (k 0)) (d (n "trie-root") (r "^0.12.2") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.12.2") (d #t) (k 2)))) (h "0ngcrzibqgz66449jqidjw6x7afzi2slrh3l299snr1szm3kg9qv") (f (quote (("std" "elastic-array/std" "hash-db/std" "rand/std" "hashmap_core/disable") ("default" "std"))))))

(define-public crate-trie-db-0.12.3 (c (n "trie-db") (v "0.12.3") (d (list (d (n "criterion") (r "^0.2.8") (d #t) (k 2)) (d (n "elastic-array") (r "^0.10") (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "hash-db") (r "^0.12.3") (k 0)) (d (n "hashmap_core") (r "^0.1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.12.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memory-db") (r "^0.12.3") (d #t) (k 2)) (d (n "rand") (r "^0.6") (k 0)) (d (n "trie-root") (r "^0.12.3") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.12.3") (d #t) (k 2)))) (h "056wqmnsj6d3nzx1yjazawvkbc6hsi6v116clc7nqq4ja08v4xwf") (f (quote (("std" "elastic-array/std" "hash-db/std" "rand/std" "hashmap_core/disable") ("default" "std")))) (y #t)))

(define-public crate-trie-db-0.12.4 (c (n "trie-db") (v "0.12.4") (d (list (d (n "criterion") (r "^0.2.8") (d #t) (k 2)) (d (n "elastic-array") (r "^0.10") (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "hash-db") (r "^0.12.4") (k 0)) (d (n "hashmap_core") (r "^0.1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.12.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memory-db") (r "^0.12.4") (d #t) (k 2)) (d (n "rand") (r "^0.6") (k 0)) (d (n "trie-root") (r "^0.12.4") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.12.4") (d #t) (k 2)))) (h "1rrdncs8nyzbh4jjikg10kfva3vgbzwb2kwfgrng7z2b6a8361mf") (f (quote (("std" "elastic-array/std" "hash-db/std" "rand/std" "hashmap_core/disable") ("default" "std"))))))

(define-public crate-trie-db-0.14.0 (c (n "trie-db") (v "0.14.0") (d (list (d (n "criterion") (r "^0.2.8") (d #t) (k 2)) (d (n "elastic-array") (r "^0.10") (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "hash-db") (r "^0.14.0") (k 0)) (d (n "hashmap_core") (r "^0.1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.14.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memory-db") (r "^0.14.0") (d #t) (k 2)) (d (n "rand") (r "^0.6") (k 0)) (d (n "trie-root") (r "^0.14.0") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.14.0") (d #t) (k 2)))) (h "1m6mvjh4vvcdw7mspnc8n7x4yljcywywzal3x2z46dzccgzxh0qq") (f (quote (("std" "elastic-array/std" "hash-db/std" "rand/std" "hashmap_core/disable") ("default" "std"))))))

(define-public crate-trie-db-0.15.0 (c (n "trie-db") (v "0.15.0") (d (list (d (n "criterion") (r "^0.2.8") (d #t) (k 2)) (d (n "elastic-array") (r "^0.10") (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.0") (k 0)) (d (n "hashmap_core") (r "^0.1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.15.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memory-db") (r "^0.15.0") (d #t) (k 2)) (d (n "parity-codec") (r "^3.0") (d #t) (k 2)) (d (n "parity-codec-derive") (r "^3.0") (d #t) (k 2)) (d (n "rand") (r "^0.6") (k 0)) (d (n "trie-root") (r "^0.15.0") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.15.0") (d #t) (k 2)))) (h "1dac3wm5cwairpsyjrvxdava1m9k4xi3mhhwdj6807b3mq4xcrcv") (f (quote (("std" "elastic-array/std" "hash-db/std" "rand/std" "hashmap_core/disable") ("default" "std"))))))

(define-public crate-trie-db-0.15.2 (c (n "trie-db") (v "0.15.2") (d (list (d (n "criterion") (r "^0.2.8") (d #t) (k 2)) (d (n "elastic-array") (r "^0.10") (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.6") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.15.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memory-db") (r "^0.15.2") (d #t) (k 2)) (d (n "parity-codec") (r "^3.0") (d #t) (k 2)) (d (n "parity-codec-derive") (r "^3.0") (d #t) (k 2)) (d (n "rand") (r "^0.6") (k 0)) (d (n "trie-root") (r "^0.15.2") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "12h9rkbq53dh58j31rrrmc5ki0mch0j8gb298m0hf75ax0kjvdnh") (f (quote (("std" "elastic-array/std" "hash-db/std" "rand/std") ("default" "std"))))))

(define-public crate-trie-db-0.16.0 (c (n "trie-db") (v "0.16.0") (d (list (d (n "criterion") (r "^0.2.8") (d #t) (k 2)) (d (n "elastic-array") (r "^0.10") (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.6.3") (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.15.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memory-db") (r "^0.15.2") (d #t) (k 2)) (d (n "parity-codec") (r "^3.0") (d #t) (k 2)) (d (n "parity-codec-derive") (r "^3.0") (d #t) (k 2)) (d (n "rand") (r "^0.6") (k 0)) (d (n "trie-root") (r "^0.15.2") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "0vh7wpzmqbz9777dxp2nd46pva5q76f07ar8nz5bq61zs89rhjkq") (f (quote (("std" "elastic-array/std" "hash-db/std" "rand/std") ("default" "std"))))))

(define-public crate-trie-db-0.18.0 (c (n "trie-db") (v "0.18.0") (d (list (d (n "criterion") (r "^0.2.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.6.3") (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.15.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memory-db") (r "^0.18.0") (d #t) (k 2)) (d (n "parity-codec") (r "^3.0") (d #t) (k 2)) (d (n "parity-codec-derive") (r "^3.0") (d #t) (k 2)) (d (n "rand") (r "^0.6") (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "trie-root") (r "^0.15.2") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "1ydklhrpihsdb12wjz03ciqwr632vyz6d9qc9rigzyyyg4hq2mjp") (f (quote (("std" "hash-db/std" "rand/std") ("default" "std"))))))

(define-public crate-trie-db-0.18.1 (c (n "trie-db") (v "0.18.1") (d (list (d (n "criterion") (r "^0.2.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.6.3") (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.15.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memory-db") (r "^0.18.0") (d #t) (k 2)) (d (n "parity-codec") (r "^3.0") (d #t) (k 2)) (d (n "parity-codec-derive") (r "^3.0") (d #t) (k 2)) (d (n "rand") (r "^0.6") (k 0)) (d (n "reference-trie") (r "^0.18.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "trie-root") (r "^0.15.2") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "0pv6k9pd2ynxcg19q4j8dr8mrq8kn8l591y6m0syvwq605fxl7qr") (f (quote (("std" "hash-db/std" "rand/std") ("default" "std"))))))

(define-public crate-trie-db-0.19.0 (c (n "trie-db") (v "0.19.0") (d (list (d (n "criterion") (r "^0.2.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.6.3") (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.15.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memory-db") (r "^0.18.0") (d #t) (k 2)) (d (n "parity-codec") (r "^3.0") (d #t) (k 2)) (d (n "parity-codec-derive") (r "^3.0") (d #t) (k 2)) (d (n "rand") (r "^0.6") (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "trie-root") (r "^0.15.2") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "05rl9sb7s358m66zpkn7rmxavs23l0pxky4y0v0y1j6dcpy37xdz") (f (quote (("std" "hash-db/std" "rand/std") ("default" "std")))) (y #t)))

(define-public crate-trie-db-0.19.1 (c (n "trie-db") (v "0.19.1") (d (list (d (n "criterion") (r "^0.2.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.6.3") (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.15.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memory-db") (r "^0.18.0") (d #t) (k 2)) (d (n "parity-codec") (r "^3.0") (d #t) (k 2)) (d (n "parity-codec-derive") (r "^3.0") (d #t) (k 2)) (d (n "rand") (r "^0.6") (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "trie-root") (r "^0.15.2") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "09nd2iwv8q0lw33jc0vq8afb9ryjg92c6ni84djn1xr510w0xrv2") (f (quote (("std" "hash-db/std" "rand/std") ("default" "std")))) (y #t)))

(define-public crate-trie-db-0.19.2 (c (n "trie-db") (v "0.19.2") (d (list (d (n "criterion") (r "^0.2.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.6.3") (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.15.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memory-db") (r "^0.18.0") (d #t) (k 2)) (d (n "parity-codec") (r "^3.0") (d #t) (k 2)) (d (n "parity-codec-derive") (r "^3.0") (d #t) (k 2)) (d (n "rand") (r "^0.6") (k 0)) (d (n "rustc-hex") (r "^2.1.0") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "trie-root") (r "^0.15.2") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "1rnq0gfsi468lzs1q0vsyas9xpv6vz3zqxv4wkvqs1vgbfp4gmx0") (f (quote (("std" "hash-db/std" "rand/std" "rustc-hex") ("default" "std"))))))

(define-public crate-trie-db-0.20.0 (c (n "trie-db") (v "0.20.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.6.3") (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.15.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memory-db") (r "^0.19.0") (d #t) (k 2)) (d (n "parity-codec") (r "^3.0") (d #t) (k 2)) (d (n "parity-codec-derive") (r "^3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (k 2)) (d (n "rustc-hex") (r "^2.1.0") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "trie-root") (r "^0.16.0") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "1w1x6g90n0l1vy76z83gsbfa09ysfg4mf49745b8a9f31k2j54ny") (f (quote (("std" "hash-db/std" "rustc-hex") ("default" "std"))))))

(define-public crate-trie-db-0.20.1 (c (n "trie-db") (v "0.20.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.6.3") (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.15.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memory-db") (r "^0.20.1") (d #t) (k 2)) (d (n "parity-codec") (r "^3.0") (d #t) (k 2)) (d (n "parity-codec-derive") (r "^3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (k 2)) (d (n "rustc-hex") (r "^2.1.0") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "trie-root") (r "^0.16.0") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "0ps7c8rxih2wkc5fhpkqlgrnf13pqny4sk2s0j4kjmh883rhkhxw") (f (quote (("std" "hash-db/std" "rustc-hex") ("default" "std"))))))

(define-public crate-trie-db-0.21.0 (c (n "trie-db") (v "0.21.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.6.3") (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.15.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memory-db") (r "^0.21.0") (d #t) (k 2)) (d (n "parity-codec") (r "^3.0") (d #t) (k 2)) (d (n "parity-codec-derive") (r "^3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (k 2)) (d (n "rustc-hex") (r "^2.1.0") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "trie-root") (r "^0.16.0") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "09ypm6rkv92fg7c3w3ghqn068vzzmi2vpfncrw23p6a1qwj0q8yb") (f (quote (("std" "hash-db/std" "rustc-hex") ("default" "std"))))))

(define-public crate-trie-db-0.21.1 (c (n "trie-db") (v "0.21.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.8.0") (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.15.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memory-db") (r "^0.21.0") (d #t) (k 2)) (d (n "parity-codec") (r "^3.0") (d #t) (k 2)) (d (n "parity-codec-derive") (r "^3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (k 2)) (d (n "rustc-hex") (r "^2.1.0") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "trie-root") (r "^0.16.0") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "129zw5annfd6zlk589l5vh1n2fb68wgqxk2xrycql8l3pcvf1gma") (f (quote (("std" "hash-db/std" "rustc-hex") ("default" "std")))) (y #t)))

(define-public crate-trie-db-0.22.0 (c (n "trie-db") (v "0.22.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.8.0") (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.15.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memory-db") (r "^0.21.0") (d #t) (k 2)) (d (n "parity-codec") (r "^3.0") (d #t) (k 2)) (d (n "parity-codec-derive") (r "^3.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (k 2)) (d (n "rustc-hex") (r "^2.1.0") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "trie-root") (r "^0.16.0") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "0f4yvr0spwk8d40lachhnbqmq6l2i0lkkighghrwaf1d4nlskw9r") (f (quote (("std" "hash-db/std" "rustc-hex") ("default" "std"))))))

(define-public crate-trie-db-0.22.1 (c (n "trie-db") (v "0.22.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.8.0") (f (quote ("ahash"))) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "keccak-hasher") (r "^0.15.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memory-db") (r "^0.24.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (k 2)) (d (n "reference-trie") (r "^0.22.0") (k 2)) (d (n "rustc-hex") (r "^2.1.0") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "trie-root") (r "^0.16.0") (d #t) (k 2)) (d (n "trie-standardmap") (r "^0.15.2") (d #t) (k 2)))) (h "1w3i74a1ln1qykwzx5xwddf2lbk7w7s8dqrp87hkfqixwfngfmcy") (f (quote (("std" "hash-db/std" "rustc-hex") ("default" "std"))))))

(define-public crate-trie-db-0.22.2 (c (n "trie-db") (v "0.22.2") (d (list (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("ahash"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.1.0") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)))) (h "19n9smk6pikn8bw2n606c4dh2690hcn87766r59dc97bfz1pdhaw") (f (quote (("std" "hash-db/std" "rustc-hex") ("default" "std"))))))

(define-public crate-trie-db-0.22.3 (c (n "trie-db") (v "0.22.3") (d (list (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("ahash"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.1.0") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)))) (h "1bxc1nbrybiibrhfgkk1gyfqn55jr997d55h5jd4kj8ggzgiw1gc") (f (quote (("std" "hash-db/std" "rustc-hex") ("default" "std"))))))

(define-public crate-trie-db-0.22.4 (c (n "trie-db") (v "0.22.4") (d (list (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("ahash"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.1.0") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)))) (h "1bjqccfiq3m882dcdpvv2mq6vd35drg8gykkm4fch86jdsyf1j9k") (f (quote (("std" "hash-db/std" "rustc-hex") ("default" "std"))))))

(define-public crate-trie-db-0.22.5 (c (n "trie-db") (v "0.22.5") (d (list (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("ahash"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.1.0") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)))) (h "1qvlfwfk28419ad3qfkjdai6fcs8wkd32b4x3jjjidf2ic6gx0fd") (f (quote (("std" "hash-db/std" "rustc-hex") ("default" "std"))))))

(define-public crate-trie-db-0.22.6 (c (n "trie-db") (v "0.22.6") (d (list (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.11.2") (f (quote ("ahash"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.1.0") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)))) (h "1yh2kvii620x4c801ajpg76ssf180j198f87psrvd0af6cg17b4y") (f (quote (("std" "hash-db/std" "rustc-hex") ("default" "std"))))))

(define-public crate-trie-db-0.23.0 (c (n "trie-db") (v "0.23.0") (d (list (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.11.2") (f (quote ("ahash"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.1.0") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)))) (h "1zhzdqs1ga6i5v5zclwmhwys8bv2lrn42n5zpxsyy4hcd18axpg3") (f (quote (("std" "hash-db/std" "rustc-hex") ("default" "std"))))))

(define-public crate-trie-db-0.23.1 (c (n "trie-db") (v "0.23.1") (d (list (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.12.0") (f (quote ("ahash"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.1.0") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)))) (h "10xbwj6wx627dp1cybbdrba0rd0mbya8xqqxqd1lpdix1m606bfk") (f (quote (("std" "hash-db/std" "rustc-hex") ("default" "std"))))))

(define-public crate-trie-db-0.24.0 (c (n "trie-db") (v "0.24.0") (d (list (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.12.0") (f (quote ("ahash"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.1.0") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)))) (h "02190v28z7wbcclzfmrkbs0z1v3kh1ddqi0lrfs98mjkja7iwkh0") (f (quote (("std" "hash-db/std" "rustc-hex") ("default" "std"))))))

(define-public crate-trie-db-0.25.0 (c (n "trie-db") (v "0.25.0") (d (list (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("ahash"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.1.0") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (f (quote ("union" "const_new"))) (d #t) (k 0)))) (h "1mpbnbg9ril8zm5qi1yx7mk3ksrnds3m6ssr09xv3jivpdzlxkcv") (f (quote (("std" "hash-db/std" "rustc-hex") ("default" "std"))))))

(define-public crate-trie-db-0.25.1 (c (n "trie-db") (v "0.25.1") (d (list (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("ahash"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.1.0") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (f (quote ("union" "const_new"))) (d #t) (k 0)))) (h "080rpzi3lkh14m3iw2jrw61gzlycyhb36fc1cryh59makm0c141k") (f (quote (("std" "hash-db/std" "rustc-hex") ("default" "std"))))))

(define-public crate-trie-db-0.26.0 (c (n "trie-db") (v "0.26.0") (d (list (d (n "hash-db") (r "^0.15.2") (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("ahash"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.1.0") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (f (quote ("union" "const_new"))) (d #t) (k 0)))) (h "1g8i1fb8wp9cs8vgrn8lg2a1mg3q6izmnciny2hmn5hv0v0814w7") (f (quote (("std" "hash-db/std" "rustc-hex") ("default" "std"))))))

(define-public crate-trie-db-0.27.0 (c (n "trie-db") (v "0.27.0") (d (list (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("ahash"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.1.0") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (f (quote ("union" "const_new"))) (d #t) (k 0)))) (h "1wg7akq3z27p7m82pwyybfcw7jfz97g5i74xxbc2lgx4gv3pakb3") (f (quote (("std" "hash-db/std" "rustc-hex") ("default" "std"))))))

(define-public crate-trie-db-0.27.1 (c (n "trie-db") (v "0.27.1") (d (list (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("ahash"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.1.0") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (f (quote ("union" "const_new"))) (d #t) (k 0)))) (h "11cwgvxgpjcjbd15l2ifylk2fx5fc4l2q40scy4ii2nqzrpvwykn") (f (quote (("std" "hash-db/std" "rustc-hex") ("default" "std"))))))

(define-public crate-trie-db-0.28.0 (c (n "trie-db") (v "0.28.0") (d (list (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("ahash"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.1.0") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (f (quote ("union" "const_new"))) (d #t) (k 0)))) (h "0hi6c16i35lnn9arav02vfnjyz87ic08w56zplga9zn22pwf0a7z") (f (quote (("std" "hash-db/std" "rustc-hex") ("default" "std"))))))

(define-public crate-trie-db-0.29.0 (c (n "trie-db") (v "0.29.0") (d (list (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.1.0") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (f (quote ("union" "const_new"))) (d #t) (k 0)))) (h "0s8c52nil9s13if7pikdvlyrphv2ckzlz4bjwaqfp1axfyz87vb5") (f (quote (("std" "hash-db/std" "rustc-hex") ("default" "std"))))))

(define-public crate-trie-db-0.29.1 (c (n "trie-db") (v "0.29.1") (d (list (d (n "hash-db") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.1.0") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (f (quote ("union" "const_new"))) (d #t) (k 0)))) (h "0zxfn069an51ghzw5h44my4bx9mimgz7wxcasisa0d62817jp68c") (f (quote (("std" "hash-db/std" "rustc-hex") ("default" "std"))))))

