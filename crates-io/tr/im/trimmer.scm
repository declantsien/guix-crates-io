(define-module (crates-io tr im trimmer) #:use-module (crates-io))

(define-public crate-trimmer-0.1.0 (c (n "trimmer") (v "0.1.0") (d (list (d (n "combine") (r "^2.0.0") (d #t) (k 0)) (d (n "difference") (r "^0.4.1") (d #t) (k 2)) (d (n "matches") (r "^0.1.4") (d #t) (k 0)) (d (n "owning_ref") (r "^0.3.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_json") (r "^0.8.3") (o #t) (d #t) (k 0)))) (h "1k3gnhw8np8b9msilf14wgll6xsicfl13qw6yhvybr2l567133qa") (f (quote (("serde" "serde_json") ("default" "serde"))))))

(define-public crate-trimmer-0.1.1 (c (n "trimmer") (v "0.1.1") (d (list (d (n "argparse") (r "^0.2.1") (d #t) (k 0)) (d (n "combine") (r "^2.0.0") (d #t) (k 0)) (d (n "difference") (r "^0.4.1") (d #t) (k 2)) (d (n "matches") (r "^0.1.4") (d #t) (k 0)) (d (n "owning_ref") (r "^0.3.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_json") (r "^0.8.3") (o #t) (d #t) (k 0)))) (h "1cyq8gm7f0x8l6hwk4rl08jk2mz7f8p1dcqv7aqncjgzpqxn65c1") (f (quote (("serde" "serde_json") ("default" "serde"))))))

(define-public crate-trimmer-0.2.0 (c (n "trimmer") (v "0.2.0") (d (list (d (n "argparse") (r "^0.2.1") (d #t) (k 0)) (d (n "combine") (r "^2.4.0") (d #t) (k 0)) (d (n "difference") (r "^1.0.0") (d #t) (k 2)) (d (n "matches") (r "^0.1.6") (d #t) (k 0)) (d (n "owning_ref") (r "^0.3.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "0n0k8vryx0q5z847m6809jsykd6rcj4szcmm6f84f9pgmmhwifrj") (f (quote (("json" "serde_json") ("default" "json"))))))

(define-public crate-trimmer-0.3.0 (c (n "trimmer") (v "0.3.0") (d (list (d (n "argparse") (r "^0.2.1") (d #t) (k 0)) (d (n "combine") (r "^2.4.0") (d #t) (k 0)) (d (n "difference") (r "^1.0.0") (d #t) (k 2)) (d (n "matches") (r "^0.1.6") (d #t) (k 0)) (d (n "owning_ref") (r "^0.3.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "09vrj1cpim51qn7n970pwa6gcbrz064pc7yqvcr42ncs6aaklbmx") (f (quote (("json" "serde_json") ("default" "json"))))))

(define-public crate-trimmer-0.3.1 (c (n "trimmer") (v "0.3.1") (d (list (d (n "argparse") (r "^0.2.1") (d #t) (k 0)) (d (n "combine") (r "^2.4.0") (d #t) (k 0)) (d (n "difference") (r "^1.0.0") (d #t) (k 2)) (d (n "matches") (r "^0.1.6") (d #t) (k 0)) (d (n "owning_ref") (r "^0.3.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "0mlixrsl6szl2qmcv3zy1yz506czmdgr5mqhc04x582ib7rxpg30") (f (quote (("json" "serde_json") ("default" "json"))))))

(define-public crate-trimmer-0.3.2 (c (n "trimmer") (v "0.3.2") (d (list (d (n "argparse") (r "^0.2.1") (d #t) (k 0)) (d (n "combine") (r "^2.4.0") (d #t) (k 0)) (d (n "difference") (r "^1.0.0") (d #t) (k 2)) (d (n "matches") (r "^0.1.6") (d #t) (k 0)) (d (n "owning_ref") (r "^0.3.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "00a2a4zvxkfpmwd5mpdlp11ba0dxl6slhcq3vblabwrz8x70c54k") (f (quote (("json" "serde_json") ("default" "json"))))))

(define-public crate-trimmer-0.3.3 (c (n "trimmer") (v "0.3.3") (d (list (d (n "argparse") (r "^0.2.1") (d #t) (k 0)) (d (n "combine") (r "^2.4.0") (d #t) (k 0)) (d (n "difference") (r "^1.0.0") (d #t) (k 2)) (d (n "matches") (r "^0.1.6") (d #t) (k 0)) (d (n "owning_ref") (r "^0.3.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "1cf7nxzw3rrw7lm1bi40bldq81aw5h1j30nvrndv8icyqascp7f2") (f (quote (("json" "serde_json") ("default" "json"))))))

(define-public crate-trimmer-0.3.4 (c (n "trimmer") (v "0.3.4") (d (list (d (n "argparse") (r "^0.2.1") (d #t) (k 0)) (d (n "combine") (r "^2.4.0") (d #t) (k 0)) (d (n "difference") (r "^1.0.0") (d #t) (k 2)) (d (n "matches") (r "^0.1.6") (d #t) (k 0)) (d (n "owning_ref") (r "^0.3.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "0pw5w4db8kpd52l18nw5pqzfsrmpsafmlqq9r4bjgsz2jiz0gvsi") (f (quote (("json" "serde_json") ("default" "json"))))))

(define-public crate-trimmer-0.3.5 (c (n "trimmer") (v "0.3.5") (d (list (d (n "argparse") (r "^0.2.1") (d #t) (k 0)) (d (n "combine") (r "^2.4.0") (d #t) (k 0)) (d (n "difference") (r "^1.0.0") (d #t) (k 2)) (d (n "matches") (r "^0.1.6") (d #t) (k 0)) (d (n "owning_ref") (r "^0.3.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "0iby49zzyxnw2aqb4a01ak23ygf4fidk1f4g0i9g81k3a37hwzfv") (f (quote (("json" "serde_json") ("default" "json"))))))

(define-public crate-trimmer-0.3.6 (c (n "trimmer") (v "0.3.6") (d (list (d (n "argparse") (r "^0.2.1") (d #t) (k 0)) (d (n "combine") (r "^2.4.0") (d #t) (k 0)) (d (n "difference") (r "^1.0.0") (d #t) (k 2)) (d (n "matches") (r "^0.1.6") (d #t) (k 0)) (d (n "owning_ref") (r "^0.3.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "1f3cqhjd82307z1x264i93v8d1r885w55yaxrknymz8sbrwr10v7") (f (quote (("json" "serde_json") ("default" "json"))))))

