(define-module (crates-io dd c- ddc-hi) #:use-module (crates-io))

(define-public crate-ddc-hi-0.1.0 (c (n "ddc-hi") (v "0.1.0") (d (list (d (n "ddc") (r "^0.2.0") (d #t) (k 0)) (d (n "ddc-i2c") (r "^0.2.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "ddc-i2c") (r "^0.2.1") (f (quote ("with-linux" "with-linux-enumerate"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ddc-winapi") (r "^0.2.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "edid") (r "^0.2.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "mccs") (r "^0.1.0") (d #t) (k 0)) (d (n "mccs-caps") (r "^0.1.0") (d #t) (k 0)) (d (n "mccs-db") (r "^0.1.1") (d #t) (k 0)) (d (n "nvapi") (r "^0.1.2") (f (quote ("i2c"))) (o #t) (t "cfg(windows)") (k 0)))) (h "14zy3nf8d9b2vjsmsg7fy6x2m21z70hpc1pxwzbxwnv8rm63frj6") (f (quote (("default" "ddc-i2c" "ddc-winapi" "nvapi"))))))

(define-public crate-ddc-hi-0.1.1 (c (n "ddc-hi") (v "0.1.1") (d (list (d (n "ddc") (r "^0.2.0") (d #t) (k 0)) (d (n "ddc-i2c") (r "^0.2.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "ddc-i2c") (r "^0.2.1") (f (quote ("with-linux" "with-linux-enumerate"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ddc-winapi") (r "^0.2.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "edid") (r "^0.2.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "mccs") (r "^0.1.0") (d #t) (k 0)) (d (n "mccs-caps") (r "^0.1.0") (d #t) (k 0)) (d (n "mccs-db") (r "^0.1.1") (d #t) (k 0)) (d (n "nvapi") (r "^0.1.2") (f (quote ("i2c"))) (o #t) (t "cfg(windows)") (k 0)))) (h "196ylqbzf8b4kkfdxqv5xi5kqan73mlgjjmgh3xrbi9p1mkkvxzm") (f (quote (("default" "ddc-i2c" "ddc-winapi" "nvapi"))))))

(define-public crate-ddc-hi-0.1.2 (c (n "ddc-hi") (v "0.1.2") (d (list (d (n "ddc") (r "^0.2.0") (d #t) (k 0)) (d (n "ddc-i2c") (r "^0.2.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "ddc-i2c") (r "^0.2.1") (f (quote ("with-linux" "with-linux-enumerate"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ddc-winapi") (r "^0.2.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "edid") (r "^0.2.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "mccs") (r "^0.1.0") (d #t) (k 0)) (d (n "mccs-caps") (r "^0.1.0") (d #t) (k 0)) (d (n "mccs-db") (r "^0.1.1") (d #t) (k 0)) (d (n "nvapi") (r "^0.1.2") (f (quote ("i2c"))) (o #t) (t "cfg(windows)") (k 0)))) (h "0ki08x9z99fkd50znkvw8m28ld13xhsg1p9iz031n5jiam5c9qxc") (f (quote (("default" "ddc-i2c" "ddc-winapi" "nvapi"))))))

(define-public crate-ddc-hi-0.1.3 (c (n "ddc-hi") (v "0.1.3") (d (list (d (n "ddc") (r "^0.2.0") (d #t) (k 0)) (d (n "ddc-i2c") (r "^0.2.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "ddc-i2c") (r "^0.2.1") (f (quote ("with-linux" "with-linux-enumerate"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ddc-winapi") (r "^0.2.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "edid") (r "^0.2.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "mccs") (r "^0.1.0") (d #t) (k 0)) (d (n "mccs-caps") (r "^0.1.0") (d #t) (k 0)) (d (n "mccs-db") (r "^0.1.1") (d #t) (k 0)) (d (n "nvapi") (r "^0.1.2") (f (quote ("i2c"))) (o #t) (t "cfg(windows)") (k 0)))) (h "08wpc3d08kv4b7z3arfqxgw1kqzi1f4vy44sfanhmxw9pgh9sw07") (f (quote (("default" "ddc-i2c" "ddc-winapi" "nvapi"))))))

(define-public crate-ddc-hi-0.2.0 (c (n "ddc-hi") (v "0.2.0") (d (list (d (n "ddc") (r "^0.2.0") (d #t) (k 0)) (d (n "ddc-i2c") (r "^0.2.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "ddc-i2c") (r "^0.2.1") (f (quote ("with-linux" "with-linux-enumerate"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ddc-macos") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ddc-winapi") (r "^0.2.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "edid") (r "^0.2.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "mccs") (r "^0.1.0") (d #t) (k 0)) (d (n "mccs-caps") (r "^0.1.0") (d #t) (k 0)) (d (n "mccs-db") (r "^0.1.1") (d #t) (k 0)) (d (n "nvapi") (r "^0.1.2") (f (quote ("i2c"))) (o #t) (t "cfg(windows)") (k 0)))) (h "1w3zqdif0r2bnnf8k6bbj9s59m3pzd01kgk1m3z2dh4d44y7jg14") (f (quote (("default" "ddc-i2c" "ddc-winapi" "nvapi" "ddc-macos"))))))

(define-public crate-ddc-hi-0.3.0 (c (n "ddc-hi") (v "0.3.0") (d (list (d (n "ddc") (r "^0.2.0") (d #t) (k 0)) (d (n "ddc-i2c") (r "^0.2.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "ddc-i2c") (r "^0.2.1") (f (quote ("with-linux" "with-linux-enumerate"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ddc-macos") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ddc-winapi") (r "^0.2.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "edid") (r "^0.3.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "mccs") (r "^0.1.0") (d #t) (k 0)) (d (n "mccs-caps") (r "^0.1.0") (d #t) (k 0)) (d (n "mccs-db") (r "^0.1.1") (d #t) (k 0)) (d (n "nvapi") (r "^0.1.2") (f (quote ("i2c"))) (o #t) (t "cfg(windows)") (k 0)))) (h "144c80c6sfq9w1yvnay5bzhv50k70v5yld3ikwvs7cwnk0mcp3qz") (f (quote (("default" "ddc-i2c" "ddc-winapi" "nvapi" "ddc-macos"))))))

(define-public crate-ddc-hi-0.4.0 (c (n "ddc-hi") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.42") (d #t) (k 0)) (d (n "ddc") (r "^0.2.0") (d #t) (k 0)) (d (n "ddc-i2c") (r "^0.2.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "ddc-i2c") (r "^0.2.1") (f (quote ("with-linux" "with-linux-enumerate"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ddc-macos") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ddc-winapi") (r "^0.2.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "edid") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "mccs") (r "^0.1.0") (d #t) (k 0)) (d (n "mccs-caps") (r "^0.1.0") (d #t) (k 0)) (d (n "mccs-db") (r "^0.1.1") (d #t) (k 0)) (d (n "nvapi") (r "^0.1.2") (f (quote ("i2c"))) (o #t) (t "cfg(windows)") (k 0)))) (h "1lh3q55yj6g5p2r1qgmdrwh3kdbaz5fcs5dzqmisgv1kw8avk9nb") (f (quote (("default" "ddc-i2c" "ddc-winapi" "nvapi" "ddc-macos")))) (y #t)))

(define-public crate-ddc-hi-0.4.1 (c (n "ddc-hi") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.42") (d #t) (k 0)) (d (n "ddc") (r "^0.2.0") (d #t) (k 0)) (d (n "ddc-i2c") (r "^0.2.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "ddc-i2c") (r "^0.2.1") (f (quote ("with-linux" "with-linux-enumerate"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "ddc-macos") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ddc-winapi") (r "^0.2.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "edid") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "mccs") (r "^0.1.0") (d #t) (k 0)) (d (n "mccs-caps") (r "^0.1.0") (d #t) (k 0)) (d (n "mccs-db") (r "^0.1.1") (d #t) (k 0)) (d (n "nvapi") (r "^0.1.2") (f (quote ("i2c"))) (o #t) (t "cfg(windows)") (k 0)))) (h "1pllvvsmra839jdgdqphpaky69n7dhd0zcrr8yijlsljgjqlfrww") (f (quote (("default" "ddc-i2c" "ddc-winapi" "nvapi" "ddc-macos"))))))

