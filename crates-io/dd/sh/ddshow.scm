(define-module (crates-io dd sh ddshow) #:use-module (crates-io))

(define-public crate-ddshow-0.1.1 (c (n "ddshow") (v "0.1.1") (d (list (d (n "abomonation") (r "^0.7.3") (d #t) (k 0)) (d (n "abomonation_derive") (r "^0.5.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "bytecheck") (r "^0.5.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "colorous") (r "^1.0.3") (d #t) (k 0)) (d (n "comfy-table") (r "^2.1.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "ddshow-sink") (r "^0.1.0") (f (quote ("ddflow" "tracing"))) (d #t) (k 0)) (d (n "ddshow-types") (r "^0.1.0") (f (quote ("rkyv" "serde" "enable_abomonation"))) (d #t) (k 0)) (d (n "differential-dataflow") (r "^0.12.0") (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 2)) (d (n "rkyv") (r "^0.6.6") (f (quote ("validation"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tera") (r "^1.6.1") (d #t) (k 0)) (d (n "timely") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.2.0") (f (quote ("alloc" "serde"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.16") (d #t) (k 0)) (d (n "vergen") (r "^5.1.6") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "0zacvia1c682bysx6jkswilsqksla8k73hfk0s4sbb1224sa71mz") (f (quote (("timely-next") ("default"))))))

(define-public crate-ddshow-0.2.2 (c (n "ddshow") (v "0.2.2") (d (list (d (n "abomonation") (r "^0.7.3") (d #t) (k 0)) (d (n "abomonation_derive") (r "^0.5.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "colorous") (r "^1.0.5") (d #t) (k 0)) (d (n "comfy-table") (r "^4.0.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "crossbeam-deque") (r "^0.8.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.20.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.9") (d #t) (k 0)) (d (n "ddshow-sink") (r "^0.2.0") (f (quote ("ddflow" "tracing"))) (d #t) (k 0)) (d (n "ddshow-types") (r "^0.2.0") (f (quote ("rkyv" "serde" "enable_abomonation"))) (d #t) (k 0)) (d (n "differential-dataflow") (r "^0.12.0") (k 0)) (d (n "libtest-mimic") (r "^0.3.0") (d #t) (k 2)) (d (n "mimalloc") (r "^0.1.26") (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "ordered-float") (r "^2.7.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rkyv") (r "=0.7.3") (f (quote ("validation" "tinyvec" "tinyvec_alloc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.65") (d #t) (k 0)) (d (n "structopt") (r "^0.3.22") (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tera") (r "^1.12.1") (k 0)) (d (n "timely") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.3.1") (f (quote ("alloc" "serde"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (f (quote ("release_max_level_info"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (f (quote ("env-filter" "fmt" "ansi"))) (k 0)) (d (n "vergen") (r "^5.1.13") (f (quote ("build" "cargo" "rustc"))) (k 1)) (d (n "xxhash-rust") (r "^0.8.2") (f (quote ("xxh3"))) (k 0)))) (h "0rqfzw8szk5r23q2jimapyd9a53j1rs9ry751qsmbns6n0jsncww") (f (quote (("timely-next") ("default"))))))

