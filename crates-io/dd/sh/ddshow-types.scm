(define-module (crates-io dd sh ddshow-types) #:use-module (crates-io))

(define-public crate-ddshow-types-0.1.1 (c (n "ddshow-types") (v "0.1.1") (d (list (d (n "abomonation") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "abomonation_derive") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "bytecheck") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "differential-dataflow") (r "^0.12.0") (o #t) (k 0)) (d (n "rkyv_dep") (r "^0.6.6") (f (quote ("validation"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "serde_dep") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "timely") (r "^0.12.0") (k 0)) (d (n "tinyvec") (r "^1.2.0") (f (quote ("alloc"))) (d #t) (k 0)))) (h "0sfjgc6sbvpi2pv9xszcj8i5cdxgcd27rwax64iap1hcw7yhdshk") (f (quote (("serde" "serde_dep" "tinyvec/serde") ("rkyv" "rkyv_dep" "bytecheck") ("enable_abomonation" "abomonation" "abomonation_derive") ("default" "rkyv" "ddflow") ("ddflow" "differential-dataflow"))))))

(define-public crate-ddshow-types-0.2.0 (c (n "ddshow-types") (v "0.2.0") (d (list (d (n "abomonation") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "abomonation_derive") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "differential-dataflow") (r "^0.12.0") (o #t) (k 0)) (d (n "rkyv_dep") (r "=0.7.3") (f (quote ("validation" "tinyvec" "tinyvec_alloc"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "serde_dep") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "timely") (r "^0.12.0") (k 0)) (d (n "tinyvec") (r "^1.3.1") (f (quote ("alloc" "serde"))) (d #t) (k 0)))) (h "1hhisxw5lcgvn54h09p7j18rdz3gv8kzdb4x5aym4zwixcfnaf5m") (f (quote (("serde" "serde_dep" "tinyvec/serde") ("rkyv" "rkyv_dep" "bytecheck") ("enable_abomonation" "abomonation" "abomonation_derive") ("default" "rkyv" "ddflow") ("ddflow" "differential-dataflow")))) (y #t)))

(define-public crate-ddshow-types-0.2.1 (c (n "ddshow-types") (v "0.2.1") (d (list (d (n "abomonation") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "abomonation_derive") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "differential-dataflow") (r "^0.12.0") (o #t) (k 0)) (d (n "rkyv_dep") (r "=0.7.3") (f (quote ("validation" "tinyvec" "tinyvec_alloc"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "serde_dep") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "timely") (r "^0.12.0") (k 0)) (d (n "tinyvec") (r "^1.3.1") (f (quote ("alloc" "serde"))) (d #t) (k 0)))) (h "1vrgxijsp5gnn6spvp2salmyib58b1wxyj1p3pxg72h6lh6var4m") (f (quote (("serde" "serde_dep" "tinyvec/serde") ("rkyv" "rkyv_dep" "bytecheck") ("enable_abomonation" "abomonation" "abomonation_derive") ("default" "rkyv" "ddflow") ("ddflow" "differential-dataflow")))) (y #t)))

(define-public crate-ddshow-types-0.2.2 (c (n "ddshow-types") (v "0.2.2") (d (list (d (n "abomonation") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "abomonation_derive") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "bytecheck") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "differential-dataflow") (r "^0.12.0") (o #t) (k 0)) (d (n "rkyv_dep") (r "=0.7.3") (f (quote ("validation" "tinyvec" "tinyvec_alloc"))) (o #t) (d #t) (k 0) (p "rkyv")) (d (n "serde_dep") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "timely") (r "^0.12.0") (k 0)) (d (n "tinyvec") (r "^1.3.1") (f (quote ("alloc" "serde"))) (d #t) (k 0)))) (h "18cyik0cp7221pli7qh63010bvqb0aqh3cb094qvbgqr5wd62gwq") (f (quote (("serde" "serde_dep" "tinyvec/serde") ("rkyv" "rkyv_dep" "bytecheck") ("enable_abomonation" "abomonation" "abomonation_derive") ("default" "rkyv" "ddflow") ("ddflow" "differential-dataflow"))))))

