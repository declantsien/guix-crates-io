(define-module (crates-io db uz dbuz) #:use-module (crates-io))

(define-public crate-dbuz-0.1.0 (c (n "dbuz") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "clap") (r "^4.0.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "enumflags2") (r "^0.7.0") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.23") (d #t) (k 0)) (d (n "nix") (r "^0.25.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("rc"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("macros" "rt-multi-thread" "signal"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "fmt"))) (k 0)) (d (n "zbus") (r "^3.4.0") (f (quote ("tokio"))) (k 0)))) (h "0hhzjpcscjh6r4sf5k06m99d60jvi4azx1gsvkfi7bkdb48cpihs") (y #t) (r "1.60")))

(define-public crate-dbuz-0.2.0 (c (n "dbuz") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "clap") (r "^4.0.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "enumflags2") (r "^0.7.0") (d #t) (k 0)) (d (n "fastrand") (r "^1.8.0") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.23") (d #t) (k 0)) (d (n "nix") (r "^0.25.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("rc"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("macros" "rt-multi-thread" "signal"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "fmt"))) (k 0)) (d (n "zbus") (r "^3.4.0") (f (quote ("tokio"))) (k 0)))) (h "0k3azzarmvwy803yia1bx8g14m7qzsfsl8c11qdf16za61ij1n6n") (y #t) (r "1.60")))

