(define-module (crates-io fv m_ fvm_ipld_hamt) #:use-module (crates-io))

(define-public crate-fvm_ipld_hamt-0.1.0 (c (n "fvm_ipld_hamt") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cid") (r "^0.8.2") (f (quote ("serde-codec"))) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "forest_hash_utils") (r "^0.1") (d #t) (k 0)) (d (n "fvm_shared") (r "^0.1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 2)))) (h "09hd164hlb7yg2jjn1smn4si814d58vwskmmsq0kfnvdg8y881lw") (f (quote (("ignore-dead-links") ("identity"))))))

(define-public crate-fvm_ipld_hamt-0.2.0 (c (n "fvm_ipld_hamt") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cid") (r "^0.8.2") (f (quote ("serde-codec"))) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "forest_hash_utils") (r "^0.1") (d #t) (k 0)) (d (n "fvm_shared") (r "^0.2.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "libipld-core") (r "^0.13.1") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 2)))) (h "0y15ycszjmkn61650dpv03m3z03mlsk2w08ncw8wwy0rgs2hfkyx") (f (quote (("ignore-dead-links") ("identity"))))))

(define-public crate-fvm_ipld_hamt-0.3.0 (c (n "fvm_ipld_hamt") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cid") (r "^0.8.2") (f (quote ("serde-codec"))) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "forest_hash_utils") (r "^0.1") (d #t) (k 0)) (d (n "fvm_shared") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "libipld-core") (r "^0.13.1") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 2)))) (h "1wwvabr53mfr89v4kg65dsiywihw2bkfpiwgli34snqjj0axmwqy") (f (quote (("ignore-dead-links") ("identity"))))))

(define-public crate-fvm_ipld_hamt-0.4.0 (c (n "fvm_ipld_hamt") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cid") (r "^0.8.2") (f (quote ("serde-codec"))) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "forest_hash_utils") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "libipld-core") (r "^0.13.1") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "multihash") (r "^0.16.1") (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 2)))) (h "0g38lv365gbv4ikr93dadc4ryhlln9jp5x60q05kd0m8c7inlg50") (f (quote (("ignore-dead-links") ("identity"))))))

(define-public crate-fvm_ipld_hamt-0.5.0 (c (n "fvm_ipld_hamt") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cid") (r "^0.8.2") (f (quote ("serde-codec"))) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "forest_hash_utils") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "libipld-core") (r "^0.13.1") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "multihash") (r "^0.16.1") (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 2)))) (h "1z7cvyy3vhhb0l628bnmw8hxri3d2cnidk1xhib68gxkacsn3iqa") (f (quote (("ignore-dead-links") ("identity"))))))

(define-public crate-fvm_ipld_hamt-0.5.1 (c (n "fvm_ipld_hamt") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cid") (r "^0.8.2") (f (quote ("serde-codec"))) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "forest_hash_utils") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "libipld-core") (r "^0.13.1") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "multihash") (r "^0.16.1") (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 2)))) (h "1h66aahqqvvcsqhgyy1jmxqr6s0hp9cc9fbw7vbbz8bsi4wwkdb5") (f (quote (("ignore-dead-links") ("identity"))))))

(define-public crate-fvm_ipld_hamt-0.6.0 (c (n "fvm_ipld_hamt") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec"))) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "forest_hash_utils") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "libipld-core") (r "^0.14.0") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "multihash") (r "^0.16.1") (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 2)))) (h "1akgskj3m60li7rpvyqabqfwgc10hd22sy1l7xkfjvv71kdw12p4") (f (quote (("ignore-dead-links") ("identity"))))))

(define-public crate-fvm_ipld_hamt-0.6.1 (c (n "fvm_ipld_hamt") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec"))) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "forest_hash_utils") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "libipld-core") (r "^0.14.0") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "multihash") (r "^0.16.1") (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 2)))) (h "1ry3lax6qmbmg8wkc23xmfffjyvq9kivs4a366nax479vna2950c") (f (quote (("ignore-dead-links") ("identity"))))))

(define-public crate-fvm_ipld_hamt-0.7.0 (c (n "fvm_ipld_hamt") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.10.1") (f (quote ("serde-codec"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "forest_hash_utils") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.2") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "libipld-core") (r "^0.16.0") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "multihash") (r "^0.18.1") (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 2)))) (h "160drkzy8hky80alp3rcci1kmm780dzbpc1vjzzrbaypbf8na77h") (f (quote (("ignore-dead-links") ("identity"))))))

(define-public crate-fvm_ipld_hamt-0.8.0 (c (n "fvm_ipld_hamt") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.10.1") (f (quote ("serde-codec"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "forest_hash_utils") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.2") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "libipld-core") (r "^0.16.0") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "multihash") (r "^0.18.1") (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 2)))) (h "1g89p1pjh4lgxjlvgbb7p4hwk44lj0yyk84wk7n9qi49qwa3x983") (f (quote (("ignore-dead-links") ("identity"))))))

(define-public crate-fvm_ipld_hamt-0.9.0 (c (n "fvm_ipld_hamt") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.10.1") (f (quote ("serde-codec"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "forest_hash_utils") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.2") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "libipld-core") (r "^0.16.0") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "multihash") (r "^0.18.1") (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 2)))) (h "1cy3k82slaki7zml48j72w3wh070z3ifwsgna768gzw7c1rh1ja8") (f (quote (("identity"))))))

