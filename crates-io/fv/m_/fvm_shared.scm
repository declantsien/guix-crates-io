(define-module (crates-io fv m_ fvm_shared) #:use-module (crates-io))

(define-public crate-fvm_shared-0.1.0 (c (n "fvm_shared") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.11") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (d #t) (k 0)) (d (n "cid") (r "^0.8.2") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^11") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl" "identity"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_cbor") (r "^0.12") (f (quote ("tags"))) (d #t) (k 0) (p "cs_serde_cbor")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "17zi12q1b564n17glrg5y15lp38bkpmnvinwgq9ld9i1fzk1mr88") (f (quote (("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst"))))))

(define-public crate-fvm_shared-0.2.0 (c (n "fvm_shared") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.11") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (d #t) (k 0)) (d (n "cid") (r "^0.8.2") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^11") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl" "identity"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_ipld_dagcbor") (r "^0.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "01i63a8gy2bw5zy1s6va265azlspq50da6c7gcgs7p0v09f8vcbs") (f (quote (("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst"))))))

(define-public crate-fvm_shared-0.2.1 (c (n "fvm_shared") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.11") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (d #t) (k 0)) (d (n "cid") (r "^0.8.2") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^11") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_ipld_dagcbor") (r "^0.1.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "1r661cn9a07kvlzj27x7xbzrq170wplzh3gb9wsz6dmdnkf7mh2m") (f (quote (("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst"))))))

(define-public crate-fvm_shared-0.2.2 (c (n "fvm_shared") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.11") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (d #t) (k 0)) (d (n "cid") (r "^0.8.2") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^11") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_ipld_dagcbor") (r "^0.1.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "0ghbd0677n2cnmhcf1vabrry31n8s6dlx6yq01l7kk00hx7d3s8f") (f (quote (("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst"))))))

(define-public crate-fvm_shared-0.3.0 (c (n "fvm_shared") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.11") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (d #t) (k 0)) (d (n "cid") (r "^0.8.2") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^11") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_ipld_dagcbor") (r "^0.1.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "1wd0c7wv0va2hdf78igaapx68zvndzif93i70i273nv5jxjnvvrj") (f (quote (("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (y #t)))

(define-public crate-fvm_shared-0.3.1 (c (n "fvm_shared") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.11") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (d #t) (k 0)) (d (n "cid") (r "^0.8.2") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^11") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_ipld_dagcbor") (r "^0.1.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "1y7wqd14sz2wngbqhiqgkpw8z5bgv2rn316jw1lm8pz64xr4y9lx") (f (quote (("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst"))))))

(define-public crate-fvm_shared-0.4.0 (c (n "fvm_shared") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.11") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (d #t) (k 0)) (d (n "cid") (r "^0.8.2") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^11") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "1d8l0xnih2jmazshrmxpawaidb76z7brdg16ghl0d396zfj6q7vd") (f (quote (("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst"))))))

(define-public crate-fvm_shared-0.4.1 (c (n "fvm_shared") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.11") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (d #t) (k 0)) (d (n "cid") (r "^0.8.2") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^11") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "0wj5z5lp3rifxwfsfa1mz2gwzf721niv5mb1c6jrg0ahalaygsmw") (f (quote (("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst"))))))

(define-public crate-fvm_shared-0.5.0 (c (n "fvm_shared") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.11") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (d #t) (k 0)) (d (n "cid") (r "^0.8.2") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^11") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "1fljwgrk9fhmacmgrj769cgcsqimdayc37niv72fw6am3y229z4v") (f (quote (("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst"))))))

(define-public crate-fvm_shared-0.5.1 (c (n "fvm_shared") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.11") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (d #t) (k 0)) (d (n "cid") (r "^0.8.2") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^11") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "1qjxjl4lgcxyh1pl9gpa7swmif5awdb3w0qy7w383bphih90jl99") (f (quote (("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst"))))))

(define-public crate-fvm_shared-0.6.0 (c (n "fvm_shared") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.11") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (d #t) (k 0)) (d (n "cid") (r "^0.8.2") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^11") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "0nrgsmvqzr8b3hgmx2igp8pcndgkka9qmlr5vgl87m9mbflzcz45") (f (quote (("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst"))))))

(define-public crate-fvm_shared-0.6.1 (c (n "fvm_shared") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.11") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (d #t) (k 0)) (d (n "cid") (r "^0.8.2") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^11") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "0yy860kqj8a758vzxmzl5gs92wxjf3yyh7jhl4br7zmij749cap7") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst"))))))

(define-public crate-fvm_shared-0.7.0 (c (n "fvm_shared") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.11") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.2") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^11") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "0hj8dajywv1l2sfckl0jyvfa7vnvk42mjbk9gw5fwjm57cjzrjad") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst"))))))

(define-public crate-fvm_shared-0.7.1 (c (n "fvm_shared") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.11") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^11") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "0bmsnsn6gvj29pws4xiyvayj1fnpk14allyjmmmr37zbyas5ybr8") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-0.8.0 (c (n "fvm_shared") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.11") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "~11.1") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "1l6555x5pcd5qs0a063h7ccbr1pazklf40h5vwqbf0rparf4ihll") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-0.9.0 (c (n "fvm_shared") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 0)) (d (n "multihash") (r "^0.16.1") (f (quote ("blake2b" "multihash-impl"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "0r23d95iwqhh32wjwyac16hwpparz7nkh1x257hqzz1s975brxvx") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-2.0.0-alpha.1 (c (n "fvm_shared") (v "2.0.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "0qgxqz473qb12mh2hjkilm5iywygnygdw4k1yd51dv981kv5vw0v") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-2.0.0-alpha.2 (c (n "fvm_shared") (v "2.0.0-alpha.2") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "02d5ca8zf0l2bxvyjcwy17k5id5k7c6iar7np1pk02afpipgm19w") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-2.0.0-alpha.3 (c (n "fvm_shared") (v "2.0.0-alpha.3") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "0f43kliw5mwy12hzfyvrjqn97jhcg80xgyqy21gs4i8yvrlnrm22") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-3.0.0-alpha.1 (c (n "fvm_shared") (v "3.0.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "0l8xsv6bdalj5r0xrqcxynn5rq1qbncbmpvpk53nv79fvv1i84r6") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-2.0.0-alpha.4 (c (n "fvm_shared") (v "2.0.0-alpha.4") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "1yjfqj6gvhmb2yb600sns9509g7yqfhmm91c528q15cm21v13i66") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-3.0.0-alpha.2 (c (n "fvm_shared") (v "3.0.0-alpha.2") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "1fhrbwf9z7s4n5gppk6q90nmkcc0i6kfdcca3sxp3iq1ismx4ayr") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-3.0.0-alpha.3 (c (n "fvm_shared") (v "3.0.0-alpha.3") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "1mrpf2nhb7jhfsxr9k4637x15xhcm8fbqrkpa2gk7554dmaxg0zk") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-3.0.0-alpha.4 (c (n "fvm_shared") (v "3.0.0-alpha.4") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "0fw9nirvb8r5lc1viz1hx3385bwmqjrzydkishas8kgfjclba1k8") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-3.0.0-alpha.5 (c (n "fvm_shared") (v "3.0.0-alpha.5") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "1wyhcdf36kcyzdqanb1zn5rzwgnx0paqw7zpjhw98b01amd1jajg") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-2.0.0 (c (n "fvm_shared") (v "2.0.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "0x6g25mv5dl2vsq1p8x9pcbn1d76qj1xw5j8dsfr0x3v5gk1szgz") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-3.0.0-alpha.6 (c (n "fvm_shared") (v "3.0.0-alpha.6") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "09d8lz68dwjkqmd0jhqiy3kl3sdfq9i5cw45hpsd04d386dhvfbr") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-3.0.0-alpha.7 (c (n "fvm_shared") (v "3.0.0-alpha.7") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "19k75gkv8njy2x0mkh0mnvbjf383bdfhx7vrfz4n75159hjl1gf8") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("f4-as-account" "sha3") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-3.0.0-alpha.8 (c (n "fvm_shared") (v "3.0.0-alpha.8") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "1jgcazakn58fpvwc4nd83b88wxfsfjfhdy815h7dxkwrycn75w6r") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("f4-as-account" "sha3") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-3.0.0-alpha.9 (c (n "fvm_shared") (v "3.0.0-alpha.9") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "1xjdjm26f81fckjnhp2ngs017l0ggnwhidrv6zj52bxgi84cgn6q") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("f4-as-account" "sha3") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-3.0.0-alpha.10 (c (n "fvm_shared") (v "3.0.0-alpha.10") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "1w48id98cxs58a6lx6562z2qzsn3iimgjc9900ddla0nbipg7mgw") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("f4-as-account" "sha3") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-3.0.0-alpha.11 (c (n "fvm_shared") (v "3.0.0-alpha.11") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "0acvf19h7cmphcxhq8bj66z5bj4dkwqhhq1npgrxwwqjjzw8asyn") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("f4-as-account" "sha3") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-3.0.0-alpha.12 (c (n "fvm_shared") (v "3.0.0-alpha.12") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "19wxcs4va1bq5ly5r3jdzq1rwmdz0jmywah9pgzcyy48m8fcr7wx") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("f4-as-account" "sha3") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-3.0.0-alpha.13 (c (n "fvm_shared") (v "3.0.0-alpha.13") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "19g0jllfaf5ywymd90wfl705rih03yzcsr74qgljr2k11kdnlw8w") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("f4-as-account" "sha3") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck"))))))

(define-public crate-fvm_shared-3.0.0-alpha.14 (c (n "fvm_shared") (v "3.0.0-alpha.14") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "1d8xi9k5n2v92z55af901bjfs7rpds0b895p1ib1b8ym1dr84k4g") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("f4-as-account" "sha3") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck"))))))

(define-public crate-fvm_shared-3.0.0-alpha.15 (c (n "fvm_shared") (v "3.0.0-alpha.15") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "1hp2rqv6zs8lzf46dgv30zkm495w3hf48w2n5k9bqiz1l1ck5skd") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck"))))))

(define-public crate-fvm_shared-3.0.0-alpha.16 (c (n "fvm_shared") (v "3.0.0-alpha.16") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "0hii519s8nyc9z5r0mi99rs4wm57bmn5ynh1a0bhyiab5sxncmm9") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck"))))))

(define-public crate-fvm_shared-3.0.0-alpha.17 (c (n "fvm_shared") (v "3.0.0-alpha.17") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "1qc2whj6sbr1kg7gxb5rll11wr5m0ha70x0l2qag947385j8fy9p") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck"))))))

(define-public crate-fvm_shared-3.0.0-alpha.18 (c (n "fvm_shared") (v "3.0.0-alpha.18") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "075njd4zb9h4l4yvyv8ywlwkaz341923kdsysszx3j1f0hkk9494") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck"))))))

(define-public crate-fvm_shared-3.0.0-alpha.19 (c (n "fvm_shared") (v "3.0.0-alpha.19") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "06iyiwrs2brrql44siaw64ph5ncswah41p1y0kxfv52k87iph019") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck"))))))

(define-public crate-fvm_shared-3.0.0-alpha.20 (c (n "fvm_shared") (v "3.0.0-alpha.20") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "06hxls12kjipvs30cmlawrjwbjjghw4nq40g8gih6grrq7ab955m") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck"))))))

(define-public crate-fvm_shared-3.0.0 (c (n "fvm_shared") (v "3.0.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.12") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^12") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "0qaq41sq3ry8nx8jyh75kjp19jig7vjm9nm0kj6ijd2yhsm0d769") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck"))))))

(define-public crate-fvm_shared-3.1.0 (c (n "fvm_shared") (v "3.1.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.13") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^13") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "1wjqydpyqll48pz6an5akphmcbqis1py77kym4hh3a25ykh2lx25") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck"))))))

(define-public crate-fvm_shared-2.3.0 (c (n "fvm_shared") (v "2.3.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.13") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^13") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "0siznzrsnf9z58nx44959b8mjd64lw57vqlqcai8pkgsygxq122i") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-3.2.0 (c (n "fvm_shared") (v "3.2.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.13") (o #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^14") (o #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "1ddbprsiak0w6fn0w3p600rw44sv21pjjy7m4j6q00nfqapqckk7") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck"))))))

(define-public crate-fvm_shared-3.3.0 (c (n "fvm_shared") (v "3.3.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.13") (o #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^14") (o #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "1pq5psa8qr8pdd7va3fzzkkyf4bnmqa98g6m9x5lbv2f87azqdci") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck"))))))

(define-public crate-fvm_shared-3.3.1 (c (n "fvm_shared") (v "3.3.1") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.13") (o #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^14") (o #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "0q4d5xr0a0r9msdk575bmxqa6qy8qpziil009621b4nmyw36zmra") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck"))))))

(define-public crate-fvm_shared-2.4.0 (c (n "fvm_shared") (v "2.4.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.13") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.8.5") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^14") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.1.2") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.16.3") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "0s6l9dsnxjv9zh5rrbiwcz51wdl31iq4svir9khsmn0kp94vrvh5") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-3.4.0 (c (n "fvm_shared") (v "3.4.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.1") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.13") (o #t) (k 0)) (d (n "cid") (r "^0.10.1") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.13") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^14") (o #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.18.1") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.18.1") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (d #t) (k 0)) (d (n "quickcheck_macros") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 2)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "17aq4rm4i7x4ybivmp36pbz2fgl74jpviwgy4pv415ib6w9bj147") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck"))))))

(define-public crate-fvm_shared-2.5.0 (c (n "fvm_shared") (v "2.5.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.13") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.10.1") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^14") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.2.0") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.18.0") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.18.0") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "0mlhpm64bpb6k9lncg71y0sgja4h6gjs3dbjz5kx554b0mpqmfwz") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-3.5.0 (c (n "fvm_shared") (v "3.5.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.1") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.13") (o #t) (k 0)) (d (n "cid") (r "^0.10.1") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.13") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^14") (o #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.18.1") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.18.1") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (d #t) (k 0)) (d (n "quickcheck_macros") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 2)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "0k0bi111hs81n24a6gg6w6iiz6zya6lxwm6d8d46livykn4pasll") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck"))))))

(define-public crate-fvm_shared-2.6.0 (c (n "fvm_shared") (v "2.6.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.15") (o #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cid") (r "^0.10.1") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.12") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^16") (o #t) (k 0)) (d (n "fvm_ipld_blockstore") (r "^0.2.0") (d #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "multihash") (r "^0.18.0") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 0)) (d (n "multihash") (r "^0.18.0") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "09m06281awckfpnslqmjnjx7pmy1ipm2w9ff623abpya7p1b1nk6") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst") ("arb" "arbitrary"))))))

(define-public crate-fvm_shared-3.6.0 (c (n "fvm_shared") (v "3.6.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.1") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.15") (o #t) (k 0)) (d (n "cid") (r "^0.10.1") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.13") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^16") (o #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.18.1") (k 0)) (d (n "multihash") (r "^0.18.1") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (d #t) (k 0)) (d (n "quickcheck_macros") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 2)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "0vf45avq9ql0zd0lbgsq16b2nzxhabdy3h32z2j95glm1dhq5ag6") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck"))))))

(define-public crate-fvm_shared-4.0.0-alpha.2 (c (n "fvm_shared") (v "4.0.0-alpha.2") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.1") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.15") (o #t) (k 0)) (d (n "cid") (r "^0.10.1") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.13") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^16") (o #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.18.1") (k 0)) (d (n "multihash") (r "^0.18.1") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (d #t) (k 0)) (d (n "quickcheck_macros") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 2)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "08vkbjqzddrjwhz2sk34hmafjih5h53vg2rgyfsrs9p5j46l7i0x") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck"))))))

(define-public crate-fvm_shared-4.0.0-alpha.3 (c (n "fvm_shared") (v "4.0.0-alpha.3") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.1") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.15") (o #t) (k 0)) (d (n "cid") (r "^0.10.1") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.13") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^16") (o #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.18.1") (k 0)) (d (n "multihash") (r "^0.18.1") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (d #t) (k 0)) (d (n "quickcheck_macros") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 2)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "0idf2i5akff0bwpnkvnp1i1n0zvmws97vy094m4x4bxlc77qhk70") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck"))))))

(define-public crate-fvm_shared-4.0.0-alpha.4 (c (n "fvm_shared") (v "4.0.0-alpha.4") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.1") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.15") (o #t) (k 0)) (d (n "cid") (r "^0.10.1") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.13") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^16") (o #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.18.1") (k 0)) (d (n "multihash") (r "^0.18.1") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (d #t) (k 0)) (d (n "quickcheck_macros") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 2)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "157kqnkkm12iyg025swck91pmzv8k04nc2s3sq2nj99sdpidwaq2") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck"))))))

(define-public crate-fvm_shared-4.0.0 (c (n "fvm_shared") (v "4.0.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.1") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.15") (o #t) (k 0)) (d (n "cid") (r "^0.10.1") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.13") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^16") (o #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.18.1") (k 0)) (d (n "multihash") (r "^0.18.1") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (d #t) (k 0)) (d (n "quickcheck_macros") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 2)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.1") (d #t) (k 0)))) (h "1slj4ccy33da2v14ds9qpkgcyds2jj17nrh241s246xwigs9x8f3") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck"))))))

(define-public crate-fvm_shared-4.1.0 (c (n "fvm_shared") (v "4.1.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.1") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.15") (o #t) (k 0)) (d (n "cid") (r "^0.10.1") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.13") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^16") (o #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.18.1") (k 0)) (d (n "multihash") (r "^0.18.1") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "quickcheck") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.0") (d #t) (k 2)) (d (n "rusty-fork") (r "^0.3.0") (k 2)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 2)) (d (n "serde_tuple") (r "^0.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.2") (d #t) (k 0)))) (h "1bv7m693v47jwfxwagksi0n2wzsqkyflv4kj0mi022kwx8ci3g2f") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck" "cid/arb"))))))

(define-public crate-fvm_shared-4.1.1 (c (n "fvm_shared") (v "4.1.1") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.1") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.15") (o #t) (k 0)) (d (n "cid") (r "^0.10.1") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.13") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^16") (o #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.18.1") (k 0)) (d (n "multihash") (r "^0.18.1") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "quickcheck") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.0") (d #t) (k 2)) (d (n "rusty-fork") (r "^0.3.0") (k 2)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 2)) (d (n "serde_tuple") (r "^0.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.2") (d #t) (k 0)))) (h "1axc293yyp9s2p4vzr5rq4icd6fq241bzjn28i7mv5wv4avyy200") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck" "cid/arb"))))))

(define-public crate-fvm_shared-4.1.2 (c (n "fvm_shared") (v "4.1.2") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.1") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.15") (o #t) (k 0)) (d (n "cid") (r "^0.10.1") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "coverage-helper") (r "^0.2.0") (d #t) (k 2)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.13") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^16") (o #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.18.1") (k 0)) (d (n "multihash") (r "^0.18.1") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "quickcheck") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.0") (d #t) (k 2)) (d (n "rusty-fork") (r "^0.3.0") (k 2)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 2)) (d (n "serde_tuple") (r "^0.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.2") (d #t) (k 0)))) (h "00qczjxhswv5bfs1ad934cmr001glp4jfjqj4hdjsncg2h1s1ycm") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck" "cid/arb"))))))

(define-public crate-fvm_shared-4.2.0 (c (n "fvm_shared") (v "4.2.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.1") (d #t) (k 0)) (d (n "bls-signatures") (r "^0.15") (o #t) (k 0)) (d (n "cid") (r "^0.10.1") (f (quote ("serde-codec" "std"))) (k 0)) (d (n "coverage-helper") (r "^0.2.0") (d #t) (k 2)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.13") (d #t) (k 0)) (d (n "filecoin-proofs-api") (r "^16") (o #t) (k 0)) (d (n "fvm_ipld_encoding") (r "^0.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.18.1") (k 0)) (d (n "multihash") (r "^0.18.1") (f (quote ("multihash-impl" "sha2" "sha3" "ripemd"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "quickcheck") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.0") (d #t) (k 2)) (d (n "rusty-fork") (r "^0.3.0") (k 2)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 2)) (d (n "serde_tuple") (r "^0.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7.2") (d #t) (k 0)))) (h "11fhjaqmzz6pcizpzh0hgh7wgg3yv24c204jignz3c43m13lgphr") (f (quote (("testing") ("secp256k1" "libsecp256k1") ("proofs" "filecoin-proofs-api") ("pairing" "bls-signatures/pairing") ("default") ("crypto" "libsecp256k1" "blst" "proofs") ("blst" "bls-signatures/blst")))) (s 2) (e (quote (("arb" "arbitrary" "dep:quickcheck" "num-bigint/quickcheck" "cid/arb"))))))

