(define-module (crates-io sb lo sbloom) #:use-module (crates-io))

(define-public crate-sbloom-0.5.1 (c (n "sbloom") (v "0.5.1") (d (list (d (n "crunchy") (r "^0.1.6") (f (quote ("limit_256"))) (d #t) (k 0)) (d (n "fixed-hash") (r "^0.2.3") (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "rustc-hex") (r "^2.0") (d #t) (k 2)) (d (n "s-types-serialize") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)))) (h "1b4fpqwnfwmwaaliww8r8i9fpx58rh5qnxqkps4q2nx3g6yrkb79") (f (quote (("std" "fixed-hash/std") ("serialize" "std" "s-types-serialize" "serde") ("heapsizeof" "fixed-hash/heapsizeof") ("default" "std" "heapsizeof" "serialize" "fixed-hash/libc"))))))

(define-public crate-sbloom-0.5.0 (c (n "sbloom") (v "0.5.0") (d (list (d (n "crunchy") (r "^0.1.6") (f (quote ("limit_256"))) (d #t) (k 0)) (d (n "fixed-hash") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "rustc-hex") (r "^1.0") (d #t) (k 2)) (d (n "s-types-serialize") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)))) (h "0y6w30ip5qs0afzc30gyfvr4vnw17kcllmxsw4mgvaxcp5sp7arl") (f (quote (("std" "fixed-hash/std") ("serialize" "std" "s-types-serialize" "serde") ("heapsizeof" "fixed-hash/heapsizeof") ("default" "std" "heapsizeof" "serialize" "fixed-hash/libc"))))))

