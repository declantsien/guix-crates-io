(define-module (crates-io sb z- sbz-switch) #:use-module (crates-io))

(define-public crate-sbz-switch-0.1.0 (c (n "sbz-switch") (v "0.1.0") (d (list (d (n "clap") (r "^2.27") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "slog") (r "^2.0") (d #t) (k 0)) (d (n "sloggers") (r "^0.2") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (k 0)))) (h "1qx7z3mw96pqqmnwn120hhph320sbvqv4wfqp3z03nnij780pd5v")))

(define-public crate-sbz-switch-1.0.0 (c (n "sbz-switch") (v "1.0.0") (d (list (d (n "clap") (r "^2.27") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.0") (f (quote ("max_level_trace" "release_max_level_info"))) (d #t) (k 0)) (d (n "sloggers") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.4") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (k 0)))) (h "129k5j9sjw0f3mi3czzfl186zhmr1hz673g7ah59gf7sqdkllkr0")))

(define-public crate-sbz-switch-1.1.0 (c (n "sbz-switch") (v "1.1.0") (d (list (d (n "clap") (r "^2.27") (d #t) (k 0)) (d (n "ole32-sys") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.0") (f (quote ("max_level_trace" "release_max_level_info"))) (d #t) (k 0)) (d (n "sloggers") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.4") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (k 0)))) (h "01kiblg8wcbqf132lr9arzbix13z9pqbgyki3av322hgscgiv1ai")))

(define-public crate-sbz-switch-2.0.0 (c (n "sbz-switch") (v "2.0.0") (d (list (d (n "clap") (r "^2.32") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.3") (f (quote ("max_level_trace" "release_max_level_info"))) (d #t) (k 0)) (d (n "sloggers") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.4") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("combaseapi" "coml2api" "endpointvolume" "mmdeviceapi" "objbase" "oleauto" "unknwnbase" "winerror"))) (d #t) (k 0)))) (h "1v745vn501fsrpwva4dg6xmnawxnc7sb5dfsry4rj4zryvji42zh")))

(define-public crate-sbz-switch-3.0.0 (c (n "sbz-switch") (v "3.0.0") (d (list (d (n "clap") (r "^2.32") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "slog") (r "^2.4") (f (quote ("max_level_trace" "release_max_level_info"))) (d #t) (k 0)) (d (n "sloggers") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.4") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("combaseapi" "coml2api" "endpointvolume" "mmdeviceapi" "objbase" "oleauto" "synchapi" "unknwnbase" "winerror"))) (d #t) (k 0)))) (h "0clcjqjh9dsd3a2j19bk8dyb10a8d896lgh0pyab90190ql7hddz")))

(define-public crate-sbz-switch-3.1.0 (c (n "sbz-switch") (v "3.1.0") (d (list (d (n "clap") (r "^2.32") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "slog") (r "^2.4") (f (quote ("max_level_trace" "release_max_level_info"))) (d #t) (k 0)) (d (n "sloggers") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.4") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("combaseapi" "coml2api" "endpointvolume" "mmdeviceapi" "objbase" "oleauto" "synchapi" "unknwnbase" "winerror"))) (d #t) (k 0)))) (h "0f15hkv9c9bbi47gb2jzlqy1fzmwx45r9i2xqf1hdlyngq1gh30a")))

(define-public crate-sbz-switch-3.1.1 (c (n "sbz-switch") (v "3.1.1") (d (list (d (n "clap") (r "^2.32") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "slog") (r "^2.4") (f (quote ("max_level_trace" "release_max_level_info"))) (d #t) (k 0)) (d (n "sloggers") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.4") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("combaseapi" "coml2api" "endpointvolume" "mmdeviceapi" "objbase" "oleauto" "synchapi" "unknwnbase" "winerror"))) (d #t) (k 0)))) (h "00hiv65n3nvf494h17c65f0hpxjwr2ywc1i8zv4d3rb9d0h63lza")))

(define-public crate-sbz-switch-4.0.0 (c (n "sbz-switch") (v "4.0.0") (d (list (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_info"))) (d #t) (k 0)) (d (n "sloggers") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("combaseapi" "coml2api" "endpointvolume" "mmdeviceapi" "objbase" "oleauto" "synchapi" "unknwnbase" "winerror"))) (d #t) (k 0)))) (h "0qqcgm4f4qkc3d2fg4pfpmz8zq6hh1gqh7jg2az8amc36y5sfq7w")))

(define-public crate-sbz-switch-4.1.0 (c (n "sbz-switch") (v "4.1.0") (d (list (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "slog") (r "^2") (f (quote ("max_level_trace" "release_max_level_info"))) (d #t) (k 0)) (d (n "sloggers") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("combaseapi" "coml2api" "endpointvolume" "mmdeviceapi" "objbase" "oleauto" "synchapi" "unknwnbase" "winerror"))) (d #t) (k 0)))) (h "052zs36wc3dkwgxlgpig5bn3wqnhy2dsw0cld7d3wmysxj2f1qhg")))

