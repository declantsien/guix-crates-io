(define-module (crates-io sb or sbor) #:use-module (crates-io))

(define-public crate-sbor-1.2.0-dev (c (n "sbor") (v "1.2.0-dev") (d (list (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "const-sha1") (r "^0.3.0") (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "radix-rust") (r "^1.2.0-dev") (k 0)) (d (n "sbor-derive") (r "^1.2.0-dev") (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)))) (h "1wg867nvmhwbp8mi76bv3pylv1rmaxlzsr844bx2da0ijpv5pyhm") (f (quote (("trace" "sbor-derive/trace") ("fuzzing" "arbitrary" "radix-rust/fuzzing") ("default" "std")))) (s 2) (e (quote (("std" "radix-rust/std" "serde?/std" "serde_json/std" "serde_json/preserve_order" "hex/std") ("serde" "dep:serde" "radix-rust/serde") ("alloc" "radix-rust/alloc" "serde?/alloc" "lazy_static/spin_no_std" "serde_json/alloc" "hex/alloc"))))))

(define-public crate-sbor-1.2.0 (c (n "sbor") (v "1.2.0") (d (list (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "const-sha1") (r "^0.3.0") (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "radix-rust") (r "^1.2.0") (k 0)) (d (n "sbor-derive") (r "^1.2.0") (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)))) (h "1pkv512x1p0bspc3jsaqhks2ga91f28c8k1wz261k42v4myjrmqp") (f (quote (("trace" "sbor-derive/trace") ("fuzzing" "arbitrary" "radix-rust/fuzzing") ("default" "std")))) (s 2) (e (quote (("std" "radix-rust/std" "serde?/std" "serde_json/std" "serde_json/preserve_order" "hex/std") ("serde" "dep:serde" "radix-rust/serde") ("alloc" "radix-rust/alloc" "serde?/alloc" "lazy_static/spin_no_std" "serde_json/alloc" "hex/alloc"))))))

