(define-module (crates-io sb er sbert) #:use-module (crates-io))

(define-public crate-sbert-0.1.0 (c (n "sbert") (v "0.1.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam") (r "^0.3") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "libmath") (r "^0.2") (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rust-bert") (r "^0.7") (d #t) (k 0)) (d (n "rust_tokenizers") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.18") (d #t) (k 0)) (d (n "strum_macros") (r "^0.18") (d #t) (k 0)) (d (n "tch") (r "^0.1.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokenizers") (r "^0.10.1") (d #t) (k 0)) (d (n "torch-sys") (r "^0.1.7") (d #t) (k 0)))) (h "0hb57c2ir0ndx5g281rmmsm22gzm7s6lcqg7mqxn6kx8xv5n1cjc")))

(define-public crate-sbert-0.1.1 (c (n "sbert") (v "0.1.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam") (r "^0.3") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libmath") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rust-bert") (r "^0.7") (d #t) (k 0)) (d (n "rust_tokenizers") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.18") (d #t) (k 0)) (d (n "strum_macros") (r "^0.18") (d #t) (k 0)) (d (n "tch") (r "^0.1.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokenizers") (r "^0.10.1") (d #t) (k 0)) (d (n "torch-sys") (r "^0.1.7") (d #t) (k 0)))) (h "1h5n42ivj94rajczis5r0dbd0f01fkj8q8vxgf3hypiar2k5fp3j") (f (quote (("doc-only" "tch/doc-only") ("all-tests"))))))

(define-public crate-sbert-0.1.2 (c (n "sbert") (v "0.1.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam") (r "^0.3") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libmath") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rust-bert") (r "^0.7") (d #t) (k 0)) (d (n "rust_tokenizers") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.18") (d #t) (k 0)) (d (n "strum_macros") (r "^0.18") (d #t) (k 0)) (d (n "tch") (r "^0.1.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokenizers") (r "^0.10.1") (d #t) (k 0)) (d (n "torch-sys") (r "^0.1.7") (d #t) (k 0)))) (h "1kr8lnbdsxgb6lwk5y2dj6a34iqzhj4kggdl0maij13yvnj0lr89") (f (quote (("doc-only" "tch/doc-only") ("all-tests"))))))

(define-public crate-sbert-0.2.0 (c (n "sbert") (v "0.2.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libmath") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rust-bert") (r "^0.7") (d #t) (k 0)) (d (n "rust_tokenizers") (r "^3.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.19") (d #t) (k 0)) (d (n "strum_macros") (r "^0.19") (d #t) (k 0)) (d (n "tch") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokenizers") (r "^0.10.1") (d #t) (k 0)) (d (n "torch-sys") (r "^0.2") (d #t) (k 0)))) (h "0allf1caq8hsj9yrzx79cv7bz14sccf9c6im6v1k1sm1m9rkkc83") (f (quote (("doc-only" "tch/doc-only") ("all-tests"))))))

(define-public crate-sbert-0.2.1 (c (n "sbert") (v "0.2.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libmath") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rust-bert") (r "^0.7") (d #t) (k 0)) (d (n "rust_tokenizers") (r "^3.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.19") (d #t) (k 0)) (d (n "strum_macros") (r "^0.19") (d #t) (k 0)) (d (n "tch") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokenizers") (r "^0.10.1") (d #t) (k 0)) (d (n "torch-sys") (r "^0.2") (d #t) (k 0)))) (h "0ga0sf7rki631h8frz2r4xb4908gir1a338vz8da3lxkyyfib7dh") (f (quote (("doc-only" "tch/doc-only") ("all-tests"))))))

(define-public crate-sbert-0.3.0 (c (n "sbert") (v "0.3.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rayon") (r "^1.4") (d #t) (k 0)) (d (n "rust-bert") (r "^0.10") (d #t) (k 0)) (d (n "rust_tokenizers") (r "^5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.19") (d #t) (k 0)) (d (n "strum_macros") (r "^0.19") (d #t) (k 0)) (d (n "tch") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokenizers") (r "^0.10") (d #t) (k 0)) (d (n "torch-sys") (r "^0.2") (d #t) (k 0)))) (h "144q806xs8dqw7l4jd98dc4qxyrhqxf5a79qyz2bnglcih2751jg") (f (quote (("doc-only" "tch/doc-only") ("all-tests"))))))

(define-public crate-sbert-0.4.1 (c (n "sbert") (v "0.4.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rust-bert") (r "^0.21.0") (d #t) (k 0)) (d (n "rust_tokenizers") (r "^7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.23") (d #t) (k 0)) (d (n "strum_macros") (r "^0.23") (d #t) (k 0)) (d (n "tch") (r "^0.13.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokenizers") (r "^0.11") (d #t) (k 0)) (d (n "torch-sys") (r "^0.13.0") (d #t) (k 0)))) (h "09jn51b1m2jg6hh2wz67nj4c8l6lhd3rcg6i34fhmkqd5zdii9s1") (f (quote (("doc-only" "tch/doc-only") ("all-tests"))))))

