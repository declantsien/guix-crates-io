(define-module (crates-io cs sp cssparser) #:use-module (crates-io))

(define-public crate-cssparser-0.1.0 (c (n "cssparser") (v "0.1.0") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)))) (h "0089iyzsjh1b3gs4n68z1a6m9hqx5lcwsy6zsr85ygwlh72274jj")))

(define-public crate-cssparser-0.1.1 (c (n "cssparser") (v "0.1.1") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)))) (h "0vcqavvfyxzxsqg7wkyn08qpcn9wlln1sa3yxpcx4h7gmccjlkl3")))

(define-public crate-cssparser-0.3.0 (c (n "cssparser") (v "0.3.0") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "text_writer") (r "^0.1.1") (d #t) (k 0)))) (h "0593jvfqzyablaqvspilas8a8ii9iqr48vcc1n0pkvdpn7s6vwgz")))

(define-public crate-cssparser-0.3.1 (c (n "cssparser") (v "0.3.1") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1x97j40nkf12qsry377ax5hi9p3vsfqgn8rzgb5j19v8gbk8pxrr")))

(define-public crate-cssparser-0.3.2 (c (n "cssparser") (v "0.3.2") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0rf4j74j5vy6ngc12c6jw8mzasl9s06czai1d8fc7swr5r3igimn")))

(define-public crate-cssparser-0.3.3 (c (n "cssparser") (v "0.3.3") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "*") (o #t) (d #t) (k 0)) (d (n "serde_macros") (r "*") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "17km0lqsj165h6n9211zi81hqcpz0v19yy9788jzr87vjiaangx4") (f (quote (("serde-serialization" "serde" "serde_macros"))))))

(define-public crate-cssparser-0.3.4 (c (n "cssparser") (v "0.3.4") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "*") (o #t) (d #t) (k 0)) (d (n "serde_macros") (r "*") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0cgqn1vahslhjq59hr62k4zm95486p8n62kspg8diz5n9zj7k8fd") (f (quote (("serde-serialization" "serde" "serde_macros"))))))

(define-public crate-cssparser-0.3.5 (c (n "cssparser") (v "0.3.5") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "*") (o #t) (d #t) (k 0)) (d (n "serde_macros") (r "*") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1zzccdq5gmsqbd6lqsqf9s6pjcgcm3fy0hw0shqd3flzg6l6bhjj") (f (quote (("serde-serialization" "serde" "serde_macros"))))))

(define-public crate-cssparser-0.3.6 (c (n "cssparser") (v "0.3.6") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "heapsize") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "heapsize_plugin") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "*") (o #t) (d #t) (k 0)) (d (n "serde_macros") (r "*") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "01ijrry58bzd13al9wvgaq0p18s7w86za0pbsl2mkqnjvry16dgq") (f (quote (("serde-serialization" "serde" "serde_macros") ("heap_size" "heapsize" "heapsize_plugin"))))))

(define-public crate-cssparser-0.3.7 (c (n "cssparser") (v "0.3.7") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "heapsize") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "heapsize_plugin") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "*") (o #t) (d #t) (k 0)) (d (n "serde_macros") (r "*") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1vgmzcqkgw9y5i3qfn6lv10wr9v1zjdj4c3siv9rxz72j766g1nm") (f (quote (("serde-serialization" "serde" "serde_macros") ("heap_size" "heapsize" "heapsize_plugin"))))))

(define-public crate-cssparser-0.3.8 (c (n "cssparser") (v "0.3.8") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "heapsize") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "heapsize_plugin") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "*") (o #t) (d #t) (k 0)) (d (n "serde_macros") (r "*") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1ppngx43p0sini124hq3nn95asn8588li9bs8aprfirggrgxjwgk") (f (quote (("serde-serialization" "serde" "serde_macros") ("heap_size" "heapsize" "heapsize_plugin"))))))

(define-public crate-cssparser-0.3.9 (c (n "cssparser") (v "0.3.9") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "heapsize") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "heapsize_plugin") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "*") (o #t) (d #t) (k 0)) (d (n "serde_macros") (r "*") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1wq6d4jzdh23y9l840mhi0msk4vgb9ym319d653wwgi144npbfii") (f (quote (("serde-serialization" "serde" "serde_macros") ("heap_size" "heapsize" "heapsize_plugin"))))))

(define-public crate-cssparser-0.4.0 (c (n "cssparser") (v "0.4.0") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "heapsize") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "heapsize_plugin") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "*") (o #t) (d #t) (k 0)) (d (n "serde_macros") (r "*") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "18a8kj8654j43iwrc2f5pc3hdn2v0k4m1rd0w3vv1bhribpqdj88") (f (quote (("serde-serialization" "serde" "serde_macros") ("heap_size" "heapsize" "heapsize_plugin"))))))

(define-public crate-cssparser-0.5.0 (c (n "cssparser") (v "0.5.0") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "heapsize") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "heapsize_plugin") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "*") (o #t) (d #t) (k 0)) (d (n "serde_macros") (r "*") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "05w3g2k4vnmjpznzaa2mph9pnyymvz7dl8z865vvzyrnhvxj6g35") (f (quote (("serde-serialization" "serde" "serde_macros") ("heap_size" "heapsize" "heapsize_plugin"))))))

(define-public crate-cssparser-0.5.2 (c (n "cssparser") (v "0.5.2") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "heapsize") (r ">= 0.1.1, < 0.3.0") (o #t) (d #t) (k 0)) (d (n "heapsize_plugin") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^0.6.6") (o #t) (d #t) (k 0)) (d (n "serde_macros") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0g432jgj3yrdl513psq3991hw084spl6y7zakpshi42ksjxybypn") (f (quote (("serde-serialization" "serde" "serde_macros") ("heap_size" "heapsize" "heapsize_plugin"))))))

(define-public crate-cssparser-0.5.3 (c (n "cssparser") (v "0.5.3") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "heapsize") (r ">= 0.1.1, < 0.4.0") (o #t) (d #t) (k 0)) (d (n "heapsize_plugin") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^0.6.6") (o #t) (d #t) (k 0)) (d (n "serde_macros") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0zlnmiyh96xwx1l7wa97hhsm0f6wxhz0zskcg46iqlmk4wrz82bn") (f (quote (("serde-serialization" "serde" "serde_macros") ("heap_size" "heapsize" "heapsize_plugin"))))))

(define-public crate-cssparser-0.5.4 (c (n "cssparser") (v "0.5.4") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "heapsize") (r ">= 0.1.1, < 0.4.0") (o #t) (d #t) (k 0)) (d (n "heapsize_plugin") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r ">= 0.6.6, < 0.8") (o #t) (d #t) (k 0)) (d (n "serde_macros") (r ">= 0.6.5, < 0.8") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1p01qvpkhvamzvvmpb9aw6qh5166z5pgfls2l22fbixjhiy0fg1r") (f (quote (("serde-serialization" "serde" "serde_macros") ("heap_size" "heapsize" "heapsize_plugin"))))))

(define-public crate-cssparser-0.5.5 (c (n "cssparser") (v "0.5.5") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "heapsize") (r ">= 0.1.1, < 0.4.0") (o #t) (d #t) (k 0)) (d (n "heapsize_plugin") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r ">= 0.6.6, < 0.8") (o #t) (d #t) (k 0)) (d (n "serde_macros") (r ">= 0.6.5, < 0.8") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0pqkkgvpaqsjvg07kn708i20q05y20cc3myrw05jb1ra70jnphx7") (f (quote (("serde-serialization" "serde" "serde_macros") ("heap_size" "heapsize" "heapsize_plugin"))))))

(define-public crate-cssparser-0.5.6 (c (n "cssparser") (v "0.5.6") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "heapsize") (r ">= 0.1.1, < 0.4.0") (o #t) (d #t) (k 0)) (d (n "heapsize_plugin") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r ">= 0.6.6, < 0.8") (o #t) (d #t) (k 0)) (d (n "serde_macros") (r ">= 0.6.5, < 0.8") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1i3479i0pa7mfycnshs8k60lawvcfm0cqaf6ysi7lhl515db84lv") (f (quote (("serde-serialization" "serde" "serde_macros") ("heap_size" "heapsize" "heapsize_plugin"))))))

(define-public crate-cssparser-0.5.7 (c (n "cssparser") (v "0.5.7") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "heapsize") (r ">= 0.1.1, < 0.4.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r ">= 0.6.6, < 0.9") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0isfas5z551yv74ij6xi8s04651zcjp2hmb2xarpyxrbgfggijdx") (f (quote (("serde-serialization" "serde") ("heap_size" "heapsize"))))))

(define-public crate-cssparser-0.5.8 (c (n "cssparser") (v "0.5.8") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "heapsize") (r ">= 0.1.1, < 0.4.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r ">= 0.6.6, < 0.9") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1zc57bqp0q7br7j4cri33ixflz4cqkx66lpwk3shg7jzfwn22iwl") (f (quote (("serde-serialization" "serde") ("heap_size" "heapsize"))))))

(define-public crate-cssparser-0.6.0 (c (n "cssparser") (v "0.6.0") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "heapsize") (r ">= 0.1.1, < 0.4.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r ">= 0.6.6, < 0.9") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0irmwa7hv8fjc4pkv74fw4780xvyqlyracs9jf1ks5v9jx5p4wg0") (f (quote (("serde-serialization" "serde") ("heap_size" "heapsize"))))))

(define-public crate-cssparser-0.7.0 (c (n "cssparser") (v "0.7.0") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "heapsize") (r ">= 0.1.1, < 0.4.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r ">= 0.6.6, < 0.9") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "10ij8dzjavzp516jzbcwbqk88y6ldmpwfcscwrw7avcqdry98xc1") (f (quote (("serde-serialization" "serde") ("heap_size" "heapsize"))))))

(define-public crate-cssparser-0.7.1 (c (n "cssparser") (v "0.7.1") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "heapsize") (r ">= 0.1.1, < 0.4.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r ">= 0.6.6, < 0.9") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1bd2m1xwfpdhgqdnd66zshymx83bfpxcawz44pb8xfd2l74ji766") (f (quote (("serde-serialization" "serde") ("heap_size" "heapsize") ("bench"))))))

(define-public crate-cssparser-0.7.2 (c (n "cssparser") (v "0.7.2") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "heapsize") (r ">= 0.1.1, < 0.4.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r ">= 0.6.6, < 0.9") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0587kcqa50bj1nf5x06lvgy2n90bbr638r1q5fdwfphl25rdvwkx") (f (quote (("serde-serialization" "serde") ("heap_size" "heapsize") ("bench"))))))

(define-public crate-cssparser-0.7.3 (c (n "cssparser") (v "0.7.3") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "heapsize") (r ">= 0.1.1, < 0.4.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r ">= 0.6.6, < 0.9") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.10.6") (f (quote ("full" "visit"))) (d #t) (k 1)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0gyqq5n68s8bkgx6p7i2jd9plm6bh7w05y85x5b6fgz676qc00xx") (f (quote (("serde-serialization" "serde") ("heap_size" "heapsize") ("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.7.4 (c (n "cssparser") (v "0.7.4") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "heapsize") (r ">= 0.1.1, < 0.4.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r ">= 0.6.6, < 0.9") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.10.6") (f (quote ("full" "visit"))) (d #t) (k 1)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1m6x4gvlrv5l0c472pvl0x4ak850p96iv06kcz1xisbf1p5n5rfq") (f (quote (("serde-serialization" "serde") ("heap_size" "heapsize") ("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.8.0 (c (n "cssparser") (v "0.8.0") (d (list (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "heapsize") (r ">= 0.1.1, < 0.4.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r ">= 0.6.6, < 0.9") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.10.6") (f (quote ("full" "visit"))) (d #t) (k 1)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1hlf4nf6kds7b09vcps8l1b788yh3556xygp43cjdc7iz1vlfh83") (f (quote (("serde-serialization" "serde") ("heap_size" "heapsize") ("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.9.0 (c (n "cssparser") (v "0.9.0") (d (list (d (n "encoding_rs") (r "^0.3.2") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.1.1, < 0.4.0") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r ">= 0.6.6, < 0.9") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.10.6") (f (quote ("full" "visit"))) (d #t) (k 1)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0lkk2jclpppj9wnq8z12iw0a9vl81cr86yxcgjxcpagp0i8bz6z9") (f (quote (("serde-serialization" "serde") ("heap_size" "heapsize") ("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.10.0 (c (n "cssparser") (v "0.10.0") (d (list (d (n "encoding_rs") (r "^0.3.2") (d #t) (k 2)) (d (n "heapsize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.10.6") (f (quote ("full" "visit"))) (d #t) (k 1)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1rcp8i7mspzrq6lw72b43cawg8mxjwsbgf7n1zv9yxyhsg4cjg39") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.11.0 (c (n "cssparser") (v "0.11.0") (d (list (d (n "cssparser-macros") (r "^0.1") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "03mm5q2ybykbcc6l5y2j0b9yw9nxsgv357hpimaspsy54b6jqdfq") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.12.0 (c (n "cssparser") (v "0.12.0") (d (list (d (n "cssparser-macros") (r "^0.2") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1jl2x6wvzm9ps0r0z2w3pqn6yb4av5s2x2lh9ib43d76dj20waqi") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.12.1 (c (n "cssparser") (v "0.12.1") (d (list (d (n "cssparser-macros") (r "^0.2") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1l6r8p4fsvghnamw0anrw9f3dpj0f22k939x4l0nac0z488f3qrm") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.12.2 (c (n "cssparser") (v "0.12.2") (d (list (d (n "cssparser-macros") (r "^0.2") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "14kknvkdf4ik9za2mqwi4mpzj7hmaqamh07a782sk31ni2fpy1pv") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.12.4 (c (n "cssparser") (v "0.12.4") (d (list (d (n "cssparser-macros") (r "^0.2") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "1k3av08kpicdx2fdgvxic8wh9hlq9md0fmf0ahzpw7b26fvn8829") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.13.0 (c (n "cssparser") (v "0.13.0") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "059sb3ffi5k0gzf6dw63m6cfkmyiaf3gsbdmfic5vjjbmmpw1bd2") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.13.1 (c (n "cssparser") (v "0.13.1") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "09xhyrwnfi03g47r8jl8bk4z505rch4s3wb97i71k4j4w32h955k") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.13.3 (c (n "cssparser") (v "0.13.3") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "03kyhp8izxk4rz8cl3r6rc3mmcyl702h4dkadmi020041vg188lx") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.13.4 (c (n "cssparser") (v "0.13.4") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "06cpay23rqz634x3w2749v7m6hxh0dawyqsdbnkg42616z0zimpb") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.13.5 (c (n "cssparser") (v "0.13.5") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "150cvyfgzpqdkv2m5hnjj2rxxlgaxzchkiva8mk6r70vlk97pp48") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.13.6 (c (n "cssparser") (v "0.13.6") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "0d3yf2w24jx8xy8infcrwvj9jg8pqgzbdckax65fz8nk91pg0q53") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.13.7 (c (n "cssparser") (v "0.13.7") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "0ar9h0v5y4k6np40idvrh0qdq36xmyp67l4i32qmmg2ydqq28qgg") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.14.0 (c (n "cssparser") (v "0.14.0") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "0q8ppfam2g0qd6v8lnf804xjqmhp4w9iqg8yvkw0kayv3skmqjmv") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.15.0 (c (n "cssparser") (v "0.15.0") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "1c52jf1kja4wyld102mjd8c8v5k9x7i7d5lbkw7d4wcdcvpcsm6x") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.16.0 (c (n "cssparser") (v "0.16.0") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "00m5mzfgajhrgjkpjqhzwyl3jn7qv6r2bqwnpz15y7hbc461qw9w") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.16.1 (c (n "cssparser") (v "0.16.1") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "1l873kla2308nrnnl7h74xdmrsd8bvzfp04dklp733pdmlxjahi8") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.17.0 (c (n "cssparser") (v "0.17.0") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "1v2mxqwk423crr0c4q59gza941y2g20m6kfmdqqcnch4qr9381p7") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.18.0 (c (n "cssparser") (v "0.18.0") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "0b85n7nv01ifyjw5f6v4qji4zkdw9y16xkqnndfhhnwq1k15vxkw") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.18.1 (c (n "cssparser") (v "0.18.1") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "080q4alj5p2caxfh84yahvgv4y2apl29j5qgmqbz3p8jgsldg3m5") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.18.2 (c (n "cssparser") (v "0.18.2") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "1x5j54j7y174qxsa9ilhd0lsjbf3hvmzgjig3xgsba0x8mvjv7n8") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.19.0 (c (n "cssparser") (v "0.19.0") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "0iqsxkxl12spcpmbr4ii70bi95dspcd0vdjlhbr2crp3p974d9gk") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.19.1 (c (n "cssparser") (v "0.19.1") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "0v7y30mmz82f9fvqbrnmq17pqq3rr8bbm6abaybw18zyna0zbr8w") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.19.2 (c (n "cssparser") (v "0.19.2") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "0zs6hcrmjik0hharvs2vlh5y6jpir34n8pa8r5b0l0lq1304550z") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.19.3 (c (n "cssparser") (v "0.19.3") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "1azpz1lza2ksz5da5nmdlbi5m2i1vn0vibkkvwn2nm993ywrlafv") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.19.4 (c (n "cssparser") (v "0.19.4") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "1h3y7x903zqjwg45ym24854jdlkw9gpr3y6wzy2wj0bwygcy4ckb") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.19.5 (c (n "cssparser") (v "0.19.5") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.5") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.4.3") (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "1ccj4hg6rqfiv7k75vx3z3rai1a5gpg4807xmcfalx07jv06siyw") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.20.0 (c (n "cssparser") (v "0.20.0") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.4.3") (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "1llg6lp0np73g8axwwl8p4zawahvsnqkzk1qc9mdjzb4cdnmfd13") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.20.1 (c (n "cssparser") (v "0.20.1") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.4.3") (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "1ybsiqggqpv0awbxn525y04ibgisklavh0z6niklx5iikmh18piq") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.20.2 (c (n "cssparser") (v "0.20.2") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.4.3") (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "0j2wkrav95mx4zc8qnidv1ygi8gyjl5k2kx6rckzmfmvqvqklxvi") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.21.0 (c (n "cssparser") (v "0.21.0") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.4.3") (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "1lfbvci8032wmsalqdjr3ysab07ifc31fzz558my9x4zd44073z8") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.21.1 (c (n "cssparser") (v "0.21.1") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.4.3") (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "1lbzgxy16nmc4phil63h8378ccngdyrmrz9y1v94n6707z2sxnx1") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.21.2 (c (n "cssparser") (v "0.21.2") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.4.3") (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "0a9ng2bv49hcp4gyx4d6fj936acrhwgprd3xyrcnyk7bpp6jy085") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.21.3 (c (n "cssparser") (v "0.21.3") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.4.3") (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "0vp0rwnh7ravrbwlm0qviifhk5r5xa4gnvzmkwd5k33clfkqrbw9") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.22.0 (c (n "cssparser") (v "0.22.0") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.4.3") (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "18abq2ch9cc708fh8yn8cr3walfaxgnizban2674i0h2c50k6ca4") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.22.1 (c (n "cssparser") (v "0.22.1") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.4.3") (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "0rvdvkrimn0flg3lzw7s9arrkhsd08xzv0icfzaw5011fjfy5srd") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.23.0 (c (n "cssparser") (v "0.23.0") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.4.3") (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "0v0l4sw59y7mnl9jh4d6mwdg5f9mv798d06qf617afvdni0h4yr1") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.23.1 (c (n "cssparser") (v "0.23.1") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.4.3") (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "1f3lpiyncg3jdipagvjxm6y0afqvfw480xxi7aljd664lnj6kcc3") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.23.2 (c (n "cssparser") (v "0.23.2") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^1.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 1)))) (h "08zj60j6j0xmz15kpwrmdbzbxci6p4r5gdm3q8lph8bsmg1pm04a") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.23.4 (c (n "cssparser") (v "0.23.4") (d (list (d (n "cssparser-macros") (r "^0.3") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.2") (d #t) (k 1)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.4.1") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.12") (f (quote ("extra-traits" "fold"))) (d #t) (k 1)))) (h "1pcyax28kq5m8q1l1j0nf54z37chwnmnk10msjzx1n08c4zsq1mr") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.23.5 (c (n "cssparser") (v "0.23.5") (d (list (d (n "cssparser-macros") (r "^0.3.3") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.3") (d #t) (k 1)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.5") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.13") (f (quote ("extra-traits" "fold"))) (d #t) (k 1)))) (h "11l5f4qxcj8kdhsni8w57lwn00xn67gk7mq5zh9sr2c1ksidp0a7") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.23.6 (c (n "cssparser") (v "0.23.6") (d (list (d (n "cssparser-macros") (r "^0.3.3") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.3") (d #t) (k 1)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.5") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.13") (f (quote ("extra-traits" "fold"))) (d #t) (k 1)))) (h "0hm5yhj9gv82l5bmh0n8n10d24xfyljgfa5p46q05090wp345ak7") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.23.7 (c (n "cssparser") (v "0.23.7") (d (list (d (n "cssparser-macros") (r "^0.3.3") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.3") (d #t) (k 1)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.5") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.13") (f (quote ("extra-traits" "fold"))) (d #t) (k 1)))) (h "004b04cx785g5lzyv106rv3zkgljrk1z3jkkq85hmk1fchlpvgv7") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.23.8 (c (n "cssparser") (v "0.23.8") (d (list (d (n "cssparser-macros") (r "^0.3.3") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.3") (d #t) (k 1)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.5") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.13") (f (quote ("extra-traits" "fold"))) (d #t) (k 1)))) (h "1yvgm3mh4jjjn1imhl1cl3gyff0ilpl0jcyw6xifs054snggrh60") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.23.9 (c (n "cssparser") (v "0.23.9") (d (list (d (n "cssparser-macros") (r "^0.3.3") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.3") (d #t) (k 1)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.5") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.13") (f (quote ("extra-traits" "fold"))) (d #t) (k 1)))) (h "1shr0ki0jxpvlrsinbqfy7pqqpijqwqnzfy3lhk9ffmnwbzlfmi0") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.23.10 (c (n "cssparser") (v "0.23.10") (d (list (d (n "cssparser-macros") (r "^0.3.3") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.3") (d #t) (k 1)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.5") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.13") (f (quote ("extra-traits" "fold"))) (d #t) (k 1)))) (h "141p5nha6xyb4v2v0d60mvabybjna8a92srk8v2rqj0gkgcp874g") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.24.0 (c (n "cssparser") (v "0.24.0") (d (list (d (n "cssparser-macros") (r "^0.3.3") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 1)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.14") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "1q7jmhwf7p34nynlplhwbzmqivymrgn594q2ky77p65i77ffsns9") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.24.1 (c (n "cssparser") (v "0.24.1") (d (list (d (n "cssparser-macros") (r "^0.3.3") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 1)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.14") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "1z4hq644d8k4f3nd22ayj2rw9f9rvqgfs7vmsb41b9h36wcsf05j") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.25.0 (c (n "cssparser") (v "0.25.0") (d (list (d (n "cssparser-macros") (r "^0.3.3") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 1)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.14") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "1hv5k32lp0cyagcw0mjhhp0dx70sdlaw3rfk457qs92fbjj660vk") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.25.1 (c (n "cssparser") (v "0.25.1") (d (list (d (n "cssparser-macros") (r "^0.3.3") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 1)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.15.12") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "0wnr26bxhpgr9ilbq9z6kixadhjzg6ys9iyfh17fj17gf9xpwk5a") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.25.2 (c (n "cssparser") (v "0.25.2") (d (list (d (n "cssparser-macros") (r "^0.3.3") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.7") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 1)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.15.12") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "021gfq9pczcw9karyyc5z43pyr61zqvidshq6ga4i106gbfhrb9p") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.25.3 (c (n "cssparser") (v "0.25.3") (d (list (d (n "cssparser-macros") (r "^0.3.3") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 1)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.15.12") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "07bng0jd68bar7b0cxxk25zhhd0fvcrgakq6nvv4prjbh7hv86ms") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.25.5 (c (n "cssparser") (v "0.25.5") (d (list (d (n "cssparser-macros") (r "^0.3.3") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 1)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.15.12") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "0cs9q11ld523vf0vjvkvy0ckbs2irkxr15nwbfkqbxf21y8rarz0") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.25.6 (c (n "cssparser") (v "0.25.6") (d (list (d (n "cssparser-macros") (r "^0.3.3") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 1)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.15.12") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "0nrj86gjgsnbn9aj6mv3wq44il7gcy5g1wpaqxq70vazrh8gwxjw") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.25.7 (c (n "cssparser") (v "0.25.7") (d (list (d (n "cssparser-macros") (r "^0.3.3") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 1)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.15.12") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "151qkifb7cspm1c8spkbkb83jidr67daw74mgn0jqp57bv2an8d9") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.25.8 (c (n "cssparser") (v "0.25.8") (d (list (d (n "autocfg") (r "^0.1.4") (d #t) (k 1)) (d (n "cssparser-macros") (r "^0.3.3") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 1)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 1)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.15.12") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "1cbvzj7hxx2084igmj7c8dgr60ldw4a56xz3x4q2q060gdlli5k2") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.25.9 (c (n "cssparser") (v "0.25.9") (d (list (d (n "autocfg") (r "^0.1.4") (d #t) (k 1)) (d (n "cssparser-macros") (r "^0.3.3") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.7") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "procedural-masquerade") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "03klvpdzsk4cyh8k0dbnlngzafv7gqywqrnsqqb3gfmrxyj8rqgv") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.26.0 (c (n "cssparser") (v "0.26.0") (d (list (d (n "cssparser-macros") (r "^0.4") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "heapsize") (r ">= 0.3, < 0.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "1xgs3h3f9zdr5d4s5sgqsni5vq357rgdd0j269di7iw30p2xyk94") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.27.0 (c (n "cssparser") (v "0.27.0") (d (list (d (n "cssparser-macros") (r "^0.5") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "10cb5d4sfyvi2mvsp6dnamnl3qx3s6bpsqm0cdrcvd5dr3li07h8") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.27.1 (c (n "cssparser") (v "0.27.1") (d (list (d (n "cssparser-macros") (r "^0.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "0m6km4k0f7b1p2fygfggg97xvdvn5v2j2knxz8d6p5ajysjbnqyw") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.27.2 (c (n "cssparser") (v "0.27.2") (d (list (d (n "cssparser-macros") (r "^0.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "02nbm690rmkaz1ca0383qq7mc1g066w3s85f17pdihnda79njjvm") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.28.0 (c (n "cssparser") (v "0.28.0") (d (list (d (n "cssparser-macros") (r "^0.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "1jmwhbg7raggvrfilsz9s09zcvl2y5hp5lzj5283xmgzm6mj57c0") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.28.1 (c (n "cssparser") (v "0.28.1") (d (list (d (n "cssparser-macros") (r "^0.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "1h924c5g2rwlmgk8hllciyky3ih3z9vf04xz3xsp3cv1jyd5kf0x") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.29.0 (c (n "cssparser") (v "0.29.0") (d (list (d (n "cssparser-macros") (r "^0.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "1pz2xmnsi63cldniazvsh9yzxaws1y7ak65bw6j4kgvckya8afia") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.29.1 (c (n "cssparser") (v "0.29.1") (d (list (d (n "cssparser-macros") (r "^0.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "0g2fqxdvxsl97y0vkfxvdn8x0m3gki378kwgd2hz7axn0fhg41v9") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.29.2 (c (n "cssparser") (v "0.29.2") (d (list (d (n "cssparser-macros") (r "^0.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.8") (f (quote ("macros"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "13yq6n6i0phnlwzwa600cp0jvmm3q7rvcpz46qsgd17as6v2j783") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.29.3 (c (n "cssparser") (v "0.29.3") (d (list (d (n "cssparser-macros") (r "^0.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.10") (f (quote ("macros"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "19jzwi980jmvgl7127hlf326ksr2b9422lpmkmpgvr2nsgd2lm1i") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.29.4 (c (n "cssparser") (v "0.29.4") (d (list (d (n "cssparser-macros") (r "^0.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.10") (f (quote ("macros"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "0dn88f4ris0k360j0yj43qf9c85s2mppaqgb2yaz22s9sl28w9ps") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.29.5 (c (n "cssparser") (v "0.29.5") (d (list (d (n "cssparser-macros") (r "^0.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r "^0.10") (f (quote ("macros"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "06l9mlgsn2jdlb1lgp5z81kr3rlqxqb2pb63h976bpzl4nwfrf4d") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.29.6 (c (n "cssparser") (v "0.29.6") (d (list (d (n "cssparser-macros") (r "^0.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "phf") (r ">=0.8, <=0.10") (f (quote ("macros"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "1yp0zl5cmw9x95np9a51153fdb1ng8fgzwyssg7hr5dmki0h6ggr") (f (quote (("dummy_match_byte") ("bench"))))))

(define-public crate-cssparser-0.30.0 (c (n "cssparser") (v "0.30.0") (d (list (d (n "cssparser-macros") (r "^0.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r ">=0.8, <=0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "0d36nlf0zv9hdn3d0ghmxzmh7qdlv9cms1s81n89wa900ypcigyh") (f (quote (("dummy_match_byte") ("bench")))) (r "1.56")))

(define-public crate-cssparser-0.31.0 (c (n "cssparser") (v "0.31.0") (d (list (d (n "cssparser-macros") (r "^0.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r ">=0.8, <=0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("extra-traits" "fold" "full"))) (d #t) (k 1)))) (h "1k5w4pm1zdhfrfv5mwh6h9rabdls5i1mnbqrw1y1s7drk8mz92y1") (f (quote (("dummy_match_byte") ("bench")))) (r "1.63")))

(define-public crate-cssparser-0.31.1 (c (n "cssparser") (v "0.31.1") (d (list (d (n "cssparser-macros") (r "^0.6.1") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r ">=0.8, <=0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)))) (h "0lcfmg7a5xxbzl921m6qxrmc89pn97ayl6lsfw23cjcn9qm9gydq") (f (quote (("dummy_match_byte") ("bench")))) (r "1.63")))

(define-public crate-cssparser-0.31.2 (c (n "cssparser") (v "0.31.2") (d (list (d (n "cssparser-macros") (r "^0.6.1") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r ">=0.8, <=0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)))) (h "1gnmn2wjvhvkj98ygcd5jdwi0wxsigvd7j0yq0zfgfsz7vwz8gav") (f (quote (("dummy_match_byte") ("bench")))) (r "1.63")))

(define-public crate-cssparser-0.32.0 (c (n "cssparser") (v "0.32.0") (d (list (d (n "cssparser-macros") (r "^0.6.1") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r ">=0.8, <=0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)))) (h "1facg5ay72ir331vdy8jnp84hi5l7lwq1a4qgja13bw0rdizwm1d") (f (quote (("skip_long_tests") ("dummy_match_byte") ("bench")))) (r "1.63")))

(define-public crate-cssparser-0.33.0 (c (n "cssparser") (v "0.33.0") (d (list (d (n "cssparser-macros") (r "^0.6.1") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r ">=0.8, <=0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)))) (h "07i8k47fmym7kzs95qfhg6zrh4yyf2vl4460rmdyvyx06vck9scv") (f (quote (("skip_long_tests") ("dummy_match_byte") ("bench")))) (r "1.63")))

(define-public crate-cssparser-0.34.0 (c (n "cssparser") (v "0.34.0") (d (list (d (n "cssparser-macros") (r "^0.6.1") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 2)) (d (n "dtoa-short") (r "^0.3") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)))) (h "1qx3hha392szcl812l6hp0d4029gg8x62cl4nf0byqgdv0f6vimp") (f (quote (("skip_long_tests") ("dummy_match_byte") ("bench")))) (r "1.63")))

