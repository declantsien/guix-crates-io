(define-module (crates-io cs tr cstree) #:use-module (crates-io))

(define-public crate-cstree-0.2.0 (c (n "cstree") (v "0.2.0") (d (list (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lasso") (r "^0.5") (d #t) (k 0)) (d (n "m_lexer") (r "^0.0.4") (d #t) (k 2)) (d (n "nodrop") (r "^0.1.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.119") (d #t) (k 2)) (d (n "stable_deref_trait") (r "^1.0.0") (d #t) (k 0)) (d (n "text-size") (r "^1.0.0") (d #t) (k 0)))) (h "1y04cdiacibbbccgl2r37j3j53jbk6ib59hlb17xbsz2ac3iyfdb") (f (quote (("serde1" "serde") ("default"))))))

(define-public crate-cstree-0.2.1 (c (n "cstree") (v "0.2.1") (d (list (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lasso") (r "^0.5") (d #t) (k 0)) (d (n "m_lexer") (r "^0.0.4") (d #t) (k 2)) (d (n "nodrop") (r "^0.1.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.119") (d #t) (k 2)) (d (n "stable_deref_trait") (r "^1.0.0") (d #t) (k 0)) (d (n "text-size") (r "^1.0.0") (d #t) (k 0)))) (h "1azlai8krwnw7bgbmjaa7x7imhggkr1nf6yw560nkmzfik6mws9r") (f (quote (("serde1" "serde") ("default"))))))

(define-public crate-cstree-0.3.0 (c (n "cstree") (v "0.3.0") (d (list (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lasso") (r "^0.5") (d #t) (k 0)) (d (n "m_lexer") (r "^0.0.4") (d #t) (k 2)) (d (n "nodrop") (r "^0.1.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.119") (d #t) (k 2)) (d (n "stable_deref_trait") (r "^1.0.0") (d #t) (k 0)) (d (n "text-size") (r "^1.0.0") (d #t) (k 0)))) (h "1ssfdpphigif7gn97p3d6ah3w913hskhsrmssp91fcn8pl2615fg") (f (quote (("serde1" "serde") ("default"))))))

(define-public crate-cstree-0.4.0 (c (n "cstree") (v "0.4.0") (d (list (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lasso") (r "^0.5") (d #t) (k 0)) (d (n "m_lexer") (r "^0.0.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.119") (d #t) (k 2)) (d (n "text-size") (r "^1.0.0") (d #t) (k 0)) (d (n "triomphe") (r "^0.1.2") (d #t) (k 0)))) (h "107cq8ziz0lv29wxivnzi46rp320lwaczb1ar466nf3mdv7nymzv") (f (quote (("serde1" "serde") ("default"))))))

(define-public crate-cstree-0.5.0 (c (n "cstree") (v "0.5.0") (d (list (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lasso") (r "^0.5") (d #t) (k 0)) (d (n "m_lexer") (r "^0.0.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.119") (d #t) (k 2)) (d (n "text-size") (r "^1.0.0") (d #t) (k 0)) (d (n "triomphe") (r "^0.1.2") (d #t) (k 0)))) (h "1vf1x5bmrprv8pzb2490ycq1jx7ann56lb3mqqawjlq1ms5crhw8") (f (quote (("serde1" "serde") ("default"))))))

(define-public crate-cstree-0.6.0 (c (n "cstree") (v "0.6.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lasso") (r "^0.5") (f (quote ("inline-more"))) (d #t) (k 0)) (d (n "m_lexer") (r "^0.0.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.119") (d #t) (k 2)) (d (n "text-size") (r "^1.0.0") (d #t) (k 0)) (d (n "triomphe") (r "^0.1.2") (d #t) (k 0)))) (h "16zp3kpl243wpvpkh3716wjgd8vm0i3j0zqdi06cw5h41s0dn4g5") (f (quote (("serde1" "serde") ("default"))))))

(define-public crate-cstree-0.6.1 (c (n "cstree") (v "0.6.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lasso") (r "^0.5") (f (quote ("inline-more"))) (d #t) (k 0)) (d (n "m_lexer") (r "^0.0.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.119") (d #t) (k 2)) (d (n "text-size") (r "^1.0.0") (d #t) (k 0)) (d (n "triomphe") (r "^0.1.2") (d #t) (k 0)))) (h "1h8alkn243x7924xmlz1iq1sr52ahpdmw45c46wixkakm6zp2aq3") (f (quote (("serde1" "serde") ("default"))))))

(define-public crate-cstree-0.7.0 (c (n "cstree") (v "0.7.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lasso") (r "^0.5") (f (quote ("inline-more"))) (d #t) (k 0)) (d (n "m_lexer") (r "^0.0.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.119") (d #t) (k 2)) (d (n "text-size") (r "^1.0.0") (d #t) (k 0)) (d (n "triomphe") (r "^0.1.2") (d #t) (k 0)))) (h "1sm09arl5n2mg2fsqqir8lnm8gb9fp3abza5yxdaq8w2ww7mzipg") (f (quote (("serde1" "serde") ("default"))))))

(define-public crate-cstree-0.8.0 (c (n "cstree") (v "0.8.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lasso") (r "^0.6") (f (quote ("inline-more"))) (d #t) (k 0)) (d (n "m_lexer") (r "^0.0.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "text-size") (r "^1.1.0") (d #t) (k 0)) (d (n "triomphe") (r "^0.1.3") (d #t) (k 0)))) (h "18rlgnzdy0ngqk93jnnqxgndzwx2qaxssg74wn124yrmgfaacnx2") (f (quote (("serde1" "serde") ("default")))) (y #t)))

(define-public crate-cstree-0.8.1 (c (n "cstree") (v "0.8.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lasso") (r "^0.6") (f (quote ("inline-more"))) (d #t) (k 0)) (d (n "m_lexer") (r "^0.0.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "text-size") (r "^1.1.0") (d #t) (k 0)) (d (n "triomphe") (r "^0.1.3") (d #t) (k 0)))) (h "0bnbq3jrcw0bvsmkrh9k2sbisgknrijdfvqcbpiks32ypgg8wn9g") (f (quote (("serde1" "serde") ("default"))))))

(define-public crate-cstree-0.9.0 (c (n "cstree") (v "0.9.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lasso") (r "^0.6") (f (quote ("inline-more" "multi-threaded"))) (d #t) (k 0)) (d (n "m_lexer") (r "^0.0.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "text-size") (r "^1.1.0") (d #t) (k 0)) (d (n "triomphe") (r "^0.1.3") (d #t) (k 0)))) (h "1p97b37kb3nhv2wc03k6sk6m04hbcix44893zmqzrm5rg38ck61k") (f (quote (("serialize" "serde" "lasso/serialize") ("default"))))))

(define-public crate-cstree-0.10.0 (c (n "cstree") (v "0.10.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lasso") (r "^0.6") (f (quote ("inline-more" "multi-threaded"))) (d #t) (k 0)) (d (n "m_lexer") (r "^0.0.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "text-size") (r "^1.1.0") (d #t) (k 0)) (d (n "triomphe") (r "^0.1.3") (d #t) (k 0)))) (h "1sc9p4py2vjixxx0m61p3smmv11wrhqp4hn6nfxz5llbxmjibbc9") (f (quote (("serialize" "serde" "lasso/serialize") ("default"))))))

(define-public crate-cstree-0.11.0 (c (n "cstree") (v "0.11.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lasso") (r "^0.6") (f (quote ("inline-more" "multi-threaded"))) (d #t) (k 0)) (d (n "m_lexer") (r "^0.0.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "text-size") (r "^1.1.0") (d #t) (k 0)) (d (n "triomphe") (r "^0.1.3") (d #t) (k 0)))) (h "1qj6ywr0ippb4646q37yx63xw49fcj44484xwwnx8hjddybs7x3v") (f (quote (("serialize" "serde" "lasso/serialize") ("default"))))))

(define-public crate-cstree-0.11.1 (c (n "cstree") (v "0.11.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lasso") (r "^0.6") (f (quote ("inline-more" "multi-threaded"))) (d #t) (k 0)) (d (n "m_lexer") (r "^0.0.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "sptr") (r "^0.3.2") (d #t) (k 0)) (d (n "text-size") (r "^1.1.0") (d #t) (k 0)) (d (n "triomphe") (r "^0.1.7") (d #t) (k 0)))) (h "0wln5y76a1nj9v2d0qkyvsjxajg76rrw6i1ddzmi6wvx1ybnvrac") (f (quote (("serialize" "serde" "lasso/serialize") ("default"))))))

(define-public crate-cstree-0.12.0-rc.0 (c (n "cstree") (v "0.12.0-rc.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 2)) (d (n "cstree_derive") (r "^0.12.0-rc.0") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (d #t) (k 0)) (d (n "lasso") (r "^0.7") (f (quote ("inline-more"))) (o #t) (d #t) (k 0)) (d (n "m_lexer") (r "^0.0.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "sptr") (r "^0.3.2") (d #t) (k 0)) (d (n "text-size") (r "^1.1.0") (d #t) (k 0)) (d (n "triomphe") (r "^0.1.7") (d #t) (k 0)))) (h "06g5lymk7q7vwb68r9dfpvx24whri7ms9p1rh2l1y9jjgcwym2mr") (f (quote (("multi_threaded_interning" "lasso_compat" "lasso/multi-threaded") ("lasso_compat" "lasso") ("default")))) (s 2) (e (quote (("serialize" "serde" "lasso?/serialize") ("derive" "dep:cstree_derive")))) (r "1.68")))

(define-public crate-cstree-0.12.0 (c (n "cstree") (v "0.12.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 2)) (d (n "cstree_derive") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (d #t) (k 0)) (d (n "lasso") (r "^0.7") (f (quote ("inline-more"))) (o #t) (d #t) (k 0)) (d (n "m_lexer") (r "^0.0.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "sptr") (r "^0.3.2") (d #t) (k 0)) (d (n "text-size") (r "^1.1.0") (d #t) (k 0)) (d (n "triomphe") (r "^0.1.8") (f (quote ("stable_deref_trait" "std"))) (k 0)))) (h "15kdnrk7i6slk3by52i8q63crw6wixdlr5pk9xw2a82zcw3wpc41") (f (quote (("multi_threaded_interning" "lasso_compat" "lasso/multi-threaded") ("lasso_compat" "lasso") ("default")))) (s 2) (e (quote (("serialize" "serde" "lasso?/serialize" "triomphe/serde") ("derive" "dep:cstree_derive")))) (r "1.68")))

