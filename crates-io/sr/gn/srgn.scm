(define-module (crates-io sr gn srgn) #:use-module (crates-io))

(define-public crate-srgn-0.1.0 (c (n "srgn") (v "0.1.0") (d (list (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "clap") (r "^4.4.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.18.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "decompound") (r "^0.3.0") (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (d #t) (k 1)) (d (n "enum-iterator") (r "^1.4.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 1)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 2)) (d (n "nom-unicode") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_regex") (r "^0.16.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "unescape") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "unicode_titlecase") (r "^2.2.1") (d #t) (k 0)))) (h "1qr4gp7h0q161rbc1nmjxal4ih388ky6wm0482xddagskzalc0wv") (f (quote (("upper") ("titlecase") ("symbols") ("squeeze") ("replace") ("normalization") ("lower") ("german") ("deletion") ("default" "all") ("all" "deletion" "german" "lower" "normalization" "replace" "squeeze" "symbols" "titlecase" "upper"))))))

(define-public crate-srgn-0.2.0 (c (n "srgn") (v "0.2.0") (d (list (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "clap") (r "^4.4.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.18.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "decompound") (r "^0.3.0") (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (d #t) (k 1)) (d (n "enum-iterator") (r "^1.4.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 1)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 2)) (d (n "nom-unicode") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_regex") (r "^0.16.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "unescape") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "unicode_titlecase") (r "^2.2.1") (d #t) (k 0)))) (h "0l3k445lg129sqhd0bnbc7fa7w6w2v46r3apbargx8q3d8b154sn") (f (quote (("upper") ("titlecase") ("symbols") ("squeeze") ("replace") ("normalization") ("lower") ("german") ("deletion") ("default" "all") ("all" "deletion" "german" "lower" "normalization" "replace" "squeeze" "symbols" "titlecase" "upper"))))))

(define-public crate-srgn-0.3.0 (c (n "srgn") (v "0.3.0") (d (list (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "clap") (r "^4.4.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.18.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "decompound") (r "^0.3.0") (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (d #t) (k 1)) (d (n "enum-iterator") (r "^1.4.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 1)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 2)) (d (n "nom-unicode") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_regex") (r "^0.16.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "unescape") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "unicode_titlecase") (r "^2.2.1") (d #t) (k 0)))) (h "00qcx16b1mrqh5l60is395096ma75cn3m2iawzbxmak6yrh8bh6q") (f (quote (("upper") ("titlecase") ("symbols") ("squeeze") ("replace") ("normalization") ("lower") ("german") ("deletion") ("default" "all") ("all" "deletion" "german" "lower" "normalization" "replace" "squeeze" "symbols" "titlecase" "upper"))))))

(define-public crate-srgn-0.3.1 (c (n "srgn") (v "0.3.1") (d (list (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "clap") (r "^4.4.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.18.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "decompound") (r "^0.3.0") (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (d #t) (k 1)) (d (n "enum-iterator") (r "^1.4.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 1)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 2)) (d (n "nom-unicode") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_regex") (r "^0.16.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "unescape") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "unicode_titlecase") (r "^2.2.1") (d #t) (k 0)))) (h "1zwyrqf9l2ciy85d8sixxz5xsgsm9if16p7i7021g6y25ykx17xj") (f (quote (("upper") ("titlecase") ("symbols") ("squeeze") ("replace") ("normalization") ("lower") ("german") ("deletion") ("default" "all") ("all" "deletion" "german" "lower" "normalization" "replace" "squeeze" "symbols" "titlecase" "upper"))))))

(define-public crate-srgn-0.3.2 (c (n "srgn") (v "0.3.2") (d (list (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "clap") (r "^4.4.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.18.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "decompound") (r "^0.3.0") (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (d #t) (k 1)) (d (n "enum-iterator") (r "^1.4.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 1)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 2)) (d (n "nom-unicode") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_regex") (r "^0.16.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "unescape") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "unicode_titlecase") (r "^2.2.1") (d #t) (k 0)))) (h "0bqg7fwz11k1p7pp3v6x8lafdncz3pysq0gwrpa4d88dbrrddrna") (f (quote (("upper") ("titlecase") ("symbols") ("squeeze") ("replace") ("normalization") ("lower") ("german") ("deletion") ("default" "all") ("all" "deletion" "german" "lower" "normalization" "replace" "squeeze" "symbols" "titlecase" "upper"))))))

(define-public crate-srgn-0.4.2 (c (n "srgn") (v "0.4.2") (d (list (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "clap") (r "^4.4.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.18.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "decompound") (r "^0.3.0") (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (d #t) (k 1)) (d (n "enum-iterator") (r "^1.4.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 1)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 2)) (d (n "nom-unicode") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_regex") (r "^0.16.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "unescape") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "unicode_titlecase") (r "^2.2.1") (d #t) (k 0)))) (h "0a3vni3zjpbqlrxnsngvpdyvv1pjh0q3rpgqcpa15s9q18xh02i5") (f (quote (("upper") ("titlecase") ("symbols") ("squeeze") ("replace") ("normalization") ("lower") ("german") ("deletion") ("default" "all") ("all" "deletion" "german" "lower" "normalization" "replace" "squeeze" "symbols" "titlecase" "upper"))))))

(define-public crate-srgn-0.4.3 (c (n "srgn") (v "0.4.3") (d (list (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "clap") (r "^4.4.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.18.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "decompound") (r "^0.3.0") (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (d #t) (k 1)) (d (n "enum-iterator") (r "^1.4.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 1)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 2)) (d (n "nom-unicode") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_regex") (r "^0.16.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "unescape") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "unicode_titlecase") (r "^2.2.1") (d #t) (k 0)))) (h "0r7xi922pi2ddf0hm4bb6d0j37zczzhij41ilslhpk3li9ky60lb") (f (quote (("upper") ("titlecase") ("symbols") ("squeeze") ("replace") ("normalization") ("lower") ("german") ("deletion") ("default" "all") ("all" "deletion" "german" "lower" "normalization" "replace" "squeeze" "symbols" "titlecase" "upper"))))))

(define-public crate-srgn-0.4.4 (c (n "srgn") (v "0.4.4") (d (list (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "clap") (r "^4.4.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.18.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "decompound") (r "^0.3.0") (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (d #t) (k 1)) (d (n "enum-iterator") (r "^1.4.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 1)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 2)) (d (n "nom-unicode") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_regex") (r "^0.16.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "unescape") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "unicode_titlecase") (r "^2.2.1") (d #t) (k 0)))) (h "1h56jdyrrs3q588xfp73zh6zl4cvphjcmchy1m9p4vicz5762i4l") (f (quote (("upper") ("titlecase") ("symbols") ("squeeze") ("replace") ("normalization") ("lower") ("german") ("deletion") ("default" "all") ("all" "deletion" "german" "lower" "normalization" "replace" "squeeze" "symbols" "titlecase" "upper"))))))

(define-public crate-srgn-0.4.5 (c (n "srgn") (v "0.4.5") (d (list (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.83") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "clap") (r "^4.4.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.18.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "decompound") (r "^0.3.0") (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (d #t) (k 1)) (d (n "enum-iterator") (r "^1.4.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 1)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 2)) (d (n "nom-unicode") (r "^0.3.0") (d #t) (k 2)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_regex") (r "^0.16.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "unescape") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "unicode_titlecase") (r "^2.2.1") (d #t) (k 0)))) (h "0bk5sp4ayi0r9gqky3ii6wq5rwj59ppz42x13gfqfr6qzqdk0xpn") (f (quote (("upper") ("titlecase") ("symbols") ("squeeze") ("replace") ("normalization") ("lower") ("german") ("deletion") ("default" "all") ("all" "deletion" "german" "lower" "normalization" "replace" "squeeze" "symbols" "titlecase" "upper"))))))

(define-public crate-srgn-0.5.0 (c (n "srgn") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.18.0") (d #t) (k 2)) (d (n "decompound") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (d #t) (k 1)) (d (n "enum-iterator") (r "^1.4.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (o #t) (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 1)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 2)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_regex") (r "^0.16.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "unescape") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "unicode_titlecase") (r "^2.2.1") (d #t) (k 0)))) (h "1aljds4ha0l7zr6avamjsz1y85bmqwz2h57yv7kb58zdvva7a50k") (f (quote (("tarpaulin-incompatible") ("symbols") ("german" "cached" "decompound" "fst" "once_cell") ("default" "all" "tarpaulin-incompatible") ("all" "german" "symbols"))))))

(define-public crate-srgn-0.6.0 (c (n "srgn") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.18.0") (d #t) (k 2)) (d (n "decompound") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (d #t) (k 1)) (d (n "enum-iterator") (r "^1.4.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (o #t) (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 1)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 2)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_regex") (r "^0.16.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "unescape") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "unicode_titlecase") (r "^2.2.1") (d #t) (k 0)))) (h "19c6l381xl63q773k3wyrq92br69kqnnmh9gxmkak27h4pfjdblz") (f (quote (("tarpaulin-incompatible") ("symbols") ("german" "cached" "decompound" "fst" "once_cell") ("default" "all" "tarpaulin-incompatible") ("all" "german" "symbols"))))))

(define-public crate-srgn-0.7.0 (c (n "srgn") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.18.0") (d #t) (k 2)) (d (n "decompound") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (d #t) (k 1)) (d (n "enum-iterator") (r "^1.4.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (o #t) (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 1)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 2)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_regex") (r "^0.16.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "unescape") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "unicode_titlecase") (r "^2.2.1") (d #t) (k 0)))) (h "15s43x2nf0ql14hz4afv4v762hiw7rcis0f1wwqb8fyvgjhn2mg5") (f (quote (("tarpaulin-incompatible") ("symbols") ("german" "cached" "decompound" "fst" "once_cell") ("default" "all" "tarpaulin-incompatible") ("all" "german" "symbols"))))))

(define-public crate-srgn-0.8.0 (c (n "srgn") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.18.0") (d #t) (k 2)) (d (n "const_format") (r "^0.2.32") (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (d #t) (k 1)) (d (n "enum-iterator") (r "^1.4.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (o #t) (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 1)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 2)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_regex") (r "^0.16.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "unescape") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "unicode_titlecase") (r "^2.2.1") (d #t) (k 0)))) (h "0lb0blaf6b3adfwkwlb4b636h837f699i7zvxhhmwxilikvalcc4") (f (quote (("tarpaulin-incompatible") ("symbols") ("german" "cached" "decompound" "fst" "once_cell") ("default" "all" "tarpaulin-incompatible") ("all" "german" "symbols"))))))

(define-public crate-srgn-0.9.0 (c (n "srgn") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.18.0") (d #t) (k 2)) (d (n "const_format") (r "^0.2.32") (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (d #t) (k 1)) (d (n "enum-iterator") (r "^1.4.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (o #t) (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 1)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 2)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_regex") (r "^0.16.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "unescape") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "unicode_titlecase") (r "^2.2.1") (d #t) (k 0)))) (h "1f91cvc5nw85ka7hkw6y1i27if318p5aq5zlvf7ciky1bnwlvwk9") (f (quote (("tarpaulin-incompatible") ("symbols") ("german" "cached" "decompound" "fst" "once_cell") ("default" "all" "tarpaulin-incompatible") ("all" "german" "symbols"))))))

(define-public crate-srgn-0.10.0 (c (n "srgn") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.18.0") (d #t) (k 2)) (d (n "const_format") (r "^0.2.32") (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (d #t) (k 1)) (d (n "enum-iterator") (r "^1.4.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (o #t) (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 1)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 2)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_regex") (r "^0.16.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "unescape") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "unicode_titlecase") (r "^2.2.1") (d #t) (k 0)))) (h "13imxrhzv01dpa1mjxjkv5a8qgdzasmsymzbbi5gjaagzpi967g3") (f (quote (("tarpaulin-incompatible") ("symbols") ("german" "cached" "decompound" "fst" "once_cell") ("default" "all" "tarpaulin-incompatible") ("all" "german" "symbols"))))))

(define-public crate-srgn-0.10.1 (c (n "srgn") (v "0.10.1") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.18.0") (d #t) (k 2)) (d (n "const_format") (r "^0.2.32") (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (d #t) (k 1)) (d (n "enum-iterator") (r "^1.4.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (o #t) (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 1)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 2)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_regex") (r "^0.16.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "unescape") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "unicode_titlecase") (r "^2.2.1") (d #t) (k 0)))) (h "1w5d8rx0hjzxm9azxsikrcgkvkssml5vcal14mw3w994iwn7rhxd") (f (quote (("tarpaulin-incompatible") ("symbols") ("german" "cached" "decompound" "fst" "once_cell") ("default" "all" "tarpaulin-incompatible") ("all" "german" "symbols"))))))

(define-public crate-srgn-0.10.2 (c (n "srgn") (v "0.10.2") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.18.0") (d #t) (k 2)) (d (n "const_format") (r "^0.2.32") (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (d #t) (k 1)) (d (n "enum-iterator") (r "^1.4.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (o #t) (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 1)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 2)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_regex") (r "^0.16.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "unescape") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "unicode_titlecase") (r "^2.2.1") (d #t) (k 0)))) (h "1armjg2yp06cqjvxdw005hhwqinxskg6mps3wc22vl17h7j3rn8s") (f (quote (("tarpaulin-incompatible") ("symbols") ("german" "cached" "decompound" "fst" "once_cell") ("default" "all" "tarpaulin-incompatible") ("all" "german" "symbols"))))))

(define-public crate-srgn-0.11.0 (c (n "srgn") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.5.1") (d #t) (k 0)) (d (n "comrak") (r "^0.18.0") (d #t) (k 2)) (d (n "const_format") (r "^0.2.32") (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (d #t) (k 1)) (d (n "enum-iterator") (r "^1.4.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (o #t) (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 1)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 2)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_regex") (r "^0.16.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "unescape") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "unicode_titlecase") (r "^2.2.1") (d #t) (k 0)))) (h "0qb7mp6q54bbkvxj5xqvmzbkzaqpkcagh30r5771jsn4l893lwli") (f (quote (("symbols") ("german" "cached" "decompound" "fst" "once_cell") ("default" "all") ("all" "german" "symbols"))))))

(define-public crate-srgn-0.12.0 (c (n "srgn") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "cached") (r "^0.44.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.4.10") (d #t) (k 0)) (d (n "comrak") (r "^0.18.0") (d #t) (k 2)) (d (n "const_format") (r "^0.2.32") (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "decompound") (r "^0.3.0") (d #t) (k 1)) (d (n "enum-iterator") (r "^1.4.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11.0") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (o #t) (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 1)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 2)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_regex") (r "^0.16.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 1)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "titlecase") (r "^2.2.1") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.20.0") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "unescape") (r "^0.1.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "unicode_titlecase") (r "^2.2.1") (d #t) (k 0)))) (h "04nfd6414w24krnzsn8sgzyv7f6037dfslyx19xhjxfq9q6hdvpv") (f (quote (("symbols") ("german" "cached" "decompound" "fst" "once_cell") ("default" "all") ("all" "german" "symbols")))) (r "1.74.1")))

