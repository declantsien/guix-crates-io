(define-module (crates-io sr t- srt-protocol) #:use-module (crates-io))

(define-public crate-srt-protocol-0.1.0 (c (n "srt-protocol") (v "0.1.0") (d (list (d (n "aes-ctr") (r "^0.4") (d #t) (k 0)) (d (n "aes-soft") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "block-cipher") (r "^0.8") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hmac") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "pbkdf2") (r "^0.5") (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_distr") (r "^0.2") (d #t) (k 2)) (d (n "sha-1") (r "^0.9") (d #t) (k 0)) (d (n "streaming-stats") (r "^0.2.3") (d #t) (k 0)))) (h "1hhrprsh7qig641lxiprc28wnyyf7kbkld9fb1wpl6baj5rvvik4")))

(define-public crate-srt-protocol-0.2.0 (c (n "srt-protocol") (v "0.2.0") (d (list (d (n "aes-ctr") (r "^0.6") (d #t) (k 0)) (d (n "aes-soft") (r "^0.6") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cipher") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hmac") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "pbkdf2") (r "^0.6") (k 0)) (d (n "pretty_env_logger") (r "^0.4") (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "sha-1") (r "^0.9") (d #t) (k 0)) (d (n "streaming-stats") (r "^0.2.3") (d #t) (k 0)))) (h "16zyi070wpiwx86gbsidx0p9sl5b1vc66xbc3m4ia8i2hkff2lx6")))

(define-public crate-srt-protocol-0.3.0 (c (n "srt-protocol") (v "0.3.0") (d (list (d (n "aes") (r "^0.7.5") (f (quote ("ctr"))) (d #t) (k 0)) (d (n "array-init") (r "^2.0.0") (d #t) (k 0)) (d (n "arraydeque") (r "^0.4.5") (d #t) (k 0)) (d (n "assert_matches") (r "^1.0.0") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cipher") (r "^0.3.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.0") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.4.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "pbkdf2") (r "^0.10.0") (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.2") (d #t) (k 2)) (d (n "sha-1") (r "^0.10.0") (d #t) (k 0)) (d (n "streaming-stats") (r "^0.2.3") (d #t) (k 0)) (d (n "take-until") (r "^0.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "url") (r "=2.1.0") (d #t) (k 0)))) (h "10sim8ylwzxk3qasa0293qx04ay1k1nhigzqb4y7w5yr085fn8vc") (f (quote (("log_disable" "log/max_level_off") ("default"))))))

(define-public crate-srt-protocol-0.4.0 (c (n "srt-protocol") (v "0.4.0") (d (list (d (n "aes") (r "^0.8") (d #t) (k 0)) (d (n "array-init") (r "^2.0.0") (d #t) (k 0)) (d (n "arraydeque") (r "^0.5.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.0.0") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cipher") (r "^0.4.0") (d #t) (k 0)) (d (n "ctr") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.0") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.4.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "pbkdf2") (r "^0.12.1") (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.2") (d #t) (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (d #t) (k 0)) (d (n "streaming-stats") (r "^0.2.3") (d #t) (k 0)) (d (n "take-until") (r "^0.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0k3ywz16i4df8hcyvllschw5rq06kyzan2la9rw6a071hi54zwmc") (f (quote (("log_disable" "log/max_level_off") ("default")))) (y #t)))

(define-public crate-srt-protocol-0.4.1 (c (n "srt-protocol") (v "0.4.1") (d (list (d (n "aes") (r "^0.8") (d #t) (k 0)) (d (n "array-init") (r "^2.0.0") (d #t) (k 0)) (d (n "arraydeque") (r "^0.5.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.0.0") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cipher") (r "^0.4.0") (d #t) (k 0)) (d (n "ctr") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.0") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.4.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "pbkdf2") (r "^0.12.1") (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.2") (d #t) (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (d #t) (k 0)) (d (n "streaming-stats") (r "^0.2.3") (d #t) (k 0)) (d (n "take-until") (r "^0.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1y5gvj6hz0zfqilanh3bv3mjrwlmn4casa4cqjcg03sshvwax4dk") (f (quote (("log_disable" "log/max_level_off") ("default"))))))

(define-public crate-srt-protocol-0.4.2 (c (n "srt-protocol") (v "0.4.2") (d (list (d (n "aes") (r "^0.8") (d #t) (k 0)) (d (n "array-init") (r "^2.0.0") (d #t) (k 0)) (d (n "arraydeque") (r "^0.5.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.0.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.0.2") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cipher") (r "^0.4.0") (d #t) (k 0)) (d (n "ctr") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.0") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.4.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "pbkdf2") (r "^0.12.1") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5.0") (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.2") (d #t) (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (d #t) (k 0)) (d (n "streaming-stats") (r "^0.2.3") (d #t) (k 0)) (d (n "take-until") (r "^0.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0p2n4qf0rxpapjb8mg4cicw1ryadvidiw8i4nrqfflylrqgljpzc") (f (quote (("log_disable" "log/max_level_off") ("default"))))))

(define-public crate-srt-protocol-0.4.3 (c (n "srt-protocol") (v "0.4.3") (d (list (d (n "aes") (r "^0.8") (d #t) (k 0)) (d (n "array-init") (r "^2.0.0") (d #t) (k 0)) (d (n "arraydeque") (r "^0.5.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.0.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.0.2") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cipher") (r "^0.4.0") (d #t) (k 0)) (d (n "ctr") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.0") (d #t) (k 0)) (d (n "keyed_priority_queue") (r "^0.4.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "pbkdf2") (r "^0.12.1") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5.0") (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (d #t) (k 0)) (d (n "streaming-stats") (r "^0.2.3") (d #t) (k 0)) (d (n "take-until") (r "^0.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "19sy6dsy32mas4pglp5a66a9ccbx0ygg9nklvyd3jmmxbpvnj6nv") (f (quote (("log_disable" "log/max_level_off") ("default"))))))

